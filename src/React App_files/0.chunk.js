(this["webpackJsonplow-energy-transfer"] = this["webpackJsonplow-energy-transfer"] || []).push([[0],{

/***/ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js":
/*!***************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/arrayWithHoles.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

module.exports = _arrayWithHoles;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _iterableToArrayLimit(arr, i) {
  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === "[object Arguments]")) {
    return;
  }

  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

module.exports = _iterableToArrayLimit;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/nonIterableRest.js":
/*!****************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/nonIterableRest.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

module.exports = _nonIterableRest;

/***/ }),

/***/ "./node_modules/@babel/runtime/helpers/slicedToArray.js":
/*!**************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/slicedToArray.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var arrayWithHoles = __webpack_require__(/*! ./arrayWithHoles */ "./node_modules/@babel/runtime/helpers/arrayWithHoles.js");

var iterableToArrayLimit = __webpack_require__(/*! ./iterableToArrayLimit */ "./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js");

var nonIterableRest = __webpack_require__(/*! ./nonIterableRest */ "./node_modules/@babel/runtime/helpers/nonIterableRest.js");

function _slicedToArray(arr, i) {
  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();
}

module.exports = _slicedToArray;

/***/ }),

/***/ "./node_modules/ansi-styles/index.js":
/*!*******************************************!*\
  !*** ./node_modules/ansi-styles/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(module) {

const colorConvert = __webpack_require__(/*! color-convert */ "./node_modules/color-convert/index.js");

const wrapAnsi16 = (fn, offset) => function () {
  const code = fn.apply(colorConvert, arguments);
  return "\x1B[".concat(code + offset, "m");
};

const wrapAnsi256 = (fn, offset) => function () {
  const code = fn.apply(colorConvert, arguments);
  return "\x1B[".concat(38 + offset, ";5;").concat(code, "m");
};

const wrapAnsi16m = (fn, offset) => function () {
  const rgb = fn.apply(colorConvert, arguments);
  return "\x1B[".concat(38 + offset, ";2;").concat(rgb[0], ";").concat(rgb[1], ";").concat(rgb[2], "m");
};

function assembleStyles() {
  const codes = new Map();
  const styles = {
    modifier: {
      reset: [0, 0],
      // 21 isn't widely supported and 22 does the same thing
      bold: [1, 22],
      dim: [2, 22],
      italic: [3, 23],
      underline: [4, 24],
      inverse: [7, 27],
      hidden: [8, 28],
      strikethrough: [9, 29]
    },
    color: {
      black: [30, 39],
      red: [31, 39],
      green: [32, 39],
      yellow: [33, 39],
      blue: [34, 39],
      magenta: [35, 39],
      cyan: [36, 39],
      white: [37, 39],
      gray: [90, 39],
      // Bright color
      redBright: [91, 39],
      greenBright: [92, 39],
      yellowBright: [93, 39],
      blueBright: [94, 39],
      magentaBright: [95, 39],
      cyanBright: [96, 39],
      whiteBright: [97, 39]
    },
    bgColor: {
      bgBlack: [40, 49],
      bgRed: [41, 49],
      bgGreen: [42, 49],
      bgYellow: [43, 49],
      bgBlue: [44, 49],
      bgMagenta: [45, 49],
      bgCyan: [46, 49],
      bgWhite: [47, 49],
      // Bright color
      bgBlackBright: [100, 49],
      bgRedBright: [101, 49],
      bgGreenBright: [102, 49],
      bgYellowBright: [103, 49],
      bgBlueBright: [104, 49],
      bgMagentaBright: [105, 49],
      bgCyanBright: [106, 49],
      bgWhiteBright: [107, 49]
    }
  }; // Fix humans

  styles.color.grey = styles.color.gray;

  for (const groupName of Object.keys(styles)) {
    const group = styles[groupName];

    for (const styleName of Object.keys(group)) {
      const style = group[styleName];
      styles[styleName] = {
        open: "\x1B[".concat(style[0], "m"),
        close: "\x1B[".concat(style[1], "m")
      };
      group[styleName] = styles[styleName];
      codes.set(style[0], style[1]);
    }

    Object.defineProperty(styles, groupName, {
      value: group,
      enumerable: false
    });
    Object.defineProperty(styles, 'codes', {
      value: codes,
      enumerable: false
    });
  }

  const ansi2ansi = n => n;

  const rgb2rgb = (r, g, b) => [r, g, b];

  styles.color.close = '\u001B[39m';
  styles.bgColor.close = '\u001B[49m';
  styles.color.ansi = {
    ansi: wrapAnsi16(ansi2ansi, 0)
  };
  styles.color.ansi256 = {
    ansi256: wrapAnsi256(ansi2ansi, 0)
  };
  styles.color.ansi16m = {
    rgb: wrapAnsi16m(rgb2rgb, 0)
  };
  styles.bgColor.ansi = {
    ansi: wrapAnsi16(ansi2ansi, 10)
  };
  styles.bgColor.ansi256 = {
    ansi256: wrapAnsi256(ansi2ansi, 10)
  };
  styles.bgColor.ansi16m = {
    rgb: wrapAnsi16m(rgb2rgb, 10)
  };

  for (let key of Object.keys(colorConvert)) {
    if (typeof colorConvert[key] !== 'object') {
      continue;
    }

    const suite = colorConvert[key];

    if (key === 'ansi16') {
      key = 'ansi';
    }

    if ('ansi16' in suite) {
      styles.color.ansi[key] = wrapAnsi16(suite.ansi16, 0);
      styles.bgColor.ansi[key] = wrapAnsi16(suite.ansi16, 10);
    }

    if ('ansi256' in suite) {
      styles.color.ansi256[key] = wrapAnsi256(suite.ansi256, 0);
      styles.bgColor.ansi256[key] = wrapAnsi256(suite.ansi256, 10);
    }

    if ('rgb' in suite) {
      styles.color.ansi16m[key] = wrapAnsi16m(suite.rgb, 0);
      styles.bgColor.ansi16m[key] = wrapAnsi16m(suite.rgb, 10);
    }
  }

  return styles;
} // Make the export immutable


Object.defineProperty(module, 'exports', {
  enumerable: true,
  get: assembleStyles
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/chalk/index.js":
/*!*************************************!*\
  !*** ./node_modules/chalk/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

const escapeStringRegexp = __webpack_require__(/*! escape-string-regexp */ "./node_modules/escape-string-regexp/index.js");

const ansiStyles = __webpack_require__(/*! ansi-styles */ "./node_modules/ansi-styles/index.js");

const stdoutColor = __webpack_require__(/*! supports-color */ "./node_modules/supports-color/browser.js").stdout;

const template = __webpack_require__(/*! ./templates.js */ "./node_modules/chalk/templates.js");

const isSimpleWindowsTerm = process.platform === 'win32' && !(Object({"NODE_ENV":"development","PUBLIC_URL":""}).TERM || '').toLowerCase().startsWith('xterm'); // `supportsColor.level` → `ansiStyles.color[name]` mapping

const levelMapping = ['ansi', 'ansi', 'ansi256', 'ansi16m']; // `color-convert` models to exclude from the Chalk API due to conflicts and such

const skipModels = new Set(['gray']);
const styles = Object.create(null);

function applyOptions(obj, options) {
  options = options || {}; // Detect level if not set manually

  const scLevel = stdoutColor ? stdoutColor.level : 0;
  obj.level = options.level === undefined ? scLevel : options.level;
  obj.enabled = 'enabled' in options ? options.enabled : obj.level > 0;
}

function Chalk(options) {
  // We check for this.template here since calling `chalk.constructor()`
  // by itself will have a `this` of a previously constructed chalk object
  if (!this || !(this instanceof Chalk) || this.template) {
    const chalk = {};
    applyOptions(chalk, options);

    chalk.template = function () {
      const args = [].slice.call(arguments);
      return chalkTag.apply(null, [chalk.template].concat(args));
    };

    Object.setPrototypeOf(chalk, Chalk.prototype);
    Object.setPrototypeOf(chalk.template, chalk);
    chalk.template.constructor = Chalk;
    return chalk.template;
  }

  applyOptions(this, options);
} // Use bright blue on Windows as the normal blue color is illegible


if (isSimpleWindowsTerm) {
  ansiStyles.blue.open = '\u001B[94m';
}

for (const key of Object.keys(ansiStyles)) {
  ansiStyles[key].closeRe = new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');
  styles[key] = {
    get() {
      const codes = ansiStyles[key];
      return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, key);
    }

  };
}

styles.visible = {
  get() {
    return build.call(this, this._styles || [], true, 'visible');
  }

};
ansiStyles.color.closeRe = new RegExp(escapeStringRegexp(ansiStyles.color.close), 'g');

for (const model of Object.keys(ansiStyles.color.ansi)) {
  if (skipModels.has(model)) {
    continue;
  }

  styles[model] = {
    get() {
      const level = this.level;
      return function () {
        const open = ansiStyles.color[levelMapping[level]][model].apply(null, arguments);
        const codes = {
          open,
          close: ansiStyles.color.close,
          closeRe: ansiStyles.color.closeRe
        };
        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
      };
    }

  };
}

ansiStyles.bgColor.closeRe = new RegExp(escapeStringRegexp(ansiStyles.bgColor.close), 'g');

for (const model of Object.keys(ansiStyles.bgColor.ansi)) {
  if (skipModels.has(model)) {
    continue;
  }

  const bgModel = 'bg' + model[0].toUpperCase() + model.slice(1);
  styles[bgModel] = {
    get() {
      const level = this.level;
      return function () {
        const open = ansiStyles.bgColor[levelMapping[level]][model].apply(null, arguments);
        const codes = {
          open,
          close: ansiStyles.bgColor.close,
          closeRe: ansiStyles.bgColor.closeRe
        };
        return build.call(this, this._styles ? this._styles.concat(codes) : [codes], this._empty, model);
      };
    }

  };
}

const proto = Object.defineProperties(() => {}, styles);

function build(_styles, _empty, key) {
  const builder = function () {
    return applyStyle.apply(builder, arguments);
  };

  builder._styles = _styles;
  builder._empty = _empty;
  const self = this;
  Object.defineProperty(builder, 'level', {
    enumerable: true,

    get() {
      return self.level;
    },

    set(level) {
      self.level = level;
    }

  });
  Object.defineProperty(builder, 'enabled', {
    enumerable: true,

    get() {
      return self.enabled;
    },

    set(enabled) {
      self.enabled = enabled;
    }

  }); // See below for fix regarding invisible grey/dim combination on Windows

  builder.hasGrey = this.hasGrey || key === 'gray' || key === 'grey'; // `__proto__` is used because we must return a function, but there is
  // no way to create a function with a different prototype

  builder.__proto__ = proto; // eslint-disable-line no-proto

  return builder;
}

function applyStyle() {
  // Support varags, but simply cast to string in case there's only one arg
  const args = arguments;
  const argsLen = args.length;
  let str = String(arguments[0]);

  if (argsLen === 0) {
    return '';
  }

  if (argsLen > 1) {
    // Don't slice `arguments`, it prevents V8 optimizations
    for (let a = 1; a < argsLen; a++) {
      str += ' ' + args[a];
    }
  }

  if (!this.enabled || this.level <= 0 || !str) {
    return this._empty ? '' : str;
  } // Turns out that on Windows dimmed gray text becomes invisible in cmd.exe,
  // see https://github.com/chalk/chalk/issues/58
  // If we're on Windows and we're dealing with a gray color, temporarily make 'dim' a noop.


  const originalDim = ansiStyles.dim.open;

  if (isSimpleWindowsTerm && this.hasGrey) {
    ansiStyles.dim.open = '';
  }

  for (const code of this._styles.slice().reverse()) {
    // Replace any instances already present with a re-opening code
    // otherwise only the part of the string until said closing code
    // will be colored, and the rest will simply be 'plain'.
    str = code.open + str.replace(code.closeRe, code.open) + code.close; // Close the styling before a linebreak and reopen
    // after next line to fix a bleed issue on macOS
    // https://github.com/chalk/chalk/pull/92

    str = str.replace(/\r?\n/g, "".concat(code.close, "$&").concat(code.open));
  } // Reset the original `dim` if we changed it to work around the Windows dimmed gray issue


  ansiStyles.dim.open = originalDim;
  return str;
}

function chalkTag(chalk, strings) {
  if (!Array.isArray(strings)) {
    // If chalk() was called by itself or with a string,
    // return the string itself as a string.
    return [].slice.call(arguments, 1).join(' ');
  }

  const args = [].slice.call(arguments, 2);
  const parts = [strings.raw[0]];

  for (let i = 1; i < strings.length; i++) {
    parts.push(String(args[i - 1]).replace(/[{}\\]/g, '\\$&'));
    parts.push(String(strings.raw[i]));
  }

  return template(chalk, parts.join(''));
}

Object.defineProperties(Chalk.prototype, styles);
module.exports = Chalk(); // eslint-disable-line new-cap

module.exports.supportsColor = stdoutColor;
module.exports.default = module.exports; // For TypeScript
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/chalk/templates.js":
/*!*****************************************!*\
  !*** ./node_modules/chalk/templates.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const TEMPLATE_REGEX = /(?:\\(u[a-f\d]{4}|x[a-f\d]{2}|.))|(?:\{(~)?(\w+(?:\([^)]*\))?(?:\.\w+(?:\([^)]*\))?)*)(?:[ \t]|(?=\r?\n)))|(\})|((?:.|[\r\n\f])+?)/gi;
const STYLE_REGEX = /(?:^|\.)(\w+)(?:\(([^)]*)\))?/g;
const STRING_REGEX = /^(['"])((?:\\.|(?!\1)[^\\])*)\1$/;
const ESCAPE_REGEX = /\\(u[a-f\d]{4}|x[a-f\d]{2}|.)|([^\\])/gi;
const ESCAPES = new Map([['n', '\n'], ['r', '\r'], ['t', '\t'], ['b', '\b'], ['f', '\f'], ['v', '\v'], ['0', '\0'], ['\\', '\\'], ['e', '\u001B'], ['a', '\u0007']]);

function unescape(c) {
  if (c[0] === 'u' && c.length === 5 || c[0] === 'x' && c.length === 3) {
    return String.fromCharCode(parseInt(c.slice(1), 16));
  }

  return ESCAPES.get(c) || c;
}

function parseArguments(name, args) {
  const results = [];
  const chunks = args.trim().split(/\s*,\s*/g);
  let matches;

  for (const chunk of chunks) {
    if (!isNaN(chunk)) {
      results.push(Number(chunk));
    } else if (matches = chunk.match(STRING_REGEX)) {
      results.push(matches[2].replace(ESCAPE_REGEX, (m, escape, chr) => escape ? unescape(escape) : chr));
    } else {
      throw new Error("Invalid Chalk template style argument: ".concat(chunk, " (in style '").concat(name, "')"));
    }
  }

  return results;
}

function parseStyle(style) {
  STYLE_REGEX.lastIndex = 0;
  const results = [];
  let matches;

  while ((matches = STYLE_REGEX.exec(style)) !== null) {
    const name = matches[1];

    if (matches[2]) {
      const args = parseArguments(name, matches[2]);
      results.push([name].concat(args));
    } else {
      results.push([name]);
    }
  }

  return results;
}

function buildStyle(chalk, styles) {
  const enabled = {};

  for (const layer of styles) {
    for (const style of layer.styles) {
      enabled[style[0]] = layer.inverse ? null : style.slice(1);
    }
  }

  let current = chalk;

  for (const styleName of Object.keys(enabled)) {
    if (Array.isArray(enabled[styleName])) {
      if (!(styleName in current)) {
        throw new Error("Unknown Chalk style: ".concat(styleName));
      }

      if (enabled[styleName].length > 0) {
        current = current[styleName].apply(current, enabled[styleName]);
      } else {
        current = current[styleName];
      }
    }
  }

  return current;
}

module.exports = (chalk, tmp) => {
  const styles = [];
  const chunks = [];
  let chunk = []; // eslint-disable-next-line max-params

  tmp.replace(TEMPLATE_REGEX, (m, escapeChar, inverse, style, close, chr) => {
    if (escapeChar) {
      chunk.push(unescape(escapeChar));
    } else if (style) {
      const str = chunk.join('');
      chunk = [];
      chunks.push(styles.length === 0 ? str : buildStyle(chalk, styles)(str));
      styles.push({
        inverse,
        styles: parseStyle(style)
      });
    } else if (close) {
      if (styles.length === 0) {
        throw new Error('Found extraneous } in Chalk template literal');
      }

      chunks.push(buildStyle(chalk, styles)(chunk.join('')));
      chunk = [];
      styles.pop();
    } else {
      chunk.push(chr);
    }
  });
  chunks.push(chunk.join(''));

  if (styles.length > 0) {
    const errMsg = "Chalk template literal is missing ".concat(styles.length, " closing bracket").concat(styles.length === 1 ? '' : 's', " (`}`)");
    throw new Error(errMsg);
  }

  return chunks.join('');
};

/***/ }),

/***/ "./node_modules/color-convert/conversions.js":
/*!***************************************************!*\
  !*** ./node_modules/color-convert/conversions.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* MIT license */
var cssKeywords = __webpack_require__(/*! color-name */ "./node_modules/color-name/index.js"); // NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)


var reverseKeywords = {};

for (var key in cssKeywords) {
  if (cssKeywords.hasOwnProperty(key)) {
    reverseKeywords[cssKeywords[key]] = key;
  }
}

var convert = module.exports = {
  rgb: {
    channels: 3,
    labels: 'rgb'
  },
  hsl: {
    channels: 3,
    labels: 'hsl'
  },
  hsv: {
    channels: 3,
    labels: 'hsv'
  },
  hwb: {
    channels: 3,
    labels: 'hwb'
  },
  cmyk: {
    channels: 4,
    labels: 'cmyk'
  },
  xyz: {
    channels: 3,
    labels: 'xyz'
  },
  lab: {
    channels: 3,
    labels: 'lab'
  },
  lch: {
    channels: 3,
    labels: 'lch'
  },
  hex: {
    channels: 1,
    labels: ['hex']
  },
  keyword: {
    channels: 1,
    labels: ['keyword']
  },
  ansi16: {
    channels: 1,
    labels: ['ansi16']
  },
  ansi256: {
    channels: 1,
    labels: ['ansi256']
  },
  hcg: {
    channels: 3,
    labels: ['h', 'c', 'g']
  },
  apple: {
    channels: 3,
    labels: ['r16', 'g16', 'b16']
  },
  gray: {
    channels: 1,
    labels: ['gray']
  }
}; // hide .channels and .labels properties

for (var model in convert) {
  if (convert.hasOwnProperty(model)) {
    if (!('channels' in convert[model])) {
      throw new Error('missing channels property: ' + model);
    }

    if (!('labels' in convert[model])) {
      throw new Error('missing channel labels property: ' + model);
    }

    if (convert[model].labels.length !== convert[model].channels) {
      throw new Error('channel and label counts mismatch: ' + model);
    }

    var channels = convert[model].channels;
    var labels = convert[model].labels;
    delete convert[model].channels;
    delete convert[model].labels;
    Object.defineProperty(convert[model], 'channels', {
      value: channels
    });
    Object.defineProperty(convert[model], 'labels', {
      value: labels
    });
  }
}

convert.rgb.hsl = function (rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var min = Math.min(r, g, b);
  var max = Math.max(r, g, b);
  var delta = max - min;
  var h;
  var s;
  var l;

  if (max === min) {
    h = 0;
  } else if (r === max) {
    h = (g - b) / delta;
  } else if (g === max) {
    h = 2 + (b - r) / delta;
  } else if (b === max) {
    h = 4 + (r - g) / delta;
  }

  h = Math.min(h * 60, 360);

  if (h < 0) {
    h += 360;
  }

  l = (min + max) / 2;

  if (max === min) {
    s = 0;
  } else if (l <= 0.5) {
    s = delta / (max + min);
  } else {
    s = delta / (2 - max - min);
  }

  return [h, s * 100, l * 100];
};

convert.rgb.hsv = function (rgb) {
  var rdif;
  var gdif;
  var bdif;
  var h;
  var s;
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var v = Math.max(r, g, b);
  var diff = v - Math.min(r, g, b);

  var diffc = function (c) {
    return (v - c) / 6 / diff + 1 / 2;
  };

  if (diff === 0) {
    h = s = 0;
  } else {
    s = diff / v;
    rdif = diffc(r);
    gdif = diffc(g);
    bdif = diffc(b);

    if (r === v) {
      h = bdif - gdif;
    } else if (g === v) {
      h = 1 / 3 + rdif - bdif;
    } else if (b === v) {
      h = 2 / 3 + gdif - rdif;
    }

    if (h < 0) {
      h += 1;
    } else if (h > 1) {
      h -= 1;
    }
  }

  return [h * 360, s * 100, v * 100];
};

convert.rgb.hwb = function (rgb) {
  var r = rgb[0];
  var g = rgb[1];
  var b = rgb[2];
  var h = convert.rgb.hsl(rgb)[0];
  var w = 1 / 255 * Math.min(r, Math.min(g, b));
  b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
  return [h, w * 100, b * 100];
};

convert.rgb.cmyk = function (rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var c;
  var m;
  var y;
  var k;
  k = Math.min(1 - r, 1 - g, 1 - b);
  c = (1 - r - k) / (1 - k) || 0;
  m = (1 - g - k) / (1 - k) || 0;
  y = (1 - b - k) / (1 - k) || 0;
  return [c * 100, m * 100, y * 100, k * 100];
};
/**
 * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
 * */


function comparativeDistance(x, y) {
  return Math.pow(x[0] - y[0], 2) + Math.pow(x[1] - y[1], 2) + Math.pow(x[2] - y[2], 2);
}

convert.rgb.keyword = function (rgb) {
  var reversed = reverseKeywords[rgb];

  if (reversed) {
    return reversed;
  }

  var currentClosestDistance = Infinity;
  var currentClosestKeyword;

  for (var keyword in cssKeywords) {
    if (cssKeywords.hasOwnProperty(keyword)) {
      var value = cssKeywords[keyword]; // Compute comparative distance

      var distance = comparativeDistance(rgb, value); // Check if its less, if so set as closest

      if (distance < currentClosestDistance) {
        currentClosestDistance = distance;
        currentClosestKeyword = keyword;
      }
    }
  }

  return currentClosestKeyword;
};

convert.keyword.rgb = function (keyword) {
  return cssKeywords[keyword];
};

convert.rgb.xyz = function (rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255; // assume sRGB

  r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;
  g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;
  b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;
  var x = r * 0.4124 + g * 0.3576 + b * 0.1805;
  var y = r * 0.2126 + g * 0.7152 + b * 0.0722;
  var z = r * 0.0193 + g * 0.1192 + b * 0.9505;
  return [x * 100, y * 100, z * 100];
};

convert.rgb.lab = function (rgb) {
  var xyz = convert.rgb.xyz(rgb);
  var x = xyz[0];
  var y = xyz[1];
  var z = xyz[2];
  var l;
  var a;
  var b;
  x /= 95.047;
  y /= 100;
  z /= 108.883;
  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
  l = 116 * y - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);
  return [l, a, b];
};

convert.hsl.rgb = function (hsl) {
  var h = hsl[0] / 360;
  var s = hsl[1] / 100;
  var l = hsl[2] / 100;
  var t1;
  var t2;
  var t3;
  var rgb;
  var val;

  if (s === 0) {
    val = l * 255;
    return [val, val, val];
  }

  if (l < 0.5) {
    t2 = l * (1 + s);
  } else {
    t2 = l + s - l * s;
  }

  t1 = 2 * l - t2;
  rgb = [0, 0, 0];

  for (var i = 0; i < 3; i++) {
    t3 = h + 1 / 3 * -(i - 1);

    if (t3 < 0) {
      t3++;
    }

    if (t3 > 1) {
      t3--;
    }

    if (6 * t3 < 1) {
      val = t1 + (t2 - t1) * 6 * t3;
    } else if (2 * t3 < 1) {
      val = t2;
    } else if (3 * t3 < 2) {
      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
    } else {
      val = t1;
    }

    rgb[i] = val * 255;
  }

  return rgb;
};

convert.hsl.hsv = function (hsl) {
  var h = hsl[0];
  var s = hsl[1] / 100;
  var l = hsl[2] / 100;
  var smin = s;
  var lmin = Math.max(l, 0.01);
  var sv;
  var v;
  l *= 2;
  s *= l <= 1 ? l : 2 - l;
  smin *= lmin <= 1 ? lmin : 2 - lmin;
  v = (l + s) / 2;
  sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
  return [h, sv * 100, v * 100];
};

convert.hsv.rgb = function (hsv) {
  var h = hsv[0] / 60;
  var s = hsv[1] / 100;
  var v = hsv[2] / 100;
  var hi = Math.floor(h) % 6;
  var f = h - Math.floor(h);
  var p = 255 * v * (1 - s);
  var q = 255 * v * (1 - s * f);
  var t = 255 * v * (1 - s * (1 - f));
  v *= 255;

  switch (hi) {
    case 0:
      return [v, t, p];

    case 1:
      return [q, v, p];

    case 2:
      return [p, v, t];

    case 3:
      return [p, q, v];

    case 4:
      return [t, p, v];

    case 5:
      return [v, p, q];
  }
};

convert.hsv.hsl = function (hsv) {
  var h = hsv[0];
  var s = hsv[1] / 100;
  var v = hsv[2] / 100;
  var vmin = Math.max(v, 0.01);
  var lmin;
  var sl;
  var l;
  l = (2 - s) * v;
  lmin = (2 - s) * vmin;
  sl = s * vmin;
  sl /= lmin <= 1 ? lmin : 2 - lmin;
  sl = sl || 0;
  l /= 2;
  return [h, sl * 100, l * 100];
}; // http://dev.w3.org/csswg/css-color/#hwb-to-rgb


convert.hwb.rgb = function (hwb) {
  var h = hwb[0] / 360;
  var wh = hwb[1] / 100;
  var bl = hwb[2] / 100;
  var ratio = wh + bl;
  var i;
  var v;
  var f;
  var n; // wh + bl cant be > 1

  if (ratio > 1) {
    wh /= ratio;
    bl /= ratio;
  }

  i = Math.floor(6 * h);
  v = 1 - bl;
  f = 6 * h - i;

  if ((i & 0x01) !== 0) {
    f = 1 - f;
  }

  n = wh + f * (v - wh); // linear interpolation

  var r;
  var g;
  var b;

  switch (i) {
    default:
    case 6:
    case 0:
      r = v;
      g = n;
      b = wh;
      break;

    case 1:
      r = n;
      g = v;
      b = wh;
      break;

    case 2:
      r = wh;
      g = v;
      b = n;
      break;

    case 3:
      r = wh;
      g = n;
      b = v;
      break;

    case 4:
      r = n;
      g = wh;
      b = v;
      break;

    case 5:
      r = v;
      g = wh;
      b = n;
      break;
  }

  return [r * 255, g * 255, b * 255];
};

convert.cmyk.rgb = function (cmyk) {
  var c = cmyk[0] / 100;
  var m = cmyk[1] / 100;
  var y = cmyk[2] / 100;
  var k = cmyk[3] / 100;
  var r;
  var g;
  var b;
  r = 1 - Math.min(1, c * (1 - k) + k);
  g = 1 - Math.min(1, m * (1 - k) + k);
  b = 1 - Math.min(1, y * (1 - k) + k);
  return [r * 255, g * 255, b * 255];
};

convert.xyz.rgb = function (xyz) {
  var x = xyz[0] / 100;
  var y = xyz[1] / 100;
  var z = xyz[2] / 100;
  var r;
  var g;
  var b;
  r = x * 3.2406 + y * -1.5372 + z * -0.4986;
  g = x * -0.9689 + y * 1.8758 + z * 0.0415;
  b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB

  r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r * 12.92;
  g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g * 12.92;
  b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b * 12.92;
  r = Math.min(Math.max(0, r), 1);
  g = Math.min(Math.max(0, g), 1);
  b = Math.min(Math.max(0, b), 1);
  return [r * 255, g * 255, b * 255];
};

convert.xyz.lab = function (xyz) {
  var x = xyz[0];
  var y = xyz[1];
  var z = xyz[2];
  var l;
  var a;
  var b;
  x /= 95.047;
  y /= 100;
  z /= 108.883;
  x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;
  y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;
  z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;
  l = 116 * y - 16;
  a = 500 * (x - y);
  b = 200 * (y - z);
  return [l, a, b];
};

convert.lab.xyz = function (lab) {
  var l = lab[0];
  var a = lab[1];
  var b = lab[2];
  var x;
  var y;
  var z;
  y = (l + 16) / 116;
  x = a / 500 + y;
  z = y - b / 200;
  var y2 = Math.pow(y, 3);
  var x2 = Math.pow(x, 3);
  var z2 = Math.pow(z, 3);
  y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
  x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
  z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
  x *= 95.047;
  y *= 100;
  z *= 108.883;
  return [x, y, z];
};

convert.lab.lch = function (lab) {
  var l = lab[0];
  var a = lab[1];
  var b = lab[2];
  var hr;
  var h;
  var c;
  hr = Math.atan2(b, a);
  h = hr * 360 / 2 / Math.PI;

  if (h < 0) {
    h += 360;
  }

  c = Math.sqrt(a * a + b * b);
  return [l, c, h];
};

convert.lch.lab = function (lch) {
  var l = lch[0];
  var c = lch[1];
  var h = lch[2];
  var a;
  var b;
  var hr;
  hr = h / 360 * 2 * Math.PI;
  a = c * Math.cos(hr);
  b = c * Math.sin(hr);
  return [l, a, b];
};

convert.rgb.ansi16 = function (args) {
  var r = args[0];
  var g = args[1];
  var b = args[2];
  var value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization

  value = Math.round(value / 50);

  if (value === 0) {
    return 30;
  }

  var ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));

  if (value === 2) {
    ansi += 60;
  }

  return ansi;
};

convert.hsv.ansi16 = function (args) {
  // optimization here; we already know the value and don't need to get
  // it converted for us.
  return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};

convert.rgb.ansi256 = function (args) {
  var r = args[0];
  var g = args[1];
  var b = args[2]; // we use the extended greyscale palette here, with the exception of
  // black and white. normal palette only has 4 greyscale shades.

  if (r === g && g === b) {
    if (r < 8) {
      return 16;
    }

    if (r > 248) {
      return 231;
    }

    return Math.round((r - 8) / 247 * 24) + 232;
  }

  var ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
  return ansi;
};

convert.ansi16.rgb = function (args) {
  var color = args % 10; // handle greyscale

  if (color === 0 || color === 7) {
    if (args > 50) {
      color += 3.5;
    }

    color = color / 10.5 * 255;
    return [color, color, color];
  }

  var mult = (~~(args > 50) + 1) * 0.5;
  var r = (color & 1) * mult * 255;
  var g = (color >> 1 & 1) * mult * 255;
  var b = (color >> 2 & 1) * mult * 255;
  return [r, g, b];
};

convert.ansi256.rgb = function (args) {
  // handle greyscale
  if (args >= 232) {
    var c = (args - 232) * 10 + 8;
    return [c, c, c];
  }

  args -= 16;
  var rem;
  var r = Math.floor(args / 36) / 5 * 255;
  var g = Math.floor((rem = args % 36) / 6) / 5 * 255;
  var b = rem % 6 / 5 * 255;
  return [r, g, b];
};

convert.rgb.hex = function (args) {
  var integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);
  var string = integer.toString(16).toUpperCase();
  return '000000'.substring(string.length) + string;
};

convert.hex.rgb = function (args) {
  var match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);

  if (!match) {
    return [0, 0, 0];
  }

  var colorString = match[0];

  if (match[0].length === 3) {
    colorString = colorString.split('').map(function (char) {
      return char + char;
    }).join('');
  }

  var integer = parseInt(colorString, 16);
  var r = integer >> 16 & 0xFF;
  var g = integer >> 8 & 0xFF;
  var b = integer & 0xFF;
  return [r, g, b];
};

convert.rgb.hcg = function (rgb) {
  var r = rgb[0] / 255;
  var g = rgb[1] / 255;
  var b = rgb[2] / 255;
  var max = Math.max(Math.max(r, g), b);
  var min = Math.min(Math.min(r, g), b);
  var chroma = max - min;
  var grayscale;
  var hue;

  if (chroma < 1) {
    grayscale = min / (1 - chroma);
  } else {
    grayscale = 0;
  }

  if (chroma <= 0) {
    hue = 0;
  } else if (max === r) {
    hue = (g - b) / chroma % 6;
  } else if (max === g) {
    hue = 2 + (b - r) / chroma;
  } else {
    hue = 4 + (r - g) / chroma + 4;
  }

  hue /= 6;
  hue %= 1;
  return [hue * 360, chroma * 100, grayscale * 100];
};

convert.hsl.hcg = function (hsl) {
  var s = hsl[1] / 100;
  var l = hsl[2] / 100;
  var c = 1;
  var f = 0;

  if (l < 0.5) {
    c = 2.0 * s * l;
  } else {
    c = 2.0 * s * (1.0 - l);
  }

  if (c < 1.0) {
    f = (l - 0.5 * c) / (1.0 - c);
  }

  return [hsl[0], c * 100, f * 100];
};

convert.hsv.hcg = function (hsv) {
  var s = hsv[1] / 100;
  var v = hsv[2] / 100;
  var c = s * v;
  var f = 0;

  if (c < 1.0) {
    f = (v - c) / (1 - c);
  }

  return [hsv[0], c * 100, f * 100];
};

convert.hcg.rgb = function (hcg) {
  var h = hcg[0] / 360;
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;

  if (c === 0.0) {
    return [g * 255, g * 255, g * 255];
  }

  var pure = [0, 0, 0];
  var hi = h % 1 * 6;
  var v = hi % 1;
  var w = 1 - v;
  var mg = 0;

  switch (Math.floor(hi)) {
    case 0:
      pure[0] = 1;
      pure[1] = v;
      pure[2] = 0;
      break;

    case 1:
      pure[0] = w;
      pure[1] = 1;
      pure[2] = 0;
      break;

    case 2:
      pure[0] = 0;
      pure[1] = 1;
      pure[2] = v;
      break;

    case 3:
      pure[0] = 0;
      pure[1] = w;
      pure[2] = 1;
      break;

    case 4:
      pure[0] = v;
      pure[1] = 0;
      pure[2] = 1;
      break;

    default:
      pure[0] = 1;
      pure[1] = 0;
      pure[2] = w;
  }

  mg = (1.0 - c) * g;
  return [(c * pure[0] + mg) * 255, (c * pure[1] + mg) * 255, (c * pure[2] + mg) * 255];
};

convert.hcg.hsv = function (hcg) {
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;
  var v = c + g * (1.0 - c);
  var f = 0;

  if (v > 0.0) {
    f = c / v;
  }

  return [hcg[0], f * 100, v * 100];
};

convert.hcg.hsl = function (hcg) {
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;
  var l = g * (1.0 - c) + 0.5 * c;
  var s = 0;

  if (l > 0.0 && l < 0.5) {
    s = c / (2 * l);
  } else if (l >= 0.5 && l < 1.0) {
    s = c / (2 * (1 - l));
  }

  return [hcg[0], s * 100, l * 100];
};

convert.hcg.hwb = function (hcg) {
  var c = hcg[1] / 100;
  var g = hcg[2] / 100;
  var v = c + g * (1.0 - c);
  return [hcg[0], (v - c) * 100, (1 - v) * 100];
};

convert.hwb.hcg = function (hwb) {
  var w = hwb[1] / 100;
  var b = hwb[2] / 100;
  var v = 1 - b;
  var c = v - w;
  var g = 0;

  if (c < 1) {
    g = (v - c) / (1 - c);
  }

  return [hwb[0], c * 100, g * 100];
};

convert.apple.rgb = function (apple) {
  return [apple[0] / 65535 * 255, apple[1] / 65535 * 255, apple[2] / 65535 * 255];
};

convert.rgb.apple = function (rgb) {
  return [rgb[0] / 255 * 65535, rgb[1] / 255 * 65535, rgb[2] / 255 * 65535];
};

convert.gray.rgb = function (args) {
  return [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];
};

convert.gray.hsl = convert.gray.hsv = function (args) {
  return [0, 0, args[0]];
};

convert.gray.hwb = function (gray) {
  return [0, 100, gray[0]];
};

convert.gray.cmyk = function (gray) {
  return [0, 0, 0, gray[0]];
};

convert.gray.lab = function (gray) {
  return [gray[0], 0, 0];
};

convert.gray.hex = function (gray) {
  var val = Math.round(gray[0] / 100 * 255) & 0xFF;
  var integer = (val << 16) + (val << 8) + val;
  var string = integer.toString(16).toUpperCase();
  return '000000'.substring(string.length) + string;
};

convert.rgb.gray = function (rgb) {
  var val = (rgb[0] + rgb[1] + rgb[2]) / 3;
  return [val / 255 * 100];
};

/***/ }),

/***/ "./node_modules/color-convert/index.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var conversions = __webpack_require__(/*! ./conversions */ "./node_modules/color-convert/conversions.js");

var route = __webpack_require__(/*! ./route */ "./node_modules/color-convert/route.js");

var convert = {};
var models = Object.keys(conversions);

function wrapRaw(fn) {
  var wrappedFn = function (args) {
    if (args === undefined || args === null) {
      return args;
    }

    if (arguments.length > 1) {
      args = Array.prototype.slice.call(arguments);
    }

    return fn(args);
  }; // preserve .conversion property if there is one


  if ('conversion' in fn) {
    wrappedFn.conversion = fn.conversion;
  }

  return wrappedFn;
}

function wrapRounded(fn) {
  var wrappedFn = function (args) {
    if (args === undefined || args === null) {
      return args;
    }

    if (arguments.length > 1) {
      args = Array.prototype.slice.call(arguments);
    }

    var result = fn(args); // we're assuming the result is an array here.
    // see notice in conversions.js; don't use box types
    // in conversion functions.

    if (typeof result === 'object') {
      for (var len = result.length, i = 0; i < len; i++) {
        result[i] = Math.round(result[i]);
      }
    }

    return result;
  }; // preserve .conversion property if there is one


  if ('conversion' in fn) {
    wrappedFn.conversion = fn.conversion;
  }

  return wrappedFn;
}

models.forEach(function (fromModel) {
  convert[fromModel] = {};
  Object.defineProperty(convert[fromModel], 'channels', {
    value: conversions[fromModel].channels
  });
  Object.defineProperty(convert[fromModel], 'labels', {
    value: conversions[fromModel].labels
  });
  var routes = route(fromModel);
  var routeModels = Object.keys(routes);
  routeModels.forEach(function (toModel) {
    var fn = routes[toModel];
    convert[fromModel][toModel] = wrapRounded(fn);
    convert[fromModel][toModel].raw = wrapRaw(fn);
  });
});
module.exports = convert;

/***/ }),

/***/ "./node_modules/color-convert/route.js":
/*!*********************************************!*\
  !*** ./node_modules/color-convert/route.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var conversions = __webpack_require__(/*! ./conversions */ "./node_modules/color-convert/conversions.js");
/*
	this function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/


function buildGraph() {
  var graph = {}; // https://jsperf.com/object-keys-vs-for-in-with-closure/3

  var models = Object.keys(conversions);

  for (var len = models.length, i = 0; i < len; i++) {
    graph[models[i]] = {
      // http://jsperf.com/1-vs-infinity
      // micro-opt, but this is simple.
      distance: -1,
      parent: null
    };
  }

  return graph;
} // https://en.wikipedia.org/wiki/Breadth-first_search


function deriveBFS(fromModel) {
  var graph = buildGraph();
  var queue = [fromModel]; // unshift -> queue -> pop

  graph[fromModel].distance = 0;

  while (queue.length) {
    var current = queue.pop();
    var adjacents = Object.keys(conversions[current]);

    for (var len = adjacents.length, i = 0; i < len; i++) {
      var adjacent = adjacents[i];
      var node = graph[adjacent];

      if (node.distance === -1) {
        node.distance = graph[current].distance + 1;
        node.parent = current;
        queue.unshift(adjacent);
      }
    }
  }

  return graph;
}

function link(from, to) {
  return function (args) {
    return to(from(args));
  };
}

function wrapConversion(toModel, graph) {
  var path = [graph[toModel].parent, toModel];
  var fn = conversions[graph[toModel].parent][toModel];
  var cur = graph[toModel].parent;

  while (graph[cur].parent) {
    path.unshift(graph[cur].parent);
    fn = link(conversions[graph[cur].parent][cur], fn);
    cur = graph[cur].parent;
  }

  fn.conversion = path;
  return fn;
}

module.exports = function (fromModel) {
  var graph = deriveBFS(fromModel);
  var conversion = {};
  var models = Object.keys(graph);

  for (var len = models.length, i = 0; i < len; i++) {
    var toModel = models[i];
    var node = graph[toModel];

    if (node.parent === null) {
      // no possible conversion, or this node is the source model.
      continue;
    }

    conversion[toModel] = wrapConversion(toModel, graph);
  }

  return conversion;
};

/***/ }),

/***/ "./node_modules/color-name/index.js":
/*!******************************************!*\
  !*** ./node_modules/color-name/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  "aliceblue": [240, 248, 255],
  "antiquewhite": [250, 235, 215],
  "aqua": [0, 255, 255],
  "aquamarine": [127, 255, 212],
  "azure": [240, 255, 255],
  "beige": [245, 245, 220],
  "bisque": [255, 228, 196],
  "black": [0, 0, 0],
  "blanchedalmond": [255, 235, 205],
  "blue": [0, 0, 255],
  "blueviolet": [138, 43, 226],
  "brown": [165, 42, 42],
  "burlywood": [222, 184, 135],
  "cadetblue": [95, 158, 160],
  "chartreuse": [127, 255, 0],
  "chocolate": [210, 105, 30],
  "coral": [255, 127, 80],
  "cornflowerblue": [100, 149, 237],
  "cornsilk": [255, 248, 220],
  "crimson": [220, 20, 60],
  "cyan": [0, 255, 255],
  "darkblue": [0, 0, 139],
  "darkcyan": [0, 139, 139],
  "darkgoldenrod": [184, 134, 11],
  "darkgray": [169, 169, 169],
  "darkgreen": [0, 100, 0],
  "darkgrey": [169, 169, 169],
  "darkkhaki": [189, 183, 107],
  "darkmagenta": [139, 0, 139],
  "darkolivegreen": [85, 107, 47],
  "darkorange": [255, 140, 0],
  "darkorchid": [153, 50, 204],
  "darkred": [139, 0, 0],
  "darksalmon": [233, 150, 122],
  "darkseagreen": [143, 188, 143],
  "darkslateblue": [72, 61, 139],
  "darkslategray": [47, 79, 79],
  "darkslategrey": [47, 79, 79],
  "darkturquoise": [0, 206, 209],
  "darkviolet": [148, 0, 211],
  "deeppink": [255, 20, 147],
  "deepskyblue": [0, 191, 255],
  "dimgray": [105, 105, 105],
  "dimgrey": [105, 105, 105],
  "dodgerblue": [30, 144, 255],
  "firebrick": [178, 34, 34],
  "floralwhite": [255, 250, 240],
  "forestgreen": [34, 139, 34],
  "fuchsia": [255, 0, 255],
  "gainsboro": [220, 220, 220],
  "ghostwhite": [248, 248, 255],
  "gold": [255, 215, 0],
  "goldenrod": [218, 165, 32],
  "gray": [128, 128, 128],
  "green": [0, 128, 0],
  "greenyellow": [173, 255, 47],
  "grey": [128, 128, 128],
  "honeydew": [240, 255, 240],
  "hotpink": [255, 105, 180],
  "indianred": [205, 92, 92],
  "indigo": [75, 0, 130],
  "ivory": [255, 255, 240],
  "khaki": [240, 230, 140],
  "lavender": [230, 230, 250],
  "lavenderblush": [255, 240, 245],
  "lawngreen": [124, 252, 0],
  "lemonchiffon": [255, 250, 205],
  "lightblue": [173, 216, 230],
  "lightcoral": [240, 128, 128],
  "lightcyan": [224, 255, 255],
  "lightgoldenrodyellow": [250, 250, 210],
  "lightgray": [211, 211, 211],
  "lightgreen": [144, 238, 144],
  "lightgrey": [211, 211, 211],
  "lightpink": [255, 182, 193],
  "lightsalmon": [255, 160, 122],
  "lightseagreen": [32, 178, 170],
  "lightskyblue": [135, 206, 250],
  "lightslategray": [119, 136, 153],
  "lightslategrey": [119, 136, 153],
  "lightsteelblue": [176, 196, 222],
  "lightyellow": [255, 255, 224],
  "lime": [0, 255, 0],
  "limegreen": [50, 205, 50],
  "linen": [250, 240, 230],
  "magenta": [255, 0, 255],
  "maroon": [128, 0, 0],
  "mediumaquamarine": [102, 205, 170],
  "mediumblue": [0, 0, 205],
  "mediumorchid": [186, 85, 211],
  "mediumpurple": [147, 112, 219],
  "mediumseagreen": [60, 179, 113],
  "mediumslateblue": [123, 104, 238],
  "mediumspringgreen": [0, 250, 154],
  "mediumturquoise": [72, 209, 204],
  "mediumvioletred": [199, 21, 133],
  "midnightblue": [25, 25, 112],
  "mintcream": [245, 255, 250],
  "mistyrose": [255, 228, 225],
  "moccasin": [255, 228, 181],
  "navajowhite": [255, 222, 173],
  "navy": [0, 0, 128],
  "oldlace": [253, 245, 230],
  "olive": [128, 128, 0],
  "olivedrab": [107, 142, 35],
  "orange": [255, 165, 0],
  "orangered": [255, 69, 0],
  "orchid": [218, 112, 214],
  "palegoldenrod": [238, 232, 170],
  "palegreen": [152, 251, 152],
  "paleturquoise": [175, 238, 238],
  "palevioletred": [219, 112, 147],
  "papayawhip": [255, 239, 213],
  "peachpuff": [255, 218, 185],
  "peru": [205, 133, 63],
  "pink": [255, 192, 203],
  "plum": [221, 160, 221],
  "powderblue": [176, 224, 230],
  "purple": [128, 0, 128],
  "rebeccapurple": [102, 51, 153],
  "red": [255, 0, 0],
  "rosybrown": [188, 143, 143],
  "royalblue": [65, 105, 225],
  "saddlebrown": [139, 69, 19],
  "salmon": [250, 128, 114],
  "sandybrown": [244, 164, 96],
  "seagreen": [46, 139, 87],
  "seashell": [255, 245, 238],
  "sienna": [160, 82, 45],
  "silver": [192, 192, 192],
  "skyblue": [135, 206, 235],
  "slateblue": [106, 90, 205],
  "slategray": [112, 128, 144],
  "slategrey": [112, 128, 144],
  "snow": [255, 250, 250],
  "springgreen": [0, 255, 127],
  "steelblue": [70, 130, 180],
  "tan": [210, 180, 140],
  "teal": [0, 128, 128],
  "thistle": [216, 191, 216],
  "tomato": [255, 99, 71],
  "turquoise": [64, 224, 208],
  "violet": [238, 130, 238],
  "wheat": [245, 222, 179],
  "white": [255, 255, 255],
  "whitesmoke": [245, 245, 245],
  "yellow": [255, 255, 0],
  "yellowgreen": [154, 205, 50]
};

/***/ }),

/***/ "./node_modules/css-loader/dist/runtime/api.js":
/*!*****************************************************!*\
  !*** ./node_modules/css-loader/dist/runtime/api.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/*
  MIT License http://www.opensource.org/licenses/mit-license.php
  Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader

module.exports = function (useSourceMap) {
  var list = []; // return the list of modules as css string

  list.toString = function toString() {
    return this.map(function (item) {
      var content = cssWithMappingToString(item, useSourceMap);

      if (item[2]) {
        return '@media ' + item[2] + '{' + content + '}';
      } else {
        return content;
      }
    }).join('');
  }; // import a list of modules into the list


  list.i = function (modules, mediaQuery) {
    if (typeof modules === 'string') {
      modules = [[null, modules, '']];
    }

    var alreadyImportedModules = {};

    for (var i = 0; i < this.length; i++) {
      var id = this[i][0];

      if (id != null) {
        alreadyImportedModules[id] = true;
      }
    }

    for (i = 0; i < modules.length; i++) {
      var item = modules[i]; // skip already imported module
      // this implementation is not 100% perfect for weird media query combinations
      // when a module is imported multiple times with different media queries.
      // I hope this will never occur (Hey this way we have smaller bundles)

      if (item[0] == null || !alreadyImportedModules[item[0]]) {
        if (mediaQuery && !item[2]) {
          item[2] = mediaQuery;
        } else if (mediaQuery) {
          item[2] = '(' + item[2] + ') and (' + mediaQuery + ')';
        }

        list.push(item);
      }
    }
  };

  return list;
};

function cssWithMappingToString(item, useSourceMap) {
  var content = item[1] || '';
  var cssMapping = item[3];

  if (!cssMapping) {
    return content;
  }

  if (useSourceMap && typeof btoa === 'function') {
    var sourceMapping = toComment(cssMapping);
    var sourceURLs = cssMapping.sources.map(function (source) {
      return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */';
    });
    return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
  }

  return [content].join('\n');
} // Adapted from convert-source-map (MIT)


function toComment(sourceMap) {
  // eslint-disable-next-line no-undef
  var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
  var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;
  return '/*# ' + data + ' */';
}

/***/ }),

/***/ "./node_modules/escape-string-regexp/index.js":
/*!****************************************************!*\
  !*** ./node_modules/escape-string-regexp/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var matchOperatorsRe = /[|\\{}()[\]^$+*?.]/g;

module.exports = function (str) {
  if (typeof str !== 'string') {
    throw new TypeError('Expected a string');
  }

  return str.replace(matchOperatorsRe, '\\$&');
};

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;
      ctor.prototype = Object.create(superCtor.prototype, {
        constructor: {
          value: ctor,
          enumerable: false,
          writable: true,
          configurable: true
        }
      });
    }
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    if (superCtor) {
      ctor.super_ = superCtor;

      var TempCtor = function () {};

      TempCtor.prototype = superCtor.prototype;
      ctor.prototype = new TempCtor();
      ctor.prototype.constructor = ctor;
    }
  };
}

/***/ }),

/***/ "./node_modules/json3/lib/json3.js":
/*!*****************************************!*\
  !*** ./node_modules/json3/lib/json3.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! JSON v3.3.2 | https://bestiejs.github.io/json3 | Copyright 2012-2015, Kit Cambridge, Benjamin Tan | http://kit.mit-license.org */
;
(function () {
  // Detect the `define` function exposed by asynchronous module loaders. The
  // strict `define` check is necessary for compatibility with `r.js`.
  var isLoader =  true && __webpack_require__(/*! !webpack amd options */ "./node_modules/webpack/buildin/amd-options.js"); // A set of types used to distinguish objects from primitives.

  var objectTypes = {
    "function": true,
    "object": true
  }; // Detect the `exports` object exposed by CommonJS implementations.

  var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports; // Use the `global` object exposed by Node (including Browserify via
  // `insert-module-globals`), Narwhal, and Ringo as the default context,
  // and the `window` object in browsers. Rhino exports a `global` function
  // instead.

  var root = objectTypes[typeof window] && window || this,
      freeGlobal = freeExports && objectTypes[typeof module] && module && !module.nodeType && typeof global == "object" && global;

  if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {
    root = freeGlobal;
  } // Public: Initializes JSON 3 using the given `context` object, attaching the
  // `stringify` and `parse` functions to the specified `exports` object.


  function runInContext(context, exports) {
    context || (context = root.Object());
    exports || (exports = root.Object()); // Native constructor aliases.

    var Number = context.Number || root.Number,
        String = context.String || root.String,
        Object = context.Object || root.Object,
        Date = context.Date || root.Date,
        SyntaxError = context.SyntaxError || root.SyntaxError,
        TypeError = context.TypeError || root.TypeError,
        Math = context.Math || root.Math,
        nativeJSON = context.JSON || root.JSON; // Delegate to the native `stringify` and `parse` implementations.

    if (typeof nativeJSON == "object" && nativeJSON) {
      exports.stringify = nativeJSON.stringify;
      exports.parse = nativeJSON.parse;
    } // Convenience aliases.


    var objectProto = Object.prototype,
        getClass = objectProto.toString,
        isProperty = objectProto.hasOwnProperty,
        undefined; // Internal: Contains `try...catch` logic used by other functions.
    // This prevents other functions from being deoptimized.

    function attempt(func, errorFunc) {
      try {
        func();
      } catch (exception) {
        if (errorFunc) {
          errorFunc();
        }
      }
    } // Test the `Date#getUTC*` methods. Based on work by @Yaffle.


    var isExtended = new Date(-3509827334573292);
    attempt(function () {
      // The `getUTCFullYear`, `Month`, and `Date` methods return nonsensical
      // results for certain dates in Opera >= 10.53.
      isExtended = isExtended.getUTCFullYear() == -109252 && isExtended.getUTCMonth() === 0 && isExtended.getUTCDate() === 1 && isExtended.getUTCHours() == 10 && isExtended.getUTCMinutes() == 37 && isExtended.getUTCSeconds() == 6 && isExtended.getUTCMilliseconds() == 708;
    }); // Internal: Determines whether the native `JSON.stringify` and `parse`
    // implementations are spec-compliant. Based on work by Ken Snyder.

    function has(name) {
      if (has[name] != null) {
        // Return cached feature test result.
        return has[name];
      }

      var isSupported;

      if (name == "bug-string-char-index") {
        // IE <= 7 doesn't support accessing string characters using square
        // bracket notation. IE 8 only supports this for primitives.
        isSupported = "a"[0] != "a";
      } else if (name == "json") {
        // Indicates whether both `JSON.stringify` and `JSON.parse` are
        // supported.
        isSupported = has("json-stringify") && has("date-serialization") && has("json-parse");
      } else if (name == "date-serialization") {
        // Indicates whether `Date`s can be serialized accurately by `JSON.stringify`.
        isSupported = has("json-stringify") && isExtended;

        if (isSupported) {
          var stringify = exports.stringify;
          attempt(function () {
            isSupported = // JSON 2, Prototype <= 1.7, and older WebKit builds incorrectly
            // serialize extended years.
            stringify(new Date(-8.64e15)) == '"-271821-04-20T00:00:00.000Z"' && // The milliseconds are optional in ES 5, but required in 5.1.
            stringify(new Date(8.64e15)) == '"+275760-09-13T00:00:00.000Z"' && // Firefox <= 11.0 incorrectly serializes years prior to 0 as negative
            // four-digit years instead of six-digit years. Credits: @Yaffle.
            stringify(new Date(-621987552e5)) == '"-000001-01-01T00:00:00.000Z"' && // Safari <= 5.1.5 and Opera >= 10.53 incorrectly serialize millisecond
            // values less than 1000. Credits: @Yaffle.
            stringify(new Date(-1)) == '"1969-12-31T23:59:59.999Z"';
          });
        }
      } else {
        var value,
            serialized = '{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}'; // Test `JSON.stringify`.

        if (name == "json-stringify") {
          var stringify = exports.stringify,
              stringifySupported = typeof stringify == "function";

          if (stringifySupported) {
            // A test function object with a custom `toJSON` method.
            (value = function () {
              return 1;
            }).toJSON = value;
            attempt(function () {
              stringifySupported = // Firefox 3.1b1 and b2 serialize string, number, and boolean
              // primitives as object literals.
              stringify(0) === "0" && // FF 3.1b1, b2, and JSON 2 serialize wrapped primitives as object
              // literals.
              stringify(new Number()) === "0" && stringify(new String()) == '""' && // FF 3.1b1, 2 throw an error if the value is `null`, `undefined`, or
              // does not define a canonical JSON representation (this applies to
              // objects with `toJSON` properties as well, *unless* they are nested
              // within an object or array).
              stringify(getClass) === undefined && // IE 8 serializes `undefined` as `"undefined"`. Safari <= 5.1.7 and
              // FF 3.1b3 pass this test.
              stringify(undefined) === undefined && // Safari <= 5.1.7 and FF 3.1b3 throw `Error`s and `TypeError`s,
              // respectively, if the value is omitted entirely.
              stringify() === undefined && // FF 3.1b1, 2 throw an error if the given value is not a number,
              // string, array, object, Boolean, or `null` literal. This applies to
              // objects with custom `toJSON` methods as well, unless they are nested
              // inside object or array literals. YUI 3.0.0b1 ignores custom `toJSON`
              // methods entirely.
              stringify(value) === "1" && stringify([value]) == "[1]" && // Prototype <= 1.6.1 serializes `[undefined]` as `"[]"` instead of
              // `"[null]"`.
              stringify([undefined]) == "[null]" && // YUI 3.0.0b1 fails to serialize `null` literals.
              stringify(null) == "null" && // FF 3.1b1, 2 halts serialization if an array contains a function:
              // `[1, true, getClass, 1]` serializes as "[1,true,],". FF 3.1b3
              // elides non-JSON values from objects and arrays, unless they
              // define custom `toJSON` methods.
              stringify([undefined, getClass, null]) == "[null,null,null]" && // Simple serialization test. FF 3.1b1 uses Unicode escape sequences
              // where character escape codes are expected (e.g., `\b` => `\u0008`).
              stringify({
                "a": [value, true, false, null, "\x00\b\n\f\r\t"]
              }) == serialized && // FF 3.1b1 and b2 ignore the `filter` and `width` arguments.
              stringify(null, value) === "1" && stringify([1, 2], null, 1) == "[\n 1,\n 2\n]";
            }, function () {
              stringifySupported = false;
            });
          }

          isSupported = stringifySupported;
        } // Test `JSON.parse`.


        if (name == "json-parse") {
          var parse = exports.parse,
              parseSupported;

          if (typeof parse == "function") {
            attempt(function () {
              // FF 3.1b1, b2 will throw an exception if a bare literal is provided.
              // Conforming implementations should also coerce the initial argument to
              // a string prior to parsing.
              if (parse("0") === 0 && !parse(false)) {
                // Simple parsing test.
                value = parse(serialized);
                parseSupported = value["a"].length == 5 && value["a"][0] === 1;

                if (parseSupported) {
                  attempt(function () {
                    // Safari <= 5.1.2 and FF 3.1b1 allow unescaped tabs in strings.
                    parseSupported = !parse('"\t"');
                  });

                  if (parseSupported) {
                    attempt(function () {
                      // FF 4.0 and 4.0.1 allow leading `+` signs and leading
                      // decimal points. FF 4.0, 4.0.1, and IE 9-10 also allow
                      // certain octal literals.
                      parseSupported = parse("01") !== 1;
                    });
                  }

                  if (parseSupported) {
                    attempt(function () {
                      // FF 4.0, 4.0.1, and Rhino 1.7R3-R4 allow trailing decimal
                      // points. These environments, along with FF 3.1b1 and 2,
                      // also allow trailing commas in JSON objects and arrays.
                      parseSupported = parse("1.") !== 1;
                    });
                  }
                }
              }
            }, function () {
              parseSupported = false;
            });
          }

          isSupported = parseSupported;
        }
      }

      return has[name] = !!isSupported;
    }

    has["bug-string-char-index"] = has["date-serialization"] = has["json"] = has["json-stringify"] = has["json-parse"] = null;

    if (!has("json")) {
      // Common `[[Class]]` name aliases.
      var functionClass = "[object Function]",
          dateClass = "[object Date]",
          numberClass = "[object Number]",
          stringClass = "[object String]",
          arrayClass = "[object Array]",
          booleanClass = "[object Boolean]"; // Detect incomplete support for accessing string characters by index.

      var charIndexBuggy = has("bug-string-char-index"); // Internal: Normalizes the `for...in` iteration algorithm across
      // environments. Each enumerated key is yielded to a `callback` function.

      var forOwn = function (object, callback) {
        var size = 0,
            Properties,
            dontEnums,
            property; // Tests for bugs in the current environment's `for...in` algorithm. The
        // `valueOf` property inherits the non-enumerable flag from
        // `Object.prototype` in older versions of IE, Netscape, and Mozilla.

        (Properties = function () {
          this.valueOf = 0;
        }).prototype.valueOf = 0; // Iterate over a new instance of the `Properties` class.

        dontEnums = new Properties();

        for (property in dontEnums) {
          // Ignore all properties inherited from `Object.prototype`.
          if (isProperty.call(dontEnums, property)) {
            size++;
          }
        }

        Properties = dontEnums = null; // Normalize the iteration algorithm.

        if (!size) {
          // A list of non-enumerable properties inherited from `Object.prototype`.
          dontEnums = ["valueOf", "toString", "toLocaleString", "propertyIsEnumerable", "isPrototypeOf", "hasOwnProperty", "constructor"]; // IE <= 8, Mozilla 1.0, and Netscape 6.2 ignore shadowed non-enumerable
          // properties.

          forOwn = function (object, callback) {
            var isFunction = getClass.call(object) == functionClass,
                property,
                length;
            var hasProperty = !isFunction && typeof object.constructor != "function" && objectTypes[typeof object.hasOwnProperty] && object.hasOwnProperty || isProperty;

            for (property in object) {
              // Gecko <= 1.0 enumerates the `prototype` property of functions under
              // certain conditions; IE does not.
              if (!(isFunction && property == "prototype") && hasProperty.call(object, property)) {
                callback(property);
              }
            } // Manually invoke the callback for each non-enumerable property.


            for (length = dontEnums.length; property = dontEnums[--length];) {
              if (hasProperty.call(object, property)) {
                callback(property);
              }
            }
          };
        } else {
          // No bugs detected; use the standard `for...in` algorithm.
          forOwn = function (object, callback) {
            var isFunction = getClass.call(object) == functionClass,
                property,
                isConstructor;

            for (property in object) {
              if (!(isFunction && property == "prototype") && isProperty.call(object, property) && !(isConstructor = property === "constructor")) {
                callback(property);
              }
            } // Manually invoke the callback for the `constructor` property due to
            // cross-environment inconsistencies.


            if (isConstructor || isProperty.call(object, property = "constructor")) {
              callback(property);
            }
          };
        }

        return forOwn(object, callback);
      }; // Public: Serializes a JavaScript `value` as a JSON string. The optional
      // `filter` argument may specify either a function that alters how object and
      // array members are serialized, or an array of strings and numbers that
      // indicates which properties should be serialized. The optional `width`
      // argument may be either a string or number that specifies the indentation
      // level of the output.


      if (!has("json-stringify") && !has("date-serialization")) {
        // Internal: A map of control characters and their escaped equivalents.
        var Escapes = {
          92: "\\\\",
          34: '\\"',
          8: "\\b",
          12: "\\f",
          10: "\\n",
          13: "\\r",
          9: "\\t"
        }; // Internal: Converts `value` into a zero-padded string such that its
        // length is at least equal to `width`. The `width` must be <= 6.

        var leadingZeroes = "000000";

        var toPaddedString = function (width, value) {
          // The `|| 0` expression is necessary to work around a bug in
          // Opera <= 7.54u2 where `0 == -0`, but `String(-0) !== "0"`.
          return (leadingZeroes + (value || 0)).slice(-width);
        }; // Internal: Serializes a date object.


        var serializeDate = function (value) {
          var getData, year, month, date, time, hours, minutes, seconds, milliseconds; // Define additional utility methods if the `Date` methods are buggy.

          if (!isExtended) {
            var floor = Math.floor; // A mapping between the months of the year and the number of days between
            // January 1st and the first of the respective month.

            var Months = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334]; // Internal: Calculates the number of days between the Unix epoch and the
            // first day of the given month.

            var getDay = function (year, month) {
              return Months[month] + 365 * (year - 1970) + floor((year - 1969 + (month = +(month > 1))) / 4) - floor((year - 1901 + month) / 100) + floor((year - 1601 + month) / 400);
            };

            getData = function (value) {
              // Manually compute the year, month, date, hours, minutes,
              // seconds, and milliseconds if the `getUTC*` methods are
              // buggy. Adapted from @Yaffle's `date-shim` project.
              date = floor(value / 864e5);

              for (year = floor(date / 365.2425) + 1970 - 1; getDay(year + 1, 0) <= date; year++);

              for (month = floor((date - getDay(year, 0)) / 30.42); getDay(year, month + 1) <= date; month++);

              date = 1 + date - getDay(year, month); // The `time` value specifies the time within the day (see ES
              // 5.1 section 15.9.1.2). The formula `(A % B + B) % B` is used
              // to compute `A modulo B`, as the `%` operator does not
              // correspond to the `modulo` operation for negative numbers.

              time = (value % 864e5 + 864e5) % 864e5; // The hours, minutes, seconds, and milliseconds are obtained by
              // decomposing the time within the day. See section 15.9.1.10.

              hours = floor(time / 36e5) % 24;
              minutes = floor(time / 6e4) % 60;
              seconds = floor(time / 1e3) % 60;
              milliseconds = time % 1e3;
            };
          } else {
            getData = function (value) {
              year = value.getUTCFullYear();
              month = value.getUTCMonth();
              date = value.getUTCDate();
              hours = value.getUTCHours();
              minutes = value.getUTCMinutes();
              seconds = value.getUTCSeconds();
              milliseconds = value.getUTCMilliseconds();
            };
          }

          serializeDate = function (value) {
            if (value > -1 / 0 && value < 1 / 0) {
              // Dates are serialized according to the `Date#toJSON` method
              // specified in ES 5.1 section 15.9.5.44. See section 15.9.1.15
              // for the ISO 8601 date time string format.
              getData(value); // Serialize extended years correctly.

              value = (year <= 0 || year >= 1e4 ? (year < 0 ? "-" : "+") + toPaddedString(6, year < 0 ? -year : year) : toPaddedString(4, year)) + "-" + toPaddedString(2, month + 1) + "-" + toPaddedString(2, date) + // Months, dates, hours, minutes, and seconds should have two
              // digits; milliseconds should have three.
              "T" + toPaddedString(2, hours) + ":" + toPaddedString(2, minutes) + ":" + toPaddedString(2, seconds) + // Milliseconds are optional in ES 5.0, but required in 5.1.
              "." + toPaddedString(3, milliseconds) + "Z";
              year = month = date = hours = minutes = seconds = milliseconds = null;
            } else {
              value = null;
            }

            return value;
          };

          return serializeDate(value);
        }; // For environments with `JSON.stringify` but buggy date serialization,
        // we override the native `Date#toJSON` implementation with a
        // spec-compliant one.


        if (has("json-stringify") && !has("date-serialization")) {
          // Internal: the `Date#toJSON` implementation used to override the native one.
          function dateToJSON(key) {
            return serializeDate(this);
          } // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.


          var nativeStringify = exports.stringify;

          exports.stringify = function (source, filter, width) {
            var nativeToJSON = Date.prototype.toJSON;
            Date.prototype.toJSON = dateToJSON;
            var result = nativeStringify(source, filter, width);
            Date.prototype.toJSON = nativeToJSON;
            return result;
          };
        } else {
          // Internal: Double-quotes a string `value`, replacing all ASCII control
          // characters (characters with code unit values between 0 and 31) with
          // their escaped equivalents. This is an implementation of the
          // `Quote(value)` operation defined in ES 5.1 section 15.12.3.
          var unicodePrefix = "\\u00";

          var escapeChar = function (character) {
            var charCode = character.charCodeAt(0),
                escaped = Escapes[charCode];

            if (escaped) {
              return escaped;
            }

            return unicodePrefix + toPaddedString(2, charCode.toString(16));
          };

          var reEscape = /[\x00-\x1f\x22\x5c]/g;

          var quote = function (value) {
            reEscape.lastIndex = 0;
            return '"' + (reEscape.test(value) ? value.replace(reEscape, escapeChar) : value) + '"';
          }; // Internal: Recursively serializes an object. Implements the
          // `Str(key, holder)`, `JO(value)`, and `JA(value)` operations.


          var serialize = function (property, object, callback, properties, whitespace, indentation, stack) {
            var value, type, className, results, element, index, length, prefix, result;
            attempt(function () {
              // Necessary for host object support.
              value = object[property];
            });

            if (typeof value == "object" && value) {
              if (value.getUTCFullYear && getClass.call(value) == dateClass && value.toJSON === Date.prototype.toJSON) {
                value = serializeDate(value);
              } else if (typeof value.toJSON == "function") {
                value = value.toJSON(property);
              }
            }

            if (callback) {
              // If a replacement function was provided, call it to obtain the value
              // for serialization.
              value = callback.call(object, property, value);
            } // Exit early if value is `undefined` or `null`.


            if (value == undefined) {
              return value === undefined ? value : "null";
            }

            type = typeof value; // Only call `getClass` if the value is an object.

            if (type == "object") {
              className = getClass.call(value);
            }

            switch (className || type) {
              case "boolean":
              case booleanClass:
                // Booleans are represented literally.
                return "" + value;

              case "number":
              case numberClass:
                // JSON numbers must be finite. `Infinity` and `NaN` are serialized as
                // `"null"`.
                return value > -1 / 0 && value < 1 / 0 ? "" + value : "null";

              case "string":
              case stringClass:
                // Strings are double-quoted and escaped.
                return quote("" + value);
            } // Recursively serialize objects and arrays.


            if (typeof value == "object") {
              // Check for cyclic structures. This is a linear search; performance
              // is inversely proportional to the number of unique nested objects.
              for (length = stack.length; length--;) {
                if (stack[length] === value) {
                  // Cyclic structures cannot be serialized by `JSON.stringify`.
                  throw TypeError();
                }
              } // Add the object to the stack of traversed objects.


              stack.push(value);
              results = []; // Save the current indentation level and indent one additional level.

              prefix = indentation;
              indentation += whitespace;

              if (className == arrayClass) {
                // Recursively serialize array elements.
                for (index = 0, length = value.length; index < length; index++) {
                  element = serialize(index, value, callback, properties, whitespace, indentation, stack);
                  results.push(element === undefined ? "null" : element);
                }

                result = results.length ? whitespace ? "[\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "]" : "[" + results.join(",") + "]" : "[]";
              } else {
                // Recursively serialize object members. Members are selected from
                // either a user-specified list of property names, or the object
                // itself.
                forOwn(properties || value, function (property) {
                  var element = serialize(property, value, callback, properties, whitespace, indentation, stack);

                  if (element !== undefined) {
                    // According to ES 5.1 section 15.12.3: "If `gap` {whitespace}
                    // is not the empty string, let `member` {quote(property) + ":"}
                    // be the concatenation of `member` and the `space` character."
                    // The "`space` character" refers to the literal space
                    // character, not the `space` {width} argument provided to
                    // `JSON.stringify`.
                    results.push(quote(property) + ":" + (whitespace ? " " : "") + element);
                  }
                });
                result = results.length ? whitespace ? "{\n" + indentation + results.join(",\n" + indentation) + "\n" + prefix + "}" : "{" + results.join(",") + "}" : "{}";
              } // Remove the object from the traversed object stack.


              stack.pop();
              return result;
            }
          }; // Public: `JSON.stringify`. See ES 5.1 section 15.12.3.


          exports.stringify = function (source, filter, width) {
            var whitespace, callback, properties, className;

            if (objectTypes[typeof filter] && filter) {
              className = getClass.call(filter);

              if (className == functionClass) {
                callback = filter;
              } else if (className == arrayClass) {
                // Convert the property names array into a makeshift set.
                properties = {};

                for (var index = 0, length = filter.length, value; index < length;) {
                  value = filter[index++];
                  className = getClass.call(value);

                  if (className == "[object String]" || className == "[object Number]") {
                    properties[value] = 1;
                  }
                }
              }
            }

            if (width) {
              className = getClass.call(width);

              if (className == numberClass) {
                // Convert the `width` to an integer and create a string containing
                // `width` number of space characters.
                if ((width -= width % 1) > 0) {
                  if (width > 10) {
                    width = 10;
                  }

                  for (whitespace = ""; whitespace.length < width;) {
                    whitespace += " ";
                  }
                }
              } else if (className == stringClass) {
                whitespace = width.length <= 10 ? width : width.slice(0, 10);
              }
            } // Opera <= 7.54u2 discards the values associated with empty string keys
            // (`""`) only if they are used directly within an object member list
            // (e.g., `!("" in { "": 1})`).


            return serialize("", (value = {}, value[""] = source, value), callback, properties, whitespace, "", []);
          };
        }
      } // Public: Parses a JSON source string.


      if (!has("json-parse")) {
        var fromCharCode = String.fromCharCode; // Internal: A map of escaped control characters and their unescaped
        // equivalents.

        var Unescapes = {
          92: "\\",
          34: '"',
          47: "/",
          98: "\b",
          116: "\t",
          110: "\n",
          102: "\f",
          114: "\r"
        }; // Internal: Stores the parser state.

        var Index, Source; // Internal: Resets the parser state and throws a `SyntaxError`.

        var abort = function () {
          Index = Source = null;
          throw SyntaxError();
        }; // Internal: Returns the next token, or `"$"` if the parser has reached
        // the end of the source string. A token may be a string, number, `null`
        // literal, or Boolean literal.


        var lex = function () {
          var source = Source,
              length = source.length,
              value,
              begin,
              position,
              isSigned,
              charCode;

          while (Index < length) {
            charCode = source.charCodeAt(Index);

            switch (charCode) {
              case 9:
              case 10:
              case 13:
              case 32:
                // Skip whitespace tokens, including tabs, carriage returns, line
                // feeds, and space characters.
                Index++;
                break;

              case 123:
              case 125:
              case 91:
              case 93:
              case 58:
              case 44:
                // Parse a punctuator token (`{`, `}`, `[`, `]`, `:`, or `,`) at
                // the current position.
                value = charIndexBuggy ? source.charAt(Index) : source[Index];
                Index++;
                return value;

              case 34:
                // `"` delimits a JSON string; advance to the next character and
                // begin parsing the string. String tokens are prefixed with the
                // sentinel `@` character to distinguish them from punctuators and
                // end-of-string tokens.
                for (value = "@", Index++; Index < length;) {
                  charCode = source.charCodeAt(Index);

                  if (charCode < 32) {
                    // Unescaped ASCII control characters (those with a code unit
                    // less than the space character) are not permitted.
                    abort();
                  } else if (charCode == 92) {
                    // A reverse solidus (`\`) marks the beginning of an escaped
                    // control character (including `"`, `\`, and `/`) or Unicode
                    // escape sequence.
                    charCode = source.charCodeAt(++Index);

                    switch (charCode) {
                      case 92:
                      case 34:
                      case 47:
                      case 98:
                      case 116:
                      case 110:
                      case 102:
                      case 114:
                        // Revive escaped control characters.
                        value += Unescapes[charCode];
                        Index++;
                        break;

                      case 117:
                        // `\u` marks the beginning of a Unicode escape sequence.
                        // Advance to the first character and validate the
                        // four-digit code point.
                        begin = ++Index;

                        for (position = Index + 4; Index < position; Index++) {
                          charCode = source.charCodeAt(Index); // A valid sequence comprises four hexdigits (case-
                          // insensitive) that form a single hexadecimal value.

                          if (!(charCode >= 48 && charCode <= 57 || charCode >= 97 && charCode <= 102 || charCode >= 65 && charCode <= 70)) {
                            // Invalid Unicode escape sequence.
                            abort();
                          }
                        } // Revive the escaped character.


                        value += fromCharCode("0x" + source.slice(begin, Index));
                        break;

                      default:
                        // Invalid escape sequence.
                        abort();
                    }
                  } else {
                    if (charCode == 34) {
                      // An unescaped double-quote character marks the end of the
                      // string.
                      break;
                    }

                    charCode = source.charCodeAt(Index);
                    begin = Index; // Optimize for the common case where a string is valid.

                    while (charCode >= 32 && charCode != 92 && charCode != 34) {
                      charCode = source.charCodeAt(++Index);
                    } // Append the string as-is.


                    value += source.slice(begin, Index);
                  }
                }

                if (source.charCodeAt(Index) == 34) {
                  // Advance to the next character and return the revived string.
                  Index++;
                  return value;
                } // Unterminated string.


                abort();

              default:
                // Parse numbers and literals.
                begin = Index; // Advance past the negative sign, if one is specified.

                if (charCode == 45) {
                  isSigned = true;
                  charCode = source.charCodeAt(++Index);
                } // Parse an integer or floating-point value.


                if (charCode >= 48 && charCode <= 57) {
                  // Leading zeroes are interpreted as octal literals.
                  if (charCode == 48 && (charCode = source.charCodeAt(Index + 1), charCode >= 48 && charCode <= 57)) {
                    // Illegal octal literal.
                    abort();
                  }

                  isSigned = false; // Parse the integer component.

                  for (; Index < length && (charCode = source.charCodeAt(Index), charCode >= 48 && charCode <= 57); Index++); // Floats cannot contain a leading decimal point; however, this
                  // case is already accounted for by the parser.


                  if (source.charCodeAt(Index) == 46) {
                    position = ++Index; // Parse the decimal component.

                    for (; position < length; position++) {
                      charCode = source.charCodeAt(position);

                      if (charCode < 48 || charCode > 57) {
                        break;
                      }
                    }

                    if (position == Index) {
                      // Illegal trailing decimal.
                      abort();
                    }

                    Index = position;
                  } // Parse exponents. The `e` denoting the exponent is
                  // case-insensitive.


                  charCode = source.charCodeAt(Index);

                  if (charCode == 101 || charCode == 69) {
                    charCode = source.charCodeAt(++Index); // Skip past the sign following the exponent, if one is
                    // specified.

                    if (charCode == 43 || charCode == 45) {
                      Index++;
                    } // Parse the exponential component.


                    for (position = Index; position < length; position++) {
                      charCode = source.charCodeAt(position);

                      if (charCode < 48 || charCode > 57) {
                        break;
                      }
                    }

                    if (position == Index) {
                      // Illegal empty exponent.
                      abort();
                    }

                    Index = position;
                  } // Coerce the parsed value to a JavaScript number.


                  return +source.slice(begin, Index);
                } // A negative sign may only precede numbers.


                if (isSigned) {
                  abort();
                } // `true`, `false`, and `null` literals.


                var temp = source.slice(Index, Index + 4);

                if (temp == "true") {
                  Index += 4;
                  return true;
                } else if (temp == "fals" && source.charCodeAt(Index + 4) == 101) {
                  Index += 5;
                  return false;
                } else if (temp == "null") {
                  Index += 4;
                  return null;
                } // Unrecognized token.


                abort();
            }
          } // Return the sentinel `$` character if the parser has reached the end
          // of the source string.


          return "$";
        }; // Internal: Parses a JSON `value` token.


        var get = function (value) {
          var results, hasMembers;

          if (value == "$") {
            // Unexpected end of input.
            abort();
          }

          if (typeof value == "string") {
            if ((charIndexBuggy ? value.charAt(0) : value[0]) == "@") {
              // Remove the sentinel `@` character.
              return value.slice(1);
            } // Parse object and array literals.


            if (value == "[") {
              // Parses a JSON array, returning a new JavaScript array.
              results = [];

              for (;;) {
                value = lex(); // A closing square bracket marks the end of the array literal.

                if (value == "]") {
                  break;
                } // If the array literal contains elements, the current token
                // should be a comma separating the previous element from the
                // next.


                if (hasMembers) {
                  if (value == ",") {
                    value = lex();

                    if (value == "]") {
                      // Unexpected trailing `,` in array literal.
                      abort();
                    }
                  } else {
                    // A `,` must separate each array element.
                    abort();
                  }
                } else {
                  hasMembers = true;
                } // Elisions and leading commas are not permitted.


                if (value == ",") {
                  abort();
                }

                results.push(get(value));
              }

              return results;
            } else if (value == "{") {
              // Parses a JSON object, returning a new JavaScript object.
              results = {};

              for (;;) {
                value = lex(); // A closing curly brace marks the end of the object literal.

                if (value == "}") {
                  break;
                } // If the object literal contains members, the current token
                // should be a comma separator.


                if (hasMembers) {
                  if (value == ",") {
                    value = lex();

                    if (value == "}") {
                      // Unexpected trailing `,` in object literal.
                      abort();
                    }
                  } else {
                    // A `,` must separate each object member.
                    abort();
                  }
                } else {
                  hasMembers = true;
                } // Leading commas are not permitted, object property names must be
                // double-quoted strings, and a `:` must separate each property
                // name and value.


                if (value == "," || typeof value != "string" || (charIndexBuggy ? value.charAt(0) : value[0]) != "@" || lex() != ":") {
                  abort();
                }

                results[value.slice(1)] = get(lex());
              }

              return results;
            } // Unexpected token encountered.


            abort();
          }

          return value;
        }; // Internal: Updates a traversed object member.


        var update = function (source, property, callback) {
          var element = walk(source, property, callback);

          if (element === undefined) {
            delete source[property];
          } else {
            source[property] = element;
          }
        }; // Internal: Recursively traverses a parsed JSON object, invoking the
        // `callback` function for each value. This is an implementation of the
        // `Walk(holder, name)` operation defined in ES 5.1 section 15.12.2.


        var walk = function (source, property, callback) {
          var value = source[property],
              length;

          if (typeof value == "object" && value) {
            // `forOwn` can't be used to traverse an array in Opera <= 8.54
            // because its `Object#hasOwnProperty` implementation returns `false`
            // for array indices (e.g., `![1, 2, 3].hasOwnProperty("0")`).
            if (getClass.call(value) == arrayClass) {
              for (length = value.length; length--;) {
                update(getClass, forOwn, value, length, callback);
              }
            } else {
              forOwn(value, function (property) {
                update(value, property, callback);
              });
            }
          }

          return callback.call(source, property, value);
        }; // Public: `JSON.parse`. See ES 5.1 section 15.12.2.


        exports.parse = function (source, callback) {
          var result, value;
          Index = 0;
          Source = "" + source;
          result = get(lex()); // If a JSON string contains multiple tokens, it is invalid.

          if (lex() != "$") {
            abort();
          } // Reset the parser state.


          Index = Source = null;
          return callback && getClass.call(callback) == functionClass ? walk((value = {}, value[""] = result, value), "", callback) : result;
        };
      }
    }

    exports.runInContext = runInContext;
    return exports;
  }

  if (freeExports && !isLoader) {
    // Export for CommonJS environments.
    runInContext(root, freeExports);
  } else {
    // Export for web browsers and JavaScript engines.
    var nativeJSON = root.JSON,
        previousJSON = root.JSON3,
        isRestored = false;
    var JSON3 = runInContext(root, root.JSON3 = {
      // Public: Restores the original value of the global `JSON` object and
      // returns a reference to the `JSON3` object.
      "noConflict": function () {
        if (!isRestored) {
          isRestored = true;
          root.JSON = nativeJSON;
          root.JSON3 = previousJSON;
          nativeJSON = previousJSON = null;
        }

        return JSON3;
      }
    });
    root.JSON = {
      "parse": JSON3.parse,
      "stringify": JSON3.stringify
    };
  } // Export for asynchronous module loaders.


  if (isLoader) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return JSON3;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  }
}).call(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module), __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/load-script/index.js":
/*!*******************************************!*\
  !*** ./node_modules/load-script/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function load(src, opts, cb) {
  var head = document.head || document.getElementsByTagName('head')[0];
  var script = document.createElement('script');

  if (typeof opts === 'function') {
    cb = opts;
    opts = {};
  }

  opts = opts || {};

  cb = cb || function () {};

  script.type = opts.type || 'text/javascript';
  script.charset = opts.charset || 'utf8';
  script.async = 'async' in opts ? !!opts.async : true;
  script.src = src;

  if (opts.attrs) {
    setAttributes(script, opts.attrs);
  }

  if (opts.text) {
    script.text = '' + opts.text;
  }

  var onend = 'onload' in script ? stdOnEnd : ieOnEnd;
  onend(script, cb); // some good legacy browsers (firefox) fail the 'in' detection above
  // so as a fallback we always set onload
  // old IE will ignore this and new IE will set onload

  if (!script.onload) {
    stdOnEnd(script, cb);
  }

  head.appendChild(script);
};

function setAttributes(script, attrs) {
  for (var attr in attrs) {
    script.setAttribute(attr, attrs[attr]);
  }
}

function stdOnEnd(script, cb) {
  script.onload = function () {
    this.onerror = this.onload = null;
    cb(null, script);
  };

  script.onerror = function () {
    // this.onload = null here is necessary
    // because even IE9 works not like others
    this.onerror = this.onload = null;
    cb(new Error('Failed to load ' + this.src), script);
  };
}

function ieOnEnd(script, cb) {
  script.onreadystatechange = function () {
    if (this.readyState != 'complete' && this.readyState != 'loaded') return;
    this.onreadystatechange = null;
    cb(null, script); // there is no way to catch loading errors in IE8
  };
}

/***/ }),

/***/ "./node_modules/ms/index.js":
/*!**********************************!*\
  !*** ./node_modules/ms/index.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports) {

/**
 * Helpers.
 */
var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;
/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */

module.exports = function (val, options) {
  options = options || {};
  var type = typeof val;

  if (type === 'string' && val.length > 0) {
    return parse(val);
  } else if (type === 'number' && isFinite(val)) {
    return options.long ? fmtLong(val) : fmtShort(val);
  }

  throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
};
/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */


function parse(str) {
  str = String(str);

  if (str.length > 100) {
    return;
  }

  var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);

  if (!match) {
    return;
  }

  var n = parseFloat(match[1]);
  var type = (match[2] || 'ms').toLowerCase();

  switch (type) {
    case 'years':
    case 'year':
    case 'yrs':
    case 'yr':
    case 'y':
      return n * y;

    case 'weeks':
    case 'week':
    case 'w':
      return n * w;

    case 'days':
    case 'day':
    case 'd':
      return n * d;

    case 'hours':
    case 'hour':
    case 'hrs':
    case 'hr':
    case 'h':
      return n * h;

    case 'minutes':
    case 'minute':
    case 'mins':
    case 'min':
    case 'm':
      return n * m;

    case 'seconds':
    case 'second':
    case 'secs':
    case 'sec':
    case 's':
      return n * s;

    case 'milliseconds':
    case 'millisecond':
    case 'msecs':
    case 'msec':
    case 'ms':
      return n;

    default:
      return undefined;
  }
}
/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */


function fmtShort(ms) {
  var msAbs = Math.abs(ms);

  if (msAbs >= d) {
    return Math.round(ms / d) + 'd';
  }

  if (msAbs >= h) {
    return Math.round(ms / h) + 'h';
  }

  if (msAbs >= m) {
    return Math.round(ms / m) + 'm';
  }

  if (msAbs >= s) {
    return Math.round(ms / s) + 's';
  }

  return ms + 'ms';
}
/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */


function fmtLong(ms) {
  var msAbs = Math.abs(ms);

  if (msAbs >= d) {
    return plural(ms, msAbs, d, 'day');
  }

  if (msAbs >= h) {
    return plural(ms, msAbs, h, 'hour');
  }

  if (msAbs >= m) {
    return plural(ms, msAbs, m, 'minute');
  }

  if (msAbs >= s) {
    return plural(ms, msAbs, s, 'second');
  }

  return ms + ' ms';
}
/**
 * Pluralization helper.
 */


function plural(ms, msAbs, n, name) {
  var isPlural = msAbs >= n * 1.5;
  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}

/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js":
/*!**************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/punycode/punycode.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*! https://mths.be/punycode v1.4.1 by @mathias */
;

(function (root) {
  /** Detect free variables */
  var freeExports =  true && exports && !exports.nodeType && exports;
  var freeModule =  true && module && !module.nodeType && module;
  var freeGlobal = typeof global == 'object' && global;

  if (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal) {
    root = freeGlobal;
  }
  /**
   * The `punycode` object.
   * @name punycode
   * @type Object
   */


  var punycode,

  /** Highest positive signed 32-bit float value */
  maxInt = 2147483647,
      // aka. 0x7FFFFFFF or 2^31-1

  /** Bootstring parameters */
  base = 36,
      tMin = 1,
      tMax = 26,
      skew = 38,
      damp = 700,
      initialBias = 72,
      initialN = 128,
      // 0x80
  delimiter = '-',
      // '\x2D'

  /** Regular expressions */
  regexPunycode = /^xn--/,
      regexNonASCII = /[^\x20-\x7E]/,
      // unprintable ASCII chars + non-ASCII chars
  regexSeparators = /[\x2E\u3002\uFF0E\uFF61]/g,
      // RFC 3490 separators

  /** Error messages */
  errors = {
    'overflow': 'Overflow: input needs wider integers to process',
    'not-basic': 'Illegal input >= 0x80 (not a basic code point)',
    'invalid-input': 'Invalid input'
  },

  /** Convenience shortcuts */
  baseMinusTMin = base - tMin,
      floor = Math.floor,
      stringFromCharCode = String.fromCharCode,

  /** Temporary variable */
  key;
  /*--------------------------------------------------------------------------*/

  /**
   * A generic error utility function.
   * @private
   * @param {String} type The error type.
   * @returns {Error} Throws a `RangeError` with the applicable error message.
   */

  function error(type) {
    throw new RangeError(errors[type]);
  }
  /**
   * A generic `Array#map` utility function.
   * @private
   * @param {Array} array The array to iterate over.
   * @param {Function} callback The function that gets called for every array
   * item.
   * @returns {Array} A new array of values returned by the callback function.
   */


  function map(array, fn) {
    var length = array.length;
    var result = [];

    while (length--) {
      result[length] = fn(array[length]);
    }

    return result;
  }
  /**
   * A simple `Array#map`-like wrapper to work with domain name strings or email
   * addresses.
   * @private
   * @param {String} domain The domain name or email address.
   * @param {Function} callback The function that gets called for every
   * character.
   * @returns {Array} A new string of characters returned by the callback
   * function.
   */


  function mapDomain(string, fn) {
    var parts = string.split('@');
    var result = '';

    if (parts.length > 1) {
      // In email addresses, only the domain name should be punycoded. Leave
      // the local part (i.e. everything up to `@`) intact.
      result = parts[0] + '@';
      string = parts[1];
    } // Avoid `split(regex)` for IE8 compatibility. See #17.


    string = string.replace(regexSeparators, '\x2E');
    var labels = string.split('.');
    var encoded = map(labels, fn).join('.');
    return result + encoded;
  }
  /**
   * Creates an array containing the numeric code points of each Unicode
   * character in the string. While JavaScript uses UCS-2 internally,
   * this function will convert a pair of surrogate halves (each of which
   * UCS-2 exposes as separate characters) into a single code point,
   * matching UTF-16.
   * @see `punycode.ucs2.encode`
   * @see <https://mathiasbynens.be/notes/javascript-encoding>
   * @memberOf punycode.ucs2
   * @name decode
   * @param {String} string The Unicode input string (UCS-2).
   * @returns {Array} The new array of code points.
   */


  function ucs2decode(string) {
    var output = [],
        counter = 0,
        length = string.length,
        value,
        extra;

    while (counter < length) {
      value = string.charCodeAt(counter++);

      if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
        // high surrogate, and there is a next character
        extra = string.charCodeAt(counter++);

        if ((extra & 0xFC00) == 0xDC00) {
          // low surrogate
          output.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
        } else {
          // unmatched surrogate; only append this code unit, in case the next
          // code unit is the high surrogate of a surrogate pair
          output.push(value);
          counter--;
        }
      } else {
        output.push(value);
      }
    }

    return output;
  }
  /**
   * Creates a string based on an array of numeric code points.
   * @see `punycode.ucs2.decode`
   * @memberOf punycode.ucs2
   * @name encode
   * @param {Array} codePoints The array of numeric code points.
   * @returns {String} The new Unicode string (UCS-2).
   */


  function ucs2encode(array) {
    return map(array, function (value) {
      var output = '';

      if (value > 0xFFFF) {
        value -= 0x10000;
        output += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);
        value = 0xDC00 | value & 0x3FF;
      }

      output += stringFromCharCode(value);
      return output;
    }).join('');
  }
  /**
   * Converts a basic code point into a digit/integer.
   * @see `digitToBasic()`
   * @private
   * @param {Number} codePoint The basic numeric code point value.
   * @returns {Number} The numeric value of a basic code point (for use in
   * representing integers) in the range `0` to `base - 1`, or `base` if
   * the code point does not represent a value.
   */


  function basicToDigit(codePoint) {
    if (codePoint - 48 < 10) {
      return codePoint - 22;
    }

    if (codePoint - 65 < 26) {
      return codePoint - 65;
    }

    if (codePoint - 97 < 26) {
      return codePoint - 97;
    }

    return base;
  }
  /**
   * Converts a digit/integer into a basic code point.
   * @see `basicToDigit()`
   * @private
   * @param {Number} digit The numeric value of a basic code point.
   * @returns {Number} The basic code point whose value (when used for
   * representing integers) is `digit`, which needs to be in the range
   * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is
   * used; else, the lowercase form is used. The behavior is undefined
   * if `flag` is non-zero and `digit` has no uppercase form.
   */


  function digitToBasic(digit, flag) {
    //  0..25 map to ASCII a..z or A..Z
    // 26..35 map to ASCII 0..9
    return digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);
  }
  /**
   * Bias adaptation function as per section 3.4 of RFC 3492.
   * https://tools.ietf.org/html/rfc3492#section-3.4
   * @private
   */


  function adapt(delta, numPoints, firstTime) {
    var k = 0;
    delta = firstTime ? floor(delta / damp) : delta >> 1;
    delta += floor(delta / numPoints);

    for (;
    /* no initialization */
    delta > baseMinusTMin * tMax >> 1; k += base) {
      delta = floor(delta / baseMinusTMin);
    }

    return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
  }
  /**
   * Converts a Punycode string of ASCII-only symbols to a string of Unicode
   * symbols.
   * @memberOf punycode
   * @param {String} input The Punycode string of ASCII-only symbols.
   * @returns {String} The resulting string of Unicode symbols.
   */


  function decode(input) {
    // Don't use UCS-2
    var output = [],
        inputLength = input.length,
        out,
        i = 0,
        n = initialN,
        bias = initialBias,
        basic,
        j,
        index,
        oldi,
        w,
        k,
        digit,
        t,

    /** Cached calculation results */
    baseMinusT; // Handle the basic code points: let `basic` be the number of input code
    // points before the last delimiter, or `0` if there is none, then copy
    // the first basic code points to the output.

    basic = input.lastIndexOf(delimiter);

    if (basic < 0) {
      basic = 0;
    }

    for (j = 0; j < basic; ++j) {
      // if it's not a basic code point
      if (input.charCodeAt(j) >= 0x80) {
        error('not-basic');
      }

      output.push(input.charCodeAt(j));
    } // Main decoding loop: start just after the last delimiter if any basic code
    // points were copied; start at the beginning otherwise.


    for (index = basic > 0 ? basic + 1 : 0; index < inputLength;)
    /* no final expression */
    {
      // `index` is the index of the next character to be consumed.
      // Decode a generalized variable-length integer into `delta`,
      // which gets added to `i`. The overflow checking is easier
      // if we increase `i` as we go, then subtract off its starting
      // value at the end to obtain `delta`.
      for (oldi = i, w = 1, k = base;;
      /* no condition */
      k += base) {
        if (index >= inputLength) {
          error('invalid-input');
        }

        digit = basicToDigit(input.charCodeAt(index++));

        if (digit >= base || digit > floor((maxInt - i) / w)) {
          error('overflow');
        }

        i += digit * w;
        t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

        if (digit < t) {
          break;
        }

        baseMinusT = base - t;

        if (w > floor(maxInt / baseMinusT)) {
          error('overflow');
        }

        w *= baseMinusT;
      }

      out = output.length + 1;
      bias = adapt(i - oldi, out, oldi == 0); // `i` was supposed to wrap around from `out` to `0`,
      // incrementing `n` each time, so we'll fix that now:

      if (floor(i / out) > maxInt - n) {
        error('overflow');
      }

      n += floor(i / out);
      i %= out; // Insert `n` at position `i` of the output

      output.splice(i++, 0, n);
    }

    return ucs2encode(output);
  }
  /**
   * Converts a string of Unicode symbols (e.g. a domain name label) to a
   * Punycode string of ASCII-only symbols.
   * @memberOf punycode
   * @param {String} input The string of Unicode symbols.
   * @returns {String} The resulting Punycode string of ASCII-only symbols.
   */


  function encode(input) {
    var n,
        delta,
        handledCPCount,
        basicLength,
        bias,
        j,
        m,
        q,
        k,
        t,
        currentValue,
        output = [],

    /** `inputLength` will hold the number of code points in `input`. */
    inputLength,

    /** Cached calculation results */
    handledCPCountPlusOne,
        baseMinusT,
        qMinusT; // Convert the input in UCS-2 to Unicode

    input = ucs2decode(input); // Cache the length

    inputLength = input.length; // Initialize the state

    n = initialN;
    delta = 0;
    bias = initialBias; // Handle the basic code points

    for (j = 0; j < inputLength; ++j) {
      currentValue = input[j];

      if (currentValue < 0x80) {
        output.push(stringFromCharCode(currentValue));
      }
    }

    handledCPCount = basicLength = output.length; // `handledCPCount` is the number of code points that have been handled;
    // `basicLength` is the number of basic code points.
    // Finish the basic string - if it is not empty - with a delimiter

    if (basicLength) {
      output.push(delimiter);
    } // Main encoding loop:


    while (handledCPCount < inputLength) {
      // All non-basic code points < n have been handled already. Find the next
      // larger one:
      for (m = maxInt, j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue >= n && currentValue < m) {
          m = currentValue;
        }
      } // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,
      // but guard against overflow


      handledCPCountPlusOne = handledCPCount + 1;

      if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
        error('overflow');
      }

      delta += (m - n) * handledCPCountPlusOne;
      n = m;

      for (j = 0; j < inputLength; ++j) {
        currentValue = input[j];

        if (currentValue < n && ++delta > maxInt) {
          error('overflow');
        }

        if (currentValue == n) {
          // Represent delta as a generalized variable-length integer
          for (q = delta, k = base;;
          /* no condition */
          k += base) {
            t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;

            if (q < t) {
              break;
            }

            qMinusT = q - t;
            baseMinusT = base - t;
            output.push(stringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0)));
            q = floor(qMinusT / baseMinusT);
          }

          output.push(stringFromCharCode(digitToBasic(q, 0)));
          bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
          delta = 0;
          ++handledCPCount;
        }
      }

      ++delta;
      ++n;
    }

    return output.join('');
  }
  /**
   * Converts a Punycode string representing a domain name or an email address
   * to Unicode. Only the Punycoded parts of the input will be converted, i.e.
   * it doesn't matter if you call it on a string that has already been
   * converted to Unicode.
   * @memberOf punycode
   * @param {String} input The Punycoded domain name or email address to
   * convert to Unicode.
   * @returns {String} The Unicode representation of the given Punycode
   * string.
   */


  function toUnicode(input) {
    return mapDomain(input, function (string) {
      return regexPunycode.test(string) ? decode(string.slice(4).toLowerCase()) : string;
    });
  }
  /**
   * Converts a Unicode string representing a domain name or an email address to
   * Punycode. Only the non-ASCII parts of the domain name will be converted,
   * i.e. it doesn't matter if you call it with a domain that's already in
   * ASCII.
   * @memberOf punycode
   * @param {String} input The domain name or email address to convert, as a
   * Unicode string.
   * @returns {String} The Punycode representation of the given domain name or
   * email address.
   */


  function toASCII(input) {
    return mapDomain(input, function (string) {
      return regexNonASCII.test(string) ? 'xn--' + encode(string) : string;
    });
  }
  /*--------------------------------------------------------------------------*/

  /** Define the public API */


  punycode = {
    /**
     * A string representing the current Punycode.js version number.
     * @memberOf punycode
     * @type String
     */
    'version': '1.4.1',

    /**
     * An object of methods to convert from JavaScript's internal character
     * representation (UCS-2) to Unicode code points, and back.
     * @see <https://mathiasbynens.be/notes/javascript-encoding>
     * @memberOf punycode
     * @type Object
     */
    'ucs2': {
      'decode': ucs2decode,
      'encode': ucs2encode
    },
    'decode': decode,
    'encode': encode,
    'toASCII': toASCII,
    'toUnicode': toUnicode
  };
  /** Expose `punycode` */
  // Some AMD build optimizers, like r.js, check for specific condition patterns
  // like the following:

  if (true) {
    !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return punycode;
    }).call(exports, __webpack_require__, exports, module),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this);
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module), __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/object-assign/index.js":
/*!*********************************************!*\
  !*** ./node_modules/object-assign/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/

/* eslint-disable no-unused-vars */

var getOwnPropertySymbols = Object.getOwnPropertySymbols;
var hasOwnProperty = Object.prototype.hasOwnProperty;
var propIsEnumerable = Object.prototype.propertyIsEnumerable;

function toObject(val) {
  if (val === null || val === undefined) {
    throw new TypeError('Object.assign cannot be called with null or undefined');
  }

  return Object(val);
}

function shouldUseNative() {
  try {
    if (!Object.assign) {
      return false;
    } // Detect buggy property enumeration order in older V8 versions.
    // https://bugs.chromium.org/p/v8/issues/detail?id=4118


    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers

    test1[5] = 'de';

    if (Object.getOwnPropertyNames(test1)[0] === '5') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test2 = {};

    for (var i = 0; i < 10; i++) {
      test2['_' + String.fromCharCode(i)] = i;
    }

    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
      return test2[n];
    });

    if (order2.join('') !== '0123456789') {
      return false;
    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056


    var test3 = {};
    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
      test3[letter] = letter;
    });

    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {
      return false;
    }

    return true;
  } catch (err) {
    // We don't expect any of the above to throw, but better to be safe.
    return false;
  }
}

module.exports = shouldUseNative() ? Object.assign : function (target, source) {
  var from;
  var to = toObject(target);
  var symbols;

  for (var s = 1; s < arguments.length; s++) {
    from = Object(arguments[s]);

    for (var key in from) {
      if (hasOwnProperty.call(from, key)) {
        to[key] = from[key];
      }
    }

    if (getOwnPropertySymbols) {
      symbols = getOwnPropertySymbols(from);

      for (var i = 0; i < symbols.length; i++) {
        if (propIsEnumerable.call(from, symbols[i])) {
          to[symbols[i]] = from[symbols[i]];
        }
      }
    }
  }

  return to;
};

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {}; // cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
  throw new Error('setTimeout has not been defined');
}

function defaultClearTimeout() {
  throw new Error('clearTimeout has not been defined');
}

(function () {
  try {
    if (typeof setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
    } else {
      cachedSetTimeout = defaultSetTimout;
    }
  } catch (e) {
    cachedSetTimeout = defaultSetTimout;
  }

  try {
    if (typeof clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
    } else {
      cachedClearTimeout = defaultClearTimeout;
    }
  } catch (e) {
    cachedClearTimeout = defaultClearTimeout;
  }
})();

function runTimeout(fun) {
  if (cachedSetTimeout === setTimeout) {
    //normal enviroments in sane situations
    return setTimeout(fun, 0);
  } // if setTimeout wasn't available but was latter defined


  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
    cachedSetTimeout = setTimeout;
    return setTimeout(fun, 0);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedSetTimeout(fun, 0);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
      return cachedSetTimeout.call(null, fun, 0);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
      return cachedSetTimeout.call(this, fun, 0);
    }
  }
}

function runClearTimeout(marker) {
  if (cachedClearTimeout === clearTimeout) {
    //normal enviroments in sane situations
    return clearTimeout(marker);
  } // if clearTimeout wasn't available but was latter defined


  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
    cachedClearTimeout = clearTimeout;
    return clearTimeout(marker);
  }

  try {
    // when when somebody has screwed with setTimeout but no I.E. maddness
    return cachedClearTimeout(marker);
  } catch (e) {
    try {
      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
      return cachedClearTimeout.call(null, marker);
    } catch (e) {
      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
      // Some versions of I.E. have different rules for clearTimeout vs setTimeout
      return cachedClearTimeout.call(this, marker);
    }
  }
}

var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
  if (!draining || !currentQueue) {
    return;
  }

  draining = false;

  if (currentQueue.length) {
    queue = currentQueue.concat(queue);
  } else {
    queueIndex = -1;
  }

  if (queue.length) {
    drainQueue();
  }
}

function drainQueue() {
  if (draining) {
    return;
  }

  var timeout = runTimeout(cleanUpNextTick);
  draining = true;
  var len = queue.length;

  while (len) {
    currentQueue = queue;
    queue = [];

    while (++queueIndex < len) {
      if (currentQueue) {
        currentQueue[queueIndex].run();
      }
    }

    queueIndex = -1;
    len = queue.length;
  }

  currentQueue = null;
  draining = false;
  runClearTimeout(timeout);
}

process.nextTick = function (fun) {
  var args = new Array(arguments.length - 1);

  if (arguments.length > 1) {
    for (var i = 1; i < arguments.length; i++) {
      args[i - 1] = arguments[i];
    }
  }

  queue.push(new Item(fun, args));

  if (queue.length === 1 && !draining) {
    runTimeout(drainQueue);
  }
}; // v8 likes predictible objects


function Item(fun, array) {
  this.fun = fun;
  this.array = array;
}

Item.prototype.run = function () {
  this.fun.apply(null, this.array);
};

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues

process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) {
  return [];
};

process.binding = function (name) {
  throw new Error('process.binding is not supported');
};

process.cwd = function () {
  return '/';
};

process.chdir = function (dir) {
  throw new Error('process.chdir is not supported');
};

process.umask = function () {
  return 0;
};

/***/ }),

/***/ "./node_modules/prop-types/checkPropTypes.js":
/*!***************************************************!*\
  !*** ./node_modules/prop-types/checkPropTypes.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var printWarning = function () {};

if (true) {
  var ReactPropTypesSecret = __webpack_require__(/*! ./lib/ReactPropTypesSecret */ "./node_modules/prop-types/lib/ReactPropTypesSecret.js");

  var loggedTypeFailures = {};
  var has = Function.call.bind(Object.prototype.hasOwnProperty);

  printWarning = function (text) {
    var message = 'Warning: ' + text;

    if (typeof console !== 'undefined') {
      console.error(message);
    }

    try {
      // --- Welcome to debugging React ---
      // This error was thrown as a convenience so that you can use this stack
      // to find the callsite that caused this warning to fire.
      throw new Error(message);
    } catch (x) {}
  };
}
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */


function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
  if (true) {
    for (var typeSpecName in typeSpecs) {
      if (has(typeSpecs, typeSpecName)) {
        var error; // Prop type validation may throw. In case they do, we don't want to
        // fail the render phase where it didn't fail before. So we log it.
        // After these have been cleaned up, we'll let them throw.

        try {
          // This is intentionally an invariant that gets caught. It's the same
          // behavior as without this statement except with a better message.
          if (typeof typeSpecs[typeSpecName] !== 'function') {
            var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.');
            err.name = 'Invariant Violation';
            throw err;
          }

          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
        } catch (ex) {
          error = ex;
        }

        if (error && !(error instanceof Error)) {
          printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
        }

        if (error instanceof Error && !(error.message in loggedTypeFailures)) {
          // Only monitor this failure once because there tends to be a lot of the
          // same error.
          loggedTypeFailures[error.message] = true;
          var stack = getStack ? getStack() : '';
          printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
        }
      }
    }
  }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */


checkPropTypes.resetWarningCache = function () {
  if (true) {
    loggedTypeFailures = {};
  }
};

module.exports = checkPropTypes;

/***/ }),

/***/ "./node_modules/prop-types/lib/ReactPropTypesSecret.js":
/*!*************************************************************!*\
  !*** ./node_modules/prop-types/lib/ReactPropTypesSecret.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;

/***/ }),

/***/ "./node_modules/querystring-es3/decode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/decode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.
 // If obj.hasOwnProperty has been overridden, then calling
// obj.hasOwnProperty(prop) will break.
// See: https://github.com/joyent/node/issues/1707

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}

module.exports = function (qs, sep, eq, options) {
  sep = sep || '&';
  eq = eq || '=';
  var obj = {};

  if (typeof qs !== 'string' || qs.length === 0) {
    return obj;
  }

  var regexp = /\+/g;
  qs = qs.split(sep);
  var maxKeys = 1000;

  if (options && typeof options.maxKeys === 'number') {
    maxKeys = options.maxKeys;
  }

  var len = qs.length; // maxKeys <= 0 means that we should not limit keys count

  if (maxKeys > 0 && len > maxKeys) {
    len = maxKeys;
  }

  for (var i = 0; i < len; ++i) {
    var x = qs[i].replace(regexp, '%20'),
        idx = x.indexOf(eq),
        kstr,
        vstr,
        k,
        v;

    if (idx >= 0) {
      kstr = x.substr(0, idx);
      vstr = x.substr(idx + 1);
    } else {
      kstr = x;
      vstr = '';
    }

    k = decodeURIComponent(kstr);
    v = decodeURIComponent(vstr);

    if (!hasOwnProperty(obj, k)) {
      obj[k] = v;
    } else if (isArray(obj[k])) {
      obj[k].push(v);
    } else {
      obj[k] = [obj[k], v];
    }
  }

  return obj;
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

/***/ }),

/***/ "./node_modules/querystring-es3/encode.js":
/*!************************************************!*\
  !*** ./node_modules/querystring-es3/encode.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var stringifyPrimitive = function (v) {
  switch (typeof v) {
    case 'string':
      return v;

    case 'boolean':
      return v ? 'true' : 'false';

    case 'number':
      return isFinite(v) ? v : '';

    default:
      return '';
  }
};

module.exports = function (obj, sep, eq, name) {
  sep = sep || '&';
  eq = eq || '=';

  if (obj === null) {
    obj = undefined;
  }

  if (typeof obj === 'object') {
    return map(objectKeys(obj), function (k) {
      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;

      if (isArray(obj[k])) {
        return map(obj[k], function (v) {
          return ks + encodeURIComponent(stringifyPrimitive(v));
        }).join(sep);
      } else {
        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
      }
    }).join(sep);
  }

  if (!name) return '';
  return encodeURIComponent(stringifyPrimitive(name)) + eq + encodeURIComponent(stringifyPrimitive(obj));
};

var isArray = Array.isArray || function (xs) {
  return Object.prototype.toString.call(xs) === '[object Array]';
};

function map(xs, f) {
  if (xs.map) return xs.map(f);
  var res = [];

  for (var i = 0; i < xs.length; i++) {
    res.push(f(xs[i], i));
  }

  return res;
}

var objectKeys = Object.keys || function (obj) {
  var res = [];

  for (var key in obj) {
    if (Object.prototype.hasOwnProperty.call(obj, key)) res.push(key);
  }

  return res;
};

/***/ }),

/***/ "./node_modules/querystring-es3/index.js":
/*!***********************************************!*\
  !*** ./node_modules/querystring-es3/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.decode = exports.parse = __webpack_require__(/*! ./decode */ "./node_modules/querystring-es3/decode.js");
exports.encode = exports.stringify = __webpack_require__(/*! ./encode */ "./node_modules/querystring-es3/encode.js");

/***/ }),

/***/ "./node_modules/querystringify/index.js":
/*!**********************************************!*\
  !*** ./node_modules/querystringify/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var has = Object.prototype.hasOwnProperty,
    undef;
/**
 * Decode a URI encoded string.
 *
 * @param {String} input The URI encoded string.
 * @returns {String|Null} The decoded string.
 * @api private
 */

function decode(input) {
  try {
    return decodeURIComponent(input.replace(/\+/g, ' '));
  } catch (e) {
    return null;
  }
}
/**
 * Attempts to encode a given input.
 *
 * @param {String} input The string that needs to be encoded.
 * @returns {String|Null} The encoded string.
 * @api private
 */


function encode(input) {
  try {
    return encodeURIComponent(input);
  } catch (e) {
    return null;
  }
}
/**
 * Simple query string parser.
 *
 * @param {String} query The query string that needs to be parsed.
 * @returns {Object}
 * @api public
 */


function querystring(query) {
  var parser = /([^=?&]+)=?([^&]*)/g,
      result = {},
      part;

  while (part = parser.exec(query)) {
    var key = decode(part[1]),
        value = decode(part[2]); //
    // Prevent overriding of existing properties. This ensures that build-in
    // methods like `toString` or __proto__ are not overriden by malicious
    // querystrings.
    //
    // In the case if failed decoding, we want to omit the key/value pairs
    // from the result.
    //

    if (key === null || value === null || key in result) continue;
    result[key] = value;
  }

  return result;
}
/**
 * Transform a query string to an object.
 *
 * @param {Object} obj Object that should be transformed.
 * @param {String} prefix Optional prefix.
 * @returns {String}
 * @api public
 */


function querystringify(obj, prefix) {
  prefix = prefix || '';
  var pairs = [],
      value,
      key; //
  // Optionally prefix with a '?' if needed
  //

  if ('string' !== typeof prefix) prefix = '?';

  for (key in obj) {
    if (has.call(obj, key)) {
      value = obj[key]; //
      // Edge cases where we actually want to encode the value to an empty
      // string instead of the stringified value.
      //

      if (!value && (value === null || value === undef || isNaN(value))) {
        value = '';
      }

      key = encodeURIComponent(key);
      value = encodeURIComponent(value); //
      // If we failed to encode the strings, we should bail out as we don't
      // want to add invalid strings to the query.
      //

      if (key === null || value === null) continue;
      pairs.push(key + '=' + value);
    }
  }

  return pairs.length ? prefix + pairs.join('&') : '';
} //
// Expose the module.
//


exports.stringify = querystringify;
exports.parse = querystring;

/***/ }),

/***/ "./node_modules/react-dev-utils/formatWebpackMessages.js":
/*!***************************************************************!*\
  !*** ./node_modules/react-dev-utils/formatWebpackMessages.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


var _slicedToArray = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/slicedToArray */ "./node_modules/@babel/runtime/helpers/slicedToArray.js");

const chalk = __webpack_require__(/*! chalk */ "./node_modules/chalk/index.js");

const friendlySyntaxErrorLabel = 'Syntax error:';

function isLikelyASyntaxError(message) {
  return message.indexOf(friendlySyntaxErrorLabel) !== -1;
} // Cleans up webpack error messages.


function formatMessage(message) {
  let lines = message.split('\n'); // Strip Webpack-added headers off errors/warnings
  // https://github.com/webpack/webpack/blob/master/lib/ModuleError.js

  lines = lines.filter(line => !/Module [A-z ]+\(from/.test(line)); // Transform parsing error into syntax error
  // TODO: move this to our ESLint formatter?

  lines = lines.map(line => {
    const parsingError = /Line (\d+):(?:(\d+):)?\s*Parsing error: (.+)$/.exec(line);

    if (!parsingError) {
      return line;
    }

    const _parsingError = _slicedToArray(parsingError, 4),
          errorLine = _parsingError[1],
          errorColumn = _parsingError[2],
          errorMessage = _parsingError[3];

    return "".concat(friendlySyntaxErrorLabel, " ").concat(errorMessage, " (").concat(errorLine, ":").concat(errorColumn, ")");
  });
  message = lines.join('\n'); // Smoosh syntax errors (commonly found in CSS)

  message = message.replace(/SyntaxError\s+\((\d+):(\d+)\)\s*(.+?)\n/g, "".concat(friendlySyntaxErrorLabel, " $3 ($1:$2)\n")); // Clean up export errors

  message = message.replace(/^.*export '(.+?)' was not found in '(.+?)'.*$/gm, "Attempted import error: '$1' is not exported from '$2'.");
  message = message.replace(/^.*export 'default' \(imported as '(.+?)'\) was not found in '(.+?)'.*$/gm, "Attempted import error: '$2' does not contain a default export (imported as '$1').");
  message = message.replace(/^.*export '(.+?)' \(imported as '(.+?)'\) was not found in '(.+?)'.*$/gm, "Attempted import error: '$1' is not exported from '$3' (imported as '$2').");
  lines = message.split('\n'); // Remove leading newline

  if (lines.length > 2 && lines[1].trim() === '') {
    lines.splice(1, 1);
  } // Clean up file name


  lines[0] = lines[0].replace(/^(.*) \d+:\d+-\d+$/, '$1'); // Cleans up verbose "module not found" messages for files and packages.

  if (lines[1] && lines[1].indexOf('Module not found: ') === 0) {
    lines = [lines[0], lines[1].replace('Error: ', '').replace('Module not found: Cannot find file:', 'Cannot find file:')];
  } // Add helpful message for users trying to use Sass for the first time


  if (lines[1] && lines[1].match(/Cannot find module.+node-sass/)) {
    lines[1] = 'To import Sass files, you first need to install node-sass.\n';
    lines[1] += 'Run `npm install node-sass` or `yarn add node-sass` inside your workspace.';
  }

  lines[0] = chalk.inverse(lines[0]);
  message = lines.join('\n'); // Internal stacks are generally useless so we strip them... with the
  // exception of stacks containing `webpack:` because they're normally
  // from user code generated by Webpack. For more information see
  // https://github.com/facebook/create-react-app/pull/1050

  message = message.replace(/^\s*at\s((?!webpack:).)*:\d+:\d+[\s)]*(\n|$)/gm, ''); // at ... ...:x:y

  message = message.replace(/^\s*at\s<anonymous>(\n|$)/gm, ''); // at <anonymous>

  lines = message.split('\n'); // Remove duplicated newlines

  lines = lines.filter((line, index, arr) => index === 0 || line.trim() !== '' || line.trim() !== arr[index - 1].trim()); // Reassemble the message

  message = lines.join('\n');
  return message.trim();
}

function formatWebpackMessages(json) {
  const formattedErrors = json.errors.map(function (message) {
    return formatMessage(message, true);
  });
  const formattedWarnings = json.warnings.map(function (message) {
    return formatMessage(message, false);
  });
  const result = {
    errors: formattedErrors,
    warnings: formattedWarnings
  };

  if (result.errors.some(isLikelyASyntaxError)) {
    // If there are any syntax errors, show just them.
    result.errors = result.errors.filter(isLikelyASyntaxError);
  }

  return result;
}

module.exports = formatWebpackMessages;

/***/ }),

/***/ "./node_modules/react-dev-utils/launchEditorEndpoint.js":
/*!**************************************************************!*\
  !*** ./node_modules/react-dev-utils/launchEditorEndpoint.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
 // TODO: we might want to make this injectable to support DEV-time non-root URLs.

module.exports = '/__open-stack-frame-in-editor';

/***/ }),

/***/ "./node_modules/react-dev-utils/webpackHotDevClient.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dev-utils/webpackHotDevClient.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/**
 * Copyright (c) 2015-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
 // This alternative WebpackDevServer combines the functionality of:
// https://github.com/webpack/webpack-dev-server/blob/webpack-1/client/index.js
// https://github.com/webpack/webpack/blob/webpack-1/hot/dev-server.js
// It only supports their simplest configuration (hot updates on same server).
// It makes some opinionated choices on top, like adding a syntax error overlay
// that looks similar to our console output. The error overlay is inspired by:
// https://github.com/glenjamin/webpack-hot-middleware

var SockJS = __webpack_require__(/*! sockjs-client */ "./node_modules/sockjs-client/lib/entry.js");

var stripAnsi = __webpack_require__(/*! strip-ansi */ "./node_modules/strip-ansi/index.js");

var url = __webpack_require__(/*! url */ "./node_modules/url/url.js");

var launchEditorEndpoint = __webpack_require__(/*! ./launchEditorEndpoint */ "./node_modules/react-dev-utils/launchEditorEndpoint.js");

var formatWebpackMessages = __webpack_require__(/*! ./formatWebpackMessages */ "./node_modules/react-dev-utils/formatWebpackMessages.js");

var ErrorOverlay = __webpack_require__(/*! react-error-overlay */ "./node_modules/react-error-overlay/lib/index.js");

ErrorOverlay.setEditorHandler(function editorHandler(errorLocation) {
  // Keep this sync with errorOverlayMiddleware.js
  fetch(launchEditorEndpoint + '?fileName=' + window.encodeURIComponent(errorLocation.fileName) + '&lineNumber=' + window.encodeURIComponent(errorLocation.lineNumber || 1) + '&colNumber=' + window.encodeURIComponent(errorLocation.colNumber || 1));
}); // We need to keep track of if there has been a runtime error.
// Essentially, we cannot guarantee application state was not corrupted by the
// runtime error. To prevent confusing behavior, we forcibly reload the entire
// application. This is handled below when we are notified of a compile (code
// change).
// See https://github.com/facebook/create-react-app/issues/3096

var hadRuntimeError = false;
ErrorOverlay.startReportingRuntimeErrors({
  onError: function () {
    hadRuntimeError = true;
  },
  filename: '/static/js/bundle.js'
});

if ( true && typeof module.hot.dispose === 'function') {
  module.hot.dispose(function () {
    // TODO: why do we need this?
    ErrorOverlay.stopReportingRuntimeErrors();
  });
} // Connect to WebpackDevServer via a socket.


var connection = new SockJS(url.format({
  protocol: window.location.protocol,
  hostname: window.location.hostname,
  port: window.location.port,
  // Hardcoded in WebpackDevServer
  pathname: '/sockjs-node'
})); // Unlike WebpackDevServer client, we won't try to reconnect
// to avoid spamming the console. Disconnect usually happens
// when developer stops the server.

connection.onclose = function () {
  if (typeof console !== 'undefined' && typeof console.info === 'function') {
    console.info('The development server has disconnected.\nRefresh the page if necessary.');
  }
}; // Remember some state related to hot module replacement.


var isFirstCompilation = true;
var mostRecentCompilationHash = null;
var hasCompileErrors = false;

function clearOutdatedErrors() {
  // Clean up outdated compile errors, if any.
  if (typeof console !== 'undefined' && typeof console.clear === 'function') {
    if (hasCompileErrors) {
      console.clear();
    }
  }
} // Successful compilation.


function handleSuccess() {
  clearOutdatedErrors();
  var isHotUpdate = !isFirstCompilation;
  isFirstCompilation = false;
  hasCompileErrors = false; // Attempt to apply hot updates or reload.

  if (isHotUpdate) {
    tryApplyUpdates(function onHotUpdateSuccess() {
      // Only dismiss it when we're sure it's a hot update.
      // Otherwise it would flicker right before the reload.
      tryDismissErrorOverlay();
    });
  }
} // Compilation with warnings (e.g. ESLint).


function handleWarnings(warnings) {
  clearOutdatedErrors();
  var isHotUpdate = !isFirstCompilation;
  isFirstCompilation = false;
  hasCompileErrors = false;

  function printWarnings() {
    // Print warnings to the console.
    var formatted = formatWebpackMessages({
      warnings: warnings,
      errors: []
    });

    if (typeof console !== 'undefined' && typeof console.warn === 'function') {
      for (var i = 0; i < formatted.warnings.length; i++) {
        if (i === 5) {
          console.warn('There were more warnings in other files.\n' + 'You can find a complete log in the terminal.');
          break;
        }

        console.warn(stripAnsi(formatted.warnings[i]));
      }
    }
  }

  printWarnings(); // Attempt to apply hot updates or reload.

  if (isHotUpdate) {
    tryApplyUpdates(function onSuccessfulHotUpdate() {
      // Only dismiss it when we're sure it's a hot update.
      // Otherwise it would flicker right before the reload.
      tryDismissErrorOverlay();
    });
  }
} // Compilation with errors (e.g. syntax error or missing modules).


function handleErrors(errors) {
  clearOutdatedErrors();
  isFirstCompilation = false;
  hasCompileErrors = true; // "Massage" webpack messages.

  var formatted = formatWebpackMessages({
    errors: errors,
    warnings: []
  }); // Only show the first error.

  ErrorOverlay.reportBuildError(formatted.errors[0]); // Also log them to the console.

  if (typeof console !== 'undefined' && typeof console.error === 'function') {
    for (var i = 0; i < formatted.errors.length; i++) {
      console.error(stripAnsi(formatted.errors[i]));
    }
  } // Do not attempt to reload now.
  // We will reload on next success instead.

}

function tryDismissErrorOverlay() {
  if (!hasCompileErrors) {
    ErrorOverlay.dismissBuildError();
  }
} // There is a newer version of the code available.


function handleAvailableHash(hash) {
  // Update last known compilation hash.
  mostRecentCompilationHash = hash;
} // Handle messages from the server.


connection.onmessage = function (e) {
  var message = JSON.parse(e.data);

  switch (message.type) {
    case 'hash':
      handleAvailableHash(message.data);
      break;

    case 'still-ok':
    case 'ok':
      handleSuccess();
      break;

    case 'content-changed':
      // Triggered when a file from `contentBase` changed.
      window.location.reload();
      break;

    case 'warnings':
      handleWarnings(message.data);
      break;

    case 'errors':
      handleErrors(message.data);
      break;

    default: // Do nothing.

  }
}; // Is there a newer version of this code available?


function isUpdateAvailable() {
  /* globals __webpack_hash__ */
  // __webpack_hash__ is the hash of the current compilation.
  // It's a global variable injected by Webpack.
  return mostRecentCompilationHash !== __webpack_require__.h();
} // Webpack disallows updates in other states.


function canApplyUpdates() {
  return module.hot.status() === 'idle';
} // Attempt to update code on the fly, fall back to a hard reload.


function tryApplyUpdates(onHotUpdateSuccess) {
  if (false) {}

  if (!isUpdateAvailable() || !canApplyUpdates()) {
    return;
  }

  function handleApplyUpdates(err, updatedModules) {
    if (err || !updatedModules || hadRuntimeError) {
      window.location.reload();
      return;
    }

    if (typeof onHotUpdateSuccess === 'function') {
      // Maybe we want to do something.
      onHotUpdateSuccess();
    }

    if (isUpdateAvailable()) {
      // While we were updating, there was a new update! Do it again.
      tryApplyUpdates();
    }
  } // https://webpack.github.io/docs/hot-module-replacement.html#check


  var result = module.hot.check(
  /* autoApply */
  true, handleApplyUpdates); // // Webpack 2 returns a Promise instead of invoking a callback

  if (result && result.then) {
    result.then(function (updatedModules) {
      handleApplyUpdates(null, updatedModules);
    }, function (err) {
      handleApplyUpdates(err, null);
    });
  }
}

/***/ }),

/***/ "./node_modules/react-dom/cjs/react-dom.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/react-dom/cjs/react-dom.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.12.0
 * react-dom.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    var React = __webpack_require__(/*! react */ "./node_modules/react/index.js");

    var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

    var Scheduler = __webpack_require__(/*! scheduler */ "./node_modules/scheduler/index.js");

    var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js");

    var tracing = __webpack_require__(/*! scheduler/tracing */ "./node_modules/scheduler/tracing.js"); // Do not require this module directly! Use normal `invariant` calls with
    // template literal strings. The messages will be replaced with error codes
    // during build.

    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */


    if (!React) {
      {
        throw Error("ReactDOM was loaded before React. Make sure you load the React package before loading ReactDOM.");
      }
    }
    /**
     * Injectable ordering of event plugins.
     */


    var eventPluginOrder = null;
    /**
     * Injectable mapping from names to event plugin modules.
     */

    var namesToPlugins = {};
    /**
     * Recomputes the plugin list using the injected plugins and plugin ordering.
     *
     * @private
     */

    function recomputePluginOrdering() {
      if (!eventPluginOrder) {
        // Wait until an `eventPluginOrder` is injected.
        return;
      }

      for (var pluginName in namesToPlugins) {
        var pluginModule = namesToPlugins[pluginName];
        var pluginIndex = eventPluginOrder.indexOf(pluginName);

        if (!(pluginIndex > -1)) {
          {
            throw Error("EventPluginRegistry: Cannot inject event plugins that do not exist in the plugin ordering, `" + pluginName + "`.");
          }
        }

        if (plugins[pluginIndex]) {
          continue;
        }

        if (!pluginModule.extractEvents) {
          {
            throw Error("EventPluginRegistry: Event plugins must implement an `extractEvents` method, but `" + pluginName + "` does not.");
          }
        }

        plugins[pluginIndex] = pluginModule;
        var publishedEvents = pluginModule.eventTypes;

        for (var eventName in publishedEvents) {
          if (!publishEventForPlugin(publishedEvents[eventName], pluginModule, eventName)) {
            {
              throw Error("EventPluginRegistry: Failed to publish event `" + eventName + "` for plugin `" + pluginName + "`.");
            }
          }
        }
      }
    }
    /**
     * Publishes an event so that it can be dispatched by the supplied plugin.
     *
     * @param {object} dispatchConfig Dispatch configuration for the event.
     * @param {object} PluginModule Plugin publishing the event.
     * @return {boolean} True if the event was successfully published.
     * @private
     */


    function publishEventForPlugin(dispatchConfig, pluginModule, eventName) {
      if (!!eventNameDispatchConfigs.hasOwnProperty(eventName)) {
        {
          throw Error("EventPluginHub: More than one plugin attempted to publish the same event name, `" + eventName + "`.");
        }
      }

      eventNameDispatchConfigs[eventName] = dispatchConfig;
      var phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;

      if (phasedRegistrationNames) {
        for (var phaseName in phasedRegistrationNames) {
          if (phasedRegistrationNames.hasOwnProperty(phaseName)) {
            var phasedRegistrationName = phasedRegistrationNames[phaseName];
            publishRegistrationName(phasedRegistrationName, pluginModule, eventName);
          }
        }

        return true;
      } else if (dispatchConfig.registrationName) {
        publishRegistrationName(dispatchConfig.registrationName, pluginModule, eventName);
        return true;
      }

      return false;
    }
    /**
     * Publishes a registration name that is used to identify dispatched events.
     *
     * @param {string} registrationName Registration name to add.
     * @param {object} PluginModule Plugin publishing the event.
     * @private
     */


    function publishRegistrationName(registrationName, pluginModule, eventName) {
      if (!!registrationNameModules[registrationName]) {
        {
          throw Error("EventPluginHub: More than one plugin attempted to publish the same registration name, `" + registrationName + "`.");
        }
      }

      registrationNameModules[registrationName] = pluginModule;
      registrationNameDependencies[registrationName] = pluginModule.eventTypes[eventName].dependencies;
      {
        var lowerCasedName = registrationName.toLowerCase();
        possibleRegistrationNames[lowerCasedName] = registrationName;

        if (registrationName === 'onDoubleClick') {
          possibleRegistrationNames.ondblclick = registrationName;
        }
      }
    }
    /**
     * Registers plugins so that they can extract and dispatch events.
     *
     * @see {EventPluginHub}
     */

    /**
     * Ordered list of injected plugins.
     */


    var plugins = [];
    /**
     * Mapping from event name to dispatch config
     */

    var eventNameDispatchConfigs = {};
    /**
     * Mapping from registration name to plugin module
     */

    var registrationNameModules = {};
    /**
     * Mapping from registration name to event name
     */

    var registrationNameDependencies = {};
    /**
     * Mapping from lowercase registration names to the properly cased version,
     * used to warn in the case of missing event handlers. Available
     * only in true.
     * @type {Object}
     */

    var possibleRegistrationNames = {}; // Trust the developer to only use possibleRegistrationNames in true

    /**
     * Injects an ordering of plugins (by plugin name). This allows the ordering
     * to be decoupled from injection of the actual plugins so that ordering is
     * always deterministic regardless of packaging, on-the-fly injection, etc.
     *
     * @param {array} InjectedEventPluginOrder
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginOrder}
     */

    function injectEventPluginOrder(injectedEventPluginOrder) {
      if (!!eventPluginOrder) {
        {
          throw Error("EventPluginRegistry: Cannot inject event plugin ordering more than once. You are likely trying to load more than one copy of React.");
        }
      } // Clone the ordering so it cannot be dynamically mutated.


      eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);
      recomputePluginOrdering();
    }
    /**
     * Injects plugins to be used by `EventPluginHub`. The plugin names must be
     * in the ordering injected by `injectEventPluginOrder`.
     *
     * Plugins can be injected as part of page initialization or on-the-fly.
     *
     * @param {object} injectedNamesToPlugins Map from names to plugin modules.
     * @internal
     * @see {EventPluginHub.injection.injectEventPluginsByName}
     */


    function injectEventPluginsByName(injectedNamesToPlugins) {
      var isOrderingDirty = false;

      for (var pluginName in injectedNamesToPlugins) {
        if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {
          continue;
        }

        var pluginModule = injectedNamesToPlugins[pluginName];

        if (!namesToPlugins.hasOwnProperty(pluginName) || namesToPlugins[pluginName] !== pluginModule) {
          if (!!namesToPlugins[pluginName]) {
            {
              throw Error("EventPluginRegistry: Cannot inject two different event plugins using the same name, `" + pluginName + "`.");
            }
          }

          namesToPlugins[pluginName] = pluginModule;
          isOrderingDirty = true;
        }
      }

      if (isOrderingDirty) {
        recomputePluginOrdering();
      }
    }

    var invokeGuardedCallbackImpl = function (name, func, context, a, b, c, d, e, f) {
      var funcArgs = Array.prototype.slice.call(arguments, 3);

      try {
        func.apply(context, funcArgs);
      } catch (error) {
        this.onError(error);
      }
    };

    {
      // In DEV mode, we swap out invokeGuardedCallback for a special version
      // that plays more nicely with the browser's DevTools. The idea is to preserve
      // "Pause on exceptions" behavior. Because React wraps all user-provided
      // functions in invokeGuardedCallback, and the production version of
      // invokeGuardedCallback uses a try-catch, all user exceptions are treated
      // like caught exceptions, and the DevTools won't pause unless the developer
      // takes the extra step of enabling pause on caught exceptions. This is
      // unintuitive, though, because even though React has caught the error, from
      // the developer's perspective, the error is uncaught.
      //
      // To preserve the expected "Pause on exceptions" behavior, we don't use a
      // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake
      // DOM node, and call the user-provided callback from inside an event handler
      // for that fake event. If the callback throws, the error is "captured" using
      // a global event handler. But because the error happens in a different
      // event loop context, it does not interrupt the normal program flow.
      // Effectively, this gives us try-catch behavior without actually using
      // try-catch. Neat!
      // Check that the browser supports the APIs we need to implement our special
      // DEV version of invokeGuardedCallback
      if (typeof window !== 'undefined' && typeof window.dispatchEvent === 'function' && typeof document !== 'undefined' && typeof document.createEvent === 'function') {
        var fakeNode = document.createElement('react');

        var invokeGuardedCallbackDev = function (name, func, context, a, b, c, d, e, f) {
          // If document doesn't exist we know for sure we will crash in this method
          // when we call document.createEvent(). However this can cause confusing
          // errors: https://github.com/facebookincubator/create-react-app/issues/3482
          // So we preemptively throw with a better message instead.
          if (!(typeof document !== 'undefined')) {
            {
              throw Error("The `document` global was defined when React was initialized, but is not defined anymore. This can happen in a test environment if a component schedules an update from an asynchronous callback, but the test has already finished running. To solve this, you can either unmount the component at the end of your test (and ensure that any asynchronous operations get canceled in `componentWillUnmount`), or you can change the test itself to be asynchronous.");
            }
          }

          var evt = document.createEvent('Event'); // Keeps track of whether the user-provided callback threw an error. We
          // set this to true at the beginning, then set it to false right after
          // calling the function. If the function errors, `didError` will never be
          // set to false. This strategy works even if the browser is flaky and
          // fails to call our global error handler, because it doesn't rely on
          // the error event at all.

          var didError = true; // Keeps track of the value of window.event so that we can reset it
          // during the callback to let user code access window.event in the
          // browsers that support it.

          var windowEvent = window.event; // Keeps track of the descriptor of window.event to restore it after event
          // dispatching: https://github.com/facebook/react/issues/13688

          var windowEventDescriptor = Object.getOwnPropertyDescriptor(window, 'event'); // Create an event handler for our fake event. We will synchronously
          // dispatch our fake event using `dispatchEvent`. Inside the handler, we
          // call the user-provided callback.

          var funcArgs = Array.prototype.slice.call(arguments, 3);

          function callCallback() {
            // We immediately remove the callback from event listeners so that
            // nested `invokeGuardedCallback` calls do not clash. Otherwise, a
            // nested call would trigger the fake event handlers of any call higher
            // in the stack.
            fakeNode.removeEventListener(evtType, callCallback, false); // We check for window.hasOwnProperty('event') to prevent the
            // window.event assignment in both IE <= 10 as they throw an error
            // "Member not found" in strict mode, and in Firefox which does not
            // support window.event.

            if (typeof window.event !== 'undefined' && window.hasOwnProperty('event')) {
              window.event = windowEvent;
            }

            func.apply(context, funcArgs);
            didError = false;
          } // Create a global error event handler. We use this to capture the value
          // that was thrown. It's possible that this error handler will fire more
          // than once; for example, if non-React code also calls `dispatchEvent`
          // and a handler for that event throws. We should be resilient to most of
          // those cases. Even if our error event handler fires more than once, the
          // last error event is always used. If the callback actually does error,
          // we know that the last error event is the correct one, because it's not
          // possible for anything else to have happened in between our callback
          // erroring and the code that follows the `dispatchEvent` call below. If
          // the callback doesn't error, but the error event was fired, we know to
          // ignore it because `didError` will be false, as described above.


          var error; // Use this to track whether the error event is ever called.

          var didSetError = false;
          var isCrossOriginError = false;

          function handleWindowError(event) {
            error = event.error;
            didSetError = true;

            if (error === null && event.colno === 0 && event.lineno === 0) {
              isCrossOriginError = true;
            }

            if (event.defaultPrevented) {
              // Some other error handler has prevented default.
              // Browsers silence the error report if this happens.
              // We'll remember this to later decide whether to log it or not.
              if (error != null && typeof error === 'object') {
                try {
                  error._suppressLogging = true;
                } catch (inner) {// Ignore.
                }
              }
            }
          } // Create a fake event type.


          var evtType = "react-" + (name ? name : 'invokeguardedcallback'); // Attach our event handlers

          window.addEventListener('error', handleWindowError);
          fakeNode.addEventListener(evtType, callCallback, false); // Synchronously dispatch our fake event. If the user-provided function
          // errors, it will trigger our global error handler.

          evt.initEvent(evtType, false, false);
          fakeNode.dispatchEvent(evt);

          if (windowEventDescriptor) {
            Object.defineProperty(window, 'event', windowEventDescriptor);
          }

          if (didError) {
            if (!didSetError) {
              // The callback errored, but the error event never fired.
              error = new Error('An error was thrown inside one of your components, but React ' + "doesn't know what it was. This is likely due to browser " + 'flakiness. React does its best to preserve the "Pause on ' + 'exceptions" behavior of the DevTools, which requires some ' + "DEV-mode only tricks. It's possible that these don't work in " + 'your browser. Try triggering the error in production mode, ' + 'or switching to a modern browser. If you suspect that this is ' + 'actually an issue with React, please file an issue.');
            } else if (isCrossOriginError) {
              error = new Error("A cross-origin error was thrown. React doesn't have access to " + 'the actual error object in development. ' + 'See https://fb.me/react-crossorigin-error for more information.');
            }

            this.onError(error);
          } // Remove our event listeners


          window.removeEventListener('error', handleWindowError);
        };

        invokeGuardedCallbackImpl = invokeGuardedCallbackDev;
      }
    }
    var invokeGuardedCallbackImpl$1 = invokeGuardedCallbackImpl;
    var hasError = false;
    var caughtError = null; // Used by event system to capture/rethrow the first error.

    var hasRethrowError = false;
    var rethrowError = null;
    var reporter = {
      onError: function (error) {
        hasError = true;
        caughtError = error;
      }
    };
    /**
     * Call a function while guarding against errors that happens within it.
     * Returns an error if it throws, otherwise null.
     *
     * In production, this is implemented using a try-catch. The reason we don't
     * use a try-catch directly is so that we can swap out a different
     * implementation in DEV mode.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */

    function invokeGuardedCallback(name, func, context, a, b, c, d, e, f) {
      hasError = false;
      caughtError = null;
      invokeGuardedCallbackImpl$1.apply(reporter, arguments);
    }
    /**
     * Same as invokeGuardedCallback, but instead of returning an error, it stores
     * it in a global so it can be rethrown by `rethrowCaughtError` later.
     * TODO: See if caughtError and rethrowError can be unified.
     *
     * @param {String} name of the guard to use for logging or debugging
     * @param {Function} func The function to invoke
     * @param {*} context The context to use when calling the function
     * @param {...*} args Arguments for function
     */


    function invokeGuardedCallbackAndCatchFirstError(name, func, context, a, b, c, d, e, f) {
      invokeGuardedCallback.apply(this, arguments);

      if (hasError) {
        var error = clearCaughtError();

        if (!hasRethrowError) {
          hasRethrowError = true;
          rethrowError = error;
        }
      }
    }
    /**
     * During execution of guarded functions we will capture the first error which
     * we will rethrow to be handled by the top level error handler.
     */


    function rethrowCaughtError() {
      if (hasRethrowError) {
        var error = rethrowError;
        hasRethrowError = false;
        rethrowError = null;
        throw error;
      }
    }

    function hasCaughtError() {
      return hasError;
    }

    function clearCaughtError() {
      if (hasError) {
        var error = caughtError;
        hasError = false;
        caughtError = null;
        return error;
      } else {
        {
          {
            throw Error("clearCaughtError was called but no error was captured. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var warningWithoutStack = function () {};

    {
      warningWithoutStack = function (condition, format) {
        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        if (format === undefined) {
          throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (args.length > 8) {
          // Check before the condition to catch violations early.
          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
        }

        if (condition) {
          return;
        }

        if (typeof console !== 'undefined') {
          var argsWithFormat = args.map(function (item) {
            return '' + item;
          });
          argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
          // breaks IE9: https://github.com/facebook/react/issues/13610

          Function.prototype.apply.call(console.error, console, argsWithFormat);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          throw new Error(message);
        } catch (x) {}
      };
    }
    var warningWithoutStack$1 = warningWithoutStack;
    var getFiberCurrentPropsFromNode = null;
    var getInstanceFromNode = null;
    var getNodeFromInstance = null;

    function setComponentTree(getFiberCurrentPropsFromNodeImpl, getInstanceFromNodeImpl, getNodeFromInstanceImpl) {
      getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;
      getInstanceFromNode = getInstanceFromNodeImpl;
      getNodeFromInstance = getNodeFromInstanceImpl;
      {
        !(getNodeFromInstance && getInstanceFromNode) ? warningWithoutStack$1(false, 'EventPluginUtils.setComponentTree(...): Injected ' + 'module is missing getNodeFromInstance or getInstanceFromNode.') : void 0;
      }
    }

    var validateEventDispatches;
    {
      validateEventDispatches = function (event) {
        var dispatchListeners = event._dispatchListeners;
        var dispatchInstances = event._dispatchInstances;
        var listenersIsArr = Array.isArray(dispatchListeners);
        var listenersLen = listenersIsArr ? dispatchListeners.length : dispatchListeners ? 1 : 0;
        var instancesIsArr = Array.isArray(dispatchInstances);
        var instancesLen = instancesIsArr ? dispatchInstances.length : dispatchInstances ? 1 : 0;
        !(instancesIsArr === listenersIsArr && instancesLen === listenersLen) ? warningWithoutStack$1(false, 'EventPluginUtils: Invalid `event`.') : void 0;
      };
    }
    /**
     * Dispatch the event to the listener.
     * @param {SyntheticEvent} event SyntheticEvent to handle
     * @param {function} listener Application-level callback
     * @param {*} inst Internal component instance
     */

    function executeDispatch(event, listener, inst) {
      var type = event.type || 'unknown-event';
      event.currentTarget = getNodeFromInstance(inst);
      invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);
      event.currentTarget = null;
    }
    /**
     * Standard/simple iteration through an event's collected dispatches.
     */


    function executeDispatchesInOrder(event) {
      var dispatchListeners = event._dispatchListeners;
      var dispatchInstances = event._dispatchInstances;
      {
        validateEventDispatches(event);
      }

      if (Array.isArray(dispatchListeners)) {
        for (var i = 0; i < dispatchListeners.length; i++) {
          if (event.isPropagationStopped()) {
            break;
          } // Listeners and Instances are two parallel arrays that are always in sync.


          executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);
        }
      } else if (dispatchListeners) {
        executeDispatch(event, dispatchListeners, dispatchInstances);
      }

      event._dispatchListeners = null;
      event._dispatchInstances = null;
    }
    /**
     * @see executeDispatchesInOrderStopAtTrueImpl
     */

    /**
     * Execution of a "direct" dispatch - there must be at most one dispatch
     * accumulated on the event or it is considered an error. It doesn't really make
     * sense for an event with multiple dispatches (bubbled) to keep track of the
     * return values at each dispatch execution, but it does tend to make sense when
     * dealing with "direct" dispatches.
     *
     * @return {*} The return value of executing the single dispatch.
     */

    /**
     * @param {SyntheticEvent} event
     * @return {boolean} True iff number of dispatches accumulated is greater than 0.
     */

    /**
     * Accumulates items that must not be null or undefined into the first one. This
     * is used to conserve memory by avoiding array allocations, and thus sacrifices
     * API cleanness. Since `current` can be null before being passed in and not
     * null after this function, make sure to assign it back to `current`:
     *
     * `a = accumulateInto(a, b);`
     *
     * This API should be sparingly used. Try `accumulate` for something cleaner.
     *
     * @return {*|array<*>} An accumulation of items.
     */


    function accumulateInto(current, next) {
      if (!(next != null)) {
        {
          throw Error("accumulateInto(...): Accumulated items must not be null or undefined.");
        }
      }

      if (current == null) {
        return next;
      } // Both are not empty. Warning: Never call x.concat(y) when you are not
      // certain that x is an Array (x could be a string with concat method).


      if (Array.isArray(current)) {
        if (Array.isArray(next)) {
          current.push.apply(current, next);
          return current;
        }

        current.push(next);
        return current;
      }

      if (Array.isArray(next)) {
        // A bit too dangerous to mutate `next`.
        return [current].concat(next);
      }

      return [current, next];
    }
    /**
     * @param {array} arr an "accumulation" of items which is either an Array or
     * a single item. Useful when paired with the `accumulate` module. This is a
     * simple utility that allows us to reason about a collection of items, but
     * handling the case when there is exactly one item (and we do not need to
     * allocate an array).
     * @param {function} cb Callback invoked with each element or a collection.
     * @param {?} [scope] Scope used as `this` in a callback.
     */


    function forEachAccumulated(arr, cb, scope) {
      if (Array.isArray(arr)) {
        arr.forEach(cb, scope);
      } else if (arr) {
        cb.call(scope, arr);
      }
    }
    /**
     * Internal queue of events that have accumulated their dispatches and are
     * waiting to have their dispatches executed.
     */


    var eventQueue = null;
    /**
     * Dispatches an event and releases it back into the pool, unless persistent.
     *
     * @param {?object} event Synthetic event to be dispatched.
     * @private
     */

    var executeDispatchesAndRelease = function (event) {
      if (event) {
        executeDispatchesInOrder(event);

        if (!event.isPersistent()) {
          event.constructor.release(event);
        }
      }
    };

    var executeDispatchesAndReleaseTopLevel = function (e) {
      return executeDispatchesAndRelease(e);
    };

    function runEventsInBatch(events) {
      if (events !== null) {
        eventQueue = accumulateInto(eventQueue, events);
      } // Set `eventQueue` to null before processing it so that we can tell if more
      // events get enqueued while processing.


      var processingEventQueue = eventQueue;
      eventQueue = null;

      if (!processingEventQueue) {
        return;
      }

      forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);

      if (!!eventQueue) {
        {
          throw Error("processEventQueue(): Additional events were enqueued while processing an event queue. Support for this has not yet been implemented.");
        }
      } // This would be a good time to rethrow if any of the event handlers threw.


      rethrowCaughtError();
    }

    function isInteractive(tag) {
      return tag === 'button' || tag === 'input' || tag === 'select' || tag === 'textarea';
    }

    function shouldPreventMouseEvent(name, type, props) {
      switch (name) {
        case 'onClick':
        case 'onClickCapture':
        case 'onDoubleClick':
        case 'onDoubleClickCapture':
        case 'onMouseDown':
        case 'onMouseDownCapture':
        case 'onMouseMove':
        case 'onMouseMoveCapture':
        case 'onMouseUp':
        case 'onMouseUpCapture':
          return !!(props.disabled && isInteractive(type));

        default:
          return false;
      }
    }
    /**
     * This is a unified interface for event plugins to be installed and configured.
     *
     * Event plugins can implement the following properties:
     *
     *   `extractEvents` {function(string, DOMEventTarget, string, object): *}
     *     Required. When a top-level event is fired, this method is expected to
     *     extract synthetic events that will in turn be queued and dispatched.
     *
     *   `eventTypes` {object}
     *     Optional, plugins that fire events must publish a mapping of registration
     *     names that are used to register listeners. Values of this mapping must
     *     be objects that contain `registrationName` or `phasedRegistrationNames`.
     *
     *   `executeDispatch` {function(object, function, string)}
     *     Optional, allows plugins to override how an event gets dispatched. By
     *     default, the listener is simply invoked.
     *
     * Each plugin that is injected into `EventsPluginHub` is immediately operable.
     *
     * @public
     */

    /**
     * Methods for injecting dependencies.
     */


    var injection = {
      /**
       * @param {array} InjectedEventPluginOrder
       * @public
       */
      injectEventPluginOrder: injectEventPluginOrder,

      /**
       * @param {object} injectedNamesToPlugins Map from names to plugin modules.
       */
      injectEventPluginsByName: injectEventPluginsByName
    };
    /**
     * @param {object} inst The instance, which is the source of events.
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @return {?function} The stored callback.
     */

    function getListener(inst, registrationName) {
      var listener; // TODO: shouldPreventMouseEvent is DOM-specific and definitely should not
      // live here; needs to be moved to a better place soon

      var stateNode = inst.stateNode;

      if (!stateNode) {
        // Work in progress (ex: onload events in incremental mode).
        return null;
      }

      var props = getFiberCurrentPropsFromNode(stateNode);

      if (!props) {
        // Work in progress.
        return null;
      }

      listener = props[registrationName];

      if (shouldPreventMouseEvent(registrationName, inst.type, props)) {
        return null;
      }

      if (!(!listener || typeof listener === 'function')) {
        {
          throw Error("Expected `" + registrationName + "` listener to be a function, instead got a value of `" + typeof listener + "` type.");
        }
      }

      return listener;
    }
    /**
     * Allows registered plugins an opportunity to extract events from top-level
     * native browser events.
     *
     * @return {*} An accumulation of synthetic events.
     * @internal
     */


    function extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
      var events = null;

      for (var i = 0; i < plugins.length; i++) {
        // Not every plugin in the ordering may be loaded at runtime.
        var possiblePlugin = plugins[i];

        if (possiblePlugin) {
          var extractedEvents = possiblePlugin.extractEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);

          if (extractedEvents) {
            events = accumulateInto(events, extractedEvents);
          }
        }
      }

      return events;
    }

    function runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
      var events = extractPluginEvents(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
      runEventsInBatch(events);
    }

    var FunctionComponent = 0;
    var ClassComponent = 1;
    var IndeterminateComponent = 2; // Before we know whether it is function or class

    var HostRoot = 3; // Root of a host tree. Could be nested inside another node.

    var HostPortal = 4; // A subtree. Could be an entry point to a different renderer.

    var HostComponent = 5;
    var HostText = 6;
    var Fragment = 7;
    var Mode = 8;
    var ContextConsumer = 9;
    var ContextProvider = 10;
    var ForwardRef = 11;
    var Profiler = 12;
    var SuspenseComponent = 13;
    var MemoComponent = 14;
    var SimpleMemoComponent = 15;
    var LazyComponent = 16;
    var IncompleteClassComponent = 17;
    var DehydratedFragment = 18;
    var SuspenseListComponent = 19;
    var FundamentalComponent = 20;
    var ScopeComponent = 21;
    var ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED; // Prevent newer renderers from RTE when used with older react package versions.
    // Current owner and dispatcher used to share the same ref,
    // but PR #14548 split them out to better support the react-debug-tools package.

    if (!ReactSharedInternals.hasOwnProperty('ReactCurrentDispatcher')) {
      ReactSharedInternals.ReactCurrentDispatcher = {
        current: null
      };
    }

    if (!ReactSharedInternals.hasOwnProperty('ReactCurrentBatchConfig')) {
      ReactSharedInternals.ReactCurrentBatchConfig = {
        suspense: null
      };
    }

    var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    var describeComponentFrame = function (name, source, ownerName) {
      var sourceInfo = '';

      if (source) {
        var path = source.fileName;
        var fileName = path.replace(BEFORE_SLASH_RE, '');
        {
          // In DEV, include code for a common special case:
          // prefer "folder/index.js" instead of just "index.js".
          if (/^index\./.test(fileName)) {
            var match = path.match(BEFORE_SLASH_RE);

            if (match) {
              var pathBeforeSlash = match[1];

              if (pathBeforeSlash) {
                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                fileName = folderName + '/' + fileName;
              }
            }
          }
        }
        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
      } else if (ownerName) {
        sourceInfo = ' (created by ' + ownerName + ')';
      }

      return '\n    in ' + (name || 'Unknown') + sourceInfo;
    }; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.


    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?

    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var warning = warningWithoutStack$1;
    {
      warning = function (condition, format) {
        if (condition) {
          return;
        }

        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
      };
    }
    var warning$1 = warning;
    var Uninitialized = -1;
    var Pending = 0;
    var Resolved = 1;
    var Rejected = 2;

    function refineResolvedLazyComponent(lazyComponent) {
      return lazyComponent._status === Resolved ? lazyComponent._result : null;
    }

    function initializeLazyComponentType(lazyComponent) {
      if (lazyComponent._status === Uninitialized) {
        lazyComponent._status = Pending;
        var ctor = lazyComponent._ctor;
        var thenable = ctor();
        lazyComponent._result = thenable;
        thenable.then(function (moduleObject) {
          if (lazyComponent._status === Pending) {
            var defaultExport = moduleObject.default;
            {
              if (defaultExport === undefined) {
                warning$1(false, 'lazy: Expected the result of a dynamic import() call. ' + 'Instead received: %s\n\nYour code should look like: \n  ' + "const MyComponent = lazy(() => import('./MyComponent'))", moduleObject);
              }
            }
            lazyComponent._status = Resolved;
            lazyComponent._result = defaultExport;
          }
        }, function (error) {
          if (lazyComponent._status === Pending) {
            lazyComponent._status = Rejected;
            lazyComponent._result = error;
          }
        });
      }
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return "Profiler";

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';

        case REACT_SUSPENSE_LIST_TYPE:
          return 'SuspenseList';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            return 'Context.Consumer';

          case REACT_PROVIDER_TYPE:
            return 'Context.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_LAZY_TYPE:
            {
              var thenable = type;
              var resolvedThenable = refineResolvedLazyComponent(thenable);

              if (resolvedThenable) {
                return getComponentName(resolvedThenable);
              }

              break;
            }
        }
      }

      return null;
    }

    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;

    function describeFiber(fiber) {
      switch (fiber.tag) {
        case HostRoot:
        case HostPortal:
        case HostText:
        case Fragment:
        case ContextProvider:
        case ContextConsumer:
          return '';

        default:
          var owner = fiber._debugOwner;
          var source = fiber._debugSource;
          var name = getComponentName(fiber.type);
          var ownerName = null;

          if (owner) {
            ownerName = getComponentName(owner.type);
          }

          return describeComponentFrame(name, source, ownerName);
      }
    }

    function getStackByFiberInDevAndProd(workInProgress) {
      var info = '';
      var node = workInProgress;

      do {
        info += describeFiber(node);
        node = node.return;
      } while (node);

      return info;
    }

    var current = null;
    var phase = null;

    function getCurrentFiberOwnerNameInDevOrNull() {
      {
        if (current === null) {
          return null;
        }

        var owner = current._debugOwner;

        if (owner !== null && typeof owner !== 'undefined') {
          return getComponentName(owner.type);
        }
      }
      return null;
    }

    function getCurrentFiberStackInDev() {
      {
        if (current === null) {
          return '';
        } // Safe because if current fiber exists, we are reconciling,
        // and it is guaranteed to be the work-in-progress version.


        return getStackByFiberInDevAndProd(current);
      }
      return '';
    }

    function resetCurrentFiber() {
      {
        ReactDebugCurrentFrame.getCurrentStack = null;
        current = null;
        phase = null;
      }
    }

    function setCurrentFiber(fiber) {
      {
        ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;
        current = fiber;
        phase = null;
      }
    }

    function setCurrentPhase(lifeCyclePhase) {
      {
        phase = lifeCyclePhase;
      }
    }

    var canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');

    function endsWith(subject, search) {
      var length = subject.length;
      return subject.substring(length - search.length, length) === search;
    }

    var PLUGIN_EVENT_SYSTEM = 1;
    var RESPONDER_EVENT_SYSTEM = 1 << 1;
    var IS_PASSIVE = 1 << 2;
    var IS_ACTIVE = 1 << 3;
    var PASSIVE_NOT_SUPPORTED = 1 << 4;
    var IS_REPLAYED = 1 << 5;
    var restoreImpl = null;
    var restoreTarget = null;
    var restoreQueue = null;

    function restoreStateOfTarget(target) {
      // We perform this translation at the end of the event loop so that we
      // always receive the correct fiber here
      var internalInstance = getInstanceFromNode(target);

      if (!internalInstance) {
        // Unmounted
        return;
      }

      if (!(typeof restoreImpl === 'function')) {
        {
          throw Error("setRestoreImplementation() needs to be called to handle a target for controlled events. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      var props = getFiberCurrentPropsFromNode(internalInstance.stateNode);
      restoreImpl(internalInstance.stateNode, internalInstance.type, props);
    }

    function setRestoreImplementation(impl) {
      restoreImpl = impl;
    }

    function enqueueStateRestore(target) {
      if (restoreTarget) {
        if (restoreQueue) {
          restoreQueue.push(target);
        } else {
          restoreQueue = [target];
        }
      } else {
        restoreTarget = target;
      }
    }

    function needsStateRestore() {
      return restoreTarget !== null || restoreQueue !== null;
    }

    function restoreStateIfNeeded() {
      if (!restoreTarget) {
        return;
      }

      var target = restoreTarget;
      var queuedTargets = restoreQueue;
      restoreTarget = null;
      restoreQueue = null;
      restoreStateOfTarget(target);

      if (queuedTargets) {
        for (var i = 0; i < queuedTargets.length; i++) {
          restoreStateOfTarget(queuedTargets[i]);
        }
      }
    }

    var enableUserTimingAPI = true; // Helps identify side effects in render-phase lifecycle hooks and setState
    // reducers by double invoking them in Strict Mode.

    var debugRenderPhaseSideEffectsForStrictMode = true; // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.

    var replayFailedUnitOfWorkWithInvokeGuardedCallback = true; // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:

    var warnAboutDeprecatedLifecycles = true; // Gather advanced timing metrics for Profiler subtrees.

    var enableProfilerTimer = true; // Trace which interactions trigger each commit.

    var enableSchedulerTracing = true; // SSR experiments

    var enableSuspenseServerRenderer = false;
    var enableSelectiveHydration = false; // Only used in www builds.
    // Only used in www builds.
    // Disable javascript: URL strings in href for XSS protection.

    var disableJavaScriptURLs = false; // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties

    var disableInputAttributeSyncing = false; // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.

    var exposeConcurrentModeAPIs = false;
    var warnAboutShorthandPropertyCollision = false; // Experimental React Flare event system and event components support.

    var enableFlareAPI = false; // Experimental Host Component support.

    var enableFundamentalAPI = false; // Experimental Scope support.

    var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107
    // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
    // Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version

    var warnAboutUnmockedScheduler = false; // For tests, we flush suspense fallbacks in an act scope;
    // *except* in some of our own tests, where we test incremental loading states.

    var flushSuspenseFallbacksInTests = true; // Add a callback property to suspense to notify which promises are currently
    // in the update queue. This allows reporting and tracing of what is causing
    // the user to see a loading state.
    // Also allows hydration callbacks to fire when a dehydrated boundary gets
    // hydrated or deleted.

    var enableSuspenseCallback = false; // Part of the simplification of React.createElement so we can eventually move
    // from React.createElement to React.jsx
    // https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md

    var warnAboutDefaultPropsOnFunctionComponents = false;
    var warnAboutStringRefs = false;
    var disableLegacyContext = false;
    var disableSchedulerTimeoutBasedOnReactExpirationTime = false;
    var enableTrustedTypesIntegration = false; // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance
    // the renderer. Such as when we're dispatching events or if third party
    // libraries need to call batchedUpdates. Eventually, this API will go away when
    // everything is batched by default. We'll then have a similar API to opt-out of
    // scheduled work and instead do synchronous work.
    // Defaults

    var batchedUpdatesImpl = function (fn, bookkeeping) {
      return fn(bookkeeping);
    };

    var discreteUpdatesImpl = function (fn, a, b, c) {
      return fn(a, b, c);
    };

    var flushDiscreteUpdatesImpl = function () {};

    var batchedEventUpdatesImpl = batchedUpdatesImpl;
    var isInsideEventHandler = false;
    var isBatchingEventUpdates = false;

    function finishEventHandler() {
      // Here we wait until all updates have propagated, which is important
      // when using controlled components within layers:
      // https://github.com/facebook/react/issues/1698
      // Then we restore state of any controlled component.
      var controlledComponentsHavePendingUpdates = needsStateRestore();

      if (controlledComponentsHavePendingUpdates) {
        // If a controlled event was fired, we may need to restore the state of
        // the DOM node back to the controlled value. This is necessary when React
        // bails out of the update without touching the DOM.
        flushDiscreteUpdatesImpl();
        restoreStateIfNeeded();
      }
    }

    function batchedUpdates(fn, bookkeeping) {
      if (isInsideEventHandler) {
        // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(bookkeeping);
      }

      isInsideEventHandler = true;

      try {
        return batchedUpdatesImpl(fn, bookkeeping);
      } finally {
        isInsideEventHandler = false;
        finishEventHandler();
      }
    }

    function batchedEventUpdates(fn, a, b) {
      if (isBatchingEventUpdates) {
        // If we are currently inside another batch, we need to wait until it
        // fully completes before restoring state.
        return fn(a, b);
      }

      isBatchingEventUpdates = true;

      try {
        return batchedEventUpdatesImpl(fn, a, b);
      } finally {
        isBatchingEventUpdates = false;
        finishEventHandler();
      }
    } // This is for the React Flare event system


    function executeUserEventHandler(fn, value) {
      var previouslyInEventHandler = isInsideEventHandler;

      try {
        isInsideEventHandler = true;
        var type = typeof value === 'object' && value !== null ? value.type : '';
        invokeGuardedCallbackAndCatchFirstError(type, fn, undefined, value);
      } finally {
        isInsideEventHandler = previouslyInEventHandler;
      }
    }

    function discreteUpdates(fn, a, b, c) {
      var prevIsInsideEventHandler = isInsideEventHandler;
      isInsideEventHandler = true;

      try {
        return discreteUpdatesImpl(fn, a, b, c);
      } finally {
        isInsideEventHandler = prevIsInsideEventHandler;

        if (!isInsideEventHandler) {
          finishEventHandler();
        }
      }
    }

    var lastFlushedEventTimeStamp = 0;

    function flushDiscreteUpdatesIfNeeded(timeStamp) {
      // event.timeStamp isn't overly reliable due to inconsistencies in
      // how different browsers have historically provided the time stamp.
      // Some browsers provide high-resolution time stamps for all events,
      // some provide low-resolution time stamps for all events. FF < 52
      // even mixes both time stamps together. Some browsers even report
      // negative time stamps or time stamps that are 0 (iOS9) in some cases.
      // Given we are only comparing two time stamps with equality (!==),
      // we are safe from the resolution differences. If the time stamp is 0
      // we bail-out of preventing the flush, which can affect semantics,
      // such as if an earlier flush removes or adds event listeners that
      // are fired in the subsequent flush. However, this is the same
      // behaviour as we had before this change, so the risks are low.
      if (!isInsideEventHandler && (!enableFlareAPI || timeStamp === 0 || lastFlushedEventTimeStamp !== timeStamp)) {
        lastFlushedEventTimeStamp = timeStamp;
        flushDiscreteUpdatesImpl();
      }
    }

    function setBatchingImplementation(_batchedUpdatesImpl, _discreteUpdatesImpl, _flushDiscreteUpdatesImpl, _batchedEventUpdatesImpl) {
      batchedUpdatesImpl = _batchedUpdatesImpl;
      discreteUpdatesImpl = _discreteUpdatesImpl;
      flushDiscreteUpdatesImpl = _flushDiscreteUpdatesImpl;
      batchedEventUpdatesImpl = _batchedEventUpdatesImpl;
    }

    var DiscreteEvent = 0;
    var UserBlockingEvent = 1;
    var ContinuousEvent = 2; // CommonJS interop named imports.

    var UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var runWithPriority = Scheduler.unstable_runWithPriority;
    var listenToResponderEventTypesImpl;

    function setListenToResponderEventTypes(_listenToResponderEventTypesImpl) {
      listenToResponderEventTypesImpl = _listenToResponderEventTypesImpl;
    }

    var rootEventTypesToEventResponderInstances = new Map();
    var DoNotPropagateToNextResponder = 0;
    var PropagateToNextResponder = 1;
    var currentTimeStamp = 0;
    var currentInstance = null;
    var currentDocument = null;
    var currentPropagationBehavior = DoNotPropagateToNextResponder;
    var eventResponderContext = {
      dispatchEvent: function (eventValue, eventListener, eventPriority) {
        validateResponderContext();
        validateEventValue(eventValue);

        switch (eventPriority) {
          case DiscreteEvent:
            {
              flushDiscreteUpdatesIfNeeded(currentTimeStamp);
              discreteUpdates(function () {
                return executeUserEventHandler(eventListener, eventValue);
              });
              break;
            }

          case UserBlockingEvent:
            {
              runWithPriority(UserBlockingPriority, function () {
                return executeUserEventHandler(eventListener, eventValue);
              });
              break;
            }

          case ContinuousEvent:
            {
              executeUserEventHandler(eventListener, eventValue);
              break;
            }
        }
      },
      isTargetWithinResponder: function (target) {
        validateResponderContext();

        if (target != null) {
          var fiber = getClosestInstanceFromNode(target);
          var responderFiber = currentInstance.fiber;

          while (fiber !== null) {
            if (fiber === responderFiber || fiber.alternate === responderFiber) {
              return true;
            }

            fiber = fiber.return;
          }
        }

        return false;
      },
      isTargetWithinResponderScope: function (target) {
        validateResponderContext();
        var componentInstance = currentInstance;
        var responder = componentInstance.responder;

        if (target != null) {
          var fiber = getClosestInstanceFromNode(target);
          var responderFiber = currentInstance.fiber;

          while (fiber !== null) {
            if (fiber === responderFiber || fiber.alternate === responderFiber) {
              return true;
            }

            if (doesFiberHaveResponder(fiber, responder)) {
              return false;
            }

            fiber = fiber.return;
          }
        }

        return false;
      },
      isTargetWithinNode: function (childTarget, parentTarget) {
        validateResponderContext();
        var childFiber = getClosestInstanceFromNode(childTarget);
        var parentFiber = getClosestInstanceFromNode(parentTarget);

        if (childFiber != null && parentFiber != null) {
          var parentAlternateFiber = parentFiber.alternate;
          var node = childFiber;

          while (node !== null) {
            if (node === parentFiber || node === parentAlternateFiber) {
              return true;
            }

            node = node.return;
          }

          return false;
        } // Fallback to DOM APIs


        return parentTarget.contains(childTarget);
      },
      addRootEventTypes: function (rootEventTypes) {
        validateResponderContext();
        listenToResponderEventTypesImpl(rootEventTypes, currentDocument);

        for (var i = 0; i < rootEventTypes.length; i++) {
          var rootEventType = rootEventTypes[i];
          var eventResponderInstance = currentInstance;
          registerRootEventType(rootEventType, eventResponderInstance);
        }
      },
      removeRootEventTypes: function (rootEventTypes) {
        validateResponderContext();

        for (var i = 0; i < rootEventTypes.length; i++) {
          var rootEventType = rootEventTypes[i];
          var rootEventResponders = rootEventTypesToEventResponderInstances.get(rootEventType);
          var rootEventTypesSet = currentInstance.rootEventTypes;

          if (rootEventTypesSet !== null) {
            rootEventTypesSet.delete(rootEventType);
          }

          if (rootEventResponders !== undefined) {
            rootEventResponders.delete(currentInstance);
          }
        }
      },
      getActiveDocument: getActiveDocument,
      objectAssign: _assign,
      getTimeStamp: function () {
        validateResponderContext();
        return currentTimeStamp;
      },
      isTargetWithinHostComponent: function (target, elementType) {
        validateResponderContext();
        var fiber = getClosestInstanceFromNode(target);

        while (fiber !== null) {
          if (fiber.tag === HostComponent && fiber.type === elementType) {
            return true;
          }

          fiber = fiber.return;
        }

        return false;
      },
      continuePropagation: function () {
        currentPropagationBehavior = PropagateToNextResponder;
      },
      enqueueStateRestore: enqueueStateRestore,
      getResponderNode: function () {
        validateResponderContext();
        var responderFiber = currentInstance.fiber;

        if (responderFiber.tag === ScopeComponent) {
          return null;
        }

        return responderFiber.stateNode;
      }
    };

    function validateEventValue(eventValue) {
      if (typeof eventValue === 'object' && eventValue !== null) {
        var target = eventValue.target,
            type = eventValue.type,
            timeStamp = eventValue.timeStamp;

        if (target == null || type == null || timeStamp == null) {
          throw new Error('context.dispatchEvent: "target", "timeStamp", and "type" fields on event object are required.');
        }

        var showWarning = function (name) {
          {
            warning$1(false, '%s is not available on event objects created from event responder modules (React Flare). ' + 'Try wrapping in a conditional, i.e. `if (event.type !== "press") { event.%s }`', name, name);
          }
        };

        eventValue.isDefaultPrevented = function () {
          {
            showWarning('isDefaultPrevented()');
          }
        };

        eventValue.isPropagationStopped = function () {
          {
            showWarning('isPropagationStopped()');
          }
        }; // $FlowFixMe: we don't need value, Flow thinks we do


        Object.defineProperty(eventValue, 'nativeEvent', {
          get: function () {
            {
              showWarning('nativeEvent');
            }
          }
        });
      }
    }

    function doesFiberHaveResponder(fiber, responder) {
      var tag = fiber.tag;

      if (tag === HostComponent || tag === ScopeComponent) {
        var dependencies = fiber.dependencies;

        if (dependencies !== null) {
          var respondersMap = dependencies.responders;

          if (respondersMap !== null && respondersMap.has(responder)) {
            return true;
          }
        }
      }

      return false;
    }

    function getActiveDocument() {
      return currentDocument;
    }

    function createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, passive, passiveSupported) {
      var _ref = nativeEvent,
          buttons = _ref.buttons,
          pointerType = _ref.pointerType;
      var eventPointerType = '';

      if (pointerType !== undefined) {
        eventPointerType = pointerType;
      } else if (nativeEvent.key !== undefined) {
        eventPointerType = 'keyboard';
      } else if (buttons !== undefined) {
        eventPointerType = 'mouse';
      } else if (nativeEvent.changedTouches !== undefined) {
        eventPointerType = 'touch';
      }

      return {
        nativeEvent: nativeEvent,
        passive: passive,
        passiveSupported: passiveSupported,
        pointerType: eventPointerType,
        target: nativeEventTarget,
        type: topLevelType
      };
    }

    function responderEventTypesContainType(eventTypes, type) {
      for (var i = 0, len = eventTypes.length; i < len; i++) {
        if (eventTypes[i] === type) {
          return true;
        }
      }

      return false;
    }

    function validateResponderTargetEventTypes(eventType, responder) {
      var targetEventTypes = responder.targetEventTypes; // Validate the target event type exists on the responder

      if (targetEventTypes !== null) {
        return responderEventTypesContainType(targetEventTypes, eventType);
      }

      return false;
    }

    function traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
      var isPassiveEvent = (eventSystemFlags & IS_PASSIVE) !== 0;
      var isPassiveSupported = (eventSystemFlags & PASSIVE_NOT_SUPPORTED) === 0;
      var isPassive = isPassiveEvent || !isPassiveSupported;
      var eventType = isPassive ? topLevelType : topLevelType + '_active'; // Trigger event responders in this order:
      // - Bubble target responder phase
      // - Root responder phase

      var visitedResponders = new Set();
      var responderEvent = createDOMResponderEvent(topLevelType, nativeEvent, nativeEventTarget, isPassiveEvent, isPassiveSupported);
      var node = targetFiber;
      var insidePortal = false;

      while (node !== null) {
        var _node = node,
            dependencies = _node.dependencies,
            tag = _node.tag;

        if (tag === HostPortal) {
          insidePortal = true;
        } else if ((tag === HostComponent || tag === ScopeComponent) && dependencies !== null) {
          var respondersMap = dependencies.responders;

          if (respondersMap !== null) {
            var responderInstances = Array.from(respondersMap.values());

            for (var i = 0, length = responderInstances.length; i < length; i++) {
              var responderInstance = responderInstances[i];
              var props = responderInstance.props,
                  responder = responderInstance.responder,
                  state = responderInstance.state;

              if (!visitedResponders.has(responder) && validateResponderTargetEventTypes(eventType, responder) && (!insidePortal || responder.targetPortalPropagation)) {
                visitedResponders.add(responder);
                var onEvent = responder.onEvent;

                if (onEvent !== null) {
                  currentInstance = responderInstance;
                  onEvent(responderEvent, eventResponderContext, props, state);

                  if (currentPropagationBehavior === PropagateToNextResponder) {
                    visitedResponders.delete(responder);
                    currentPropagationBehavior = DoNotPropagateToNextResponder;
                  }
                }
              }
            }
          }
        }

        node = node.return;
      } // Root phase


      var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(eventType);

      if (rootEventResponderInstances !== undefined) {
        var _responderInstances = Array.from(rootEventResponderInstances);

        for (var _i = 0; _i < _responderInstances.length; _i++) {
          var _responderInstance = _responderInstances[_i];
          var props = _responderInstance.props,
              responder = _responderInstance.responder,
              state = _responderInstance.state;
          var onRootEvent = responder.onRootEvent;

          if (onRootEvent !== null) {
            currentInstance = _responderInstance;
            onRootEvent(responderEvent, eventResponderContext, props, state);
          }
        }
      }
    }

    function mountEventResponder(responder, responderInstance, props, state) {
      var onMount = responder.onMount;

      if (onMount !== null) {
        var previousInstance = currentInstance;
        currentInstance = responderInstance;

        try {
          batchedEventUpdates(function () {
            onMount(eventResponderContext, props, state);
          });
        } finally {
          currentInstance = previousInstance;
        }
      }
    }

    function unmountEventResponder(responderInstance) {
      var responder = responderInstance.responder;
      var onUnmount = responder.onUnmount;

      if (onUnmount !== null) {
        var props = responderInstance.props,
            state = responderInstance.state;
        var previousInstance = currentInstance;
        currentInstance = responderInstance;

        try {
          batchedEventUpdates(function () {
            onUnmount(eventResponderContext, props, state);
          });
        } finally {
          currentInstance = previousInstance;
        }
      }

      var rootEventTypesSet = responderInstance.rootEventTypes;

      if (rootEventTypesSet !== null) {
        var rootEventTypes = Array.from(rootEventTypesSet);

        for (var i = 0; i < rootEventTypes.length; i++) {
          var topLevelEventType = rootEventTypes[i];
          var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(topLevelEventType);

          if (rootEventResponderInstances !== undefined) {
            rootEventResponderInstances.delete(responderInstance);
          }
        }
      }
    }

    function validateResponderContext() {
      if (!(currentInstance !== null)) {
        {
          throw Error("An event responder context was used outside of an event cycle.");
        }
      }
    }

    function dispatchEventForResponderEventSystem(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags) {
      if (enableFlareAPI) {
        var previousInstance = currentInstance;
        var previousTimeStamp = currentTimeStamp;
        var previousDocument = currentDocument;
        var previousPropagationBehavior = currentPropagationBehavior;
        currentPropagationBehavior = DoNotPropagateToNextResponder; // nodeType 9 is DOCUMENT_NODE

        currentDocument = nativeEventTarget.nodeType === 9 ? nativeEventTarget : nativeEventTarget.ownerDocument; // We might want to control timeStamp another way here

        currentTimeStamp = nativeEvent.timeStamp;

        try {
          batchedEventUpdates(function () {
            traverseAndHandleEventResponderInstances(topLevelType, targetFiber, nativeEvent, nativeEventTarget, eventSystemFlags);
          });
        } finally {
          currentInstance = previousInstance;
          currentTimeStamp = previousTimeStamp;
          currentDocument = previousDocument;
          currentPropagationBehavior = previousPropagationBehavior;
        }
      }
    }

    function addRootEventTypesForResponderInstance(responderInstance, rootEventTypes) {
      for (var i = 0; i < rootEventTypes.length; i++) {
        var rootEventType = rootEventTypes[i];
        registerRootEventType(rootEventType, responderInstance);
      }
    }

    function registerRootEventType(rootEventType, eventResponderInstance) {
      var rootEventResponderInstances = rootEventTypesToEventResponderInstances.get(rootEventType);

      if (rootEventResponderInstances === undefined) {
        rootEventResponderInstances = new Set();
        rootEventTypesToEventResponderInstances.set(rootEventType, rootEventResponderInstances);
      }

      var rootEventTypesSet = eventResponderInstance.rootEventTypes;

      if (rootEventTypesSet === null) {
        rootEventTypesSet = eventResponderInstance.rootEventTypes = new Set();
      }

      if (!!rootEventTypesSet.has(rootEventType)) {
        {
          throw Error("addRootEventTypes() found a duplicate root event type of \"" + rootEventType + "\". This might be because the event type exists in the event responder \"rootEventTypes\" array or because of a previous addRootEventTypes() using this root event type.");
        }
      }

      rootEventTypesSet.add(rootEventType);
      rootEventResponderInstances.add(eventResponderInstance);
    } // A reserved attribute.
    // It is handled by React separately and shouldn't be written to the DOM.


    var RESERVED = 0; // A simple string attribute.
    // Attributes that aren't in the whitelist are presumed to have this type.

    var STRING = 1; // A string attribute that accepts booleans in React. In HTML, these are called
    // "enumerated" attributes with "true" and "false" as possible values.
    // When true, it should be set to a "true" string.
    // When false, it should be set to a "false" string.

    var BOOLEANISH_STRING = 2; // A real boolean attribute.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.

    var BOOLEAN = 3; // An attribute that can be used as a flag as well as with a value.
    // When true, it should be present (set either to an empty string or its name).
    // When false, it should be omitted.
    // For any other value, should be present with that value.

    var OVERLOADED_BOOLEAN = 4; // An attribute that must be numeric or parse as a numeric.
    // When falsy, it should be removed.

    var NUMERIC = 5; // An attribute that must be positive numeric or parse as a positive numeric.
    // When falsy, it should be removed.

    var POSITIVE_NUMERIC = 6;
    /* eslint-disable max-len */

    var ATTRIBUTE_NAME_START_CHAR = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD";
    /* eslint-enable max-len */

    var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + "\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040";
    var ROOT_ATTRIBUTE_NAME = 'data-reactroot';
    var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var illegalAttributeNameCache = {};
    var validatedAttributeNameCache = {};

    function isAttributeNameSafe(attributeName) {
      if (hasOwnProperty.call(validatedAttributeNameCache, attributeName)) {
        return true;
      }

      if (hasOwnProperty.call(illegalAttributeNameCache, attributeName)) {
        return false;
      }

      if (VALID_ATTRIBUTE_NAME_REGEX.test(attributeName)) {
        validatedAttributeNameCache[attributeName] = true;
        return true;
      }

      illegalAttributeNameCache[attributeName] = true;
      {
        warning$1(false, 'Invalid attribute name: `%s`', attributeName);
      }
      return false;
    }

    function shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null) {
        return propertyInfo.type === RESERVED;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (name.length > 2 && (name[0] === 'o' || name[0] === 'O') && (name[1] === 'n' || name[1] === 'N')) {
        return true;
      }

      return false;
    }

    function shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag) {
      if (propertyInfo !== null && propertyInfo.type === RESERVED) {
        return false;
      }

      switch (typeof value) {
        case 'function': // $FlowIssue symbol is perfectly valid here

        case 'symbol':
          // eslint-disable-line
          return true;

        case 'boolean':
          {
            if (isCustomComponentTag) {
              return false;
            }

            if (propertyInfo !== null) {
              return !propertyInfo.acceptsBooleans;
            } else {
              var prefix = name.toLowerCase().slice(0, 5);
              return prefix !== 'data-' && prefix !== 'aria-';
            }
          }

        default:
          return false;
      }
    }

    function shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag) {
      if (value === null || typeof value === 'undefined') {
        return true;
      }

      if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, isCustomComponentTag)) {
        return true;
      }

      if (isCustomComponentTag) {
        return false;
      }

      if (propertyInfo !== null) {
        switch (propertyInfo.type) {
          case BOOLEAN:
            return !value;

          case OVERLOADED_BOOLEAN:
            return value === false;

          case NUMERIC:
            return isNaN(value);

          case POSITIVE_NUMERIC:
            return isNaN(value) || value < 1;
        }
      }

      return false;
    }

    function getPropertyInfo(name) {
      return properties.hasOwnProperty(name) ? properties[name] : null;
    }

    function PropertyInfoRecord(name, type, mustUseProperty, attributeName, attributeNamespace, sanitizeURL) {
      this.acceptsBooleans = type === BOOLEANISH_STRING || type === BOOLEAN || type === OVERLOADED_BOOLEAN;
      this.attributeName = attributeName;
      this.attributeNamespace = attributeNamespace;
      this.mustUseProperty = mustUseProperty;
      this.propertyName = name;
      this.type = type;
      this.sanitizeURL = sanitizeURL;
    } // When adding attributes to this list, be sure to also add them to
    // the `possibleStandardNames` module to ensure casing and incorrect
    // name warnings.


    var properties = {}; // These props are reserved by React. They shouldn't be written to the DOM.

    ['children', 'dangerouslySetInnerHTML', // TODO: This prevents the assignment of defaultValue to regular
    // elements (not just inputs). Now that ReactDOMInput assigns to the
    // defaultValue property -- do we need this?
    'defaultValue', 'defaultChecked', 'innerHTML', 'suppressContentEditableWarning', 'suppressHydrationWarning', 'style'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, RESERVED, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // A few React string attributes have a different name.
    // This is a mapping from React prop names to the attribute names.

    [['acceptCharset', 'accept-charset'], ['className', 'class'], ['htmlFor', 'for'], ['httpEquiv', 'http-equiv']].forEach(function (_ref) {
      var name = _ref[0],
          attributeName = _ref[1];
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, // attributeName
      null, // attributeNamespace
      false);
    }); // These are "enumerated" HTML attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).

    ['contentEditable', 'draggable', 'spellCheck', 'value'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    }); // These are "enumerated" SVG attributes that accept "true" and "false".
    // In React, we let users pass `true` and `false` even though technically
    // these aren't boolean attributes (they are coerced to strings).
    // Since these are SVG attributes, their attribute names are case-sensitive.

    ['autoReverse', 'externalResourcesRequired', 'focusable', 'preserveAlpha'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEANISH_STRING, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML boolean attributes.

    ['allowFullScreen', 'async', // Note: there is a special case that prevents it from being written to the DOM
    // on the client side because the browsers are inconsistent. Instead we call focus().
    'autoFocus', 'autoPlay', 'controls', 'default', 'defer', 'disabled', 'disablePictureInPicture', 'formNoValidate', 'hidden', 'loop', 'noModule', 'noValidate', 'open', 'playsInline', 'readOnly', 'required', 'reversed', 'scoped', 'seamless', // Microdata
    'itemScope'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    }); // These are the few React props that we set as DOM properties
    // rather than attributes. These are all booleans.

    ['checked', // Note: `option.selected` is not updated if `select.multiple` is
    // disabled with `removeAttribute`. We have special logic for handling this.
    'multiple', 'muted', 'selected'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, BOOLEAN, true, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML attributes that are "overloaded booleans": they behave like
    // booleans, but can also accept a string value.

    ['capture', 'download'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, OVERLOADED_BOOLEAN, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML attributes that must be positive numbers.

    ['cols', 'rows', 'size', 'span'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, POSITIVE_NUMERIC, false, // mustUseProperty
      name, // attributeName
      null, // attributeNamespace
      false);
    }); // These are HTML attributes that must be numbers.

    ['rowSpan', 'start'].forEach(function (name) {
      properties[name] = new PropertyInfoRecord(name, NUMERIC, false, // mustUseProperty
      name.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    });
    var CAMELIZE = /[\-\:]([a-z])/g;

    var capitalize = function (token) {
      return token[1].toUpperCase();
    }; // This is a list of all SVG attributes that need special casing, namespacing,
    // or boolean value assignment. Regular attributes that just accept strings
    // and have the same names are omitted, just like in the HTML whitelist.
    // Some of these attributes can be hard to find. This list was created by
    // scrapping the MDN documentation.


    ['accent-height', 'alignment-baseline', 'arabic-form', 'baseline-shift', 'cap-height', 'clip-path', 'clip-rule', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'dominant-baseline', 'enable-background', 'fill-opacity', 'fill-rule', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'glyph-name', 'glyph-orientation-horizontal', 'glyph-orientation-vertical', 'horiz-adv-x', 'horiz-origin-x', 'image-rendering', 'letter-spacing', 'lighting-color', 'marker-end', 'marker-mid', 'marker-start', 'overline-position', 'overline-thickness', 'paint-order', 'panose-1', 'pointer-events', 'rendering-intent', 'shape-rendering', 'stop-color', 'stop-opacity', 'strikethrough-position', 'strikethrough-thickness', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'text-anchor', 'text-decoration', 'text-rendering', 'underline-position', 'underline-thickness', 'unicode-bidi', 'unicode-range', 'units-per-em', 'v-alphabetic', 'v-hanging', 'v-ideographic', 'v-mathematical', 'vector-effect', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'word-spacing', 'writing-mode', 'xmlns:xlink', 'x-height'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, null, // attributeNamespace
      false);
    }); // String SVG attributes with the xlink namespace.

    ['xlink:actuate', 'xlink:arcrole', 'xlink:role', 'xlink:show', 'xlink:title', 'xlink:type'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/1999/xlink', false);
    }); // String SVG attributes with the xml namespace.

    ['xml:base', 'xml:lang', 'xml:space'].forEach(function (attributeName) {
      var name = attributeName.replace(CAMELIZE, capitalize);
      properties[name] = new PropertyInfoRecord(name, STRING, false, // mustUseProperty
      attributeName, 'http://www.w3.org/XML/1998/namespace', false);
    }); // These attribute exists both in HTML and SVG.
    // The attribute name is case-sensitive in SVG so we can't just use
    // the React name like we do for attributes that exist only in HTML.

    ['tabIndex', 'crossOrigin'].forEach(function (attributeName) {
      properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
      attributeName.toLowerCase(), // attributeName
      null, // attributeNamespace
      false);
    }); // These attributes accept URLs. These must not allow javascript: URLS.
    // These will also need to accept Trusted Types object in the future.

    var xlinkHref = 'xlinkHref';
    properties[xlinkHref] = new PropertyInfoRecord('xlinkHref', STRING, false, // mustUseProperty
    'xlink:href', 'http://www.w3.org/1999/xlink', true);
    ['src', 'href', 'action', 'formAction'].forEach(function (attributeName) {
      properties[attributeName] = new PropertyInfoRecord(attributeName, STRING, false, // mustUseProperty
      attributeName.toLowerCase(), // attributeName
      null, // attributeNamespace
      true);
    });
    var ReactDebugCurrentFrame$1 = null;
    {
      ReactDebugCurrentFrame$1 = ReactSharedInternals.ReactDebugCurrentFrame;
    } // A javascript: URL can contain leading C0 control or \u0020 SPACE,
    // and any newline or tab are filtered out as if they're not part of the URL.
    // https://url.spec.whatwg.org/#url-parsing
    // Tab or newline are defined as \r\n\t:
    // https://infra.spec.whatwg.org/#ascii-tab-or-newline
    // A C0 control is a code point in the range \u0000 NULL to \u001F
    // INFORMATION SEPARATOR ONE, inclusive:
    // https://infra.spec.whatwg.org/#c0-control-or-space

    /* eslint-disable max-len */

    var isJavaScriptProtocol = /^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*\:/i;
    var didWarn = false;

    function sanitizeURL(url) {
      if (disableJavaScriptURLs) {
        if (!!isJavaScriptProtocol.test(url)) {
          {
            throw Error("React has blocked a javascript: URL as a security precaution." + ReactDebugCurrentFrame$1.getStackAddendum());
          }
        }
      } else if ( true && !didWarn && isJavaScriptProtocol.test(url)) {
        didWarn = true;
        warning$1(false, 'A future version of React will block javascript: URLs as a security precaution. ' + 'Use event handlers instead if you can. If you need to generate unsafe HTML try ' + 'using dangerouslySetInnerHTML instead. React was passed %s.', JSON.stringify(url));
      }
    } // Flow does not allow string concatenation of most non-string types. To work
    // around this limitation, we use an opaque type that can only be obtained by
    // passing the value through getToStringValue first.


    function toString(value) {
      return '' + value;
    }

    function getToStringValue(value) {
      switch (typeof value) {
        case 'boolean':
        case 'number':
        case 'object':
        case 'string':
        case 'undefined':
          return value;

        default:
          // function, symbol are assigned as empty strings
          return '';
      }
    }
    /** Trusted value is a wrapper for "safe" values which can be assigned to DOM execution sinks. */

    /**
     * We allow passing objects with toString method as element attributes or in dangerouslySetInnerHTML
     * and we do validations that the value is safe. Once we do validation we want to use the validated
     * value instead of the object (because object.toString may return something else on next call).
     *
     * If application uses Trusted Types we don't stringify trusted values, but preserve them as objects.
     */


    var toStringOrTrustedType = toString;

    if (enableTrustedTypesIntegration && typeof trustedTypes !== 'undefined') {
      toStringOrTrustedType = function (value) {
        if (typeof value === 'object' && (trustedTypes.isHTML(value) || trustedTypes.isScript(value) || trustedTypes.isScriptURL(value) ||
        /* TrustedURLs are deprecated and will be removed soon: https://github.com/WICG/trusted-types/pull/204 */
        trustedTypes.isURL && trustedTypes.isURL(value))) {
          // Pass Trusted Types through.
          return value;
        }

        return toString(value);
      };
    }
    /**
     * Set attribute for a node. The attribute value can be either string or
     * Trusted value (if application uses Trusted Types).
     */


    function setAttribute(node, attributeName, attributeValue) {
      node.setAttribute(attributeName, attributeValue);
    }
    /**
     * Set attribute with namespace for a node. The attribute value can be either string or
     * Trusted value (if application uses Trusted Types).
     */


    function setAttributeNS(node, attributeNamespace, attributeName, attributeValue) {
      node.setAttributeNS(attributeNamespace, attributeName, attributeValue);
    }
    /**
     * Get the value for a property on a node. Only used in DEV for SSR validation.
     * The "expected" argument is used as a hint of what the expected value is.
     * Some properties have multiple equivalent values.
     */


    function getValueForProperty(node, name, expected, propertyInfo) {
      {
        if (propertyInfo.mustUseProperty) {
          var propertyName = propertyInfo.propertyName;
          return node[propertyName];
        } else {
          if (!disableJavaScriptURLs && propertyInfo.sanitizeURL) {
            // If we haven't fully disabled javascript: URLs, and if
            // the hydration is successful of a javascript: URL, we
            // still want to warn on the client.
            sanitizeURL('' + expected);
          }

          var attributeName = propertyInfo.attributeName;
          var stringValue = null;

          if (propertyInfo.type === OVERLOADED_BOOLEAN) {
            if (node.hasAttribute(attributeName)) {
              var value = node.getAttribute(attributeName);

              if (value === '') {
                return true;
              }

              if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
                return value;
              }

              if (value === '' + expected) {
                return expected;
              }

              return value;
            }
          } else if (node.hasAttribute(attributeName)) {
            if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
              // We had an attribute but shouldn't have had one, so read it
              // for the error message.
              return node.getAttribute(attributeName);
            }

            if (propertyInfo.type === BOOLEAN) {
              // If this was a boolean, it doesn't matter what the value is
              // the fact that we have it is the same as the expected.
              return expected;
            } // Even if this property uses a namespace we use getAttribute
            // because we assume its namespaced name is the same as our config.
            // To use getAttributeNS we need the local name which we don't have
            // in our config atm.


            stringValue = node.getAttribute(attributeName);
          }

          if (shouldRemoveAttribute(name, expected, propertyInfo, false)) {
            return stringValue === null ? expected : stringValue;
          } else if (stringValue === '' + expected) {
            return expected;
          } else {
            return stringValue;
          }
        }
      }
    }
    /**
     * Get the value for a attribute on a node. Only used in DEV for SSR validation.
     * The third argument is used as a hint of what the expected value is. Some
     * attributes have multiple equivalent values.
     */


    function getValueForAttribute(node, name, expected) {
      {
        if (!isAttributeNameSafe(name)) {
          return;
        }

        if (!node.hasAttribute(name)) {
          return expected === undefined ? undefined : null;
        }

        var value = node.getAttribute(name);

        if (value === '' + expected) {
          return expected;
        }

        return value;
      }
    }
    /**
     * Sets the value for a property on a node.
     *
     * @param {DOMElement} node
     * @param {string} name
     * @param {*} value
     */


    function setValueForProperty(node, name, value, isCustomComponentTag) {
      var propertyInfo = getPropertyInfo(name);

      if (shouldIgnoreAttribute(name, propertyInfo, isCustomComponentTag)) {
        return;
      }

      if (shouldRemoveAttribute(name, value, propertyInfo, isCustomComponentTag)) {
        value = null;
      } // If the prop isn't in the special list, treat it as a simple attribute.


      if (isCustomComponentTag || propertyInfo === null) {
        if (isAttributeNameSafe(name)) {
          var _attributeName = name;

          if (value === null) {
            node.removeAttribute(_attributeName);
          } else {
            setAttribute(node, _attributeName, toStringOrTrustedType(value));
          }
        }

        return;
      }

      var mustUseProperty = propertyInfo.mustUseProperty;

      if (mustUseProperty) {
        var propertyName = propertyInfo.propertyName;

        if (value === null) {
          var type = propertyInfo.type;
          node[propertyName] = type === BOOLEAN ? false : '';
        } else {
          // Contrary to `setAttribute`, object properties are properly
          // `toString`ed by IE8/9.
          node[propertyName] = value;
        }

        return;
      } // The rest are treated as attributes with special cases.


      var attributeName = propertyInfo.attributeName,
          attributeNamespace = propertyInfo.attributeNamespace;

      if (value === null) {
        node.removeAttribute(attributeName);
      } else {
        var _type = propertyInfo.type;
        var attributeValue;

        if (_type === BOOLEAN || _type === OVERLOADED_BOOLEAN && value === true) {
          // If attribute type is boolean, we know for sure it won't be an execution sink
          // and we won't require Trusted Type here.
          attributeValue = '';
        } else {
          // `setAttribute` with objects becomes only `[object]` in IE8/9,
          // ('' + value) makes it output the correct toString()-value.
          attributeValue = toStringOrTrustedType(value);

          if (propertyInfo.sanitizeURL) {
            sanitizeURL(attributeValue.toString());
          }
        }

        if (attributeNamespace) {
          setAttributeNS(node, attributeNamespace, attributeName, attributeValue);
        } else {
          setAttribute(node, attributeName, attributeValue);
        }
      }
    }

    var ReactDebugCurrentFrame$2 = null;
    var ReactControlledValuePropTypes = {
      checkPropTypes: null
    };
    {
      ReactDebugCurrentFrame$2 = ReactSharedInternals.ReactDebugCurrentFrame;
      var hasReadOnlyValue = {
        button: true,
        checkbox: true,
        image: true,
        hidden: true,
        radio: true,
        reset: true,
        submit: true
      };
      var propTypes = {
        value: function (props, propName, componentName) {
          if (hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
            return null;
          }

          return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        },
        checked: function (props, propName, componentName) {
          if (props.onChange || props.readOnly || props.disabled || props[propName] == null || enableFlareAPI && props.listeners) {
            return null;
          }

          return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');
        }
      };
      /**
       * Provide a linked `value` attribute for controlled forms. You should not use
       * this outside of the ReactDOM controlled form components.
       */

      ReactControlledValuePropTypes.checkPropTypes = function (tagName, props) {
        checkPropTypes(propTypes, props, 'prop', tagName, ReactDebugCurrentFrame$2.getStackAddendum);
      };
    }

    function isCheckable(elem) {
      var type = elem.type;
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (type === 'checkbox' || type === 'radio');
    }

    function getTracker(node) {
      return node._valueTracker;
    }

    function detachTracker(node) {
      node._valueTracker = null;
    }

    function getValueFromNode(node) {
      var value = '';

      if (!node) {
        return value;
      }

      if (isCheckable(node)) {
        value = node.checked ? 'true' : 'false';
      } else {
        value = node.value;
      }

      return value;
    }

    function trackValueOnNode(node) {
      var valueField = isCheckable(node) ? 'checked' : 'value';
      var descriptor = Object.getOwnPropertyDescriptor(node.constructor.prototype, valueField);
      var currentValue = '' + node[valueField]; // if someone has already defined a value or Safari, then bail
      // and don't track value will cause over reporting of changes,
      // but it's better then a hard failure
      // (needed for certain tests that spyOn input values and Safari)

      if (node.hasOwnProperty(valueField) || typeof descriptor === 'undefined' || typeof descriptor.get !== 'function' || typeof descriptor.set !== 'function') {
        return;
      }

      var get = descriptor.get,
          set = descriptor.set;
      Object.defineProperty(node, valueField, {
        configurable: true,
        get: function () {
          return get.call(this);
        },
        set: function (value) {
          currentValue = '' + value;
          set.call(this, value);
        }
      }); // We could've passed this the first time
      // but it triggers a bug in IE11 and Edge 14/15.
      // Calling defineProperty() again should be equivalent.
      // https://github.com/facebook/react/issues/11768

      Object.defineProperty(node, valueField, {
        enumerable: descriptor.enumerable
      });
      var tracker = {
        getValue: function () {
          return currentValue;
        },
        setValue: function (value) {
          currentValue = '' + value;
        },
        stopTracking: function () {
          detachTracker(node);
          delete node[valueField];
        }
      };
      return tracker;
    }

    function track(node) {
      if (getTracker(node)) {
        return;
      } // TODO: Once it's just Fiber we can move this to node._wrapperState


      node._valueTracker = trackValueOnNode(node);
    }

    function updateValueIfChanged(node) {
      if (!node) {
        return false;
      }

      var tracker = getTracker(node); // if there is no tracker at this point it's unlikely
      // that trying again will succeed

      if (!tracker) {
        return true;
      }

      var lastValue = tracker.getValue();
      var nextValue = getValueFromNode(node);

      if (nextValue !== lastValue) {
        tracker.setValue(nextValue);
        return true;
      }

      return false;
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnValueDefaultValue = false;
    var didWarnCheckedDefaultChecked = false;
    var didWarnControlledToUncontrolled = false;
    var didWarnUncontrolledToControlled = false;

    function isControlled(props) {
      var usesChecked = props.type === 'checkbox' || props.type === 'radio';
      return usesChecked ? props.checked != null : props.value != null;
    }
    /**
     * Implements an <input> host component that allows setting these optional
     * props: `checked`, `value`, `defaultChecked`, and `defaultValue`.
     *
     * If `checked` or `value` are not supplied (or null/undefined), user actions
     * that affect the checked state or value will trigger updates to the element.
     *
     * If they are supplied (and not null/undefined), the rendered element will not
     * trigger updates to the element. Instead, the props must change in order for
     * the rendered element to be updated.
     *
     * The rendered element will be initialized as unchecked (or `defaultChecked`)
     * with an empty value (or `defaultValue`).
     *
     * See http://www.w3.org/TR/2012/WD-html5-20121025/the-input-element.html
     */


    function getHostProps(element, props) {
      var node = element;
      var checked = props.checked;

      var hostProps = _assign({}, props, {
        defaultChecked: undefined,
        defaultValue: undefined,
        value: undefined,
        checked: checked != null ? checked : node._wrapperState.initialChecked
      });

      return hostProps;
    }

    function initWrapperState(element, props) {
      {
        ReactControlledValuePropTypes.checkPropTypes('input', props);

        if (props.checked !== undefined && props.defaultChecked !== undefined && !didWarnCheckedDefaultChecked) {
          warning$1(false, '%s contains an input of type %s with both checked and defaultChecked props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the checked prop, or the defaultChecked prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnCheckedDefaultChecked = true;
        }

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue) {
          warning$1(false, '%s contains an input of type %s with both value and defaultValue props. ' + 'Input elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled input ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component', props.type);
          didWarnValueDefaultValue = true;
        }
      }
      var node = element;
      var defaultValue = props.defaultValue == null ? '' : props.defaultValue;
      node._wrapperState = {
        initialChecked: props.checked != null ? props.checked : props.defaultChecked,
        initialValue: getToStringValue(props.value != null ? props.value : defaultValue),
        controlled: isControlled(props)
      };
    }

    function updateChecked(element, props) {
      var node = element;
      var checked = props.checked;

      if (checked != null) {
        setValueForProperty(node, 'checked', checked, false);
      }
    }

    function updateWrapper(element, props) {
      var node = element;
      {
        var controlled = isControlled(props);

        if (!node._wrapperState.controlled && controlled && !didWarnUncontrolledToControlled) {
          warning$1(false, 'A component is changing an uncontrolled input of type %s to be controlled. ' + 'Input elements should not switch from uncontrolled to controlled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
          didWarnUncontrolledToControlled = true;
        }

        if (node._wrapperState.controlled && !controlled && !didWarnControlledToUncontrolled) {
          warning$1(false, 'A component is changing a controlled input of type %s to be uncontrolled. ' + 'Input elements should not switch from controlled to uncontrolled (or vice versa). ' + 'Decide between using a controlled or uncontrolled input ' + 'element for the lifetime of the component. More info: https://fb.me/react-controlled-components', props.type);
          didWarnControlledToUncontrolled = true;
        }
      }
      updateChecked(element, props);
      var value = getToStringValue(props.value);
      var type = props.type;

      if (value != null) {
        if (type === 'number') {
          if (value === 0 && node.value === '' || // We explicitly want to coerce to number here if possible.
          // eslint-disable-next-line
          node.value != value) {
            node.value = toString(value);
          }
        } else if (node.value !== toString(value)) {
          node.value = toString(value);
        }
      } else if (type === 'submit' || type === 'reset') {
        // Submit/reset inputs need the attribute removed completely to avoid
        // blank-text buttons.
        node.removeAttribute('value');
        return;
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the value attribute, React only assigns a new value
        // whenever the defaultValue React prop has changed. When not present,
        // React does nothing
        if (props.hasOwnProperty('defaultValue')) {
          setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        }
      } else {
        // When syncing the value attribute, the value comes from a cascade of
        // properties:
        //  1. The value React property
        //  2. The defaultValue React property
        //  3. Otherwise there should be no change
        if (props.hasOwnProperty('value')) {
          setDefaultValue(node, props.type, value);
        } else if (props.hasOwnProperty('defaultValue')) {
          setDefaultValue(node, props.type, getToStringValue(props.defaultValue));
        }
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the checked attribute, the attribute is directly
        // controllable from the defaultValue React property. It needs to be
        // updated as new props come in.
        if (props.defaultChecked == null) {
          node.removeAttribute('checked');
        } else {
          node.defaultChecked = !!props.defaultChecked;
        }
      } else {
        // When syncing the checked attribute, it only changes when it needs
        // to be removed, such as transitioning from a checkbox into a text input
        if (props.checked == null && props.defaultChecked != null) {
          node.defaultChecked = !!props.defaultChecked;
        }
      }
    }

    function postMountWrapper(element, props, isHydrating) {
      var node = element; // Do not assign value if it is already set. This prevents user text input
      // from being lost during SSR hydration.

      if (props.hasOwnProperty('value') || props.hasOwnProperty('defaultValue')) {
        var type = props.type;
        var isButton = type === 'submit' || type === 'reset'; // Avoid setting value attribute on submit/reset inputs as it overrides the
        // default value provided by the browser. See: #12872

        if (isButton && (props.value === undefined || props.value === null)) {
          return;
        }

        var initialValue = toString(node._wrapperState.initialValue); // Do not assign value if it is already set. This prevents user text input
        // from being lost during SSR hydration.

        if (!isHydrating) {
          if (disableInputAttributeSyncing) {
            var value = getToStringValue(props.value); // When not syncing the value attribute, the value property points
            // directly to the React prop. Only assign it if it exists.

            if (value != null) {
              // Always assign on buttons so that it is possible to assign an
              // empty string to clear button text.
              //
              // Otherwise, do not re-assign the value property if is empty. This
              // potentially avoids a DOM write and prevents Firefox (~60.0.1) from
              // prematurely marking required inputs as invalid. Equality is compared
              // to the current value in case the browser provided value is not an
              // empty string.
              if (isButton || value !== node.value) {
                node.value = toString(value);
              }
            }
          } else {
            // When syncing the value attribute, the value property should use
            // the wrapperState._initialValue property. This uses:
            //
            //   1. The value React property when present
            //   2. The defaultValue React property when present
            //   3. An empty string
            if (initialValue !== node.value) {
              node.value = initialValue;
            }
          }
        }

        if (disableInputAttributeSyncing) {
          // When not syncing the value attribute, assign the value attribute
          // directly from the defaultValue React property (when present)
          var defaultValue = getToStringValue(props.defaultValue);

          if (defaultValue != null) {
            node.defaultValue = toString(defaultValue);
          }
        } else {
          // Otherwise, the value attribute is synchronized to the property,
          // so we assign defaultValue to the same thing as the value property
          // assignment step above.
          node.defaultValue = initialValue;
        }
      } // Normally, we'd just do `node.checked = node.checked` upon initial mount, less this bug
      // this is needed to work around a chrome bug where setting defaultChecked
      // will sometimes influence the value of checked (even after detachment).
      // Reference: https://bugs.chromium.org/p/chromium/issues/detail?id=608416
      // We need to temporarily unset name to avoid disrupting radio button groups.


      var name = node.name;

      if (name !== '') {
        node.name = '';
      }

      if (disableInputAttributeSyncing) {
        // When not syncing the checked attribute, the checked property
        // never gets assigned. It must be manually set. We don't want
        // to do this when hydrating so that existing user input isn't
        // modified
        if (!isHydrating) {
          updateChecked(element, props);
        } // Only assign the checked attribute if it is defined. This saves
        // a DOM write when controlling the checked attribute isn't needed
        // (text inputs, submit/reset)


        if (props.hasOwnProperty('defaultChecked')) {
          node.defaultChecked = !node.defaultChecked;
          node.defaultChecked = !!props.defaultChecked;
        }
      } else {
        // When syncing the checked attribute, both the checked property and
        // attribute are assigned at the same time using defaultChecked. This uses:
        //
        //   1. The checked React property when present
        //   2. The defaultChecked React property when present
        //   3. Otherwise, false
        node.defaultChecked = !node.defaultChecked;
        node.defaultChecked = !!node._wrapperState.initialChecked;
      }

      if (name !== '') {
        node.name = name;
      }
    }

    function restoreControlledState$1(element, props) {
      var node = element;
      updateWrapper(node, props);
      updateNamedCousins(node, props);
    }

    function updateNamedCousins(rootNode, props) {
      var name = props.name;

      if (props.type === 'radio' && name != null) {
        var queryRoot = rootNode;

        while (queryRoot.parentNode) {
          queryRoot = queryRoot.parentNode;
        } // If `rootNode.form` was non-null, then we could try `form.elements`,
        // but that sometimes behaves strangely in IE8. We could also try using
        // `form.getElementsByName`, but that will only return direct children
        // and won't include inputs that use the HTML5 `form=` attribute. Since
        // the input might not even be in a form. It might not even be in the
        // document. Let's just use the local `querySelectorAll` to ensure we don't
        // miss anything.


        var group = queryRoot.querySelectorAll('input[name=' + JSON.stringify('' + name) + '][type="radio"]');

        for (var i = 0; i < group.length; i++) {
          var otherNode = group[i];

          if (otherNode === rootNode || otherNode.form !== rootNode.form) {
            continue;
          } // This will throw if radio buttons rendered by different copies of React
          // and the same name are rendered into the same form (same as #1939).
          // That's probably okay; we don't support it just as we don't support
          // mixing React radio buttons with non-React ones.


          var otherProps = getFiberCurrentPropsFromNode$1(otherNode);

          if (!otherProps) {
            {
              throw Error("ReactDOMInput: Mixing React and non-React radio inputs with the same `name` is not supported.");
            }
          } // We need update the tracked value on the named cousin since the value
          // was changed but the input saw no event or value set


          updateValueIfChanged(otherNode); // If this is a controlled radio button group, forcing the input that
          // was previously checked to update will cause it to be come re-checked
          // as appropriate.

          updateWrapper(otherNode, otherProps);
        }
      }
    } // In Chrome, assigning defaultValue to certain input types triggers input validation.
    // For number inputs, the display value loses trailing decimal points. For email inputs,
    // Chrome raises "The specified value <x> is not a valid email address".
    //
    // Here we check to see if the defaultValue has actually changed, avoiding these problems
    // when the user is inputting text
    //
    // https://github.com/facebook/react/issues/7253


    function setDefaultValue(node, type, value) {
      if ( // Focused number inputs synchronize on blur. See ChangeEventPlugin.js
      type !== 'number' || node.ownerDocument.activeElement !== node) {
        if (value == null) {
          node.defaultValue = toString(node._wrapperState.initialValue);
        } else if (node.defaultValue !== toString(value)) {
          node.defaultValue = toString(value);
        }
      }
    }

    var didWarnSelectedSetOnOption = false;
    var didWarnInvalidChild = false;

    function flattenChildren(children) {
      var content = ''; // Flatten children. We'll warn if they are invalid
      // during validateProps() which runs for hydration too.
      // Note that this would throw on non-element objects.
      // Elements are stringified (which is normally irrelevant
      // but matters for <fbt>).

      React.Children.forEach(children, function (child) {
        if (child == null) {
          return;
        }

        content += child; // Note: we don't warn about invalid children here.
        // Instead, this is done separately below so that
        // it happens during the hydration codepath too.
      });
      return content;
    }
    /**
     * Implements an <option> host component that warns when `selected` is set.
     */


    function validateProps(element, props) {
      {
        // This mirrors the codepath above, but runs for hydration too.
        // Warn about invalid children here so that client and hydration are consistent.
        // TODO: this seems like it could cause a DEV-only throw for hydration
        // if children contains a non-element object. We should try to avoid that.
        if (typeof props.children === 'object' && props.children !== null) {
          React.Children.forEach(props.children, function (child) {
            if (child == null) {
              return;
            }

            if (typeof child === 'string' || typeof child === 'number') {
              return;
            }

            if (typeof child.type !== 'string') {
              return;
            }

            if (!didWarnInvalidChild) {
              didWarnInvalidChild = true;
              warning$1(false, 'Only strings and numbers are supported as <option> children.');
            }
          });
        } // TODO: Remove support for `selected` in <option>.


        if (props.selected != null && !didWarnSelectedSetOnOption) {
          warning$1(false, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.');
          didWarnSelectedSetOnOption = true;
        }
      }
    }

    function postMountWrapper$1(element, props) {
      // value="" should make a value attribute (#6219)
      if (props.value != null) {
        element.setAttribute('value', toString(getToStringValue(props.value)));
      }
    }

    function getHostProps$1(element, props) {
      var hostProps = _assign({
        children: undefined
      }, props);

      var content = flattenChildren(props.children);

      if (content) {
        hostProps.children = content;
      }

      return hostProps;
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnValueDefaultValue$1;
    {
      didWarnValueDefaultValue$1 = false;
    }

    function getDeclarationErrorAddendum() {
      var ownerName = getCurrentFiberOwnerNameInDevOrNull();

      if (ownerName) {
        return '\n\nCheck the render method of `' + ownerName + '`.';
      }

      return '';
    }

    var valuePropNames = ['value', 'defaultValue'];
    /**
     * Validation function for `value` and `defaultValue`.
     */

    function checkSelectPropTypes(props) {
      ReactControlledValuePropTypes.checkPropTypes('select', props);

      for (var i = 0; i < valuePropNames.length; i++) {
        var propName = valuePropNames[i];

        if (props[propName] == null) {
          continue;
        }

        var isArray = Array.isArray(props[propName]);

        if (props.multiple && !isArray) {
          warning$1(false, 'The `%s` prop supplied to <select> must be an array if ' + '`multiple` is true.%s', propName, getDeclarationErrorAddendum());
        } else if (!props.multiple && isArray) {
          warning$1(false, 'The `%s` prop supplied to <select> must be a scalar ' + 'value if `multiple` is false.%s', propName, getDeclarationErrorAddendum());
        }
      }
    }

    function updateOptions(node, multiple, propValue, setDefaultSelected) {
      var options = node.options;

      if (multiple) {
        var selectedValues = propValue;
        var selectedValue = {};

        for (var i = 0; i < selectedValues.length; i++) {
          // Prefix to avoid chaos with special keys.
          selectedValue['$' + selectedValues[i]] = true;
        }

        for (var _i = 0; _i < options.length; _i++) {
          var selected = selectedValue.hasOwnProperty('$' + options[_i].value);

          if (options[_i].selected !== selected) {
            options[_i].selected = selected;
          }

          if (selected && setDefaultSelected) {
            options[_i].defaultSelected = true;
          }
        }
      } else {
        // Do not set `select.value` as exact behavior isn't consistent across all
        // browsers for all cases.
        var _selectedValue = toString(getToStringValue(propValue));

        var defaultSelected = null;

        for (var _i2 = 0; _i2 < options.length; _i2++) {
          if (options[_i2].value === _selectedValue) {
            options[_i2].selected = true;

            if (setDefaultSelected) {
              options[_i2].defaultSelected = true;
            }

            return;
          }

          if (defaultSelected === null && !options[_i2].disabled) {
            defaultSelected = options[_i2];
          }
        }

        if (defaultSelected !== null) {
          defaultSelected.selected = true;
        }
      }
    }
    /**
     * Implements a <select> host component that allows optionally setting the
     * props `value` and `defaultValue`. If `multiple` is false, the prop must be a
     * stringable. If `multiple` is true, the prop must be an array of stringables.
     *
     * If `value` is not supplied (or null/undefined), user actions that change the
     * selected option will trigger updates to the rendered options.
     *
     * If it is supplied (and not null/undefined), the rendered options will not
     * update in response to user actions. Instead, the `value` prop must change in
     * order for the rendered options to update.
     *
     * If `defaultValue` is provided, any options with the supplied values will be
     * selected.
     */


    function getHostProps$2(element, props) {
      return _assign({}, props, {
        value: undefined
      });
    }

    function initWrapperState$1(element, props) {
      var node = element;
      {
        checkSelectPropTypes(props);
      }
      node._wrapperState = {
        wasMultiple: !!props.multiple
      };
      {
        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValueDefaultValue$1) {
          warning$1(false, 'Select elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled select ' + 'element and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components');
          didWarnValueDefaultValue$1 = true;
        }
      }
    }

    function postMountWrapper$2(element, props) {
      var node = element;
      node.multiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (props.defaultValue != null) {
        updateOptions(node, !!props.multiple, props.defaultValue, true);
      }
    }

    function postUpdateWrapper(element, props) {
      var node = element;
      var wasMultiple = node._wrapperState.wasMultiple;
      node._wrapperState.wasMultiple = !!props.multiple;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      } else if (wasMultiple !== !!props.multiple) {
        // For simplicity, reapply `defaultValue` if `multiple` is toggled.
        if (props.defaultValue != null) {
          updateOptions(node, !!props.multiple, props.defaultValue, true);
        } else {
          // Revert the select back to its default unselected state.
          updateOptions(node, !!props.multiple, props.multiple ? [] : '', false);
        }
      }
    }

    function restoreControlledState$2(element, props) {
      var node = element;
      var value = props.value;

      if (value != null) {
        updateOptions(node, !!props.multiple, value, false);
      }
    }

    var didWarnValDefaultVal = false;
    /**
     * Implements a <textarea> host component that allows setting `value`, and
     * `defaultValue`. This differs from the traditional DOM API because value is
     * usually set as PCDATA children.
     *
     * If `value` is not supplied (or null/undefined), user actions that affect the
     * value will trigger updates to the element.
     *
     * If `value` is supplied (and not null/undefined), the rendered element will
     * not trigger updates to the element. Instead, the `value` prop must change in
     * order for the rendered element to be updated.
     *
     * The rendered element will be initialized with an empty value, the prop
     * `defaultValue` if specified, or the children content (deprecated).
     */

    function getHostProps$3(element, props) {
      var node = element;

      if (!(props.dangerouslySetInnerHTML == null)) {
        {
          throw Error("`dangerouslySetInnerHTML` does not make sense on <textarea>.");
        }
      } // Always set children to the same thing. In IE9, the selection range will
      // get reset if `textContent` is mutated.  We could add a check in setTextContent
      // to only set the value if/when the value differs from the node value (which would
      // completely solve this IE9 bug), but Sebastian+Sophie seemed to like this
      // solution. The value can be a boolean or object so that's why it's forced
      // to be a string.


      var hostProps = _assign({}, props, {
        value: undefined,
        defaultValue: undefined,
        children: toString(node._wrapperState.initialValue)
      });

      return hostProps;
    }

    function initWrapperState$2(element, props) {
      var node = element;
      {
        ReactControlledValuePropTypes.checkPropTypes('textarea', props);

        if (props.value !== undefined && props.defaultValue !== undefined && !didWarnValDefaultVal) {
          warning$1(false, '%s contains a textarea with both value and defaultValue props. ' + 'Textarea elements must be either controlled or uncontrolled ' + '(specify either the value prop, or the defaultValue prop, but not ' + 'both). Decide between using a controlled or uncontrolled textarea ' + 'and remove one of these props. More info: ' + 'https://fb.me/react-controlled-components', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnValDefaultVal = true;
        }
      }
      var initialValue = props.value; // Only bother fetching default value if we're going to use it

      if (initialValue == null) {
        var defaultValue = props.defaultValue; // TODO (yungsters): Remove support for children content in <textarea>.

        var children = props.children;

        if (children != null) {
          {
            warning$1(false, 'Use the `defaultValue` or `value` props instead of setting ' + 'children on <textarea>.');
          }

          if (!(defaultValue == null)) {
            {
              throw Error("If you supply `defaultValue` on a <textarea>, do not pass children.");
            }
          }

          if (Array.isArray(children)) {
            if (!(children.length <= 1)) {
              {
                throw Error("<textarea> can only have at most one child.");
              }
            }

            children = children[0];
          }

          defaultValue = children;
        }

        if (defaultValue == null) {
          defaultValue = '';
        }

        initialValue = defaultValue;
      }

      node._wrapperState = {
        initialValue: getToStringValue(initialValue)
      };
    }

    function updateWrapper$1(element, props) {
      var node = element;
      var value = getToStringValue(props.value);
      var defaultValue = getToStringValue(props.defaultValue);

      if (value != null) {
        // Cast `value` to a string to ensure the value is set correctly. While
        // browsers typically do this as necessary, jsdom doesn't.
        var newValue = toString(value); // To avoid side effects (such as losing text selection), only set value if changed

        if (newValue !== node.value) {
          node.value = newValue;
        }

        if (props.defaultValue == null && node.defaultValue !== newValue) {
          node.defaultValue = newValue;
        }
      }

      if (defaultValue != null) {
        node.defaultValue = toString(defaultValue);
      }
    }

    function postMountWrapper$3(element, props) {
      var node = element; // This is in postMount because we need access to the DOM node, which is not
      // available until after the component has mounted.

      var textContent = node.textContent; // Only set node.value if textContent is equal to the expected
      // initial value. In IE10/IE11 there is a bug where the placeholder attribute
      // will populate textContent as well.
      // https://developer.microsoft.com/microsoft-edge/platform/issues/101525/

      if (textContent === node._wrapperState.initialValue) {
        if (textContent !== '' && textContent !== null) {
          node.value = textContent;
        }
      }
    }

    function restoreControlledState$3(element, props) {
      // DOM component is still mounted; update
      updateWrapper$1(element, props);
    }

    var HTML_NAMESPACE$1 = 'http://www.w3.org/1999/xhtml';
    var MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';
    var SVG_NAMESPACE = 'http://www.w3.org/2000/svg';
    var Namespaces = {
      html: HTML_NAMESPACE$1,
      mathml: MATH_NAMESPACE,
      svg: SVG_NAMESPACE
    }; // Assumes there is no parent namespace.

    function getIntrinsicNamespace(type) {
      switch (type) {
        case 'svg':
          return SVG_NAMESPACE;

        case 'math':
          return MATH_NAMESPACE;

        default:
          return HTML_NAMESPACE$1;
      }
    }

    function getChildNamespace(parentNamespace, type) {
      if (parentNamespace == null || parentNamespace === HTML_NAMESPACE$1) {
        // No (or default) parent namespace: potential entry point.
        return getIntrinsicNamespace(type);
      }

      if (parentNamespace === SVG_NAMESPACE && type === 'foreignObject') {
        // We're leaving SVG.
        return HTML_NAMESPACE$1;
      } // By default, pass namespace below.


      return parentNamespace;
    }
    /* globals MSApp */

    /**
     * Create a function which has 'unsafe' privileges (required by windows8 apps)
     */


    var createMicrosoftUnsafeLocalFunction = function (func) {
      if (typeof MSApp !== 'undefined' && MSApp.execUnsafeLocalFunction) {
        return function (arg0, arg1, arg2, arg3) {
          MSApp.execUnsafeLocalFunction(function () {
            return func(arg0, arg1, arg2, arg3);
          });
        };
      } else {
        return func;
      }
    };

    var reusableSVGContainer;
    /**
     * Set the innerHTML property of a node
     *
     * @param {DOMElement} node
     * @param {string} html
     * @internal
     */

    var setInnerHTML = createMicrosoftUnsafeLocalFunction(function (node, html) {
      if (node.namespaceURI === Namespaces.svg) {
        {
          if (enableTrustedTypesIntegration) {
            // TODO: reconsider the text of this warning and when it should show
            // before enabling the feature flag.
            !(typeof trustedTypes === 'undefined') ? warning$1(false, "Using 'dangerouslySetInnerHTML' in an svg element with " + 'Trusted Types enabled in an Internet Explorer will cause ' + 'the trusted value to be converted to string. Assigning string ' + "to 'innerHTML' will throw an error if Trusted Types are enforced. " + "You can try to wrap your svg element inside a div and use 'dangerouslySetInnerHTML' " + 'on the enclosing div instead.') : void 0;
          }
        }

        if (!('innerHTML' in node)) {
          // IE does not have innerHTML for SVG nodes, so instead we inject the
          // new markup in a temp node and then move the child nodes across into
          // the target node
          reusableSVGContainer = reusableSVGContainer || document.createElement('div');
          reusableSVGContainer.innerHTML = '<svg>' + html.valueOf().toString() + '</svg>';
          var svgNode = reusableSVGContainer.firstChild;

          while (node.firstChild) {
            node.removeChild(node.firstChild);
          }

          while (svgNode.firstChild) {
            node.appendChild(svgNode.firstChild);
          }

          return;
        }
      }

      node.innerHTML = html;
    });
    /**
     * HTML nodeType values that represent the type of the node
     */

    var ELEMENT_NODE = 1;
    var TEXT_NODE = 3;
    var COMMENT_NODE = 8;
    var DOCUMENT_NODE = 9;
    var DOCUMENT_FRAGMENT_NODE = 11;
    /**
     * Set the textContent property of a node. For text updates, it's faster
     * to set the `nodeValue` of the Text node directly instead of using
     * `.textContent` which will remove the existing node and create a new one.
     *
     * @param {DOMElement} node
     * @param {string} text
     * @internal
     */

    var setTextContent = function (node, text) {
      if (text) {
        var firstChild = node.firstChild;

        if (firstChild && firstChild === node.lastChild && firstChild.nodeType === TEXT_NODE) {
          firstChild.nodeValue = text;
          return;
        }
      }

      node.textContent = text;
    }; // Do not use the below two methods directly!
    // Instead use constants exported from DOMTopLevelEventTypes in ReactDOM.
    // (It is the only module that is allowed to access these methods.)


    function unsafeCastStringToDOMTopLevelType(topLevelType) {
      return topLevelType;
    }

    function unsafeCastDOMTopLevelTypeToString(topLevelType) {
      return topLevelType;
    }
    /**
     * Generate a mapping of standard vendor prefixes using the defined style property and event name.
     *
     * @param {string} styleProp
     * @param {string} eventName
     * @returns {object}
     */


    function makePrefixMap(styleProp, eventName) {
      var prefixes = {};
      prefixes[styleProp.toLowerCase()] = eventName.toLowerCase();
      prefixes['Webkit' + styleProp] = 'webkit' + eventName;
      prefixes['Moz' + styleProp] = 'moz' + eventName;
      return prefixes;
    }
    /**
     * A list of event names to a configurable list of vendor prefixes.
     */


    var vendorPrefixes = {
      animationend: makePrefixMap('Animation', 'AnimationEnd'),
      animationiteration: makePrefixMap('Animation', 'AnimationIteration'),
      animationstart: makePrefixMap('Animation', 'AnimationStart'),
      transitionend: makePrefixMap('Transition', 'TransitionEnd')
    };
    /**
     * Event names that have already been detected and prefixed (if applicable).
     */

    var prefixedEventNames = {};
    /**
     * Element to check for prefixes on.
     */

    var style = {};
    /**
     * Bootstrap if a DOM exists.
     */

    if (canUseDOM) {
      style = document.createElement('div').style; // On some platforms, in particular some releases of Android 4.x,
      // the un-prefixed "animation" and "transition" properties are defined on the
      // style object but the events that fire will still be prefixed, so we need
      // to check if the un-prefixed events are usable, and if not remove them from the map.

      if (!('AnimationEvent' in window)) {
        delete vendorPrefixes.animationend.animation;
        delete vendorPrefixes.animationiteration.animation;
        delete vendorPrefixes.animationstart.animation;
      } // Same as above


      if (!('TransitionEvent' in window)) {
        delete vendorPrefixes.transitionend.transition;
      }
    }
    /**
     * Attempts to determine the correct vendor prefixed event name.
     *
     * @param {string} eventName
     * @returns {string}
     */


    function getVendorPrefixedEventName(eventName) {
      if (prefixedEventNames[eventName]) {
        return prefixedEventNames[eventName];
      } else if (!vendorPrefixes[eventName]) {
        return eventName;
      }

      var prefixMap = vendorPrefixes[eventName];

      for (var styleProp in prefixMap) {
        if (prefixMap.hasOwnProperty(styleProp) && styleProp in style) {
          return prefixedEventNames[eventName] = prefixMap[styleProp];
        }
      }

      return eventName;
    }
    /**
     * To identify top level events in ReactDOM, we use constants defined by this
     * module. This is the only module that uses the unsafe* methods to express
     * that the constants actually correspond to the browser event names. This lets
     * us save some bundle size by avoiding a top level type -> event name map.
     * The rest of ReactDOM code should import top level types from this file.
     */


    var TOP_ABORT = unsafeCastStringToDOMTopLevelType('abort');
    var TOP_ANIMATION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationend'));
    var TOP_ANIMATION_ITERATION = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationiteration'));
    var TOP_ANIMATION_START = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('animationstart'));
    var TOP_BLUR = unsafeCastStringToDOMTopLevelType('blur');
    var TOP_CAN_PLAY = unsafeCastStringToDOMTopLevelType('canplay');
    var TOP_CAN_PLAY_THROUGH = unsafeCastStringToDOMTopLevelType('canplaythrough');
    var TOP_CANCEL = unsafeCastStringToDOMTopLevelType('cancel');
    var TOP_CHANGE = unsafeCastStringToDOMTopLevelType('change');
    var TOP_CLICK = unsafeCastStringToDOMTopLevelType('click');
    var TOP_CLOSE = unsafeCastStringToDOMTopLevelType('close');
    var TOP_COMPOSITION_END = unsafeCastStringToDOMTopLevelType('compositionend');
    var TOP_COMPOSITION_START = unsafeCastStringToDOMTopLevelType('compositionstart');
    var TOP_COMPOSITION_UPDATE = unsafeCastStringToDOMTopLevelType('compositionupdate');
    var TOP_CONTEXT_MENU = unsafeCastStringToDOMTopLevelType('contextmenu');
    var TOP_COPY = unsafeCastStringToDOMTopLevelType('copy');
    var TOP_CUT = unsafeCastStringToDOMTopLevelType('cut');
    var TOP_DOUBLE_CLICK = unsafeCastStringToDOMTopLevelType('dblclick');
    var TOP_AUX_CLICK = unsafeCastStringToDOMTopLevelType('auxclick');
    var TOP_DRAG = unsafeCastStringToDOMTopLevelType('drag');
    var TOP_DRAG_END = unsafeCastStringToDOMTopLevelType('dragend');
    var TOP_DRAG_ENTER = unsafeCastStringToDOMTopLevelType('dragenter');
    var TOP_DRAG_EXIT = unsafeCastStringToDOMTopLevelType('dragexit');
    var TOP_DRAG_LEAVE = unsafeCastStringToDOMTopLevelType('dragleave');
    var TOP_DRAG_OVER = unsafeCastStringToDOMTopLevelType('dragover');
    var TOP_DRAG_START = unsafeCastStringToDOMTopLevelType('dragstart');
    var TOP_DROP = unsafeCastStringToDOMTopLevelType('drop');
    var TOP_DURATION_CHANGE = unsafeCastStringToDOMTopLevelType('durationchange');
    var TOP_EMPTIED = unsafeCastStringToDOMTopLevelType('emptied');
    var TOP_ENCRYPTED = unsafeCastStringToDOMTopLevelType('encrypted');
    var TOP_ENDED = unsafeCastStringToDOMTopLevelType('ended');
    var TOP_ERROR = unsafeCastStringToDOMTopLevelType('error');
    var TOP_FOCUS = unsafeCastStringToDOMTopLevelType('focus');
    var TOP_GOT_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('gotpointercapture');
    var TOP_INPUT = unsafeCastStringToDOMTopLevelType('input');
    var TOP_INVALID = unsafeCastStringToDOMTopLevelType('invalid');
    var TOP_KEY_DOWN = unsafeCastStringToDOMTopLevelType('keydown');
    var TOP_KEY_PRESS = unsafeCastStringToDOMTopLevelType('keypress');
    var TOP_KEY_UP = unsafeCastStringToDOMTopLevelType('keyup');
    var TOP_LOAD = unsafeCastStringToDOMTopLevelType('load');
    var TOP_LOAD_START = unsafeCastStringToDOMTopLevelType('loadstart');
    var TOP_LOADED_DATA = unsafeCastStringToDOMTopLevelType('loadeddata');
    var TOP_LOADED_METADATA = unsafeCastStringToDOMTopLevelType('loadedmetadata');
    var TOP_LOST_POINTER_CAPTURE = unsafeCastStringToDOMTopLevelType('lostpointercapture');
    var TOP_MOUSE_DOWN = unsafeCastStringToDOMTopLevelType('mousedown');
    var TOP_MOUSE_MOVE = unsafeCastStringToDOMTopLevelType('mousemove');
    var TOP_MOUSE_OUT = unsafeCastStringToDOMTopLevelType('mouseout');
    var TOP_MOUSE_OVER = unsafeCastStringToDOMTopLevelType('mouseover');
    var TOP_MOUSE_UP = unsafeCastStringToDOMTopLevelType('mouseup');
    var TOP_PASTE = unsafeCastStringToDOMTopLevelType('paste');
    var TOP_PAUSE = unsafeCastStringToDOMTopLevelType('pause');
    var TOP_PLAY = unsafeCastStringToDOMTopLevelType('play');
    var TOP_PLAYING = unsafeCastStringToDOMTopLevelType('playing');
    var TOP_POINTER_CANCEL = unsafeCastStringToDOMTopLevelType('pointercancel');
    var TOP_POINTER_DOWN = unsafeCastStringToDOMTopLevelType('pointerdown');
    var TOP_POINTER_MOVE = unsafeCastStringToDOMTopLevelType('pointermove');
    var TOP_POINTER_OUT = unsafeCastStringToDOMTopLevelType('pointerout');
    var TOP_POINTER_OVER = unsafeCastStringToDOMTopLevelType('pointerover');
    var TOP_POINTER_UP = unsafeCastStringToDOMTopLevelType('pointerup');
    var TOP_PROGRESS = unsafeCastStringToDOMTopLevelType('progress');
    var TOP_RATE_CHANGE = unsafeCastStringToDOMTopLevelType('ratechange');
    var TOP_RESET = unsafeCastStringToDOMTopLevelType('reset');
    var TOP_SCROLL = unsafeCastStringToDOMTopLevelType('scroll');
    var TOP_SEEKED = unsafeCastStringToDOMTopLevelType('seeked');
    var TOP_SEEKING = unsafeCastStringToDOMTopLevelType('seeking');
    var TOP_SELECTION_CHANGE = unsafeCastStringToDOMTopLevelType('selectionchange');
    var TOP_STALLED = unsafeCastStringToDOMTopLevelType('stalled');
    var TOP_SUBMIT = unsafeCastStringToDOMTopLevelType('submit');
    var TOP_SUSPEND = unsafeCastStringToDOMTopLevelType('suspend');
    var TOP_TEXT_INPUT = unsafeCastStringToDOMTopLevelType('textInput');
    var TOP_TIME_UPDATE = unsafeCastStringToDOMTopLevelType('timeupdate');
    var TOP_TOGGLE = unsafeCastStringToDOMTopLevelType('toggle');
    var TOP_TOUCH_CANCEL = unsafeCastStringToDOMTopLevelType('touchcancel');
    var TOP_TOUCH_END = unsafeCastStringToDOMTopLevelType('touchend');
    var TOP_TOUCH_MOVE = unsafeCastStringToDOMTopLevelType('touchmove');
    var TOP_TOUCH_START = unsafeCastStringToDOMTopLevelType('touchstart');
    var TOP_TRANSITION_END = unsafeCastStringToDOMTopLevelType(getVendorPrefixedEventName('transitionend'));
    var TOP_VOLUME_CHANGE = unsafeCastStringToDOMTopLevelType('volumechange');
    var TOP_WAITING = unsafeCastStringToDOMTopLevelType('waiting');
    var TOP_WHEEL = unsafeCastStringToDOMTopLevelType('wheel'); // List of events that need to be individually attached to media elements.
    // Note that events in this list will *not* be listened to at the top level
    // unless they're explicitly whitelisted in `ReactBrowserEventEmitter.listenTo`.

    var mediaEventTypes = [TOP_ABORT, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_VOLUME_CHANGE, TOP_WAITING];

    function getRawEventName(topLevelType) {
      return unsafeCastDOMTopLevelTypeToString(topLevelType);
    }
    /**
     * `ReactInstanceMap` maintains a mapping from a public facing stateful
     * instance (key) and the internal representation (value). This allows public
     * methods to accept the user facing instance as an argument and map them back
     * to internal methods.
     *
     * Note that this module is currently shared and assumed to be stateless.
     * If this becomes an actual Map, that will break.
     */

    /**
     * This API should be called `delete` but we'd have to make sure to always
     * transform these to strings for IE support. When this transform is fully
     * supported we can rename it.
     */


    function get(key) {
      return key._reactInternalFiber;
    }

    function has(key) {
      return key._reactInternalFiber !== undefined;
    }

    function set(key, value) {
      key._reactInternalFiber = value;
    } // Don't change these two values. They're used by React Dev Tools.


    var NoEffect =
    /*              */
    0;
    var PerformedWork =
    /*         */
    1; // You can change the rest (and add more).

    var Placement =
    /*             */
    2;
    var Update =
    /*                */
    4;
    var PlacementAndUpdate =
    /*    */
    6;
    var Deletion =
    /*              */
    8;
    var ContentReset =
    /*          */
    16;
    var Callback =
    /*              */
    32;
    var DidCapture =
    /*            */
    64;
    var Ref =
    /*                   */
    128;
    var Snapshot =
    /*              */
    256;
    var Passive =
    /*               */
    512;
    var Hydrating =
    /*             */
    1024;
    var HydratingAndUpdate =
    /*    */
    1028; // Passive & Update & Callback & Ref & Snapshot

    var LifecycleEffectMask =
    /*   */
    932; // Union of all host effects

    var HostEffectMask =
    /*        */
    2047;
    var Incomplete =
    /*            */
    2048;
    var ShouldCapture =
    /*         */
    4096;
    var ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;

    function getNearestMountedFiber(fiber) {
      var node = fiber;
      var nearestMounted = fiber;

      if (!fiber.alternate) {
        // If there is no alternate, this might be a new tree that isn't inserted
        // yet. If it is, then it will have a pending insertion effect on it.
        var nextNode = node;

        do {
          node = nextNode;

          if ((node.effectTag & (Placement | Hydrating)) !== NoEffect) {
            // This is an insertion or in-progress hydration. The nearest possible
            // mounted fiber is the parent but we need to continue to figure out
            // if that one is still mounted.
            nearestMounted = node.return;
          }

          nextNode = node.return;
        } while (nextNode);
      } else {
        while (node.return) {
          node = node.return;
        }
      }

      if (node.tag === HostRoot) {
        // TODO: Check if this was a nested HostRoot when used with
        // renderContainerIntoSubtree.
        return nearestMounted;
      } // If we didn't hit the root, that means that we're in an disconnected tree
      // that has been unmounted.


      return null;
    }

    function getSuspenseInstanceFromFiber(fiber) {
      if (fiber.tag === SuspenseComponent) {
        var suspenseState = fiber.memoizedState;

        if (suspenseState === null) {
          var current = fiber.alternate;

          if (current !== null) {
            suspenseState = current.memoizedState;
          }
        }

        if (suspenseState !== null) {
          return suspenseState.dehydrated;
        }
      }

      return null;
    }

    function getContainerFromFiber(fiber) {
      return fiber.tag === HostRoot ? fiber.stateNode.containerInfo : null;
    }

    function isFiberMounted(fiber) {
      return getNearestMountedFiber(fiber) === fiber;
    }

    function isMounted(component) {
      {
        var owner = ReactCurrentOwner.current;

        if (owner !== null && owner.tag === ClassComponent) {
          var ownerFiber = owner;
          var instance = ownerFiber.stateNode;
          !instance._warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing isMounted inside its render() function. ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(ownerFiber.type) || 'A component') : void 0;
          instance._warnedAboutRefsInRender = true;
        }
      }
      var fiber = get(component);

      if (!fiber) {
        return false;
      }

      return getNearestMountedFiber(fiber) === fiber;
    }

    function assertIsMounted(fiber) {
      if (!(getNearestMountedFiber(fiber) === fiber)) {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }
    }

    function findCurrentFiberUsingSlowPath(fiber) {
      var alternate = fiber.alternate;

      if (!alternate) {
        // If there is no alternate, then we only need to check if it is mounted.
        var nearestMounted = getNearestMountedFiber(fiber);

        if (!(nearestMounted !== null)) {
          {
            throw Error("Unable to find node on an unmounted component.");
          }
        }

        if (nearestMounted !== fiber) {
          return null;
        }

        return fiber;
      } // If we have two possible branches, we'll walk backwards up to the root
      // to see what path the root points to. On the way we may hit one of the
      // special cases and we'll deal with them.


      var a = fiber;
      var b = alternate;

      while (true) {
        var parentA = a.return;

        if (parentA === null) {
          // We're at the root.
          break;
        }

        var parentB = parentA.alternate;

        if (parentB === null) {
          // There is no alternate. This is an unusual case. Currently, it only
          // happens when a Suspense component is hidden. An extra fragment fiber
          // is inserted in between the Suspense fiber and its children. Skip
          // over this extra fragment fiber and proceed to the next parent.
          var nextParent = parentA.return;

          if (nextParent !== null) {
            a = b = nextParent;
            continue;
          } // If there's no parent, we're at the root.


          break;
        } // If both copies of the parent fiber point to the same child, we can
        // assume that the child is current. This happens when we bailout on low
        // priority: the bailed out fiber's child reuses the current child.


        if (parentA.child === parentB.child) {
          var child = parentA.child;

          while (child) {
            if (child === a) {
              // We've determined that A is the current branch.
              assertIsMounted(parentA);
              return fiber;
            }

            if (child === b) {
              // We've determined that B is the current branch.
              assertIsMounted(parentA);
              return alternate;
            }

            child = child.sibling;
          } // We should never have an alternate for any mounting node. So the only
          // way this could possibly happen is if this was unmounted, if at all.


          {
            {
              throw Error("Unable to find node on an unmounted component.");
            }
          }
        }

        if (a.return !== b.return) {
          // The return pointer of A and the return pointer of B point to different
          // fibers. We assume that return pointers never criss-cross, so A must
          // belong to the child set of A.return, and B must belong to the child
          // set of B.return.
          a = parentA;
          b = parentB;
        } else {
          // The return pointers point to the same fiber. We'll have to use the
          // default, slow path: scan the child sets of each parent alternate to see
          // which child belongs to which set.
          //
          // Search parent A's child set
          var didFindChild = false;
          var _child = parentA.child;

          while (_child) {
            if (_child === a) {
              didFindChild = true;
              a = parentA;
              b = parentB;
              break;
            }

            if (_child === b) {
              didFindChild = true;
              b = parentA;
              a = parentB;
              break;
            }

            _child = _child.sibling;
          }

          if (!didFindChild) {
            // Search parent B's child set
            _child = parentB.child;

            while (_child) {
              if (_child === a) {
                didFindChild = true;
                a = parentB;
                b = parentA;
                break;
              }

              if (_child === b) {
                didFindChild = true;
                b = parentB;
                a = parentA;
                break;
              }

              _child = _child.sibling;
            }

            if (!didFindChild) {
              {
                throw Error("Child was not found in either parent set. This indicates a bug in React related to the return pointer. Please file an issue.");
              }
            }
          }
        }

        if (!(a.alternate === b)) {
          {
            throw Error("Return fibers should always be each others' alternates. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      } // If the root is not a host container, we're in a disconnected tree. I.e.
      // unmounted.


      if (!(a.tag === HostRoot)) {
        {
          throw Error("Unable to find node on an unmounted component.");
        }
      }

      if (a.stateNode.current === a) {
        // We've determined that A is the current branch.
        return fiber;
      } // Otherwise B has to be current branch.


      return alternate;
    }

    function findCurrentHostFiber(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText) {
          return node;
        } else if (node.child) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    function findCurrentHostFiberWithNoPortals(parent) {
      var currentParent = findCurrentFiberUsingSlowPath(parent);

      if (!currentParent) {
        return null;
      } // Next we'll drill down this component to find the first HostComponent/Text.


      var node = currentParent;

      while (true) {
        if (node.tag === HostComponent || node.tag === HostText || enableFundamentalAPI && node.tag === FundamentalComponent) {
          return node;
        } else if (node.child && node.tag !== HostPortal) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === currentParent) {
          return null;
        }

        while (!node.sibling) {
          if (!node.return || node.return === currentParent) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      } // Flow needs the return null here, but ESLint complains about it.
      // eslint-disable-next-line no-unreachable


      return null;
    }

    var attemptSynchronousHydration;

    function setAttemptSynchronousHydration(fn) {
      attemptSynchronousHydration = fn;
    }

    var attemptUserBlockingHydration;

    function setAttemptUserBlockingHydration(fn) {
      attemptUserBlockingHydration = fn;
    }

    var attemptContinuousHydration;

    function setAttemptContinuousHydration(fn) {
      attemptContinuousHydration = fn;
    }

    var attemptHydrationAtCurrentPriority;

    function setAttemptHydrationAtCurrentPriority(fn) {
      attemptHydrationAtCurrentPriority = fn;
    } // TODO: Upgrade this definition once we're on a newer version of Flow that
    // has this definition built-in.


    var hasScheduledReplayAttempt = false; // The queue of discrete events to be replayed.

    var queuedDiscreteEvents = []; // Indicates if any continuous event targets are non-null for early bailout.
    // if the last target was dehydrated.

    var queuedFocus = null;
    var queuedDrag = null;
    var queuedMouse = null; // For pointer events there can be one latest event per pointerId.

    var queuedPointers = new Map();
    var queuedPointerCaptures = new Map(); // We could consider replaying selectionchange and touchmoves too.

    var queuedExplicitHydrationTargets = [];

    function hasQueuedDiscreteEvents() {
      return queuedDiscreteEvents.length > 0;
    }

    var discreteReplayableEvents = [TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_TOUCH_CANCEL, TOP_TOUCH_END, TOP_TOUCH_START, TOP_AUX_CLICK, TOP_DOUBLE_CLICK, TOP_POINTER_CANCEL, TOP_POINTER_DOWN, TOP_POINTER_UP, TOP_DRAG_END, TOP_DRAG_START, TOP_DROP, TOP_COMPOSITION_END, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_INPUT, TOP_TEXT_INPUT, TOP_CLOSE, TOP_CANCEL, TOP_COPY, TOP_CUT, TOP_PASTE, TOP_CLICK, TOP_CHANGE, TOP_CONTEXT_MENU, TOP_RESET, TOP_SUBMIT];
    var continuousReplayableEvents = [TOP_FOCUS, TOP_BLUR, TOP_DRAG_ENTER, TOP_DRAG_LEAVE, TOP_MOUSE_OVER, TOP_MOUSE_OUT, TOP_POINTER_OVER, TOP_POINTER_OUT, TOP_GOT_POINTER_CAPTURE, TOP_LOST_POINTER_CAPTURE];

    function isReplayableDiscreteEvent(eventType) {
      return discreteReplayableEvents.indexOf(eventType) > -1;
    }

    function trapReplayableEvent(topLevelType, document, listeningSet) {
      listenToTopLevel(topLevelType, document, listeningSet);

      if (enableFlareAPI) {
        // Trap events for the responder system.
        var passiveEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_passive';

        if (!listeningSet.has(passiveEventKey)) {
          trapEventForResponderEventSystem(document, topLevelType, true);
          listeningSet.add(passiveEventKey);
        } // TODO: This listens to all events as active which might have
        // undesirable effects. It's also unnecessary to have both
        // passive and active listeners. Instead, we could start with
        // a passive and upgrade it to an active one if needed.
        // For replaying purposes the active is never needed since we
        // currently don't preventDefault.


        var activeEventKey = unsafeCastDOMTopLevelTypeToString(topLevelType) + '_active';

        if (!listeningSet.has(activeEventKey)) {
          trapEventForResponderEventSystem(document, topLevelType, false);
          listeningSet.add(activeEventKey);
        }
      }
    }

    function eagerlyTrapReplayableEvents(document) {
      var listeningSet = getListeningSetForElement(document); // Discrete

      discreteReplayableEvents.forEach(function (topLevelType) {
        trapReplayableEvent(topLevelType, document, listeningSet);
      }); // Continuous

      continuousReplayableEvents.forEach(function (topLevelType) {
        trapReplayableEvent(topLevelType, document, listeningSet);
      });
    }

    function createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      return {
        blockedOn: blockedOn,
        topLevelType: topLevelType,
        eventSystemFlags: eventSystemFlags | IS_REPLAYED,
        nativeEvent: nativeEvent
      };
    }

    function queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      var queuedEvent = createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
      queuedDiscreteEvents.push(queuedEvent);

      if (enableSelectiveHydration) {
        if (queuedDiscreteEvents.length === 1) {
          // If this was the first discrete event, we might be able to
          // synchronously unblock it so that preventDefault still works.
          while (queuedEvent.blockedOn !== null) {
            var _fiber = getInstanceFromNode$1(queuedEvent.blockedOn);

            if (_fiber === null) {
              break;
            }

            attemptSynchronousHydration(_fiber);

            if (queuedEvent.blockedOn === null) {
              // We got unblocked by hydration. Let's try again.
              replayUnblockedEvents(); // If we're reblocked, on an inner boundary, we might need
              // to attempt hydrating that one.

              continue;
            } else {
              // We're still blocked from hydation, we have to give up
              // and replay later.
              break;
            }
          }
        }
      }
    } // Resets the replaying for this type of continuous event to no event.


    function clearIfContinuousEvent(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_FOCUS:
        case TOP_BLUR:
          queuedFocus = null;
          break;

        case TOP_DRAG_ENTER:
        case TOP_DRAG_LEAVE:
          queuedDrag = null;
          break;

        case TOP_MOUSE_OVER:
        case TOP_MOUSE_OUT:
          queuedMouse = null;
          break;

        case TOP_POINTER_OVER:
        case TOP_POINTER_OUT:
          {
            var pointerId = nativeEvent.pointerId;
            queuedPointers.delete(pointerId);
            break;
          }

        case TOP_GOT_POINTER_CAPTURE:
        case TOP_LOST_POINTER_CAPTURE:
          {
            var _pointerId = nativeEvent.pointerId;
            queuedPointerCaptures.delete(_pointerId);
            break;
          }
      }
    }

    function accumulateOrCreateContinuousQueuedReplayableEvent(existingQueuedEvent, blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      if (existingQueuedEvent === null || existingQueuedEvent.nativeEvent !== nativeEvent) {
        var queuedEvent = createQueuedReplayableEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);

        if (blockedOn !== null) {
          var _fiber2 = getInstanceFromNode$1(blockedOn);

          if (_fiber2 !== null) {
            // Attempt to increase the priority of this target.
            attemptContinuousHydration(_fiber2);
          }
        }

        return queuedEvent;
      } // If we have already queued this exact event, then it's because
      // the different event systems have different DOM event listeners.
      // We can accumulate the flags and store a single event to be
      // replayed.


      existingQueuedEvent.eventSystemFlags |= eventSystemFlags;
      return existingQueuedEvent;
    }

    function queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent) {
      // These set relatedTarget to null because the replayed event will be treated as if we
      // moved from outside the window (no target) onto the target once it hydrates.
      // Instead of mutating we could clone the event.
      switch (topLevelType) {
        case TOP_FOCUS:
          {
            var focusEvent = nativeEvent;
            queuedFocus = accumulateOrCreateContinuousQueuedReplayableEvent(queuedFocus, blockedOn, topLevelType, eventSystemFlags, focusEvent);
            return true;
          }

        case TOP_DRAG_ENTER:
          {
            var dragEvent = nativeEvent;
            queuedDrag = accumulateOrCreateContinuousQueuedReplayableEvent(queuedDrag, blockedOn, topLevelType, eventSystemFlags, dragEvent);
            return true;
          }

        case TOP_MOUSE_OVER:
          {
            var mouseEvent = nativeEvent;
            queuedMouse = accumulateOrCreateContinuousQueuedReplayableEvent(queuedMouse, blockedOn, topLevelType, eventSystemFlags, mouseEvent);
            return true;
          }

        case TOP_POINTER_OVER:
          {
            var pointerEvent = nativeEvent;
            var pointerId = pointerEvent.pointerId;
            queuedPointers.set(pointerId, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointers.get(pointerId) || null, blockedOn, topLevelType, eventSystemFlags, pointerEvent));
            return true;
          }

        case TOP_GOT_POINTER_CAPTURE:
          {
            var _pointerEvent = nativeEvent;
            var _pointerId2 = _pointerEvent.pointerId;
            queuedPointerCaptures.set(_pointerId2, accumulateOrCreateContinuousQueuedReplayableEvent(queuedPointerCaptures.get(_pointerId2) || null, blockedOn, topLevelType, eventSystemFlags, _pointerEvent));
            return true;
          }
      }

      return false;
    } // Check if this target is unblocked. Returns true if it's unblocked.


    function attemptExplicitHydrationTarget(queuedTarget) {
      // TODO: This function shares a lot of logic with attemptToDispatchEvent.
      // Try to unify them. It's a bit tricky since it would require two return
      // values.
      var targetInst = getClosestInstanceFromNode(queuedTarget.target);

      if (targetInst !== null) {
        var nearestMounted = getNearestMountedFiber(targetInst);

        if (nearestMounted !== null) {
          var tag = nearestMounted.tag;

          if (tag === SuspenseComponent) {
            var instance = getSuspenseInstanceFromFiber(nearestMounted);

            if (instance !== null) {
              // We're blocked on hydrating this boundary.
              // Increase its priority.
              queuedTarget.blockedOn = instance;
              Scheduler.unstable_runWithPriority(queuedTarget.priority, function () {
                attemptHydrationAtCurrentPriority(nearestMounted);
              });
              return;
            }
          } else if (tag === HostRoot) {
            var root = nearestMounted.stateNode;

            if (root.hydrate) {
              queuedTarget.blockedOn = getContainerFromFiber(nearestMounted); // We don't currently have a way to increase the priority of
              // a root other than sync.

              return;
            }
          }
        }
      }

      queuedTarget.blockedOn = null;
    }

    function queueExplicitHydrationTarget(target) {
      if (enableSelectiveHydration) {
        var priority = Scheduler.unstable_getCurrentPriorityLevel();
        var queuedTarget = {
          blockedOn: null,
          target: target,
          priority: priority
        };
        var i = 0;

        for (; i < queuedExplicitHydrationTargets.length; i++) {
          if (priority <= queuedExplicitHydrationTargets[i].priority) {
            break;
          }
        }

        queuedExplicitHydrationTargets.splice(i, 0, queuedTarget);

        if (i === 0) {
          attemptExplicitHydrationTarget(queuedTarget);
        }
      }
    }

    function attemptReplayContinuousQueuedEvent(queuedEvent) {
      if (queuedEvent.blockedOn !== null) {
        return false;
      }

      var nextBlockedOn = attemptToDispatchEvent(queuedEvent.topLevelType, queuedEvent.eventSystemFlags, queuedEvent.nativeEvent);

      if (nextBlockedOn !== null) {
        // We're still blocked. Try again later.
        var _fiber3 = getInstanceFromNode$1(nextBlockedOn);

        if (_fiber3 !== null) {
          attemptContinuousHydration(_fiber3);
        }

        queuedEvent.blockedOn = nextBlockedOn;
        return false;
      }

      return true;
    }

    function attemptReplayContinuousQueuedEventInMap(queuedEvent, key, map) {
      if (attemptReplayContinuousQueuedEvent(queuedEvent)) {
        map.delete(key);
      }
    }

    function replayUnblockedEvents() {
      hasScheduledReplayAttempt = false; // First replay discrete events.

      while (queuedDiscreteEvents.length > 0) {
        var nextDiscreteEvent = queuedDiscreteEvents[0];

        if (nextDiscreteEvent.blockedOn !== null) {
          // We're still blocked.
          // Increase the priority of this boundary to unblock
          // the next discrete event.
          var _fiber4 = getInstanceFromNode$1(nextDiscreteEvent.blockedOn);

          if (_fiber4 !== null) {
            attemptUserBlockingHydration(_fiber4);
          }

          break;
        }

        var nextBlockedOn = attemptToDispatchEvent(nextDiscreteEvent.topLevelType, nextDiscreteEvent.eventSystemFlags, nextDiscreteEvent.nativeEvent);

        if (nextBlockedOn !== null) {
          // We're still blocked. Try again later.
          nextDiscreteEvent.blockedOn = nextBlockedOn;
        } else {
          // We've successfully replayed the first event. Let's try the next one.
          queuedDiscreteEvents.shift();
        }
      } // Next replay any continuous events.


      if (queuedFocus !== null && attemptReplayContinuousQueuedEvent(queuedFocus)) {
        queuedFocus = null;
      }

      if (queuedDrag !== null && attemptReplayContinuousQueuedEvent(queuedDrag)) {
        queuedDrag = null;
      }

      if (queuedMouse !== null && attemptReplayContinuousQueuedEvent(queuedMouse)) {
        queuedMouse = null;
      }

      queuedPointers.forEach(attemptReplayContinuousQueuedEventInMap);
      queuedPointerCaptures.forEach(attemptReplayContinuousQueuedEventInMap);
    }

    function scheduleCallbackIfUnblocked(queuedEvent, unblocked) {
      if (queuedEvent.blockedOn === unblocked) {
        queuedEvent.blockedOn = null;

        if (!hasScheduledReplayAttempt) {
          hasScheduledReplayAttempt = true; // Schedule a callback to attempt replaying as many events as are
          // now unblocked. This first might not actually be unblocked yet.
          // We could check it early to avoid scheduling an unnecessary callback.

          Scheduler.unstable_scheduleCallback(Scheduler.unstable_NormalPriority, replayUnblockedEvents);
        }
      }
    }

    function retryIfBlockedOn(unblocked) {
      // Mark anything that was blocked on this as no longer blocked
      // and eligible for a replay.
      if (queuedDiscreteEvents.length > 0) {
        scheduleCallbackIfUnblocked(queuedDiscreteEvents[0], unblocked); // This is a exponential search for each boundary that commits. I think it's
        // worth it because we expect very few discrete events to queue up and once
        // we are actually fully unblocked it will be fast to replay them.

        for (var i = 1; i < queuedDiscreteEvents.length; i++) {
          var queuedEvent = queuedDiscreteEvents[i];

          if (queuedEvent.blockedOn === unblocked) {
            queuedEvent.blockedOn = null;
          }
        }
      }

      if (queuedFocus !== null) {
        scheduleCallbackIfUnblocked(queuedFocus, unblocked);
      }

      if (queuedDrag !== null) {
        scheduleCallbackIfUnblocked(queuedDrag, unblocked);
      }

      if (queuedMouse !== null) {
        scheduleCallbackIfUnblocked(queuedMouse, unblocked);
      }

      var unblock = function (queuedEvent) {
        return scheduleCallbackIfUnblocked(queuedEvent, unblocked);
      };

      queuedPointers.forEach(unblock);
      queuedPointerCaptures.forEach(unblock);

      for (var _i = 0; _i < queuedExplicitHydrationTargets.length; _i++) {
        var queuedTarget = queuedExplicitHydrationTargets[_i];

        if (queuedTarget.blockedOn === unblocked) {
          queuedTarget.blockedOn = null;
        }
      }

      while (queuedExplicitHydrationTargets.length > 0) {
        var nextExplicitTarget = queuedExplicitHydrationTargets[0];

        if (nextExplicitTarget.blockedOn !== null) {
          // We're still blocked.
          break;
        } else {
          attemptExplicitHydrationTarget(nextExplicitTarget);

          if (nextExplicitTarget.blockedOn === null) {
            // We're unblocked.
            queuedExplicitHydrationTargets.shift();
          }
        }
      }
    }

    function addEventBubbleListener(element, eventType, listener) {
      element.addEventListener(eventType, listener, false);
    }

    function addEventCaptureListener(element, eventType, listener) {
      element.addEventListener(eventType, listener, true);
    }

    function addEventCaptureListenerWithPassiveFlag(element, eventType, listener, passive) {
      element.addEventListener(eventType, listener, {
        capture: true,
        passive: passive
      });
    }
    /**
     * Gets the target node from a native browser event by accounting for
     * inconsistencies in browser DOM APIs.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {DOMEventTarget} Target node.
     */


    function getEventTarget(nativeEvent) {
      // Fallback to nativeEvent.srcElement for IE9
      // https://github.com/facebook/react/issues/12506
      var target = nativeEvent.target || nativeEvent.srcElement || window; // Normalize SVG <use> element events #4963

      if (target.correspondingUseElement) {
        target = target.correspondingUseElement;
      } // Safari may fire events on text nodes (Node.TEXT_NODE is 3).
      // @see http://www.quirksmode.org/js/events_properties.html


      return target.nodeType === TEXT_NODE ? target.parentNode : target;
    }

    function getParent(inst) {
      do {
        inst = inst.return; // TODO: If this is a HostRoot we might want to bail out.
        // That is depending on if we want nested subtrees (layers) to bubble
        // events to their parent. We could also go through parentNode on the
        // host node but that wouldn't work for React Native and doesn't let us
        // do the portal feature.
      } while (inst && inst.tag !== HostComponent);

      if (inst) {
        return inst;
      }

      return null;
    }
    /**
     * Return the lowest common ancestor of A and B, or null if they are in
     * different trees.
     */


    function getLowestCommonAncestor(instA, instB) {
      var depthA = 0;

      for (var tempA = instA; tempA; tempA = getParent(tempA)) {
        depthA++;
      }

      var depthB = 0;

      for (var tempB = instB; tempB; tempB = getParent(tempB)) {
        depthB++;
      } // If A is deeper, crawl up.


      while (depthA - depthB > 0) {
        instA = getParent(instA);
        depthA--;
      } // If B is deeper, crawl up.


      while (depthB - depthA > 0) {
        instB = getParent(instB);
        depthB--;
      } // Walk in lockstep until we find a match.


      var depth = depthA;

      while (depth--) {
        if (instA === instB || instA === instB.alternate) {
          return instA;
        }

        instA = getParent(instA);
        instB = getParent(instB);
      }

      return null;
    }
    /**
     * Return if A is an ancestor of B.
     */

    /**
     * Return the parent instance of the passed-in instance.
     */

    /**
     * Simulates the traversal of a two-phase, capture/bubble event dispatch.
     */


    function traverseTwoPhase(inst, fn, arg) {
      var path = [];

      while (inst) {
        path.push(inst);
        inst = getParent(inst);
      }

      var i;

      for (i = path.length; i-- > 0;) {
        fn(path[i], 'captured', arg);
      }

      for (i = 0; i < path.length; i++) {
        fn(path[i], 'bubbled', arg);
      }
    }
    /**
     * Traverses the ID hierarchy and invokes the supplied `cb` on any IDs that
     * should would receive a `mouseEnter` or `mouseLeave` event.
     *
     * Does not invoke the callback on the nearest common ancestor because nothing
     * "entered" or "left" that element.
     */


    function traverseEnterLeave(from, to, fn, argFrom, argTo) {
      var common = from && to ? getLowestCommonAncestor(from, to) : null;
      var pathFrom = [];

      while (true) {
        if (!from) {
          break;
        }

        if (from === common) {
          break;
        }

        var alternate = from.alternate;

        if (alternate !== null && alternate === common) {
          break;
        }

        pathFrom.push(from);
        from = getParent(from);
      }

      var pathTo = [];

      while (true) {
        if (!to) {
          break;
        }

        if (to === common) {
          break;
        }

        var _alternate = to.alternate;

        if (_alternate !== null && _alternate === common) {
          break;
        }

        pathTo.push(to);
        to = getParent(to);
      }

      for (var i = 0; i < pathFrom.length; i++) {
        fn(pathFrom[i], 'bubbled', argFrom);
      }

      for (var _i = pathTo.length; _i-- > 0;) {
        fn(pathTo[_i], 'captured', argTo);
      }
    }
    /**
     * Some event types have a notion of different registration names for different
     * "phases" of propagation. This finds listeners by a given phase.
     */


    function listenerAtPhase(inst, event, propagationPhase) {
      var registrationName = event.dispatchConfig.phasedRegistrationNames[propagationPhase];
      return getListener(inst, registrationName);
    }
    /**
     * A small set of propagation patterns, each of which will accept a small amount
     * of information, and generate a set of "dispatch ready event objects" - which
     * are sets of events that have already been annotated with a set of dispatched
     * listener functions/ids. The API is designed this way to discourage these
     * propagation strategies from actually executing the dispatches, since we
     * always want to collect the entire set of dispatches before executing even a
     * single one.
     */

    /**
     * Tags a `SyntheticEvent` with dispatched listeners. Creating this function
     * here, allows us to not have to bind or create functions for each event.
     * Mutating the event's members allows us to not have to create a wrapping
     * "dispatch" object that pairs the event with the listener.
     */


    function accumulateDirectionalDispatches(inst, phase, event) {
      {
        !inst ? warningWithoutStack$1(false, 'Dispatching inst must not be null') : void 0;
      }
      var listener = listenerAtPhase(inst, event, phase);

      if (listener) {
        event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
        event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
      }
    }
    /**
     * Collect dispatches (must be entirely collected before dispatching - see unit
     * tests). Lazily allocate the array to conserve memory.  We must loop through
     * each event and perform the traversal for each one. We cannot perform a
     * single traversal for the entire collection of events because each event may
     * have a different target.
     */


    function accumulateTwoPhaseDispatchesSingle(event) {
      if (event && event.dispatchConfig.phasedRegistrationNames) {
        traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);
      }
    }
    /**
     * Accumulates without regard to direction, does not look for phased
     * registration names. Same as `accumulateDirectDispatchesSingle` but without
     * requiring that the `dispatchMarker` be the same as the dispatched ID.
     */


    function accumulateDispatches(inst, ignoredDirection, event) {
      if (inst && event && event.dispatchConfig.registrationName) {
        var registrationName = event.dispatchConfig.registrationName;
        var listener = getListener(inst, registrationName);

        if (listener) {
          event._dispatchListeners = accumulateInto(event._dispatchListeners, listener);
          event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);
        }
      }
    }
    /**
     * Accumulates dispatches on an `SyntheticEvent`, but only for the
     * `dispatchMarker`.
     * @param {SyntheticEvent} event
     */


    function accumulateDirectDispatchesSingle(event) {
      if (event && event.dispatchConfig.registrationName) {
        accumulateDispatches(event._targetInst, null, event);
      }
    }

    function accumulateTwoPhaseDispatches(events) {
      forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);
    }

    function accumulateEnterLeaveDispatches(leave, enter, from, to) {
      traverseEnterLeave(from, to, accumulateDispatches, leave, enter);
    }

    function accumulateDirectDispatches(events) {
      forEachAccumulated(events, accumulateDirectDispatchesSingle);
    }
    /* eslint valid-typeof: 0 */


    var EVENT_POOL_SIZE = 10;
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var EventInterface = {
      type: null,
      target: null,
      // currentTarget is set when dispatching; no use in copying it here
      currentTarget: function () {
        return null;
      },
      eventPhase: null,
      bubbles: null,
      cancelable: null,
      timeStamp: function (event) {
        return event.timeStamp || Date.now();
      },
      defaultPrevented: null,
      isTrusted: null
    };

    function functionThatReturnsTrue() {
      return true;
    }

    function functionThatReturnsFalse() {
      return false;
    }
    /**
     * Synthetic events are dispatched by event plugins, typically in response to a
     * top-level event delegation handler.
     *
     * These systems should generally use pooling to reduce the frequency of garbage
     * collection. The system should check `isPersistent` to determine whether the
     * event should be released into the pool after being dispatched. Users that
     * need a persisted event should invoke `persist`.
     *
     * Synthetic events (and subclasses) implement the DOM Level 3 Events API by
     * normalizing browser quirks. Subclasses do not necessarily have to implement a
     * DOM interface; custom application-specific events can also subclass this.
     *
     * @param {object} dispatchConfig Configuration used to dispatch this event.
     * @param {*} targetInst Marker identifying the event target.
     * @param {object} nativeEvent Native browser event.
     * @param {DOMEventTarget} nativeEventTarget Target node.
     */


    function SyntheticEvent(dispatchConfig, targetInst, nativeEvent, nativeEventTarget) {
      {
        // these have a getter/setter for warnings
        delete this.nativeEvent;
        delete this.preventDefault;
        delete this.stopPropagation;
        delete this.isDefaultPrevented;
        delete this.isPropagationStopped;
      }
      this.dispatchConfig = dispatchConfig;
      this._targetInst = targetInst;
      this.nativeEvent = nativeEvent;
      var Interface = this.constructor.Interface;

      for (var propName in Interface) {
        if (!Interface.hasOwnProperty(propName)) {
          continue;
        }

        {
          delete this[propName]; // this has a getter/setter for warnings
        }
        var normalize = Interface[propName];

        if (normalize) {
          this[propName] = normalize(nativeEvent);
        } else {
          if (propName === 'target') {
            this.target = nativeEventTarget;
          } else {
            this[propName] = nativeEvent[propName];
          }
        }
      }

      var defaultPrevented = nativeEvent.defaultPrevented != null ? nativeEvent.defaultPrevented : nativeEvent.returnValue === false;

      if (defaultPrevented) {
        this.isDefaultPrevented = functionThatReturnsTrue;
      } else {
        this.isDefaultPrevented = functionThatReturnsFalse;
      }

      this.isPropagationStopped = functionThatReturnsFalse;
      return this;
    }

    _assign(SyntheticEvent.prototype, {
      preventDefault: function () {
        this.defaultPrevented = true;
        var event = this.nativeEvent;

        if (!event) {
          return;
        }

        if (event.preventDefault) {
          event.preventDefault();
        } else if (typeof event.returnValue !== 'unknown') {
          event.returnValue = false;
        }

        this.isDefaultPrevented = functionThatReturnsTrue;
      },
      stopPropagation: function () {
        var event = this.nativeEvent;

        if (!event) {
          return;
        }

        if (event.stopPropagation) {
          event.stopPropagation();
        } else if (typeof event.cancelBubble !== 'unknown') {
          // The ChangeEventPlugin registers a "propertychange" event for
          // IE. This event does not support bubbling or cancelling, and
          // any references to cancelBubble throw "Member not found".  A
          // typeof check of "unknown" circumvents this issue (and is also
          // IE specific).
          event.cancelBubble = true;
        }

        this.isPropagationStopped = functionThatReturnsTrue;
      },

      /**
       * We release all dispatched `SyntheticEvent`s after each event loop, adding
       * them back into the pool. This allows a way to hold onto a reference that
       * won't be added back into the pool.
       */
      persist: function () {
        this.isPersistent = functionThatReturnsTrue;
      },

      /**
       * Checks if this event should be released back into the pool.
       *
       * @return {boolean} True if this should not be released, false otherwise.
       */
      isPersistent: functionThatReturnsFalse,

      /**
       * `PooledClass` looks for `destructor` on each instance it releases.
       */
      destructor: function () {
        var Interface = this.constructor.Interface;

        for (var propName in Interface) {
          {
            Object.defineProperty(this, propName, getPooledWarningPropertyDefinition(propName, Interface[propName]));
          }
        }

        this.dispatchConfig = null;
        this._targetInst = null;
        this.nativeEvent = null;
        this.isDefaultPrevented = functionThatReturnsFalse;
        this.isPropagationStopped = functionThatReturnsFalse;
        this._dispatchListeners = null;
        this._dispatchInstances = null;
        {
          Object.defineProperty(this, 'nativeEvent', getPooledWarningPropertyDefinition('nativeEvent', null));
          Object.defineProperty(this, 'isDefaultPrevented', getPooledWarningPropertyDefinition('isDefaultPrevented', functionThatReturnsFalse));
          Object.defineProperty(this, 'isPropagationStopped', getPooledWarningPropertyDefinition('isPropagationStopped', functionThatReturnsFalse));
          Object.defineProperty(this, 'preventDefault', getPooledWarningPropertyDefinition('preventDefault', function () {}));
          Object.defineProperty(this, 'stopPropagation', getPooledWarningPropertyDefinition('stopPropagation', function () {}));
        }
      }
    });

    SyntheticEvent.Interface = EventInterface;
    /**
     * Helper to reduce boilerplate when creating subclasses.
     */

    SyntheticEvent.extend = function (Interface) {
      var Super = this;

      var E = function () {};

      E.prototype = Super.prototype;
      var prototype = new E();

      function Class() {
        return Super.apply(this, arguments);
      }

      _assign(prototype, Class.prototype);

      Class.prototype = prototype;
      Class.prototype.constructor = Class;
      Class.Interface = _assign({}, Super.Interface, Interface);
      Class.extend = Super.extend;
      addEventPoolingTo(Class);
      return Class;
    };

    addEventPoolingTo(SyntheticEvent);
    /**
     * Helper to nullify syntheticEvent instance properties when destructing
     *
     * @param {String} propName
     * @param {?object} getVal
     * @return {object} defineProperty object
     */

    function getPooledWarningPropertyDefinition(propName, getVal) {
      var isFunction = typeof getVal === 'function';
      return {
        configurable: true,
        set: set,
        get: get
      };

      function set(val) {
        var action = isFunction ? 'setting the method' : 'setting the property';
        warn(action, 'This is effectively a no-op');
        return val;
      }

      function get() {
        var action = isFunction ? 'accessing the method' : 'accessing the property';
        var result = isFunction ? 'This is a no-op function' : 'This is set to null';
        warn(action, result);
        return getVal;
      }

      function warn(action, result) {
        var warningCondition = false;
        !warningCondition ? warningWithoutStack$1(false, "This synthetic event is reused for performance reasons. If you're seeing this, " + "you're %s `%s` on a released/nullified synthetic event. %s. " + 'If you must keep the original synthetic event around, use event.persist(). ' + 'See https://fb.me/react-event-pooling for more information.', action, propName, result) : void 0;
      }
    }

    function getPooledEvent(dispatchConfig, targetInst, nativeEvent, nativeInst) {
      var EventConstructor = this;

      if (EventConstructor.eventPool.length) {
        var instance = EventConstructor.eventPool.pop();
        EventConstructor.call(instance, dispatchConfig, targetInst, nativeEvent, nativeInst);
        return instance;
      }

      return new EventConstructor(dispatchConfig, targetInst, nativeEvent, nativeInst);
    }

    function releasePooledEvent(event) {
      var EventConstructor = this;

      if (!(event instanceof EventConstructor)) {
        {
          throw Error("Trying to release an event instance into a pool of a different type.");
        }
      }

      event.destructor();

      if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {
        EventConstructor.eventPool.push(event);
      }
    }

    function addEventPoolingTo(EventConstructor) {
      EventConstructor.eventPool = [];
      EventConstructor.getPooled = getPooledEvent;
      EventConstructor.release = releasePooledEvent;
    }
    /**
     * @interface Event
     * @see http://www.w3.org/TR/css3-animations/#AnimationEvent-interface
     * @see https://developer.mozilla.org/en-US/docs/Web/API/AnimationEvent
     */


    var SyntheticAnimationEvent = SyntheticEvent.extend({
      animationName: null,
      elapsedTime: null,
      pseudoElement: null
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/clipboard-apis/
     */

    var SyntheticClipboardEvent = SyntheticEvent.extend({
      clipboardData: function (event) {
        return 'clipboardData' in event ? event.clipboardData : window.clipboardData;
      }
    });
    var SyntheticUIEvent = SyntheticEvent.extend({
      view: null,
      detail: null
    });
    /**
     * @interface FocusEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticFocusEvent = SyntheticUIEvent.extend({
      relatedTarget: null
    });
    /**
     * `charCode` represents the actual "character code" and is safe to use with
     * `String.fromCharCode`. As such, only keys that correspond to printable
     * characters produce a valid `charCode`, the only exception to this is Enter.
     * The Tab-key is considered non-printable and does not have a `charCode`,
     * presumably because it does not produce a tab-character in browsers.
     *
     * @param {object} nativeEvent Native browser event.
     * @return {number} Normalized `charCode` property.
     */

    function getEventCharCode(nativeEvent) {
      var charCode;
      var keyCode = nativeEvent.keyCode;

      if ('charCode' in nativeEvent) {
        charCode = nativeEvent.charCode; // FF does not set `charCode` for the Enter-key, check against `keyCode`.

        if (charCode === 0 && keyCode === 13) {
          charCode = 13;
        }
      } else {
        // IE8 does not implement `charCode`, but `keyCode` has the correct value.
        charCode = keyCode;
      } // IE and Edge (on Windows) and Chrome / Safari (on Windows and Linux)
      // report Enter as charCode 10 when ctrl is pressed.


      if (charCode === 10) {
        charCode = 13;
      } // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.
      // Must not discard the (non-)printable Enter-key.


      if (charCode >= 32 || charCode === 13) {
        return charCode;
      }

      return 0;
    }
    /**
     * Normalization of deprecated HTML5 `key` values
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */


    var normalizeKey = {
      Esc: 'Escape',
      Spacebar: ' ',
      Left: 'ArrowLeft',
      Up: 'ArrowUp',
      Right: 'ArrowRight',
      Down: 'ArrowDown',
      Del: 'Delete',
      Win: 'OS',
      Menu: 'ContextMenu',
      Apps: 'ContextMenu',
      Scroll: 'ScrollLock',
      MozPrintableKey: 'Unidentified'
    };
    /**
     * Translation from legacy `keyCode` to HTML5 `key`
     * Only special keys supported, all others depend on keyboard layout or browser
     * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
     */

    var translateToKey = {
      '8': 'Backspace',
      '9': 'Tab',
      '12': 'Clear',
      '13': 'Enter',
      '16': 'Shift',
      '17': 'Control',
      '18': 'Alt',
      '19': 'Pause',
      '20': 'CapsLock',
      '27': 'Escape',
      '32': ' ',
      '33': 'PageUp',
      '34': 'PageDown',
      '35': 'End',
      '36': 'Home',
      '37': 'ArrowLeft',
      '38': 'ArrowUp',
      '39': 'ArrowRight',
      '40': 'ArrowDown',
      '45': 'Insert',
      '46': 'Delete',
      '112': 'F1',
      '113': 'F2',
      '114': 'F3',
      '115': 'F4',
      '116': 'F5',
      '117': 'F6',
      '118': 'F7',
      '119': 'F8',
      '120': 'F9',
      '121': 'F10',
      '122': 'F11',
      '123': 'F12',
      '144': 'NumLock',
      '145': 'ScrollLock',
      '224': 'Meta'
    };
    /**
     * @param {object} nativeEvent Native browser event.
     * @return {string} Normalized `key` property.
     */

    function getEventKey(nativeEvent) {
      if (nativeEvent.key) {
        // Normalize inconsistent values reported by browsers due to
        // implementations of a working draft specification.
        // FireFox implements `key` but returns `MozPrintableKey` for all
        // printable characters (normalized to `Unidentified`), ignore it.
        var key = normalizeKey[nativeEvent.key] || nativeEvent.key;

        if (key !== 'Unidentified') {
          return key;
        }
      } // Browser does not implement `key`, polyfill as much of it as we can.


      if (nativeEvent.type === 'keypress') {
        var charCode = getEventCharCode(nativeEvent); // The enter-key is technically both printable and non-printable and can
        // thus be captured by `keypress`, no other non-printable key should.

        return charCode === 13 ? 'Enter' : String.fromCharCode(charCode);
      }

      if (nativeEvent.type === 'keydown' || nativeEvent.type === 'keyup') {
        // While user keyboard layout determines the actual meaning of each
        // `keyCode` value, almost all function keys have a universal value.
        return translateToKey[nativeEvent.keyCode] || 'Unidentified';
      }

      return '';
    }
    /**
     * Translation from modifier key to the associated property in the event.
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#keys-Modifiers
     */


    var modifierKeyToProp = {
      Alt: 'altKey',
      Control: 'ctrlKey',
      Meta: 'metaKey',
      Shift: 'shiftKey'
    }; // Older browsers (Safari <= 10, iOS Safari <= 10.2) do not support
    // getModifierState. If getModifierState is not supported, we map it to a set of
    // modifier keys exposed by the event. In this case, Lock-keys are not supported.

    function modifierStateGetter(keyArg) {
      var syntheticEvent = this;
      var nativeEvent = syntheticEvent.nativeEvent;

      if (nativeEvent.getModifierState) {
        return nativeEvent.getModifierState(keyArg);
      }

      var keyProp = modifierKeyToProp[keyArg];
      return keyProp ? !!nativeEvent[keyProp] : false;
    }

    function getEventModifierState(nativeEvent) {
      return modifierStateGetter;
    }
    /**
     * @interface KeyboardEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */


    var SyntheticKeyboardEvent = SyntheticUIEvent.extend({
      key: getEventKey,
      location: null,
      ctrlKey: null,
      shiftKey: null,
      altKey: null,
      metaKey: null,
      repeat: null,
      locale: null,
      getModifierState: getEventModifierState,
      // Legacy Interface
      charCode: function (event) {
        // `charCode` is the result of a KeyPress event and represents the value of
        // the actual printable character.
        // KeyPress is deprecated, but its replacement is not yet final and not
        // implemented in any major browser. Only KeyPress has charCode.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        return 0;
      },
      keyCode: function (event) {
        // `keyCode` is the result of a KeyDown/Up event and represents the value of
        // physical keyboard key.
        // The actual meaning of the value depends on the users' keyboard layout
        // which cannot be detected. Assuming that it is a US keyboard layout
        // provides a surprisingly accurate mapping for US and European users.
        // Due to this, it is left to the user to implement at this time.
        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      },
      which: function (event) {
        // `which` is an alias for either `keyCode` or `charCode` depending on the
        // type of the event.
        if (event.type === 'keypress') {
          return getEventCharCode(event);
        }

        if (event.type === 'keydown' || event.type === 'keyup') {
          return event.keyCode;
        }

        return 0;
      }
    });
    var previousScreenX = 0;
    var previousScreenY = 0; // Use flags to signal movementX/Y has already been set

    var isMovementXSet = false;
    var isMovementYSet = false;
    /**
     * @interface MouseEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticMouseEvent = SyntheticUIEvent.extend({
      screenX: null,
      screenY: null,
      clientX: null,
      clientY: null,
      pageX: null,
      pageY: null,
      ctrlKey: null,
      shiftKey: null,
      altKey: null,
      metaKey: null,
      getModifierState: getEventModifierState,
      button: null,
      buttons: null,
      relatedTarget: function (event) {
        return event.relatedTarget || (event.fromElement === event.srcElement ? event.toElement : event.fromElement);
      },
      movementX: function (event) {
        if ('movementX' in event) {
          return event.movementX;
        }

        var screenX = previousScreenX;
        previousScreenX = event.screenX;

        if (!isMovementXSet) {
          isMovementXSet = true;
          return 0;
        }

        return event.type === 'mousemove' ? event.screenX - screenX : 0;
      },
      movementY: function (event) {
        if ('movementY' in event) {
          return event.movementY;
        }

        var screenY = previousScreenY;
        previousScreenY = event.screenY;

        if (!isMovementYSet) {
          isMovementYSet = true;
          return 0;
        }

        return event.type === 'mousemove' ? event.screenY - screenY : 0;
      }
    });
    /**
     * @interface PointerEvent
     * @see http://www.w3.org/TR/pointerevents/
     */

    var SyntheticPointerEvent = SyntheticMouseEvent.extend({
      pointerId: null,
      width: null,
      height: null,
      pressure: null,
      tangentialPressure: null,
      tiltX: null,
      tiltY: null,
      twist: null,
      pointerType: null,
      isPrimary: null
    });
    /**
     * @interface DragEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticDragEvent = SyntheticMouseEvent.extend({
      dataTransfer: null
    });
    /**
     * @interface TouchEvent
     * @see http://www.w3.org/TR/touch-events/
     */

    var SyntheticTouchEvent = SyntheticUIEvent.extend({
      touches: null,
      targetTouches: null,
      changedTouches: null,
      altKey: null,
      metaKey: null,
      ctrlKey: null,
      shiftKey: null,
      getModifierState: getEventModifierState
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2009/WD-css3-transitions-20090320/#transition-events-
     * @see https://developer.mozilla.org/en-US/docs/Web/API/TransitionEvent
     */

    var SyntheticTransitionEvent = SyntheticEvent.extend({
      propertyName: null,
      elapsedTime: null,
      pseudoElement: null
    });
    /**
     * @interface WheelEvent
     * @see http://www.w3.org/TR/DOM-Level-3-Events/
     */

    var SyntheticWheelEvent = SyntheticMouseEvent.extend({
      deltaX: function (event) {
        return 'deltaX' in event ? event.deltaX : // Fallback to `wheelDeltaX` for Webkit and normalize (right is positive).
        'wheelDeltaX' in event ? -event.wheelDeltaX : 0;
      },
      deltaY: function (event) {
        return 'deltaY' in event ? event.deltaY : // Fallback to `wheelDeltaY` for Webkit and normalize (down is positive).
        'wheelDeltaY' in event ? -event.wheelDeltaY : // Fallback to `wheelDelta` for IE<9 and normalize (down is positive).
        'wheelDelta' in event ? -event.wheelDelta : 0;
      },
      deltaZ: null,
      // Browsers without "deltaMode" is reporting in raw wheel delta where one
      // notch on the scroll is always +/- 120, roughly equivalent to pixels.
      // A good approximation of DOM_DELTA_LINE (1) is 5% of viewport size or
      // ~40 pixels, for DOM_DELTA_SCREEN (2) it is 87.5% of viewport size.
      deltaMode: null
    });
    /**
     * Turns
     * ['abort', ...]
     * into
     * eventTypes = {
     *   'abort': {
     *     phasedRegistrationNames: {
     *       bubbled: 'onAbort',
     *       captured: 'onAbortCapture',
     *     },
     *     dependencies: [TOP_ABORT],
     *   },
     *   ...
     * };
     * topLevelEventsToDispatchConfig = new Map([
     *   [TOP_ABORT, { sameConfig }],
     * ]);
     */

    var eventTuples = [// Discrete events
    [TOP_BLUR, 'blur', DiscreteEvent], [TOP_CANCEL, 'cancel', DiscreteEvent], [TOP_CLICK, 'click', DiscreteEvent], [TOP_CLOSE, 'close', DiscreteEvent], [TOP_CONTEXT_MENU, 'contextMenu', DiscreteEvent], [TOP_COPY, 'copy', DiscreteEvent], [TOP_CUT, 'cut', DiscreteEvent], [TOP_AUX_CLICK, 'auxClick', DiscreteEvent], [TOP_DOUBLE_CLICK, 'doubleClick', DiscreteEvent], [TOP_DRAG_END, 'dragEnd', DiscreteEvent], [TOP_DRAG_START, 'dragStart', DiscreteEvent], [TOP_DROP, 'drop', DiscreteEvent], [TOP_FOCUS, 'focus', DiscreteEvent], [TOP_INPUT, 'input', DiscreteEvent], [TOP_INVALID, 'invalid', DiscreteEvent], [TOP_KEY_DOWN, 'keyDown', DiscreteEvent], [TOP_KEY_PRESS, 'keyPress', DiscreteEvent], [TOP_KEY_UP, 'keyUp', DiscreteEvent], [TOP_MOUSE_DOWN, 'mouseDown', DiscreteEvent], [TOP_MOUSE_UP, 'mouseUp', DiscreteEvent], [TOP_PASTE, 'paste', DiscreteEvent], [TOP_PAUSE, 'pause', DiscreteEvent], [TOP_PLAY, 'play', DiscreteEvent], [TOP_POINTER_CANCEL, 'pointerCancel', DiscreteEvent], [TOP_POINTER_DOWN, 'pointerDown', DiscreteEvent], [TOP_POINTER_UP, 'pointerUp', DiscreteEvent], [TOP_RATE_CHANGE, 'rateChange', DiscreteEvent], [TOP_RESET, 'reset', DiscreteEvent], [TOP_SEEKED, 'seeked', DiscreteEvent], [TOP_SUBMIT, 'submit', DiscreteEvent], [TOP_TOUCH_CANCEL, 'touchCancel', DiscreteEvent], [TOP_TOUCH_END, 'touchEnd', DiscreteEvent], [TOP_TOUCH_START, 'touchStart', DiscreteEvent], [TOP_VOLUME_CHANGE, 'volumeChange', DiscreteEvent], // User-blocking events
    [TOP_DRAG, 'drag', UserBlockingEvent], [TOP_DRAG_ENTER, 'dragEnter', UserBlockingEvent], [TOP_DRAG_EXIT, 'dragExit', UserBlockingEvent], [TOP_DRAG_LEAVE, 'dragLeave', UserBlockingEvent], [TOP_DRAG_OVER, 'dragOver', UserBlockingEvent], [TOP_MOUSE_MOVE, 'mouseMove', UserBlockingEvent], [TOP_MOUSE_OUT, 'mouseOut', UserBlockingEvent], [TOP_MOUSE_OVER, 'mouseOver', UserBlockingEvent], [TOP_POINTER_MOVE, 'pointerMove', UserBlockingEvent], [TOP_POINTER_OUT, 'pointerOut', UserBlockingEvent], [TOP_POINTER_OVER, 'pointerOver', UserBlockingEvent], [TOP_SCROLL, 'scroll', UserBlockingEvent], [TOP_TOGGLE, 'toggle', UserBlockingEvent], [TOP_TOUCH_MOVE, 'touchMove', UserBlockingEvent], [TOP_WHEEL, 'wheel', UserBlockingEvent], // Continuous events
    [TOP_ABORT, 'abort', ContinuousEvent], [TOP_ANIMATION_END, 'animationEnd', ContinuousEvent], [TOP_ANIMATION_ITERATION, 'animationIteration', ContinuousEvent], [TOP_ANIMATION_START, 'animationStart', ContinuousEvent], [TOP_CAN_PLAY, 'canPlay', ContinuousEvent], [TOP_CAN_PLAY_THROUGH, 'canPlayThrough', ContinuousEvent], [TOP_DURATION_CHANGE, 'durationChange', ContinuousEvent], [TOP_EMPTIED, 'emptied', ContinuousEvent], [TOP_ENCRYPTED, 'encrypted', ContinuousEvent], [TOP_ENDED, 'ended', ContinuousEvent], [TOP_ERROR, 'error', ContinuousEvent], [TOP_GOT_POINTER_CAPTURE, 'gotPointerCapture', ContinuousEvent], [TOP_LOAD, 'load', ContinuousEvent], [TOP_LOADED_DATA, 'loadedData', ContinuousEvent], [TOP_LOADED_METADATA, 'loadedMetadata', ContinuousEvent], [TOP_LOAD_START, 'loadStart', ContinuousEvent], [TOP_LOST_POINTER_CAPTURE, 'lostPointerCapture', ContinuousEvent], [TOP_PLAYING, 'playing', ContinuousEvent], [TOP_PROGRESS, 'progress', ContinuousEvent], [TOP_SEEKING, 'seeking', ContinuousEvent], [TOP_STALLED, 'stalled', ContinuousEvent], [TOP_SUSPEND, 'suspend', ContinuousEvent], [TOP_TIME_UPDATE, 'timeUpdate', ContinuousEvent], [TOP_TRANSITION_END, 'transitionEnd', ContinuousEvent], [TOP_WAITING, 'waiting', ContinuousEvent]];
    var eventTypes = {};
    var topLevelEventsToDispatchConfig = {};

    for (var i = 0; i < eventTuples.length; i++) {
      var eventTuple = eventTuples[i];
      var topEvent = eventTuple[0];
      var event = eventTuple[1];
      var eventPriority = eventTuple[2];
      var capitalizedEvent = event[0].toUpperCase() + event.slice(1);
      var onEvent = 'on' + capitalizedEvent;
      var config = {
        phasedRegistrationNames: {
          bubbled: onEvent,
          captured: onEvent + 'Capture'
        },
        dependencies: [topEvent],
        eventPriority: eventPriority
      };
      eventTypes[event] = config;
      topLevelEventsToDispatchConfig[topEvent] = config;
    } // Only used in DEV for exhaustiveness validation.


    var knownHTMLTopLevelTypes = [TOP_ABORT, TOP_CANCEL, TOP_CAN_PLAY, TOP_CAN_PLAY_THROUGH, TOP_CLOSE, TOP_DURATION_CHANGE, TOP_EMPTIED, TOP_ENCRYPTED, TOP_ENDED, TOP_ERROR, TOP_INPUT, TOP_INVALID, TOP_LOAD, TOP_LOADED_DATA, TOP_LOADED_METADATA, TOP_LOAD_START, TOP_PAUSE, TOP_PLAY, TOP_PLAYING, TOP_PROGRESS, TOP_RATE_CHANGE, TOP_RESET, TOP_SEEKED, TOP_SEEKING, TOP_STALLED, TOP_SUBMIT, TOP_SUSPEND, TOP_TIME_UPDATE, TOP_TOGGLE, TOP_VOLUME_CHANGE, TOP_WAITING];
    var SimpleEventPlugin = {
      eventTypes: eventTypes,
      getEventPriority: function (topLevelType) {
        var config = topLevelEventsToDispatchConfig[topLevelType];
        return config !== undefined ? config.eventPriority : ContinuousEvent;
      },
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var dispatchConfig = topLevelEventsToDispatchConfig[topLevelType];

        if (!dispatchConfig) {
          return null;
        }

        var EventConstructor;

        switch (topLevelType) {
          case TOP_KEY_PRESS:
            // Firefox creates a keypress event for function keys too. This removes
            // the unwanted keypress events. Enter is however both printable and
            // non-printable. One would expect Tab to be as well (but it isn't).
            if (getEventCharCode(nativeEvent) === 0) {
              return null;
            }

          /* falls through */

          case TOP_KEY_DOWN:
          case TOP_KEY_UP:
            EventConstructor = SyntheticKeyboardEvent;
            break;

          case TOP_BLUR:
          case TOP_FOCUS:
            EventConstructor = SyntheticFocusEvent;
            break;

          case TOP_CLICK:
            // Firefox creates a click event on right mouse clicks. This removes the
            // unwanted click events.
            if (nativeEvent.button === 2) {
              return null;
            }

          /* falls through */

          case TOP_AUX_CLICK:
          case TOP_DOUBLE_CLICK:
          case TOP_MOUSE_DOWN:
          case TOP_MOUSE_MOVE:
          case TOP_MOUSE_UP: // TODO: Disabled elements should not respond to mouse events

          /* falls through */

          case TOP_MOUSE_OUT:
          case TOP_MOUSE_OVER:
          case TOP_CONTEXT_MENU:
            EventConstructor = SyntheticMouseEvent;
            break;

          case TOP_DRAG:
          case TOP_DRAG_END:
          case TOP_DRAG_ENTER:
          case TOP_DRAG_EXIT:
          case TOP_DRAG_LEAVE:
          case TOP_DRAG_OVER:
          case TOP_DRAG_START:
          case TOP_DROP:
            EventConstructor = SyntheticDragEvent;
            break;

          case TOP_TOUCH_CANCEL:
          case TOP_TOUCH_END:
          case TOP_TOUCH_MOVE:
          case TOP_TOUCH_START:
            EventConstructor = SyntheticTouchEvent;
            break;

          case TOP_ANIMATION_END:
          case TOP_ANIMATION_ITERATION:
          case TOP_ANIMATION_START:
            EventConstructor = SyntheticAnimationEvent;
            break;

          case TOP_TRANSITION_END:
            EventConstructor = SyntheticTransitionEvent;
            break;

          case TOP_SCROLL:
            EventConstructor = SyntheticUIEvent;
            break;

          case TOP_WHEEL:
            EventConstructor = SyntheticWheelEvent;
            break;

          case TOP_COPY:
          case TOP_CUT:
          case TOP_PASTE:
            EventConstructor = SyntheticClipboardEvent;
            break;

          case TOP_GOT_POINTER_CAPTURE:
          case TOP_LOST_POINTER_CAPTURE:
          case TOP_POINTER_CANCEL:
          case TOP_POINTER_DOWN:
          case TOP_POINTER_MOVE:
          case TOP_POINTER_OUT:
          case TOP_POINTER_OVER:
          case TOP_POINTER_UP:
            EventConstructor = SyntheticPointerEvent;
            break;

          default:
            {
              if (knownHTMLTopLevelTypes.indexOf(topLevelType) === -1) {
                warningWithoutStack$1(false, 'SimpleEventPlugin: Unhandled event type, `%s`. This warning ' + 'is likely caused by a bug in React. Please file an issue.', topLevelType);
              }
            } // HTML Events
            // @see http://www.w3.org/TR/html5/index.html#events-0

            EventConstructor = SyntheticEvent;
            break;
        }

        var event = EventConstructor.getPooled(dispatchConfig, targetInst, nativeEvent, nativeEventTarget);
        accumulateTwoPhaseDispatches(event);
        return event;
      }
    };
    var passiveBrowserEventsSupported = false; // Check if browser support events with passive listeners
    // https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support

    if (enableFlareAPI && canUseDOM) {
      try {
        var options = {}; // $FlowFixMe: Ignore Flow complaining about needing a value

        Object.defineProperty(options, 'passive', {
          get: function () {
            passiveBrowserEventsSupported = true;
          }
        });
        window.addEventListener('test', options, options);
        window.removeEventListener('test', options, options);
      } catch (e) {
        passiveBrowserEventsSupported = false;
      }
    } // Intentionally not named imports because Rollup would use dynamic dispatch for
    // CommonJS interop named imports.


    var UserBlockingPriority$1 = Scheduler.unstable_UserBlockingPriority;
    var runWithPriority$1 = Scheduler.unstable_runWithPriority;
    var getEventPriority = SimpleEventPlugin.getEventPriority;
    var CALLBACK_BOOKKEEPING_POOL_SIZE = 10;
    var callbackBookkeepingPool = [];
    /**
     * Find the deepest React component completely containing the root of the
     * passed-in instance (for use when entire React trees are nested within each
     * other). If React trees are not nested, returns null.
     */

    function findRootContainerNode(inst) {
      if (inst.tag === HostRoot) {
        return inst.stateNode.containerInfo;
      } // TODO: It may be a good idea to cache this to prevent unnecessary DOM
      // traversal, but caching is difficult to do correctly without using a
      // mutation observer to listen for all DOM changes.


      while (inst.return) {
        inst = inst.return;
      }

      if (inst.tag !== HostRoot) {
        // This can happen if we're in a detached tree.
        return null;
      }

      return inst.stateNode.containerInfo;
    } // Used to store ancestor hierarchy in top level callback


    function getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags) {
      if (callbackBookkeepingPool.length) {
        var instance = callbackBookkeepingPool.pop();
        instance.topLevelType = topLevelType;
        instance.eventSystemFlags = eventSystemFlags;
        instance.nativeEvent = nativeEvent;
        instance.targetInst = targetInst;
        return instance;
      }

      return {
        topLevelType: topLevelType,
        eventSystemFlags: eventSystemFlags,
        nativeEvent: nativeEvent,
        targetInst: targetInst,
        ancestors: []
      };
    }

    function releaseTopLevelCallbackBookKeeping(instance) {
      instance.topLevelType = null;
      instance.nativeEvent = null;
      instance.targetInst = null;
      instance.ancestors.length = 0;

      if (callbackBookkeepingPool.length < CALLBACK_BOOKKEEPING_POOL_SIZE) {
        callbackBookkeepingPool.push(instance);
      }
    }

    function handleTopLevel(bookKeeping) {
      var targetInst = bookKeeping.targetInst; // Loop through the hierarchy, in case there's any nested components.
      // It's important that we build the array of ancestors before calling any
      // event handlers, because event handlers can modify the DOM, leading to
      // inconsistencies with ReactMount's node cache. See #1105.

      var ancestor = targetInst;

      do {
        if (!ancestor) {
          var ancestors = bookKeeping.ancestors;
          ancestors.push(ancestor);
          break;
        }

        var root = findRootContainerNode(ancestor);

        if (!root) {
          break;
        }

        var tag = ancestor.tag;

        if (tag === HostComponent || tag === HostText) {
          bookKeeping.ancestors.push(ancestor);
        }

        ancestor = getClosestInstanceFromNode(root);
      } while (ancestor);

      for (var i = 0; i < bookKeeping.ancestors.length; i++) {
        targetInst = bookKeeping.ancestors[i];
        var eventTarget = getEventTarget(bookKeeping.nativeEvent);
        var topLevelType = bookKeeping.topLevelType;
        var nativeEvent = bookKeeping.nativeEvent;
        runExtractedPluginEventsInBatch(topLevelType, targetInst, nativeEvent, eventTarget, bookKeeping.eventSystemFlags);
      }
    } // TODO: can we stop exporting these?


    var _enabled = true;

    function setEnabled(enabled) {
      _enabled = !!enabled;
    }

    function isEnabled() {
      return _enabled;
    }

    function trapBubbledEvent(topLevelType, element) {
      trapEventForPluginEventSystem(element, topLevelType, false);
    }

    function trapCapturedEvent(topLevelType, element) {
      trapEventForPluginEventSystem(element, topLevelType, true);
    }

    function trapEventForResponderEventSystem(element, topLevelType, passive) {
      if (enableFlareAPI) {
        var rawEventName = getRawEventName(topLevelType);
        var eventFlags = RESPONDER_EVENT_SYSTEM; // If passive option is not supported, then the event will be
        // active and not passive, but we flag it as using not being
        // supported too. This way the responder event plugins know,
        // and can provide polyfills if needed.

        if (passive) {
          if (passiveBrowserEventsSupported) {
            eventFlags |= IS_PASSIVE;
          } else {
            eventFlags |= IS_ACTIVE;
            eventFlags |= PASSIVE_NOT_SUPPORTED;
            passive = false;
          }
        } else {
          eventFlags |= IS_ACTIVE;
        } // Check if interactive and wrap in discreteUpdates


        var listener = dispatchEvent.bind(null, topLevelType, eventFlags);

        if (passiveBrowserEventsSupported) {
          addEventCaptureListenerWithPassiveFlag(element, rawEventName, listener, passive);
        } else {
          addEventCaptureListener(element, rawEventName, listener);
        }
      }
    }

    function trapEventForPluginEventSystem(element, topLevelType, capture) {
      var listener;

      switch (getEventPriority(topLevelType)) {
        case DiscreteEvent:
          listener = dispatchDiscreteEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
          break;

        case UserBlockingEvent:
          listener = dispatchUserBlockingUpdate.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
          break;

        case ContinuousEvent:
        default:
          listener = dispatchEvent.bind(null, topLevelType, PLUGIN_EVENT_SYSTEM);
          break;
      }

      var rawEventName = getRawEventName(topLevelType);

      if (capture) {
        addEventCaptureListener(element, rawEventName, listener);
      } else {
        addEventBubbleListener(element, rawEventName, listener);
      }
    }

    function dispatchDiscreteEvent(topLevelType, eventSystemFlags, nativeEvent) {
      flushDiscreteUpdatesIfNeeded(nativeEvent.timeStamp);
      discreteUpdates(dispatchEvent, topLevelType, eventSystemFlags, nativeEvent);
    }

    function dispatchUserBlockingUpdate(topLevelType, eventSystemFlags, nativeEvent) {
      runWithPriority$1(UserBlockingPriority$1, dispatchEvent.bind(null, topLevelType, eventSystemFlags, nativeEvent));
    }

    function dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst) {
      var bookKeeping = getTopLevelCallbackBookKeeping(topLevelType, nativeEvent, targetInst, eventSystemFlags);

      try {
        // Event queue being processed in the same cycle allows
        // `preventDefault`.
        batchedEventUpdates(handleTopLevel, bookKeeping);
      } finally {
        releaseTopLevelCallbackBookKeeping(bookKeeping);
      }
    }

    function dispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
      if (!_enabled) {
        return;
      }

      if (hasQueuedDiscreteEvents() && isReplayableDiscreteEvent(topLevelType)) {
        // If we already have a queue of discrete events, and this is another discrete
        // event, then we can't dispatch it regardless of its target, since they
        // need to dispatch in order.
        queueDiscreteEvent(null, // Flags that we're not actually blocked on anything as far as we know.
        topLevelType, eventSystemFlags, nativeEvent);
        return;
      }

      var blockedOn = attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent);

      if (blockedOn === null) {
        // We successfully dispatched this event.
        clearIfContinuousEvent(topLevelType, nativeEvent);
        return;
      }

      if (isReplayableDiscreteEvent(topLevelType)) {
        // This this to be replayed later once the target is available.
        queueDiscreteEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent);
        return;
      }

      if (queueIfContinuousEvent(blockedOn, topLevelType, eventSystemFlags, nativeEvent)) {
        return;
      } // We need to clear only if we didn't queue because
      // queueing is accummulative.


      clearIfContinuousEvent(topLevelType, nativeEvent); // This is not replayable so we'll invoke it but without a target,
      // in case the event system needs to trace it.

      if (enableFlareAPI) {
        if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
          dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
        }

        if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
          // React Flare event system
          dispatchEventForResponderEventSystem(topLevelType, null, nativeEvent, getEventTarget(nativeEvent), eventSystemFlags);
        }
      } else {
        dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, null);
      }
    } // Attempt dispatching an event. Returns a SuspenseInstance or Container if it's blocked.


    function attemptToDispatchEvent(topLevelType, eventSystemFlags, nativeEvent) {
      // TODO: Warn if _enabled is false.
      var nativeEventTarget = getEventTarget(nativeEvent);
      var targetInst = getClosestInstanceFromNode(nativeEventTarget);

      if (targetInst !== null) {
        var nearestMounted = getNearestMountedFiber(targetInst);

        if (nearestMounted === null) {
          // This tree has been unmounted already. Dispatch without a target.
          targetInst = null;
        } else {
          var tag = nearestMounted.tag;

          if (tag === SuspenseComponent) {
            var instance = getSuspenseInstanceFromFiber(nearestMounted);

            if (instance !== null) {
              // Queue the event to be replayed later. Abort dispatching since we
              // don't want this event dispatched twice through the event system.
              // TODO: If this is the first discrete event in the queue. Schedule an increased
              // priority for this boundary.
              return instance;
            } // This shouldn't happen, something went wrong but to avoid blocking
            // the whole system, dispatch the event without a target.
            // TODO: Warn.


            targetInst = null;
          } else if (tag === HostRoot) {
            var root = nearestMounted.stateNode;

            if (root.hydrate) {
              // If this happens during a replay something went wrong and it might block
              // the whole system.
              return getContainerFromFiber(nearestMounted);
            }

            targetInst = null;
          } else if (nearestMounted !== targetInst) {
            // If we get an event (ex: img onload) before committing that
            // component's mount, ignore it for now (that is, treat it as if it was an
            // event on a non-React tree). We might also consider queueing events and
            // dispatching them after the mount.
            targetInst = null;
          }
        }
      }

      if (enableFlareAPI) {
        if (eventSystemFlags & PLUGIN_EVENT_SYSTEM) {
          dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
        }

        if (eventSystemFlags & RESPONDER_EVENT_SYSTEM) {
          // React Flare event system
          dispatchEventForResponderEventSystem(topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags);
        }
      } else {
        dispatchEventForPluginEventSystem(topLevelType, eventSystemFlags, nativeEvent, targetInst);
      } // We're not blocked on anything.


      return null;
    }
    /**
     * Checks if an event is supported in the current execution environment.
     *
     * NOTE: This will not work correctly for non-generic events such as `change`,
     * `reset`, `load`, `error`, and `select`.
     *
     * Borrows from Modernizr.
     *
     * @param {string} eventNameSuffix Event name, e.g. "click".
     * @return {boolean} True if the event is supported.
     * @internal
     * @license Modernizr 3.0.0pre (Custom Build) | MIT
     */


    function isEventSupported(eventNameSuffix) {
      if (!canUseDOM) {
        return false;
      }

      var eventName = 'on' + eventNameSuffix;
      var isSupported = eventName in document;

      if (!isSupported) {
        var element = document.createElement('div');
        element.setAttribute(eventName, 'return;');
        isSupported = typeof element[eventName] === 'function';
      }

      return isSupported;
    }
    /**
     * Summary of `ReactBrowserEventEmitter` event handling:
     *
     *  - Top-level delegation is used to trap most native browser events. This
     *    may only occur in the main thread and is the responsibility of
     *    ReactDOMEventListener, which is injected and can therefore support
     *    pluggable event sources. This is the only work that occurs in the main
     *    thread.
     *
     *  - We normalize and de-duplicate events to account for browser quirks. This
     *    may be done in the worker thread.
     *
     *  - Forward these native events (with the associated top-level type used to
     *    trap it) to `EventPluginHub`, which in turn will ask plugins if they want
     *    to extract any synthetic events.
     *
     *  - The `EventPluginHub` will then process each event by annotating them with
     *    "dispatches", a sequence of listeners and IDs that care about that event.
     *
     *  - The `EventPluginHub` then dispatches the events.
     *
     * Overview of React and the event system:
     *
     * +------------+    .
     * |    DOM     |    .
     * +------------+    .
     *       |           .
     *       v           .
     * +------------+    .
     * | ReactEvent |    .
     * |  Listener  |    .
     * +------------+    .                         +-----------+
     *       |           .               +--------+|SimpleEvent|
     *       |           .               |         |Plugin     |
     * +-----|------+    .               v         +-----------+
     * |     |      |    .    +--------------+                    +------------+
     * |     +-----------.--->|EventPluginHub|                    |    Event   |
     * |            |    .    |              |     +-----------+  | Propagators|
     * | ReactEvent |    .    |              |     |TapEvent   |  |------------|
     * |  Emitter   |    .    |              |<---+|Plugin     |  |other plugin|
     * |            |    .    |              |     +-----------+  |  utilities |
     * |     +-----------.--->|              |                    +------------+
     * |     |      |    .    +--------------+
     * +-----|------+    .                ^        +-----------+
     *       |           .                |        |Enter/Leave|
     *       +           .                +-------+|Plugin     |
     * +-------------+   .                         +-----------+
     * | application |   .
     * |-------------|   .
     * |             |   .
     * |             |   .
     * +-------------+   .
     *                   .
     *    React Core     .  General Purpose Event Plugin System
     */


    var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;
    var elementListeningSets = new PossiblyWeakMap();

    function getListeningSetForElement(element) {
      var listeningSet = elementListeningSets.get(element);

      if (listeningSet === undefined) {
        listeningSet = new Set();
        elementListeningSets.set(element, listeningSet);
      }

      return listeningSet;
    }
    /**
     * We listen for bubbled touch events on the document object.
     *
     * Firefox v8.01 (and possibly others) exhibited strange behavior when
     * mounting `onmousemove` events at some node that was not the document
     * element. The symptoms were that if your mouse is not moving over something
     * contained within that mount point (for example on the background) the
     * top-level listeners for `onmousemove` won't be called. However, if you
     * register the `mousemove` on the document object, then it will of course
     * catch all `mousemove`s. This along with iOS quirks, justifies restricting
     * top-level listeners to the document object only, at least for these
     * movement types of events and possibly all events.
     *
     * @see http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
     *
     * Also, `keyup`/`keypress`/`keydown` do not bubble to the window on IE, but
     * they bubble to document.
     *
     * @param {string} registrationName Name of listener (e.g. `onClick`).
     * @param {object} mountAt Container where to mount the listener
     */


    function listenTo(registrationName, mountAt) {
      var listeningSet = getListeningSetForElement(mountAt);
      var dependencies = registrationNameDependencies[registrationName];

      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];
        listenToTopLevel(dependency, mountAt, listeningSet);
      }
    }

    function listenToTopLevel(topLevelType, mountAt, listeningSet) {
      if (!listeningSet.has(topLevelType)) {
        switch (topLevelType) {
          case TOP_SCROLL:
            trapCapturedEvent(TOP_SCROLL, mountAt);
            break;

          case TOP_FOCUS:
          case TOP_BLUR:
            trapCapturedEvent(TOP_FOCUS, mountAt);
            trapCapturedEvent(TOP_BLUR, mountAt); // We set the flag for a single dependency later in this function,
            // but this ensures we mark both as attached rather than just one.

            listeningSet.add(TOP_BLUR);
            listeningSet.add(TOP_FOCUS);
            break;

          case TOP_CANCEL:
          case TOP_CLOSE:
            if (isEventSupported(getRawEventName(topLevelType))) {
              trapCapturedEvent(topLevelType, mountAt);
            }

            break;

          case TOP_INVALID:
          case TOP_SUBMIT:
          case TOP_RESET:
            // We listen to them on the target DOM elements.
            // Some of them bubble so we don't want them to fire twice.
            break;

          default:
            // By default, listen on the top level to all non-media events.
            // Media events don't bubble so adding the listener wouldn't do anything.
            var isMediaEvent = mediaEventTypes.indexOf(topLevelType) !== -1;

            if (!isMediaEvent) {
              trapBubbledEvent(topLevelType, mountAt);
            }

            break;
        }

        listeningSet.add(topLevelType);
      }
    }

    function isListeningToAllDependencies(registrationName, mountAt) {
      var listeningSet = getListeningSetForElement(mountAt);
      var dependencies = registrationNameDependencies[registrationName];

      for (var i = 0; i < dependencies.length; i++) {
        var dependency = dependencies[i];

        if (!listeningSet.has(dependency)) {
          return false;
        }
      }

      return true;
    } // List derived from Gecko source code:
    // https://github.com/mozilla/gecko-dev/blob/4e638efc71/layout/style/test/property_database.js


    var shorthandToLonghand = {
      animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
      background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
      backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
      border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
      borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
      borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
      borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
      borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
      borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
      borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
      borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
      borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
      borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
      borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
      borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
      borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
      columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
      columns: ['columnCount', 'columnWidth'],
      flex: ['flexBasis', 'flexGrow', 'flexShrink'],
      flexFlow: ['flexDirection', 'flexWrap'],
      font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
      fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
      gap: ['columnGap', 'rowGap'],
      grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
      gridColumn: ['gridColumnEnd', 'gridColumnStart'],
      gridColumnGap: ['columnGap'],
      gridGap: ['columnGap', 'rowGap'],
      gridRow: ['gridRowEnd', 'gridRowStart'],
      gridRowGap: ['rowGap'],
      gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
      listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
      margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
      marker: ['markerEnd', 'markerMid', 'markerStart'],
      mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
      maskPosition: ['maskPositionX', 'maskPositionY'],
      outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
      overflow: ['overflowX', 'overflowY'],
      padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
      placeContent: ['alignContent', 'justifyContent'],
      placeItems: ['alignItems', 'justifyItems'],
      placeSelf: ['alignSelf', 'justifySelf'],
      textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
      textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
      transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
      wordWrap: ['overflowWrap']
    };
    /**
     * CSS properties which accept numbers but are not in units of "px".
     */

    var isUnitlessNumber = {
      animationIterationCount: true,
      borderImageOutset: true,
      borderImageSlice: true,
      borderImageWidth: true,
      boxFlex: true,
      boxFlexGroup: true,
      boxOrdinalGroup: true,
      columnCount: true,
      columns: true,
      flex: true,
      flexGrow: true,
      flexPositive: true,
      flexShrink: true,
      flexNegative: true,
      flexOrder: true,
      gridArea: true,
      gridRow: true,
      gridRowEnd: true,
      gridRowSpan: true,
      gridRowStart: true,
      gridColumn: true,
      gridColumnEnd: true,
      gridColumnSpan: true,
      gridColumnStart: true,
      fontWeight: true,
      lineClamp: true,
      lineHeight: true,
      opacity: true,
      order: true,
      orphans: true,
      tabSize: true,
      widows: true,
      zIndex: true,
      zoom: true,
      // SVG-related properties
      fillOpacity: true,
      floodOpacity: true,
      stopOpacity: true,
      strokeDasharray: true,
      strokeDashoffset: true,
      strokeMiterlimit: true,
      strokeOpacity: true,
      strokeWidth: true
    };
    /**
     * @param {string} prefix vendor-specific prefix, eg: Webkit
     * @param {string} key style name, eg: transitionDuration
     * @return {string} style name prefixed with `prefix`, properly camelCased, eg:
     * WebkitTransitionDuration
     */

    function prefixKey(prefix, key) {
      return prefix + key.charAt(0).toUpperCase() + key.substring(1);
    }
    /**
     * Support style names that may come passed in prefixed by adding permutations
     * of vendor prefixes.
     */


    var prefixes = ['Webkit', 'ms', 'Moz', 'O']; // Using Object.keys here, or else the vanilla for-in loop makes IE8 go into an
    // infinite loop, because it iterates over the newly added props too.

    Object.keys(isUnitlessNumber).forEach(function (prop) {
      prefixes.forEach(function (prefix) {
        isUnitlessNumber[prefixKey(prefix, prop)] = isUnitlessNumber[prop];
      });
    });
    /**
     * Convert a value into the proper css writable value. The style name `name`
     * should be logical (no hyphens), as specified
     * in `CSSProperty.isUnitlessNumber`.
     *
     * @param {string} name CSS property name such as `topMargin`.
     * @param {*} value CSS property value such as `10px`.
     * @return {string} Normalized style value with dimensions applied.
     */

    function dangerousStyleValue(name, value, isCustomProperty) {
      // Note that we've removed escapeTextForBrowser() calls here since the
      // whole string will be escaped when the attribute is injected into
      // the markup. If you provide unsafe user data here they can inject
      // arbitrary CSS which may be problematic (I couldn't repro this):
      // https://www.owasp.org/index.php/XSS_Filter_Evasion_Cheat_Sheet
      // http://www.thespanner.co.uk/2007/11/26/ultimate-xss-css-injection/
      // This is not an XSS hole but instead a potential CSS injection issue
      // which has lead to a greater discussion about how we're going to
      // trust URLs moving forward. See #2115901
      var isEmpty = value == null || typeof value === 'boolean' || value === '';

      if (isEmpty) {
        return '';
      }

      if (!isCustomProperty && typeof value === 'number' && value !== 0 && !(isUnitlessNumber.hasOwnProperty(name) && isUnitlessNumber[name])) {
        return value + 'px'; // Presumes implicit 'px' suffix for unitless numbers
      }

      return ('' + value).trim();
    }

    var uppercasePattern = /([A-Z])/g;
    var msPattern = /^ms-/;
    /**
     * Hyphenates a camelcased CSS property name, for example:
     *
     *   > hyphenateStyleName('backgroundColor')
     *   < "background-color"
     *   > hyphenateStyleName('MozTransition')
     *   < "-moz-transition"
     *   > hyphenateStyleName('msTransition')
     *   < "-ms-transition"
     *
     * As Modernizr suggests (http://modernizr.com/docs/#prefixed), an `ms` prefix
     * is converted to `-ms-`.
     */

    function hyphenateStyleName(name) {
      return name.replace(uppercasePattern, '-$1').toLowerCase().replace(msPattern, '-ms-');
    }

    var warnValidStyle = function () {};

    {
      // 'msTransform' is correct, but the other prefixes should be capitalized
      var badVendoredStyleNamePattern = /^(?:webkit|moz|o)[A-Z]/;
      var msPattern$1 = /^-ms-/;
      var hyphenPattern = /-(.)/g; // style values shouldn't contain a semicolon

      var badStyleValueWithSemicolonPattern = /;\s*$/;
      var warnedStyleNames = {};
      var warnedStyleValues = {};
      var warnedForNaNValue = false;
      var warnedForInfinityValue = false;

      var camelize = function (string) {
        return string.replace(hyphenPattern, function (_, character) {
          return character.toUpperCase();
        });
      };

      var warnHyphenatedStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        warning$1(false, 'Unsupported style property %s. Did you mean %s?', name, // As Andi Smith suggests
        // (http://www.andismith.com/blog/2012/02/modernizr-prefixed/), an `-ms` prefix
        // is converted to lowercase `ms`.
        camelize(name.replace(msPattern$1, 'ms-')));
      };

      var warnBadVendoredStyleName = function (name) {
        if (warnedStyleNames.hasOwnProperty(name) && warnedStyleNames[name]) {
          return;
        }

        warnedStyleNames[name] = true;
        warning$1(false, 'Unsupported vendor-prefixed style property %s. Did you mean %s?', name, name.charAt(0).toUpperCase() + name.slice(1));
      };

      var warnStyleValueWithSemicolon = function (name, value) {
        if (warnedStyleValues.hasOwnProperty(value) && warnedStyleValues[value]) {
          return;
        }

        warnedStyleValues[value] = true;
        warning$1(false, "Style property values shouldn't contain a semicolon. " + 'Try "%s: %s" instead.', name, value.replace(badStyleValueWithSemicolonPattern, ''));
      };

      var warnStyleValueIsNaN = function (name, value) {
        if (warnedForNaNValue) {
          return;
        }

        warnedForNaNValue = true;
        warning$1(false, '`NaN` is an invalid value for the `%s` css style property.', name);
      };

      var warnStyleValueIsInfinity = function (name, value) {
        if (warnedForInfinityValue) {
          return;
        }

        warnedForInfinityValue = true;
        warning$1(false, '`Infinity` is an invalid value for the `%s` css style property.', name);
      };

      warnValidStyle = function (name, value) {
        if (name.indexOf('-') > -1) {
          warnHyphenatedStyleName(name);
        } else if (badVendoredStyleNamePattern.test(name)) {
          warnBadVendoredStyleName(name);
        } else if (badStyleValueWithSemicolonPattern.test(value)) {
          warnStyleValueWithSemicolon(name, value);
        }

        if (typeof value === 'number') {
          if (isNaN(value)) {
            warnStyleValueIsNaN(name, value);
          } else if (!isFinite(value)) {
            warnStyleValueIsInfinity(name, value);
          }
        }
      };
    }
    var warnValidStyle$1 = warnValidStyle;
    /**
     * Operations for dealing with CSS properties.
     */

    /**
     * This creates a string that is expected to be equivalent to the style
     * attribute generated by server-side rendering. It by-passes warnings and
     * security checks so it's not safe to use this value for anything other than
     * comparison. It is only used in DEV for SSR validation.
     */

    function createDangerousStringForStyles(styles) {
      {
        var serialized = '';
        var delimiter = '';

        for (var styleName in styles) {
          if (!styles.hasOwnProperty(styleName)) {
            continue;
          }

          var styleValue = styles[styleName];

          if (styleValue != null) {
            var isCustomProperty = styleName.indexOf('--') === 0;
            serialized += delimiter + (isCustomProperty ? styleName : hyphenateStyleName(styleName)) + ':';
            serialized += dangerousStyleValue(styleName, styleValue, isCustomProperty);
            delimiter = ';';
          }
        }

        return serialized || null;
      }
    }
    /**
     * Sets the value for multiple styles on a node.  If a value is specified as
     * '' (empty string), the corresponding style property will be unset.
     *
     * @param {DOMElement} node
     * @param {object} styles
     */


    function setValueForStyles(node, styles) {
      var style = node.style;

      for (var styleName in styles) {
        if (!styles.hasOwnProperty(styleName)) {
          continue;
        }

        var isCustomProperty = styleName.indexOf('--') === 0;
        {
          if (!isCustomProperty) {
            warnValidStyle$1(styleName, styles[styleName]);
          }
        }
        var styleValue = dangerousStyleValue(styleName, styles[styleName], isCustomProperty);

        if (styleName === 'float') {
          styleName = 'cssFloat';
        }

        if (isCustomProperty) {
          style.setProperty(styleName, styleValue);
        } else {
          style[styleName] = styleValue;
        }
      }
    }

    function isValueEmpty(value) {
      return value == null || typeof value === 'boolean' || value === '';
    }
    /**
     * Given {color: 'red', overflow: 'hidden'} returns {
     *   color: 'color',
     *   overflowX: 'overflow',
     *   overflowY: 'overflow',
     * }. This can be read as "the overflowY property was set by the overflow
     * shorthand". That is, the values are the property that each was derived from.
     */


    function expandShorthandMap(styles) {
      var expanded = {};

      for (var key in styles) {
        var longhands = shorthandToLonghand[key] || [key];

        for (var i = 0; i < longhands.length; i++) {
          expanded[longhands[i]] = key;
        }
      }

      return expanded;
    }
    /**
     * When mixing shorthand and longhand property names, we warn during updates if
     * we expect an incorrect result to occur. In particular, we warn for:
     *
     * Updating a shorthand property (longhand gets overwritten):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'baz', fontVariant: 'bar'}
     *   becomes .style.font = 'baz'
     * Removing a shorthand property (longhand gets lost too):
     *   {font: 'foo', fontVariant: 'bar'} -> {fontVariant: 'bar'}
     *   becomes .style.font = ''
     * Removing a longhand property (should revert to shorthand; doesn't):
     *   {font: 'foo', fontVariant: 'bar'} -> {font: 'foo'}
     *   becomes .style.fontVariant = ''
     */


    function validateShorthandPropertyCollisionInDev(styleUpdates, nextStyles) {
      if (!warnAboutShorthandPropertyCollision) {
        return;
      }

      if (!nextStyles) {
        return;
      }

      var expandedUpdates = expandShorthandMap(styleUpdates);
      var expandedStyles = expandShorthandMap(nextStyles);
      var warnedAbout = {};

      for (var key in expandedUpdates) {
        var originalKey = expandedUpdates[key];
        var correctOriginalKey = expandedStyles[key];

        if (correctOriginalKey && originalKey !== correctOriginalKey) {
          var warningKey = originalKey + ',' + correctOriginalKey;

          if (warnedAbout[warningKey]) {
            continue;
          }

          warnedAbout[warningKey] = true;
          warning$1(false, '%s a style property during rerender (%s) when a ' + 'conflicting property is set (%s) can lead to styling bugs. To ' + "avoid this, don't mix shorthand and non-shorthand properties " + 'for the same value; instead, replace the shorthand with ' + 'separate values.', isValueEmpty(styleUpdates[originalKey]) ? 'Removing' : 'Updating', originalKey, correctOriginalKey);
        }
      }
    } // For HTML, certain tags should omit their close tag. We keep a whitelist for
    // those special-case tags.


    var omittedCloseTags = {
      area: true,
      base: true,
      br: true,
      col: true,
      embed: true,
      hr: true,
      img: true,
      input: true,
      keygen: true,
      link: true,
      meta: true,
      param: true,
      source: true,
      track: true,
      wbr: true // NOTE: menuitem's close tag should be omitted, but that causes problems.

    }; // `omittedCloseTags` except that `menuitem` should still have its closing tag.

    var voidElementTags = _assign({
      menuitem: true
    }, omittedCloseTags); // or add stack by default to invariants where possible.


    var HTML$1 = '__html';
    var ReactDebugCurrentFrame$3 = null;
    {
      ReactDebugCurrentFrame$3 = ReactSharedInternals.ReactDebugCurrentFrame;
    }

    function assertValidProps(tag, props) {
      if (!props) {
        return;
      } // Note the use of `==` which checks for null or undefined.


      if (voidElementTags[tag]) {
        if (!(props.children == null && props.dangerouslySetInnerHTML == null)) {
          {
            throw Error(tag + " is a void element tag and must neither have `children` nor use `dangerouslySetInnerHTML`." + ReactDebugCurrentFrame$3.getStackAddendum());
          }
        }
      }

      if (props.dangerouslySetInnerHTML != null) {
        if (!(props.children == null)) {
          {
            throw Error("Can only set one of `children` or `props.dangerouslySetInnerHTML`.");
          }
        }

        if (!(typeof props.dangerouslySetInnerHTML === 'object' && HTML$1 in props.dangerouslySetInnerHTML)) {
          {
            throw Error("`props.dangerouslySetInnerHTML` must be in the form `{__html: ...}`. Please visit https://fb.me/react-invariant-dangerously-set-inner-html for more information.");
          }
        }
      }

      {
        !(props.suppressContentEditableWarning || !props.contentEditable || props.children == null) ? warning$1(false, 'A component is `contentEditable` and contains `children` managed by ' + 'React. It is now your responsibility to guarantee that none of ' + 'those nodes are unexpectedly modified or duplicated. This is ' + 'probably not intentional.') : void 0;
      }

      if (!(props.style == null || typeof props.style === 'object')) {
        {
          throw Error("The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX." + ReactDebugCurrentFrame$3.getStackAddendum());
        }
      }
    }

    function isCustomComponent(tagName, props) {
      if (tagName.indexOf('-') === -1) {
        return typeof props.is === 'string';
      }

      switch (tagName) {
        // These are reserved SVG and MathML elements.
        // We don't mind this whitelist too much because we expect it to never grow.
        // The alternative is to track the namespace in a few places which is convoluted.
        // https://w3c.github.io/webcomponents/spec/custom/#custom-elements-core-concepts
        case 'annotation-xml':
        case 'color-profile':
        case 'font-face':
        case 'font-face-src':
        case 'font-face-uri':
        case 'font-face-format':
        case 'font-face-name':
        case 'missing-glyph':
          return false;

        default:
          return true;
      }
    } // When adding attributes to the HTML or SVG whitelist, be sure to
    // also add them to this module to ensure casing and incorrect name
    // warnings.


    var possibleStandardNames = {
      // HTML
      accept: 'accept',
      acceptcharset: 'acceptCharset',
      'accept-charset': 'acceptCharset',
      accesskey: 'accessKey',
      action: 'action',
      allowfullscreen: 'allowFullScreen',
      alt: 'alt',
      as: 'as',
      async: 'async',
      autocapitalize: 'autoCapitalize',
      autocomplete: 'autoComplete',
      autocorrect: 'autoCorrect',
      autofocus: 'autoFocus',
      autoplay: 'autoPlay',
      autosave: 'autoSave',
      capture: 'capture',
      cellpadding: 'cellPadding',
      cellspacing: 'cellSpacing',
      challenge: 'challenge',
      charset: 'charSet',
      checked: 'checked',
      children: 'children',
      cite: 'cite',
      class: 'className',
      classid: 'classID',
      classname: 'className',
      cols: 'cols',
      colspan: 'colSpan',
      content: 'content',
      contenteditable: 'contentEditable',
      contextmenu: 'contextMenu',
      controls: 'controls',
      controlslist: 'controlsList',
      coords: 'coords',
      crossorigin: 'crossOrigin',
      dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
      data: 'data',
      datetime: 'dateTime',
      default: 'default',
      defaultchecked: 'defaultChecked',
      defaultvalue: 'defaultValue',
      defer: 'defer',
      dir: 'dir',
      disabled: 'disabled',
      disablepictureinpicture: 'disablePictureInPicture',
      download: 'download',
      draggable: 'draggable',
      enctype: 'encType',
      for: 'htmlFor',
      form: 'form',
      formmethod: 'formMethod',
      formaction: 'formAction',
      formenctype: 'formEncType',
      formnovalidate: 'formNoValidate',
      formtarget: 'formTarget',
      frameborder: 'frameBorder',
      headers: 'headers',
      height: 'height',
      hidden: 'hidden',
      high: 'high',
      href: 'href',
      hreflang: 'hrefLang',
      htmlfor: 'htmlFor',
      httpequiv: 'httpEquiv',
      'http-equiv': 'httpEquiv',
      icon: 'icon',
      id: 'id',
      innerhtml: 'innerHTML',
      inputmode: 'inputMode',
      integrity: 'integrity',
      is: 'is',
      itemid: 'itemID',
      itemprop: 'itemProp',
      itemref: 'itemRef',
      itemscope: 'itemScope',
      itemtype: 'itemType',
      keyparams: 'keyParams',
      keytype: 'keyType',
      kind: 'kind',
      label: 'label',
      lang: 'lang',
      list: 'list',
      loop: 'loop',
      low: 'low',
      manifest: 'manifest',
      marginwidth: 'marginWidth',
      marginheight: 'marginHeight',
      max: 'max',
      maxlength: 'maxLength',
      media: 'media',
      mediagroup: 'mediaGroup',
      method: 'method',
      min: 'min',
      minlength: 'minLength',
      multiple: 'multiple',
      muted: 'muted',
      name: 'name',
      nomodule: 'noModule',
      nonce: 'nonce',
      novalidate: 'noValidate',
      open: 'open',
      optimum: 'optimum',
      pattern: 'pattern',
      placeholder: 'placeholder',
      playsinline: 'playsInline',
      poster: 'poster',
      preload: 'preload',
      profile: 'profile',
      radiogroup: 'radioGroup',
      readonly: 'readOnly',
      referrerpolicy: 'referrerPolicy',
      rel: 'rel',
      required: 'required',
      reversed: 'reversed',
      role: 'role',
      rows: 'rows',
      rowspan: 'rowSpan',
      sandbox: 'sandbox',
      scope: 'scope',
      scoped: 'scoped',
      scrolling: 'scrolling',
      seamless: 'seamless',
      selected: 'selected',
      shape: 'shape',
      size: 'size',
      sizes: 'sizes',
      span: 'span',
      spellcheck: 'spellCheck',
      src: 'src',
      srcdoc: 'srcDoc',
      srclang: 'srcLang',
      srcset: 'srcSet',
      start: 'start',
      step: 'step',
      style: 'style',
      summary: 'summary',
      tabindex: 'tabIndex',
      target: 'target',
      title: 'title',
      type: 'type',
      usemap: 'useMap',
      value: 'value',
      width: 'width',
      wmode: 'wmode',
      wrap: 'wrap',
      // SVG
      about: 'about',
      accentheight: 'accentHeight',
      'accent-height': 'accentHeight',
      accumulate: 'accumulate',
      additive: 'additive',
      alignmentbaseline: 'alignmentBaseline',
      'alignment-baseline': 'alignmentBaseline',
      allowreorder: 'allowReorder',
      alphabetic: 'alphabetic',
      amplitude: 'amplitude',
      arabicform: 'arabicForm',
      'arabic-form': 'arabicForm',
      ascent: 'ascent',
      attributename: 'attributeName',
      attributetype: 'attributeType',
      autoreverse: 'autoReverse',
      azimuth: 'azimuth',
      basefrequency: 'baseFrequency',
      baselineshift: 'baselineShift',
      'baseline-shift': 'baselineShift',
      baseprofile: 'baseProfile',
      bbox: 'bbox',
      begin: 'begin',
      bias: 'bias',
      by: 'by',
      calcmode: 'calcMode',
      capheight: 'capHeight',
      'cap-height': 'capHeight',
      clip: 'clip',
      clippath: 'clipPath',
      'clip-path': 'clipPath',
      clippathunits: 'clipPathUnits',
      cliprule: 'clipRule',
      'clip-rule': 'clipRule',
      color: 'color',
      colorinterpolation: 'colorInterpolation',
      'color-interpolation': 'colorInterpolation',
      colorinterpolationfilters: 'colorInterpolationFilters',
      'color-interpolation-filters': 'colorInterpolationFilters',
      colorprofile: 'colorProfile',
      'color-profile': 'colorProfile',
      colorrendering: 'colorRendering',
      'color-rendering': 'colorRendering',
      contentscripttype: 'contentScriptType',
      contentstyletype: 'contentStyleType',
      cursor: 'cursor',
      cx: 'cx',
      cy: 'cy',
      d: 'd',
      datatype: 'datatype',
      decelerate: 'decelerate',
      descent: 'descent',
      diffuseconstant: 'diffuseConstant',
      direction: 'direction',
      display: 'display',
      divisor: 'divisor',
      dominantbaseline: 'dominantBaseline',
      'dominant-baseline': 'dominantBaseline',
      dur: 'dur',
      dx: 'dx',
      dy: 'dy',
      edgemode: 'edgeMode',
      elevation: 'elevation',
      enablebackground: 'enableBackground',
      'enable-background': 'enableBackground',
      end: 'end',
      exponent: 'exponent',
      externalresourcesrequired: 'externalResourcesRequired',
      fill: 'fill',
      fillopacity: 'fillOpacity',
      'fill-opacity': 'fillOpacity',
      fillrule: 'fillRule',
      'fill-rule': 'fillRule',
      filter: 'filter',
      filterres: 'filterRes',
      filterunits: 'filterUnits',
      floodopacity: 'floodOpacity',
      'flood-opacity': 'floodOpacity',
      floodcolor: 'floodColor',
      'flood-color': 'floodColor',
      focusable: 'focusable',
      fontfamily: 'fontFamily',
      'font-family': 'fontFamily',
      fontsize: 'fontSize',
      'font-size': 'fontSize',
      fontsizeadjust: 'fontSizeAdjust',
      'font-size-adjust': 'fontSizeAdjust',
      fontstretch: 'fontStretch',
      'font-stretch': 'fontStretch',
      fontstyle: 'fontStyle',
      'font-style': 'fontStyle',
      fontvariant: 'fontVariant',
      'font-variant': 'fontVariant',
      fontweight: 'fontWeight',
      'font-weight': 'fontWeight',
      format: 'format',
      from: 'from',
      fx: 'fx',
      fy: 'fy',
      g1: 'g1',
      g2: 'g2',
      glyphname: 'glyphName',
      'glyph-name': 'glyphName',
      glyphorientationhorizontal: 'glyphOrientationHorizontal',
      'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
      glyphorientationvertical: 'glyphOrientationVertical',
      'glyph-orientation-vertical': 'glyphOrientationVertical',
      glyphref: 'glyphRef',
      gradienttransform: 'gradientTransform',
      gradientunits: 'gradientUnits',
      hanging: 'hanging',
      horizadvx: 'horizAdvX',
      'horiz-adv-x': 'horizAdvX',
      horizoriginx: 'horizOriginX',
      'horiz-origin-x': 'horizOriginX',
      ideographic: 'ideographic',
      imagerendering: 'imageRendering',
      'image-rendering': 'imageRendering',
      in2: 'in2',
      in: 'in',
      inlist: 'inlist',
      intercept: 'intercept',
      k1: 'k1',
      k2: 'k2',
      k3: 'k3',
      k4: 'k4',
      k: 'k',
      kernelmatrix: 'kernelMatrix',
      kernelunitlength: 'kernelUnitLength',
      kerning: 'kerning',
      keypoints: 'keyPoints',
      keysplines: 'keySplines',
      keytimes: 'keyTimes',
      lengthadjust: 'lengthAdjust',
      letterspacing: 'letterSpacing',
      'letter-spacing': 'letterSpacing',
      lightingcolor: 'lightingColor',
      'lighting-color': 'lightingColor',
      limitingconeangle: 'limitingConeAngle',
      local: 'local',
      markerend: 'markerEnd',
      'marker-end': 'markerEnd',
      markerheight: 'markerHeight',
      markermid: 'markerMid',
      'marker-mid': 'markerMid',
      markerstart: 'markerStart',
      'marker-start': 'markerStart',
      markerunits: 'markerUnits',
      markerwidth: 'markerWidth',
      mask: 'mask',
      maskcontentunits: 'maskContentUnits',
      maskunits: 'maskUnits',
      mathematical: 'mathematical',
      mode: 'mode',
      numoctaves: 'numOctaves',
      offset: 'offset',
      opacity: 'opacity',
      operator: 'operator',
      order: 'order',
      orient: 'orient',
      orientation: 'orientation',
      origin: 'origin',
      overflow: 'overflow',
      overlineposition: 'overlinePosition',
      'overline-position': 'overlinePosition',
      overlinethickness: 'overlineThickness',
      'overline-thickness': 'overlineThickness',
      paintorder: 'paintOrder',
      'paint-order': 'paintOrder',
      panose1: 'panose1',
      'panose-1': 'panose1',
      pathlength: 'pathLength',
      patterncontentunits: 'patternContentUnits',
      patterntransform: 'patternTransform',
      patternunits: 'patternUnits',
      pointerevents: 'pointerEvents',
      'pointer-events': 'pointerEvents',
      points: 'points',
      pointsatx: 'pointsAtX',
      pointsaty: 'pointsAtY',
      pointsatz: 'pointsAtZ',
      prefix: 'prefix',
      preservealpha: 'preserveAlpha',
      preserveaspectratio: 'preserveAspectRatio',
      primitiveunits: 'primitiveUnits',
      property: 'property',
      r: 'r',
      radius: 'radius',
      refx: 'refX',
      refy: 'refY',
      renderingintent: 'renderingIntent',
      'rendering-intent': 'renderingIntent',
      repeatcount: 'repeatCount',
      repeatdur: 'repeatDur',
      requiredextensions: 'requiredExtensions',
      requiredfeatures: 'requiredFeatures',
      resource: 'resource',
      restart: 'restart',
      result: 'result',
      results: 'results',
      rotate: 'rotate',
      rx: 'rx',
      ry: 'ry',
      scale: 'scale',
      security: 'security',
      seed: 'seed',
      shaperendering: 'shapeRendering',
      'shape-rendering': 'shapeRendering',
      slope: 'slope',
      spacing: 'spacing',
      specularconstant: 'specularConstant',
      specularexponent: 'specularExponent',
      speed: 'speed',
      spreadmethod: 'spreadMethod',
      startoffset: 'startOffset',
      stddeviation: 'stdDeviation',
      stemh: 'stemh',
      stemv: 'stemv',
      stitchtiles: 'stitchTiles',
      stopcolor: 'stopColor',
      'stop-color': 'stopColor',
      stopopacity: 'stopOpacity',
      'stop-opacity': 'stopOpacity',
      strikethroughposition: 'strikethroughPosition',
      'strikethrough-position': 'strikethroughPosition',
      strikethroughthickness: 'strikethroughThickness',
      'strikethrough-thickness': 'strikethroughThickness',
      string: 'string',
      stroke: 'stroke',
      strokedasharray: 'strokeDasharray',
      'stroke-dasharray': 'strokeDasharray',
      strokedashoffset: 'strokeDashoffset',
      'stroke-dashoffset': 'strokeDashoffset',
      strokelinecap: 'strokeLinecap',
      'stroke-linecap': 'strokeLinecap',
      strokelinejoin: 'strokeLinejoin',
      'stroke-linejoin': 'strokeLinejoin',
      strokemiterlimit: 'strokeMiterlimit',
      'stroke-miterlimit': 'strokeMiterlimit',
      strokewidth: 'strokeWidth',
      'stroke-width': 'strokeWidth',
      strokeopacity: 'strokeOpacity',
      'stroke-opacity': 'strokeOpacity',
      suppresscontenteditablewarning: 'suppressContentEditableWarning',
      suppresshydrationwarning: 'suppressHydrationWarning',
      surfacescale: 'surfaceScale',
      systemlanguage: 'systemLanguage',
      tablevalues: 'tableValues',
      targetx: 'targetX',
      targety: 'targetY',
      textanchor: 'textAnchor',
      'text-anchor': 'textAnchor',
      textdecoration: 'textDecoration',
      'text-decoration': 'textDecoration',
      textlength: 'textLength',
      textrendering: 'textRendering',
      'text-rendering': 'textRendering',
      to: 'to',
      transform: 'transform',
      typeof: 'typeof',
      u1: 'u1',
      u2: 'u2',
      underlineposition: 'underlinePosition',
      'underline-position': 'underlinePosition',
      underlinethickness: 'underlineThickness',
      'underline-thickness': 'underlineThickness',
      unicode: 'unicode',
      unicodebidi: 'unicodeBidi',
      'unicode-bidi': 'unicodeBidi',
      unicoderange: 'unicodeRange',
      'unicode-range': 'unicodeRange',
      unitsperem: 'unitsPerEm',
      'units-per-em': 'unitsPerEm',
      unselectable: 'unselectable',
      valphabetic: 'vAlphabetic',
      'v-alphabetic': 'vAlphabetic',
      values: 'values',
      vectoreffect: 'vectorEffect',
      'vector-effect': 'vectorEffect',
      version: 'version',
      vertadvy: 'vertAdvY',
      'vert-adv-y': 'vertAdvY',
      vertoriginx: 'vertOriginX',
      'vert-origin-x': 'vertOriginX',
      vertoriginy: 'vertOriginY',
      'vert-origin-y': 'vertOriginY',
      vhanging: 'vHanging',
      'v-hanging': 'vHanging',
      videographic: 'vIdeographic',
      'v-ideographic': 'vIdeographic',
      viewbox: 'viewBox',
      viewtarget: 'viewTarget',
      visibility: 'visibility',
      vmathematical: 'vMathematical',
      'v-mathematical': 'vMathematical',
      vocab: 'vocab',
      widths: 'widths',
      wordspacing: 'wordSpacing',
      'word-spacing': 'wordSpacing',
      writingmode: 'writingMode',
      'writing-mode': 'writingMode',
      x1: 'x1',
      x2: 'x2',
      x: 'x',
      xchannelselector: 'xChannelSelector',
      xheight: 'xHeight',
      'x-height': 'xHeight',
      xlinkactuate: 'xlinkActuate',
      'xlink:actuate': 'xlinkActuate',
      xlinkarcrole: 'xlinkArcrole',
      'xlink:arcrole': 'xlinkArcrole',
      xlinkhref: 'xlinkHref',
      'xlink:href': 'xlinkHref',
      xlinkrole: 'xlinkRole',
      'xlink:role': 'xlinkRole',
      xlinkshow: 'xlinkShow',
      'xlink:show': 'xlinkShow',
      xlinktitle: 'xlinkTitle',
      'xlink:title': 'xlinkTitle',
      xlinktype: 'xlinkType',
      'xlink:type': 'xlinkType',
      xmlbase: 'xmlBase',
      'xml:base': 'xmlBase',
      xmllang: 'xmlLang',
      'xml:lang': 'xmlLang',
      xmlns: 'xmlns',
      'xml:space': 'xmlSpace',
      xmlnsxlink: 'xmlnsXlink',
      'xmlns:xlink': 'xmlnsXlink',
      xmlspace: 'xmlSpace',
      y1: 'y1',
      y2: 'y2',
      y: 'y',
      ychannelselector: 'yChannelSelector',
      z: 'z',
      zoomandpan: 'zoomAndPan'
    };
    var ariaProperties = {
      'aria-current': 0,
      // state
      'aria-details': 0,
      'aria-disabled': 0,
      // state
      'aria-hidden': 0,
      // state
      'aria-invalid': 0,
      // state
      'aria-keyshortcuts': 0,
      'aria-label': 0,
      'aria-roledescription': 0,
      // Widget Attributes
      'aria-autocomplete': 0,
      'aria-checked': 0,
      'aria-expanded': 0,
      'aria-haspopup': 0,
      'aria-level': 0,
      'aria-modal': 0,
      'aria-multiline': 0,
      'aria-multiselectable': 0,
      'aria-orientation': 0,
      'aria-placeholder': 0,
      'aria-pressed': 0,
      'aria-readonly': 0,
      'aria-required': 0,
      'aria-selected': 0,
      'aria-sort': 0,
      'aria-valuemax': 0,
      'aria-valuemin': 0,
      'aria-valuenow': 0,
      'aria-valuetext': 0,
      // Live Region Attributes
      'aria-atomic': 0,
      'aria-busy': 0,
      'aria-live': 0,
      'aria-relevant': 0,
      // Drag-and-Drop Attributes
      'aria-dropeffect': 0,
      'aria-grabbed': 0,
      // Relationship Attributes
      'aria-activedescendant': 0,
      'aria-colcount': 0,
      'aria-colindex': 0,
      'aria-colspan': 0,
      'aria-controls': 0,
      'aria-describedby': 0,
      'aria-errormessage': 0,
      'aria-flowto': 0,
      'aria-labelledby': 0,
      'aria-owns': 0,
      'aria-posinset': 0,
      'aria-rowcount': 0,
      'aria-rowindex': 0,
      'aria-rowspan': 0,
      'aria-setsize': 0
    };
    var warnedProperties = {};
    var rARIA = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
    var rARIACamel = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');
    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

    function validateProperty(tagName, name) {
      if (hasOwnProperty$1.call(warnedProperties, name) && warnedProperties[name]) {
        return true;
      }

      if (rARIACamel.test(name)) {
        var ariaName = 'aria-' + name.slice(4).toLowerCase();
        var correctName = ariaProperties.hasOwnProperty(ariaName) ? ariaName : null; // If this is an aria-* attribute, but is not listed in the known DOM
        // DOM properties, then it is an invalid aria-* attribute.

        if (correctName == null) {
          warning$1(false, 'Invalid ARIA attribute `%s`. ARIA attributes follow the pattern aria-* and must be lowercase.', name);
          warnedProperties[name] = true;
          return true;
        } // aria-* attributes should be lowercase; suggest the lowercase version.


        if (name !== correctName) {
          warning$1(false, 'Invalid ARIA attribute `%s`. Did you mean `%s`?', name, correctName);
          warnedProperties[name] = true;
          return true;
        }
      }

      if (rARIA.test(name)) {
        var lowerCasedName = name.toLowerCase();
        var standardName = ariaProperties.hasOwnProperty(lowerCasedName) ? lowerCasedName : null; // If this is an aria-* attribute, but is not listed in the known DOM
        // DOM properties, then it is an invalid aria-* attribute.

        if (standardName == null) {
          warnedProperties[name] = true;
          return false;
        } // aria-* attributes should be lowercase; suggest the lowercase version.


        if (name !== standardName) {
          warning$1(false, 'Unknown ARIA attribute `%s`. Did you mean `%s`?', name, standardName);
          warnedProperties[name] = true;
          return true;
        }
      }

      return true;
    }

    function warnInvalidARIAProps(type, props) {
      var invalidProps = [];

      for (var key in props) {
        var isValid = validateProperty(type, key);

        if (!isValid) {
          invalidProps.push(key);
        }
      }

      var unknownPropString = invalidProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');

      if (invalidProps.length === 1) {
        warning$1(false, 'Invalid aria prop %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
      } else if (invalidProps.length > 1) {
        warning$1(false, 'Invalid aria props %s on <%s> tag. ' + 'For details, see https://fb.me/invalid-aria-prop', unknownPropString, type);
      }
    }

    function validateProperties(type, props) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnInvalidARIAProps(type, props);
    }

    var didWarnValueNull = false;

    function validateProperties$1(type, props) {
      if (type !== 'input' && type !== 'textarea' && type !== 'select') {
        return;
      }

      if (props != null && props.value === null && !didWarnValueNull) {
        didWarnValueNull = true;

        if (type === 'select' && props.multiple) {
          warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty array when `multiple` is set to `true` ' + 'to clear the component or `undefined` for uncontrolled components.', type);
        } else {
          warning$1(false, '`value` prop on `%s` should not be null. ' + 'Consider using an empty string to clear the component or `undefined` ' + 'for uncontrolled components.', type);
        }
      }
    }

    var validateProperty$1 = function () {};

    {
      var warnedProperties$1 = {};
      var _hasOwnProperty = Object.prototype.hasOwnProperty;
      var EVENT_NAME_REGEX = /^on./;
      var INVALID_EVENT_NAME_REGEX = /^on[^A-Z]/;
      var rARIA$1 = new RegExp('^(aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$');
      var rARIACamel$1 = new RegExp('^(aria)[A-Z][' + ATTRIBUTE_NAME_CHAR + ']*$');

      validateProperty$1 = function (tagName, name, value, canUseEventSystem) {
        if (_hasOwnProperty.call(warnedProperties$1, name) && warnedProperties$1[name]) {
          return true;
        }

        var lowerCasedName = name.toLowerCase();

        if (lowerCasedName === 'onfocusin' || lowerCasedName === 'onfocusout') {
          warning$1(false, 'React uses onFocus and onBlur instead of onFocusIn and onFocusOut. ' + 'All React events are normalized to bubble, so onFocusIn and onFocusOut ' + 'are not needed/supported by React.');
          warnedProperties$1[name] = true;
          return true;
        } // We can't rely on the event system being injected on the server.


        if (canUseEventSystem) {
          if (registrationNameModules.hasOwnProperty(name)) {
            return true;
          }

          var registrationName = possibleRegistrationNames.hasOwnProperty(lowerCasedName) ? possibleRegistrationNames[lowerCasedName] : null;

          if (registrationName != null) {
            warning$1(false, 'Invalid event handler property `%s`. Did you mean `%s`?', name, registrationName);
            warnedProperties$1[name] = true;
            return true;
          }

          if (EVENT_NAME_REGEX.test(name)) {
            warning$1(false, 'Unknown event handler property `%s`. It will be ignored.', name);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (EVENT_NAME_REGEX.test(name)) {
          // If no event plugins have been injected, we are in a server environment.
          // So we can't tell if the event name is correct for sure, but we can filter
          // out known bad ones like `onclick`. We can't suggest a specific replacement though.
          if (INVALID_EVENT_NAME_REGEX.test(name)) {
            warning$1(false, 'Invalid event handler property `%s`. ' + 'React events use the camelCase naming convention, for example `onClick`.', name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Let the ARIA attribute hook validate ARIA attributes


        if (rARIA$1.test(name) || rARIACamel$1.test(name)) {
          return true;
        }

        if (lowerCasedName === 'innerhtml') {
          warning$1(false, 'Directly setting property `innerHTML` is not permitted. ' + 'For more information, lookup documentation on `dangerouslySetInnerHTML`.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'aria') {
          warning$1(false, 'The `aria` attribute is reserved for future use in React. ' + 'Pass individual `aria-` attributes instead.');
          warnedProperties$1[name] = true;
          return true;
        }

        if (lowerCasedName === 'is' && value !== null && value !== undefined && typeof value !== 'string') {
          warning$1(false, 'Received a `%s` for a string attribute `is`. If this is expected, cast ' + 'the value to a string.', typeof value);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'number' && isNaN(value)) {
          warning$1(false, 'Received NaN for the `%s` attribute. If this is expected, cast ' + 'the value to a string.', name);
          warnedProperties$1[name] = true;
          return true;
        }

        var propertyInfo = getPropertyInfo(name);
        var isReserved = propertyInfo !== null && propertyInfo.type === RESERVED; // Known attributes should match the casing specified in the property config.

        if (possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          var standardName = possibleStandardNames[lowerCasedName];

          if (standardName !== name) {
            warning$1(false, 'Invalid DOM property `%s`. Did you mean `%s`?', name, standardName);
            warnedProperties$1[name] = true;
            return true;
          }
        } else if (!isReserved && name !== lowerCasedName) {
          // Unknown attributes should have lowercase casing since that's how they
          // will be cased anyway with server rendering.
          warning$1(false, 'React does not recognize the `%s` prop on a DOM element. If you ' + 'intentionally want it to appear in the DOM as a custom ' + 'attribute, spell it as lowercase `%s` instead. ' + 'If you accidentally passed it from a parent component, remove ' + 'it from the DOM element.', name, lowerCasedName);
          warnedProperties$1[name] = true;
          return true;
        }

        if (typeof value === 'boolean' && shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          if (value) {
            warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.', value, name, name, value, name);
          } else {
            warning$1(false, 'Received `%s` for a non-boolean attribute `%s`.\n\n' + 'If you want to write it to the DOM, pass a string instead: ' + '%s="%s" or %s={value.toString()}.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', value, name, name, value, name, name, name);
          }

          warnedProperties$1[name] = true;
          return true;
        } // Now that we've validated casing, do not validate
        // data types for reserved props


        if (isReserved) {
          return true;
        } // Warn when a known attribute is a bad type


        if (shouldRemoveAttributeWithWarning(name, value, propertyInfo, false)) {
          warnedProperties$1[name] = true;
          return false;
        } // Warn when passing the strings 'false' or 'true' into a boolean prop


        if ((value === 'false' || value === 'true') && propertyInfo !== null && propertyInfo.type === BOOLEAN) {
          warning$1(false, 'Received the string `%s` for the boolean attribute `%s`. ' + '%s ' + 'Did you mean %s={%s}?', value, name, value === 'false' ? 'The browser will interpret it as a truthy value.' : 'Although this works, it will not work as expected if you pass the string "false".', name, value);
          warnedProperties$1[name] = true;
          return true;
        }

        return true;
      };
    }

    var warnUnknownProperties = function (type, props, canUseEventSystem) {
      var unknownProps = [];

      for (var key in props) {
        var isValid = validateProperty$1(type, key, props[key], canUseEventSystem);

        if (!isValid) {
          unknownProps.push(key);
        }
      }

      var unknownPropString = unknownProps.map(function (prop) {
        return '`' + prop + '`';
      }).join(', ');

      if (unknownProps.length === 1) {
        warning$1(false, 'Invalid value for prop %s on <%s> tag. Either remove it from the element, ' + 'or pass a string or number value to keep it in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
      } else if (unknownProps.length > 1) {
        warning$1(false, 'Invalid values for props %s on <%s> tag. Either remove them from the element, ' + 'or pass a string or number value to keep them in the DOM. ' + 'For details, see https://fb.me/react-attribute-behavior', unknownPropString, type);
      }
    };

    function validateProperties$2(type, props, canUseEventSystem) {
      if (isCustomComponent(type, props)) {
        return;
      }

      warnUnknownProperties(type, props, canUseEventSystem);
    } // TODO: direct imports like some-package/src/* are bad. Fix me.


    var didWarnInvalidHydration = false;
    var didWarnShadyDOM = false;
    var didWarnScriptTags = false;
    var DANGEROUSLY_SET_INNER_HTML = 'dangerouslySetInnerHTML';
    var SUPPRESS_CONTENT_EDITABLE_WARNING = 'suppressContentEditableWarning';
    var SUPPRESS_HYDRATION_WARNING$1 = 'suppressHydrationWarning';
    var AUTOFOCUS = 'autoFocus';
    var CHILDREN = 'children';
    var STYLE$1 = 'style';
    var HTML = '__html';
    var LISTENERS = 'listeners';
    var HTML_NAMESPACE = Namespaces.html;
    var warnedUnknownTags;
    var suppressHydrationWarning;
    var validatePropertiesInDevelopment;
    var warnForTextDifference;
    var warnForPropDifference;
    var warnForExtraAttributes;
    var warnForInvalidEventListener;
    var canDiffStyleForHydrationWarning;
    var normalizeMarkupForTextOrAttribute;
    var normalizeHTML;
    {
      warnedUnknownTags = {
        // Chrome is the only major browser not shipping <time>. But as of July
        // 2017 it intends to ship it due to widespread usage. We intentionally
        // *don't* warn for <time> even if it's unrecognized by Chrome because
        // it soon will be, and many apps have been using it anyway.
        time: true,
        // There are working polyfills for <dialog>. Let people use it.
        dialog: true,
        // Electron ships a custom <webview> tag to display external web content in
        // an isolated frame and process.
        // This tag is not present in non Electron environments such as JSDom which
        // is often used for testing purposes.
        // @see https://electronjs.org/docs/api/webview-tag
        webview: true
      };

      validatePropertiesInDevelopment = function (type, props) {
        validateProperties(type, props);
        validateProperties$1(type, props);
        validateProperties$2(type, props,
        /* canUseEventSystem */
        true);
      }; // IE 11 parses & normalizes the style attribute as opposed to other
      // browsers. It adds spaces and sorts the properties in some
      // non-alphabetical order. Handling that would require sorting CSS
      // properties in the client & server versions or applying
      // `expectedStyle` to a temporary DOM node to read its `style` attribute
      // normalized. Since it only affects IE, we're skipping style warnings
      // in that browser completely in favor of doing all that work.
      // See https://github.com/facebook/react/issues/11807


      canDiffStyleForHydrationWarning = canUseDOM && !document.documentMode; // HTML parsing normalizes CR and CRLF to LF.
      // It also can turn \u0000 into \uFFFD inside attributes.
      // https://www.w3.org/TR/html5/single-page.html#preprocessing-the-input-stream
      // If we have a mismatch, it might be caused by that.
      // We will still patch up in this case but not fire the warning.

      var NORMALIZE_NEWLINES_REGEX = /\r\n?/g;
      var NORMALIZE_NULL_AND_REPLACEMENT_REGEX = /\u0000|\uFFFD/g;

      normalizeMarkupForTextOrAttribute = function (markup) {
        var markupString = typeof markup === 'string' ? markup : '' + markup;
        return markupString.replace(NORMALIZE_NEWLINES_REGEX, '\n').replace(NORMALIZE_NULL_AND_REPLACEMENT_REGEX, '');
      };

      warnForTextDifference = function (serverText, clientText) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientText = normalizeMarkupForTextOrAttribute(clientText);
        var normalizedServerText = normalizeMarkupForTextOrAttribute(serverText);

        if (normalizedServerText === normalizedClientText) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Text content did not match. Server: "%s" Client: "%s"', normalizedServerText, normalizedClientText);
      };

      warnForPropDifference = function (propName, serverValue, clientValue) {
        if (didWarnInvalidHydration) {
          return;
        }

        var normalizedClientValue = normalizeMarkupForTextOrAttribute(clientValue);
        var normalizedServerValue = normalizeMarkupForTextOrAttribute(serverValue);

        if (normalizedServerValue === normalizedClientValue) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Prop `%s` did not match. Server: %s Client: %s', propName, JSON.stringify(normalizedServerValue), JSON.stringify(normalizedClientValue));
      };

      warnForExtraAttributes = function (attributeNames) {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        var names = [];
        attributeNames.forEach(function (name) {
          names.push(name);
        });
        warningWithoutStack$1(false, 'Extra attributes from the server: %s', names);
      };

      warnForInvalidEventListener = function (registrationName, listener) {
        if (listener === false) {
          warning$1(false, 'Expected `%s` listener to be a function, instead got `false`.\n\n' + 'If you used to conditionally omit it with %s={condition && value}, ' + 'pass %s={condition ? value : undefined} instead.', registrationName, registrationName, registrationName);
        } else {
          warning$1(false, 'Expected `%s` listener to be a function, instead got a value of `%s` type.', registrationName, typeof listener);
        }
      }; // Parse the HTML and read it back to normalize the HTML string so that it
      // can be used for comparison.


      normalizeHTML = function (parent, html) {
        // We could have created a separate document here to avoid
        // re-initializing custom elements if they exist. But this breaks
        // how <noscript> is being handled. So we use the same document.
        // See the discussion in https://github.com/facebook/react/pull/11157.
        var testElement = parent.namespaceURI === HTML_NAMESPACE ? parent.ownerDocument.createElement(parent.tagName) : parent.ownerDocument.createElementNS(parent.namespaceURI, parent.tagName);
        testElement.innerHTML = html;
        return testElement.innerHTML;
      };
    }

    function ensureListeningTo(rootContainerElement, registrationName) {
      var isDocumentOrFragment = rootContainerElement.nodeType === DOCUMENT_NODE || rootContainerElement.nodeType === DOCUMENT_FRAGMENT_NODE;
      var doc = isDocumentOrFragment ? rootContainerElement : rootContainerElement.ownerDocument;
      listenTo(registrationName, doc);
    }

    function getOwnerDocumentFromRootContainer(rootContainerElement) {
      return rootContainerElement.nodeType === DOCUMENT_NODE ? rootContainerElement : rootContainerElement.ownerDocument;
    }

    function noop() {}

    function trapClickOnNonInteractiveElement(node) {
      // Mobile Safari does not fire properly bubble click events on
      // non-interactive elements, which means delegated click listeners do not
      // fire. The workaround for this bug involves attaching an empty click
      // listener on the target node.
      // http://www.quirksmode.org/blog/archives/2010/09/click_event_del.html
      // Just set it using the onclick property so that we don't have to manage any
      // bookkeeping for it. Not sure if we need to clear it when the listener is
      // removed.
      // TODO: Only do this for the relevant Safaris maybe?
      node.onclick = noop;
    }

    function setInitialDOMProperties(tag, domElement, rootContainerElement, nextProps, isCustomComponentTag) {
      for (var propKey in nextProps) {
        if (!nextProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = nextProps[propKey];

        if (propKey === STYLE$1) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          } // Relies on `updateStylesByID` not mutating `styleUpdates`.

          setValueForStyles(domElement, nextProp);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML] : undefined;

          if (nextHtml != null) {
            setInnerHTML(domElement, nextHtml);
          }
        } else if (propKey === CHILDREN) {
          if (typeof nextProp === 'string') {
            // Avoid setting initial textContent when the text is empty. In IE11 setting
            // textContent on a <textarea> will cause the placeholder to not
            // show within the <textarea> until it has been focused and blurred again.
            // https://github.com/facebook/react/issues/6731#issuecomment-254874553
            var canSetTextContent = tag !== 'textarea' || nextProp !== '';

            if (canSetTextContent) {
              setTextContent(domElement, nextProp);
            }
          } else if (typeof nextProp === 'number') {
            setTextContent(domElement, '' + nextProp);
          }
        } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (propKey === AUTOFOCUS) {// We polyfill it separately on the client during commit.
          // We could have excluded it in the property list instead of
          // adding a special case here, but then it wouldn't be emitted
          // on server rendering (but we *do* want to emit it in SSR).
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if ( true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }
        } else if (nextProp != null) {
          setValueForProperty(domElement, propKey, nextProp, isCustomComponentTag);
        }
      }
    }

    function updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag) {
      // TODO: Handle wasCustomComponentTag
      for (var i = 0; i < updatePayload.length; i += 2) {
        var propKey = updatePayload[i];
        var propValue = updatePayload[i + 1];

        if (propKey === STYLE$1) {
          setValueForStyles(domElement, propValue);
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          setInnerHTML(domElement, propValue);
        } else if (propKey === CHILDREN) {
          setTextContent(domElement, propValue);
        } else {
          setValueForProperty(domElement, propKey, propValue, isCustomComponentTag);
        }
      }
    }

    function createElement(type, props, rootContainerElement, parentNamespace) {
      var isCustomComponentTag; // We create tags in the namespace of their parent container, except HTML
      // tags get no namespace.

      var ownerDocument = getOwnerDocumentFromRootContainer(rootContainerElement);
      var domElement;
      var namespaceURI = parentNamespace;

      if (namespaceURI === HTML_NAMESPACE) {
        namespaceURI = getIntrinsicNamespace(type);
      }

      if (namespaceURI === HTML_NAMESPACE) {
        {
          isCustomComponentTag = isCustomComponent(type, props); // Should this check be gated by parent namespace? Not sure we want to
          // allow <SVG> or <mATH>.

          !(isCustomComponentTag || type === type.toLowerCase()) ? warning$1(false, '<%s /> is using incorrect casing. ' + 'Use PascalCase for React components, ' + 'or lowercase for HTML elements.', type) : void 0;
        }

        if (type === 'script') {
          // Create the script via .innerHTML so its "parser-inserted" flag is
          // set to true and it does not execute
          var div = ownerDocument.createElement('div');
          {
            if (enableTrustedTypesIntegration && !didWarnScriptTags) {
              warning$1(false, 'Encountered a script tag while rendering React component. ' + 'Scripts inside React components are never executed when rendering ' + 'on the client. Consider using template tag instead ' + '(https://developer.mozilla.org/en-US/docs/Web/HTML/Element/template).');
              didWarnScriptTags = true;
            }
          }
          div.innerHTML = '<script><' + '/script>'; // eslint-disable-line
          // This is guaranteed to yield a script element.

          var firstChild = div.firstChild;
          domElement = div.removeChild(firstChild);
        } else if (typeof props.is === 'string') {
          // $FlowIssue `createElement` should be updated for Web Components
          domElement = ownerDocument.createElement(type, {
            is: props.is
          });
        } else {
          // Separate else branch instead of using `props.is || undefined` above because of a Firefox bug.
          // See discussion in https://github.com/facebook/react/pull/6896
          // and discussion in https://bugzilla.mozilla.org/show_bug.cgi?id=1276240
          domElement = ownerDocument.createElement(type); // Normally attributes are assigned in `setInitialDOMProperties`, however the `multiple` and `size`
          // attributes on `select`s needs to be added before `option`s are inserted.
          // This prevents:
          // - a bug where the `select` does not scroll to the correct option because singular
          //  `select` elements automatically pick the first item #13222
          // - a bug where the `select` set the first item as selected despite the `size` attribute #14239
          // See https://github.com/facebook/react/issues/13222
          // and https://github.com/facebook/react/issues/14239

          if (type === 'select') {
            var node = domElement;

            if (props.multiple) {
              node.multiple = true;
            } else if (props.size) {
              // Setting a size greater than 1 causes a select to behave like `multiple=true`, where
              // it is possible that no option is selected.
              //
              // This is only necessary when a select in "single selection mode".
              node.size = props.size;
            }
          }
        }
      } else {
        domElement = ownerDocument.createElementNS(namespaceURI, type);
      }

      {
        if (namespaceURI === HTML_NAMESPACE) {
          if (!isCustomComponentTag && Object.prototype.toString.call(domElement) === '[object HTMLUnknownElement]' && !Object.prototype.hasOwnProperty.call(warnedUnknownTags, type)) {
            warnedUnknownTags[type] = true;
            warning$1(false, 'The tag <%s> is unrecognized in this browser. ' + 'If you meant to render a React component, start its name with ' + 'an uppercase letter.', type);
          }
        }
      }
      return domElement;
    }

    function createTextNode(text, rootContainerElement) {
      return getOwnerDocumentFromRootContainer(rootContainerElement).createTextNode(text);
    }

    function setInitialProperties(domElement, tag, rawProps, rootContainerElement) {
      var isCustomComponentTag = isCustomComponent(tag, rawProps);
      {
        validatePropertiesInDevelopment(tag, rawProps);

        if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
          warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnShadyDOM = true;
        }
      } // TODO: Make sure that we check isMounted before firing any of these events.

      var props;

      switch (tag) {
        case 'iframe':
        case 'object':
        case 'embed':
          trapBubbledEvent(TOP_LOAD, domElement);
          props = rawProps;
          break;

        case 'video':
        case 'audio':
          // Create listener for each media event
          for (var i = 0; i < mediaEventTypes.length; i++) {
            trapBubbledEvent(mediaEventTypes[i], domElement);
          }

          props = rawProps;
          break;

        case 'source':
          trapBubbledEvent(TOP_ERROR, domElement);
          props = rawProps;
          break;

        case 'img':
        case 'image':
        case 'link':
          trapBubbledEvent(TOP_ERROR, domElement);
          trapBubbledEvent(TOP_LOAD, domElement);
          props = rawProps;
          break;

        case 'form':
          trapBubbledEvent(TOP_RESET, domElement);
          trapBubbledEvent(TOP_SUBMIT, domElement);
          props = rawProps;
          break;

        case 'details':
          trapBubbledEvent(TOP_TOGGLE, domElement);
          props = rawProps;
          break;

        case 'input':
          initWrapperState(domElement, rawProps);
          props = getHostProps(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'option':
          validateProps(domElement, rawProps);
          props = getHostProps$1(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps);
          props = getHostProps$2(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps);
          props = getHostProps$3(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        default:
          props = rawProps;
      }

      assertValidProps(tag, props);
      setInitialDOMProperties(tag, domElement, rootContainerElement, props, isCustomComponentTag);

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, false);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement, rawProps);
          break;

        case 'option':
          postMountWrapper$1(domElement, rawProps);
          break;

        case 'select':
          postMountWrapper$2(domElement, rawProps);
          break;

        default:
          if (typeof props.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }
    } // Calculate the diff between the two objects.


    function diffProperties(domElement, tag, lastRawProps, nextRawProps, rootContainerElement) {
      {
        validatePropertiesInDevelopment(tag, nextRawProps);
      }
      var updatePayload = null;
      var lastProps;
      var nextProps;

      switch (tag) {
        case 'input':
          lastProps = getHostProps(domElement, lastRawProps);
          nextProps = getHostProps(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'option':
          lastProps = getHostProps$1(domElement, lastRawProps);
          nextProps = getHostProps$1(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'select':
          lastProps = getHostProps$2(domElement, lastRawProps);
          nextProps = getHostProps$2(domElement, nextRawProps);
          updatePayload = [];
          break;

        case 'textarea':
          lastProps = getHostProps$3(domElement, lastRawProps);
          nextProps = getHostProps$3(domElement, nextRawProps);
          updatePayload = [];
          break;

        default:
          lastProps = lastRawProps;
          nextProps = nextRawProps;

          if (typeof lastProps.onClick !== 'function' && typeof nextProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      assertValidProps(tag, nextProps);
      var propKey;
      var styleName;
      var styleUpdates = null;

      for (propKey in lastProps) {
        if (nextProps.hasOwnProperty(propKey) || !lastProps.hasOwnProperty(propKey) || lastProps[propKey] == null) {
          continue;
        }

        if (propKey === STYLE$1) {
          var lastStyle = lastProps[propKey];

          for (styleName in lastStyle) {
            if (lastStyle.hasOwnProperty(styleName)) {
              if (!styleUpdates) {
                styleUpdates = {};
              }

              styleUpdates[styleName] = '';
            }
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML || propKey === CHILDREN) {// Noop. This is handled by the clear text mechanism.
        } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (propKey === AUTOFOCUS) {// Noop. It doesn't work on updates anyway.
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          // This is a special case. If any listener updates we need to ensure
          // that the "current" fiber pointer gets updated so we need a commit
          // to update this element.
          if (!updatePayload) {
            updatePayload = [];
          }
        } else {
          // For all other deleted properties we add it to the queue. We use
          // the whitelist in the commit phase instead.
          (updatePayload = updatePayload || []).push(propKey, null);
        }
      }

      for (propKey in nextProps) {
        var nextProp = nextProps[propKey];
        var lastProp = lastProps != null ? lastProps[propKey] : undefined;

        if (!nextProps.hasOwnProperty(propKey) || nextProp === lastProp || nextProp == null && lastProp == null) {
          continue;
        }

        if (propKey === STYLE$1) {
          {
            if (nextProp) {
              // Freeze the next style object so that we can assume it won't be
              // mutated. We have already warned for this in the past.
              Object.freeze(nextProp);
            }
          }

          if (lastProp) {
            // Unset styles on `lastProp` but not on `nextProp`.
            for (styleName in lastProp) {
              if (lastProp.hasOwnProperty(styleName) && (!nextProp || !nextProp.hasOwnProperty(styleName))) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = '';
              }
            } // Update styles that changed since `lastProp`.


            for (styleName in nextProp) {
              if (nextProp.hasOwnProperty(styleName) && lastProp[styleName] !== nextProp[styleName]) {
                if (!styleUpdates) {
                  styleUpdates = {};
                }

                styleUpdates[styleName] = nextProp[styleName];
              }
            }
          } else {
            // Relies on `updateStylesByID` not mutating `styleUpdates`.
            if (!styleUpdates) {
              if (!updatePayload) {
                updatePayload = [];
              }

              updatePayload.push(propKey, styleUpdates);
            }

            styleUpdates = nextProp;
          }
        } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
          var nextHtml = nextProp ? nextProp[HTML] : undefined;
          var lastHtml = lastProp ? lastProp[HTML] : undefined;

          if (nextHtml != null) {
            if (lastHtml !== nextHtml) {
              (updatePayload = updatePayload || []).push(propKey, toStringOrTrustedType(nextHtml));
            }
          } else {// TODO: It might be too late to clear this if we have children
            // inserted already.
          }
        } else if (propKey === CHILDREN) {
          if (lastProp !== nextProp && (typeof nextProp === 'string' || typeof nextProp === 'number')) {
            (updatePayload = updatePayload || []).push(propKey, '' + nextProp);
          }
        } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1) {// Noop
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            // We eagerly listen to this even though we haven't committed yet.
            if ( true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }

          if (!updatePayload && lastProp !== nextProp) {
            // This is a special case. If any listener updates we need to ensure
            // that the "current" props pointer gets updated so we need a commit
            // to update this element.
            updatePayload = [];
          }
        } else {
          // For any other property we always add it to the queue and then we
          // filter it out using the whitelist during the commit.
          (updatePayload = updatePayload || []).push(propKey, nextProp);
        }
      }

      if (styleUpdates) {
        {
          validateShorthandPropertyCollisionInDev(styleUpdates, nextProps[STYLE$1]);
        }
        (updatePayload = updatePayload || []).push(STYLE$1, styleUpdates);
      }

      return updatePayload;
    } // Apply the diff.


    function updateProperties(domElement, updatePayload, tag, lastRawProps, nextRawProps) {
      // Update checked *before* name.
      // In the middle of an update, it is possible to have multiple checked.
      // When a checked radio tries to change name, browser makes another radio's checked false.
      if (tag === 'input' && nextRawProps.type === 'radio' && nextRawProps.name != null) {
        updateChecked(domElement, nextRawProps);
      }

      var wasCustomComponentTag = isCustomComponent(tag, lastRawProps);
      var isCustomComponentTag = isCustomComponent(tag, nextRawProps); // Apply the diff.

      updateDOMProperties(domElement, updatePayload, wasCustomComponentTag, isCustomComponentTag); // TODO: Ensure that an update gets scheduled if any of the special props
      // changed.

      switch (tag) {
        case 'input':
          // Update the wrapper around inputs *after* updating props. This has to
          // happen after `updateDOMProperties`. Otherwise HTML5 input validations
          // raise warnings and prevent the new value from being assigned.
          updateWrapper(domElement, nextRawProps);
          break;

        case 'textarea':
          updateWrapper$1(domElement, nextRawProps);
          break;

        case 'select':
          // <select> value update needs to occur after <option> children
          // reconciliation
          postUpdateWrapper(domElement, nextRawProps);
          break;
      }
    }

    function getPossibleStandardName(propName) {
      {
        var lowerCasedName = propName.toLowerCase();

        if (!possibleStandardNames.hasOwnProperty(lowerCasedName)) {
          return null;
        }

        return possibleStandardNames[lowerCasedName] || null;
      }
      return null;
    }

    function diffHydratedProperties(domElement, tag, rawProps, parentNamespace, rootContainerElement) {
      var isCustomComponentTag;
      var extraAttributeNames;
      {
        suppressHydrationWarning = rawProps[SUPPRESS_HYDRATION_WARNING$1] === true;
        isCustomComponentTag = isCustomComponent(tag, rawProps);
        validatePropertiesInDevelopment(tag, rawProps);

        if (isCustomComponentTag && !didWarnShadyDOM && domElement.shadyRoot) {
          warning$1(false, '%s is using shady DOM. Using shady DOM with React can ' + 'cause things to break subtly.', getCurrentFiberOwnerNameInDevOrNull() || 'A component');
          didWarnShadyDOM = true;
        }
      } // TODO: Make sure that we check isMounted before firing any of these events.

      switch (tag) {
        case 'iframe':
        case 'object':
        case 'embed':
          trapBubbledEvent(TOP_LOAD, domElement);
          break;

        case 'video':
        case 'audio':
          // Create listener for each media event
          for (var i = 0; i < mediaEventTypes.length; i++) {
            trapBubbledEvent(mediaEventTypes[i], domElement);
          }

          break;

        case 'source':
          trapBubbledEvent(TOP_ERROR, domElement);
          break;

        case 'img':
        case 'image':
        case 'link':
          trapBubbledEvent(TOP_ERROR, domElement);
          trapBubbledEvent(TOP_LOAD, domElement);
          break;

        case 'form':
          trapBubbledEvent(TOP_RESET, domElement);
          trapBubbledEvent(TOP_SUBMIT, domElement);
          break;

        case 'details':
          trapBubbledEvent(TOP_TOGGLE, domElement);
          break;

        case 'input':
          initWrapperState(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'option':
          validateProps(domElement, rawProps);
          break;

        case 'select':
          initWrapperState$1(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;

        case 'textarea':
          initWrapperState$2(domElement, rawProps);
          trapBubbledEvent(TOP_INVALID, domElement); // For controlled components we always need to ensure we're listening
          // to onChange. Even if there is no listener.

          ensureListeningTo(rootContainerElement, 'onChange');
          break;
      }

      assertValidProps(tag, rawProps);
      {
        extraAttributeNames = new Set();
        var attributes = domElement.attributes;

        for (var _i = 0; _i < attributes.length; _i++) {
          var name = attributes[_i].name.toLowerCase();

          switch (name) {
            // Built-in SSR attribute is whitelisted
            case 'data-reactroot':
              break;
            // Controlled attributes are not validated
            // TODO: Only ignore them on controlled tags.

            case 'value':
              break;

            case 'checked':
              break;

            case 'selected':
              break;

            default:
              // Intentionally use the original name.
              // See discussion in https://github.com/facebook/react/pull/10676.
              extraAttributeNames.add(attributes[_i].name);
          }
        }
      }
      var updatePayload = null;

      for (var propKey in rawProps) {
        if (!rawProps.hasOwnProperty(propKey)) {
          continue;
        }

        var nextProp = rawProps[propKey];

        if (propKey === CHILDREN) {
          // For text content children we compare against textContent. This
          // might match additional HTML that is hidden when we read it using
          // textContent. E.g. "foo" will match "f<span>oo</span>" but that still
          // satisfies our requirement. Our requirement is not to produce perfect
          // HTML and attributes. Ideally we should preserve structure but it's
          // ok not to if the visible content is still enough to indicate what
          // even listeners these nodes might be wired up to.
          // TODO: Warn if there is more than a single textNode as a child.
          // TODO: Should we use domElement.firstChild.nodeValue to compare?
          if (typeof nextProp === 'string') {
            if (domElement.textContent !== nextProp) {
              if ( true && !suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, nextProp];
            }
          } else if (typeof nextProp === 'number') {
            if (domElement.textContent !== '' + nextProp) {
              if ( true && !suppressHydrationWarning) {
                warnForTextDifference(domElement.textContent, nextProp);
              }

              updatePayload = [CHILDREN, '' + nextProp];
            }
          }
        } else if (registrationNameModules.hasOwnProperty(propKey)) {
          if (nextProp != null) {
            if ( true && typeof nextProp !== 'function') {
              warnForInvalidEventListener(propKey, nextProp);
            }

            ensureListeningTo(rootContainerElement, propKey);
          }
        } else if ( true && // Convince Flow we've calculated it (it's DEV-only in this method.)
        typeof isCustomComponentTag === 'boolean') {
          // Validate that the properties correspond to their expected values.
          var serverValue = void 0;
          var propertyInfo = getPropertyInfo(propKey);

          if (suppressHydrationWarning) {// Don't bother comparing. We're ignoring all these warnings.
          } else if (enableFlareAPI && propKey === LISTENERS || propKey === SUPPRESS_CONTENT_EDITABLE_WARNING || propKey === SUPPRESS_HYDRATION_WARNING$1 || // Controlled attributes are not validated
          // TODO: Only ignore them on controlled tags.
          propKey === 'value' || propKey === 'checked' || propKey === 'selected') {// Noop
          } else if (propKey === DANGEROUSLY_SET_INNER_HTML) {
            var serverHTML = domElement.innerHTML;
            var nextHtml = nextProp ? nextProp[HTML] : undefined;
            var expectedHTML = normalizeHTML(domElement, nextHtml != null ? nextHtml : '');

            if (expectedHTML !== serverHTML) {
              warnForPropDifference(propKey, serverHTML, expectedHTML);
            }
          } else if (propKey === STYLE$1) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey);

            if (canDiffStyleForHydrationWarning) {
              var expectedStyle = createDangerousStringForStyles(nextProp);
              serverValue = domElement.getAttribute('style');

              if (expectedStyle !== serverValue) {
                warnForPropDifference(propKey, serverValue, expectedStyle);
              }
            }
          } else if (isCustomComponentTag) {
            // $FlowFixMe - Should be inferred as not undefined.
            extraAttributeNames.delete(propKey.toLowerCase());
            serverValue = getValueForAttribute(domElement, propKey, nextProp);

            if (nextProp !== serverValue) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          } else if (!shouldIgnoreAttribute(propKey, propertyInfo, isCustomComponentTag) && !shouldRemoveAttribute(propKey, nextProp, propertyInfo, isCustomComponentTag)) {
            var isMismatchDueToBadCasing = false;

            if (propertyInfo !== null) {
              // $FlowFixMe - Should be inferred as not undefined.
              extraAttributeNames.delete(propertyInfo.attributeName);
              serverValue = getValueForProperty(domElement, propKey, nextProp, propertyInfo);
            } else {
              var ownNamespace = parentNamespace;

              if (ownNamespace === HTML_NAMESPACE) {
                ownNamespace = getIntrinsicNamespace(tag);
              }

              if (ownNamespace === HTML_NAMESPACE) {
                // $FlowFixMe - Should be inferred as not undefined.
                extraAttributeNames.delete(propKey.toLowerCase());
              } else {
                var standardName = getPossibleStandardName(propKey);

                if (standardName !== null && standardName !== propKey) {
                  // If an SVG prop is supplied with bad casing, it will
                  // be successfully parsed from HTML, but will produce a mismatch
                  // (and would be incorrectly rendered on the client).
                  // However, we already warn about bad casing elsewhere.
                  // So we'll skip the misleading extra mismatch warning in this case.
                  isMismatchDueToBadCasing = true; // $FlowFixMe - Should be inferred as not undefined.

                  extraAttributeNames.delete(standardName);
                } // $FlowFixMe - Should be inferred as not undefined.


                extraAttributeNames.delete(propKey);
              }

              serverValue = getValueForAttribute(domElement, propKey, nextProp);
            }

            if (nextProp !== serverValue && !isMismatchDueToBadCasing) {
              warnForPropDifference(propKey, serverValue, nextProp);
            }
          }
        }
      }

      {
        // $FlowFixMe - Should be inferred as not undefined.
        if (extraAttributeNames.size > 0 && !suppressHydrationWarning) {
          // $FlowFixMe - Should be inferred as not undefined.
          warnForExtraAttributes(extraAttributeNames);
        }
      }

      switch (tag) {
        case 'input':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper(domElement, rawProps, true);
          break;

        case 'textarea':
          // TODO: Make sure we check if this is still unmounted or do any clean
          // up necessary since we never stop tracking anymore.
          track(domElement);
          postMountWrapper$3(domElement, rawProps);
          break;

        case 'select':
        case 'option':
          // For input and textarea we current always set the value property at
          // post mount to force it to diverge from attributes. However, for
          // option and select we don't quite do the same thing and select
          // is not resilient to the DOM state changing so we don't do that here.
          // TODO: Consider not doing this for input and textarea.
          break;

        default:
          if (typeof rawProps.onClick === 'function') {
            // TODO: This cast may not be sound for SVG, MathML or custom elements.
            trapClickOnNonInteractiveElement(domElement);
          }

          break;
      }

      return updatePayload;
    }

    function diffHydratedText(textNode, text) {
      var isDifferent = textNode.nodeValue !== text;
      return isDifferent;
    }

    function warnForUnmatchedText(textNode, text) {
      {
        warnForTextDifference(textNode.nodeValue, text);
      }
    }

    function warnForDeletedHydratableElement(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Did not expect server HTML to contain a <%s> in <%s>.', child.nodeName.toLowerCase(), parentNode.nodeName.toLowerCase());
      }
    }

    function warnForDeletedHydratableText(parentNode, child) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Did not expect server HTML to contain the text node "%s" in <%s>.', child.nodeValue, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedElement(parentNode, tag, props) {
      {
        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Expected server HTML to contain a matching <%s> in <%s>.', tag, parentNode.nodeName.toLowerCase());
      }
    }

    function warnForInsertedHydratedText(parentNode, text) {
      {
        if (text === '') {
          // We expect to insert empty text nodes since they're not represented in
          // the HTML.
          // TODO: Remove this special case if we can just avoid inserting empty
          // text nodes.
          return;
        }

        if (didWarnInvalidHydration) {
          return;
        }

        didWarnInvalidHydration = true;
        warningWithoutStack$1(false, 'Expected server HTML to contain a matching text node for "%s" in <%s>.', text, parentNode.nodeName.toLowerCase());
      }
    }

    function restoreControlledState$$1(domElement, tag, props) {
      switch (tag) {
        case 'input':
          restoreControlledState$1(domElement, props);
          return;

        case 'textarea':
          restoreControlledState$3(domElement, props);
          return;

        case 'select':
          restoreControlledState$2(domElement, props);
          return;
      }
    }

    function listenToEventResponderEventTypes(eventTypes, element) {
      if (enableFlareAPI) {
        // Get the listening Set for this element. We use this to track
        // what events we're listening to.
        var listeningSet = getListeningSetForElement(element); // Go through each target event type of the event responder

        for (var i = 0, length = eventTypes.length; i < length; ++i) {
          var eventType = eventTypes[i];
          var isPassive = !endsWith(eventType, '_active');
          var eventKey = isPassive ? eventType + '_passive' : eventType;
          var targetEventType = isPassive ? eventType : eventType.substring(0, eventType.length - 7);

          if (!listeningSet.has(eventKey)) {
            trapEventForResponderEventSystem(element, targetEventType, isPassive);
            listeningSet.add(eventKey);
          }
        }
      }
    } // We can remove this once the event API is stable and out of a flag


    if (enableFlareAPI) {
      setListenToResponderEventTypes(listenToEventResponderEventTypes);
    }

    function getActiveElement(doc) {
      doc = doc || (typeof document !== 'undefined' ? document : undefined);

      if (typeof doc === 'undefined') {
        return null;
      }

      try {
        return doc.activeElement || doc.body;
      } catch (e) {
        return doc.body;
      }
    }
    /**
     * Given any node return the first leaf node without children.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {DOMElement|DOMTextNode}
     */


    function getLeafNode(node) {
      while (node && node.firstChild) {
        node = node.firstChild;
      }

      return node;
    }
    /**
     * Get the next sibling within a container. This will walk up the
     * DOM if a node's siblings have been exhausted.
     *
     * @param {DOMElement|DOMTextNode} node
     * @return {?DOMElement|DOMTextNode}
     */


    function getSiblingNode(node) {
      while (node) {
        if (node.nextSibling) {
          return node.nextSibling;
        }

        node = node.parentNode;
      }
    }
    /**
     * Get object describing the nodes which contain characters at offset.
     *
     * @param {DOMElement|DOMTextNode} root
     * @param {number} offset
     * @return {?object}
     */


    function getNodeForCharacterOffset(root, offset) {
      var node = getLeafNode(root);
      var nodeStart = 0;
      var nodeEnd = 0;

      while (node) {
        if (node.nodeType === TEXT_NODE) {
          nodeEnd = nodeStart + node.textContent.length;

          if (nodeStart <= offset && nodeEnd >= offset) {
            return {
              node: node,
              offset: offset - nodeStart
            };
          }

          nodeStart = nodeEnd;
        }

        node = getLeafNode(getSiblingNode(node));
      }
    }
    /**
     * @param {DOMElement} outerNode
     * @return {?object}
     */


    function getOffsets(outerNode) {
      var ownerDocument = outerNode.ownerDocument;
      var win = ownerDocument && ownerDocument.defaultView || window;
      var selection = win.getSelection && win.getSelection();

      if (!selection || selection.rangeCount === 0) {
        return null;
      }

      var anchorNode = selection.anchorNode,
          anchorOffset = selection.anchorOffset,
          focusNode = selection.focusNode,
          focusOffset = selection.focusOffset; // In Firefox, anchorNode and focusNode can be "anonymous divs", e.g. the
      // up/down buttons on an <input type="number">. Anonymous divs do not seem to
      // expose properties, triggering a "Permission denied error" if any of its
      // properties are accessed. The only seemingly possible way to avoid erroring
      // is to access a property that typically works for non-anonymous divs and
      // catch any error that may otherwise arise. See
      // https://bugzilla.mozilla.org/show_bug.cgi?id=208427

      try {
        /* eslint-disable no-unused-expressions */
        anchorNode.nodeType;
        focusNode.nodeType;
        /* eslint-enable no-unused-expressions */
      } catch (e) {
        return null;
      }

      return getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset);
    }
    /**
     * Returns {start, end} where `start` is the character/codepoint index of
     * (anchorNode, anchorOffset) within the textContent of `outerNode`, and
     * `end` is the index of (focusNode, focusOffset).
     *
     * Returns null if you pass in garbage input but we should probably just crash.
     *
     * Exported only for testing.
     */


    function getModernOffsetsFromPoints(outerNode, anchorNode, anchorOffset, focusNode, focusOffset) {
      var length = 0;
      var start = -1;
      var end = -1;
      var indexWithinAnchor = 0;
      var indexWithinFocus = 0;
      var node = outerNode;
      var parentNode = null;

      outer: while (true) {
        var next = null;

        while (true) {
          if (node === anchorNode && (anchorOffset === 0 || node.nodeType === TEXT_NODE)) {
            start = length + anchorOffset;
          }

          if (node === focusNode && (focusOffset === 0 || node.nodeType === TEXT_NODE)) {
            end = length + focusOffset;
          }

          if (node.nodeType === TEXT_NODE) {
            length += node.nodeValue.length;
          }

          if ((next = node.firstChild) === null) {
            break;
          } // Moving from `node` to its first child `next`.


          parentNode = node;
          node = next;
        }

        while (true) {
          if (node === outerNode) {
            // If `outerNode` has children, this is always the second time visiting
            // it. If it has no children, this is still the first loop, and the only
            // valid selection is anchorNode and focusNode both equal to this node
            // and both offsets 0, in which case we will have handled above.
            break outer;
          }

          if (parentNode === anchorNode && ++indexWithinAnchor === anchorOffset) {
            start = length;
          }

          if (parentNode === focusNode && ++indexWithinFocus === focusOffset) {
            end = length;
          }

          if ((next = node.nextSibling) !== null) {
            break;
          }

          node = parentNode;
          parentNode = node.parentNode;
        } // Moving from `node` to its next sibling `next`.


        node = next;
      }

      if (start === -1 || end === -1) {
        // This should never happen. (Would happen if the anchor/focus nodes aren't
        // actually inside the passed-in node.)
        return null;
      }

      return {
        start: start,
        end: end
      };
    }
    /**
     * In modern non-IE browsers, we can support both forward and backward
     * selections.
     *
     * Note: IE10+ supports the Selection object, but it does not support
     * the `extend` method, which means that even in modern IE, it's not possible
     * to programmatically create a backward selection. Thus, for all IE
     * versions, we use the old IE API to create our selections.
     *
     * @param {DOMElement|DOMTextNode} node
     * @param {object} offsets
     */


    function setOffsets(node, offsets) {
      var doc = node.ownerDocument || document;
      var win = doc && doc.defaultView || window; // Edge fails with "Object expected" in some scenarios.
      // (For instance: TinyMCE editor used in a list component that supports pasting to add more,
      // fails when pasting 100+ items)

      if (!win.getSelection) {
        return;
      }

      var selection = win.getSelection();
      var length = node.textContent.length;
      var start = Math.min(offsets.start, length);
      var end = offsets.end === undefined ? start : Math.min(offsets.end, length); // IE 11 uses modern selection, but doesn't support the extend method.
      // Flip backward selections, so we can set with a single range.

      if (!selection.extend && start > end) {
        var temp = end;
        end = start;
        start = temp;
      }

      var startMarker = getNodeForCharacterOffset(node, start);
      var endMarker = getNodeForCharacterOffset(node, end);

      if (startMarker && endMarker) {
        if (selection.rangeCount === 1 && selection.anchorNode === startMarker.node && selection.anchorOffset === startMarker.offset && selection.focusNode === endMarker.node && selection.focusOffset === endMarker.offset) {
          return;
        }

        var range = doc.createRange();
        range.setStart(startMarker.node, startMarker.offset);
        selection.removeAllRanges();

        if (start > end) {
          selection.addRange(range);
          selection.extend(endMarker.node, endMarker.offset);
        } else {
          range.setEnd(endMarker.node, endMarker.offset);
          selection.addRange(range);
        }
      }
    }

    function isTextNode(node) {
      return node && node.nodeType === TEXT_NODE;
    }

    function containsNode(outerNode, innerNode) {
      if (!outerNode || !innerNode) {
        return false;
      } else if (outerNode === innerNode) {
        return true;
      } else if (isTextNode(outerNode)) {
        return false;
      } else if (isTextNode(innerNode)) {
        return containsNode(outerNode, innerNode.parentNode);
      } else if ('contains' in outerNode) {
        return outerNode.contains(innerNode);
      } else if (outerNode.compareDocumentPosition) {
        return !!(outerNode.compareDocumentPosition(innerNode) & 16);
      } else {
        return false;
      }
    }

    function isInDocument(node) {
      return node && node.ownerDocument && containsNode(node.ownerDocument.documentElement, node);
    }

    function isSameOriginFrame(iframe) {
      try {
        // Accessing the contentDocument of a HTMLIframeElement can cause the browser
        // to throw, e.g. if it has a cross-origin src attribute.
        // Safari will show an error in the console when the access results in "Blocked a frame with origin". e.g:
        // iframe.contentDocument.defaultView;
        // A safety way is to access one of the cross origin properties: Window or Location
        // Which might result in "SecurityError" DOM Exception and it is compatible to Safari.
        // https://html.spec.whatwg.org/multipage/browsers.html#integration-with-idl
        return typeof iframe.contentWindow.location.href === 'string';
      } catch (err) {
        return false;
      }
    }

    function getActiveElementDeep() {
      var win = window;
      var element = getActiveElement();

      while (element instanceof win.HTMLIFrameElement) {
        if (isSameOriginFrame(element)) {
          win = element.contentWindow;
        } else {
          return element;
        }

        element = getActiveElement(win.document);
      }

      return element;
    }
    /**
     * @ReactInputSelection: React input selection module. Based on Selection.js,
     * but modified to be suitable for react and has a couple of bug fixes (doesn't
     * assume buttons have range selections allowed).
     * Input selection module for React.
     */

    /**
     * @hasSelectionCapabilities: we get the element types that support selection
     * from https://html.spec.whatwg.org/#do-not-apply, looking at `selectionStart`
     * and `selectionEnd` rows.
     */


    function hasSelectionCapabilities(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName && (nodeName === 'input' && (elem.type === 'text' || elem.type === 'search' || elem.type === 'tel' || elem.type === 'url' || elem.type === 'password') || nodeName === 'textarea' || elem.contentEditable === 'true');
    }

    function getSelectionInformation() {
      var focusedElem = getActiveElementDeep();
      return {
        focusedElem: focusedElem,
        selectionRange: hasSelectionCapabilities(focusedElem) ? getSelection(focusedElem) : null
      };
    }
    /**
     * @restoreSelection: If any selection information was potentially lost,
     * restore it. This is useful when performing operations that could remove dom
     * nodes and place them back in, resulting in focus being lost.
     */


    function restoreSelection(priorSelectionInformation) {
      var curFocusedElem = getActiveElementDeep();
      var priorFocusedElem = priorSelectionInformation.focusedElem;
      var priorSelectionRange = priorSelectionInformation.selectionRange;

      if (curFocusedElem !== priorFocusedElem && isInDocument(priorFocusedElem)) {
        if (priorSelectionRange !== null && hasSelectionCapabilities(priorFocusedElem)) {
          setSelection(priorFocusedElem, priorSelectionRange);
        } // Focusing a node can change the scroll position, which is undesirable


        var ancestors = [];
        var ancestor = priorFocusedElem;

        while (ancestor = ancestor.parentNode) {
          if (ancestor.nodeType === ELEMENT_NODE) {
            ancestors.push({
              element: ancestor,
              left: ancestor.scrollLeft,
              top: ancestor.scrollTop
            });
          }
        }

        if (typeof priorFocusedElem.focus === 'function') {
          priorFocusedElem.focus();
        }

        for (var i = 0; i < ancestors.length; i++) {
          var info = ancestors[i];
          info.element.scrollLeft = info.left;
          info.element.scrollTop = info.top;
        }
      }
    }
    /**
     * @getSelection: Gets the selection bounds of a focused textarea, input or
     * contentEditable node.
     * -@input: Look up selection bounds of this input
     * -@return {start: selectionStart, end: selectionEnd}
     */


    function getSelection(input) {
      var selection;

      if ('selectionStart' in input) {
        // Modern browser with input or textarea.
        selection = {
          start: input.selectionStart,
          end: input.selectionEnd
        };
      } else {
        // Content editable or old IE textarea.
        selection = getOffsets(input);
      }

      return selection || {
        start: 0,
        end: 0
      };
    }
    /**
     * @setSelection: Sets the selection bounds of a textarea or input and focuses
     * the input.
     * -@input     Set selection bounds of this input or textarea
     * -@offsets   Object of same form that is returned from get*
     */


    function setSelection(input, offsets) {
      var start = offsets.start,
          end = offsets.end;

      if (end === undefined) {
        end = start;
      }

      if ('selectionStart' in input) {
        input.selectionStart = start;
        input.selectionEnd = Math.min(end, input.value.length);
      } else {
        setOffsets(input, offsets);
      }
    }

    var validateDOMNesting = function () {};

    var updatedAncestorInfo = function () {};

    {
      // This validation code was written based on the HTML5 parsing spec:
      // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope
      //
      // Note: this does not catch all invalid nesting, nor does it try to (as it's
      // not clear what practical benefit doing so provides); instead, we warn only
      // for cases where the parser will give a parse tree differing from what React
      // intended. For example, <b><div></div></b> is invalid but we don't warn
      // because it still parses correctly; we do warn for other cases like nested
      // <p> tags where the beginning of the second element implicitly closes the
      // first, causing a confusing mess.
      // https://html.spec.whatwg.org/multipage/syntax.html#special
      var specialTags = ['address', 'applet', 'area', 'article', 'aside', 'base', 'basefont', 'bgsound', 'blockquote', 'body', 'br', 'button', 'caption', 'center', 'col', 'colgroup', 'dd', 'details', 'dir', 'div', 'dl', 'dt', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'frame', 'frameset', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'iframe', 'img', 'input', 'isindex', 'li', 'link', 'listing', 'main', 'marquee', 'menu', 'menuitem', 'meta', 'nav', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'p', 'param', 'plaintext', 'pre', 'script', 'section', 'select', 'source', 'style', 'summary', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'title', 'tr', 'track', 'ul', 'wbr', 'xmp']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-scope

      var inScopeTags = ['applet', 'caption', 'html', 'table', 'td', 'th', 'marquee', 'object', 'template', // https://html.spec.whatwg.org/multipage/syntax.html#html-integration-point
      // TODO: Distinguish by namespace here -- for <title>, including it here
      // errs on the side of fewer warnings
      'foreignObject', 'desc', 'title']; // https://html.spec.whatwg.org/multipage/syntax.html#has-an-element-in-button-scope

      var buttonScopeTags = inScopeTags.concat(['button']); // https://html.spec.whatwg.org/multipage/syntax.html#generate-implied-end-tags

      var impliedEndTags = ['dd', 'dt', 'li', 'option', 'optgroup', 'p', 'rp', 'rt'];
      var emptyAncestorInfo = {
        current: null,
        formTag: null,
        aTagInScope: null,
        buttonTagInScope: null,
        nobrTagInScope: null,
        pTagInButtonScope: null,
        listItemTagAutoclosing: null,
        dlItemTagAutoclosing: null
      };

      updatedAncestorInfo = function (oldInfo, tag) {
        var ancestorInfo = _assign({}, oldInfo || emptyAncestorInfo);

        var info = {
          tag: tag
        };

        if (inScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.aTagInScope = null;
          ancestorInfo.buttonTagInScope = null;
          ancestorInfo.nobrTagInScope = null;
        }

        if (buttonScopeTags.indexOf(tag) !== -1) {
          ancestorInfo.pTagInButtonScope = null;
        } // See rules for 'li', 'dd', 'dt' start tags in
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        if (specialTags.indexOf(tag) !== -1 && tag !== 'address' && tag !== 'div' && tag !== 'p') {
          ancestorInfo.listItemTagAutoclosing = null;
          ancestorInfo.dlItemTagAutoclosing = null;
        }

        ancestorInfo.current = info;

        if (tag === 'form') {
          ancestorInfo.formTag = info;
        }

        if (tag === 'a') {
          ancestorInfo.aTagInScope = info;
        }

        if (tag === 'button') {
          ancestorInfo.buttonTagInScope = info;
        }

        if (tag === 'nobr') {
          ancestorInfo.nobrTagInScope = info;
        }

        if (tag === 'p') {
          ancestorInfo.pTagInButtonScope = info;
        }

        if (tag === 'li') {
          ancestorInfo.listItemTagAutoclosing = info;
        }

        if (tag === 'dd' || tag === 'dt') {
          ancestorInfo.dlItemTagAutoclosing = info;
        }

        return ancestorInfo;
      };
      /**
       * Returns whether
       */


      var isTagValidWithParent = function (tag, parentTag) {
        // First, let's check if we're in an unusual parsing mode...
        switch (parentTag) {
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inselect
          case 'select':
            return tag === 'option' || tag === 'optgroup' || tag === '#text';

          case 'optgroup':
            return tag === 'option' || tag === '#text';
          // Strictly speaking, seeing an <option> doesn't mean we're in a <select>
          // but

          case 'option':
            return tag === '#text';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intd
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incaption
          // No special behavior since these rules fall back to "in body" mode for
          // all except special table nodes which cause bad parsing behavior anyway.
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intr

          case 'tr':
            return tag === 'th' || tag === 'td' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intbody

          case 'tbody':
          case 'thead':
          case 'tfoot':
            return tag === 'tr' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-incolgroup

          case 'colgroup':
            return tag === 'col' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-intable

          case 'table':
            return tag === 'caption' || tag === 'colgroup' || tag === 'tbody' || tag === 'tfoot' || tag === 'thead' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inhead

          case 'head':
            return tag === 'base' || tag === 'basefont' || tag === 'bgsound' || tag === 'link' || tag === 'meta' || tag === 'title' || tag === 'noscript' || tag === 'noframes' || tag === 'style' || tag === 'script' || tag === 'template';
          // https://html.spec.whatwg.org/multipage/semantics.html#the-html-element

          case 'html':
            return tag === 'head' || tag === 'body' || tag === 'frameset';

          case 'frameset':
            return tag === 'frame';

          case '#document':
            return tag === 'html';
        } // Probably in the "in body" parsing mode, so we outlaw only tag combos
        // where the parsing rules cause implicit opens or closes to be added.
        // https://html.spec.whatwg.org/multipage/syntax.html#parsing-main-inbody


        switch (tag) {
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return parentTag !== 'h1' && parentTag !== 'h2' && parentTag !== 'h3' && parentTag !== 'h4' && parentTag !== 'h5' && parentTag !== 'h6';

          case 'rp':
          case 'rt':
            return impliedEndTags.indexOf(parentTag) === -1;

          case 'body':
          case 'caption':
          case 'col':
          case 'colgroup':
          case 'frameset':
          case 'frame':
          case 'head':
          case 'html':
          case 'tbody':
          case 'td':
          case 'tfoot':
          case 'th':
          case 'thead':
          case 'tr':
            // These tags are only valid with a few parents that have special child
            // parsing rules -- if we're down here, then none of those matched and
            // so we allow it only if we don't know what the parent is, as all other
            // cases are invalid.
            return parentTag == null;
        }

        return true;
      };
      /**
       * Returns whether
       */


      var findInvalidAncestorForTag = function (tag, ancestorInfo) {
        switch (tag) {
          case 'address':
          case 'article':
          case 'aside':
          case 'blockquote':
          case 'center':
          case 'details':
          case 'dialog':
          case 'dir':
          case 'div':
          case 'dl':
          case 'fieldset':
          case 'figcaption':
          case 'figure':
          case 'footer':
          case 'header':
          case 'hgroup':
          case 'main':
          case 'menu':
          case 'nav':
          case 'ol':
          case 'p':
          case 'section':
          case 'summary':
          case 'ul':
          case 'pre':
          case 'listing':
          case 'table':
          case 'hr':
          case 'xmp':
          case 'h1':
          case 'h2':
          case 'h3':
          case 'h4':
          case 'h5':
          case 'h6':
            return ancestorInfo.pTagInButtonScope;

          case 'form':
            return ancestorInfo.formTag || ancestorInfo.pTagInButtonScope;

          case 'li':
            return ancestorInfo.listItemTagAutoclosing;

          case 'dd':
          case 'dt':
            return ancestorInfo.dlItemTagAutoclosing;

          case 'button':
            return ancestorInfo.buttonTagInScope;

          case 'a':
            // Spec says something about storing a list of markers, but it sounds
            // equivalent to this check.
            return ancestorInfo.aTagInScope;

          case 'nobr':
            return ancestorInfo.nobrTagInScope;
        }

        return null;
      };

      var didWarn$1 = {};

      validateDOMNesting = function (childTag, childText, ancestorInfo) {
        ancestorInfo = ancestorInfo || emptyAncestorInfo;
        var parentInfo = ancestorInfo.current;
        var parentTag = parentInfo && parentInfo.tag;

        if (childText != null) {
          !(childTag == null) ? warningWithoutStack$1(false, 'validateDOMNesting: when childText is passed, childTag should be null') : void 0;
          childTag = '#text';
        }

        var invalidParent = isTagValidWithParent(childTag, parentTag) ? null : parentInfo;
        var invalidAncestor = invalidParent ? null : findInvalidAncestorForTag(childTag, ancestorInfo);
        var invalidParentOrAncestor = invalidParent || invalidAncestor;

        if (!invalidParentOrAncestor) {
          return;
        }

        var ancestorTag = invalidParentOrAncestor.tag;
        var addendum = getCurrentFiberStackInDev();
        var warnKey = !!invalidParent + '|' + childTag + '|' + ancestorTag + '|' + addendum;

        if (didWarn$1[warnKey]) {
          return;
        }

        didWarn$1[warnKey] = true;
        var tagDisplayName = childTag;
        var whitespaceInfo = '';

        if (childTag === '#text') {
          if (/\S/.test(childText)) {
            tagDisplayName = 'Text nodes';
          } else {
            tagDisplayName = 'Whitespace text nodes';
            whitespaceInfo = " Make sure you don't have any extra whitespace between tags on " + 'each line of your source code.';
          }
        } else {
          tagDisplayName = '<' + childTag + '>';
        }

        if (invalidParent) {
          var info = '';

          if (ancestorTag === 'table' && childTag === 'tr') {
            info += ' Add a <tbody>, <thead> or <tfoot> to your code to match the DOM tree generated by ' + 'the browser.';
          }

          warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a child of <%s>.%s%s%s', tagDisplayName, ancestorTag, whitespaceInfo, info, addendum);
        } else {
          warningWithoutStack$1(false, 'validateDOMNesting(...): %s cannot appear as a descendant of ' + '<%s>.%s', tagDisplayName, ancestorTag, addendum);
        }
      };
    } // can re-export everything from this module.

    function shim() {
      {
        {
          throw Error("The current renderer does not support persistence. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    } // Persistence (when unsupported)


    var supportsPersistence = false;
    var cloneInstance = shim;
    var cloneFundamentalInstance = shim;
    var createContainerChildSet = shim;
    var appendChildToContainerChildSet = shim;
    var finalizeContainerChildren = shim;
    var replaceContainerChildren = shim;
    var cloneHiddenInstance = shim;
    var cloneHiddenTextInstance = shim;
    var SUPPRESS_HYDRATION_WARNING;
    {
      SUPPRESS_HYDRATION_WARNING = 'suppressHydrationWarning';
    }
    var SUSPENSE_START_DATA = '$';
    var SUSPENSE_END_DATA = '/$';
    var SUSPENSE_PENDING_START_DATA = '$?';
    var SUSPENSE_FALLBACK_START_DATA = '$!';
    var STYLE = 'style';
    var eventsEnabled = null;
    var selectionInformation = null;

    function shouldAutoFocusHostComponent(type, props) {
      switch (type) {
        case 'button':
        case 'input':
        case 'select':
        case 'textarea':
          return !!props.autoFocus;
      }

      return false;
    }

    function getRootHostContext(rootContainerInstance) {
      var type;
      var namespace;
      var nodeType = rootContainerInstance.nodeType;

      switch (nodeType) {
        case DOCUMENT_NODE:
        case DOCUMENT_FRAGMENT_NODE:
          {
            type = nodeType === DOCUMENT_NODE ? '#document' : '#fragment';
            var root = rootContainerInstance.documentElement;
            namespace = root ? root.namespaceURI : getChildNamespace(null, '');
            break;
          }

        default:
          {
            var container = nodeType === COMMENT_NODE ? rootContainerInstance.parentNode : rootContainerInstance;
            var ownNamespace = container.namespaceURI || null;
            type = container.tagName;
            namespace = getChildNamespace(ownNamespace, type);
            break;
          }
      }

      {
        var validatedTag = type.toLowerCase();
        var ancestorInfo = updatedAncestorInfo(null, validatedTag);
        return {
          namespace: namespace,
          ancestorInfo: ancestorInfo
        };
      }
      return namespace;
    }

    function getChildHostContext(parentHostContext, type, rootContainerInstance) {
      {
        var parentHostContextDev = parentHostContext;
        var namespace = getChildNamespace(parentHostContextDev.namespace, type);
        var ancestorInfo = updatedAncestorInfo(parentHostContextDev.ancestorInfo, type);
        return {
          namespace: namespace,
          ancestorInfo: ancestorInfo
        };
      }
      var parentNamespace = parentHostContext;
      return getChildNamespace(parentNamespace, type);
    }

    function getPublicInstance(instance) {
      return instance;
    }

    function prepareForCommit(containerInfo) {
      eventsEnabled = isEnabled();
      selectionInformation = getSelectionInformation();
      setEnabled(false);
    }

    function resetAfterCommit(containerInfo) {
      restoreSelection(selectionInformation);
      selectionInformation = null;
      setEnabled(eventsEnabled);
      eventsEnabled = null;
    }

    function createInstance(type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      var parentNamespace;
      {
        // TODO: take namespace into account when validating.
        var hostContextDev = hostContext;
        validateDOMNesting(type, null, hostContextDev.ancestorInfo);

        if (typeof props.children === 'string' || typeof props.children === 'number') {
          var string = '' + props.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }

        parentNamespace = hostContextDev.namespace;
      }
      var domElement = createElement(type, props, rootContainerInstance, parentNamespace);
      precacheFiberNode(internalInstanceHandle, domElement);
      updateFiberProps(domElement, props);
      return domElement;
    }

    function appendInitialChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function finalizeInitialChildren(domElement, type, props, rootContainerInstance, hostContext) {
      setInitialProperties(domElement, type, props, rootContainerInstance);
      return shouldAutoFocusHostComponent(type, props);
    }

    function prepareUpdate(domElement, type, oldProps, newProps, rootContainerInstance, hostContext) {
      {
        var hostContextDev = hostContext;

        if (typeof newProps.children !== typeof oldProps.children && (typeof newProps.children === 'string' || typeof newProps.children === 'number')) {
          var string = '' + newProps.children;
          var ownAncestorInfo = updatedAncestorInfo(hostContextDev.ancestorInfo, type);
          validateDOMNesting(null, string, ownAncestorInfo);
        }
      }
      return diffProperties(domElement, type, oldProps, newProps, rootContainerInstance);
    }

    function shouldSetTextContent(type, props) {
      return type === 'textarea' || type === 'option' || type === 'noscript' || typeof props.children === 'string' || typeof props.children === 'number' || typeof props.dangerouslySetInnerHTML === 'object' && props.dangerouslySetInnerHTML !== null && props.dangerouslySetInnerHTML.__html != null;
    }

    function shouldDeprioritizeSubtree(type, props) {
      return !!props.hidden;
    }

    function createTextInstance(text, rootContainerInstance, hostContext, internalInstanceHandle) {
      {
        var hostContextDev = hostContext;
        validateDOMNesting(null, text, hostContextDev.ancestorInfo);
      }
      var textNode = createTextNode(text, rootContainerInstance);
      precacheFiberNode(internalInstanceHandle, textNode);
      return textNode;
    }

    var isPrimaryRenderer = true;
    var warnsIfNotActing = true; // This initialization code may run even on server environments
    // if a component just imports ReactDOM (e.g. for findDOMNode).
    // Some environments might not have setTimeout or clearTimeout.

    var scheduleTimeout = typeof setTimeout === 'function' ? setTimeout : undefined;
    var cancelTimeout = typeof clearTimeout === 'function' ? clearTimeout : undefined;
    var noTimeout = -1; // -------------------
    //     Mutation
    // -------------------

    var supportsMutation = true;

    function commitMount(domElement, type, newProps, internalInstanceHandle) {
      // Despite the naming that might imply otherwise, this method only
      // fires if there is an `Update` effect scheduled during mounting.
      // This happens if `finalizeInitialChildren` returns `true` (which it
      // does to implement the `autoFocus` attribute on the client). But
      // there are also other cases when this might happen (such as patching
      // up text content during hydration mismatch). So we'll check this again.
      if (shouldAutoFocusHostComponent(type, newProps)) {
        domElement.focus();
      }
    }

    function commitUpdate(domElement, updatePayload, type, oldProps, newProps, internalInstanceHandle) {
      // Update the props handle so that we know which props are the ones with
      // with current event handlers.
      updateFiberProps(domElement, newProps); // Apply the diff to the DOM node.

      updateProperties(domElement, updatePayload, type, oldProps, newProps);
    }

    function resetTextContent(domElement) {
      setTextContent(domElement, '');
    }

    function commitTextUpdate(textInstance, oldText, newText) {
      textInstance.nodeValue = newText;
    }

    function appendChild(parentInstance, child) {
      parentInstance.appendChild(child);
    }

    function appendChildToContainer(container, child) {
      var parentNode;

      if (container.nodeType === COMMENT_NODE) {
        parentNode = container.parentNode;
        parentNode.insertBefore(child, container);
      } else {
        parentNode = container;
        parentNode.appendChild(child);
      } // This container might be used for a portal.
      // If something inside a portal is clicked, that click should bubble
      // through the React tree. However, on Mobile Safari the click would
      // never bubble through the *DOM* tree unless an ancestor with onclick
      // event exists. So we wouldn't see it and dispatch it.
      // This is why we ensure that non React root containers have inline onclick
      // defined.
      // https://github.com/facebook/react/issues/11918


      var reactRootContainer = container._reactRootContainer;

      if ((reactRootContainer === null || reactRootContainer === undefined) && parentNode.onclick === null) {
        // TODO: This cast may not be sound for SVG, MathML or custom elements.
        trapClickOnNonInteractiveElement(parentNode);
      }
    }

    function insertBefore(parentInstance, child, beforeChild) {
      parentInstance.insertBefore(child, beforeChild);
    }

    function insertInContainerBefore(container, child, beforeChild) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.insertBefore(child, beforeChild);
      } else {
        container.insertBefore(child, beforeChild);
      }
    } // This is a specific event for the React Flare
    // event system, so event responders can act
    // accordingly to a DOM node being unmounted that
    // previously had active document focus.


    function dispatchDetachedVisibleNodeEvent(child) {
      if (enableFlareAPI && selectionInformation && child === selectionInformation.focusedElem) {
        var targetFiber = getClosestInstanceFromNode(child); // Simlulate a blur event to the React Flare responder system.

        dispatchEventForResponderEventSystem('detachedvisiblenode', targetFiber, {
          target: child,
          timeStamp: Date.now()
        }, child, RESPONDER_EVENT_SYSTEM | IS_PASSIVE);
      }
    }

    function removeChild(parentInstance, child) {
      dispatchDetachedVisibleNodeEvent(child);
      parentInstance.removeChild(child);
    }

    function removeChildFromContainer(container, child) {
      if (container.nodeType === COMMENT_NODE) {
        container.parentNode.removeChild(child);
      } else {
        dispatchDetachedVisibleNodeEvent(child);
        container.removeChild(child);
      }
    }

    function clearSuspenseBoundary(parentInstance, suspenseInstance) {
      var node = suspenseInstance; // Delete all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      do {
        var nextNode = node.nextSibling;
        parentInstance.removeChild(node);

        if (nextNode && nextNode.nodeType === COMMENT_NODE) {
          var data = nextNode.data;

          if (data === SUSPENSE_END_DATA) {
            if (depth === 0) {
              parentInstance.removeChild(nextNode); // Retry if any event replaying was blocked on this.

              retryIfBlockedOn(suspenseInstance);
              return;
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_PENDING_START_DATA || data === SUSPENSE_FALLBACK_START_DATA) {
            depth++;
          }
        }

        node = nextNode;
      } while (node); // TODO: Warn, we didn't find the end comment boundary.
      // Retry if any event replaying was blocked on this.


      retryIfBlockedOn(suspenseInstance);
    }

    function clearSuspenseBoundaryFromContainer(container, suspenseInstance) {
      if (container.nodeType === COMMENT_NODE) {
        clearSuspenseBoundary(container.parentNode, suspenseInstance);
      } else if (container.nodeType === ELEMENT_NODE) {
        clearSuspenseBoundary(container, suspenseInstance);
      } else {} // Document nodes should never contain suspense boundaries.
      // Retry if any event replaying was blocked on this.


      retryIfBlockedOn(container);
    }

    function hideInstance(instance) {
      // TODO: Does this work for all element types? What about MathML? Should we
      // pass host context to this method?
      instance = instance;
      var style = instance.style;

      if (typeof style.setProperty === 'function') {
        style.setProperty('display', 'none', 'important');
      } else {
        style.display = 'none';
      }
    }

    function hideTextInstance(textInstance) {
      textInstance.nodeValue = '';
    }

    function unhideInstance(instance, props) {
      instance = instance;
      var styleProp = props[STYLE];
      var display = styleProp !== undefined && styleProp !== null && styleProp.hasOwnProperty('display') ? styleProp.display : null;
      instance.style.display = dangerousStyleValue('display', display);
    }

    function unhideTextInstance(textInstance, text) {
      textInstance.nodeValue = text;
    } // -------------------
    //     Hydration
    // -------------------


    var supportsHydration = true;

    function canHydrateInstance(instance, type, props) {
      if (instance.nodeType !== ELEMENT_NODE || type.toLowerCase() !== instance.nodeName.toLowerCase()) {
        return null;
      } // This has now been refined to an element node.


      return instance;
    }

    function canHydrateTextInstance(instance, text) {
      if (text === '' || instance.nodeType !== TEXT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      } // This has now been refined to a text node.


      return instance;
    }

    function canHydrateSuspenseInstance(instance) {
      if (instance.nodeType !== COMMENT_NODE) {
        // Empty strings are not parsed by HTML so there won't be a correct match here.
        return null;
      } // This has now been refined to a suspense node.


      return instance;
    }

    function isSuspenseInstancePending(instance) {
      return instance.data === SUSPENSE_PENDING_START_DATA;
    }

    function isSuspenseInstanceFallback(instance) {
      return instance.data === SUSPENSE_FALLBACK_START_DATA;
    }

    function registerSuspenseInstanceRetry(instance, callback) {
      instance._reactRetry = callback;
    }

    function getNextHydratable(node) {
      // Skip non-hydratable nodes.
      for (; node != null; node = node.nextSibling) {
        var nodeType = node.nodeType;

        if (nodeType === ELEMENT_NODE || nodeType === TEXT_NODE) {
          break;
        }

        if (enableSuspenseServerRenderer) {
          if (nodeType === COMMENT_NODE) {
            var nodeData = node.data;

            if (nodeData === SUSPENSE_START_DATA || nodeData === SUSPENSE_FALLBACK_START_DATA || nodeData === SUSPENSE_PENDING_START_DATA) {
              break;
            }
          }
        }
      }

      return node;
    }

    function getNextHydratableSibling(instance) {
      return getNextHydratable(instance.nextSibling);
    }

    function getFirstHydratableChild(parentInstance) {
      return getNextHydratable(parentInstance.firstChild);
    }

    function hydrateInstance(instance, type, props, rootContainerInstance, hostContext, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, instance); // TODO: Possibly defer this until the commit phase where all the events
      // get attached.

      updateFiberProps(instance, props);
      var parentNamespace;
      {
        var hostContextDev = hostContext;
        parentNamespace = hostContextDev.namespace;
      }
      return diffHydratedProperties(instance, type, props, parentNamespace, rootContainerInstance);
    }

    function hydrateTextInstance(textInstance, text, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, textInstance);
      return diffHydratedText(textInstance, text);
    }

    function hydrateSuspenseInstance(suspenseInstance, internalInstanceHandle) {
      precacheFiberNode(internalInstanceHandle, suspenseInstance);
    }

    function getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance) {
      var node = suspenseInstance.nextSibling; // Skip past all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      while (node) {
        if (node.nodeType === COMMENT_NODE) {
          var data = node.data;

          if (data === SUSPENSE_END_DATA) {
            if (depth === 0) {
              return getNextHydratableSibling(node);
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
            depth++;
          }
        }

        node = node.nextSibling;
      } // TODO: Warn, we didn't find the end comment boundary.


      return null;
    } // Returns the SuspenseInstance if this node is a direct child of a
    // SuspenseInstance. I.e. if its previous sibling is a Comment with
    // SUSPENSE_x_START_DATA. Otherwise, null.


    function getParentSuspenseInstance(targetInstance) {
      var node = targetInstance.previousSibling; // Skip past all nodes within this suspense boundary.
      // There might be nested nodes so we need to keep track of how
      // deep we are and only break out when we're back on top.

      var depth = 0;

      while (node) {
        if (node.nodeType === COMMENT_NODE) {
          var data = node.data;

          if (data === SUSPENSE_START_DATA || data === SUSPENSE_FALLBACK_START_DATA || data === SUSPENSE_PENDING_START_DATA) {
            if (depth === 0) {
              return node;
            } else {
              depth--;
            }
          } else if (data === SUSPENSE_END_DATA) {
            depth++;
          }
        }

        node = node.previousSibling;
      }

      return null;
    }

    function commitHydratedContainer(container) {
      // Retry if any event replaying was blocked on this.
      retryIfBlockedOn(container);
    }

    function commitHydratedSuspenseInstance(suspenseInstance) {
      // Retry if any event replaying was blocked on this.
      retryIfBlockedOn(suspenseInstance);
    }

    function didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, text) {
      {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, text) {
      if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForUnmatchedText(textInstance, text);
      }
    }

    function didNotHydrateContainerInstance(parentContainer, instance) {
      {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentContainer, instance);
        } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
        } else {
          warnForDeletedHydratableText(parentContainer, instance);
        }
      }
    }

    function didNotHydrateInstance(parentType, parentProps, parentInstance, instance) {
      if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        if (instance.nodeType === ELEMENT_NODE) {
          warnForDeletedHydratableElement(parentInstance, instance);
        } else if (instance.nodeType === COMMENT_NODE) {// TODO: warnForDeletedHydratableSuspenseBoundary
        } else {
          warnForDeletedHydratableText(parentInstance, instance);
        }
      }
    }

    function didNotFindHydratableContainerInstance(parentContainer, type, props) {
      {
        warnForInsertedHydratedElement(parentContainer, type, props);
      }
    }

    function didNotFindHydratableContainerTextInstance(parentContainer, text) {
      {
        warnForInsertedHydratedText(parentContainer, text);
      }
    }

    function didNotFindHydratableInstance(parentType, parentProps, parentInstance, type, props) {
      if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedElement(parentInstance, type, props);
      }
    }

    function didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, text) {
      if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {
        warnForInsertedHydratedText(parentInstance, text);
      }
    }

    function didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance) {
      if ( true && parentProps[SUPPRESS_HYDRATION_WARNING] !== true) {// TODO: warnForInsertedHydratedSuspense(parentInstance);
      }
    }

    function mountResponderInstance(responder, responderInstance, responderProps, responderState, instance) {
      // Listen to events
      var doc = instance.ownerDocument;
      var _ref = responder,
          rootEventTypes = _ref.rootEventTypes,
          targetEventTypes = _ref.targetEventTypes;

      if (targetEventTypes !== null) {
        listenToEventResponderEventTypes(targetEventTypes, doc);
      }

      if (rootEventTypes !== null) {
        addRootEventTypesForResponderInstance(responderInstance, rootEventTypes);
        listenToEventResponderEventTypes(rootEventTypes, doc);
      }

      mountEventResponder(responder, responderInstance, responderProps, responderState);
      return responderInstance;
    }

    function unmountResponderInstance(responderInstance) {
      if (enableFlareAPI) {
        // TODO stop listening to targetEventTypes
        unmountEventResponder(responderInstance);
      }
    }

    function getFundamentalComponentInstance(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var currentFiber = fundamentalInstance.currentFiber,
            impl = fundamentalInstance.impl,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var instance = impl.getInstance(null, props, state);
        precacheFiberNode(currentFiber, instance);
        return instance;
      } // Because of the flag above, this gets around the Flow error;


      return null;
    }

    function mountFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            instance = fundamentalInstance.instance,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var onMount = impl.onMount;

        if (onMount !== undefined) {
          onMount(null, instance, props, state);
        }
      }
    }

    function shouldUpdateFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            prevProps = fundamentalInstance.prevProps,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var shouldUpdate = impl.shouldUpdate;

        if (shouldUpdate !== undefined) {
          return shouldUpdate(null, prevProps, props, state);
        }
      }

      return true;
    }

    function updateFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            instance = fundamentalInstance.instance,
            prevProps = fundamentalInstance.prevProps,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var onUpdate = impl.onUpdate;

        if (onUpdate !== undefined) {
          onUpdate(null, instance, prevProps, props, state);
        }
      }
    }

    function unmountFundamentalComponent(fundamentalInstance) {
      if (enableFundamentalAPI) {
        var impl = fundamentalInstance.impl,
            instance = fundamentalInstance.instance,
            props = fundamentalInstance.props,
            state = fundamentalInstance.state;
        var onUnmount = impl.onUnmount;

        if (onUnmount !== undefined) {
          onUnmount(null, instance, props, state);
        }
      }
    }

    function getInstanceFromNode$2(node) {
      return getClosestInstanceFromNode(node) || null;
    }

    var randomKey = Math.random().toString(36).slice(2);
    var internalInstanceKey = '__reactInternalInstance$' + randomKey;
    var internalEventHandlersKey = '__reactEventHandlers$' + randomKey;
    var internalContainerInstanceKey = '__reactContainere$' + randomKey;

    function precacheFiberNode(hostInst, node) {
      node[internalInstanceKey] = hostInst;
    }

    function markContainerAsRoot(hostRoot, node) {
      node[internalContainerInstanceKey] = hostRoot;
    }

    function unmarkContainerAsRoot(node) {
      node[internalContainerInstanceKey] = null;
    }

    function isContainerMarkedAsRoot(node) {
      return !!node[internalContainerInstanceKey];
    } // Given a DOM node, return the closest HostComponent or HostText fiber ancestor.
    // If the target node is part of a hydrated or not yet rendered subtree, then
    // this may also return a SuspenseComponent or HostRoot to indicate that.
    // Conceptually the HostRoot fiber is a child of the Container node. So if you
    // pass the Container node as the targetNode, you will not actually get the
    // HostRoot back. To get to the HostRoot, you need to pass a child of it.
    // The same thing applies to Suspense boundaries.


    function getClosestInstanceFromNode(targetNode) {
      var targetInst = targetNode[internalInstanceKey];

      if (targetInst) {
        // Don't return HostRoot or SuspenseComponent here.
        return targetInst;
      } // If the direct event target isn't a React owned DOM node, we need to look
      // to see if one of its parents is a React owned DOM node.


      var parentNode = targetNode.parentNode;

      while (parentNode) {
        // We'll check if this is a container root that could include
        // React nodes in the future. We need to check this first because
        // if we're a child of a dehydrated container, we need to first
        // find that inner container before moving on to finding the parent
        // instance. Note that we don't check this field on  the targetNode
        // itself because the fibers are conceptually between the container
        // node and the first child. It isn't surrounding the container node.
        // If it's not a container, we check if it's an instance.
        targetInst = parentNode[internalContainerInstanceKey] || parentNode[internalInstanceKey];

        if (targetInst) {
          // Since this wasn't the direct target of the event, we might have
          // stepped past dehydrated DOM nodes to get here. However they could
          // also have been non-React nodes. We need to answer which one.
          // If we the instance doesn't have any children, then there can't be
          // a nested suspense boundary within it. So we can use this as a fast
          // bailout. Most of the time, when people add non-React children to
          // the tree, it is using a ref to a child-less DOM node.
          // Normally we'd only need to check one of the fibers because if it
          // has ever gone from having children to deleting them or vice versa
          // it would have deleted the dehydrated boundary nested inside already.
          // However, since the HostRoot starts out with an alternate it might
          // have one on the alternate so we need to check in case this was a
          // root.
          var alternate = targetInst.alternate;

          if (targetInst.child !== null || alternate !== null && alternate.child !== null) {
            // Next we need to figure out if the node that skipped past is
            // nested within a dehydrated boundary and if so, which one.
            var suspenseInstance = getParentSuspenseInstance(targetNode);

            while (suspenseInstance !== null) {
              // We found a suspense instance. That means that we haven't
              // hydrated it yet. Even though we leave the comments in the
              // DOM after hydrating, and there are boundaries in the DOM
              // that could already be hydrated, we wouldn't have found them
              // through this pass since if the target is hydrated it would
              // have had an internalInstanceKey on it.
              // Let's get the fiber associated with the SuspenseComponent
              // as the deepest instance.
              var targetSuspenseInst = suspenseInstance[internalInstanceKey];

              if (targetSuspenseInst) {
                return targetSuspenseInst;
              } // If we don't find a Fiber on the comment, it might be because
              // we haven't gotten to hydrate it yet. There might still be a
              // parent boundary that hasn't above this one so we need to find
              // the outer most that is known.


              suspenseInstance = getParentSuspenseInstance(suspenseInstance); // If we don't find one, then that should mean that the parent
              // host component also hasn't hydrated yet. We can return it
              // below since it will bail out on the isMounted check later.
            }
          }

          return targetInst;
        }

        targetNode = parentNode;
        parentNode = targetNode.parentNode;
      }

      return null;
    }
    /**
     * Given a DOM node, return the ReactDOMComponent or ReactDOMTextComponent
     * instance, or null if the node was not rendered by this React.
     */


    function getInstanceFromNode$1(node) {
      var inst = node[internalInstanceKey] || node[internalContainerInstanceKey];

      if (inst) {
        if (inst.tag === HostComponent || inst.tag === HostText || inst.tag === SuspenseComponent || inst.tag === HostRoot) {
          return inst;
        } else {
          return null;
        }
      }

      return null;
    }
    /**
     * Given a ReactDOMComponent or ReactDOMTextComponent, return the corresponding
     * DOM node.
     */


    function getNodeFromInstance$1(inst) {
      if (inst.tag === HostComponent || inst.tag === HostText) {
        // In Fiber this, is just the state node right now. We assume it will be
        // a host component or host text.
        return inst.stateNode;
      } // Without this first invariant, passing a non-DOM-component triggers the next
      // invariant for a missing parent, which is super confusing.


      {
        {
          throw Error("getNodeFromInstance: Invalid argument.");
        }
      }
    }

    function getFiberCurrentPropsFromNode$1(node) {
      return node[internalEventHandlersKey] || null;
    }

    function updateFiberProps(node, props) {
      node[internalEventHandlersKey] = props;
    }
    /**
     * These variables store information about text content of a target node,
     * allowing comparison of content before and after a given event.
     *
     * Identify the node where selection currently begins, then observe
     * both its text content and its current position in the DOM. Since the
     * browser may natively replace the target node during composition, we can
     * use its position to find its replacement.
     *
     *
     */


    var root = null;
    var startText = null;
    var fallbackText = null;

    function initialize(nativeEventTarget) {
      root = nativeEventTarget;
      startText = getText();
      return true;
    }

    function reset() {
      root = null;
      startText = null;
      fallbackText = null;
    }

    function getData() {
      if (fallbackText) {
        return fallbackText;
      }

      var start;
      var startValue = startText;
      var startLength = startValue.length;
      var end;
      var endValue = getText();
      var endLength = endValue.length;

      for (start = 0; start < startLength; start++) {
        if (startValue[start] !== endValue[start]) {
          break;
        }
      }

      var minEnd = startLength - start;

      for (end = 1; end <= minEnd; end++) {
        if (startValue[startLength - end] !== endValue[endLength - end]) {
          break;
        }
      }

      var sliceTail = end > 1 ? 1 - end : undefined;
      fallbackText = endValue.slice(start, sliceTail);
      return fallbackText;
    }

    function getText() {
      if ('value' in root) {
        return root.value;
      }

      return root.textContent;
    }
    /**
     * @interface Event
     * @see http://www.w3.org/TR/DOM-Level-3-Events/#events-compositionevents
     */


    var SyntheticCompositionEvent = SyntheticEvent.extend({
      data: null
    });
    /**
     * @interface Event
     * @see http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105
     *      /#events-inputevents
     */

    var SyntheticInputEvent = SyntheticEvent.extend({
      data: null
    });
    var END_KEYCODES = [9, 13, 27, 32]; // Tab, Return, Esc, Space

    var START_KEYCODE = 229;
    var canUseCompositionEvent = canUseDOM && 'CompositionEvent' in window;
    var documentMode = null;

    if (canUseDOM && 'documentMode' in document) {
      documentMode = document.documentMode;
    } // Webkit offers a very useful `textInput` event that can be used to
    // directly represent `beforeInput`. The IE `textinput` event is not as
    // useful, so we don't use it.


    var canUseTextInputEvent = canUseDOM && 'TextEvent' in window && !documentMode; // In IE9+, we have access to composition events, but the data supplied
    // by the native compositionend event may be incorrect. Japanese ideographic
    // spaces, for instance (\u3000) are not recorded correctly.

    var useFallbackCompositionData = canUseDOM && (!canUseCompositionEvent || documentMode && documentMode > 8 && documentMode <= 11);
    var SPACEBAR_CODE = 32;
    var SPACEBAR_CHAR = String.fromCharCode(SPACEBAR_CODE); // Events and their corresponding property names.

    var eventTypes$1 = {
      beforeInput: {
        phasedRegistrationNames: {
          bubbled: 'onBeforeInput',
          captured: 'onBeforeInputCapture'
        },
        dependencies: [TOP_COMPOSITION_END, TOP_KEY_PRESS, TOP_TEXT_INPUT, TOP_PASTE]
      },
      compositionEnd: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionEnd',
          captured: 'onCompositionEndCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_END, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      },
      compositionStart: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionStart',
          captured: 'onCompositionStartCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_START, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      },
      compositionUpdate: {
        phasedRegistrationNames: {
          bubbled: 'onCompositionUpdate',
          captured: 'onCompositionUpdateCapture'
        },
        dependencies: [TOP_BLUR, TOP_COMPOSITION_UPDATE, TOP_KEY_DOWN, TOP_KEY_PRESS, TOP_KEY_UP, TOP_MOUSE_DOWN]
      }
    }; // Track whether we've ever handled a keypress on the space key.

    var hasSpaceKeypress = false;
    /**
     * Return whether a native keypress event is assumed to be a command.
     * This is required because Firefox fires `keypress` events for key commands
     * (cut, copy, select-all, etc.) even though no character is inserted.
     */

    function isKeypressCommand(nativeEvent) {
      return (nativeEvent.ctrlKey || nativeEvent.altKey || nativeEvent.metaKey) && // ctrlKey && altKey is equivalent to AltGr, and is not a command.
      !(nativeEvent.ctrlKey && nativeEvent.altKey);
    }
    /**
     * Translate native top level events into event types.
     *
     * @param {string} topLevelType
     * @return {object}
     */


    function getCompositionEventType(topLevelType) {
      switch (topLevelType) {
        case TOP_COMPOSITION_START:
          return eventTypes$1.compositionStart;

        case TOP_COMPOSITION_END:
          return eventTypes$1.compositionEnd;

        case TOP_COMPOSITION_UPDATE:
          return eventTypes$1.compositionUpdate;
      }
    }
    /**
     * Does our fallback best-guess model think this event signifies that
     * composition has begun?
     *
     * @param {string} topLevelType
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isFallbackCompositionStart(topLevelType, nativeEvent) {
      return topLevelType === TOP_KEY_DOWN && nativeEvent.keyCode === START_KEYCODE;
    }
    /**
     * Does our fallback mode think that this event is the end of composition?
     *
     * @param {string} topLevelType
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isFallbackCompositionEnd(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_KEY_UP:
          // Command keys insert or clear IME input.
          return END_KEYCODES.indexOf(nativeEvent.keyCode) !== -1;

        case TOP_KEY_DOWN:
          // Expect IME keyCode on each keydown. If we get any other
          // code we must have exited earlier.
          return nativeEvent.keyCode !== START_KEYCODE;

        case TOP_KEY_PRESS:
        case TOP_MOUSE_DOWN:
        case TOP_BLUR:
          // Events are not possible without cancelling IME.
          return true;

        default:
          return false;
      }
    }
    /**
     * Google Input Tools provides composition data via a CustomEvent,
     * with the `data` property populated in the `detail` object. If this
     * is available on the event object, use it. If not, this is a plain
     * composition event and we have nothing special to extract.
     *
     * @param {object} nativeEvent
     * @return {?string}
     */


    function getDataFromCustomEvent(nativeEvent) {
      var detail = nativeEvent.detail;

      if (typeof detail === 'object' && 'data' in detail) {
        return detail.data;
      }

      return null;
    }
    /**
     * Check if a composition event was triggered by Korean IME.
     * Our fallback mode does not work well with IE's Korean IME,
     * so just use native composition events when Korean IME is used.
     * Although CompositionEvent.locale property is deprecated,
     * it is available in IE, where our fallback mode is enabled.
     *
     * @param {object} nativeEvent
     * @return {boolean}
     */


    function isUsingKoreanIME(nativeEvent) {
      return nativeEvent.locale === 'ko';
    } // Track the current IME composition status, if any.


    var isComposing = false;
    /**
     * @return {?object} A SyntheticCompositionEvent.
     */

    function extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var eventType;
      var fallbackData;

      if (canUseCompositionEvent) {
        eventType = getCompositionEventType(topLevelType);
      } else if (!isComposing) {
        if (isFallbackCompositionStart(topLevelType, nativeEvent)) {
          eventType = eventTypes$1.compositionStart;
        }
      } else if (isFallbackCompositionEnd(topLevelType, nativeEvent)) {
        eventType = eventTypes$1.compositionEnd;
      }

      if (!eventType) {
        return null;
      }

      if (useFallbackCompositionData && !isUsingKoreanIME(nativeEvent)) {
        // The current composition is stored statically and must not be
        // overwritten while composition continues.
        if (!isComposing && eventType === eventTypes$1.compositionStart) {
          isComposing = initialize(nativeEventTarget);
        } else if (eventType === eventTypes$1.compositionEnd) {
          if (isComposing) {
            fallbackData = getData();
          }
        }
      }

      var event = SyntheticCompositionEvent.getPooled(eventType, targetInst, nativeEvent, nativeEventTarget);

      if (fallbackData) {
        // Inject data generated from fallback path into the synthetic event.
        // This matches the property of native CompositionEventInterface.
        event.data = fallbackData;
      } else {
        var customData = getDataFromCustomEvent(nativeEvent);

        if (customData !== null) {
          event.data = customData;
        }
      }

      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * @param {TopLevelType} topLevelType Number from `TopLevelType`.
     * @param {object} nativeEvent Native browser event.
     * @return {?string} The string corresponding to this `beforeInput` event.
     */


    function getNativeBeforeInputChars(topLevelType, nativeEvent) {
      switch (topLevelType) {
        case TOP_COMPOSITION_END:
          return getDataFromCustomEvent(nativeEvent);

        case TOP_KEY_PRESS:
          /**
           * If native `textInput` events are available, our goal is to make
           * use of them. However, there is a special case: the spacebar key.
           * In Webkit, preventing default on a spacebar `textInput` event
           * cancels character insertion, but it *also* causes the browser
           * to fall back to its default spacebar behavior of scrolling the
           * page.
           *
           * Tracking at:
           * https://code.google.com/p/chromium/issues/detail?id=355103
           *
           * To avoid this issue, use the keypress event as if no `textInput`
           * event is available.
           */
          var which = nativeEvent.which;

          if (which !== SPACEBAR_CODE) {
            return null;
          }

          hasSpaceKeypress = true;
          return SPACEBAR_CHAR;

        case TOP_TEXT_INPUT:
          // Record the characters to be added to the DOM.
          var chars = nativeEvent.data; // If it's a spacebar character, assume that we have already handled
          // it at the keypress level and bail immediately. Android Chrome
          // doesn't give us keycodes, so we need to ignore it.

          if (chars === SPACEBAR_CHAR && hasSpaceKeypress) {
            return null;
          }

          return chars;

        default:
          // For other native event types, do nothing.
          return null;
      }
    }
    /**
     * For browsers that do not provide the `textInput` event, extract the
     * appropriate string to use for SyntheticInputEvent.
     *
     * @param {number} topLevelType Number from `TopLevelEventTypes`.
     * @param {object} nativeEvent Native browser event.
     * @return {?string} The fallback string for this `beforeInput` event.
     */


    function getFallbackBeforeInputChars(topLevelType, nativeEvent) {
      // If we are currently composing (IME) and using a fallback to do so,
      // try to extract the composed characters from the fallback object.
      // If composition event is available, we extract a string only at
      // compositionevent, otherwise extract it at fallback events.
      if (isComposing) {
        if (topLevelType === TOP_COMPOSITION_END || !canUseCompositionEvent && isFallbackCompositionEnd(topLevelType, nativeEvent)) {
          var chars = getData();
          reset();
          isComposing = false;
          return chars;
        }

        return null;
      }

      switch (topLevelType) {
        case TOP_PASTE:
          // If a paste event occurs after a keypress, throw out the input
          // chars. Paste events should not lead to BeforeInput events.
          return null;

        case TOP_KEY_PRESS:
          /**
           * As of v27, Firefox may fire keypress events even when no character
           * will be inserted. A few possibilities:
           *
           * - `which` is `0`. Arrow keys, Esc key, etc.
           *
           * - `which` is the pressed key code, but no char is available.
           *   Ex: 'AltGr + d` in Polish. There is no modified character for
           *   this key combination and no character is inserted into the
           *   document, but FF fires the keypress for char code `100` anyway.
           *   No `input` event will occur.
           *
           * - `which` is the pressed key code, but a command combination is
           *   being used. Ex: `Cmd+C`. No character is inserted, and no
           *   `input` event will occur.
           */
          if (!isKeypressCommand(nativeEvent)) {
            // IE fires the `keypress` event when a user types an emoji via
            // Touch keyboard of Windows.  In such a case, the `char` property
            // holds an emoji character like `\uD83D\uDE0A`.  Because its length
            // is 2, the property `which` does not represent an emoji correctly.
            // In such a case, we directly return the `char` property instead of
            // using `which`.
            if (nativeEvent.char && nativeEvent.char.length > 1) {
              return nativeEvent.char;
            } else if (nativeEvent.which) {
              return String.fromCharCode(nativeEvent.which);
            }
          }

          return null;

        case TOP_COMPOSITION_END:
          return useFallbackCompositionData && !isUsingKoreanIME(nativeEvent) ? null : nativeEvent.data;

        default:
          return null;
      }
    }
    /**
     * Extract a SyntheticInputEvent for `beforeInput`, based on either native
     * `textInput` or fallback behavior.
     *
     * @return {?object} A SyntheticInputEvent.
     */


    function extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget) {
      var chars;

      if (canUseTextInputEvent) {
        chars = getNativeBeforeInputChars(topLevelType, nativeEvent);
      } else {
        chars = getFallbackBeforeInputChars(topLevelType, nativeEvent);
      } // If no characters are being inserted, no BeforeInput event should
      // be fired.


      if (!chars) {
        return null;
      }

      var event = SyntheticInputEvent.getPooled(eventTypes$1.beforeInput, targetInst, nativeEvent, nativeEventTarget);
      event.data = chars;
      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * Create an `onBeforeInput` event to match
     * http://www.w3.org/TR/2013/WD-DOM-Level-3-Events-20131105/#events-inputevents.
     *
     * This event plugin is based on the native `textInput` event
     * available in Chrome, Safari, Opera, and IE. This event fires after
     * `onKeyPress` and `onCompositionEnd`, but before `onInput`.
     *
     * `beforeInput` is spec'd but not implemented in any browsers, and
     * the `input` event does not provide any useful information about what has
     * actually been added, contrary to the spec. Thus, `textInput` is the best
     * available event to identify the characters that have actually been inserted
     * into the target node.
     *
     * This plugin is also responsible for emitting `composition` events, thus
     * allowing us to share composition fallback code for both `beforeInput` and
     * `composition` event types.
     */


    var BeforeInputEventPlugin = {
      eventTypes: eventTypes$1,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var composition = extractCompositionEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);
        var beforeInput = extractBeforeInputEvent(topLevelType, targetInst, nativeEvent, nativeEventTarget);

        if (composition === null) {
          return beforeInput;
        }

        if (beforeInput === null) {
          return composition;
        }

        return [composition, beforeInput];
      }
    };
    /**
     * @see http://www.whatwg.org/specs/web-apps/current-work/multipage/the-input-element.html#input-type-attr-summary
     */

    var supportedInputTypes = {
      color: true,
      date: true,
      datetime: true,
      'datetime-local': true,
      email: true,
      month: true,
      number: true,
      password: true,
      range: true,
      search: true,
      tel: true,
      text: true,
      time: true,
      url: true,
      week: true
    };

    function isTextInputElement(elem) {
      var nodeName = elem && elem.nodeName && elem.nodeName.toLowerCase();

      if (nodeName === 'input') {
        return !!supportedInputTypes[elem.type];
      }

      if (nodeName === 'textarea') {
        return true;
      }

      return false;
    }

    var eventTypes$2 = {
      change: {
        phasedRegistrationNames: {
          bubbled: 'onChange',
          captured: 'onChangeCapture'
        },
        dependencies: [TOP_BLUR, TOP_CHANGE, TOP_CLICK, TOP_FOCUS, TOP_INPUT, TOP_KEY_DOWN, TOP_KEY_UP, TOP_SELECTION_CHANGE]
      }
    };

    function createAndAccumulateChangeEvent(inst, nativeEvent, target) {
      var event = SyntheticEvent.getPooled(eventTypes$2.change, inst, nativeEvent, target);
      event.type = 'change'; // Flag this event loop as needing state restore.

      enqueueStateRestore(target);
      accumulateTwoPhaseDispatches(event);
      return event;
    }
    /**
     * For IE shims
     */


    var activeElement = null;
    var activeElementInst = null;
    /**
     * SECTION: handle `change` event
     */

    function shouldUseChangeEvent(elem) {
      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();
      return nodeName === 'select' || nodeName === 'input' && elem.type === 'file';
    }

    function manualDispatchChangeEvent(nativeEvent) {
      var event = createAndAccumulateChangeEvent(activeElementInst, nativeEvent, getEventTarget(nativeEvent)); // If change and propertychange bubbled, we'd just bind to it like all the
      // other events and have it go through ReactBrowserEventEmitter. Since it
      // doesn't, we manually listen for the events and so we have to enqueue and
      // process the abstract event manually.
      //
      // Batching is necessary here in order to ensure that all event handlers run
      // before the next rerender (including event handlers attached to ancestor
      // elements instead of directly on the input). Without this, controlled
      // components don't work properly in conjunction with event bubbling because
      // the component is rerendered and the value reverted before all the event
      // handlers can run. See https://github.com/facebook/react/issues/708.

      batchedUpdates(runEventInBatch, event);
    }

    function runEventInBatch(event) {
      runEventsInBatch(event);
    }

    function getInstIfValueChanged(targetInst) {
      var targetNode = getNodeFromInstance$1(targetInst);

      if (updateValueIfChanged(targetNode)) {
        return targetInst;
      }
    }

    function getTargetInstForChangeEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_CHANGE) {
        return targetInst;
      }
    }
    /**
     * SECTION: handle `input` event
     */


    var isInputEventSupported = false;

    if (canUseDOM) {
      // IE9 claims to support the input event but fails to trigger it when
      // deleting text, so we ignore its input events.
      isInputEventSupported = isEventSupported('input') && (!document.documentMode || document.documentMode > 9);
    }
    /**
     * (For IE <=9) Starts tracking propertychange events on the passed-in element
     * and override the value property so that we can distinguish user events from
     * value changes in JS.
     */


    function startWatchingForValueChange(target, targetInst) {
      activeElement = target;
      activeElementInst = targetInst;
      activeElement.attachEvent('onpropertychange', handlePropertyChange);
    }
    /**
     * (For IE <=9) Removes the event listeners from the currently-tracked element,
     * if any exists.
     */


    function stopWatchingForValueChange() {
      if (!activeElement) {
        return;
      }

      activeElement.detachEvent('onpropertychange', handlePropertyChange);
      activeElement = null;
      activeElementInst = null;
    }
    /**
     * (For IE <=9) Handles a propertychange event, sending a `change` event if
     * the value of the active element has changed.
     */


    function handlePropertyChange(nativeEvent) {
      if (nativeEvent.propertyName !== 'value') {
        return;
      }

      if (getInstIfValueChanged(activeElementInst)) {
        manualDispatchChangeEvent(nativeEvent);
      }
    }

    function handleEventsForInputEventPolyfill(topLevelType, target, targetInst) {
      if (topLevelType === TOP_FOCUS) {
        // In IE9, propertychange fires for most input events but is buggy and
        // doesn't fire when text is deleted, but conveniently, selectionchange
        // appears to fire in all of the remaining cases so we catch those and
        // forward the event if the value has changed
        // In either case, we don't want to call the event handler if the value
        // is changed from JS so we redefine a setter for `.value` that updates
        // our activeElementValue variable, allowing us to ignore those changes
        //
        // stopWatching() should be a noop here but we call it just in case we
        // missed a blur event somehow.
        stopWatchingForValueChange();
        startWatchingForValueChange(target, targetInst);
      } else if (topLevelType === TOP_BLUR) {
        stopWatchingForValueChange();
      }
    } // For IE8 and IE9.


    function getTargetInstForInputEventPolyfill(topLevelType, targetInst) {
      if (topLevelType === TOP_SELECTION_CHANGE || topLevelType === TOP_KEY_UP || topLevelType === TOP_KEY_DOWN) {
        // On the selectionchange event, the target is just document which isn't
        // helpful for us so just check activeElement instead.
        //
        // 99% of the time, keydown and keyup aren't necessary. IE8 fails to fire
        // propertychange on the first input event after setting `value` from a
        // script and fires only keydown, keypress, keyup. Catching keyup usually
        // gets it and catching keydown lets us fire an event for the first
        // keystroke if user does a key repeat (it'll be a little delayed: right
        // before the second keystroke). Other input methods (e.g., paste) seem to
        // fire selectionchange normally.
        return getInstIfValueChanged(activeElementInst);
      }
    }
    /**
     * SECTION: handle `click` event
     */


    function shouldUseClickEvent(elem) {
      // Use the `click` event to detect changes to checkbox and radio inputs.
      // This approach works across all browsers, whereas `change` does not fire
      // until `blur` in IE8.
      var nodeName = elem.nodeName;
      return nodeName && nodeName.toLowerCase() === 'input' && (elem.type === 'checkbox' || elem.type === 'radio');
    }

    function getTargetInstForClickEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_CLICK) {
        return getInstIfValueChanged(targetInst);
      }
    }

    function getTargetInstForInputOrChangeEvent(topLevelType, targetInst) {
      if (topLevelType === TOP_INPUT || topLevelType === TOP_CHANGE) {
        return getInstIfValueChanged(targetInst);
      }
    }

    function handleControlledInputBlur(node) {
      var state = node._wrapperState;

      if (!state || !state.controlled || node.type !== 'number') {
        return;
      }

      if (!disableInputAttributeSyncing) {
        // If controlled, assign the value attribute to the current value on blur
        setDefaultValue(node, 'number', node.value);
      }
    }
    /**
     * This plugin creates an `onChange` event that normalizes change events
     * across form elements. This event fires at a time when it's possible to
     * change the element's value without seeing a flicker.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - select
     */


    var ChangeEventPlugin = {
      eventTypes: eventTypes$2,
      _isInputEventSupported: isInputEventSupported,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;
        var getTargetInstFunc, handleEventFunc;

        if (shouldUseChangeEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForChangeEvent;
        } else if (isTextInputElement(targetNode)) {
          if (isInputEventSupported) {
            getTargetInstFunc = getTargetInstForInputOrChangeEvent;
          } else {
            getTargetInstFunc = getTargetInstForInputEventPolyfill;
            handleEventFunc = handleEventsForInputEventPolyfill;
          }
        } else if (shouldUseClickEvent(targetNode)) {
          getTargetInstFunc = getTargetInstForClickEvent;
        }

        if (getTargetInstFunc) {
          var inst = getTargetInstFunc(topLevelType, targetInst);

          if (inst) {
            var event = createAndAccumulateChangeEvent(inst, nativeEvent, nativeEventTarget);
            return event;
          }
        }

        if (handleEventFunc) {
          handleEventFunc(topLevelType, targetNode, targetInst);
        } // When blurring, set the value attribute for number inputs


        if (topLevelType === TOP_BLUR) {
          handleControlledInputBlur(targetNode);
        }
      }
    };
    /**
     * Module that is injectable into `EventPluginHub`, that specifies a
     * deterministic ordering of `EventPlugin`s. A convenient way to reason about
     * plugins, without having to package every one of them. This is better than
     * having plugins be ordered in the same order that they are injected because
     * that ordering would be influenced by the packaging order.
     * `ResponderEventPlugin` must occur before `SimpleEventPlugin` so that
     * preventing default on events is convenient in `SimpleEventPlugin` handlers.
     */

    var DOMEventPluginOrder = ['ResponderEventPlugin', 'SimpleEventPlugin', 'EnterLeaveEventPlugin', 'ChangeEventPlugin', 'SelectEventPlugin', 'BeforeInputEventPlugin'];
    var eventTypes$3 = {
      mouseEnter: {
        registrationName: 'onMouseEnter',
        dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
      },
      mouseLeave: {
        registrationName: 'onMouseLeave',
        dependencies: [TOP_MOUSE_OUT, TOP_MOUSE_OVER]
      },
      pointerEnter: {
        registrationName: 'onPointerEnter',
        dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
      },
      pointerLeave: {
        registrationName: 'onPointerLeave',
        dependencies: [TOP_POINTER_OUT, TOP_POINTER_OVER]
      }
    }; // We track the lastNativeEvent to ensure that when we encounter
    // cases where we process the same nativeEvent multiple times,
    // which can happen when have multiple ancestors, that we don't
    // duplicate enter

    var lastNativeEvent;
    var EnterLeaveEventPlugin = {
      eventTypes: eventTypes$3,

      /**
       * For almost every interaction we care about, there will be both a top-level
       * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that
       * we do not extract duplicate events. However, moving the mouse into the
       * browser from outside will not fire a `mouseout` event. In this case, we use
       * the `mouseover` top-level event.
       */
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var isOverEvent = topLevelType === TOP_MOUSE_OVER || topLevelType === TOP_POINTER_OVER;
        var isOutEvent = topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_POINTER_OUT;

        if (isOverEvent && (eventSystemFlags & IS_REPLAYED) === 0 && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {
          // If this is an over event with a target, then we've already dispatched
          // the event in the out event of the other target. If this is replayed,
          // then it's because we couldn't dispatch against this target previously
          // so we have to do it now instead.
          return null;
        }

        if (!isOutEvent && !isOverEvent) {
          // Must not be a mouse or pointer in or out - ignoring.
          return null;
        }

        var win;

        if (nativeEventTarget.window === nativeEventTarget) {
          // `nativeEventTarget` is probably a window object.
          win = nativeEventTarget;
        } else {
          // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.
          var doc = nativeEventTarget.ownerDocument;

          if (doc) {
            win = doc.defaultView || doc.parentWindow;
          } else {
            win = window;
          }
        }

        var from;
        var to;

        if (isOutEvent) {
          from = targetInst;
          var related = nativeEvent.relatedTarget || nativeEvent.toElement;
          to = related ? getClosestInstanceFromNode(related) : null;

          if (to !== null) {
            var nearestMounted = getNearestMountedFiber(to);

            if (to !== nearestMounted || to.tag !== HostComponent && to.tag !== HostText) {
              to = null;
            }
          }
        } else {
          // Moving to a node from outside the window.
          from = null;
          to = targetInst;
        }

        if (from === to) {
          // Nothing pertains to our managed components.
          return null;
        }

        var eventInterface, leaveEventType, enterEventType, eventTypePrefix;

        if (topLevelType === TOP_MOUSE_OUT || topLevelType === TOP_MOUSE_OVER) {
          eventInterface = SyntheticMouseEvent;
          leaveEventType = eventTypes$3.mouseLeave;
          enterEventType = eventTypes$3.mouseEnter;
          eventTypePrefix = 'mouse';
        } else if (topLevelType === TOP_POINTER_OUT || topLevelType === TOP_POINTER_OVER) {
          eventInterface = SyntheticPointerEvent;
          leaveEventType = eventTypes$3.pointerLeave;
          enterEventType = eventTypes$3.pointerEnter;
          eventTypePrefix = 'pointer';
        }

        var fromNode = from == null ? win : getNodeFromInstance$1(from);
        var toNode = to == null ? win : getNodeFromInstance$1(to);
        var leave = eventInterface.getPooled(leaveEventType, from, nativeEvent, nativeEventTarget);
        leave.type = eventTypePrefix + 'leave';
        leave.target = fromNode;
        leave.relatedTarget = toNode;
        var enter = eventInterface.getPooled(enterEventType, to, nativeEvent, nativeEventTarget);
        enter.type = eventTypePrefix + 'enter';
        enter.target = toNode;
        enter.relatedTarget = fromNode;
        accumulateEnterLeaveDispatches(leave, enter, from, to);

        if (nativeEvent === lastNativeEvent) {
          lastNativeEvent = null;
          return [leave];
        }

        lastNativeEvent = nativeEvent;
        return [leave, enter];
      }
    };
    /**
     * inlined Object.is polyfill to avoid requiring consumers ship their own
     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
     */

    function is(x, y) {
      return x === y && (x !== 0 || 1 / x === 1 / y) || x !== x && y !== y // eslint-disable-line no-self-compare
      ;
    }

    var is$1 = typeof Object.is === 'function' ? Object.is : is;
    var hasOwnProperty$2 = Object.prototype.hasOwnProperty;
    /**
     * Performs equality by iterating through keys on an object and returning false
     * when any key has values which are not strictly equal between the arguments.
     * Returns true when the values of all keys are strictly equal.
     */

    function shallowEqual(objA, objB) {
      if (is$1(objA, objB)) {
        return true;
      }

      if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {
        return false;
      }

      var keysA = Object.keys(objA);
      var keysB = Object.keys(objB);

      if (keysA.length !== keysB.length) {
        return false;
      } // Test for A's keys different from B.


      for (var i = 0; i < keysA.length; i++) {
        if (!hasOwnProperty$2.call(objB, keysA[i]) || !is$1(objA[keysA[i]], objB[keysA[i]])) {
          return false;
        }
      }

      return true;
    }

    var skipSelectionChangeEvent = canUseDOM && 'documentMode' in document && document.documentMode <= 11;
    var eventTypes$4 = {
      select: {
        phasedRegistrationNames: {
          bubbled: 'onSelect',
          captured: 'onSelectCapture'
        },
        dependencies: [TOP_BLUR, TOP_CONTEXT_MENU, TOP_DRAG_END, TOP_FOCUS, TOP_KEY_DOWN, TOP_KEY_UP, TOP_MOUSE_DOWN, TOP_MOUSE_UP, TOP_SELECTION_CHANGE]
      }
    };
    var activeElement$1 = null;
    var activeElementInst$1 = null;
    var lastSelection = null;
    var mouseDown = false;
    /**
     * Get an object which is a unique representation of the current selection.
     *
     * The return value will not be consistent across nodes or browsers, but
     * two identical selections on the same node will return identical objects.
     *
     * @param {DOMElement} node
     * @return {object}
     */

    function getSelection$1(node) {
      if ('selectionStart' in node && hasSelectionCapabilities(node)) {
        return {
          start: node.selectionStart,
          end: node.selectionEnd
        };
      } else {
        var win = node.ownerDocument && node.ownerDocument.defaultView || window;
        var selection = win.getSelection();
        return {
          anchorNode: selection.anchorNode,
          anchorOffset: selection.anchorOffset,
          focusNode: selection.focusNode,
          focusOffset: selection.focusOffset
        };
      }
    }
    /**
     * Get document associated with the event target.
     *
     * @param {object} nativeEventTarget
     * @return {Document}
     */


    function getEventTargetDocument(eventTarget) {
      return eventTarget.window === eventTarget ? eventTarget.document : eventTarget.nodeType === DOCUMENT_NODE ? eventTarget : eventTarget.ownerDocument;
    }
    /**
     * Poll selection to see whether it's changed.
     *
     * @param {object} nativeEvent
     * @param {object} nativeEventTarget
     * @return {?SyntheticEvent}
     */


    function constructSelectEvent(nativeEvent, nativeEventTarget) {
      // Ensure we have the right element, and that the user is not dragging a
      // selection (this matches native `select` event behavior). In HTML5, select
      // fires only on input and textarea thus if there's no focused element we
      // won't dispatch.
      var doc = getEventTargetDocument(nativeEventTarget);

      if (mouseDown || activeElement$1 == null || activeElement$1 !== getActiveElement(doc)) {
        return null;
      } // Only fire when selection has actually changed.


      var currentSelection = getSelection$1(activeElement$1);

      if (!lastSelection || !shallowEqual(lastSelection, currentSelection)) {
        lastSelection = currentSelection;
        var syntheticEvent = SyntheticEvent.getPooled(eventTypes$4.select, activeElementInst$1, nativeEvent, nativeEventTarget);
        syntheticEvent.type = 'select';
        syntheticEvent.target = activeElement$1;
        accumulateTwoPhaseDispatches(syntheticEvent);
        return syntheticEvent;
      }

      return null;
    }
    /**
     * This plugin creates an `onSelect` event that normalizes select events
     * across form elements.
     *
     * Supported elements are:
     * - input (see `isTextInputElement`)
     * - textarea
     * - contentEditable
     *
     * This differs from native browser implementations in the following ways:
     * - Fires on contentEditable fields as well as inputs.
     * - Fires for collapsed selection.
     * - Fires after user input.
     */


    var SelectEventPlugin = {
      eventTypes: eventTypes$4,
      extractEvents: function (topLevelType, targetInst, nativeEvent, nativeEventTarget, eventSystemFlags) {
        var doc = getEventTargetDocument(nativeEventTarget); // Track whether all listeners exists for this plugin. If none exist, we do
        // not extract events. See #3639.

        if (!doc || !isListeningToAllDependencies('onSelect', doc)) {
          return null;
        }

        var targetNode = targetInst ? getNodeFromInstance$1(targetInst) : window;

        switch (topLevelType) {
          // Track the input node that has focus.
          case TOP_FOCUS:
            if (isTextInputElement(targetNode) || targetNode.contentEditable === 'true') {
              activeElement$1 = targetNode;
              activeElementInst$1 = targetInst;
              lastSelection = null;
            }

            break;

          case TOP_BLUR:
            activeElement$1 = null;
            activeElementInst$1 = null;
            lastSelection = null;
            break;
          // Don't fire the event while the user is dragging. This matches the
          // semantics of the native select event.

          case TOP_MOUSE_DOWN:
            mouseDown = true;
            break;

          case TOP_CONTEXT_MENU:
          case TOP_MOUSE_UP:
          case TOP_DRAG_END:
            mouseDown = false;
            return constructSelectEvent(nativeEvent, nativeEventTarget);
          // Chrome and IE fire non-standard event when selection is changed (and
          // sometimes when it hasn't). IE's event fires out of order with respect
          // to key and input events on deletion, so we discard it.
          //
          // Firefox doesn't support selectionchange, so check selection status
          // after each key entry. The selection changes after keydown and before
          // keyup, but we check on keydown as well in the case of holding down a
          // key, when multiple keydown events are fired but only one keyup is.
          // This is also our approach for IE handling, for the reason above.

          case TOP_SELECTION_CHANGE:
            if (skipSelectionChangeEvent) {
              break;
            }

          // falls through

          case TOP_KEY_DOWN:
          case TOP_KEY_UP:
            return constructSelectEvent(nativeEvent, nativeEventTarget);
        }

        return null;
      }
    };
    /**
     * Inject modules for resolving DOM hierarchy and plugin ordering.
     */

    injection.injectEventPluginOrder(DOMEventPluginOrder);
    setComponentTree(getFiberCurrentPropsFromNode$1, getInstanceFromNode$1, getNodeFromInstance$1);
    /**
     * Some important event plugins included by default (without having to require
     * them).
     */

    injection.injectEventPluginsByName({
      SimpleEventPlugin: SimpleEventPlugin,
      EnterLeaveEventPlugin: EnterLeaveEventPlugin,
      ChangeEventPlugin: ChangeEventPlugin,
      SelectEventPlugin: SelectEventPlugin,
      BeforeInputEventPlugin: BeforeInputEventPlugin
    }); // Prefix measurements so that it's possible to filter them.
    // Longer prefixes are hard to read in DevTools.

    var reactEmoji = "\u269B";
    var warningEmoji = "\u26D4";
    var supportsUserTiming = typeof performance !== 'undefined' && typeof performance.mark === 'function' && typeof performance.clearMarks === 'function' && typeof performance.measure === 'function' && typeof performance.clearMeasures === 'function'; // Keep track of current fiber so that we know the path to unwind on pause.
    // TODO: this looks the same as nextUnitOfWork in scheduler. Can we unify them?

    var currentFiber = null; // If we're in the middle of user code, which fiber and method is it?
    // Reusing `currentFiber` would be confusing for this because user code fiber
    // can change during commit phase too, but we don't need to unwind it (since
    // lifecycles in the commit phase don't resemble a tree).

    var currentPhase = null;
    var currentPhaseFiber = null; // Did lifecycle hook schedule an update? This is often a performance problem,
    // so we will keep track of it, and include it in the report.
    // Track commits caused by cascading updates.

    var isCommitting = false;
    var hasScheduledUpdateInCurrentCommit = false;
    var hasScheduledUpdateInCurrentPhase = false;
    var commitCountInCurrentWorkLoop = 0;
    var effectCountInCurrentCommit = 0; // to avoid stretch the commit phase with measurement overhead.

    var labelsInCurrentCommit = new Set();

    var formatMarkName = function (markName) {
      return reactEmoji + " " + markName;
    };

    var formatLabel = function (label, warning) {
      var prefix = warning ? warningEmoji + " " : reactEmoji + " ";
      var suffix = warning ? " Warning: " + warning : '';
      return "" + prefix + label + suffix;
    };

    var beginMark = function (markName) {
      performance.mark(formatMarkName(markName));
    };

    var clearMark = function (markName) {
      performance.clearMarks(formatMarkName(markName));
    };

    var endMark = function (label, markName, warning) {
      var formattedMarkName = formatMarkName(markName);
      var formattedLabel = formatLabel(label, warning);

      try {
        performance.measure(formattedLabel, formattedMarkName);
      } catch (err) {} // If previous mark was missing for some reason, this will throw.
      // This could only happen if React crashed in an unexpected place earlier.
      // Don't pile on with more errors.
      // Clear marks immediately to avoid growing buffer.


      performance.clearMarks(formattedMarkName);
      performance.clearMeasures(formattedLabel);
    };

    var getFiberMarkName = function (label, debugID) {
      return label + " (#" + debugID + ")";
    };

    var getFiberLabel = function (componentName, isMounted, phase) {
      if (phase === null) {
        // These are composite component total time measurements.
        return componentName + " [" + (isMounted ? 'update' : 'mount') + "]";
      } else {
        // Composite component methods.
        return componentName + "." + phase;
      }
    };

    var beginFiberMark = function (fiber, phase) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);

      if (isCommitting && labelsInCurrentCommit.has(label)) {
        // During the commit phase, we don't show duplicate labels because
        // there is a fixed overhead for every measurement, and we don't
        // want to stretch the commit phase beyond necessary.
        return false;
      }

      labelsInCurrentCommit.add(label);
      var markName = getFiberMarkName(label, debugID);
      beginMark(markName);
      return true;
    };

    var clearFiberMark = function (fiber, phase) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);
      var markName = getFiberMarkName(label, debugID);
      clearMark(markName);
    };

    var endFiberMark = function (fiber, phase, warning) {
      var componentName = getComponentName(fiber.type) || 'Unknown';
      var debugID = fiber._debugID;
      var isMounted = fiber.alternate !== null;
      var label = getFiberLabel(componentName, isMounted, phase);
      var markName = getFiberMarkName(label, debugID);
      endMark(label, markName, warning);
    };

    var shouldIgnoreFiber = function (fiber) {
      // Host components should be skipped in the timeline.
      // We could check typeof fiber.type, but does this work with RN?
      switch (fiber.tag) {
        case HostRoot:
        case HostComponent:
        case HostText:
        case HostPortal:
        case Fragment:
        case ContextProvider:
        case ContextConsumer:
        case Mode:
          return true;

        default:
          return false;
      }
    };

    var clearPendingPhaseMeasurement = function () {
      if (currentPhase !== null && currentPhaseFiber !== null) {
        clearFiberMark(currentPhaseFiber, currentPhase);
      }

      currentPhaseFiber = null;
      currentPhase = null;
      hasScheduledUpdateInCurrentPhase = false;
    };

    var pauseTimers = function () {
      // Stops all currently active measurements so that they can be resumed
      // if we continue in a later deferred loop from the same unit of work.
      var fiber = currentFiber;

      while (fiber) {
        if (fiber._debugIsCurrentlyTiming) {
          endFiberMark(fiber, null, null);
        }

        fiber = fiber.return;
      }
    };

    var resumeTimersRecursively = function (fiber) {
      if (fiber.return !== null) {
        resumeTimersRecursively(fiber.return);
      }

      if (fiber._debugIsCurrentlyTiming) {
        beginFiberMark(fiber, null);
      }
    };

    var resumeTimers = function () {
      // Resumes all measurements that were active during the last deferred loop.
      if (currentFiber !== null) {
        resumeTimersRecursively(currentFiber);
      }
    };

    function recordEffect() {
      if (enableUserTimingAPI) {
        effectCountInCurrentCommit++;
      }
    }

    function recordScheduleUpdate() {
      if (enableUserTimingAPI) {
        if (isCommitting) {
          hasScheduledUpdateInCurrentCommit = true;
        }

        if (currentPhase !== null && currentPhase !== 'componentWillMount' && currentPhase !== 'componentWillReceiveProps') {
          hasScheduledUpdateInCurrentPhase = true;
        }
      }
    }

    function startWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, this is the fiber to unwind from.


        currentFiber = fiber;

        if (!beginFiberMark(fiber, null)) {
          return;
        }

        fiber._debugIsCurrentlyTiming = true;
      }
    }

    function cancelWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // Remember we shouldn't complete measurement for this fiber.
        // Otherwise flamechart will be deep even for small updates.


        fiber._debugIsCurrentlyTiming = false;
        clearFiberMark(fiber, null);
      }
    }

    function stopWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, its parent is the fiber to unwind from.


        currentFiber = fiber.return;

        if (!fiber._debugIsCurrentlyTiming) {
          return;
        }

        fiber._debugIsCurrentlyTiming = false;
        endFiberMark(fiber, null, null);
      }
    }

    function stopFailedWorkTimer(fiber) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming || shouldIgnoreFiber(fiber)) {
          return;
        } // If we pause, its parent is the fiber to unwind from.


        currentFiber = fiber.return;

        if (!fiber._debugIsCurrentlyTiming) {
          return;
        }

        fiber._debugIsCurrentlyTiming = false;
        var warning = fiber.tag === SuspenseComponent ? 'Rendering was suspended' : 'An error was thrown inside this error boundary';
        endFiberMark(fiber, null, warning);
      }
    }

    function startPhaseTimer(fiber, phase) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        clearPendingPhaseMeasurement();

        if (!beginFiberMark(fiber, phase)) {
          return;
        }

        currentPhaseFiber = fiber;
        currentPhase = phase;
      }
    }

    function stopPhaseTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        if (currentPhase !== null && currentPhaseFiber !== null) {
          var warning = hasScheduledUpdateInCurrentPhase ? 'Scheduled a cascading update' : null;
          endFiberMark(currentPhaseFiber, currentPhase, warning);
        }

        currentPhase = null;
        currentPhaseFiber = null;
      }
    }

    function startWorkLoopTimer(nextUnitOfWork) {
      if (enableUserTimingAPI) {
        currentFiber = nextUnitOfWork;

        if (!supportsUserTiming) {
          return;
        }

        commitCountInCurrentWorkLoop = 0; // This is top level call.
        // Any other measurements are performed within.

        beginMark('(React Tree Reconciliation)'); // Resume any measurements that were in progress during the last loop.

        resumeTimers();
      }
    }

    function stopWorkLoopTimer(interruptedBy, didCompleteRoot) {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var warning = null;

        if (interruptedBy !== null) {
          if (interruptedBy.tag === HostRoot) {
            warning = 'A top-level update interrupted the previous render';
          } else {
            var componentName = getComponentName(interruptedBy.type) || 'Unknown';
            warning = "An update to " + componentName + " interrupted the previous render";
          }
        } else if (commitCountInCurrentWorkLoop > 1) {
          warning = 'There were cascading updates';
        }

        commitCountInCurrentWorkLoop = 0;
        var label = didCompleteRoot ? '(React Tree Reconciliation: Completed Root)' : '(React Tree Reconciliation: Yielded)'; // Pause any measurements until the next loop.

        pauseTimers();
        endMark(label, '(React Tree Reconciliation)', warning);
      }
    }

    function startCommitTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        isCommitting = true;
        hasScheduledUpdateInCurrentCommit = false;
        labelsInCurrentCommit.clear();
        beginMark('(Committing Changes)');
      }
    }

    function stopCommitTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var warning = null;

        if (hasScheduledUpdateInCurrentCommit) {
          warning = 'Lifecycle hook scheduled a cascading update';
        } else if (commitCountInCurrentWorkLoop > 0) {
          warning = 'Caused by a cascading update in earlier commit';
        }

        hasScheduledUpdateInCurrentCommit = false;
        commitCountInCurrentWorkLoop++;
        isCommitting = false;
        labelsInCurrentCommit.clear();
        endMark('(Committing Changes)', '(Committing Changes)', warning);
      }
    }

    function startCommitSnapshotEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Committing Snapshot Effects)');
      }
    }

    function stopCommitSnapshotEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark("(Committing Snapshot Effects: " + count + " Total)", '(Committing Snapshot Effects)', null);
      }
    }

    function startCommitHostEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Committing Host Effects)');
      }
    }

    function stopCommitHostEffectsTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark("(Committing Host Effects: " + count + " Total)", '(Committing Host Effects)', null);
      }
    }

    function startCommitLifeCyclesTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        effectCountInCurrentCommit = 0;
        beginMark('(Calling Lifecycle Methods)');
      }
    }

    function stopCommitLifeCyclesTimer() {
      if (enableUserTimingAPI) {
        if (!supportsUserTiming) {
          return;
        }

        var count = effectCountInCurrentCommit;
        effectCountInCurrentCommit = 0;
        endMark("(Calling Lifecycle Methods: " + count + " Total)", '(Calling Lifecycle Methods)', null);
      }
    }

    var valueStack = [];
    var fiberStack;
    {
      fiberStack = [];
    }
    var index = -1;

    function createCursor(defaultValue) {
      return {
        current: defaultValue
      };
    }

    function pop(cursor, fiber) {
      if (index < 0) {
        {
          warningWithoutStack$1(false, 'Unexpected pop.');
        }
        return;
      }

      {
        if (fiber !== fiberStack[index]) {
          warningWithoutStack$1(false, 'Unexpected Fiber popped.');
        }
      }
      cursor.current = valueStack[index];
      valueStack[index] = null;
      {
        fiberStack[index] = null;
      }
      index--;
    }

    function push(cursor, value, fiber) {
      index++;
      valueStack[index] = cursor.current;
      {
        fiberStack[index] = fiber;
      }
      cursor.current = value;
    }

    var warnedAboutMissingGetChildContext;
    {
      warnedAboutMissingGetChildContext = {};
    }
    var emptyContextObject = {};
    {
      Object.freeze(emptyContextObject);
    } // A cursor to the current merged context object on the stack.

    var contextStackCursor = createCursor(emptyContextObject); // A cursor to a boolean indicating whether the context has changed.

    var didPerformWorkStackCursor = createCursor(false); // Keep track of the previous context object that was on the stack.
    // We use this to get access to the parent context after we have already
    // pushed the next context provider, and now need to merge their contexts.

    var previousContext = emptyContextObject;

    function getUnmaskedContext(workInProgress, Component, didPushOwnContextIfProvider) {
      if (disableLegacyContext) {
        return emptyContextObject;
      } else {
        if (didPushOwnContextIfProvider && isContextProvider(Component)) {
          // If the fiber is a context provider itself, when we read its context
          // we may have already pushed its own child context on the stack. A context
          // provider should not "see" its own child context. Therefore we read the
          // previous (parent) context instead for a context provider.
          return previousContext;
        }

        return contextStackCursor.current;
      }
    }

    function cacheContext(workInProgress, unmaskedContext, maskedContext) {
      if (disableLegacyContext) {
        return;
      } else {
        var instance = workInProgress.stateNode;
        instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;
        instance.__reactInternalMemoizedMaskedChildContext = maskedContext;
      }
    }

    function getMaskedContext(workInProgress, unmaskedContext) {
      if (disableLegacyContext) {
        return emptyContextObject;
      } else {
        var type = workInProgress.type;
        var contextTypes = type.contextTypes;

        if (!contextTypes) {
          return emptyContextObject;
        } // Avoid recreating masked context unless unmasked context has changed.
        // Failing to do this will result in unnecessary calls to componentWillReceiveProps.
        // This may trigger infinite loops if componentWillReceiveProps calls setState.


        var instance = workInProgress.stateNode;

        if (instance && instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext) {
          return instance.__reactInternalMemoizedMaskedChildContext;
        }

        var context = {};

        for (var key in contextTypes) {
          context[key] = unmaskedContext[key];
        }

        {
          var name = getComponentName(type) || 'Unknown';
          checkPropTypes(contextTypes, context, 'context', name, getCurrentFiberStackInDev);
        } // Cache unmasked context so we can avoid recreating masked context unless necessary.
        // Context is created before the class component is instantiated so check for instance.

        if (instance) {
          cacheContext(workInProgress, unmaskedContext, context);
        }

        return context;
      }
    }

    function hasContextChanged() {
      if (disableLegacyContext) {
        return false;
      } else {
        return didPerformWorkStackCursor.current;
      }
    }

    function isContextProvider(type) {
      if (disableLegacyContext) {
        return false;
      } else {
        var childContextTypes = type.childContextTypes;
        return childContextTypes !== null && childContextTypes !== undefined;
      }
    }

    function popContext(fiber) {
      if (disableLegacyContext) {
        return;
      } else {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
      }
    }

    function popTopLevelContextObject(fiber) {
      if (disableLegacyContext) {
        return;
      } else {
        pop(didPerformWorkStackCursor, fiber);
        pop(contextStackCursor, fiber);
      }
    }

    function pushTopLevelContextObject(fiber, context, didChange) {
      if (disableLegacyContext) {
        return;
      } else {
        if (!(contextStackCursor.current === emptyContextObject)) {
          {
            throw Error("Unexpected context found on stack. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        push(contextStackCursor, context, fiber);
        push(didPerformWorkStackCursor, didChange, fiber);
      }
    }

    function processChildContext(fiber, type, parentContext) {
      if (disableLegacyContext) {
        return parentContext;
      } else {
        var instance = fiber.stateNode;
        var childContextTypes = type.childContextTypes; // TODO (bvaughn) Replace this behavior with an invariant() in the future.
        // It has only been added in Fiber to match the (unintentional) behavior in Stack.

        if (typeof instance.getChildContext !== 'function') {
          {
            var componentName = getComponentName(type) || 'Unknown';

            if (!warnedAboutMissingGetChildContext[componentName]) {
              warnedAboutMissingGetChildContext[componentName] = true;
              warningWithoutStack$1(false, '%s.childContextTypes is specified but there is no getChildContext() method ' + 'on the instance. You can either define getChildContext() on %s or remove ' + 'childContextTypes from it.', componentName, componentName);
            }
          }
          return parentContext;
        }

        var childContext;
        {
          setCurrentPhase('getChildContext');
        }
        startPhaseTimer(fiber, 'getChildContext');
        childContext = instance.getChildContext();
        stopPhaseTimer();
        {
          setCurrentPhase(null);
        }

        for (var contextKey in childContext) {
          if (!(contextKey in childContextTypes)) {
            {
              throw Error((getComponentName(type) || 'Unknown') + ".getChildContext(): key \"" + contextKey + "\" is not defined in childContextTypes.");
            }
          }
        }

        {
          var name = getComponentName(type) || 'Unknown';
          checkPropTypes(childContextTypes, childContext, 'child context', name, // In practice, there is one case in which we won't get a stack. It's when
          // somebody calls unstable_renderSubtreeIntoContainer() and we process
          // context from the parent component instance. The stack will be missing
          // because it's outside of the reconciliation, and so the pointer has not
          // been set. This is rare and doesn't matter. We'll also remove that API.
          getCurrentFiberStackInDev);
        }
        return _assign({}, parentContext, {}, childContext);
      }
    }

    function pushContextProvider(workInProgress) {
      if (disableLegacyContext) {
        return false;
      } else {
        var instance = workInProgress.stateNode; // We push the context as early as possible to ensure stack integrity.
        // If the instance does not exist yet, we will push null at first,
        // and replace it on the stack later when invalidating the context.

        var memoizedMergedChildContext = instance && instance.__reactInternalMemoizedMergedChildContext || emptyContextObject; // Remember the parent context so we can merge with it later.
        // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.

        previousContext = contextStackCursor.current;
        push(contextStackCursor, memoizedMergedChildContext, workInProgress);
        push(didPerformWorkStackCursor, didPerformWorkStackCursor.current, workInProgress);
        return true;
      }
    }

    function invalidateContextProvider(workInProgress, type, didChange) {
      if (disableLegacyContext) {
        return;
      } else {
        var instance = workInProgress.stateNode;

        if (!instance) {
          {
            throw Error("Expected to have an instance by this point. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        if (didChange) {
          // Merge parent and own context.
          // Skip this if we're not updating due to sCU.
          // This avoids unnecessarily recomputing memoized values.
          var mergedContext = processChildContext(workInProgress, type, previousContext);
          instance.__reactInternalMemoizedMergedChildContext = mergedContext; // Replace the old (or empty) context with the new one.
          // It is important to unwind the context in the reverse order.

          pop(didPerformWorkStackCursor, workInProgress);
          pop(contextStackCursor, workInProgress); // Now push the new context and mark that it has changed.

          push(contextStackCursor, mergedContext, workInProgress);
          push(didPerformWorkStackCursor, didChange, workInProgress);
        } else {
          pop(didPerformWorkStackCursor, workInProgress);
          push(didPerformWorkStackCursor, didChange, workInProgress);
        }
      }
    }

    function findCurrentUnmaskedContext(fiber) {
      if (disableLegacyContext) {
        return emptyContextObject;
      } else {
        // Currently this is only used with renderSubtreeIntoContainer; not sure if it
        // makes sense elsewhere
        if (!(isFiberMounted(fiber) && fiber.tag === ClassComponent)) {
          {
            throw Error("Expected subtree parent to be a mounted class component. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        var node = fiber;

        do {
          switch (node.tag) {
            case HostRoot:
              return node.stateNode.context;

            case ClassComponent:
              {
                var Component = node.type;

                if (isContextProvider(Component)) {
                  return node.stateNode.__reactInternalMemoizedMergedChildContext;
                }

                break;
              }
          }

          node = node.return;
        } while (node !== null);

        {
          {
            throw Error("Found unexpected detached subtree parent. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }
    }

    var LegacyRoot = 0;
    var BlockingRoot = 1;
    var ConcurrentRoot = 2; // Intentionally not named imports because Rollup would use dynamic dispatch for
    // CommonJS interop named imports.

    var Scheduler_runWithPriority = Scheduler.unstable_runWithPriority;
    var Scheduler_scheduleCallback = Scheduler.unstable_scheduleCallback;
    var Scheduler_cancelCallback = Scheduler.unstable_cancelCallback;
    var Scheduler_shouldYield = Scheduler.unstable_shouldYield;
    var Scheduler_requestPaint = Scheduler.unstable_requestPaint;
    var Scheduler_now = Scheduler.unstable_now;
    var Scheduler_getCurrentPriorityLevel = Scheduler.unstable_getCurrentPriorityLevel;
    var Scheduler_ImmediatePriority = Scheduler.unstable_ImmediatePriority;
    var Scheduler_UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;
    var Scheduler_NormalPriority = Scheduler.unstable_NormalPriority;
    var Scheduler_LowPriority = Scheduler.unstable_LowPriority;
    var Scheduler_IdlePriority = Scheduler.unstable_IdlePriority;

    if (enableSchedulerTracing) {
      // Provide explicit error message when production+profiling bundle of e.g.
      // react-dom is used with production (non-profiling) bundle of
      // scheduler/tracing
      if (!(tracing.__interactionsRef != null && tracing.__interactionsRef.current != null)) {
        {
          throw Error("It is not supported to run the profiling version of a renderer (for example, `react-dom/profiling`) without also replacing the `scheduler/tracing` module with `scheduler/tracing-profiling`. Your bundler might have a setting for aliasing both modules. Learn more at http://fb.me/react-profiling");
        }
      }
    }

    var fakeCallbackNode = {}; // Except for NoPriority, these correspond to Scheduler priorities. We use
    // ascending numbers so we can compare them like numbers. They start at 90 to
    // avoid clashing with Scheduler's priorities.

    var ImmediatePriority = 99;
    var UserBlockingPriority$2 = 98;
    var NormalPriority = 97;
    var LowPriority = 96;
    var IdlePriority = 95; // NoPriority is the absence of priority. Also React-only.

    var NoPriority = 90;
    var shouldYield = Scheduler_shouldYield;
    var requestPaint = // Fall back gracefully if we're running an older version of Scheduler.
    Scheduler_requestPaint !== undefined ? Scheduler_requestPaint : function () {};
    var syncQueue = null;
    var immediateQueueCallbackNode = null;
    var isFlushingSyncQueue = false;
    var initialTimeMs = Scheduler_now(); // If the initial timestamp is reasonably small, use Scheduler's `now` directly.
    // This will be the case for modern browsers that support `performance.now`. In
    // older browsers, Scheduler falls back to `Date.now`, which returns a Unix
    // timestamp. In that case, subtract the module initialization time to simulate
    // the behavior of performance.now and keep our times small enough to fit
    // within 32 bits.
    // TODO: Consider lifting this into Scheduler.

    var now = initialTimeMs < 10000 ? Scheduler_now : function () {
      return Scheduler_now() - initialTimeMs;
    };

    function getCurrentPriorityLevel() {
      switch (Scheduler_getCurrentPriorityLevel()) {
        case Scheduler_ImmediatePriority:
          return ImmediatePriority;

        case Scheduler_UserBlockingPriority:
          return UserBlockingPriority$2;

        case Scheduler_NormalPriority:
          return NormalPriority;

        case Scheduler_LowPriority:
          return LowPriority;

        case Scheduler_IdlePriority:
          return IdlePriority;

        default:
          {
            {
              throw Error("Unknown priority level.");
            }
          }
      }
    }

    function reactPriorityToSchedulerPriority(reactPriorityLevel) {
      switch (reactPriorityLevel) {
        case ImmediatePriority:
          return Scheduler_ImmediatePriority;

        case UserBlockingPriority$2:
          return Scheduler_UserBlockingPriority;

        case NormalPriority:
          return Scheduler_NormalPriority;

        case LowPriority:
          return Scheduler_LowPriority;

        case IdlePriority:
          return Scheduler_IdlePriority;

        default:
          {
            {
              throw Error("Unknown priority level.");
            }
          }
      }
    }

    function runWithPriority$2(reactPriorityLevel, fn) {
      var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
      return Scheduler_runWithPriority(priorityLevel, fn);
    }

    function scheduleCallback(reactPriorityLevel, callback, options) {
      var priorityLevel = reactPriorityToSchedulerPriority(reactPriorityLevel);
      return Scheduler_scheduleCallback(priorityLevel, callback, options);
    }

    function scheduleSyncCallback(callback) {
      // Push this callback into an internal queue. We'll flush these either in
      // the next tick, or earlier if something calls `flushSyncCallbackQueue`.
      if (syncQueue === null) {
        syncQueue = [callback]; // Flush the queue in the next tick, at the earliest.

        immediateQueueCallbackNode = Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueueImpl);
      } else {
        // Push onto existing queue. Don't need to schedule a callback because
        // we already scheduled one when we created the queue.
        syncQueue.push(callback);
      }

      return fakeCallbackNode;
    }

    function cancelCallback(callbackNode) {
      if (callbackNode !== fakeCallbackNode) {
        Scheduler_cancelCallback(callbackNode);
      }
    }

    function flushSyncCallbackQueue() {
      if (immediateQueueCallbackNode !== null) {
        var node = immediateQueueCallbackNode;
        immediateQueueCallbackNode = null;
        Scheduler_cancelCallback(node);
      }

      flushSyncCallbackQueueImpl();
    }

    function flushSyncCallbackQueueImpl() {
      if (!isFlushingSyncQueue && syncQueue !== null) {
        // Prevent re-entrancy.
        isFlushingSyncQueue = true;
        var i = 0;

        try {
          var _isSync = true;
          var queue = syncQueue;
          runWithPriority$2(ImmediatePriority, function () {
            for (; i < queue.length; i++) {
              var callback = queue[i];

              do {
                callback = callback(_isSync);
              } while (callback !== null);
            }
          });
          syncQueue = null;
        } catch (error) {
          // If something throws, leave the remaining callbacks on the queue.
          if (syncQueue !== null) {
            syncQueue = syncQueue.slice(i + 1);
          } // Resume flushing in the next tick


          Scheduler_scheduleCallback(Scheduler_ImmediatePriority, flushSyncCallbackQueue);
          throw error;
        } finally {
          isFlushingSyncQueue = false;
        }
      }
    }

    var NoMode = 0;
    var StrictMode = 1; // TODO: Remove BlockingMode and ConcurrentMode by reading from the root
    // tag instead

    var BlockingMode = 2;
    var ConcurrentMode = 4;
    var ProfileMode = 8; // Max 31 bit integer. The max integer size in V8 for 32-bit systems.
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111

    var MAX_SIGNED_31_BIT_INT = 1073741823;
    var NoWork = 0; // TODO: Think of a better name for Never. The key difference with Idle is that
    // Never work can be committed in an inconsistent state without tearing the UI.
    // The main example is offscreen content, like a hidden subtree. So one possible
    // name is Offscreen. However, it also includes dehydrated Suspense boundaries,
    // which are inconsistent in the sense that they haven't finished yet, but
    // aren't visibly inconsistent because the server rendered HTML matches what the
    // hydrated tree would look like.

    var Never = 1; // Idle is slightly higher priority than Never. It must completely finish in
    // order to be consistent.

    var Idle = 2; // Continuous Hydration is a moving priority. It is slightly higher than Idle
    // and is used to increase priority of hover targets. It is increasing with
    // each usage so that last always wins.

    var ContinuousHydration = 3;
    var Sync = MAX_SIGNED_31_BIT_INT;
    var Batched = Sync - 1;
    var UNIT_SIZE = 10;
    var MAGIC_NUMBER_OFFSET = Batched - 1; // 1 unit of expiration time represents 10ms.

    function msToExpirationTime(ms) {
      // Always add an offset so that we don't clash with the magic number for NoWork.
      return MAGIC_NUMBER_OFFSET - (ms / UNIT_SIZE | 0);
    }

    function expirationTimeToMs(expirationTime) {
      return (MAGIC_NUMBER_OFFSET - expirationTime) * UNIT_SIZE;
    }

    function ceiling(num, precision) {
      return ((num / precision | 0) + 1) * precision;
    }

    function computeExpirationBucket(currentTime, expirationInMs, bucketSizeMs) {
      return MAGIC_NUMBER_OFFSET - ceiling(MAGIC_NUMBER_OFFSET - currentTime + expirationInMs / UNIT_SIZE, bucketSizeMs / UNIT_SIZE);
    } // TODO: This corresponds to Scheduler's NormalPriority, not LowPriority. Update
    // the names to reflect.


    var LOW_PRIORITY_EXPIRATION = 5000;
    var LOW_PRIORITY_BATCH_SIZE = 250;

    function computeAsyncExpiration(currentTime) {
      return computeExpirationBucket(currentTime, LOW_PRIORITY_EXPIRATION, LOW_PRIORITY_BATCH_SIZE);
    }

    function computeSuspenseExpiration(currentTime, timeoutMs) {
      // TODO: Should we warn if timeoutMs is lower than the normal pri expiration time?
      return computeExpirationBucket(currentTime, timeoutMs, LOW_PRIORITY_BATCH_SIZE);
    } // We intentionally set a higher expiration time for interactive updates in
    // dev than in production.
    //
    // If the main thread is being blocked so long that you hit the expiration,
    // it's a problem that could be solved with better scheduling.
    //
    // People will be more likely to notice this and fix it with the long
    // expiration time in development.
    //
    // In production we opt for better UX at the risk of masking scheduling
    // problems, by expiring fast.


    var HIGH_PRIORITY_EXPIRATION = 500;
    var HIGH_PRIORITY_BATCH_SIZE = 100;

    function computeInteractiveExpiration(currentTime) {
      return computeExpirationBucket(currentTime, HIGH_PRIORITY_EXPIRATION, HIGH_PRIORITY_BATCH_SIZE);
    }

    function computeContinuousHydrationExpiration(currentTime) {
      // Each time we ask for a new one of these we increase the priority.
      // This ensures that the last one always wins since we can't deprioritize
      // once we've scheduled work already.
      return ContinuousHydration++;
    }

    function inferPriorityFromExpirationTime(currentTime, expirationTime) {
      if (expirationTime === Sync) {
        return ImmediatePriority;
      }

      if (expirationTime === Never || expirationTime === Idle) {
        return IdlePriority;
      }

      var msUntil = expirationTimeToMs(expirationTime) - expirationTimeToMs(currentTime);

      if (msUntil <= 0) {
        return ImmediatePriority;
      }

      if (msUntil <= HIGH_PRIORITY_EXPIRATION + HIGH_PRIORITY_BATCH_SIZE) {
        return UserBlockingPriority$2;
      }

      if (msUntil <= LOW_PRIORITY_EXPIRATION + LOW_PRIORITY_BATCH_SIZE) {
        return NormalPriority;
      } // TODO: Handle LowPriority
      // Assume anything lower has idle priority


      return IdlePriority;
    }
    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarningWithoutStack = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarningWithoutStack = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(void 0, [format].concat(args));
        }
      };
    }
    var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;
    var ReactStrictModeWarnings = {
      recordUnsafeLifecycleWarnings: function (fiber, instance) {},
      flushPendingUnsafeLifecycleWarnings: function () {},
      recordLegacyContextWarning: function (fiber, instance) {},
      flushLegacyContextWarning: function () {},
      discardPendingWarnings: function () {}
    };
    {
      var findStrictRoot = function (fiber) {
        var maybeStrictRoot = null;
        var node = fiber;

        while (node !== null) {
          if (node.mode & StrictMode) {
            maybeStrictRoot = node;
          }

          node = node.return;
        }

        return maybeStrictRoot;
      };

      var setToSortedString = function (set) {
        var array = [];
        set.forEach(function (value) {
          array.push(value);
        });
        return array.sort().join(', ');
      };

      var pendingComponentWillMountWarnings = [];
      var pendingUNSAFE_ComponentWillMountWarnings = [];
      var pendingComponentWillReceivePropsWarnings = [];
      var pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
      var pendingComponentWillUpdateWarnings = [];
      var pendingUNSAFE_ComponentWillUpdateWarnings = []; // Tracks components we have already warned about.

      var didWarnAboutUnsafeLifecycles = new Set();

      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = function (fiber, instance) {
        // Dedup strategy: Warn once per component.
        if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {
          return;
        }

        if (typeof instance.componentWillMount === 'function' && // Don't warn about react-lifecycles-compat polyfilled components.
        instance.componentWillMount.__suppressDeprecationWarning !== true) {
          pendingComponentWillMountWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillMount === 'function') {
          pendingUNSAFE_ComponentWillMountWarnings.push(fiber);
        }

        if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
          pendingComponentWillReceivePropsWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
          pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);
        }

        if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
          pendingComponentWillUpdateWarnings.push(fiber);
        }

        if (fiber.mode & StrictMode && typeof instance.UNSAFE_componentWillUpdate === 'function') {
          pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);
        }
      };

      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = function () {
        // We do an initial pass to gather component names
        var componentWillMountUniqueNames = new Set();

        if (pendingComponentWillMountWarnings.length > 0) {
          pendingComponentWillMountWarnings.forEach(function (fiber) {
            componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillMountWarnings = [];
        }

        var UNSAFE_componentWillMountUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {
          pendingUNSAFE_ComponentWillMountWarnings.forEach(function (fiber) {
            UNSAFE_componentWillMountUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillMountWarnings = [];
        }

        var componentWillReceivePropsUniqueNames = new Set();

        if (pendingComponentWillReceivePropsWarnings.length > 0) {
          pendingComponentWillReceivePropsWarnings.forEach(function (fiber) {
            componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillReceivePropsWarnings = [];
        }

        var UNSAFE_componentWillReceivePropsUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {
          pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(function (fiber) {
            UNSAFE_componentWillReceivePropsUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        }

        var componentWillUpdateUniqueNames = new Set();

        if (pendingComponentWillUpdateWarnings.length > 0) {
          pendingComponentWillUpdateWarnings.forEach(function (fiber) {
            componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingComponentWillUpdateWarnings = [];
        }

        var UNSAFE_componentWillUpdateUniqueNames = new Set();

        if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {
          pendingUNSAFE_ComponentWillUpdateWarnings.forEach(function (fiber) {
            UNSAFE_componentWillUpdateUniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutUnsafeLifecycles.add(fiber.type);
          });
          pendingUNSAFE_ComponentWillUpdateWarnings = [];
        } // Finally, we flush all the warnings
        // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'


        if (UNSAFE_componentWillMountUniqueNames.size > 0) {
          var sortedNames = setToSortedString(UNSAFE_componentWillMountUniqueNames);
          warningWithoutStack$1(false, 'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '\nPlease update the following components: %s', sortedNames);
        }

        if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {
          var _sortedNames = setToSortedString(UNSAFE_componentWillReceivePropsUniqueNames);

          warningWithoutStack$1(false, 'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, " + 'refactor your code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '\nPlease update the following components: %s', _sortedNames);
        }

        if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {
          var _sortedNames2 = setToSortedString(UNSAFE_componentWillUpdateUniqueNames);

          warningWithoutStack$1(false, 'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' + 'and may indicate bugs in your code. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '\nPlease update the following components: %s', _sortedNames2);
        }

        if (componentWillMountUniqueNames.size > 0) {
          var _sortedNames3 = setToSortedString(componentWillMountUniqueNames);

          lowPriorityWarningWithoutStack$1(false, 'componentWillMount has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move code with side effects to componentDidMount, and set initial state in the constructor.\n' + '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames3);
        }

        if (componentWillReceivePropsUniqueNames.size > 0) {
          var _sortedNames4 = setToSortedString(componentWillReceivePropsUniqueNames);

          lowPriorityWarningWithoutStack$1(false, 'componentWillReceiveProps has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + "* If you're updating state whenever props change, refactor your " + 'code to use memoization techniques or move it to ' + 'static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state\n' + '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames4);
        }

        if (componentWillUpdateUniqueNames.size > 0) {
          var _sortedNames5 = setToSortedString(componentWillUpdateUniqueNames);

          lowPriorityWarningWithoutStack$1(false, 'componentWillUpdate has been renamed, and is not recommended for use. ' + 'See https://fb.me/react-unsafe-component-lifecycles for details.\n\n' + '* Move data fetching code or side effects to componentDidUpdate.\n' + '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' + 'this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. ' + 'To rename all deprecated lifecycles to their new names, you can run ' + '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\n' + '\nPlease update the following components: %s', _sortedNames5);
        }
      };

      var pendingLegacyContextWarning = new Map(); // Tracks components we have already warned about.

      var didWarnAboutLegacyContext = new Set();

      ReactStrictModeWarnings.recordLegacyContextWarning = function (fiber, instance) {
        var strictRoot = findStrictRoot(fiber);

        if (strictRoot === null) {
          warningWithoutStack$1(false, 'Expected to find a StrictMode component in a strict mode tree. ' + 'This error is likely caused by a bug in React. Please file an issue.');
          return;
        } // Dedup strategy: Warn once per component.


        if (didWarnAboutLegacyContext.has(fiber.type)) {
          return;
        }

        var warningsForRoot = pendingLegacyContextWarning.get(strictRoot);

        if (fiber.type.contextTypes != null || fiber.type.childContextTypes != null || instance !== null && typeof instance.getChildContext === 'function') {
          if (warningsForRoot === undefined) {
            warningsForRoot = [];
            pendingLegacyContextWarning.set(strictRoot, warningsForRoot);
          }

          warningsForRoot.push(fiber);
        }
      };

      ReactStrictModeWarnings.flushLegacyContextWarning = function () {
        pendingLegacyContextWarning.forEach(function (fiberArray, strictRoot) {
          var uniqueNames = new Set();
          fiberArray.forEach(function (fiber) {
            uniqueNames.add(getComponentName(fiber.type) || 'Component');
            didWarnAboutLegacyContext.add(fiber.type);
          });
          var sortedNames = setToSortedString(uniqueNames);
          var strictRootComponentStack = getStackByFiberInDevAndProd(strictRoot);
          warningWithoutStack$1(false, 'Legacy context API has been detected within a strict-mode tree.' + '\n\nThe old API will be supported in all 16.x releases, but applications ' + 'using it should migrate to the new version.' + '\n\nPlease update the following components: %s' + '\n\nLearn more about this warning here: https://fb.me/react-legacy-context' + '%s', sortedNames, strictRootComponentStack);
        });
      };

      ReactStrictModeWarnings.discardPendingWarnings = function () {
        pendingComponentWillMountWarnings = [];
        pendingUNSAFE_ComponentWillMountWarnings = [];
        pendingComponentWillReceivePropsWarnings = [];
        pendingUNSAFE_ComponentWillReceivePropsWarnings = [];
        pendingComponentWillUpdateWarnings = [];
        pendingUNSAFE_ComponentWillUpdateWarnings = [];
        pendingLegacyContextWarning = new Map();
      };
    }
    var resolveFamily = null; // $FlowFixMe Flow gets confused by a WeakSet feature check below.

    var failedBoundaries = null;

    var setRefreshHandler = function (handler) {
      {
        resolveFamily = handler;
      }
    };

    function resolveFunctionForHotReloading(type) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return type;
        }

        var family = resolveFamily(type);

        if (family === undefined) {
          return type;
        } // Use the latest known implementation.


        return family.current;
      }
    }

    function resolveClassForHotReloading(type) {
      // No implementation differences.
      return resolveFunctionForHotReloading(type);
    }

    function resolveForwardRefForHotReloading(type) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return type;
        }

        var family = resolveFamily(type);

        if (family === undefined) {
          // Check if we're dealing with a real forwardRef. Don't want to crash early.
          if (type !== null && type !== undefined && typeof type.render === 'function') {
            // ForwardRef is special because its resolved .type is an object,
            // but it's possible that we only have its inner render function in the map.
            // If that inner render function is different, we'll build a new forwardRef type.
            var currentRender = resolveFunctionForHotReloading(type.render);

            if (type.render !== currentRender) {
              var syntheticType = {
                $$typeof: REACT_FORWARD_REF_TYPE,
                render: currentRender
              };

              if (type.displayName !== undefined) {
                syntheticType.displayName = type.displayName;
              }

              return syntheticType;
            }
          }

          return type;
        } // Use the latest known implementation.


        return family.current;
      }
    }

    function isCompatibleFamilyForHotReloading(fiber, element) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return false;
        }

        var prevType = fiber.elementType;
        var nextType = element.type; // If we got here, we know types aren't === equal.

        var needsCompareFamilies = false;
        var $$typeofNextType = typeof nextType === 'object' && nextType !== null ? nextType.$$typeof : null;

        switch (fiber.tag) {
          case ClassComponent:
            {
              if (typeof nextType === 'function') {
                needsCompareFamilies = true;
              }

              break;
            }

          case FunctionComponent:
            {
              if (typeof nextType === 'function') {
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                // We don't know the inner type yet.
                // We're going to assume that the lazy inner type is stable,
                // and so it is sufficient to avoid reconciling it away.
                // We're not going to unwrap or actually use the new lazy type.
                needsCompareFamilies = true;
              }

              break;
            }

          case ForwardRef:
            {
              if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                needsCompareFamilies = true;
              }

              break;
            }

          case MemoComponent:
          case SimpleMemoComponent:
            {
              if ($$typeofNextType === REACT_MEMO_TYPE) {
                // TODO: if it was but can no longer be simple,
                // we shouldn't set this.
                needsCompareFamilies = true;
              } else if ($$typeofNextType === REACT_LAZY_TYPE) {
                needsCompareFamilies = true;
              }

              break;
            }

          default:
            return false;
        } // Check if both types have a family and it's the same one.


        if (needsCompareFamilies) {
          // Note: memo() and forwardRef() we'll compare outer rather than inner type.
          // This means both of them need to be registered to preserve state.
          // If we unwrapped and compared the inner types for wrappers instead,
          // then we would risk falsely saying two separate memo(Foo)
          // calls are equivalent because they wrap the same Foo function.
          var prevFamily = resolveFamily(prevType);

          if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {
            return true;
          }
        }

        return false;
      }
    }

    function markFailedErrorBoundaryForHotReloading(fiber) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return;
        }

        if (typeof WeakSet !== 'function') {
          return;
        }

        if (failedBoundaries === null) {
          failedBoundaries = new WeakSet();
        }

        failedBoundaries.add(fiber);
      }
    }

    var scheduleRefresh = function (root, update) {
      {
        if (resolveFamily === null) {
          // Hot reloading is disabled.
          return;
        }

        var staleFamilies = update.staleFamilies,
            updatedFamilies = update.updatedFamilies;
        flushPassiveEffects();
        flushSync(function () {
          scheduleFibersWithFamiliesRecursively(root.current, updatedFamilies, staleFamilies);
        });
      }
    };

    var scheduleRoot = function (root, element) {
      {
        if (root.context !== emptyContextObject) {
          // Super edge case: root has a legacy _renderSubtree context
          // but we don't know the parentComponent so we can't pass it.
          // Just ignore. We'll delete this with _renderSubtree code path later.
          return;
        }

        flushPassiveEffects();
        syncUpdates(function () {
          updateContainer(element, root, null, null);
        });
      }
    };

    function scheduleFibersWithFamiliesRecursively(fiber, updatedFamilies, staleFamilies) {
      {
        var alternate = fiber.alternate,
            child = fiber.child,
            sibling = fiber.sibling,
            tag = fiber.tag,
            type = fiber.type;
        var candidateType = null;

        switch (tag) {
          case FunctionComponent:
          case SimpleMemoComponent:
          case ClassComponent:
            candidateType = type;
            break;

          case ForwardRef:
            candidateType = type.render;
            break;

          default:
            break;
        }

        if (resolveFamily === null) {
          throw new Error('Expected resolveFamily to be set during hot reload.');
        }

        var needsRender = false;
        var needsRemount = false;

        if (candidateType !== null) {
          var family = resolveFamily(candidateType);

          if (family !== undefined) {
            if (staleFamilies.has(family)) {
              needsRemount = true;
            } else if (updatedFamilies.has(family)) {
              if (tag === ClassComponent) {
                needsRemount = true;
              } else {
                needsRender = true;
              }
            }
          }
        }

        if (failedBoundaries !== null) {
          if (failedBoundaries.has(fiber) || alternate !== null && failedBoundaries.has(alternate)) {
            needsRemount = true;
          }
        }

        if (needsRemount) {
          fiber._debugNeedsRemount = true;
        }

        if (needsRemount || needsRender) {
          scheduleWork(fiber, Sync);
        }

        if (child !== null && !needsRemount) {
          scheduleFibersWithFamiliesRecursively(child, updatedFamilies, staleFamilies);
        }

        if (sibling !== null) {
          scheduleFibersWithFamiliesRecursively(sibling, updatedFamilies, staleFamilies);
        }
      }
    }

    var findHostInstancesForRefresh = function (root, families) {
      {
        var hostInstances = new Set();
        var types = new Set(families.map(function (family) {
          return family.current;
        }));
        findHostInstancesForMatchingFibersRecursively(root.current, types, hostInstances);
        return hostInstances;
      }
    };

    function findHostInstancesForMatchingFibersRecursively(fiber, types, hostInstances) {
      {
        var child = fiber.child,
            sibling = fiber.sibling,
            tag = fiber.tag,
            type = fiber.type;
        var candidateType = null;

        switch (tag) {
          case FunctionComponent:
          case SimpleMemoComponent:
          case ClassComponent:
            candidateType = type;
            break;

          case ForwardRef:
            candidateType = type.render;
            break;

          default:
            break;
        }

        var didMatch = false;

        if (candidateType !== null) {
          if (types.has(candidateType)) {
            didMatch = true;
          }
        }

        if (didMatch) {
          // We have a match. This only drills down to the closest host components.
          // There's no need to search deeper because for the purpose of giving
          // visual feedback, "flashing" outermost parent rectangles is sufficient.
          findHostInstancesForFiberShallowly(fiber, hostInstances);
        } else {
          // If there's no match, maybe there will be one further down in the child tree.
          if (child !== null) {
            findHostInstancesForMatchingFibersRecursively(child, types, hostInstances);
          }
        }

        if (sibling !== null) {
          findHostInstancesForMatchingFibersRecursively(sibling, types, hostInstances);
        }
      }
    }

    function findHostInstancesForFiberShallowly(fiber, hostInstances) {
      {
        var foundHostInstances = findChildHostInstancesForFiberShallowly(fiber, hostInstances);

        if (foundHostInstances) {
          return;
        } // If we didn't find any host children, fallback to closest host parent.


        var node = fiber;

        while (true) {
          switch (node.tag) {
            case HostComponent:
              hostInstances.add(node.stateNode);
              return;

            case HostPortal:
              hostInstances.add(node.stateNode.containerInfo);
              return;

            case HostRoot:
              hostInstances.add(node.stateNode.containerInfo);
              return;
          }

          if (node.return === null) {
            throw new Error('Expected to reach root first.');
          }

          node = node.return;
        }
      }
    }

    function findChildHostInstancesForFiberShallowly(fiber, hostInstances) {
      {
        var node = fiber;
        var foundHostInstances = false;

        while (true) {
          if (node.tag === HostComponent) {
            // We got a match.
            foundHostInstances = true;
            hostInstances.add(node.stateNode); // There may still be more, so keep searching.
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === fiber) {
            return foundHostInstances;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === fiber) {
              return foundHostInstances;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
      return false;
    }

    function resolveDefaultProps(Component, baseProps) {
      if (Component && Component.defaultProps) {
        // Resolve default props. Taken from ReactElement
        var props = _assign({}, baseProps);

        var defaultProps = Component.defaultProps;

        for (var propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }

        return props;
      }

      return baseProps;
    }

    function readLazyComponentType(lazyComponent) {
      initializeLazyComponentType(lazyComponent);

      if (lazyComponent._status !== Resolved) {
        throw lazyComponent._result;
      }

      return lazyComponent._result;
    }

    var valueCursor = createCursor(null);
    var rendererSigil;
    {
      // Use this to detect multiple renderers using the same context
      rendererSigil = {};
    }
    var currentlyRenderingFiber = null;
    var lastContextDependency = null;
    var lastContextWithAllBitsObserved = null;
    var isDisallowedContextReadInDEV = false;

    function resetContextDependencies() {
      // This is called right before React yields execution, to ensure `readContext`
      // cannot be called outside the render phase.
      currentlyRenderingFiber = null;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function enterDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = true;
      }
    }

    function exitDisallowedContextReadInDEV() {
      {
        isDisallowedContextReadInDEV = false;
      }
    }

    function pushProvider(providerFiber, nextValue) {
      var context = providerFiber.type._context;

      if (isPrimaryRenderer) {
        push(valueCursor, context._currentValue, providerFiber);
        context._currentValue = nextValue;
        {
          !(context._currentRenderer === undefined || context._currentRenderer === null || context._currentRenderer === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
          context._currentRenderer = rendererSigil;
        }
      } else {
        push(valueCursor, context._currentValue2, providerFiber);
        context._currentValue2 = nextValue;
        {
          !(context._currentRenderer2 === undefined || context._currentRenderer2 === null || context._currentRenderer2 === rendererSigil) ? warningWithoutStack$1(false, 'Detected multiple renderers concurrently rendering the ' + 'same context provider. This is currently unsupported.') : void 0;
          context._currentRenderer2 = rendererSigil;
        }
      }
    }

    function popProvider(providerFiber) {
      var currentValue = valueCursor.current;
      pop(valueCursor, providerFiber);
      var context = providerFiber.type._context;

      if (isPrimaryRenderer) {
        context._currentValue = currentValue;
      } else {
        context._currentValue2 = currentValue;
      }
    }

    function calculateChangedBits(context, newValue, oldValue) {
      if (is$1(oldValue, newValue)) {
        // No change
        return 0;
      } else {
        var changedBits = typeof context._calculateChangedBits === 'function' ? context._calculateChangedBits(oldValue, newValue) : MAX_SIGNED_31_BIT_INT;
        {
          !((changedBits & MAX_SIGNED_31_BIT_INT) === changedBits) ? warning$1(false, 'calculateChangedBits: Expected the return value to be a ' + '31-bit integer. Instead received: %s', changedBits) : void 0;
        }
        return changedBits | 0;
      }
    }

    function scheduleWorkOnParentPath(parent, renderExpirationTime) {
      // Update the child expiration time of all the ancestors, including
      // the alternates.
      var node = parent;

      while (node !== null) {
        var alternate = node.alternate;

        if (node.childExpirationTime < renderExpirationTime) {
          node.childExpirationTime = renderExpirationTime;

          if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
            alternate.childExpirationTime = renderExpirationTime;
          }
        } else if (alternate !== null && alternate.childExpirationTime < renderExpirationTime) {
          alternate.childExpirationTime = renderExpirationTime;
        } else {
          // Neither alternate was updated, which means the rest of the
          // ancestor path already has sufficient priority.
          break;
        }

        node = node.return;
      }
    }

    function propagateContextChange(workInProgress, context, changedBits, renderExpirationTime) {
      var fiber = workInProgress.child;

      if (fiber !== null) {
        // Set the return pointer of the child to the work-in-progress fiber.
        fiber.return = workInProgress;
      }

      while (fiber !== null) {
        var nextFiber = void 0; // Visit this fiber.

        var list = fiber.dependencies;

        if (list !== null) {
          nextFiber = fiber.child;
          var dependency = list.firstContext;

          while (dependency !== null) {
            // Check if the context matches.
            if (dependency.context === context && (dependency.observedBits & changedBits) !== 0) {
              // Match! Schedule an update on this fiber.
              if (fiber.tag === ClassComponent) {
                // Schedule a force update on the work-in-progress.
                var update = createUpdate(renderExpirationTime, null);
                update.tag = ForceUpdate; // TODO: Because we don't have a work-in-progress, this will add the
                // update to the current fiber, too, which means it will persist even if
                // this render is thrown away. Since it's a race condition, not sure it's
                // worth fixing.

                enqueueUpdate(fiber, update);
              }

              if (fiber.expirationTime < renderExpirationTime) {
                fiber.expirationTime = renderExpirationTime;
              }

              var alternate = fiber.alternate;

              if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
                alternate.expirationTime = renderExpirationTime;
              }

              scheduleWorkOnParentPath(fiber.return, renderExpirationTime); // Mark the expiration time on the list, too.

              if (list.expirationTime < renderExpirationTime) {
                list.expirationTime = renderExpirationTime;
              } // Since we already found a match, we can stop traversing the
              // dependency list.


              break;
            }

            dependency = dependency.next;
          }
        } else if (fiber.tag === ContextProvider) {
          // Don't scan deeper if this is a matching provider
          nextFiber = fiber.type === workInProgress.type ? null : fiber.child;
        } else if (enableSuspenseServerRenderer && fiber.tag === DehydratedFragment) {
          // If a dehydrated suspense bounudary is in this subtree, we don't know
          // if it will have any context consumers in it. The best we can do is
          // mark it as having updates.
          var parentSuspense = fiber.return;

          if (!(parentSuspense !== null)) {
            {
              throw Error("We just came from a parent so we must have had a parent. This is a bug in React.");
            }
          }

          if (parentSuspense.expirationTime < renderExpirationTime) {
            parentSuspense.expirationTime = renderExpirationTime;
          }

          var _alternate = parentSuspense.alternate;

          if (_alternate !== null && _alternate.expirationTime < renderExpirationTime) {
            _alternate.expirationTime = renderExpirationTime;
          } // This is intentionally passing this fiber as the parent
          // because we want to schedule this fiber as having work
          // on its children. We'll use the childExpirationTime on
          // this fiber to indicate that a context has changed.


          scheduleWorkOnParentPath(parentSuspense, renderExpirationTime);
          nextFiber = fiber.sibling;
        } else {
          // Traverse down.
          nextFiber = fiber.child;
        }

        if (nextFiber !== null) {
          // Set the return pointer of the child to the work-in-progress fiber.
          nextFiber.return = fiber;
        } else {
          // No child. Traverse to next sibling.
          nextFiber = fiber;

          while (nextFiber !== null) {
            if (nextFiber === workInProgress) {
              // We're back to the root of this subtree. Exit.
              nextFiber = null;
              break;
            }

            var sibling = nextFiber.sibling;

            if (sibling !== null) {
              // Set the return pointer of the sibling to the work-in-progress fiber.
              sibling.return = nextFiber.return;
              nextFiber = sibling;
              break;
            } // No more siblings. Traverse up.


            nextFiber = nextFiber.return;
          }
        }

        fiber = nextFiber;
      }
    }

    function prepareToReadContext(workInProgress, renderExpirationTime) {
      currentlyRenderingFiber = workInProgress;
      lastContextDependency = null;
      lastContextWithAllBitsObserved = null;
      var dependencies = workInProgress.dependencies;

      if (dependencies !== null) {
        var firstContext = dependencies.firstContext;

        if (firstContext !== null) {
          if (dependencies.expirationTime >= renderExpirationTime) {
            // Context list has a pending update. Mark that this fiber performed work.
            markWorkInProgressReceivedUpdate();
          } // Reset the work-in-progress list


          dependencies.firstContext = null;
        }
      }
    }

    function readContext(context, observedBits) {
      {
        // This warning would fire if you read context inside a Hook like useMemo.
        // Unlike the class check below, it's not enforced in production for perf.
        !!isDisallowedContextReadInDEV ? warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().') : void 0;
      }

      if (lastContextWithAllBitsObserved === context) {// Nothing to do. We already observe everything in this context.
      } else if (observedBits === false || observedBits === 0) {// Do not observe any updates.
      } else {
        var resolvedObservedBits; // Avoid deopting on observable arguments or heterogeneous types.

        if (typeof observedBits !== 'number' || observedBits === MAX_SIGNED_31_BIT_INT) {
          // Observe all updates.
          lastContextWithAllBitsObserved = context;
          resolvedObservedBits = MAX_SIGNED_31_BIT_INT;
        } else {
          resolvedObservedBits = observedBits;
        }

        var contextItem = {
          context: context,
          observedBits: resolvedObservedBits,
          next: null
        };

        if (lastContextDependency === null) {
          if (!(currentlyRenderingFiber !== null)) {
            {
              throw Error("Context can only be read while React is rendering. In classes, you can read it in the render method or getDerivedStateFromProps. In function components, you can read it directly in the function body, but not inside Hooks like useReducer() or useMemo().");
            }
          } // This is the first dependency for this component. Create a new list.


          lastContextDependency = contextItem;
          currentlyRenderingFiber.dependencies = {
            expirationTime: NoWork,
            firstContext: contextItem,
            responders: null
          };
        } else {
          // Append a new context item.
          lastContextDependency = lastContextDependency.next = contextItem;
        }
      }

      return isPrimaryRenderer ? context._currentValue : context._currentValue2;
    } // UpdateQueue is a linked list of prioritized updates.
    //
    // Like fibers, update queues come in pairs: a current queue, which represents
    // the visible state of the screen, and a work-in-progress queue, which can be
    // mutated and processed asynchronously before it is committed — a form of
    // double buffering. If a work-in-progress render is discarded before finishing,
    // we create a new work-in-progress by cloning the current queue.
    //
    // Both queues share a persistent, singly-linked list structure. To schedule an
    // update, we append it to the end of both queues. Each queue maintains a
    // pointer to first update in the persistent list that hasn't been processed.
    // The work-in-progress pointer always has a position equal to or greater than
    // the current queue, since we always work on that one. The current queue's
    // pointer is only updated during the commit phase, when we swap in the
    // work-in-progress.
    //
    // For example:
    //
    //   Current pointer:           A - B - C - D - E - F
    //   Work-in-progress pointer:              D - E - F
    //                                          ^
    //                                          The work-in-progress queue has
    //                                          processed more updates than current.
    //
    // The reason we append to both queues is because otherwise we might drop
    // updates without ever processing them. For example, if we only add updates to
    // the work-in-progress queue, some updates could be lost whenever a work-in
    // -progress render restarts by cloning from current. Similarly, if we only add
    // updates to the current queue, the updates will be lost whenever an already
    // in-progress queue commits and swaps with the current queue. However, by
    // adding to both queues, we guarantee that the update will be part of the next
    // work-in-progress. (And because the work-in-progress queue becomes the
    // current queue once it commits, there's no danger of applying the same
    // update twice.)
    //
    // Prioritization
    // --------------
    //
    // Updates are not sorted by priority, but by insertion; new updates are always
    // appended to the end of the list.
    //
    // The priority is still important, though. When processing the update queue
    // during the render phase, only the updates with sufficient priority are
    // included in the result. If we skip an update because it has insufficient
    // priority, it remains in the queue to be processed later, during a lower
    // priority render. Crucially, all updates subsequent to a skipped update also
    // remain in the queue *regardless of their priority*. That means high priority
    // updates are sometimes processed twice, at two separate priorities. We also
    // keep track of a base state, that represents the state before the first
    // update in the queue is applied.
    //
    // For example:
    //
    //   Given a base state of '', and the following queue of updates
    //
    //     A1 - B2 - C1 - D2
    //
    //   where the number indicates the priority, and the update is applied to the
    //   previous state by appending a letter, React will process these updates as
    //   two separate renders, one per distinct priority level:
    //
    //   First render, at priority 1:
    //     Base state: ''
    //     Updates: [A1, C1]
    //     Result state: 'AC'
    //
    //   Second render, at priority 2:
    //     Base state: 'A'            <-  The base state does not include C1,
    //                                    because B2 was skipped.
    //     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2
    //     Result state: 'ABCD'
    //
    // Because we process updates in insertion order, and rebase high priority
    // updates when preceding updates are skipped, the final result is deterministic
    // regardless of priority. Intermediate state may vary according to system
    // resources, but the final state is always the same.


    var UpdateState = 0;
    var ReplaceState = 1;
    var ForceUpdate = 2;
    var CaptureUpdate = 3; // Global state that is reset at the beginning of calling `processUpdateQueue`.
    // It should only be read right after calling `processUpdateQueue`, via
    // `checkHasForceUpdateAfterProcessing`.

    var hasForceUpdate = false;
    var didWarnUpdateInsideUpdate;
    var currentlyProcessingQueue;
    {
      didWarnUpdateInsideUpdate = false;
      currentlyProcessingQueue = null;
    }

    function createUpdateQueue(baseState) {
      var queue = {
        baseState: baseState,
        firstUpdate: null,
        lastUpdate: null,
        firstCapturedUpdate: null,
        lastCapturedUpdate: null,
        firstEffect: null,
        lastEffect: null,
        firstCapturedEffect: null,
        lastCapturedEffect: null
      };
      return queue;
    }

    function cloneUpdateQueue(currentQueue) {
      var queue = {
        baseState: currentQueue.baseState,
        firstUpdate: currentQueue.firstUpdate,
        lastUpdate: currentQueue.lastUpdate,
        // TODO: With resuming, if we bail out and resuse the child tree, we should
        // keep these effects.
        firstCapturedUpdate: null,
        lastCapturedUpdate: null,
        firstEffect: null,
        lastEffect: null,
        firstCapturedEffect: null,
        lastCapturedEffect: null
      };
      return queue;
    }

    function createUpdate(expirationTime, suspenseConfig) {
      var update = {
        expirationTime: expirationTime,
        suspenseConfig: suspenseConfig,
        tag: UpdateState,
        payload: null,
        callback: null,
        next: null,
        nextEffect: null
      };
      {
        update.priority = getCurrentPriorityLevel();
      }
      return update;
    }

    function appendUpdateToQueue(queue, update) {
      // Append the update to the end of the list.
      if (queue.lastUpdate === null) {
        // Queue is empty
        queue.firstUpdate = queue.lastUpdate = update;
      } else {
        queue.lastUpdate.next = update;
        queue.lastUpdate = update;
      }
    }

    function enqueueUpdate(fiber, update) {
      // Update queues are created lazily.
      var alternate = fiber.alternate;
      var queue1;
      var queue2;

      if (alternate === null) {
        // There's only one fiber.
        queue1 = fiber.updateQueue;
        queue2 = null;

        if (queue1 === null) {
          queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
        }
      } else {
        // There are two owners.
        queue1 = fiber.updateQueue;
        queue2 = alternate.updateQueue;

        if (queue1 === null) {
          if (queue2 === null) {
            // Neither fiber has an update queue. Create new ones.
            queue1 = fiber.updateQueue = createUpdateQueue(fiber.memoizedState);
            queue2 = alternate.updateQueue = createUpdateQueue(alternate.memoizedState);
          } else {
            // Only one fiber has an update queue. Clone to create a new one.
            queue1 = fiber.updateQueue = cloneUpdateQueue(queue2);
          }
        } else {
          if (queue2 === null) {
            // Only one fiber has an update queue. Clone to create a new one.
            queue2 = alternate.updateQueue = cloneUpdateQueue(queue1);
          } else {// Both owners have an update queue.
          }
        }
      }

      if (queue2 === null || queue1 === queue2) {
        // There's only a single queue.
        appendUpdateToQueue(queue1, update);
      } else {
        // There are two queues. We need to append the update to both queues,
        // while accounting for the persistent structure of the list — we don't
        // want the same update to be added multiple times.
        if (queue1.lastUpdate === null || queue2.lastUpdate === null) {
          // One of the queues is not empty. We must add the update to both queues.
          appendUpdateToQueue(queue1, update);
          appendUpdateToQueue(queue2, update);
        } else {
          // Both queues are non-empty. The last update is the same in both lists,
          // because of structural sharing. So, only append to one of the lists.
          appendUpdateToQueue(queue1, update); // But we still need to update the `lastUpdate` pointer of queue2.

          queue2.lastUpdate = update;
        }
      }

      {
        if (fiber.tag === ClassComponent && (currentlyProcessingQueue === queue1 || queue2 !== null && currentlyProcessingQueue === queue2) && !didWarnUpdateInsideUpdate) {
          warningWithoutStack$1(false, 'An update (setState, replaceState, or forceUpdate) was scheduled ' + 'from inside an update function. Update functions should be pure, ' + 'with zero side-effects. Consider using componentDidUpdate or a ' + 'callback.');
          didWarnUpdateInsideUpdate = true;
        }
      }
    }

    function enqueueCapturedUpdate(workInProgress, update) {
      // Captured updates go into a separate list, and only on the work-in-
      // progress queue.
      var workInProgressQueue = workInProgress.updateQueue;

      if (workInProgressQueue === null) {
        workInProgressQueue = workInProgress.updateQueue = createUpdateQueue(workInProgress.memoizedState);
      } else {
        // TODO: I put this here rather than createWorkInProgress so that we don't
        // clone the queue unnecessarily. There's probably a better way to
        // structure this.
        workInProgressQueue = ensureWorkInProgressQueueIsAClone(workInProgress, workInProgressQueue);
      } // Append the update to the end of the list.


      if (workInProgressQueue.lastCapturedUpdate === null) {
        // This is the first render phase update
        workInProgressQueue.firstCapturedUpdate = workInProgressQueue.lastCapturedUpdate = update;
      } else {
        workInProgressQueue.lastCapturedUpdate.next = update;
        workInProgressQueue.lastCapturedUpdate = update;
      }
    }

    function ensureWorkInProgressQueueIsAClone(workInProgress, queue) {
      var current = workInProgress.alternate;

      if (current !== null) {
        // If the work-in-progress queue is equal to the current queue,
        // we need to clone it first.
        if (queue === current.updateQueue) {
          queue = workInProgress.updateQueue = cloneUpdateQueue(queue);
        }
      }

      return queue;
    }

    function getStateFromUpdate(workInProgress, queue, update, prevState, nextProps, instance) {
      switch (update.tag) {
        case ReplaceState:
          {
            var payload = update.payload;

            if (typeof payload === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();

                if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                  payload.call(instance, prevState, nextProps);
                }
              }
              var nextState = payload.call(instance, prevState, nextProps);
              {
                exitDisallowedContextReadInDEV();
              }
              return nextState;
            } // State object


            return payload;
          }

        case CaptureUpdate:
          {
            workInProgress.effectTag = workInProgress.effectTag & ~ShouldCapture | DidCapture;
          }
        // Intentional fallthrough

        case UpdateState:
          {
            var _payload = update.payload;
            var partialState;

            if (typeof _payload === 'function') {
              // Updater function
              {
                enterDisallowedContextReadInDEV();

                if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
                  _payload.call(instance, prevState, nextProps);
                }
              }
              partialState = _payload.call(instance, prevState, nextProps);
              {
                exitDisallowedContextReadInDEV();
              }
            } else {
              // Partial state object
              partialState = _payload;
            }

            if (partialState === null || partialState === undefined) {
              // Null and undefined are treated as no-ops.
              return prevState;
            } // Merge the partial state and the previous state.


            return _assign({}, prevState, partialState);
          }

        case ForceUpdate:
          {
            hasForceUpdate = true;
            return prevState;
          }
      }

      return prevState;
    }

    function processUpdateQueue(workInProgress, queue, props, instance, renderExpirationTime) {
      hasForceUpdate = false;
      queue = ensureWorkInProgressQueueIsAClone(workInProgress, queue);
      {
        currentlyProcessingQueue = queue;
      } // These values may change as we process the queue.

      var newBaseState = queue.baseState;
      var newFirstUpdate = null;
      var newExpirationTime = NoWork; // Iterate through the list of updates to compute the result.

      var update = queue.firstUpdate;
      var resultState = newBaseState;

      while (update !== null) {
        var updateExpirationTime = update.expirationTime;

        if (updateExpirationTime < renderExpirationTime) {
          // This update does not have sufficient priority. Skip it.
          if (newFirstUpdate === null) {
            // This is the first skipped update. It will be the first update in
            // the new list.
            newFirstUpdate = update; // Since this is the first update that was skipped, the current result
            // is the new base state.

            newBaseState = resultState;
          } // Since this update will remain in the list, update the remaining
          // expiration time.


          if (newExpirationTime < updateExpirationTime) {
            newExpirationTime = updateExpirationTime;
          }
        } else {
          // This update does have sufficient priority.
          // Mark the event time of this update as relevant to this render pass.
          // TODO: This should ideally use the true event time of this update rather than
          // its priority which is a derived and not reverseable value.
          // TODO: We should skip this update if it was already committed but currently
          // we have no way of detecting the difference between a committed and suspended
          // update here.
          markRenderEventTimeAndConfig(updateExpirationTime, update.suspenseConfig); // Process it and compute a new result.

          resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
          var callback = update.callback;

          if (callback !== null) {
            workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

            update.nextEffect = null;

            if (queue.lastEffect === null) {
              queue.firstEffect = queue.lastEffect = update;
            } else {
              queue.lastEffect.nextEffect = update;
              queue.lastEffect = update;
            }
          }
        } // Continue to the next update.


        update = update.next;
      } // Separately, iterate though the list of captured updates.


      var newFirstCapturedUpdate = null;
      update = queue.firstCapturedUpdate;

      while (update !== null) {
        var _updateExpirationTime = update.expirationTime;

        if (_updateExpirationTime < renderExpirationTime) {
          // This update does not have sufficient priority. Skip it.
          if (newFirstCapturedUpdate === null) {
            // This is the first skipped captured update. It will be the first
            // update in the new list.
            newFirstCapturedUpdate = update; // If this is the first update that was skipped, the current result is
            // the new base state.

            if (newFirstUpdate === null) {
              newBaseState = resultState;
            }
          } // Since this update will remain in the list, update the remaining
          // expiration time.


          if (newExpirationTime < _updateExpirationTime) {
            newExpirationTime = _updateExpirationTime;
          }
        } else {
          // This update does have sufficient priority. Process it and compute
          // a new result.
          resultState = getStateFromUpdate(workInProgress, queue, update, resultState, props, instance);
          var _callback = update.callback;

          if (_callback !== null) {
            workInProgress.effectTag |= Callback; // Set this to null, in case it was mutated during an aborted render.

            update.nextEffect = null;

            if (queue.lastCapturedEffect === null) {
              queue.firstCapturedEffect = queue.lastCapturedEffect = update;
            } else {
              queue.lastCapturedEffect.nextEffect = update;
              queue.lastCapturedEffect = update;
            }
          }
        }

        update = update.next;
      }

      if (newFirstUpdate === null) {
        queue.lastUpdate = null;
      }

      if (newFirstCapturedUpdate === null) {
        queue.lastCapturedUpdate = null;
      } else {
        workInProgress.effectTag |= Callback;
      }

      if (newFirstUpdate === null && newFirstCapturedUpdate === null) {
        // We processed every update, without skipping. That means the new base
        // state is the same as the result state.
        newBaseState = resultState;
      }

      queue.baseState = newBaseState;
      queue.firstUpdate = newFirstUpdate;
      queue.firstCapturedUpdate = newFirstCapturedUpdate; // Set the remaining expiration time to be whatever is remaining in the queue.
      // This should be fine because the only two other things that contribute to
      // expiration time are props and context. We're already in the middle of the
      // begin phase by the time we start processing the queue, so we've already
      // dealt with the props. Context in components that specify
      // shouldComponentUpdate is tricky; but we'll have to account for
      // that regardless.

      markUnprocessedUpdateTime(newExpirationTime);
      workInProgress.expirationTime = newExpirationTime;
      workInProgress.memoizedState = resultState;
      {
        currentlyProcessingQueue = null;
      }
    }

    function callCallback(callback, context) {
      if (!(typeof callback === 'function')) {
        {
          throw Error("Invalid argument passed as callback. Expected a function. Instead received: " + callback);
        }
      }

      callback.call(context);
    }

    function resetHasForceUpdateBeforeProcessing() {
      hasForceUpdate = false;
    }

    function checkHasForceUpdateAfterProcessing() {
      return hasForceUpdate;
    }

    function commitUpdateQueue(finishedWork, finishedQueue, instance, renderExpirationTime) {
      // If the finished render included captured updates, and there are still
      // lower priority updates left over, we need to keep the captured updates
      // in the queue so that they are rebased and not dropped once we process the
      // queue again at the lower priority.
      if (finishedQueue.firstCapturedUpdate !== null) {
        // Join the captured update list to the end of the normal list.
        if (finishedQueue.lastUpdate !== null) {
          finishedQueue.lastUpdate.next = finishedQueue.firstCapturedUpdate;
          finishedQueue.lastUpdate = finishedQueue.lastCapturedUpdate;
        } // Clear the list of captured updates.


        finishedQueue.firstCapturedUpdate = finishedQueue.lastCapturedUpdate = null;
      } // Commit the effects


      commitUpdateEffects(finishedQueue.firstEffect, instance);
      finishedQueue.firstEffect = finishedQueue.lastEffect = null;
      commitUpdateEffects(finishedQueue.firstCapturedEffect, instance);
      finishedQueue.firstCapturedEffect = finishedQueue.lastCapturedEffect = null;
    }

    function commitUpdateEffects(effect, instance) {
      while (effect !== null) {
        var callback = effect.callback;

        if (callback !== null) {
          effect.callback = null;
          callCallback(callback, instance);
        }

        effect = effect.nextEffect;
      }
    }

    var ReactCurrentBatchConfig = ReactSharedInternals.ReactCurrentBatchConfig;

    function requestCurrentSuspenseConfig() {
      return ReactCurrentBatchConfig.suspense;
    }

    var fakeInternalInstance = {};
    var isArray$1 = Array.isArray; // React.Component uses a shared frozen object by default.
    // We'll use it to determine whether we need to initialize legacy refs.

    var emptyRefsObject = new React.Component().refs;
    var didWarnAboutStateAssignmentForComponent;
    var didWarnAboutUninitializedState;
    var didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;
    var didWarnAboutLegacyLifecyclesAndDerivedState;
    var didWarnAboutUndefinedDerivedState;
    var warnOnUndefinedDerivedState;
    var warnOnInvalidCallback$1;
    var didWarnAboutDirectlyAssigningPropsToState;
    var didWarnAboutContextTypeAndContextTypes;
    var didWarnAboutInvalidateContextType;
    {
      didWarnAboutStateAssignmentForComponent = new Set();
      didWarnAboutUninitializedState = new Set();
      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();
      didWarnAboutLegacyLifecyclesAndDerivedState = new Set();
      didWarnAboutDirectlyAssigningPropsToState = new Set();
      didWarnAboutUndefinedDerivedState = new Set();
      didWarnAboutContextTypeAndContextTypes = new Set();
      didWarnAboutInvalidateContextType = new Set();
      var didWarnOnInvalidCallback = new Set();

      warnOnInvalidCallback$1 = function (callback, callerName) {
        if (callback === null || typeof callback === 'function') {
          return;
        }

        var key = callerName + "_" + callback;

        if (!didWarnOnInvalidCallback.has(key)) {
          didWarnOnInvalidCallback.add(key);
          warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback);
        }
      };

      warnOnUndefinedDerivedState = function (type, partialState) {
        if (partialState === undefined) {
          var componentName = getComponentName(type) || 'Component';

          if (!didWarnAboutUndefinedDerivedState.has(componentName)) {
            didWarnAboutUndefinedDerivedState.add(componentName);
            warningWithoutStack$1(false, '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' + 'You have returned undefined.', componentName);
          }
        }
      }; // This is so gross but it's at least non-critical and can be removed if
      // it causes problems. This is meant to give a nicer error message for
      // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,
      // ...)) which otherwise throws a "_processChildContext is not a function"
      // exception.


      Object.defineProperty(fakeInternalInstance, '_processChildContext', {
        enumerable: false,
        value: function () {
          {
            {
              throw Error("_processChildContext is not available in React 16+. This likely means you have multiple copies of React and are attempting to nest a React 15 tree inside a React 16 tree using unstable_renderSubtreeIntoContainer, which isn't supported. Try to make sure you have only one copy of React (and ideally, switch to ReactDOM.createPortal).");
            }
          }
        }
      });
      Object.freeze(fakeInternalInstance);
    }

    function applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, nextProps) {
      var prevState = workInProgress.memoizedState;
      {
        if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Invoke the function an extra time to help detect side-effects.
          getDerivedStateFromProps(nextProps, prevState);
        }
      }
      var partialState = getDerivedStateFromProps(nextProps, prevState);
      {
        warnOnUndefinedDerivedState(ctor, partialState);
      } // Merge the partial state and the previous state.

      var memoizedState = partialState === null || partialState === undefined ? prevState : _assign({}, prevState, partialState);
      workInProgress.memoizedState = memoizedState; // Once the update queue is empty, persist the derived state onto the
      // base state.

      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null && workInProgress.expirationTime === NoWork) {
        updateQueue.baseState = memoizedState;
      }
    }

    var classComponentUpdater = {
      isMounted: isMounted,
      enqueueSetState: function (inst, payload, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTimeForUpdate();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var update = createUpdate(expirationTime, suspenseConfig);
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'setState');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      },
      enqueueReplaceState: function (inst, payload, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTimeForUpdate();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var update = createUpdate(expirationTime, suspenseConfig);
        update.tag = ReplaceState;
        update.payload = payload;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'replaceState');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      },
      enqueueForceUpdate: function (inst, callback) {
        var fiber = get(inst);
        var currentTime = requestCurrentTimeForUpdate();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var update = createUpdate(expirationTime, suspenseConfig);
        update.tag = ForceUpdate;

        if (callback !== undefined && callback !== null) {
          {
            warnOnInvalidCallback$1(callback, 'forceUpdate');
          }
          update.callback = callback;
        }

        enqueueUpdate(fiber, update);
        scheduleWork(fiber, expirationTime);
      }
    };

    function checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext) {
      var instance = workInProgress.stateNode;

      if (typeof instance.shouldComponentUpdate === 'function') {
        startPhaseTimer(workInProgress, 'shouldComponentUpdate');
        var shouldUpdate = instance.shouldComponentUpdate(newProps, newState, nextContext);
        stopPhaseTimer();
        {
          !(shouldUpdate !== undefined) ? warningWithoutStack$1(false, '%s.shouldComponentUpdate(): Returned undefined instead of a ' + 'boolean value. Make sure to return true or false.', getComponentName(ctor) || 'Component') : void 0;
        }
        return shouldUpdate;
      }

      if (ctor.prototype && ctor.prototype.isPureReactComponent) {
        return !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState);
      }

      return true;
    }

    function checkClassInstance(workInProgress, ctor, newProps) {
      var instance = workInProgress.stateNode;
      {
        var name = getComponentName(ctor) || 'Component';
        var renderPresent = instance.render;

        if (!renderPresent) {
          if (ctor.prototype && typeof ctor.prototype.render === 'function') {
            warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: did you accidentally return an object from the constructor?', name);
          } else {
            warningWithoutStack$1(false, '%s(...): No `render` method found on the returned component ' + 'instance: you may have forgotten to define `render`.', name);
          }
        }

        var noGetInitialStateOnES6 = !instance.getInitialState || instance.getInitialState.isReactClassApproved || instance.state;
        !noGetInitialStateOnES6 ? warningWithoutStack$1(false, 'getInitialState was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Did you mean to define a state property instead?', name) : void 0;
        var noGetDefaultPropsOnES6 = !instance.getDefaultProps || instance.getDefaultProps.isReactClassApproved;
        !noGetDefaultPropsOnES6 ? warningWithoutStack$1(false, 'getDefaultProps was defined on %s, a plain JavaScript class. ' + 'This is only supported for classes created using React.createClass. ' + 'Use a static property to define defaultProps instead.', name) : void 0;
        var noInstancePropTypes = !instance.propTypes;
        !noInstancePropTypes ? warningWithoutStack$1(false, 'propTypes was defined as an instance property on %s. Use a static ' + 'property to define propTypes instead.', name) : void 0;
        var noInstanceContextType = !instance.contextType;
        !noInstanceContextType ? warningWithoutStack$1(false, 'contextType was defined as an instance property on %s. Use a static ' + 'property to define contextType instead.', name) : void 0;

        if (disableLegacyContext) {
          if (ctor.childContextTypes) {
            warningWithoutStack$1(false, '%s uses the legacy childContextTypes API which is no longer supported. ' + 'Use React.createContext() instead.', name);
          }

          if (ctor.contextTypes) {
            warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with static contextType instead.', name);
          }
        } else {
          var noInstanceContextTypes = !instance.contextTypes;
          !noInstanceContextTypes ? warningWithoutStack$1(false, 'contextTypes was defined as an instance property on %s. Use a static ' + 'property to define contextTypes instead.', name) : void 0;

          if (ctor.contextType && ctor.contextTypes && !didWarnAboutContextTypeAndContextTypes.has(ctor)) {
            didWarnAboutContextTypeAndContextTypes.add(ctor);
            warningWithoutStack$1(false, '%s declares both contextTypes and contextType static properties. ' + 'The legacy contextTypes property will be ignored.', name);
          }
        }

        var noComponentShouldUpdate = typeof instance.componentShouldUpdate !== 'function';
        !noComponentShouldUpdate ? warningWithoutStack$1(false, '%s has a method called ' + 'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' + 'The name is phrased as a question because the function is ' + 'expected to return a value.', name) : void 0;

        if (ctor.prototype && ctor.prototype.isPureReactComponent && typeof instance.shouldComponentUpdate !== 'undefined') {
          warningWithoutStack$1(false, '%s has a method called shouldComponentUpdate(). ' + 'shouldComponentUpdate should not be used when extending React.PureComponent. ' + 'Please extend React.Component if shouldComponentUpdate is used.', getComponentName(ctor) || 'A pure component');
        }

        var noComponentDidUnmount = typeof instance.componentDidUnmount !== 'function';
        !noComponentDidUnmount ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidUnmount(). But there is no such lifecycle method. ' + 'Did you mean componentWillUnmount()?', name) : void 0;
        var noComponentDidReceiveProps = typeof instance.componentDidReceiveProps !== 'function';
        !noComponentDidReceiveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentDidReceiveProps(). But there is no such lifecycle method. ' + 'If you meant to update the state in response to changing props, ' + 'use componentWillReceiveProps(). If you meant to fetch data or ' + 'run side-effects or mutations after React has updated the UI, use componentDidUpdate().', name) : void 0;
        var noComponentWillRecieveProps = typeof instance.componentWillRecieveProps !== 'function';
        !noComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?', name) : void 0;
        var noUnsafeComponentWillRecieveProps = typeof instance.UNSAFE_componentWillRecieveProps !== 'function';
        !noUnsafeComponentWillRecieveProps ? warningWithoutStack$1(false, '%s has a method called ' + 'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?', name) : void 0;
        var hasMutatedProps = instance.props !== newProps;
        !(instance.props === undefined || !hasMutatedProps) ? warningWithoutStack$1(false, '%s(...): When calling super() in `%s`, make sure to pass ' + "up the same props that your component's constructor was passed.", name, name) : void 0;
        var noInstanceDefaultProps = !instance.defaultProps;
        !noInstanceDefaultProps ? warningWithoutStack$1(false, 'Setting defaultProps as an instance property on %s is not supported and will be ignored.' + ' Instead, define defaultProps as a static property on %s.', name, name) : void 0;

        if (typeof instance.getSnapshotBeforeUpdate === 'function' && typeof instance.componentDidUpdate !== 'function' && !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)) {
          didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);
          warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' + 'This component defines getSnapshotBeforeUpdate() only.', getComponentName(ctor));
        }

        var noInstanceGetDerivedStateFromProps = typeof instance.getDerivedStateFromProps !== 'function';
        !noInstanceGetDerivedStateFromProps ? warningWithoutStack$1(false, '%s: getDerivedStateFromProps() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
        var noInstanceGetDerivedStateFromCatch = typeof instance.getDerivedStateFromError !== 'function';
        !noInstanceGetDerivedStateFromCatch ? warningWithoutStack$1(false, '%s: getDerivedStateFromError() is defined as an instance method ' + 'and will be ignored. Instead, declare it as a static method.', name) : void 0;
        var noStaticGetSnapshotBeforeUpdate = typeof ctor.getSnapshotBeforeUpdate !== 'function';
        !noStaticGetSnapshotBeforeUpdate ? warningWithoutStack$1(false, '%s: getSnapshotBeforeUpdate() is defined as a static method ' + 'and will be ignored. Instead, declare it as an instance method.', name) : void 0;
        var _state = instance.state;

        if (_state && (typeof _state !== 'object' || isArray$1(_state))) {
          warningWithoutStack$1(false, '%s.state: must be set to an object or null', name);
        }

        if (typeof instance.getChildContext === 'function') {
          !(typeof ctor.childContextTypes === 'object') ? warningWithoutStack$1(false, '%s.getChildContext(): childContextTypes must be defined in order to ' + 'use getChildContext().', name) : void 0;
        }
      }
    }

    function adoptClassInstance(workInProgress, instance) {
      instance.updater = classComponentUpdater;
      workInProgress.stateNode = instance; // The instance needs access to the fiber so that it can schedule updates

      set(instance, workInProgress);
      {
        instance._reactInternalInstance = fakeInternalInstance;
      }
    }

    function constructClassInstance(workInProgress, ctor, props, renderExpirationTime) {
      var isLegacyContextConsumer = false;
      var unmaskedContext = emptyContextObject;
      var context = emptyContextObject;
      var contextType = ctor.contextType;
      {
        if ('contextType' in ctor) {
          var isValid = // Allow null for conditional declaration
          contextType === null || contextType !== undefined && contextType.$$typeof === REACT_CONTEXT_TYPE && contextType._context === undefined; // Not a <Context.Consumer>

          if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {
            didWarnAboutInvalidateContextType.add(ctor);
            var addendum = '';

            if (contextType === undefined) {
              addendum = ' However, it is set to undefined. ' + 'This can be caused by a typo or by mixing up named and default imports. ' + 'This can also happen due to a circular dependency, so ' + 'try moving the createContext() call to a separate file.';
            } else if (typeof contextType !== 'object') {
              addendum = ' However, it is set to a ' + typeof contextType + '.';
            } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {
              addendum = ' Did you accidentally pass the Context.Provider instead?';
            } else if (contextType._context !== undefined) {
              // <Context.Consumer>
              addendum = ' Did you accidentally pass the Context.Consumer instead?';
            } else {
              addendum = ' However, it is set to an object with keys {' + Object.keys(contextType).join(', ') + '}.';
            }

            warningWithoutStack$1(false, '%s defines an invalid contextType. ' + 'contextType should point to the Context object returned by React.createContext().%s', getComponentName(ctor) || 'Component', addendum);
          }
        }
      }

      if (typeof contextType === 'object' && contextType !== null) {
        context = readContext(contextType);
      } else if (!disableLegacyContext) {
        unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        var contextTypes = ctor.contextTypes;
        isLegacyContextConsumer = contextTypes !== null && contextTypes !== undefined;
        context = isLegacyContextConsumer ? getMaskedContext(workInProgress, unmaskedContext) : emptyContextObject;
      } // Instantiate twice to help detect side-effects.


      {
        if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          new ctor(props, context); // eslint-disable-line no-new
        }
      }
      var instance = new ctor(props, context);
      var state = workInProgress.memoizedState = instance.state !== null && instance.state !== undefined ? instance.state : null;
      adoptClassInstance(workInProgress, instance);
      {
        if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutUninitializedState.has(componentName)) {
            didWarnAboutUninitializedState.add(componentName);
            warningWithoutStack$1(false, '`%s` uses `getDerivedStateFromProps` but its initial state is ' + '%s. This is not recommended. Instead, define the initial state by ' + 'assigning an object to `this.state` in the constructor of `%s`. ' + 'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.', componentName, instance.state === null ? 'null' : 'undefined', componentName);
          }
        } // If new component APIs are defined, "unsafe" lifecycles won't be called.
        // Warn about these lifecycles if they are present.
        // Don't warn about react-lifecycles-compat polyfilled methods though.


        if (typeof ctor.getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function') {
          var foundWillMountName = null;
          var foundWillReceivePropsName = null;
          var foundWillUpdateName = null;

          if (typeof instance.componentWillMount === 'function' && instance.componentWillMount.__suppressDeprecationWarning !== true) {
            foundWillMountName = 'componentWillMount';
          } else if (typeof instance.UNSAFE_componentWillMount === 'function') {
            foundWillMountName = 'UNSAFE_componentWillMount';
          }

          if (typeof instance.componentWillReceiveProps === 'function' && instance.componentWillReceiveProps.__suppressDeprecationWarning !== true) {
            foundWillReceivePropsName = 'componentWillReceiveProps';
          } else if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
            foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';
          }

          if (typeof instance.componentWillUpdate === 'function' && instance.componentWillUpdate.__suppressDeprecationWarning !== true) {
            foundWillUpdateName = 'componentWillUpdate';
          } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            foundWillUpdateName = 'UNSAFE_componentWillUpdate';
          }

          if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {
            var _componentName = getComponentName(ctor) || 'Component';

            var newApiName = typeof ctor.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';

            if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(_componentName)) {
              didWarnAboutLegacyLifecyclesAndDerivedState.add(_componentName);
              warningWithoutStack$1(false, 'Unsafe legacy lifecycles will not be called for components using new component APIs.\n\n' + '%s uses %s but also contains the following legacy lifecycles:%s%s%s\n\n' + 'The above lifecycles should be removed. Learn more about this warning here:\n' + 'https://fb.me/react-unsafe-component-lifecycles', _componentName, newApiName, foundWillMountName !== null ? "\n  " + foundWillMountName : '', foundWillReceivePropsName !== null ? "\n  " + foundWillReceivePropsName : '', foundWillUpdateName !== null ? "\n  " + foundWillUpdateName : '');
            }
          }
        }
      } // Cache unmasked context so we can avoid recreating masked context unless necessary.
      // ReactFiberContext usually updates this cache but can't for newly-created instances.

      if (isLegacyContextConsumer) {
        cacheContext(workInProgress, unmaskedContext, context);
      }

      return instance;
    }

    function callComponentWillMount(workInProgress, instance) {
      startPhaseTimer(workInProgress, 'componentWillMount');
      var oldState = instance.state;

      if (typeof instance.componentWillMount === 'function') {
        instance.componentWillMount();
      }

      if (typeof instance.UNSAFE_componentWillMount === 'function') {
        instance.UNSAFE_componentWillMount();
      }

      stopPhaseTimer();

      if (oldState !== instance.state) {
        {
          warningWithoutStack$1(false, '%s.componentWillMount(): Assigning directly to this.state is ' + "deprecated (except inside a component's " + 'constructor). Use setState instead.', getComponentName(workInProgress.type) || 'Component');
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    }

    function callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext) {
      var oldState = instance.state;
      startPhaseTimer(workInProgress, 'componentWillReceiveProps');

      if (typeof instance.componentWillReceiveProps === 'function') {
        instance.componentWillReceiveProps(newProps, nextContext);
      }

      if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {
        instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);
      }

      stopPhaseTimer();

      if (instance.state !== oldState) {
        {
          var componentName = getComponentName(workInProgress.type) || 'Component';

          if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {
            didWarnAboutStateAssignmentForComponent.add(componentName);
            warningWithoutStack$1(false, '%s.componentWillReceiveProps(): Assigning directly to ' + "this.state is deprecated (except inside a component's " + 'constructor). Use setState instead.', componentName);
          }
        }
        classComponentUpdater.enqueueReplaceState(instance, instance.state, null);
      }
    } // Invokes the mount life-cycles on a previously never rendered instance.


    function mountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
      {
        checkClassInstance(workInProgress, ctor, newProps);
      }
      var instance = workInProgress.stateNode;
      instance.props = newProps;
      instance.state = workInProgress.memoizedState;
      instance.refs = emptyRefsObject;
      var contextType = ctor.contextType;

      if (typeof contextType === 'object' && contextType !== null) {
        instance.context = readContext(contextType);
      } else if (disableLegacyContext) {
        instance.context = emptyContextObject;
      } else {
        var unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        instance.context = getMaskedContext(workInProgress, unmaskedContext);
      }

      {
        if (instance.state === newProps) {
          var componentName = getComponentName(ctor) || 'Component';

          if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {
            didWarnAboutDirectlyAssigningPropsToState.add(componentName);
            warningWithoutStack$1(false, '%s: It is not recommended to assign props directly to state ' + "because updates to props won't be reflected in state. " + 'In most cases, it is better to use props directly.', componentName);
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, instance);
        }

        if (warnAboutDeprecatedLifecycles) {
          ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(workInProgress, instance);
        }
      }
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        instance.state = workInProgress.memoizedState;
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        instance.state = workInProgress.memoizedState;
      } // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.


      if (typeof ctor.getDerivedStateFromProps !== 'function' && typeof instance.getSnapshotBeforeUpdate !== 'function' && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
        callComponentWillMount(workInProgress, instance); // If we had additional state updates during this life-cycle, let's
        // process them now.

        updateQueue = workInProgress.updateQueue;

        if (updateQueue !== null) {
          processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
          instance.state = workInProgress.memoizedState;
        }
      }

      if (typeof instance.componentDidMount === 'function') {
        workInProgress.effectTag |= Update;
      }
    }

    function resumeMountClassInstance(workInProgress, ctor, newProps, renderExpirationTime) {
      var instance = workInProgress.stateNode;
      var oldProps = workInProgress.memoizedProps;
      instance.props = oldProps;
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = emptyContextObject;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else if (!disableLegacyContext) {
        var nextLegacyUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (oldProps !== newProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        newState = workInProgress.memoizedState;
      }

      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillMount === 'function' || typeof instance.componentWillMount === 'function')) {
          startPhaseTimer(workInProgress, 'componentWillMount');

          if (typeof instance.componentWillMount === 'function') {
            instance.componentWillMount();
          }

          if (typeof instance.UNSAFE_componentWillMount === 'function') {
            instance.UNSAFE_componentWillMount();
          }

          stopPhaseTimer();
        }

        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidMount === 'function') {
          workInProgress.effectTag |= Update;
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    } // Invokes the update life-cycles and returns false if it shouldn't rerender.


    function updateClassInstance(current, workInProgress, ctor, newProps, renderExpirationTime) {
      var instance = workInProgress.stateNode;
      var oldProps = workInProgress.memoizedProps;
      instance.props = workInProgress.type === workInProgress.elementType ? oldProps : resolveDefaultProps(workInProgress.type, oldProps);
      var oldContext = instance.context;
      var contextType = ctor.contextType;
      var nextContext = emptyContextObject;

      if (typeof contextType === 'object' && contextType !== null) {
        nextContext = readContext(contextType);
      } else if (!disableLegacyContext) {
        var nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);
        nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);
      }

      var getDerivedStateFromProps = ctor.getDerivedStateFromProps;
      var hasNewLifecycles = typeof getDerivedStateFromProps === 'function' || typeof instance.getSnapshotBeforeUpdate === 'function'; // Note: During these life-cycles, instance.props/instance.state are what
      // ever the previously attempted to render - not the "current". However,
      // during componentDidUpdate we pass the "current" props.
      // In order to support react-lifecycles-compat polyfilled components,
      // Unsafe lifecycles should not be invoked for components using the new APIs.

      if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillReceiveProps === 'function' || typeof instance.componentWillReceiveProps === 'function')) {
        if (oldProps !== newProps || oldContext !== nextContext) {
          callComponentWillReceiveProps(workInProgress, instance, newProps, nextContext);
        }
      }

      resetHasForceUpdateBeforeProcessing();
      var oldState = workInProgress.memoizedState;
      var newState = instance.state = oldState;
      var updateQueue = workInProgress.updateQueue;

      if (updateQueue !== null) {
        processUpdateQueue(workInProgress, updateQueue, newProps, instance, renderExpirationTime);
        newState = workInProgress.memoizedState;
      }

      if (oldProps === newProps && oldState === newState && !hasContextChanged() && !checkHasForceUpdateAfterProcessing()) {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Snapshot;
          }
        }

        return false;
      }

      if (typeof getDerivedStateFromProps === 'function') {
        applyDerivedStateFromProps(workInProgress, ctor, getDerivedStateFromProps, newProps);
        newState = workInProgress.memoizedState;
      }

      var shouldUpdate = checkHasForceUpdateAfterProcessing() || checkShouldComponentUpdate(workInProgress, ctor, oldProps, newProps, oldState, newState, nextContext);

      if (shouldUpdate) {
        // In order to support react-lifecycles-compat polyfilled components,
        // Unsafe lifecycles should not be invoked for components using the new APIs.
        if (!hasNewLifecycles && (typeof instance.UNSAFE_componentWillUpdate === 'function' || typeof instance.componentWillUpdate === 'function')) {
          startPhaseTimer(workInProgress, 'componentWillUpdate');

          if (typeof instance.componentWillUpdate === 'function') {
            instance.componentWillUpdate(newProps, newState, nextContext);
          }

          if (typeof instance.UNSAFE_componentWillUpdate === 'function') {
            instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);
          }

          stopPhaseTimer();
        }

        if (typeof instance.componentDidUpdate === 'function') {
          workInProgress.effectTag |= Update;
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          workInProgress.effectTag |= Snapshot;
        }
      } else {
        // If an update was already in progress, we should schedule an Update
        // effect even though we're bailing out, so that cWU/cDU are called.
        if (typeof instance.componentDidUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Update;
          }
        }

        if (typeof instance.getSnapshotBeforeUpdate === 'function') {
          if (oldProps !== current.memoizedProps || oldState !== current.memoizedState) {
            workInProgress.effectTag |= Snapshot;
          }
        } // If shouldComponentUpdate returned false, we should still update the
        // memoized props/state to indicate that this work can be reused.


        workInProgress.memoizedProps = newProps;
        workInProgress.memoizedState = newState;
      } // Update the existing instance's state, props, and context pointers even
      // if shouldComponentUpdate returns false.


      instance.props = newProps;
      instance.state = newState;
      instance.context = nextContext;
      return shouldUpdate;
    }

    var didWarnAboutMaps;
    var didWarnAboutGenerators;
    var didWarnAboutStringRefs;
    var ownerHasKeyUseWarning;
    var ownerHasFunctionTypeWarning;

    var warnForMissingKey = function (child) {};

    {
      didWarnAboutMaps = false;
      didWarnAboutGenerators = false;
      didWarnAboutStringRefs = {};
      /**
       * Warn if there's no key explicitly set on dynamic arrays of children or
       * object keys are not valid. This allows us to keep track of children between
       * updates.
       */

      ownerHasKeyUseWarning = {};
      ownerHasFunctionTypeWarning = {};

      warnForMissingKey = function (child) {
        if (child === null || typeof child !== 'object') {
          return;
        }

        if (!child._store || child._store.validated || child.key != null) {
          return;
        }

        if (!(typeof child._store === 'object')) {
          {
            throw Error("React Component in warnForMissingKey should have a _store. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        child._store.validated = true;
        var currentComponentErrorInfo = 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.' + getCurrentFiberStackInDev();

        if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
          return;
        }

        ownerHasKeyUseWarning[currentComponentErrorInfo] = true;
        warning$1(false, 'Each child in a list should have a unique ' + '"key" prop. See https://fb.me/react-warning-keys for ' + 'more information.');
      };
    }
    var isArray = Array.isArray;

    function coerceRef(returnFiber, current$$1, element) {
      var mixedRef = element.ref;

      if (mixedRef !== null && typeof mixedRef !== 'function' && typeof mixedRef !== 'object') {
        {
          // TODO: Clean this up once we turn on the string ref warning for
          // everyone, because the strict mode case will no longer be relevant
          if (returnFiber.mode & StrictMode || warnAboutStringRefs) {
            var componentName = getComponentName(returnFiber.type) || 'Component';

            if (!didWarnAboutStringRefs[componentName]) {
              if (warnAboutStringRefs) {
                warningWithoutStack$1(false, 'Component "%s" contains the string ref "%s". Support for string refs ' + 'will be removed in a future major release. We recommend using ' + 'useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', componentName, mixedRef, getStackByFiberInDevAndProd(returnFiber));
              } else {
                warningWithoutStack$1(false, 'A string ref, "%s", has been found within a strict mode tree. ' + 'String refs are a source of potential bugs and should be avoided. ' + 'We recommend using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-string-ref%s', mixedRef, getStackByFiberInDevAndProd(returnFiber));
              }

              didWarnAboutStringRefs[componentName] = true;
            }
          }
        }

        if (element._owner) {
          var owner = element._owner;
          var inst;

          if (owner) {
            var ownerFiber = owner;

            if (!(ownerFiber.tag === ClassComponent)) {
              {
                throw Error("Function components cannot have refs. Did you mean to use React.forwardRef()?");
              }
            }

            inst = ownerFiber.stateNode;
          }

          if (!inst) {
            {
              throw Error("Missing owner for string ref " + mixedRef + ". This error is likely caused by a bug in React. Please file an issue.");
            }
          }

          var stringRef = '' + mixedRef; // Check if previous string ref matches new string ref

          if (current$$1 !== null && current$$1.ref !== null && typeof current$$1.ref === 'function' && current$$1.ref._stringRef === stringRef) {
            return current$$1.ref;
          }

          var ref = function (value) {
            var refs = inst.refs;

            if (refs === emptyRefsObject) {
              // This is a lazy pooled frozen object, so we need to initialize.
              refs = inst.refs = {};
            }

            if (value === null) {
              delete refs[stringRef];
            } else {
              refs[stringRef] = value;
            }
          };

          ref._stringRef = stringRef;
          return ref;
        } else {
          if (!(typeof mixedRef === 'string')) {
            {
              throw Error("Expected ref to be a function, a string, an object returned by React.createRef(), or null.");
            }
          }

          if (!element._owner) {
            {
              throw Error("Element ref was specified as a string (" + mixedRef + ") but no owner was set. This could happen for one of the following reasons:\n1. You may be adding a ref to a function component\n2. You may be adding a ref to a component that was not created inside a component's render method\n3. You have multiple copies of React loaded\nSee https://fb.me/react-refs-must-have-owner for more information.");
            }
          }
        }
      }

      return mixedRef;
    }

    function throwOnInvalidObjectType(returnFiber, newChild) {
      if (returnFiber.type !== 'textarea') {
        var addendum = '';
        {
          addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + getCurrentFiberStackInDev();
        }
        {
          {
            throw Error("Objects are not valid as a React child (found: " + (Object.prototype.toString.call(newChild) === '[object Object]' ? 'object with keys {' + Object.keys(newChild).join(', ') + '}' : newChild) + ")." + addendum);
          }
        }
      }
    }

    function warnOnFunctionType() {
      var currentComponentErrorInfo = 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.' + getCurrentFiberStackInDev();

      if (ownerHasFunctionTypeWarning[currentComponentErrorInfo]) {
        return;
      }

      ownerHasFunctionTypeWarning[currentComponentErrorInfo] = true;
      warning$1(false, 'Functions are not valid as a React child. This may happen if ' + 'you return a Component instead of <Component /> from render. ' + 'Or maybe you meant to call this function rather than return it.');
    } // This wrapper function exists because I expect to clone the code in each path
    // to be able to optimize each path individually by branching early. This needs
    // a compiler or we can do it manually. Helpers that don't need this branching
    // live outside of this function.


    function ChildReconciler(shouldTrackSideEffects) {
      function deleteChild(returnFiber, childToDelete) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return;
        } // Deletions are added in reversed order so we add it to the front.
        // At this point, the return fiber's effect list is empty except for
        // deletions, so we can just append the deletion to the list. The remaining
        // effects aren't added until the complete phase. Once we implement
        // resuming, this may not be true.


        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = childToDelete;
          returnFiber.lastEffect = childToDelete;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
        }

        childToDelete.nextEffect = null;
        childToDelete.effectTag = Deletion;
      }

      function deleteRemainingChildren(returnFiber, currentFirstChild) {
        if (!shouldTrackSideEffects) {
          // Noop.
          return null;
        } // TODO: For the shouldClone case, this could be micro-optimized a bit by
        // assuming that after the first child we've already added everything.


        var childToDelete = currentFirstChild;

        while (childToDelete !== null) {
          deleteChild(returnFiber, childToDelete);
          childToDelete = childToDelete.sibling;
        }

        return null;
      }

      function mapRemainingChildren(returnFiber, currentFirstChild) {
        // Add the remaining children to a temporary map so that we can find them by
        // keys quickly. Implicit (null) keys get added to this set with their index
        // instead.
        var existingChildren = new Map();
        var existingChild = currentFirstChild;

        while (existingChild !== null) {
          if (existingChild.key !== null) {
            existingChildren.set(existingChild.key, existingChild);
          } else {
            existingChildren.set(existingChild.index, existingChild);
          }

          existingChild = existingChild.sibling;
        }

        return existingChildren;
      }

      function useFiber(fiber, pendingProps, expirationTime) {
        // We currently set sibling to null and index to 0 here because it is easy
        // to forget to do before returning it. E.g. for the single child case.
        var clone = createWorkInProgress(fiber, pendingProps, expirationTime);
        clone.index = 0;
        clone.sibling = null;
        return clone;
      }

      function placeChild(newFiber, lastPlacedIndex, newIndex) {
        newFiber.index = newIndex;

        if (!shouldTrackSideEffects) {
          // Noop.
          return lastPlacedIndex;
        }

        var current$$1 = newFiber.alternate;

        if (current$$1 !== null) {
          var oldIndex = current$$1.index;

          if (oldIndex < lastPlacedIndex) {
            // This is a move.
            newFiber.effectTag = Placement;
            return lastPlacedIndex;
          } else {
            // This item can stay in place.
            return oldIndex;
          }
        } else {
          // This is an insertion.
          newFiber.effectTag = Placement;
          return lastPlacedIndex;
        }
      }

      function placeSingleChild(newFiber) {
        // This is simpler for the single child case. We only need to do a
        // placement for inserting new children.
        if (shouldTrackSideEffects && newFiber.alternate === null) {
          newFiber.effectTag = Placement;
        }

        return newFiber;
      }

      function updateTextNode(returnFiber, current$$1, textContent, expirationTime) {
        if (current$$1 === null || current$$1.tag !== HostText) {
          // Insert
          var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, textContent, expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateElement(returnFiber, current$$1, element, expirationTime) {
        if (current$$1 !== null && (current$$1.elementType === element.type || // Keep this check inline so it only runs on the false path:
        isCompatibleFamilyForHotReloading(current$$1, element))) {
          // Move based on index
          var existing = useFiber(current$$1, element.props, expirationTime);
          existing.ref = coerceRef(returnFiber, current$$1, element);
          existing.return = returnFiber;
          {
            existing._debugSource = element._source;
            existing._debugOwner = element._owner;
          }
          return existing;
        } else {
          // Insert
          var created = createFiberFromElement(element, returnFiber.mode, expirationTime);
          created.ref = coerceRef(returnFiber, current$$1, element);
          created.return = returnFiber;
          return created;
        }
      }

      function updatePortal(returnFiber, current$$1, portal, expirationTime) {
        if (current$$1 === null || current$$1.tag !== HostPortal || current$$1.stateNode.containerInfo !== portal.containerInfo || current$$1.stateNode.implementation !== portal.implementation) {
          // Insert
          var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, portal.children || [], expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function updateFragment(returnFiber, current$$1, fragment, expirationTime, key) {
        if (current$$1 === null || current$$1.tag !== Fragment) {
          // Insert
          var created = createFiberFromFragment(fragment, returnFiber.mode, expirationTime, key);
          created.return = returnFiber;
          return created;
        } else {
          // Update
          var existing = useFiber(current$$1, fragment, expirationTime);
          existing.return = returnFiber;
          return existing;
        }
      }

      function createChild(returnFiber, newChild, expirationTime) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          var created = createFiberFromText('' + newChild, returnFiber.mode, expirationTime);
          created.return = returnFiber;
          return created;
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _created = createFiberFromElement(newChild, returnFiber.mode, expirationTime);

                _created.ref = coerceRef(returnFiber, null, newChild);
                _created.return = returnFiber;
                return _created;
              }

            case REACT_PORTAL_TYPE:
              {
                var _created2 = createFiberFromPortal(newChild, returnFiber.mode, expirationTime);

                _created2.return = returnFiber;
                return _created2;
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            var _created3 = createFiberFromFragment(newChild, returnFiber.mode, expirationTime, null);

            _created3.return = returnFiber;
            return _created3;
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }

      function updateSlot(returnFiber, oldFiber, newChild, expirationTime) {
        // Update the fiber if the keys match, otherwise return null.
        var key = oldFiber !== null ? oldFiber.key : null;

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys. If the previous node is implicitly keyed
          // we can continue to replace it without aborting even if it is not a text
          // node.
          if (key !== null) {
            return null;
          }

          return updateTextNode(returnFiber, oldFiber, '' + newChild, expirationTime);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                if (newChild.key === key) {
                  if (newChild.type === REACT_FRAGMENT_TYPE) {
                    return updateFragment(returnFiber, oldFiber, newChild.props.children, expirationTime, key);
                  }

                  return updateElement(returnFiber, oldFiber, newChild, expirationTime);
                } else {
                  return null;
                }
              }

            case REACT_PORTAL_TYPE:
              {
                if (newChild.key === key) {
                  return updatePortal(returnFiber, oldFiber, newChild, expirationTime);
                } else {
                  return null;
                }
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            if (key !== null) {
              return null;
            }

            return updateFragment(returnFiber, oldFiber, newChild, expirationTime, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }

      function updateFromMap(existingChildren, returnFiber, newIdx, newChild, expirationTime) {
        if (typeof newChild === 'string' || typeof newChild === 'number') {
          // Text nodes don't have keys, so we neither have to check the old nor
          // new node for the key. If both are text nodes, they match.
          var matchedFiber = existingChildren.get(newIdx) || null;
          return updateTextNode(returnFiber, matchedFiber, '' + newChild, expirationTime);
        }

        if (typeof newChild === 'object' && newChild !== null) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              {
                var _matchedFiber = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                if (newChild.type === REACT_FRAGMENT_TYPE) {
                  return updateFragment(returnFiber, _matchedFiber, newChild.props.children, expirationTime, newChild.key);
                }

                return updateElement(returnFiber, _matchedFiber, newChild, expirationTime);
              }

            case REACT_PORTAL_TYPE:
              {
                var _matchedFiber2 = existingChildren.get(newChild.key === null ? newIdx : newChild.key) || null;

                return updatePortal(returnFiber, _matchedFiber2, newChild, expirationTime);
              }
          }

          if (isArray(newChild) || getIteratorFn(newChild)) {
            var _matchedFiber3 = existingChildren.get(newIdx) || null;

            return updateFragment(returnFiber, _matchedFiber3, newChild, expirationTime, null);
          }

          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }
        return null;
      }
      /**
       * Warns if there is a duplicate or missing key
       */


      function warnOnInvalidKey(child, knownKeys) {
        {
          if (typeof child !== 'object' || child === null) {
            return knownKeys;
          }

          switch (child.$$typeof) {
            case REACT_ELEMENT_TYPE:
            case REACT_PORTAL_TYPE:
              warnForMissingKey(child);
              var key = child.key;

              if (typeof key !== 'string') {
                break;
              }

              if (knownKeys === null) {
                knownKeys = new Set();
                knownKeys.add(key);
                break;
              }

              if (!knownKeys.has(key)) {
                knownKeys.add(key);
                break;
              }

              warning$1(false, 'Encountered two children with the same key, `%s`. ' + 'Keys should be unique so that components maintain their identity ' + 'across updates. Non-unique keys may cause children to be ' + 'duplicated and/or omitted — the behavior is unsupported and ' + 'could change in a future version.', key);
              break;

            default:
              break;
          }
        }
        return knownKeys;
      }

      function reconcileChildrenArray(returnFiber, currentFirstChild, newChildren, expirationTime) {
        // This algorithm can't optimize by searching from both ends since we
        // don't have backpointers on fibers. I'm trying to see how far we can get
        // with that model. If it ends up not being worth the tradeoffs, we can
        // add it later.
        // Even with a two ended optimization, we'd want to optimize for the case
        // where there are few changes and brute force the comparison instead of
        // going for the Map. It'd like to explore hitting that path first in
        // forward-only mode and only go for the Map once we notice that we need
        // lots of look ahead. This doesn't handle reversal as well as two ended
        // search but that's unusual. Besides, for the two ended optimization to
        // work on Iterables, we'd need to copy the whole set.
        // In this first iteration, we'll just live with hitting the bad case
        // (adding everything to a Map) in for every insert/move.
        // If you change this code, also update reconcileChildrenIterator() which
        // uses the same algorithm.
        {
          // First, validate keys.
          var knownKeys = null;

          for (var i = 0; i < newChildren.length; i++) {
            var child = newChildren[i];
            knownKeys = warnOnInvalidKey(child, knownKeys);
          }
        }
        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;

        for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, newChildren[newIdx], expirationTime);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (oldFiber === null) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (newIdx === newChildren.length) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; newIdx < newChildren.length; newIdx++) {
            var _newFiber = createChild(returnFiber, newChildren[newIdx], expirationTime);

            if (_newFiber === null) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber;
            } else {
              previousNewFiber.sibling = _newFiber;
            }

            previousNewFiber = _newFiber;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; newIdx < newChildren.length; newIdx++) {
          var _newFiber2 = updateFromMap(existingChildren, returnFiber, newIdx, newChildren[newIdx], expirationTime);

          if (_newFiber2 !== null) {
            if (shouldTrackSideEffects) {
              if (_newFiber2.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber2.key === null ? newIdx : _newFiber2.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber2, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber2;
            } else {
              previousNewFiber.sibling = _newFiber2;
            }

            previousNewFiber = _newFiber2;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileChildrenIterator(returnFiber, currentFirstChild, newChildrenIterable, expirationTime) {
        // This is the same implementation as reconcileChildrenArray(),
        // but using the iterator instead.
        var iteratorFn = getIteratorFn(newChildrenIterable);

        if (!(typeof iteratorFn === 'function')) {
          {
            throw Error("An object is not an iterable. This error is likely caused by a bug in React. Please file an issue.");
          }
        }

        {
          // We don't support rendering Generators because it's a mutation.
          // See https://github.com/facebook/react/issues/12995
          if (typeof Symbol === 'function' && // $FlowFixMe Flow doesn't know about toStringTag
          newChildrenIterable[Symbol.toStringTag] === 'Generator') {
            !didWarnAboutGenerators ? warning$1(false, 'Using Generators as children is unsupported and will likely yield ' + 'unexpected results because enumerating a generator mutates it. ' + 'You may convert it to an array with `Array.from()` or the ' + '`[...spread]` operator before rendering. Keep in mind ' + 'you might need to polyfill these features for older browsers.') : void 0;
            didWarnAboutGenerators = true;
          } // Warn about using Maps as children


          if (newChildrenIterable.entries === iteratorFn) {
            !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
            didWarnAboutMaps = true;
          } // First, validate keys.
          // We'll get a different iterator later for the main pass.


          var _newChildren = iteratorFn.call(newChildrenIterable);

          if (_newChildren) {
            var knownKeys = null;

            var _step = _newChildren.next();

            for (; !_step.done; _step = _newChildren.next()) {
              var child = _step.value;
              knownKeys = warnOnInvalidKey(child, knownKeys);
            }
          }
        }
        var newChildren = iteratorFn.call(newChildrenIterable);

        if (!(newChildren != null)) {
          {
            throw Error("An iterable object provided no iterator.");
          }
        }

        var resultingFirstChild = null;
        var previousNewFiber = null;
        var oldFiber = currentFirstChild;
        var lastPlacedIndex = 0;
        var newIdx = 0;
        var nextOldFiber = null;
        var step = newChildren.next();

        for (; oldFiber !== null && !step.done; newIdx++, step = newChildren.next()) {
          if (oldFiber.index > newIdx) {
            nextOldFiber = oldFiber;
            oldFiber = null;
          } else {
            nextOldFiber = oldFiber.sibling;
          }

          var newFiber = updateSlot(returnFiber, oldFiber, step.value, expirationTime);

          if (newFiber === null) {
            // TODO: This breaks on empty slots like null children. That's
            // unfortunate because it triggers the slow path all the time. We need
            // a better way to communicate whether this was a miss or null,
            // boolean, undefined, etc.
            if (oldFiber === null) {
              oldFiber = nextOldFiber;
            }

            break;
          }

          if (shouldTrackSideEffects) {
            if (oldFiber && newFiber.alternate === null) {
              // We matched the slot, but we didn't reuse the existing fiber, so we
              // need to delete the existing child.
              deleteChild(returnFiber, oldFiber);
            }
          }

          lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);

          if (previousNewFiber === null) {
            // TODO: Move out of the loop. This only happens for the first run.
            resultingFirstChild = newFiber;
          } else {
            // TODO: Defer siblings if we're not at the right index for this slot.
            // I.e. if we had null values before, then we want to defer this
            // for each null value. However, we also don't want to call updateSlot
            // with the previous one.
            previousNewFiber.sibling = newFiber;
          }

          previousNewFiber = newFiber;
          oldFiber = nextOldFiber;
        }

        if (step.done) {
          // We've reached the end of the new children. We can delete the rest.
          deleteRemainingChildren(returnFiber, oldFiber);
          return resultingFirstChild;
        }

        if (oldFiber === null) {
          // If we don't have any more existing children we can choose a fast path
          // since the rest will all be insertions.
          for (; !step.done; newIdx++, step = newChildren.next()) {
            var _newFiber3 = createChild(returnFiber, step.value, expirationTime);

            if (_newFiber3 === null) {
              continue;
            }

            lastPlacedIndex = placeChild(_newFiber3, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              // TODO: Move out of the loop. This only happens for the first run.
              resultingFirstChild = _newFiber3;
            } else {
              previousNewFiber.sibling = _newFiber3;
            }

            previousNewFiber = _newFiber3;
          }

          return resultingFirstChild;
        } // Add all children to a key map for quick lookups.


        var existingChildren = mapRemainingChildren(returnFiber, oldFiber); // Keep scanning and use the map to restore deleted items as moves.

        for (; !step.done; newIdx++, step = newChildren.next()) {
          var _newFiber4 = updateFromMap(existingChildren, returnFiber, newIdx, step.value, expirationTime);

          if (_newFiber4 !== null) {
            if (shouldTrackSideEffects) {
              if (_newFiber4.alternate !== null) {
                // The new fiber is a work in progress, but if there exists a
                // current, that means that we reused the fiber. We need to delete
                // it from the child list so that we don't add it to the deletion
                // list.
                existingChildren.delete(_newFiber4.key === null ? newIdx : _newFiber4.key);
              }
            }

            lastPlacedIndex = placeChild(_newFiber4, lastPlacedIndex, newIdx);

            if (previousNewFiber === null) {
              resultingFirstChild = _newFiber4;
            } else {
              previousNewFiber.sibling = _newFiber4;
            }

            previousNewFiber = _newFiber4;
          }
        }

        if (shouldTrackSideEffects) {
          // Any existing children that weren't consumed above were deleted. We need
          // to add them to the deletion list.
          existingChildren.forEach(function (child) {
            return deleteChild(returnFiber, child);
          });
        }

        return resultingFirstChild;
      }

      function reconcileSingleTextNode(returnFiber, currentFirstChild, textContent, expirationTime) {
        // There's no need to check for keys on text nodes since we don't have a
        // way to define them.
        if (currentFirstChild !== null && currentFirstChild.tag === HostText) {
          // We already have an existing node so let's just update it and delete
          // the rest.
          deleteRemainingChildren(returnFiber, currentFirstChild.sibling);
          var existing = useFiber(currentFirstChild, textContent, expirationTime);
          existing.return = returnFiber;
          return existing;
        } // The existing first child is not a text node so we need to create one
        // and delete the existing ones.


        deleteRemainingChildren(returnFiber, currentFirstChild);
        var created = createFiberFromText(textContent, returnFiber.mode, expirationTime);
        created.return = returnFiber;
        return created;
      }

      function reconcileSingleElement(returnFiber, currentFirstChild, element, expirationTime) {
        var key = element.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            if (child.tag === Fragment ? element.type === REACT_FRAGMENT_TYPE : child.elementType === element.type || // Keep this check inline so it only runs on the false path:
            isCompatibleFamilyForHotReloading(child, element)) {
              deleteRemainingChildren(returnFiber, child.sibling);
              var existing = useFiber(child, element.type === REACT_FRAGMENT_TYPE ? element.props.children : element.props, expirationTime);
              existing.ref = coerceRef(returnFiber, child, element);
              existing.return = returnFiber;
              {
                existing._debugSource = element._source;
                existing._debugOwner = element._owner;
              }
              return existing;
            } else {
              deleteRemainingChildren(returnFiber, child);
              break;
            }
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        if (element.type === REACT_FRAGMENT_TYPE) {
          var created = createFiberFromFragment(element.props.children, returnFiber.mode, expirationTime, element.key);
          created.return = returnFiber;
          return created;
        } else {
          var _created4 = createFiberFromElement(element, returnFiber.mode, expirationTime);

          _created4.ref = coerceRef(returnFiber, currentFirstChild, element);
          _created4.return = returnFiber;
          return _created4;
        }
      }

      function reconcileSinglePortal(returnFiber, currentFirstChild, portal, expirationTime) {
        var key = portal.key;
        var child = currentFirstChild;

        while (child !== null) {
          // TODO: If key === null and child.key === null, then this only applies to
          // the first item in the list.
          if (child.key === key) {
            if (child.tag === HostPortal && child.stateNode.containerInfo === portal.containerInfo && child.stateNode.implementation === portal.implementation) {
              deleteRemainingChildren(returnFiber, child.sibling);
              var existing = useFiber(child, portal.children || [], expirationTime);
              existing.return = returnFiber;
              return existing;
            } else {
              deleteRemainingChildren(returnFiber, child);
              break;
            }
          } else {
            deleteChild(returnFiber, child);
          }

          child = child.sibling;
        }

        var created = createFiberFromPortal(portal, returnFiber.mode, expirationTime);
        created.return = returnFiber;
        return created;
      } // This API will tag the children with the side-effect of the reconciliation
      // itself. They will be added to the side-effect list as we pass through the
      // children and the parent.


      function reconcileChildFibers(returnFiber, currentFirstChild, newChild, expirationTime) {
        // This function is not recursive.
        // If the top level item is an array, we treat it as a set of children,
        // not as a fragment. Nested arrays on the other hand will be treated as
        // fragment nodes. Recursion happens at the normal flow.
        // Handle top level unkeyed fragments as if they were arrays.
        // This leads to an ambiguity between <>{[...]}</> and <>...</>.
        // We treat the ambiguous cases above the same.
        var isUnkeyedTopLevelFragment = typeof newChild === 'object' && newChild !== null && newChild.type === REACT_FRAGMENT_TYPE && newChild.key === null;

        if (isUnkeyedTopLevelFragment) {
          newChild = newChild.props.children;
        } // Handle object types


        var isObject = typeof newChild === 'object' && newChild !== null;

        if (isObject) {
          switch (newChild.$$typeof) {
            case REACT_ELEMENT_TYPE:
              return placeSingleChild(reconcileSingleElement(returnFiber, currentFirstChild, newChild, expirationTime));

            case REACT_PORTAL_TYPE:
              return placeSingleChild(reconcileSinglePortal(returnFiber, currentFirstChild, newChild, expirationTime));
          }
        }

        if (typeof newChild === 'string' || typeof newChild === 'number') {
          return placeSingleChild(reconcileSingleTextNode(returnFiber, currentFirstChild, '' + newChild, expirationTime));
        }

        if (isArray(newChild)) {
          return reconcileChildrenArray(returnFiber, currentFirstChild, newChild, expirationTime);
        }

        if (getIteratorFn(newChild)) {
          return reconcileChildrenIterator(returnFiber, currentFirstChild, newChild, expirationTime);
        }

        if (isObject) {
          throwOnInvalidObjectType(returnFiber, newChild);
        }

        {
          if (typeof newChild === 'function') {
            warnOnFunctionType();
          }
        }

        if (typeof newChild === 'undefined' && !isUnkeyedTopLevelFragment) {
          // If the new child is undefined, and the return fiber is a composite
          // component, throw an error. If Fiber return types are disabled,
          // we already threw above.
          switch (returnFiber.tag) {
            case ClassComponent:
              {
                {
                  var instance = returnFiber.stateNode;

                  if (instance.render._isMockFunction) {
                    // We allow auto-mocks to proceed as if they're returning null.
                    break;
                  }
                }
              }
            // Intentionally fall through to the next case, which handles both
            // functions and classes
            // eslint-disable-next-lined no-fallthrough

            case FunctionComponent:
              {
                var Component = returnFiber.type;
                {
                  {
                    throw Error((Component.displayName || Component.name || 'Component') + "(...): Nothing was returned from render. This usually means a return statement is missing. Or, to render nothing, return null.");
                  }
                }
              }
          }
        } // Remaining cases are all treated as empty.


        return deleteRemainingChildren(returnFiber, currentFirstChild);
      }

      return reconcileChildFibers;
    }

    var reconcileChildFibers = ChildReconciler(true);
    var mountChildFibers = ChildReconciler(false);

    function cloneChildFibers(current$$1, workInProgress) {
      if (!(current$$1 === null || workInProgress.child === current$$1.child)) {
        {
          throw Error("Resuming work not yet implemented.");
        }
      }

      if (workInProgress.child === null) {
        return;
      }

      var currentChild = workInProgress.child;
      var newChild = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
      workInProgress.child = newChild;
      newChild.return = workInProgress;

      while (currentChild.sibling !== null) {
        currentChild = currentChild.sibling;
        newChild = newChild.sibling = createWorkInProgress(currentChild, currentChild.pendingProps, currentChild.expirationTime);
        newChild.return = workInProgress;
      }

      newChild.sibling = null;
    } // Reset a workInProgress child set to prepare it for a second pass.


    function resetChildFibers(workInProgress, renderExpirationTime) {
      var child = workInProgress.child;

      while (child !== null) {
        resetWorkInProgress(child, renderExpirationTime);
        child = child.sibling;
      }
    }

    var NO_CONTEXT = {};
    var contextStackCursor$1 = createCursor(NO_CONTEXT);
    var contextFiberStackCursor = createCursor(NO_CONTEXT);
    var rootInstanceStackCursor = createCursor(NO_CONTEXT);

    function requiredContext(c) {
      if (!(c !== NO_CONTEXT)) {
        {
          throw Error("Expected host context to exist. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      return c;
    }

    function getRootHostContainer() {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      return rootInstance;
    }

    function pushHostContainer(fiber, nextRootInstance) {
      // Push current root instance onto the stack;
      // This allows us to reset root when portals are popped.
      push(rootInstanceStackCursor, nextRootInstance, fiber); // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.

      push(contextFiberStackCursor, fiber, fiber); // Finally, we need to push the host context to the stack.
      // However, we can't just call getRootHostContext() and push it because
      // we'd have a different number of entries on the stack depending on
      // whether getRootHostContext() throws somewhere in renderer code or not.
      // So we push an empty value first. This lets us safely unwind on errors.

      push(contextStackCursor$1, NO_CONTEXT, fiber);
      var nextRootContext = getRootHostContext(nextRootInstance); // Now that we know this function doesn't throw, replace it.

      pop(contextStackCursor$1, fiber);
      push(contextStackCursor$1, nextRootContext, fiber);
    }

    function popHostContainer(fiber) {
      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
      pop(rootInstanceStackCursor, fiber);
    }

    function getHostContext() {
      var context = requiredContext(contextStackCursor$1.current);
      return context;
    }

    function pushHostContext(fiber) {
      var rootInstance = requiredContext(rootInstanceStackCursor.current);
      var context = requiredContext(contextStackCursor$1.current);
      var nextContext = getChildHostContext(context, fiber.type, rootInstance); // Don't push this Fiber's context unless it's unique.

      if (context === nextContext) {
        return;
      } // Track the context and the Fiber that provided it.
      // This enables us to pop only Fibers that provide unique contexts.


      push(contextFiberStackCursor, fiber, fiber);
      push(contextStackCursor$1, nextContext, fiber);
    }

    function popHostContext(fiber) {
      // Do not pop unless this Fiber provided the current context.
      // pushHostContext() only pushes Fibers that provide unique contexts.
      if (contextFiberStackCursor.current !== fiber) {
        return;
      }

      pop(contextStackCursor$1, fiber);
      pop(contextFiberStackCursor, fiber);
    }

    var DefaultSuspenseContext = 0; // The Suspense Context is split into two parts. The lower bits is
    // inherited deeply down the subtree. The upper bits only affect
    // this immediate suspense boundary and gets reset each new
    // boundary or suspense list.

    var SubtreeSuspenseContextMask = 1; // Subtree Flags:
    // InvisibleParentSuspenseContext indicates that one of our parent Suspense
    // boundaries is not currently showing visible main content.
    // Either because it is already showing a fallback or is not mounted at all.
    // We can use this to determine if it is desirable to trigger a fallback at
    // the parent. If not, then we might need to trigger undesirable boundaries
    // and/or suspend the commit to avoid hiding the parent content.

    var InvisibleParentSuspenseContext = 1; // Shallow Flags:
    // ForceSuspenseFallback can be used by SuspenseList to force newly added
    // items into their fallback state during one of the render passes.

    var ForceSuspenseFallback = 2;
    var suspenseStackCursor = createCursor(DefaultSuspenseContext);

    function hasSuspenseContext(parentContext, flag) {
      return (parentContext & flag) !== 0;
    }

    function setDefaultShallowSuspenseContext(parentContext) {
      return parentContext & SubtreeSuspenseContextMask;
    }

    function setShallowSuspenseContext(parentContext, shallowContext) {
      return parentContext & SubtreeSuspenseContextMask | shallowContext;
    }

    function addSubtreeSuspenseContext(parentContext, subtreeContext) {
      return parentContext | subtreeContext;
    }

    function pushSuspenseContext(fiber, newContext) {
      push(suspenseStackCursor, newContext, fiber);
    }

    function popSuspenseContext(fiber) {
      pop(suspenseStackCursor, fiber);
    }

    function shouldCaptureSuspense(workInProgress, hasInvisibleParent) {
      // If it was the primary children that just suspended, capture and render the
      // fallback. Otherwise, don't capture and bubble to the next boundary.
      var nextState = workInProgress.memoizedState;

      if (nextState !== null) {
        if (nextState.dehydrated !== null) {
          // A dehydrated boundary always captures.
          return true;
        }

        return false;
      }

      var props = workInProgress.memoizedProps; // In order to capture, the Suspense component must have a fallback prop.

      if (props.fallback === undefined) {
        return false;
      } // Regular boundaries always capture.


      if (props.unstable_avoidThisFallback !== true) {
        return true;
      } // If it's a boundary we should avoid, then we prefer to bubble up to the
      // parent boundary if it is currently invisible.


      if (hasInvisibleParent) {
        return false;
      } // If the parent is not able to handle it, we must handle it.


      return true;
    }

    function findFirstSuspended(row) {
      var node = row;

      while (node !== null) {
        if (node.tag === SuspenseComponent) {
          var state = node.memoizedState;

          if (state !== null) {
            var dehydrated = state.dehydrated;

            if (dehydrated === null || isSuspenseInstancePending(dehydrated) || isSuspenseInstanceFallback(dehydrated)) {
              return node;
            }
          }
        } else if (node.tag === SuspenseListComponent && // revealOrder undefined can't be trusted because it don't
        // keep track of whether it suspended or not.
        node.memoizedProps.revealOrder !== undefined) {
          var didSuspend = (node.effectTag & DidCapture) !== NoEffect;

          if (didSuspend) {
            return node;
          }
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === row) {
          return null;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === row) {
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }

      return null;
    }

    var emptyObject = {};
    var isArray$2 = Array.isArray;

    function createResponderInstance(responder, responderProps, responderState, fiber) {
      return {
        fiber: fiber,
        props: responderProps,
        responder: responder,
        rootEventTypes: null,
        state: responderState
      };
    }

    function mountEventResponder$1(responder, responderProps, fiber, respondersMap, rootContainerInstance) {
      var responderState = emptyObject;
      var getInitialState = responder.getInitialState;

      if (getInitialState !== null) {
        responderState = getInitialState(responderProps);
      }

      var responderInstance = createResponderInstance(responder, responderProps, responderState, fiber);

      if (!rootContainerInstance) {
        var node = fiber;

        while (node !== null) {
          var tag = node.tag;

          if (tag === HostComponent) {
            rootContainerInstance = node.stateNode;
            break;
          } else if (tag === HostRoot) {
            rootContainerInstance = node.stateNode.containerInfo;
            break;
          }

          node = node.return;
        }
      }

      mountResponderInstance(responder, responderInstance, responderProps, responderState, rootContainerInstance);
      respondersMap.set(responder, responderInstance);
    }

    function updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance) {
      var responder;
      var props;

      if (listener) {
        responder = listener.responder;
        props = listener.props;
      }

      if (!(responder && responder.$$typeof === REACT_RESPONDER_TYPE)) {
        {
          throw Error("An invalid value was used as an event listener. Expect one or many event listeners created via React.unstable_useResponder().");
        }
      }

      var listenerProps = props;

      if (visistedResponders.has(responder)) {
        // show warning
        {
          warning$1(false, 'Duplicate event responder "%s" found in event listeners. ' + 'Event listeners passed to elements cannot use the same event responder more than once.', responder.displayName);
        }
        return;
      }

      visistedResponders.add(responder);
      var responderInstance = respondersMap.get(responder);

      if (responderInstance === undefined) {
        // Mount (happens in either complete or commit phase)
        mountEventResponder$1(responder, listenerProps, fiber, respondersMap, rootContainerInstance);
      } else {
        // Update (happens during commit phase only)
        responderInstance.props = listenerProps;
        responderInstance.fiber = fiber;
      }
    }

    function updateEventListeners(listeners, fiber, rootContainerInstance) {
      var visistedResponders = new Set();
      var dependencies = fiber.dependencies;

      if (listeners != null) {
        if (dependencies === null) {
          dependencies = fiber.dependencies = {
            expirationTime: NoWork,
            firstContext: null,
            responders: new Map()
          };
        }

        var respondersMap = dependencies.responders;

        if (respondersMap === null) {
          respondersMap = new Map();
        }

        if (isArray$2(listeners)) {
          for (var i = 0, length = listeners.length; i < length; i++) {
            var listener = listeners[i];
            updateEventListener(listener, fiber, visistedResponders, respondersMap, rootContainerInstance);
          }
        } else {
          updateEventListener(listeners, fiber, visistedResponders, respondersMap, rootContainerInstance);
        }
      }

      if (dependencies !== null) {
        var _respondersMap = dependencies.responders;

        if (_respondersMap !== null) {
          // Unmount
          var mountedResponders = Array.from(_respondersMap.keys());

          for (var _i = 0, _length = mountedResponders.length; _i < _length; _i++) {
            var mountedResponder = mountedResponders[_i];

            if (!visistedResponders.has(mountedResponder)) {
              var responderInstance = _respondersMap.get(mountedResponder);

              unmountResponderInstance(responderInstance);

              _respondersMap.delete(mountedResponder);
            }
          }
        }
      }
    }

    function createResponderListener(responder, props) {
      var eventResponderListener = {
        responder: responder,
        props: props
      };
      {
        Object.freeze(eventResponderListener);
      }
      return eventResponderListener;
    }

    var NoEffect$1 =
    /*             */
    0;
    var UnmountSnapshot =
    /*      */
    2;
    var UnmountMutation =
    /*      */
    4;
    var MountMutation =
    /*        */
    8;
    var UnmountLayout =
    /*        */
    16;
    var MountLayout =
    /*          */
    32;
    var MountPassive =
    /*         */
    64;
    var UnmountPassive =
    /*       */
    128;
    var ReactCurrentDispatcher$1 = ReactSharedInternals.ReactCurrentDispatcher;
    var ReactCurrentBatchConfig$1 = ReactSharedInternals.ReactCurrentBatchConfig;
    var didWarnAboutMismatchedHooksForComponent;
    {
      didWarnAboutMismatchedHooksForComponent = new Set();
    } // These are set right before calling the component.

    var renderExpirationTime$1 = NoWork; // The work-in-progress fiber. I've named it differently to distinguish it from
    // the work-in-progress hook.

    var currentlyRenderingFiber$1 = null; // Hooks are stored as a linked list on the fiber's memoizedState field. The
    // current hook list is the list that belongs to the current fiber. The
    // work-in-progress hook list is a new list that will be added to the
    // work-in-progress fiber.

    var currentHook = null;
    var nextCurrentHook = null;
    var firstWorkInProgressHook = null;
    var workInProgressHook = null;
    var nextWorkInProgressHook = null;
    var remainingExpirationTime = NoWork;
    var componentUpdateQueue = null;
    var sideEffectTag = 0; // Updates scheduled during render will trigger an immediate re-render at the
    // end of the current pass. We can't store these updates on the normal queue,
    // because if the work is aborted, they should be discarded. Because this is
    // a relatively rare case, we also don't want to add an additional field to
    // either the hook or queue object types. So we store them in a lazily create
    // map of queue -> render-phase updates, which are discarded once the component
    // completes without re-rendering.
    // Whether an update was scheduled during the currently executing render pass.

    var didScheduleRenderPhaseUpdate = false; // Lazily created map of render-phase updates

    var renderPhaseUpdates = null; // Counter to prevent infinite loops.

    var numberOfReRenders = 0;
    var RE_RENDER_LIMIT = 25; // In DEV, this is the name of the currently executing primitive hook

    var currentHookNameInDev = null; // In DEV, this list ensures that hooks are called in the same order between renders.
    // The list stores the order of hooks used during the initial render (mount).
    // Subsequent renders (updates) reference this list.

    var hookTypesDev = null;
    var hookTypesUpdateIndexDev = -1; // In DEV, this tracks whether currently rendering component needs to ignore
    // the dependencies for Hooks that need them (e.g. useEffect or useMemo).
    // When true, such Hooks will always be "remounted". Only used during hot reload.

    var ignorePreviousDependencies = false;

    function mountHookTypesDev() {
      {
        var hookName = currentHookNameInDev;

        if (hookTypesDev === null) {
          hookTypesDev = [hookName];
        } else {
          hookTypesDev.push(hookName);
        }
      }
    }

    function updateHookTypesDev() {
      {
        var hookName = currentHookNameInDev;

        if (hookTypesDev !== null) {
          hookTypesUpdateIndexDev++;

          if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {
            warnOnHookMismatchInDev(hookName);
          }
        }
      }
    }

    function checkDepsAreArrayDev(deps) {
      {
        if (deps !== undefined && deps !== null && !Array.isArray(deps)) {
          // Verify deps, but only on mount to avoid extra checks.
          // It's unlikely their type would change as usually you define them inline.
          warning$1(false, '%s received a final argument that is not an array (instead, received `%s`). When ' + 'specified, the final argument must be an array.', currentHookNameInDev, typeof deps);
        }
      }
    }

    function warnOnHookMismatchInDev(currentHookName) {
      {
        var componentName = getComponentName(currentlyRenderingFiber$1.type);

        if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {
          didWarnAboutMismatchedHooksForComponent.add(componentName);

          if (hookTypesDev !== null) {
            var table = '';
            var secondColumnStart = 30;

            for (var i = 0; i <= hookTypesUpdateIndexDev; i++) {
              var oldHookName = hookTypesDev[i];
              var newHookName = i === hookTypesUpdateIndexDev ? currentHookName : oldHookName;
              var row = i + 1 + ". " + oldHookName; // Extra space so second column lines up
              // lol @ IE not supporting String#repeat

              while (row.length < secondColumnStart) {
                row += ' ';
              }

              row += newHookName + '\n';
              table += row;
            }

            warning$1(false, 'React has detected a change in the order of Hooks called by %s. ' + 'This will lead to bugs and errors if not fixed. ' + 'For more information, read the Rules of Hooks: https://fb.me/rules-of-hooks\n\n' + '   Previous render            Next render\n' + '   ------------------------------------------------------\n' + '%s' + '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n', componentName, table);
          }
        }
      }
    }

    function throwInvalidHookError() {
      {
        {
          throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
        }
      }
    }

    function areHookInputsEqual(nextDeps, prevDeps) {
      {
        if (ignorePreviousDependencies) {
          // Only true when this component is being hot reloaded.
          return false;
        }
      }

      if (prevDeps === null) {
        {
          warning$1(false, '%s received a final argument during this render, but not during ' + 'the previous render. Even though the final argument is optional, ' + 'its type cannot change between renders.', currentHookNameInDev);
        }
        return false;
      }

      {
        // Don't bother comparing lengths in prod because these arrays should be
        // passed inline.
        if (nextDeps.length !== prevDeps.length) {
          warning$1(false, 'The final argument passed to %s changed size between renders. The ' + 'order and size of this array must remain constant.\n\n' + 'Previous: %s\n' + 'Incoming: %s', currentHookNameInDev, "[" + prevDeps.join(', ') + "]", "[" + nextDeps.join(', ') + "]");
        }
      }

      for (var i = 0; i < prevDeps.length && i < nextDeps.length; i++) {
        if (is$1(nextDeps[i], prevDeps[i])) {
          continue;
        }

        return false;
      }

      return true;
    }

    function renderWithHooks(current, workInProgress, Component, props, refOrContext, nextRenderExpirationTime) {
      renderExpirationTime$1 = nextRenderExpirationTime;
      currentlyRenderingFiber$1 = workInProgress;
      nextCurrentHook = current !== null ? current.memoizedState : null;
      {
        hookTypesDev = current !== null ? current._debugHookTypes : null;
        hookTypesUpdateIndexDev = -1; // Used for hot reloading:

        ignorePreviousDependencies = current !== null && current.type !== workInProgress.type;
      } // The following should have already been reset
      // currentHook = null;
      // workInProgressHook = null;
      // remainingExpirationTime = NoWork;
      // componentUpdateQueue = null;
      // didScheduleRenderPhaseUpdate = false;
      // renderPhaseUpdates = null;
      // numberOfReRenders = 0;
      // sideEffectTag = 0;
      // TODO Warn if no hooks are used at all during mount, then some are used during update.
      // Currently we will identify the update render as a mount because nextCurrentHook === null.
      // This is tricky because it's valid for certain types of components (e.g. React.lazy)
      // Using nextCurrentHook to differentiate between mount/update only works if at least one stateful hook is used.
      // Non-stateful hooks (e.g. context) don't get added to memoizedState,
      // so nextCurrentHook would be null during updates and mounts.

      {
        if (nextCurrentHook !== null) {
          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
        } else if (hookTypesDev !== null) {
          // This dispatcher handles an edge case where a component is updating,
          // but no stateful hooks have been used.
          // We want to match the production code behavior (which will use HooksDispatcherOnMount),
          // but with the extra DEV validation to ensure hooks ordering hasn't changed.
          // This dispatcher does that.
          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountWithHookTypesInDEV;
        } else {
          ReactCurrentDispatcher$1.current = HooksDispatcherOnMountInDEV;
        }
      }
      var children = Component(props, refOrContext);

      if (didScheduleRenderPhaseUpdate) {
        do {
          didScheduleRenderPhaseUpdate = false;
          numberOfReRenders += 1;
          {
            // Even when hot reloading, allow dependencies to stabilize
            // after first render to prevent infinite render phase updates.
            ignorePreviousDependencies = false;
          } // Start over from the beginning of the list

          nextCurrentHook = current !== null ? current.memoizedState : null;
          nextWorkInProgressHook = firstWorkInProgressHook;
          currentHook = null;
          workInProgressHook = null;
          componentUpdateQueue = null;
          {
            // Also validate hook order for cascading updates.
            hookTypesUpdateIndexDev = -1;
          }
          ReactCurrentDispatcher$1.current = HooksDispatcherOnUpdateInDEV;
          children = Component(props, refOrContext);
        } while (didScheduleRenderPhaseUpdate);

        renderPhaseUpdates = null;
        numberOfReRenders = 0;
      } // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.


      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher;
      var renderedWork = currentlyRenderingFiber$1;
      renderedWork.memoizedState = firstWorkInProgressHook;
      renderedWork.expirationTime = remainingExpirationTime;
      renderedWork.updateQueue = componentUpdateQueue;
      renderedWork.effectTag |= sideEffectTag;
      {
        renderedWork._debugHookTypes = hookTypesDev;
      } // This check uses currentHook so that it works the same in DEV and prod bundles.
      // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.

      var didRenderTooFewHooks = currentHook !== null && currentHook.next !== null;
      renderExpirationTime$1 = NoWork;
      currentlyRenderingFiber$1 = null;
      currentHook = null;
      nextCurrentHook = null;
      firstWorkInProgressHook = null;
      workInProgressHook = null;
      nextWorkInProgressHook = null;
      {
        currentHookNameInDev = null;
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
      }
      remainingExpirationTime = NoWork;
      componentUpdateQueue = null;
      sideEffectTag = 0; // These were reset above
      // didScheduleRenderPhaseUpdate = false;
      // renderPhaseUpdates = null;
      // numberOfReRenders = 0;

      if (!!didRenderTooFewHooks) {
        {
          throw Error("Rendered fewer hooks than expected. This may be caused by an accidental early return statement.");
        }
      }

      return children;
    }

    function bailoutHooks(current, workInProgress, expirationTime) {
      workInProgress.updateQueue = current.updateQueue;
      workInProgress.effectTag &= ~(Passive | Update);

      if (current.expirationTime <= expirationTime) {
        current.expirationTime = NoWork;
      }
    }

    function resetHooks() {
      // We can assume the previous dispatcher is always this one, since we set it
      // at the beginning of the render phase and there's no re-entrancy.
      ReactCurrentDispatcher$1.current = ContextOnlyDispatcher; // This is used to reset the state of this module when a component throws.
      // It's also called inside mountIndeterminateComponent if we determine the
      // component is a module-style component.

      renderExpirationTime$1 = NoWork;
      currentlyRenderingFiber$1 = null;
      currentHook = null;
      nextCurrentHook = null;
      firstWorkInProgressHook = null;
      workInProgressHook = null;
      nextWorkInProgressHook = null;
      {
        hookTypesDev = null;
        hookTypesUpdateIndexDev = -1;
        currentHookNameInDev = null;
      }
      remainingExpirationTime = NoWork;
      componentUpdateQueue = null;
      sideEffectTag = 0;
      didScheduleRenderPhaseUpdate = false;
      renderPhaseUpdates = null;
      numberOfReRenders = 0;
    }

    function mountWorkInProgressHook() {
      var hook = {
        memoizedState: null,
        baseState: null,
        queue: null,
        baseUpdate: null,
        next: null
      };

      if (workInProgressHook === null) {
        // This is the first hook in the list
        firstWorkInProgressHook = workInProgressHook = hook;
      } else {
        // Append to the end of the list
        workInProgressHook = workInProgressHook.next = hook;
      }

      return workInProgressHook;
    }

    function updateWorkInProgressHook() {
      // This function is used both for updates and for re-renders triggered by a
      // render phase update. It assumes there is either a current hook we can
      // clone, or a work-in-progress hook from a previous render pass that we can
      // use as a base. When we reach the end of the base list, we must switch to
      // the dispatcher used for mounts.
      if (nextWorkInProgressHook !== null) {
        // There's already a work-in-progress. Reuse it.
        workInProgressHook = nextWorkInProgressHook;
        nextWorkInProgressHook = workInProgressHook.next;
        currentHook = nextCurrentHook;
        nextCurrentHook = currentHook !== null ? currentHook.next : null;
      } else {
        // Clone from the current hook.
        if (!(nextCurrentHook !== null)) {
          {
            throw Error("Rendered more hooks than during the previous render.");
          }
        }

        currentHook = nextCurrentHook;
        var newHook = {
          memoizedState: currentHook.memoizedState,
          baseState: currentHook.baseState,
          queue: currentHook.queue,
          baseUpdate: currentHook.baseUpdate,
          next: null
        };

        if (workInProgressHook === null) {
          // This is the first hook in the list.
          workInProgressHook = firstWorkInProgressHook = newHook;
        } else {
          // Append to the end of the list.
          workInProgressHook = workInProgressHook.next = newHook;
        }

        nextCurrentHook = currentHook.next;
      }

      return workInProgressHook;
    }

    function createFunctionComponentUpdateQueue() {
      return {
        lastEffect: null
      };
    }

    function basicStateReducer(state, action) {
      return typeof action === 'function' ? action(state) : action;
    }

    function mountReducer(reducer, initialArg, init) {
      var hook = mountWorkInProgressHook();
      var initialState;

      if (init !== undefined) {
        initialState = init(initialArg);
      } else {
        initialState = initialArg;
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: reducer,
        lastRenderedState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
      currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateReducer(reducer, initialArg, init) {
      var hook = updateWorkInProgressHook();
      var queue = hook.queue;

      if (!(queue !== null)) {
        {
          throw Error("Should have a queue. This is likely a bug in React. Please file an issue.");
        }
      }

      queue.lastRenderedReducer = reducer;

      if (numberOfReRenders > 0) {
        // This is a re-render. Apply the new render phase updates to the previous
        // work-in-progress hook.
        var _dispatch = queue.dispatch;

        if (renderPhaseUpdates !== null) {
          // Render phase updates are stored in a map of queue -> linked list
          var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

          if (firstRenderPhaseUpdate !== undefined) {
            renderPhaseUpdates.delete(queue);
            var newState = hook.memoizedState;
            var update = firstRenderPhaseUpdate;

            do {
              // Process this render phase update. We don't have to check the
              // priority because it will always be the same as the current
              // render's.
              var action = update.action;
              newState = reducer(newState, action);
              update = update.next;
            } while (update !== null); // Mark that the fiber performed work, but only if the new state is
            // different from the current state.


            if (!is$1(newState, hook.memoizedState)) {
              markWorkInProgressReceivedUpdate();
            }

            hook.memoizedState = newState; // Don't persist the state accumulated from the render phase updates to
            // the base state unless the queue is empty.
            // TODO: Not sure if this is the desired semantics, but it's what we
            // do for gDSFP. I can't remember why.

            if (hook.baseUpdate === queue.last) {
              hook.baseState = newState;
            }

            queue.lastRenderedState = newState;
            return [newState, _dispatch];
          }
        }

        return [hook.memoizedState, _dispatch];
      } // The last update in the entire queue


      var last = queue.last; // The last update that is part of the base state.

      var baseUpdate = hook.baseUpdate;
      var baseState = hook.baseState; // Find the first unprocessed update.

      var first;

      if (baseUpdate !== null) {
        if (last !== null) {
          // For the first update, the queue is a circular linked list where
          // `queue.last.next = queue.first`. Once the first update commits, and
          // the `baseUpdate` is no longer empty, we can unravel the list.
          last.next = null;
        }

        first = baseUpdate.next;
      } else {
        first = last !== null ? last.next : null;
      }

      if (first !== null) {
        var _newState = baseState;
        var newBaseState = null;
        var newBaseUpdate = null;
        var prevUpdate = baseUpdate;
        var _update = first;
        var didSkip = false;

        do {
          var updateExpirationTime = _update.expirationTime;

          if (updateExpirationTime < renderExpirationTime$1) {
            // Priority is insufficient. Skip this update. If this is the first
            // skipped update, the previous update/state is the new base
            // update/state.
            if (!didSkip) {
              didSkip = true;
              newBaseUpdate = prevUpdate;
              newBaseState = _newState;
            } // Update the remaining priority in the queue.


            if (updateExpirationTime > remainingExpirationTime) {
              remainingExpirationTime = updateExpirationTime;
              markUnprocessedUpdateTime(remainingExpirationTime);
            }
          } else {
            // This update does have sufficient priority.
            // Mark the event time of this update as relevant to this render pass.
            // TODO: This should ideally use the true event time of this update rather than
            // its priority which is a derived and not reverseable value.
            // TODO: We should skip this update if it was already committed but currently
            // we have no way of detecting the difference between a committed and suspended
            // update here.
            markRenderEventTimeAndConfig(updateExpirationTime, _update.suspenseConfig); // Process this update.

            if (_update.eagerReducer === reducer) {
              // If this update was processed eagerly, and its reducer matches the
              // current reducer, we can use the eagerly computed state.
              _newState = _update.eagerState;
            } else {
              var _action = _update.action;
              _newState = reducer(_newState, _action);
            }
          }

          prevUpdate = _update;
          _update = _update.next;
        } while (_update !== null && _update !== first);

        if (!didSkip) {
          newBaseUpdate = prevUpdate;
          newBaseState = _newState;
        } // Mark that the fiber performed work, but only if the new state is
        // different from the current state.


        if (!is$1(_newState, hook.memoizedState)) {
          markWorkInProgressReceivedUpdate();
        }

        hook.memoizedState = _newState;
        hook.baseUpdate = newBaseUpdate;
        hook.baseState = newBaseState;
        queue.lastRenderedState = _newState;
      }

      var dispatch = queue.dispatch;
      return [hook.memoizedState, dispatch];
    }

    function mountState(initialState) {
      var hook = mountWorkInProgressHook();

      if (typeof initialState === 'function') {
        initialState = initialState();
      }

      hook.memoizedState = hook.baseState = initialState;
      var queue = hook.queue = {
        last: null,
        dispatch: null,
        lastRenderedReducer: basicStateReducer,
        lastRenderedState: initialState
      };
      var dispatch = queue.dispatch = dispatchAction.bind(null, // Flow doesn't know this is non-null, but we do.
      currentlyRenderingFiber$1, queue);
      return [hook.memoizedState, dispatch];
    }

    function updateState(initialState) {
      return updateReducer(basicStateReducer, initialState);
    }

    function pushEffect(tag, create, destroy, deps) {
      var effect = {
        tag: tag,
        create: create,
        destroy: destroy,
        deps: deps,
        // Circular
        next: null
      };

      if (componentUpdateQueue === null) {
        componentUpdateQueue = createFunctionComponentUpdateQueue();
        componentUpdateQueue.lastEffect = effect.next = effect;
      } else {
        var lastEffect = componentUpdateQueue.lastEffect;

        if (lastEffect === null) {
          componentUpdateQueue.lastEffect = effect.next = effect;
        } else {
          var firstEffect = lastEffect.next;
          lastEffect.next = effect;
          effect.next = firstEffect;
          componentUpdateQueue.lastEffect = effect;
        }
      }

      return effect;
    }

    function mountRef(initialValue) {
      var hook = mountWorkInProgressHook();
      var ref = {
        current: initialValue
      };
      {
        Object.seal(ref);
      }
      hook.memoizedState = ref;
      return ref;
    }

    function updateRef(initialValue) {
      var hook = updateWorkInProgressHook();
      return hook.memoizedState;
    }

    function mountEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      sideEffectTag |= fiberEffectTag;
      hook.memoizedState = pushEffect(hookEffectTag, create, undefined, nextDeps);
    }

    function updateEffectImpl(fiberEffectTag, hookEffectTag, create, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var destroy = undefined;

      if (currentHook !== null) {
        var prevEffect = currentHook.memoizedState;
        destroy = prevEffect.destroy;

        if (nextDeps !== null) {
          var prevDeps = prevEffect.deps;

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            pushEffect(NoEffect$1, create, destroy, nextDeps);
            return;
          }
        }
      }

      sideEffectTag |= fiberEffectTag;
      hook.memoizedState = pushEffect(hookEffectTag, create, destroy, nextDeps);
    }

    function mountEffect(create, deps) {
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        }
      }
      return mountEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
    }

    function updateEffect(create, deps) {
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber$1);
        }
      }
      return updateEffectImpl(Update | Passive, UnmountPassive | MountPassive, create, deps);
    }

    function mountLayoutEffect(create, deps) {
      return mountEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
    }

    function updateLayoutEffect(create, deps) {
      return updateEffectImpl(Update, UnmountMutation | MountLayout, create, deps);
    }

    function imperativeHandleEffect(create, ref) {
      if (typeof ref === 'function') {
        var refCallback = ref;

        var _inst = create();

        refCallback(_inst);
        return function () {
          refCallback(null);
        };
      } else if (ref !== null && ref !== undefined) {
        var refObject = ref;
        {
          !refObject.hasOwnProperty('current') ? warning$1(false, 'Expected useImperativeHandle() first argument to either be a ' + 'ref callback or React.createRef() object. Instead received: %s.', 'an object with keys {' + Object.keys(refObject).join(', ') + '}') : void 0;
        }

        var _inst2 = create();

        refObject.current = _inst2;
        return function () {
          refObject.current = null;
        };
      }
    }

    function mountImperativeHandle(ref, create, deps) {
      {
        !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return mountEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function updateImperativeHandle(ref, create, deps) {
      {
        !(typeof create === 'function') ? warning$1(false, 'Expected useImperativeHandle() second argument to be a function ' + 'that creates a handle. Instead received: %s.', create !== null ? typeof create : 'null') : void 0;
      } // TODO: If deps are provided, should we skip comparing the ref itself?

      var effectDeps = deps !== null && deps !== undefined ? deps.concat([ref]) : null;
      return updateEffectImpl(Update, UnmountMutation | MountLayout, imperativeHandleEffect.bind(null, create, ref), effectDeps);
    }

    function mountDebugValue(value, formatterFn) {// This hook is normally a no-op.
      // The react-debug-hooks package injects its own implementation
      // so that e.g. DevTools can display custom hook values.
    }

    var updateDebugValue = mountDebugValue;

    function mountCallback(callback, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function updateCallback(callback, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      hook.memoizedState = [callback, nextDeps];
      return callback;
    }

    function mountMemo(nextCreate, deps) {
      var hook = mountWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    }

    function updateMemo(nextCreate, deps) {
      var hook = updateWorkInProgressHook();
      var nextDeps = deps === undefined ? null : deps;
      var prevState = hook.memoizedState;

      if (prevState !== null) {
        // Assume these are defined. If they're not, areHookInputsEqual will warn.
        if (nextDeps !== null) {
          var prevDeps = prevState[1];

          if (areHookInputsEqual(nextDeps, prevDeps)) {
            return prevState[0];
          }
        }
      }

      var nextValue = nextCreate();
      hook.memoizedState = [nextValue, nextDeps];
      return nextValue;
    }

    function mountDeferredValue(value, config) {
      var _mountState = mountState(value),
          prevValue = _mountState[0],
          setValue = _mountState[1];

      mountEffect(function () {
        Scheduler.unstable_next(function () {
          var previousConfig = ReactCurrentBatchConfig$1.suspense;
          ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

          try {
            setValue(value);
          } finally {
            ReactCurrentBatchConfig$1.suspense = previousConfig;
          }
        });
      }, [value, config]);
      return prevValue;
    }

    function updateDeferredValue(value, config) {
      var _updateState = updateState(value),
          prevValue = _updateState[0],
          setValue = _updateState[1];

      updateEffect(function () {
        Scheduler.unstable_next(function () {
          var previousConfig = ReactCurrentBatchConfig$1.suspense;
          ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

          try {
            setValue(value);
          } finally {
            ReactCurrentBatchConfig$1.suspense = previousConfig;
          }
        });
      }, [value, config]);
      return prevValue;
    }

    function mountTransition(config) {
      var _mountState2 = mountState(false),
          isPending = _mountState2[0],
          setPending = _mountState2[1];

      var startTransition = mountCallback(function (callback) {
        setPending(true);
        Scheduler.unstable_next(function () {
          var previousConfig = ReactCurrentBatchConfig$1.suspense;
          ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

          try {
            setPending(false);
            callback();
          } finally {
            ReactCurrentBatchConfig$1.suspense = previousConfig;
          }
        });
      }, [config, isPending]);
      return [startTransition, isPending];
    }

    function updateTransition(config) {
      var _updateState2 = updateState(false),
          isPending = _updateState2[0],
          setPending = _updateState2[1];

      var startTransition = updateCallback(function (callback) {
        setPending(true);
        Scheduler.unstable_next(function () {
          var previousConfig = ReactCurrentBatchConfig$1.suspense;
          ReactCurrentBatchConfig$1.suspense = config === undefined ? null : config;

          try {
            setPending(false);
            callback();
          } finally {
            ReactCurrentBatchConfig$1.suspense = previousConfig;
          }
        });
      }, [config, isPending]);
      return [startTransition, isPending];
    }

    function dispatchAction(fiber, queue, action) {
      if (!(numberOfReRenders < RE_RENDER_LIMIT)) {
        {
          throw Error("Too many re-renders. React limits the number of renders to prevent an infinite loop.");
        }
      }

      {
        !(typeof arguments[3] !== 'function') ? warning$1(false, "State updates from the useState() and useReducer() Hooks don't support the " + 'second callback argument. To execute a side effect after ' + 'rendering, declare it in the component body with useEffect().') : void 0;
      }
      var alternate = fiber.alternate;

      if (fiber === currentlyRenderingFiber$1 || alternate !== null && alternate === currentlyRenderingFiber$1) {
        // This is a render phase update. Stash it in a lazily-created map of
        // queue -> linked list of updates. After this render pass, we'll restart
        // and apply the stashed updates on top of the work-in-progress hook.
        didScheduleRenderPhaseUpdate = true;
        var update = {
          expirationTime: renderExpirationTime$1,
          suspenseConfig: null,
          action: action,
          eagerReducer: null,
          eagerState: null,
          next: null
        };
        {
          update.priority = getCurrentPriorityLevel();
        }

        if (renderPhaseUpdates === null) {
          renderPhaseUpdates = new Map();
        }

        var firstRenderPhaseUpdate = renderPhaseUpdates.get(queue);

        if (firstRenderPhaseUpdate === undefined) {
          renderPhaseUpdates.set(queue, update);
        } else {
          // Append the update to the end of the list.
          var lastRenderPhaseUpdate = firstRenderPhaseUpdate;

          while (lastRenderPhaseUpdate.next !== null) {
            lastRenderPhaseUpdate = lastRenderPhaseUpdate.next;
          }

          lastRenderPhaseUpdate.next = update;
        }
      } else {
        var currentTime = requestCurrentTimeForUpdate();
        var suspenseConfig = requestCurrentSuspenseConfig();
        var expirationTime = computeExpirationForFiber(currentTime, fiber, suspenseConfig);
        var _update2 = {
          expirationTime: expirationTime,
          suspenseConfig: suspenseConfig,
          action: action,
          eagerReducer: null,
          eagerState: null,
          next: null
        };
        {
          _update2.priority = getCurrentPriorityLevel();
        } // Append the update to the end of the list.

        var last = queue.last;

        if (last === null) {
          // This is the first update. Create a circular list.
          _update2.next = _update2;
        } else {
          var first = last.next;

          if (first !== null) {
            // Still circular.
            _update2.next = first;
          }

          last.next = _update2;
        }

        queue.last = _update2;

        if (fiber.expirationTime === NoWork && (alternate === null || alternate.expirationTime === NoWork)) {
          // The queue is currently empty, which means we can eagerly compute the
          // next state before entering the render phase. If the new state is the
          // same as the current state, we may be able to bail out entirely.
          var lastRenderedReducer = queue.lastRenderedReducer;

          if (lastRenderedReducer !== null) {
            var prevDispatcher;
            {
              prevDispatcher = ReactCurrentDispatcher$1.current;
              ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;
            }

            try {
              var currentState = queue.lastRenderedState;
              var eagerState = lastRenderedReducer(currentState, action); // Stash the eagerly computed state, and the reducer used to compute
              // it, on the update object. If the reducer hasn't changed by the
              // time we enter the render phase, then the eager state can be used
              // without calling the reducer again.

              _update2.eagerReducer = lastRenderedReducer;
              _update2.eagerState = eagerState;

              if (is$1(eagerState, currentState)) {
                // Fast path. We can bail out without scheduling React to re-render.
                // It's still possible that we'll need to rebase this update later,
                // if the component re-renders for a different reason and by that
                // time the reducer has changed.
                return;
              }
            } catch (error) {// Suppress the error. It will throw again in the render phase.
            } finally {
              {
                ReactCurrentDispatcher$1.current = prevDispatcher;
              }
            }
          }
        }

        {
          // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
          if ('undefined' !== typeof jest) {
            warnIfNotScopedWithMatchingAct(fiber);
            warnIfNotCurrentlyActingUpdatesInDev(fiber);
          }
        }
        scheduleWork(fiber, expirationTime);
      }
    }

    var ContextOnlyDispatcher = {
      readContext: readContext,
      useCallback: throwInvalidHookError,
      useContext: throwInvalidHookError,
      useEffect: throwInvalidHookError,
      useImperativeHandle: throwInvalidHookError,
      useLayoutEffect: throwInvalidHookError,
      useMemo: throwInvalidHookError,
      useReducer: throwInvalidHookError,
      useRef: throwInvalidHookError,
      useState: throwInvalidHookError,
      useDebugValue: throwInvalidHookError,
      useResponder: throwInvalidHookError,
      useDeferredValue: throwInvalidHookError,
      useTransition: throwInvalidHookError
    };
    var HooksDispatcherOnMountInDEV = null;
    var HooksDispatcherOnMountWithHookTypesInDEV = null;
    var HooksDispatcherOnUpdateInDEV = null;
    var InvalidNestedHooksDispatcherOnMountInDEV = null;
    var InvalidNestedHooksDispatcherOnUpdateInDEV = null;
    {
      var warnInvalidContextAccess = function () {
        warning$1(false, 'Context can only be read while React is rendering. ' + 'In classes, you can read it in the render method or getDerivedStateFromProps. ' + 'In function components, you can read it directly in the function body, but not ' + 'inside Hooks like useReducer() or useMemo().');
      };

      var warnInvalidHookAccess = function () {
        warning$1(false, 'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' + 'You can only call Hooks at the top level of your React function. ' + 'For more information, see ' + 'https://fb.me/rules-of-hooks');
      };

      HooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          mountHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          mountHookTypesDev();
          checkDepsAreArrayDev(deps);
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          mountHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          mountHookTypesDev();
          return mountDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          mountHookTypesDev();
          return createResponderListener(responder, props);
        },
        useDeferredValue: function (value, config) {
          currentHookNameInDev = 'useDeferredValue';
          mountHookTypesDev();
          return mountDeferredValue(value, config);
        },
        useTransition: function (config) {
          currentHookNameInDev = 'useTransition';
          mountHookTypesDev();
          return mountTransition(config);
        }
      };
      HooksDispatcherOnMountWithHookTypesInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          updateHookTypesDev();
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          updateHookTypesDev();
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          updateHookTypesDev();
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          updateHookTypesDev();
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          updateHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          updateHookTypesDev();
          return mountDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          updateHookTypesDev();
          return createResponderListener(responder, props);
        },
        useDeferredValue: function (value, config) {
          currentHookNameInDev = 'useDeferredValue';
          updateHookTypesDev();
          return mountDeferredValue(value, config);
        },
        useTransition: function (config) {
          currentHookNameInDev = 'useTransition';
          updateHookTypesDev();
          return mountTransition(config);
        }
      };
      HooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          updateHookTypesDev();
          return updateRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          updateHookTypesDev();
          return updateDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          updateHookTypesDev();
          return createResponderListener(responder, props);
        },
        useDeferredValue: function (value, config) {
          currentHookNameInDev = 'useDeferredValue';
          updateHookTypesDev();
          return updateDeferredValue(value, config);
        },
        useTransition: function (config) {
          currentHookNameInDev = 'useTransition';
          updateHookTypesDev();
          return updateTransition(config);
        }
      };
      InvalidNestedHooksDispatcherOnMountInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          mountHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnMountInDEV;

          try {
            return mountState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return createResponderListener(responder, props);
        },
        useDeferredValue: function (value, config) {
          currentHookNameInDev = 'useDeferredValue';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountDeferredValue(value, config);
        },
        useTransition: function (config) {
          currentHookNameInDev = 'useTransition';
          warnInvalidHookAccess();
          mountHookTypesDev();
          return mountTransition(config);
        }
      };
      InvalidNestedHooksDispatcherOnUpdateInDEV = {
        readContext: function (context, observedBits) {
          warnInvalidContextAccess();
          return readContext(context, observedBits);
        },
        useCallback: function (callback, deps) {
          currentHookNameInDev = 'useCallback';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateCallback(callback, deps);
        },
        useContext: function (context, observedBits) {
          currentHookNameInDev = 'useContext';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return readContext(context, observedBits);
        },
        useEffect: function (create, deps) {
          currentHookNameInDev = 'useEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateEffect(create, deps);
        },
        useImperativeHandle: function (ref, create, deps) {
          currentHookNameInDev = 'useImperativeHandle';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateImperativeHandle(ref, create, deps);
        },
        useLayoutEffect: function (create, deps) {
          currentHookNameInDev = 'useLayoutEffect';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateLayoutEffect(create, deps);
        },
        useMemo: function (create, deps) {
          currentHookNameInDev = 'useMemo';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateMemo(create, deps);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useReducer: function (reducer, initialArg, init) {
          currentHookNameInDev = 'useReducer';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateReducer(reducer, initialArg, init);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useRef: function (initialValue) {
          currentHookNameInDev = 'useRef';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateRef(initialValue);
        },
        useState: function (initialState) {
          currentHookNameInDev = 'useState';
          warnInvalidHookAccess();
          updateHookTypesDev();
          var prevDispatcher = ReactCurrentDispatcher$1.current;
          ReactCurrentDispatcher$1.current = InvalidNestedHooksDispatcherOnUpdateInDEV;

          try {
            return updateState(initialState);
          } finally {
            ReactCurrentDispatcher$1.current = prevDispatcher;
          }
        },
        useDebugValue: function (value, formatterFn) {
          currentHookNameInDev = 'useDebugValue';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateDebugValue(value, formatterFn);
        },
        useResponder: function (responder, props) {
          currentHookNameInDev = 'useResponder';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return createResponderListener(responder, props);
        },
        useDeferredValue: function (value, config) {
          currentHookNameInDev = 'useDeferredValue';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateDeferredValue(value, config);
        },
        useTransition: function (config) {
          currentHookNameInDev = 'useTransition';
          warnInvalidHookAccess();
          updateHookTypesDev();
          return updateTransition(config);
        }
      };
    } // CommonJS interop named imports.

    var now$1 = Scheduler.unstable_now;
    var commitTime = 0;
    var profilerStartTime = -1;

    function getCommitTime() {
      return commitTime;
    }

    function recordCommitTime() {
      if (!enableProfilerTimer) {
        return;
      }

      commitTime = now$1();
    }

    function startProfilerTimer(fiber) {
      if (!enableProfilerTimer) {
        return;
      }

      profilerStartTime = now$1();

      if (fiber.actualStartTime < 0) {
        fiber.actualStartTime = now$1();
      }
    }

    function stopProfilerTimerIfRunning(fiber) {
      if (!enableProfilerTimer) {
        return;
      }

      profilerStartTime = -1;
    }

    function stopProfilerTimerIfRunningAndRecordDelta(fiber, overrideBaseTime) {
      if (!enableProfilerTimer) {
        return;
      }

      if (profilerStartTime >= 0) {
        var elapsedTime = now$1() - profilerStartTime;
        fiber.actualDuration += elapsedTime;

        if (overrideBaseTime) {
          fiber.selfBaseDuration = elapsedTime;
        }

        profilerStartTime = -1;
      }
    } // This may have been an insertion or a hydration.


    var hydrationParentFiber = null;
    var nextHydratableInstance = null;
    var isHydrating = false;

    function warnIfHydrating() {
      {
        !!isHydrating ? warning$1(false, 'We should not be hydrating here. This is a bug in React. Please file a bug.') : void 0;
      }
    }

    function enterHydrationState(fiber) {
      if (!supportsHydration) {
        return false;
      }

      var parentInstance = fiber.stateNode.containerInfo;
      nextHydratableInstance = getFirstHydratableChild(parentInstance);
      hydrationParentFiber = fiber;
      isHydrating = true;
      return true;
    }

    function reenterHydrationStateFromDehydratedSuspenseInstance(fiber, suspenseInstance) {
      if (!supportsHydration) {
        return false;
      }

      nextHydratableInstance = getNextHydratableSibling(suspenseInstance);
      popToNextHostParent(fiber);
      isHydrating = true;
      return true;
    }

    function deleteHydratableInstance(returnFiber, instance) {
      {
        switch (returnFiber.tag) {
          case HostRoot:
            didNotHydrateContainerInstance(returnFiber.stateNode.containerInfo, instance);
            break;

          case HostComponent:
            didNotHydrateInstance(returnFiber.type, returnFiber.memoizedProps, returnFiber.stateNode, instance);
            break;
        }
      }
      var childToDelete = createFiberFromHostInstanceForDeletion();
      childToDelete.stateNode = instance;
      childToDelete.return = returnFiber;
      childToDelete.effectTag = Deletion; // This might seem like it belongs on progressedFirstDeletion. However,
      // these children are not part of the reconciliation list of children.
      // Even if we abort and rereconcile the children, that will try to hydrate
      // again and the nodes are still in the host tree so these will be
      // recreated.

      if (returnFiber.lastEffect !== null) {
        returnFiber.lastEffect.nextEffect = childToDelete;
        returnFiber.lastEffect = childToDelete;
      } else {
        returnFiber.firstEffect = returnFiber.lastEffect = childToDelete;
      }
    }

    function insertNonHydratedInstance(returnFiber, fiber) {
      fiber.effectTag = fiber.effectTag & ~Hydrating | Placement;
      {
        switch (returnFiber.tag) {
          case HostRoot:
            {
              var parentContainer = returnFiber.stateNode.containerInfo;

              switch (fiber.tag) {
                case HostComponent:
                  var type = fiber.type;
                  var props = fiber.pendingProps;
                  didNotFindHydratableContainerInstance(parentContainer, type, props);
                  break;

                case HostText:
                  var text = fiber.pendingProps;
                  didNotFindHydratableContainerTextInstance(parentContainer, text);
                  break;

                case SuspenseComponent:
                  break;
              }

              break;
            }

          case HostComponent:
            {
              var parentType = returnFiber.type;
              var parentProps = returnFiber.memoizedProps;
              var parentInstance = returnFiber.stateNode;

              switch (fiber.tag) {
                case HostComponent:
                  var _type = fiber.type;
                  var _props = fiber.pendingProps;
                  didNotFindHydratableInstance(parentType, parentProps, parentInstance, _type, _props);
                  break;

                case HostText:
                  var _text = fiber.pendingProps;
                  didNotFindHydratableTextInstance(parentType, parentProps, parentInstance, _text);
                  break;

                case SuspenseComponent:
                  didNotFindHydratableSuspenseInstance(parentType, parentProps, parentInstance);
                  break;
              }

              break;
            }

          default:
            return;
        }
      }
    }

    function tryHydrate(fiber, nextInstance) {
      switch (fiber.tag) {
        case HostComponent:
          {
            var type = fiber.type;
            var props = fiber.pendingProps;
            var instance = canHydrateInstance(nextInstance, type, props);

            if (instance !== null) {
              fiber.stateNode = instance;
              return true;
            }

            return false;
          }

        case HostText:
          {
            var text = fiber.pendingProps;
            var textInstance = canHydrateTextInstance(nextInstance, text);

            if (textInstance !== null) {
              fiber.stateNode = textInstance;
              return true;
            }

            return false;
          }

        case SuspenseComponent:
          {
            if (enableSuspenseServerRenderer) {
              var suspenseInstance = canHydrateSuspenseInstance(nextInstance);

              if (suspenseInstance !== null) {
                var suspenseState = {
                  dehydrated: suspenseInstance,
                  retryTime: Never
                };
                fiber.memoizedState = suspenseState; // Store the dehydrated fragment as a child fiber.
                // This simplifies the code for getHostSibling and deleting nodes,
                // since it doesn't have to consider all Suspense boundaries and
                // check if they're dehydrated ones or not.

                var dehydratedFragment = createFiberFromDehydratedFragment(suspenseInstance);
                dehydratedFragment.return = fiber;
                fiber.child = dehydratedFragment;
                return true;
              }
            }

            return false;
          }

        default:
          return false;
      }
    }

    function tryToClaimNextHydratableInstance(fiber) {
      if (!isHydrating) {
        return;
      }

      var nextInstance = nextHydratableInstance;

      if (!nextInstance) {
        // Nothing to hydrate. Make it an insertion.
        insertNonHydratedInstance(hydrationParentFiber, fiber);
        isHydrating = false;
        hydrationParentFiber = fiber;
        return;
      }

      var firstAttemptedInstance = nextInstance;

      if (!tryHydrate(fiber, nextInstance)) {
        // If we can't hydrate this instance let's try the next one.
        // We use this as a heuristic. It's based on intuition and not data so it
        // might be flawed or unnecessary.
        nextInstance = getNextHydratableSibling(firstAttemptedInstance);

        if (!nextInstance || !tryHydrate(fiber, nextInstance)) {
          // Nothing to hydrate. Make it an insertion.
          insertNonHydratedInstance(hydrationParentFiber, fiber);
          isHydrating = false;
          hydrationParentFiber = fiber;
          return;
        } // We matched the next one, we'll now assume that the first one was
        // superfluous and we'll delete it. Since we can't eagerly delete it
        // we'll have to schedule a deletion. To do that, this node needs a dummy
        // fiber associated with it.


        deleteHydratableInstance(hydrationParentFiber, firstAttemptedInstance);
      }

      hydrationParentFiber = fiber;
      nextHydratableInstance = getFirstHydratableChild(nextInstance);
    }

    function prepareToHydrateHostInstance(fiber, rootContainerInstance, hostContext) {
      if (!supportsHydration) {
        {
          {
            throw Error("Expected prepareToHydrateHostInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }

      var instance = fiber.stateNode;
      var updatePayload = hydrateInstance(instance, fiber.type, fiber.memoizedProps, rootContainerInstance, hostContext, fiber); // TODO: Type this specific to this type of component.

      fiber.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
      // is a new ref we mark this as an update.

      if (updatePayload !== null) {
        return true;
      }

      return false;
    }

    function prepareToHydrateHostTextInstance(fiber) {
      if (!supportsHydration) {
        {
          {
            throw Error("Expected prepareToHydrateHostTextInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }

      var textInstance = fiber.stateNode;
      var textContent = fiber.memoizedProps;
      var shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);
      {
        if (shouldUpdate) {
          // We assume that prepareToHydrateHostTextInstance is called in a context where the
          // hydration parent is the parent host component of this host text.
          var returnFiber = hydrationParentFiber;

          if (returnFiber !== null) {
            switch (returnFiber.tag) {
              case HostRoot:
                {
                  var parentContainer = returnFiber.stateNode.containerInfo;
                  didNotMatchHydratedContainerTextInstance(parentContainer, textInstance, textContent);
                  break;
                }

              case HostComponent:
                {
                  var parentType = returnFiber.type;
                  var parentProps = returnFiber.memoizedProps;
                  var parentInstance = returnFiber.stateNode;
                  didNotMatchHydratedTextInstance(parentType, parentProps, parentInstance, textInstance, textContent);
                  break;
                }
            }
          }
        }
      }
      return shouldUpdate;
    }

    function prepareToHydrateHostSuspenseInstance(fiber) {
      if (!supportsHydration) {
        {
          {
            throw Error("Expected prepareToHydrateHostSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }

      var suspenseState = fiber.memoizedState;
      var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

      if (!suspenseInstance) {
        {
          throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      hydrateSuspenseInstance(suspenseInstance, fiber);
    }

    function skipPastDehydratedSuspenseInstance(fiber) {
      if (!supportsHydration) {
        {
          {
            throw Error("Expected skipPastDehydratedSuspenseInstance() to never be called. This error is likely caused by a bug in React. Please file an issue.");
          }
        }
      }

      var suspenseState = fiber.memoizedState;
      var suspenseInstance = suspenseState !== null ? suspenseState.dehydrated : null;

      if (!suspenseInstance) {
        {
          throw Error("Expected to have a hydrated suspense instance. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);
    }

    function popToNextHostParent(fiber) {
      var parent = fiber.return;

      while (parent !== null && parent.tag !== HostComponent && parent.tag !== HostRoot && parent.tag !== SuspenseComponent) {
        parent = parent.return;
      }

      hydrationParentFiber = parent;
    }

    function popHydrationState(fiber) {
      if (!supportsHydration) {
        return false;
      }

      if (fiber !== hydrationParentFiber) {
        // We're deeper than the current hydration context, inside an inserted
        // tree.
        return false;
      }

      if (!isHydrating) {
        // If we're not currently hydrating but we're in a hydration context, then
        // we were an insertion and now need to pop up reenter hydration of our
        // siblings.
        popToNextHostParent(fiber);
        isHydrating = true;
        return false;
      }

      var type = fiber.type; // If we have any remaining hydratable nodes, we need to delete them now.
      // We only do this deeper than head and body since they tend to have random
      // other nodes in them. We also ignore components with pure text content in
      // side of them.
      // TODO: Better heuristic.

      if (fiber.tag !== HostComponent || type !== 'head' && type !== 'body' && !shouldSetTextContent(type, fiber.memoizedProps)) {
        var nextInstance = nextHydratableInstance;

        while (nextInstance) {
          deleteHydratableInstance(fiber, nextInstance);
          nextInstance = getNextHydratableSibling(nextInstance);
        }
      }

      popToNextHostParent(fiber);

      if (fiber.tag === SuspenseComponent) {
        nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);
      } else {
        nextHydratableInstance = hydrationParentFiber ? getNextHydratableSibling(fiber.stateNode) : null;
      }

      return true;
    }

    function resetHydrationState() {
      if (!supportsHydration) {
        return;
      }

      hydrationParentFiber = null;
      nextHydratableInstance = null;
      isHydrating = false;
    }

    var ReactCurrentOwner$3 = ReactSharedInternals.ReactCurrentOwner;
    var didReceiveUpdate = false;
    var didWarnAboutBadClass;
    var didWarnAboutModulePatternComponent;
    var didWarnAboutContextTypeOnFunctionComponent;
    var didWarnAboutGetDerivedStateOnFunctionComponent;
    var didWarnAboutFunctionRefs;
    var didWarnAboutReassigningProps;
    var didWarnAboutMaxDuration;
    var didWarnAboutRevealOrder;
    var didWarnAboutTailOptions;
    var didWarnAboutDefaultPropsOnFunctionComponent;
    {
      didWarnAboutBadClass = {};
      didWarnAboutModulePatternComponent = {};
      didWarnAboutContextTypeOnFunctionComponent = {};
      didWarnAboutGetDerivedStateOnFunctionComponent = {};
      didWarnAboutFunctionRefs = {};
      didWarnAboutReassigningProps = false;
      didWarnAboutMaxDuration = false;
      didWarnAboutRevealOrder = {};
      didWarnAboutTailOptions = {};
      didWarnAboutDefaultPropsOnFunctionComponent = {};
    }

    function reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime) {
      if (current$$1 === null) {
        // If this is a fresh new component that hasn't been rendered yet, we
        // won't update its child set by applying minimal side-effects. Instead,
        // we will add them all to the child before it gets rendered. That means
        // we can optimize this reconciliation pass by not tracking side-effects.
        workInProgress.child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      } else {
        // If the current child is the same as the work in progress, it means that
        // we haven't yet started any work on these children. Therefore, we use
        // the clone algorithm to create a copy of all the current children.
        // If we had any progressed work already, that is invalid at this point so
        // let's throw it out.
        workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, nextChildren, renderExpirationTime);
      }
    }

    function forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime) {
      // This function is fork of reconcileChildren. It's used in cases where we
      // want to reconcile without matching against the existing set. This has the
      // effect of all current children being unmounted; even if the type and key
      // are the same, the old child is unmounted and a new child is created.
      //
      // To do this, we're going to go through the reconcile algorithm twice. In
      // the first pass, we schedule a deletion for all the current children by
      // passing null.
      workInProgress.child = reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime); // In the second pass, we mount the new children. The trick here is that we
      // pass null in place of where we usually pass the current child set. This has
      // the effect of remounting all children regardless of whether their their
      // identity matches.

      workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
    }

    function updateForwardRef(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens after the first render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      }
      var render = Component.render;
      var ref = workInProgress.ref; // The rest is a fork of updateFunctionComponent

      var nextChildren;
      prepareToReadContext(workInProgress, renderExpirationTime);
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);

        if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Only double-render components with Hooks
          if (workInProgress.memoizedState !== null) {
            nextChildren = renderWithHooks(current$$1, workInProgress, render, nextProps, ref, renderExpirationTime);
          }
        }

        setCurrentPhase(null);
      }

      if (current$$1 !== null && !didReceiveUpdate) {
        bailoutHooks(current$$1, workInProgress, renderExpirationTime);
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
      if (current$$1 === null) {
        var type = Component.type;

        if (isSimpleFunctionComponent(type) && Component.compare === null && // SimpleMemoComponent codepath doesn't resolve outer props either.
        Component.defaultProps === undefined) {
          var resolvedType = type;
          {
            resolvedType = resolveFunctionForHotReloading(type);
          } // If this is a plain function component without default props,
          // and with only the default shallow comparison, we upgrade it
          // to a SimpleMemoComponent to allow fast path updates.

          workInProgress.tag = SimpleMemoComponent;
          workInProgress.type = resolvedType;
          {
            validateFunctionComponentInDev(workInProgress, type);
          }
          return updateSimpleMemoComponent(current$$1, workInProgress, resolvedType, nextProps, updateExpirationTime, renderExpirationTime);
        }

        {
          var innerPropTypes = type.propTypes;

          if (innerPropTypes) {
            // Inner memo component props aren't currently validated in createElement.
            // We could move it there, but we'd still need this for lazy code path.
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(type), getCurrentFiberStackInDev);
          }
        }
        var child = createFiberFromTypeAndProps(Component.type, null, nextProps, null, workInProgress.mode, renderExpirationTime);
        child.ref = workInProgress.ref;
        child.return = workInProgress;
        workInProgress.child = child;
        return child;
      }

      {
        var _type = Component.type;
        var _innerPropTypes = _type.propTypes;

        if (_innerPropTypes) {
          // Inner memo component props aren't currently validated in createElement.
          // We could move it there, but we'd still need this for lazy code path.
          checkPropTypes(_innerPropTypes, nextProps, // Resolved props
          'prop', getComponentName(_type), getCurrentFiberStackInDev);
        }
      }
      var currentChild = current$$1.child; // This is always exactly one child

      if (updateExpirationTime < renderExpirationTime) {
        // This will be the props with resolved defaultProps,
        // unlike current.memoizedProps which will be the unresolved ones.
        var prevProps = currentChild.memoizedProps; // Default to shallow comparison

        var compare = Component.compare;
        compare = compare !== null ? compare : shallowEqual;

        if (compare(prevProps, nextProps) && current$$1.ref === workInProgress.ref) {
          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        }
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      var newChild = createWorkInProgress(currentChild, nextProps, renderExpirationTime);
      newChild.ref = workInProgress.ref;
      newChild.return = workInProgress;
      workInProgress.child = newChild;
      return newChild;
    }

    function updateSimpleMemoComponent(current$$1, workInProgress, Component, nextProps, updateExpirationTime, renderExpirationTime) {
      // TODO: current can be non-null here even if the component
      // hasn't yet mounted. This happens when the inner render suspends.
      // We'll need to figure out if this is fine or can cause issues.
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var outerMemoType = workInProgress.elementType;

          if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {
            // We warn when you define propTypes on lazy()
            // so let's just skip over it to find memo() outer wrapper.
            // Inner props for memo are validated later.
            outerMemoType = refineResolvedLazyComponent(outerMemoType);
          }

          var outerPropTypes = outerMemoType && outerMemoType.propTypes;

          if (outerPropTypes) {
            checkPropTypes(outerPropTypes, nextProps, // Resolved (SimpleMemoComponent has no defaultProps)
            'prop', getComponentName(outerMemoType), getCurrentFiberStackInDev);
          } // Inner propTypes will be validated in the function component path.

        }
      }

      if (current$$1 !== null) {
        var prevProps = current$$1.memoizedProps;

        if (shallowEqual(prevProps, nextProps) && current$$1.ref === workInProgress.ref && // Prevent bailout if the implementation changed due to hot reload:
        workInProgress.type === current$$1.type) {
          didReceiveUpdate = false;

          if (updateExpirationTime < renderExpirationTime) {
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
        }
      }

      return updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
    }

    function updateFragment(current$$1, workInProgress, renderExpirationTime) {
      var nextChildren = workInProgress.pendingProps;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateMode(current$$1, workInProgress, renderExpirationTime) {
      var nextChildren = workInProgress.pendingProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateProfiler(current$$1, workInProgress, renderExpirationTime) {
      if (enableProfilerTimer) {
        workInProgress.effectTag |= Update;
      }

      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function markRef(current$$1, workInProgress) {
      var ref = workInProgress.ref;

      if (current$$1 === null && ref !== null || current$$1 !== null && current$$1.ref !== ref) {
        // Schedule a Ref effect
        workInProgress.effectTag |= Ref;
      }
    }

    function updateFunctionComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      }
      var context;

      if (!disableLegacyContext) {
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, true);
        context = getMaskedContext(workInProgress, unmaskedContext);
      }

      var nextChildren;
      prepareToReadContext(workInProgress, renderExpirationTime);
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);

        if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
          // Only double-render components with Hooks
          if (workInProgress.memoizedState !== null) {
            nextChildren = renderWithHooks(current$$1, workInProgress, Component, nextProps, context, renderExpirationTime);
          }
        }

        setCurrentPhase(null);
      }

      if (current$$1 !== null && !didReceiveUpdate) {
        bailoutHooks(current$$1, workInProgress, renderExpirationTime);
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateClassComponent(current$$1, workInProgress, Component, nextProps, renderExpirationTime) {
      {
        if (workInProgress.type !== workInProgress.elementType) {
          // Lazy component props can't be validated in createElement
          // because they're only guaranteed to be resolved here.
          var innerPropTypes = Component.propTypes;

          if (innerPropTypes) {
            checkPropTypes(innerPropTypes, nextProps, // Resolved props
            'prop', getComponentName(Component), getCurrentFiberStackInDev);
          }
        }
      } // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      var instance = workInProgress.stateNode;
      var shouldUpdate;

      if (instance === null) {
        if (current$$1 !== null) {
          // An class component without an instance only mounts if it suspended
          // inside a non- concurrent tree, in an inconsistent state. We want to
          // tree it like a new mount, even though an empty version of it already
          // committed. Disconnect the alternate pointers.
          current$$1.alternate = null;
          workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

          workInProgress.effectTag |= Placement;
        } // In the initial pass we might need to construct the instance.


        constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
        mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
        shouldUpdate = true;
      } else if (current$$1 === null) {
        // In a resume, we'll already have an instance we can reuse.
        shouldUpdate = resumeMountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      } else {
        shouldUpdate = updateClassInstance(current$$1, workInProgress, Component, nextProps, renderExpirationTime);
      }

      var nextUnitOfWork = finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime);
      {
        var inst = workInProgress.stateNode;

        if (inst.props !== nextProps) {
          !didWarnAboutReassigningProps ? warning$1(false, 'It looks like %s is reassigning its own `this.props` while rendering. ' + 'This is not supported and can lead to confusing bugs.', getComponentName(workInProgress.type) || 'a component') : void 0;
          didWarnAboutReassigningProps = true;
        }
      }
      return nextUnitOfWork;
    }

    function finishClassComponent(current$$1, workInProgress, Component, shouldUpdate, hasContext, renderExpirationTime) {
      // Refs should update even if shouldComponentUpdate returns false
      markRef(current$$1, workInProgress);
      var didCaptureError = (workInProgress.effectTag & DidCapture) !== NoEffect;

      if (!shouldUpdate && !didCaptureError) {
        // Context providers should defer to sCU for rendering
        if (hasContext) {
          invalidateContextProvider(workInProgress, Component, false);
        }

        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }

      var instance = workInProgress.stateNode; // Rerender

      ReactCurrentOwner$3.current = workInProgress;
      var nextChildren;

      if (didCaptureError && typeof Component.getDerivedStateFromError !== 'function') {
        // If we captured an error, but getDerivedStateFrom catch is not defined,
        // unmount all the children. componentDidCatch will schedule an update to
        // re-render a fallback. This is temporary until we migrate everyone to
        // the new API.
        // TODO: Warn in a future release.
        nextChildren = null;

        if (enableProfilerTimer) {
          stopProfilerTimerIfRunning(workInProgress);
        }
      } else {
        {
          setCurrentPhase('render');
          nextChildren = instance.render();

          if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
            instance.render();
          }

          setCurrentPhase(null);
        }
      } // React DevTools reads this flag.


      workInProgress.effectTag |= PerformedWork;

      if (current$$1 !== null && didCaptureError) {
        // If we're recovering from an error, reconcile without reusing any of
        // the existing children. Conceptually, the normal children and the children
        // that are shown on error are two different sets, so we shouldn't reuse
        // normal children even if their identities match.
        forceUnmountCurrentAndReconcile(current$$1, workInProgress, nextChildren, renderExpirationTime);
      } else {
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      } // Memoize state using the values we just used to render.
      // TODO: Restructure so we never read values from the instance.


      workInProgress.memoizedState = instance.state; // The context might have changed so we need to recalculate it.

      if (hasContext) {
        invalidateContextProvider(workInProgress, Component, true);
      }

      return workInProgress.child;
    }

    function pushHostRootContext(workInProgress) {
      var root = workInProgress.stateNode;

      if (root.pendingContext) {
        pushTopLevelContextObject(workInProgress, root.pendingContext, root.pendingContext !== root.context);
      } else if (root.context) {
        // Should always be set
        pushTopLevelContextObject(workInProgress, root.context, false);
      }

      pushHostContainer(workInProgress, root.containerInfo);
    }

    function updateHostRoot(current$$1, workInProgress, renderExpirationTime) {
      pushHostRootContext(workInProgress);
      var updateQueue = workInProgress.updateQueue;

      if (!(updateQueue !== null)) {
        {
          throw Error("If the root does not have an updateQueue, we should have already bailed out. This error is likely caused by a bug in React. Please file an issue.");
        }
      }

      var nextProps = workInProgress.pendingProps;
      var prevState = workInProgress.memoizedState;
      var prevChildren = prevState !== null ? prevState.element : null;
      processUpdateQueue(workInProgress, updateQueue, nextProps, null, renderExpirationTime);
      var nextState = workInProgress.memoizedState; // Caution: React DevTools currently depends on this property
      // being called "element".

      var nextChildren = nextState.element;

      if (nextChildren === prevChildren) {
        // If the state is the same as before, that's a bailout because we had
        // no work that expires at this time.
        resetHydrationState();
        return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
      }

      var root = workInProgress.stateNode;

      if (root.hydrate && enterHydrationState(workInProgress)) {
        // If we don't have any current children this might be the first pass.
        // We always try to hydrate. If this isn't a hydration pass there won't
        // be any children to hydrate which is effectively the same thing as
        // not hydrating.
        var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
        workInProgress.child = child;
        var node = child;

        while (node) {
          // Mark each child as hydrating. This is a fast path to know whether this
          // tree is part of a hydrating tree. This is used to determine if a child
          // node has fully mounted yet, and for scheduling event replaying.
          // Conceptually this is similar to Placement in that a new subtree is
          // inserted into the React tree here. It just happens to not need DOM
          // mutations because it already exists.
          node.effectTag = node.effectTag & ~Placement | Hydrating;
          node = node.sibling;
        }
      } else {
        // Otherwise reset hydration state in case we aborted and resumed another
        // root.
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
        resetHydrationState();
      }

      return workInProgress.child;
    }

    function updateHostComponent(current$$1, workInProgress, renderExpirationTime) {
      pushHostContext(workInProgress);

      if (current$$1 === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      }

      var type = workInProgress.type;
      var nextProps = workInProgress.pendingProps;
      var prevProps = current$$1 !== null ? current$$1.memoizedProps : null;
      var nextChildren = nextProps.children;
      var isDirectTextChild = shouldSetTextContent(type, nextProps);

      if (isDirectTextChild) {
        // We special case a direct text child of a host node. This is a common
        // case. We won't handle it as a reified child. We will instead handle
        // this in the host environment that also have access to this prop. That
        // avoids allocating another HostText fiber and traversing it.
        nextChildren = null;
      } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {
        // If we're switching from a direct text child to a normal child, or to
        // empty, we need to schedule the text content to be reset.
        workInProgress.effectTag |= ContentReset;
      }

      markRef(current$$1, workInProgress); // Check the host config to see if the children are offscreen/hidden.

      if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(type, nextProps)) {
        if (enableSchedulerTracing) {
          markSpawnedWork(Never);
        } // Schedule this fiber to re-render at offscreen priority. Then bailout.


        workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
        return null;
      }

      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateHostText(current$$1, workInProgress) {
      if (current$$1 === null) {
        tryToClaimNextHydratableInstance(workInProgress);
      } // Nothing to do here. This is terminal. We'll do the completion step
      // immediately after.


      return null;
    }

    function mountLazyComponent(_current, workInProgress, elementType, updateExpirationTime, renderExpirationTime) {
      if (_current !== null) {
        // An lazy component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      }

      var props = workInProgress.pendingProps; // We can't start a User Timing measurement with correct label yet.
      // Cancel and resume right after we know the tag.

      cancelWorkTimer(workInProgress);
      var Component = readLazyComponentType(elementType); // Store the unwrapped component in the type.

      workInProgress.type = Component;
      var resolvedTag = workInProgress.tag = resolveLazyComponentTag(Component);
      startWorkTimer(workInProgress);
      var resolvedProps = resolveDefaultProps(Component, props);
      var child;

      switch (resolvedTag) {
        case FunctionComponent:
          {
            {
              validateFunctionComponentInDev(workInProgress, Component);
              workInProgress.type = Component = resolveFunctionForHotReloading(Component);
            }
            child = updateFunctionComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case ClassComponent:
          {
            {
              workInProgress.type = Component = resolveClassForHotReloading(Component);
            }
            child = updateClassComponent(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case ForwardRef:
          {
            {
              workInProgress.type = Component = resolveForwardRefForHotReloading(Component);
            }
            child = updateForwardRef(null, workInProgress, Component, resolvedProps, renderExpirationTime);
            break;
          }

        case MemoComponent:
          {
            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = Component.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, resolvedProps, // Resolved for outer only
                  'prop', getComponentName(Component), getCurrentFiberStackInDev);
                }
              }
            }
            child = updateMemoComponent(null, workInProgress, Component, resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too
            updateExpirationTime, renderExpirationTime);
            break;
          }

        default:
          {
            var hint = '';
            {
              if (Component !== null && typeof Component === 'object' && Component.$$typeof === REACT_LAZY_TYPE) {
                hint = ' Did you wrap a component in React.lazy() more than once?';
              }
            } // This message intentionally doesn't mention ForwardRef or MemoComponent
            // because the fact that it's a separate type of work is an
            // implementation detail.

            {
              {
                throw Error("Element type is invalid. Received a promise that resolves to: " + Component + ". Lazy element type must resolve to a class or function." + hint);
              }
            }
          }
      }

      return child;
    }

    function mountIncompleteClassComponent(_current, workInProgress, Component, nextProps, renderExpirationTime) {
      if (_current !== null) {
        // An incomplete component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      } // Promote the fiber to a class and try rendering again.


      workInProgress.tag = ClassComponent; // The rest of this function is a fork of `updateClassComponent`
      // Push context providers early to prevent context stack mismatches.
      // During mounting we don't know the child context yet as the instance doesn't exist.
      // We will invalidate the child context in finishClassComponent() right after rendering.

      var hasContext;

      if (isContextProvider(Component)) {
        hasContext = true;
        pushContextProvider(workInProgress);
      } else {
        hasContext = false;
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      constructClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      mountClassInstance(workInProgress, Component, nextProps, renderExpirationTime);
      return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
    }

    function mountIndeterminateComponent(_current, workInProgress, Component, renderExpirationTime) {
      if (_current !== null) {
        // An indeterminate component only mounts if it suspended inside a non-
        // concurrent tree, in an inconsistent state. We want to treat it like
        // a new mount, even though an empty version of it already committed.
        // Disconnect the alternate pointers.
        _current.alternate = null;
        workInProgress.alternate = null; // Since this is conceptually a new fiber, schedule a Placement effect

        workInProgress.effectTag |= Placement;
      }

      var props = workInProgress.pendingProps;
      var context;

      if (!disableLegacyContext) {
        var unmaskedContext = getUnmaskedContext(workInProgress, Component, false);
        context = getMaskedContext(workInProgress, unmaskedContext);
      }

      prepareToReadContext(workInProgress, renderExpirationTime);
      var value;
      {
        if (Component.prototype && typeof Component.prototype.render === 'function') {
          var componentName = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutBadClass[componentName]) {
            warningWithoutStack$1(false, "The <%s /> component appears to have a render method, but doesn't extend React.Component. " + 'This is likely to cause errors. Change %s to extend React.Component instead.', componentName, componentName);
            didWarnAboutBadClass[componentName] = true;
          }
        }

        if (workInProgress.mode & StrictMode) {
          ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);
        }

        ReactCurrentOwner$3.current = workInProgress;
        value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
      } // React DevTools reads this flag.

      workInProgress.effectTag |= PerformedWork;

      if (typeof value === 'object' && value !== null && typeof value.render === 'function' && value.$$typeof === undefined) {
        {
          var _componentName = getComponentName(Component) || 'Unknown';

          if (!didWarnAboutModulePatternComponent[_componentName]) {
            warningWithoutStack$1(false, 'The <%s /> component appears to be a function component that returns a class instance. ' + 'Change %s to a class that extends React.Component instead. ' + "If you can't use a class try assigning the prototype on the function as a workaround. " + "`%s.prototype = React.Component.prototype`. Don't use an arrow function since it " + 'cannot be called with `new` by React.', _componentName, _componentName, _componentName);
            didWarnAboutModulePatternComponent[_componentName] = true;
          }
        } // Proceed under the assumption that this is a class instance

        workInProgress.tag = ClassComponent; // Throw out any hooks that were used.

        resetHooks(); // Push context providers early to prevent context stack mismatches.
        // During mounting we don't know the child context yet as the instance doesn't exist.
        // We will invalidate the child context in finishClassComponent() right after rendering.

        var hasContext = false;

        if (isContextProvider(Component)) {
          hasContext = true;
          pushContextProvider(workInProgress);
        } else {
          hasContext = false;
        }

        workInProgress.memoizedState = value.state !== null && value.state !== undefined ? value.state : null;
        var getDerivedStateFromProps = Component.getDerivedStateFromProps;

        if (typeof getDerivedStateFromProps === 'function') {
          applyDerivedStateFromProps(workInProgress, Component, getDerivedStateFromProps, props);
        }

        adoptClassInstance(workInProgress, value);
        mountClassInstance(workInProgress, Component, props, renderExpirationTime);
        return finishClassComponent(null, workInProgress, Component, true, hasContext, renderExpirationTime);
      } else {
        // Proceed under the assumption that this is a function component
        workInProgress.tag = FunctionComponent;
        {
          if (disableLegacyContext && Component.contextTypes) {
            warningWithoutStack$1(false, '%s uses the legacy contextTypes API which is no longer supported. ' + 'Use React.createContext() with React.useContext() instead.', getComponentName(Component) || 'Unknown');
          }

          if (debugRenderPhaseSideEffectsForStrictMode && workInProgress.mode & StrictMode) {
            // Only double-render components with Hooks
            if (workInProgress.memoizedState !== null) {
              value = renderWithHooks(null, workInProgress, Component, props, context, renderExpirationTime);
            }
          }
        }
        reconcileChildren(null, workInProgress, value, renderExpirationTime);
        {
          validateFunctionComponentInDev(workInProgress, Component);
        }
        return workInProgress.child;
      }
    }

    function validateFunctionComponentInDev(workInProgress, Component) {
      if (Component) {
        !!Component.childContextTypes ? warningWithoutStack$1(false, '%s(...): childContextTypes cannot be defined on a function component.', Component.displayName || Component.name || 'Component') : void 0;
      }

      if (workInProgress.ref !== null) {
        var info = '';
        var ownerName = getCurrentFiberOwnerNameInDevOrNull();

        if (ownerName) {
          info += '\n\nCheck the render method of `' + ownerName + '`.';
        }

        var warningKey = ownerName || workInProgress._debugID || '';
        var debugSource = workInProgress._debugSource;

        if (debugSource) {
          warningKey = debugSource.fileName + ':' + debugSource.lineNumber;
        }

        if (!didWarnAboutFunctionRefs[warningKey]) {
          didWarnAboutFunctionRefs[warningKey] = true;
          warning$1(false, 'Function components cannot be given refs. ' + 'Attempts to access this ref will fail. ' + 'Did you mean to use React.forwardRef()?%s', info);
        }
      }

      if (warnAboutDefaultPropsOnFunctionComponents && Component.defaultProps !== undefined) {
        var componentName = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {
          warningWithoutStack$1(false, '%s: Support for defaultProps will be removed from function components ' + 'in a future major release. Use JavaScript default parameters instead.', componentName);
          didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;
        }
      }

      if (typeof Component.getDerivedStateFromProps === 'function') {
        var _componentName2 = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2]) {
          warningWithoutStack$1(false, '%s: Function components do not support getDerivedStateFromProps.', _componentName2);
          didWarnAboutGetDerivedStateOnFunctionComponent[_componentName2] = true;
        }
      }

      if (typeof Component.contextType === 'object' && Component.contextType !== null) {
        var _componentName3 = getComponentName(Component) || 'Unknown';

        if (!didWarnAboutContextTypeOnFunctionComponent[_componentName3]) {
          warningWithoutStack$1(false, '%s: Function components do not support contextType.', _componentName3);
          didWarnAboutContextTypeOnFunctionComponent[_componentName3] = true;
        }
      }
    }

    var SUSPENDED_MARKER = {
      dehydrated: null,
      retryTime: NoWork
    };

    function shouldRemainOnFallback(suspenseContext, current$$1, workInProgress) {
      // If the context is telling us that we should show a fallback, and we're not
      // already showing content, then we should show the fallback instead.
      return hasSuspenseContext(suspenseContext, ForceSuspenseFallback) && (current$$1 === null || current$$1.memoizedState !== null);
    }

    function updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime) {
      var mode = workInProgress.mode;
      var nextProps = workInProgress.pendingProps; // This is used by DevTools to force a boundary to suspend.

      {
        if (shouldSuspend(workInProgress)) {
          workInProgress.effectTag |= DidCapture;
        }
      }
      var suspenseContext = suspenseStackCursor.current;
      var nextDidTimeout = false;
      var didSuspend = (workInProgress.effectTag & DidCapture) !== NoEffect;

      if (didSuspend || shouldRemainOnFallback(suspenseContext, current$$1, workInProgress)) {
        // Something in this boundary's subtree already suspended. Switch to
        // rendering the fallback children.
        nextDidTimeout = true;
        workInProgress.effectTag &= ~DidCapture;
      } else {
        // Attempting the main content
        if (current$$1 === null || current$$1.memoizedState !== null) {
          // This is a new mount or this boundary is already showing a fallback state.
          // Mark this subtree context as having at least one invisible parent that could
          // handle the fallback state.
          // Boundaries without fallbacks or should be avoided are not considered since
          // they cannot handle preferred fallback states.
          if (nextProps.fallback !== undefined && nextProps.unstable_avoidThisFallback !== true) {
            suspenseContext = addSubtreeSuspenseContext(suspenseContext, InvisibleParentSuspenseContext);
          }
        }
      }

      suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
      pushSuspenseContext(workInProgress, suspenseContext);
      {
        if ('maxDuration' in nextProps) {
          if (!didWarnAboutMaxDuration) {
            didWarnAboutMaxDuration = true;
            warning$1(false, 'maxDuration has been removed from React. ' + 'Remove the maxDuration prop.');
          }
        }
      } // This next part is a bit confusing. If the children timeout, we switch to
      // showing the fallback children in place of the "primary" children.
      // However, we don't want to delete the primary children because then their
      // state will be lost (both the React state and the host state, e.g.
      // uncontrolled form inputs). Instead we keep them mounted and hide them.
      // Both the fallback children AND the primary children are rendered at the
      // same time. Once the primary children are un-suspended, we can delete
      // the fallback children — don't need to preserve their state.
      //
      // The two sets of children are siblings in the host environment, but
      // semantically, for purposes of reconciliation, they are two separate sets.
      // So we store them using two fragment fibers.
      //
      // However, we want to avoid allocating extra fibers for every placeholder.
      // They're only necessary when the children time out, because that's the
      // only time when both sets are mounted.
      //
      // So, the extra fragment fibers are only used if the children time out.
      // Otherwise, we render the primary children directly. This requires some
      // custom reconciliation logic to preserve the state of the primary
      // children. It's essentially a very basic form of re-parenting.

      if (current$$1 === null) {
        // If we're currently hydrating, try to hydrate this boundary.
        // But only if this has a fallback.
        if (nextProps.fallback !== undefined) {
          tryToClaimNextHydratableInstance(workInProgress); // This could've been a dehydrated suspense component.

          if (enableSuspenseServerRenderer) {
            var suspenseState = workInProgress.memoizedState;

            if (suspenseState !== null) {
              var dehydrated = suspenseState.dehydrated;

              if (dehydrated !== null) {
                return mountDehydratedSuspenseComponent(workInProgress, dehydrated, renderExpirationTime);
              }
            }
          }
        } // This is the initial mount. This branch is pretty simple because there's
        // no previous state that needs to be preserved.


        if (nextDidTimeout) {
          // Mount separate fragments for primary and fallback children.
          var nextFallbackChildren = nextProps.fallback;
          var primaryChildFragment = createFiberFromFragment(null, mode, NoWork, null);
          primaryChildFragment.return = workInProgress;

          if ((workInProgress.mode & BlockingMode) === NoMode) {
            // Outside of blocking mode, we commit the effects from the
            // partially completed, timed-out tree, too.
            var progressedState = workInProgress.memoizedState;
            var progressedPrimaryChild = progressedState !== null ? workInProgress.child.child : workInProgress.child;
            primaryChildFragment.child = progressedPrimaryChild;
            var progressedChild = progressedPrimaryChild;

            while (progressedChild !== null) {
              progressedChild.return = primaryChildFragment;
              progressedChild = progressedChild.sibling;
            }
          }

          var fallbackChildFragment = createFiberFromFragment(nextFallbackChildren, mode, renderExpirationTime, null);
          fallbackChildFragment.return = workInProgress;
          primaryChildFragment.sibling = fallbackChildFragment; // Skip the primary children, and continue working on the
          // fallback children.

          workInProgress.memoizedState = SUSPENDED_MARKER;
          workInProgress.child = primaryChildFragment;
          return fallbackChildFragment;
        } else {
          // Mount the primary children without an intermediate fragment fiber.
          var nextPrimaryChildren = nextProps.children;
          workInProgress.memoizedState = null;
          return workInProgress.child = mountChildFibers(workInProgress, null, nextPrimaryChildren, renderExpirationTime);
        }
      } else {
        // This is an update. This branch is more complicated because we need to
        // ensure the state of the primary children is preserved.
        var prevState = current$$1.memoizedState;

        if (prevState !== null) {
          if (enableSuspenseServerRenderer) {
            var _dehydrated = prevState.dehydrated;

            if (_dehydrated !== null) {
              if (!didSuspend) {
                return updateDehydratedSuspenseComponent(current$$1, workInProgress, _dehydrated, prevState, renderExpirationTime);
              } else if (workInProgress.memoizedState !== null) {
                // Something suspended and we should still be in dehydrated mode.
                // Leave the existing child in place.
                workInProgress.child = current$$1.child; // The dehydrated completion pass expects this flag to be there
                // but the normal suspense pass doesn't.

                workInProgress.effectTag |= DidCapture;
                return null;
              } else {
                // Suspended but we should no longer be in dehydrated mode.
                // Therefore we now have to render the fallback. Wrap the children
                // in a fragment fiber to keep them separate from the fallback
                // children.
                var _nextFallbackChildren = nextProps.fallback;

                var _primaryChildFragment = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
                // going to render this fragment.
                null, mode, NoWork, null);

                _primaryChildFragment.return = workInProgress; // This is always null since we never want the previous child
                // that we're not going to hydrate.

                _primaryChildFragment.child = null;

                if ((workInProgress.mode & BlockingMode) === NoMode) {
                  // Outside of blocking mode, we commit the effects from the
                  // partially completed, timed-out tree, too.
                  var _progressedChild = _primaryChildFragment.child = workInProgress.child;

                  while (_progressedChild !== null) {
                    _progressedChild.return = _primaryChildFragment;
                    _progressedChild = _progressedChild.sibling;
                  }
                } else {
                  // We will have dropped the effect list which contains the deletion.
                  // We need to reconcile to delete the current child.
                  reconcileChildFibers(workInProgress, current$$1.child, null, renderExpirationTime);
                } // Because primaryChildFragment is a new fiber that we're inserting as the
                // parent of a new tree, we need to set its treeBaseDuration.


                if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
                  // treeBaseDuration is the sum of all the child tree base durations.
                  var treeBaseDuration = 0;
                  var hiddenChild = _primaryChildFragment.child;

                  while (hiddenChild !== null) {
                    treeBaseDuration += hiddenChild.treeBaseDuration;
                    hiddenChild = hiddenChild.sibling;
                  }

                  _primaryChildFragment.treeBaseDuration = treeBaseDuration;
                } // Create a fragment from the fallback children, too.


                var _fallbackChildFragment = createFiberFromFragment(_nextFallbackChildren, mode, renderExpirationTime, null);

                _fallbackChildFragment.return = workInProgress;
                _primaryChildFragment.sibling = _fallbackChildFragment;
                _fallbackChildFragment.effectTag |= Placement;
                _primaryChildFragment.childExpirationTime = NoWork;
                workInProgress.memoizedState = SUSPENDED_MARKER;
                workInProgress.child = _primaryChildFragment; // Skip the primary children, and continue working on the
                // fallback children.

                return _fallbackChildFragment;
              }
            }
          } // The current tree already timed out. That means each child set is
          // wrapped in a fragment fiber.


          var currentPrimaryChildFragment = current$$1.child;
          var currentFallbackChildFragment = currentPrimaryChildFragment.sibling;

          if (nextDidTimeout) {
            // Still timed out. Reuse the current primary children by cloning
            // its fragment. We're going to skip over these entirely.
            var _nextFallbackChildren2 = nextProps.fallback;

            var _primaryChildFragment2 = createWorkInProgress(currentPrimaryChildFragment, currentPrimaryChildFragment.pendingProps, NoWork);

            _primaryChildFragment2.return = workInProgress;

            if ((workInProgress.mode & BlockingMode) === NoMode) {
              // Outside of blocking mode, we commit the effects from the
              // partially completed, timed-out tree, too.
              var _progressedState = workInProgress.memoizedState;

              var _progressedPrimaryChild = _progressedState !== null ? workInProgress.child.child : workInProgress.child;

              if (_progressedPrimaryChild !== currentPrimaryChildFragment.child) {
                _primaryChildFragment2.child = _progressedPrimaryChild;
                var _progressedChild2 = _progressedPrimaryChild;

                while (_progressedChild2 !== null) {
                  _progressedChild2.return = _primaryChildFragment2;
                  _progressedChild2 = _progressedChild2.sibling;
                }
              }
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var _treeBaseDuration = 0;
              var _hiddenChild = _primaryChildFragment2.child;

              while (_hiddenChild !== null) {
                _treeBaseDuration += _hiddenChild.treeBaseDuration;
                _hiddenChild = _hiddenChild.sibling;
              }

              _primaryChildFragment2.treeBaseDuration = _treeBaseDuration;
            } // Clone the fallback child fragment, too. These we'll continue
            // working on.


            var _fallbackChildFragment2 = createWorkInProgress(currentFallbackChildFragment, _nextFallbackChildren2, currentFallbackChildFragment.expirationTime);

            _fallbackChildFragment2.return = workInProgress;
            _primaryChildFragment2.sibling = _fallbackChildFragment2;
            _primaryChildFragment2.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
            // fallback children.

            workInProgress.memoizedState = SUSPENDED_MARKER;
            workInProgress.child = _primaryChildFragment2;
            return _fallbackChildFragment2;
          } else {
            // No longer suspended. Switch back to showing the primary children,
            // and remove the intermediate fragment fiber.
            var _nextPrimaryChildren = nextProps.children;
            var currentPrimaryChild = currentPrimaryChildFragment.child;
            var primaryChild = reconcileChildFibers(workInProgress, currentPrimaryChild, _nextPrimaryChildren, renderExpirationTime); // If this render doesn't suspend, we need to delete the fallback
            // children. Wait until the complete phase, after we've confirmed the
            // fallback is no longer needed.
            // TODO: Would it be better to store the fallback fragment on
            // the stateNode?
            // Continue rendering the children, like we normally do.

            workInProgress.memoizedState = null;
            return workInProgress.child = primaryChild;
          }
        } else {
          // The current tree has not already timed out. That means the primary
          // children are not wrapped in a fragment fiber.
          var _currentPrimaryChild = current$$1.child;

          if (nextDidTimeout) {
            // Timed out. Wrap the children in a fragment fiber to keep them
            // separate from the fallback children.
            var _nextFallbackChildren3 = nextProps.fallback;

            var _primaryChildFragment3 = createFiberFromFragment( // It shouldn't matter what the pending props are because we aren't
            // going to render this fragment.
            null, mode, NoWork, null);

            _primaryChildFragment3.return = workInProgress;
            _primaryChildFragment3.child = _currentPrimaryChild;

            if (_currentPrimaryChild !== null) {
              _currentPrimaryChild.return = _primaryChildFragment3;
            } // Even though we're creating a new fiber, there are no new children,
            // because we're reusing an already mounted tree. So we don't need to
            // schedule a placement.
            // primaryChildFragment.effectTag |= Placement;


            if ((workInProgress.mode & BlockingMode) === NoMode) {
              // Outside of blocking mode, we commit the effects from the
              // partially completed, timed-out tree, too.
              var _progressedState2 = workInProgress.memoizedState;

              var _progressedPrimaryChild2 = _progressedState2 !== null ? workInProgress.child.child : workInProgress.child;

              _primaryChildFragment3.child = _progressedPrimaryChild2;
              var _progressedChild3 = _progressedPrimaryChild2;

              while (_progressedChild3 !== null) {
                _progressedChild3.return = _primaryChildFragment3;
                _progressedChild3 = _progressedChild3.sibling;
              }
            } // Because primaryChildFragment is a new fiber that we're inserting as the
            // parent of a new tree, we need to set its treeBaseDuration.


            if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
              // treeBaseDuration is the sum of all the child tree base durations.
              var _treeBaseDuration2 = 0;
              var _hiddenChild2 = _primaryChildFragment3.child;

              while (_hiddenChild2 !== null) {
                _treeBaseDuration2 += _hiddenChild2.treeBaseDuration;
                _hiddenChild2 = _hiddenChild2.sibling;
              }

              _primaryChildFragment3.treeBaseDuration = _treeBaseDuration2;
            } // Create a fragment from the fallback children, too.


            var _fallbackChildFragment3 = createFiberFromFragment(_nextFallbackChildren3, mode, renderExpirationTime, null);

            _fallbackChildFragment3.return = workInProgress;
            _primaryChildFragment3.sibling = _fallbackChildFragment3;
            _fallbackChildFragment3.effectTag |= Placement;
            _primaryChildFragment3.childExpirationTime = NoWork; // Skip the primary children, and continue working on the
            // fallback children.

            workInProgress.memoizedState = SUSPENDED_MARKER;
            workInProgress.child = _primaryChildFragment3;
            return _fallbackChildFragment3;
          } else {
            // Still haven't timed out.  Continue rendering the children, like we
            // normally do.
            workInProgress.memoizedState = null;
            var _nextPrimaryChildren2 = nextProps.children;
            return workInProgress.child = reconcileChildFibers(workInProgress, _currentPrimaryChild, _nextPrimaryChildren2, renderExpirationTime);
          }
        }
      }
    }

    function retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime) {
      // We're now not suspended nor dehydrated.
      workInProgress.memoizedState = null; // Retry with the full children.

      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children; // This will ensure that the children get Placement effects and
      // that the old child gets a Deletion effect.
      // We could also call forceUnmountCurrentAndReconcile.

      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function mountDehydratedSuspenseComponent(workInProgress, suspenseInstance, renderExpirationTime) {
      // During the first pass, we'll bail out and not drill into the children.
      // Instead, we'll leave the content in place and try to hydrate it later.
      if ((workInProgress.mode & BlockingMode) === NoMode) {
        {
          warning$1(false, 'Cannot hydrate Suspense in legacy mode. Switch from ' + 'ReactDOM.hydrate(element, container) to ' + 'ReactDOM.createBlockingRoot(container, { hydrate: true })' + '.render(element) or remove the Suspense components from ' + 'the server rendered components.');
        }
        workInProgress.expirationTime = Sync;
      } else if (isSuspenseInstanceFallback(suspenseInstance)) {
        // This is a client-only boundary. Since we won't get any content from the server
        // for this, we need to schedule that at a higher priority based on when it would
        // have timed out. In theory we could render it in this pass but it would have the
        // wrong priority associated with it and will prevent hydration of parent path.
        // Instead, we'll leave work left on it to render it in a separate commit.
        // TODO This time should be the time at which the server rendered response that is
        // a parent to this boundary was displayed. However, since we currently don't have
        // a protocol to transfer that time, we'll just estimate it by using the current
        // time. This will mean that Suspense timeouts are slightly shifted to later than
        // they should be.
        var serverDisplayTime = requestCurrentTimeForUpdate(); // Schedule a normal pri update to render this content.

        var newExpirationTime = computeAsyncExpiration(serverDisplayTime);

        if (enableSchedulerTracing) {
          markSpawnedWork(newExpirationTime);
        }

        workInProgress.expirationTime = newExpirationTime;
      } else {
        // We'll continue hydrating the rest at offscreen priority since we'll already
        // be showing the right content coming from the server, it is no rush.
        workInProgress.expirationTime = Never;

        if (enableSchedulerTracing) {
          markSpawnedWork(Never);
        }
      }

      return null;
    }

    function updateDehydratedSuspenseComponent(current$$1, workInProgress, suspenseInstance, suspenseState, renderExpirationTime) {
      // We should never be hydrating at this point because it is the first pass,
      // but after we've already committed once.
      warnIfHydrating();

      if ((workInProgress.mode & BlockingMode) === NoMode) {
        return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
      }

      if (isSuspenseInstanceFallback(suspenseInstance)) {
        // This boundary is in a permanent fallback state. In this case, we'll never
        // get an update and we'll never be able to hydrate the final content. Let's just try the
        // client side render instead.
        return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
      } // We use childExpirationTime to indicate that a child might depend on context, so if
      // any context has changed, we need to treat is as if the input might have changed.


      var hasContextChanged$$1 = current$$1.childExpirationTime >= renderExpirationTime;

      if (didReceiveUpdate || hasContextChanged$$1) {
        // This boundary has changed since the first render. This means that we are now unable to
        // hydrate it. We might still be able to hydrate it using an earlier expiration time, if
        // we are rendering at lower expiration than sync.
        if (renderExpirationTime < Sync) {
          if (suspenseState.retryTime <= renderExpirationTime) {
            // This render is even higher pri than we've seen before, let's try again
            // at even higher pri.
            var attemptHydrationAtExpirationTime = renderExpirationTime + 1;
            suspenseState.retryTime = attemptHydrationAtExpirationTime;
            scheduleWork(current$$1, attemptHydrationAtExpirationTime); // TODO: Early abort this render.
          } else {// We have already tried to ping at a higher priority than we're rendering with
              // so if we got here, we must have failed to hydrate at those levels. We must
              // now give up. Instead, we're going to delete the whole subtree and instead inject
              // a new real Suspense boundary to take its place, which may render content
              // or fallback. This might suspend for a while and if it does we might still have
              // an opportunity to hydrate before this pass commits.
            }
        } // If we have scheduled higher pri work above, this will probably just abort the render
        // since we now have higher priority work, but in case it doesn't, we need to prepare to
        // render something, if we time out. Even if that requires us to delete everything and
        // skip hydration.
        // Delay having to do this as long as the suspense timeout allows us.


        renderDidSuspendDelayIfPossible();
        return retrySuspenseComponentWithoutHydrating(current$$1, workInProgress, renderExpirationTime);
      } else if (isSuspenseInstancePending(suspenseInstance)) {
        // This component is still pending more data from the server, so we can't hydrate its
        // content. We treat it as if this component suspended itself. It might seem as if
        // we could just try to render it client-side instead. However, this will perform a
        // lot of unnecessary work and is unlikely to complete since it often will suspend
        // on missing data anyway. Additionally, the server might be able to render more
        // than we can on the client yet. In that case we'd end up with more fallback states
        // on the client than if we just leave it alone. If the server times out or errors
        // these should update this boundary to the permanent Fallback state instead.
        // Mark it as having captured (i.e. suspended).
        workInProgress.effectTag |= DidCapture; // Leave the child in place. I.e. the dehydrated fragment.

        workInProgress.child = current$$1.child; // Register a callback to retry this boundary once the server has sent the result.

        registerSuspenseInstanceRetry(suspenseInstance, retryDehydratedSuspenseBoundary.bind(null, current$$1));
        return null;
      } else {
        // This is the first attempt.
        reenterHydrationStateFromDehydratedSuspenseInstance(workInProgress, suspenseInstance);
        var nextProps = workInProgress.pendingProps;
        var nextChildren = nextProps.children;
        var child = mountChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
        var node = child;

        while (node) {
          // Mark each child as hydrating. This is a fast path to know whether this
          // tree is part of a hydrating tree. This is used to determine if a child
          // node has fully mounted yet, and for scheduling event replaying.
          // Conceptually this is similar to Placement in that a new subtree is
          // inserted into the React tree here. It just happens to not need DOM
          // mutations because it already exists.
          node.effectTag |= Hydrating;
          node = node.sibling;
        }

        workInProgress.child = child;
        return workInProgress.child;
      }
    }

    function scheduleWorkOnFiber(fiber, renderExpirationTime) {
      if (fiber.expirationTime < renderExpirationTime) {
        fiber.expirationTime = renderExpirationTime;
      }

      var alternate = fiber.alternate;

      if (alternate !== null && alternate.expirationTime < renderExpirationTime) {
        alternate.expirationTime = renderExpirationTime;
      }

      scheduleWorkOnParentPath(fiber.return, renderExpirationTime);
    }

    function propagateSuspenseContextChange(workInProgress, firstChild, renderExpirationTime) {
      // Mark any Suspense boundaries with fallbacks as having work to do.
      // If they were previously forced into fallbacks, they may now be able
      // to unblock.
      var node = firstChild;

      while (node !== null) {
        if (node.tag === SuspenseComponent) {
          var state = node.memoizedState;

          if (state !== null) {
            scheduleWorkOnFiber(node, renderExpirationTime);
          }
        } else if (node.tag === SuspenseListComponent) {
          // If the tail is hidden there might not be an Suspense boundaries
          // to schedule work on. In this case we have to schedule it on the
          // list itself.
          // We don't have to traverse to the children of the list since
          // the list will propagate the change when it rerenders.
          scheduleWorkOnFiber(node, renderExpirationTime);
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === workInProgress) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === workInProgress) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function findLastContentRow(firstChild) {
      // This is going to find the last row among these children that is already
      // showing content on the screen, as opposed to being in fallback state or
      // new. If a row has multiple Suspense boundaries, any of them being in the
      // fallback state, counts as the whole row being in a fallback state.
      // Note that the "rows" will be workInProgress, but any nested children
      // will still be current since we haven't rendered them yet. The mounted
      // order may not be the same as the new order. We use the new order.
      var row = firstChild;
      var lastContentRow = null;

      while (row !== null) {
        var currentRow = row.alternate; // New rows can't be content rows.

        if (currentRow !== null && findFirstSuspended(currentRow) === null) {
          lastContentRow = row;
        }

        row = row.sibling;
      }

      return lastContentRow;
    }

    function validateRevealOrder(revealOrder) {
      {
        if (revealOrder !== undefined && revealOrder !== 'forwards' && revealOrder !== 'backwards' && revealOrder !== 'together' && !didWarnAboutRevealOrder[revealOrder]) {
          didWarnAboutRevealOrder[revealOrder] = true;

          if (typeof revealOrder === 'string') {
            switch (revealOrder.toLowerCase()) {
              case 'together':
              case 'forwards':
              case 'backwards':
                {
                  warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'Use lowercase "%s" instead.', revealOrder, revealOrder.toLowerCase());
                  break;
                }

              case 'forward':
              case 'backward':
                {
                  warning$1(false, '"%s" is not a valid value for revealOrder on <SuspenseList />. ' + 'React uses the -s suffix in the spelling. Use "%ss" instead.', revealOrder, revealOrder.toLowerCase());
                  break;
                }

              default:
                warning$1(false, '"%s" is not a supported revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
                break;
            }
          } else {
            warning$1(false, '%s is not a supported value for revealOrder on <SuspenseList />. ' + 'Did you mean "together", "forwards" or "backwards"?', revealOrder);
          }
        }
      }
    }

    function validateTailOptions(tailMode, revealOrder) {
      {
        if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {
          if (tailMode !== 'collapsed' && tailMode !== 'hidden') {
            didWarnAboutTailOptions[tailMode] = true;
            warning$1(false, '"%s" is not a supported value for tail on <SuspenseList />. ' + 'Did you mean "collapsed" or "hidden"?', tailMode);
          } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {
            didWarnAboutTailOptions[tailMode] = true;
            warning$1(false, '<SuspenseList tail="%s" /> is only valid if revealOrder is ' + '"forwards" or "backwards". ' + 'Did you mean to specify revealOrder="forwards"?', tailMode);
          }
        }
      }
    }

    function validateSuspenseListNestedChild(childSlot, index) {
      {
        var isArray = Array.isArray(childSlot);
        var isIterable = !isArray && typeof getIteratorFn(childSlot) === 'function';

        if (isArray || isIterable) {
          var type = isArray ? 'array' : 'iterable';
          warning$1(false, 'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' + 'an additional SuspenseList to configure its revealOrder: ' + '<SuspenseList revealOrder=...> ... ' + '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' + '</SuspenseList>', type, index, type);
          return false;
        }
      }
      return true;
    }

    function validateSuspenseListChildren(children, revealOrder) {
      {
        if ((revealOrder === 'forwards' || revealOrder === 'backwards') && children !== undefined && children !== null && children !== false) {
          if (Array.isArray(children)) {
            for (var i = 0; i < children.length; i++) {
              if (!validateSuspenseListNestedChild(children[i], i)) {
                return;
              }
            }
          } else {
            var iteratorFn = getIteratorFn(children);

            if (typeof iteratorFn === 'function') {
              var childrenIterator = iteratorFn.call(children);

              if (childrenIterator) {
                var step = childrenIterator.next();
                var _i = 0;

                for (; !step.done; step = childrenIterator.next()) {
                  if (!validateSuspenseListNestedChild(step.value, _i)) {
                    return;
                  }

                  _i++;
                }
              }
            } else {
              warning$1(false, 'A single row was passed to a <SuspenseList revealOrder="%s" />. ' + 'This is not useful since it needs multiple rows. ' + 'Did you mean to pass multiple children or an array?', revealOrder);
            }
          }
        }
      }
    }

    function initSuspenseListRenderState(workInProgress, isBackwards, tail, lastContentRow, tailMode, lastEffectBeforeRendering) {
      var renderState = workInProgress.memoizedState;

      if (renderState === null) {
        workInProgress.memoizedState = {
          isBackwards: isBackwards,
          rendering: null,
          last: lastContentRow,
          tail: tail,
          tailExpiration: 0,
          tailMode: tailMode,
          lastEffect: lastEffectBeforeRendering
        };
      } else {
        // We can reuse the existing object from previous renders.
        renderState.isBackwards = isBackwards;
        renderState.rendering = null;
        renderState.last = lastContentRow;
        renderState.tail = tail;
        renderState.tailExpiration = 0;
        renderState.tailMode = tailMode;
        renderState.lastEffect = lastEffectBeforeRendering;
      }
    } // This can end up rendering this component multiple passes.
    // The first pass splits the children fibers into two sets. A head and tail.
    // We first render the head. If anything is in fallback state, we do another
    // pass through beginWork to rerender all children (including the tail) with
    // the force suspend context. If the first render didn't have anything in
    // in fallback state. Then we render each row in the tail one-by-one.
    // That happens in the completeWork phase without going back to beginWork.


    function updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime) {
      var nextProps = workInProgress.pendingProps;
      var revealOrder = nextProps.revealOrder;
      var tailMode = nextProps.tail;
      var newChildren = nextProps.children;
      validateRevealOrder(revealOrder);
      validateTailOptions(tailMode, revealOrder);
      validateSuspenseListChildren(newChildren, revealOrder);
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      var suspenseContext = suspenseStackCursor.current;
      var shouldForceFallback = hasSuspenseContext(suspenseContext, ForceSuspenseFallback);

      if (shouldForceFallback) {
        suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
        workInProgress.effectTag |= DidCapture;
      } else {
        var didSuspendBefore = current$$1 !== null && (current$$1.effectTag & DidCapture) !== NoEffect;

        if (didSuspendBefore) {
          // If we previously forced a fallback, we need to schedule work
          // on any nested boundaries to let them know to try to render
          // again. This is the same as context updating.
          propagateSuspenseContextChange(workInProgress, workInProgress.child, renderExpirationTime);
        }

        suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
      }

      pushSuspenseContext(workInProgress, suspenseContext);

      if ((workInProgress.mode & BlockingMode) === NoMode) {
        // Outside of blocking mode, SuspenseList doesn't work so we just
        // use make it a noop by treating it as the default revealOrder.
        workInProgress.memoizedState = null;
      } else {
        switch (revealOrder) {
          case 'forwards':
            {
              var lastContentRow = findLastContentRow(workInProgress.child);
              var tail;

              if (lastContentRow === null) {
                // The whole list is part of the tail.
                // TODO: We could fast path by just rendering the tail now.
                tail = workInProgress.child;
                workInProgress.child = null;
              } else {
                // Disconnect the tail rows after the content row.
                // We're going to render them separately later.
                tail = lastContentRow.sibling;
                lastContentRow.sibling = null;
              }

              initSuspenseListRenderState(workInProgress, false, // isBackwards
              tail, lastContentRow, tailMode, workInProgress.lastEffect);
              break;
            }

          case 'backwards':
            {
              // We're going to find the first row that has existing content.
              // At the same time we're going to reverse the list of everything
              // we pass in the meantime. That's going to be our tail in reverse
              // order.
              var _tail = null;
              var row = workInProgress.child;
              workInProgress.child = null;

              while (row !== null) {
                var currentRow = row.alternate; // New rows can't be content rows.

                if (currentRow !== null && findFirstSuspended(currentRow) === null) {
                  // This is the beginning of the main content.
                  workInProgress.child = row;
                  break;
                }

                var nextRow = row.sibling;
                row.sibling = _tail;
                _tail = row;
                row = nextRow;
              } // TODO: If workInProgress.child is null, we can continue on the tail immediately.


              initSuspenseListRenderState(workInProgress, true, // isBackwards
              _tail, null, // last
              tailMode, workInProgress.lastEffect);
              break;
            }

          case 'together':
            {
              initSuspenseListRenderState(workInProgress, false, // isBackwards
              null, // tail
              null, // last
              undefined, workInProgress.lastEffect);
              break;
            }

          default:
            {
              // The default reveal order is the same as not having
              // a boundary.
              workInProgress.memoizedState = null;
            }
        }
      }

      return workInProgress.child;
    }

    function updatePortalComponent(current$$1, workInProgress, renderExpirationTime) {
      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
      var nextChildren = workInProgress.pendingProps;

      if (current$$1 === null) {
        // Portals are special because we don't append the children during mount
        // but at commit. Therefore we need to track insertions which the normal
        // flow doesn't do during mount. This doesn't happen at the root because
        // the root always starts with a "current" with a null child.
        // TODO: Consider unifying this with how the root works.
        workInProgress.child = reconcileChildFibers(workInProgress, null, nextChildren, renderExpirationTime);
      } else {
        reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      }

      return workInProgress.child;
    }

    function updateContextProvider(current$$1, workInProgress, renderExpirationTime) {
      var providerType = workInProgress.type;
      var context = providerType._context;
      var newProps = workInProgress.pendingProps;
      var oldProps = workInProgress.memoizedProps;
      var newValue = newProps.value;
      {
        var providerPropTypes = workInProgress.type.propTypes;

        if (providerPropTypes) {
          checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider', getCurrentFiberStackInDev);
        }
      }
      pushProvider(workInProgress, newValue);

      if (oldProps !== null) {
        var oldValue = oldProps.value;
        var changedBits = calculateChangedBits(context, newValue, oldValue);

        if (changedBits === 0) {
          // No change. Bailout early if children are the same.
          if (oldProps.children === newProps.children && !hasContextChanged()) {
            return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
          }
        } else {
          // The context value changed. Search for matching consumers and schedule
          // them to update.
          propagateContextChange(workInProgress, context, changedBits, renderExpirationTime);
        }
      }

      var newChildren = newProps.children;
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      return workInProgress.child;
    }

    var hasWarnedAboutUsingContextAsConsumer = false;

    function updateContextConsumer(current$$1, workInProgress, renderExpirationTime) {
      var context = workInProgress.type; // The logic below for Context differs depending on PROD or DEV mode. In
      // DEV mode, we create a separate object for Context.Consumer that acts
      // like a proxy to Context. This proxy object adds unnecessary code in PROD
      // so we use the old behaviour (Context.Consumer references Context) to
      // reduce size and overhead. The separate object references context via
      // a property called "_context", which also gives us the ability to check
      // in DEV mode if this property exists or not and warn if it does not.

      {
        if (context._context === undefined) {
          // This may be because it's a Context (rather than a Consumer).
          // Or it may be because it's older React where they're the same thing.
          // We only want to warn if we're sure it's a new React.
          if (context !== context.Consumer) {
            if (!hasWarnedAboutUsingContextAsConsumer) {
              hasWarnedAboutUsingContextAsConsumer = true;
              warning$1(false, 'Rendering <Context> directly is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
            }
          }
        } else {
          context = context._context;
        }
      }
      var newProps = workInProgress.pendingProps;
      var render = newProps.children;
      {
        !(typeof render === 'function') ? warningWithoutStack$1(false, 'A context consumer was rendered with multiple children, or a child ' + "that isn't a function. A context consumer expects a single child " + 'that is a function. If you did pass a function, make sure there ' + 'is no trailing or leading whitespace around it.') : void 0;
      }
      prepareToReadContext(workInProgress, renderExpirationTime);
      var newValue = readContext(context, newProps.unstable_observedBits);
      var newChildren;
      {
        ReactCurrentOwner$3.current = workInProgress;
        setCurrentPhase('render');
        newChildren = render(newValue);
        setCurrentPhase(null);
      } // React DevTools reads this flag.

      workInProgress.effectTag |= PerformedWork;
      reconcileChildren(current$$1, workInProgress, newChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime) {
      var fundamentalImpl = workInProgress.type.impl;

      if (fundamentalImpl.reconcileChildren === false) {
        return null;
      }

      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function updateScopeComponent(current$$1, workInProgress, renderExpirationTime) {
      var nextProps = workInProgress.pendingProps;
      var nextChildren = nextProps.children;
      reconcileChildren(current$$1, workInProgress, nextChildren, renderExpirationTime);
      return workInProgress.child;
    }

    function markWorkInProgressReceivedUpdate() {
      didReceiveUpdate = true;
    }

    function bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime) {
      cancelWorkTimer(workInProgress);

      if (current$$1 !== null) {
        // Reuse previous dependencies
        workInProgress.dependencies = current$$1.dependencies;
      }

      if (enableProfilerTimer) {
        // Don't update "base" render times for bailouts.
        stopProfilerTimerIfRunning(workInProgress);
      }

      var updateExpirationTime = workInProgress.expirationTime;

      if (updateExpirationTime !== NoWork) {
        markUnprocessedUpdateTime(updateExpirationTime);
      } // Check if the children have any pending work.


      var childExpirationTime = workInProgress.childExpirationTime;

      if (childExpirationTime < renderExpirationTime) {
        // The children don't have any work either. We can skip them.
        // TODO: Once we add back resuming, we should check if the children are
        // a work-in-progress set. If so, we need to transfer their effects.
        return null;
      } else {
        // This fiber doesn't have work, but its subtree does. Clone the child
        // fibers and continue.
        cloneChildFibers(current$$1, workInProgress);
        return workInProgress.child;
      }
    }

    function remountFiber(current$$1, oldWorkInProgress, newWorkInProgress) {
      {
        var returnFiber = oldWorkInProgress.return;

        if (returnFiber === null) {
          throw new Error('Cannot swap the root fiber.');
        } // Disconnect from the old current.
        // It will get deleted.


        current$$1.alternate = null;
        oldWorkInProgress.alternate = null; // Connect to the new tree.

        newWorkInProgress.index = oldWorkInProgress.index;
        newWorkInProgress.sibling = oldWorkInProgress.sibling;
        newWorkInProgress.return = oldWorkInProgress.return;
        newWorkInProgress.ref = oldWorkInProgress.ref; // Replace the child/sibling pointers above it.

        if (oldWorkInProgress === returnFiber.child) {
          returnFiber.child = newWorkInProgress;
        } else {
          var prevSibling = returnFiber.child;

          if (prevSibling === null) {
            throw new Error('Expected parent to have a child.');
          }

          while (prevSibling.sibling !== oldWorkInProgress) {
            prevSibling = prevSibling.sibling;

            if (prevSibling === null) {
              throw new Error('Expected to find the previous sibling.');
            }
          }

          prevSibling.sibling = newWorkInProgress;
        } // Delete the old fiber and place the new one.
        // Since the old fiber is disconnected, we have to schedule it manually.


        var last = returnFiber.lastEffect;

        if (last !== null) {
          last.nextEffect = current$$1;
          returnFiber.lastEffect = current$$1;
        } else {
          returnFiber.firstEffect = returnFiber.lastEffect = current$$1;
        }

        current$$1.nextEffect = null;
        current$$1.effectTag = Deletion;
        newWorkInProgress.effectTag |= Placement; // Restart work from the new fiber.

        return newWorkInProgress;
      }
    }

    function beginWork$1(current$$1, workInProgress, renderExpirationTime) {
      var updateExpirationTime = workInProgress.expirationTime;
      {
        if (workInProgress._debugNeedsRemount && current$$1 !== null) {
          // This will restart the begin phase with a new fiber.
          return remountFiber(current$$1, workInProgress, createFiberFromTypeAndProps(workInProgress.type, workInProgress.key, workInProgress.pendingProps, workInProgress._debugOwner || null, workInProgress.mode, workInProgress.expirationTime));
        }
      }

      if (current$$1 !== null) {
        var oldProps = current$$1.memoizedProps;
        var newProps = workInProgress.pendingProps;

        if (oldProps !== newProps || hasContextChanged() || // Force a re-render if the implementation changed due to hot reload:
        workInProgress.type !== current$$1.type) {
          // If props or context changed, mark the fiber as having performed work.
          // This may be unset if the props are determined to be equal later (memo).
          didReceiveUpdate = true;
        } else if (updateExpirationTime < renderExpirationTime) {
          didReceiveUpdate = false; // This fiber does not have any pending work. Bailout without entering
          // the begin phase. There's still some bookkeeping we that needs to be done
          // in this optimized path, mostly pushing stuff onto the stack.

          switch (workInProgress.tag) {
            case HostRoot:
              pushHostRootContext(workInProgress);
              resetHydrationState();
              break;

            case HostComponent:
              pushHostContext(workInProgress);

              if (workInProgress.mode & ConcurrentMode && renderExpirationTime !== Never && shouldDeprioritizeSubtree(workInProgress.type, newProps)) {
                if (enableSchedulerTracing) {
                  markSpawnedWork(Never);
                } // Schedule this fiber to re-render at offscreen priority. Then bailout.


                workInProgress.expirationTime = workInProgress.childExpirationTime = Never;
                return null;
              }

              break;

            case ClassComponent:
              {
                var Component = workInProgress.type;

                if (isContextProvider(Component)) {
                  pushContextProvider(workInProgress);
                }

                break;
              }

            case HostPortal:
              pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);
              break;

            case ContextProvider:
              {
                var newValue = workInProgress.memoizedProps.value;
                pushProvider(workInProgress, newValue);
                break;
              }

            case Profiler:
              if (enableProfilerTimer) {
                // Profiler should only call onRender when one of its descendants actually rendered.
                var hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

                if (hasChildWork) {
                  workInProgress.effectTag |= Update;
                }
              }

              break;

            case SuspenseComponent:
              {
                var state = workInProgress.memoizedState;

                if (state !== null) {
                  if (enableSuspenseServerRenderer) {
                    if (state.dehydrated !== null) {
                      pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // We know that this component will suspend again because if it has
                      // been unsuspended it has committed as a resolved Suspense component.
                      // If it needs to be retried, it should have work scheduled on it.

                      workInProgress.effectTag |= DidCapture;
                      break;
                    }
                  } // If this boundary is currently timed out, we need to decide
                  // whether to retry the primary children, or to skip over it and
                  // go straight to the fallback. Check the priority of the primary
                  // child fragment.


                  var primaryChildFragment = workInProgress.child;
                  var primaryChildExpirationTime = primaryChildFragment.childExpirationTime;

                  if (primaryChildExpirationTime !== NoWork && primaryChildExpirationTime >= renderExpirationTime) {
                    // The primary children have pending work. Use the normal path
                    // to attempt to render the primary children again.
                    return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);
                  } else {
                    pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current)); // The primary children do not have pending work with sufficient
                    // priority. Bailout.

                    var child = bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);

                    if (child !== null) {
                      // The fallback children have pending work. Skip over the
                      // primary children and work on the fallback.
                      return child.sibling;
                    } else {
                      return null;
                    }
                  }
                } else {
                  pushSuspenseContext(workInProgress, setDefaultShallowSuspenseContext(suspenseStackCursor.current));
                }

                break;
              }

            case SuspenseListComponent:
              {
                var didSuspendBefore = (current$$1.effectTag & DidCapture) !== NoEffect;

                var _hasChildWork = workInProgress.childExpirationTime >= renderExpirationTime;

                if (didSuspendBefore) {
                  if (_hasChildWork) {
                    // If something was in fallback state last time, and we have all the
                    // same children then we're still in progressive loading state.
                    // Something might get unblocked by state updates or retries in the
                    // tree which will affect the tail. So we need to use the normal
                    // path to compute the correct tail.
                    return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
                  } // If none of the children had any work, that means that none of
                  // them got retried so they'll still be blocked in the same way
                  // as before. We can fast bail out.


                  workInProgress.effectTag |= DidCapture;
                } // If nothing suspended before and we're rendering the same children,
                // then the tail doesn't matter. Anything new that suspends will work
                // in the "together" mode, so we can continue from the state we had.


                var renderState = workInProgress.memoizedState;

                if (renderState !== null) {
                  // Reset to the "together" mode in case we've started a different
                  // update in the past but didn't complete it.
                  renderState.rendering = null;
                  renderState.tail = null;
                }

                pushSuspenseContext(workInProgress, suspenseStackCursor.current);

                if (_hasChildWork) {
                  break;
                } else {
                  // If none of the children had any work, that means that none of
                  // them got retried so they'll still be blocked in the same way
                  // as before. We can fast bail out.
                  return null;
                }
              }
          }

          return bailoutOnAlreadyFinishedWork(current$$1, workInProgress, renderExpirationTime);
        } else {
          // An update was scheduled on this fiber, but there are no new props
          // nor legacy context. Set this to false. If an update queue or context
          // consumer produces a changed value, it will set this to true. Otherwise,
          // the component will assume the children have not changed and bail out.
          didReceiveUpdate = false;
        }
      } else {
        didReceiveUpdate = false;
      } // Before entering the begin phase, clear the expiration time.


      workInProgress.expirationTime = NoWork;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
          {
            return mountIndeterminateComponent(current$$1, workInProgress, workInProgress.type, renderExpirationTime);
          }

        case LazyComponent:
          {
            var elementType = workInProgress.elementType;
            return mountLazyComponent(current$$1, workInProgress, elementType, updateExpirationTime, renderExpirationTime);
          }

        case FunctionComponent:
          {
            var _Component = workInProgress.type;
            var unresolvedProps = workInProgress.pendingProps;
            var resolvedProps = workInProgress.elementType === _Component ? unresolvedProps : resolveDefaultProps(_Component, unresolvedProps);
            return updateFunctionComponent(current$$1, workInProgress, _Component, resolvedProps, renderExpirationTime);
          }

        case ClassComponent:
          {
            var _Component2 = workInProgress.type;
            var _unresolvedProps = workInProgress.pendingProps;

            var _resolvedProps = workInProgress.elementType === _Component2 ? _unresolvedProps : resolveDefaultProps(_Component2, _unresolvedProps);

            return updateClassComponent(current$$1, workInProgress, _Component2, _resolvedProps, renderExpirationTime);
          }

        case HostRoot:
          return updateHostRoot(current$$1, workInProgress, renderExpirationTime);

        case HostComponent:
          return updateHostComponent(current$$1, workInProgress, renderExpirationTime);

        case HostText:
          return updateHostText(current$$1, workInProgress);

        case SuspenseComponent:
          return updateSuspenseComponent(current$$1, workInProgress, renderExpirationTime);

        case HostPortal:
          return updatePortalComponent(current$$1, workInProgress, renderExpirationTime);

        case ForwardRef:
          {
            var type = workInProgress.type;
            var _unresolvedProps2 = workInProgress.pendingProps;

            var _resolvedProps2 = workInProgress.elementType === type ? _unresolvedProps2 : resolveDefaultProps(type, _unresolvedProps2);

            return updateForwardRef(current$$1, workInProgress, type, _resolvedProps2, renderExpirationTime);
          }

        case Fragment:
          return updateFragment(current$$1, workInProgress, renderExpirationTime);

        case Mode:
          return updateMode(current$$1, workInProgress, renderExpirationTime);

        case Profiler:
          return updateProfiler(current$$1, workInProgress, renderExpirationTime);

        case ContextProvider:
          return updateContextProvider(current$$1, workInProgress, renderExpirationTime);

        case ContextConsumer:
          return updateContextConsumer(current$$1, workInProgress, renderExpirationTime);

        case MemoComponent:
          {
            var _type2 = workInProgress.type;
            var _unresolvedProps3 = workInProgress.pendingProps; // Resolve outer props first, then resolve inner props.

            var _resolvedProps3 = resolveDefaultProps(_type2, _unresolvedProps3);

            {
              if (workInProgress.type !== workInProgress.elementType) {
                var outerPropTypes = _type2.propTypes;

                if (outerPropTypes) {
                  checkPropTypes(outerPropTypes, _resolvedProps3, // Resolved for outer only
                  'prop', getComponentName(_type2), getCurrentFiberStackInDev);
                }
              }
            }
            _resolvedProps3 = resolveDefaultProps(_type2.type, _resolvedProps3);
            return updateMemoComponent(current$$1, workInProgress, _type2, _resolvedProps3, updateExpirationTime, renderExpirationTime);
          }

        case SimpleMemoComponent:
          {
            return updateSimpleMemoComponent(current$$1, workInProgress, workInProgress.type, workInProgress.pendingProps, updateExpirationTime, renderExpirationTime);
          }

        case IncompleteClassComponent:
          {
            var _Component3 = workInProgress.type;
            var _unresolvedProps4 = workInProgress.pendingProps;

            var _resolvedProps4 = workInProgress.elementType === _Component3 ? _unresolvedProps4 : resolveDefaultProps(_Component3, _unresolvedProps4);

            return mountIncompleteClassComponent(current$$1, workInProgress, _Component3, _resolvedProps4, renderExpirationTime);
          }

        case SuspenseListComponent:
          {
            return updateSuspenseListComponent(current$$1, workInProgress, renderExpirationTime);
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              return updateFundamentalComponent$1(current$$1, workInProgress, renderExpirationTime);
            }

            break;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              return updateScopeComponent(current$$1, workInProgress, renderExpirationTime);
            }

            break;
          }
      }

      {
        {
          throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function createFundamentalStateInstance(currentFiber, props, impl, state) {
      return {
        currentFiber: currentFiber,
        impl: impl,
        instance: null,
        prevProps: null,
        props: props,
        state: state
      };
    }

    function isFiberSuspenseAndTimedOut(fiber) {
      return fiber.tag === SuspenseComponent && fiber.memoizedState !== null;
    }

    function getSuspenseFallbackChild(fiber) {
      return fiber.child.sibling.child;
    }

    var emptyObject$1 = {};

    function collectScopedNodes(node, fn, scopedNodes) {
      if (enableScopeAPI) {
        if (node.tag === HostComponent) {
          var _type = node.type,
              memoizedProps = node.memoizedProps,
              stateNode = node.stateNode;

          var _instance = getPublicInstance(stateNode);

          if (_instance !== null && fn(_type, memoizedProps || emptyObject$1, _instance) === true) {
            scopedNodes.push(_instance);
          }
        }

        var child = node.child;

        if (isFiberSuspenseAndTimedOut(node)) {
          child = getSuspenseFallbackChild(node);
        }

        if (child !== null) {
          collectScopedNodesFromChildren(child, fn, scopedNodes);
        }
      }
    }

    function collectFirstScopedNode(node, fn) {
      if (enableScopeAPI) {
        if (node.tag === HostComponent) {
          var _type2 = node.type,
              memoizedProps = node.memoizedProps,
              stateNode = node.stateNode;

          var _instance2 = getPublicInstance(stateNode);

          if (_instance2 !== null && fn(_type2, memoizedProps, _instance2) === true) {
            return _instance2;
          }
        }

        var child = node.child;

        if (isFiberSuspenseAndTimedOut(node)) {
          child = getSuspenseFallbackChild(node);
        }

        if (child !== null) {
          return collectFirstScopedNodeFromChildren(child, fn);
        }
      }

      return null;
    }

    function collectScopedNodesFromChildren(startingChild, fn, scopedNodes) {
      var child = startingChild;

      while (child !== null) {
        collectScopedNodes(child, fn, scopedNodes);
        child = child.sibling;
      }
    }

    function collectFirstScopedNodeFromChildren(startingChild, fn) {
      var child = startingChild;

      while (child !== null) {
        var scopedNode = collectFirstScopedNode(child, fn);

        if (scopedNode !== null) {
          return scopedNode;
        }

        child = child.sibling;
      }

      return null;
    }

    function collectNearestScopeMethods(node, scope, childrenScopes) {
      if (isValidScopeNode(node, scope)) {
        childrenScopes.push(node.stateNode.methods);
      } else {
        var child = node.child;

        if (isFiberSuspenseAndTimedOut(node)) {
          child = getSuspenseFallbackChild(node);
        }

        if (child !== null) {
          collectNearestChildScopeMethods(child, scope, childrenScopes);
        }
      }
    }

    function collectNearestChildScopeMethods(startingChild, scope, childrenScopes) {
      var child = startingChild;

      while (child !== null) {
        collectNearestScopeMethods(child, scope, childrenScopes);
        child = child.sibling;
      }
    }

    function isValidScopeNode(node, scope) {
      return node.tag === ScopeComponent && node.type === scope && node.stateNode !== null;
    }

    function createScopeMethods(scope, instance) {
      return {
        getChildren: function () {
          var currentFiber = instance.fiber;
          var child = currentFiber.child;
          var childrenScopes = [];

          if (child !== null) {
            collectNearestChildScopeMethods(child, scope, childrenScopes);
          }

          return childrenScopes.length === 0 ? null : childrenScopes;
        },
        getChildrenFromRoot: function () {
          var currentFiber = instance.fiber;
          var node = currentFiber;

          while (node !== null) {
            var parent = node.return;

            if (parent === null) {
              break;
            }

            node = parent;

            if (node.tag === ScopeComponent && node.type === scope) {
              break;
            }
          }

          var childrenScopes = [];
          collectNearestChildScopeMethods(node.child, scope, childrenScopes);
          return childrenScopes.length === 0 ? null : childrenScopes;
        },
        getParent: function () {
          var node = instance.fiber.return;

          while (node !== null) {
            if (node.tag === ScopeComponent && node.type === scope) {
              return node.stateNode.methods;
            }

            node = node.return;
          }

          return null;
        },
        getProps: function () {
          var currentFiber = instance.fiber;
          return currentFiber.memoizedProps;
        },
        queryAllNodes: function (fn) {
          var currentFiber = instance.fiber;
          var child = currentFiber.child;
          var scopedNodes = [];

          if (child !== null) {
            collectScopedNodesFromChildren(child, fn, scopedNodes);
          }

          return scopedNodes.length === 0 ? null : scopedNodes;
        },
        queryFirstNode: function (fn) {
          var currentFiber = instance.fiber;
          var child = currentFiber.child;

          if (child !== null) {
            return collectFirstScopedNodeFromChildren(child, fn);
          }

          return null;
        },
        containsNode: function (node) {
          var fiber = getInstanceFromNode$2(node);

          while (fiber !== null) {
            if (fiber.tag === ScopeComponent && fiber.type === scope && fiber.stateNode === instance) {
              return true;
            }

            fiber = fiber.return;
          }

          return false;
        }
      };
    }

    function markUpdate(workInProgress) {
      // Tag the fiber with an update effect. This turns a Placement into
      // a PlacementAndUpdate.
      workInProgress.effectTag |= Update;
    }

    function markRef$1(workInProgress) {
      workInProgress.effectTag |= Ref;
    }

    var appendAllChildren;
    var updateHostContainer;
    var updateHostComponent$1;
    var updateHostText$1;

    if (supportsMutation) {
      // Mutation mode
      appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          if (node.tag === HostComponent || node.tag === HostText) {
            appendInitialChild(parent, node.stateNode);
          } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
            appendInitialChild(parent, node.stateNode.instance);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      };

      updateHostContainer = function (workInProgress) {// Noop
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
        // If we have an alternate, that means this is an update and we need to
        // schedule a side-effect to do the updates.
        var oldProps = current.memoizedProps;

        if (oldProps === newProps) {
          // In mutation mode, this is sufficient for a bailout because
          // we won't touch this node even if children changed.
          return;
        } // If we get updated because one of our children updated, we don't
        // have newProps so we'll have to reuse them.
        // TODO: Split the update API as separate for the props vs. children.
        // Even better would be if children weren't special cased at all tho.


        var instance = workInProgress.stateNode;
        var currentHostContext = getHostContext(); // TODO: Experiencing an error where oldProps is null. Suggests a host
        // component is hitting the resume path. Figure out why. Possibly
        // related to `hidden`.

        var updatePayload = prepareUpdate(instance, type, oldProps, newProps, rootContainerInstance, currentHostContext); // TODO: Type this specific to this type of component.

        workInProgress.updateQueue = updatePayload; // If the update payload indicates that there is a change or if there
        // is a new ref we mark this as an update. All the work is done in commitWork.

        if (updatePayload) {
          markUpdate(workInProgress);
        }
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {
        // If the text differs, mark it as an update. All the work in done in commitWork.
        if (oldText !== newText) {
          markUpdate(workInProgress);
        }
      };
    } else if (supportsPersistence) {
      // Persistent host tree mode
      appendAllChildren = function (parent, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          // eslint-disable-next-line no-labels
          branches: if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var props = node.memoizedProps;
              var type = node.type;
              instance = cloneHiddenInstance(instance, type, props, node);
            }

            appendInitialChild(parent, instance);
          } else if (node.tag === HostText) {
            var _instance = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var text = node.memoizedProps;
              _instance = cloneHiddenTextInstance(_instance, text, node);
            }

            appendInitialChild(parent, _instance);
          } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
            var _instance2 = node.stateNode.instance;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var _props = node.memoizedProps;
              var _type = node.type;
              _instance2 = cloneHiddenInstance(_instance2, _type, _props, node);
            }

            appendInitialChild(parent, _instance2);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.tag === SuspenseComponent) {
            if ((node.effectTag & Update) !== NoEffect) {
              // Need to toggle the visibility of the primary children.
              var newIsHidden = node.memoizedState !== null;

              if (newIsHidden) {
                var primaryChildParent = node.child;

                if (primaryChildParent !== null) {
                  if (primaryChildParent.child !== null) {
                    primaryChildParent.child.return = primaryChildParent;
                    appendAllChildren(parent, primaryChildParent, true, newIsHidden);
                  }

                  var fallbackChildParent = primaryChildParent.sibling;

                  if (fallbackChildParent !== null) {
                    fallbackChildParent.return = node;
                    node = fallbackChildParent;
                    continue;
                  }
                }
              }
            }

            if (node.child !== null) {
              // Continue traversing like normal
              node.child.return = node;
              node = node.child;
              continue;
            }
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          } // $FlowFixMe This is correct but Flow is confused by the labeled break.


          node = node;

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }; // An unfortunate fork of appendAllChildren because we have two different parent types.


      var appendAllChildrenToContainer = function (containerChildSet, workInProgress, needsVisibilityToggle, isHidden) {
        // We only have the top Fiber that was created but we need recurse down its
        // children to find all the terminal nodes.
        var node = workInProgress.child;

        while (node !== null) {
          // eslint-disable-next-line no-labels
          branches: if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var props = node.memoizedProps;
              var type = node.type;
              instance = cloneHiddenInstance(instance, type, props, node);
            }

            appendChildToContainerChildSet(containerChildSet, instance);
          } else if (node.tag === HostText) {
            var _instance3 = node.stateNode;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var text = node.memoizedProps;
              _instance3 = cloneHiddenTextInstance(_instance3, text, node);
            }

            appendChildToContainerChildSet(containerChildSet, _instance3);
          } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
            var _instance4 = node.stateNode.instance;

            if (needsVisibilityToggle && isHidden) {
              // This child is inside a timed out tree. Hide it.
              var _props2 = node.memoizedProps;
              var _type2 = node.type;
              _instance4 = cloneHiddenInstance(_instance4, _type2, _props2, node);
            }

            appendChildToContainerChildSet(containerChildSet, _instance4);
          } else if (node.tag === HostPortal) {// If we have a portal child, then we don't want to traverse
            // down its children. Instead, we'll get insertions from each child in
            // the portal directly.
          } else if (node.tag === SuspenseComponent) {
            if ((node.effectTag & Update) !== NoEffect) {
              // Need to toggle the visibility of the primary children.
              var newIsHidden = node.memoizedState !== null;

              if (newIsHidden) {
                var primaryChildParent = node.child;

                if (primaryChildParent !== null) {
                  if (primaryChildParent.child !== null) {
                    primaryChildParent.child.return = primaryChildParent;
                    appendAllChildrenToContainer(containerChildSet, primaryChildParent, true, newIsHidden);
                  }

                  var fallbackChildParent = primaryChildParent.sibling;

                  if (fallbackChildParent !== null) {
                    fallbackChildParent.return = node;
                    node = fallbackChildParent;
                    continue;
                  }
                }
              }
            }

            if (node.child !== null) {
              // Continue traversing like normal
              node.child.return = node;
              node = node.child;
              continue;
            }
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          } // $FlowFixMe This is correct but Flow is confused by the labeled break.


          node = node;

          if (node === workInProgress) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === workInProgress) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      };

      updateHostContainer = function (workInProgress) {
        var portalOrRoot = workInProgress.stateNode;
        var childrenUnchanged = workInProgress.firstEffect === null;

        if (childrenUnchanged) {// No changes, just reuse the existing instance.
        } else {
          var container = portalOrRoot.containerInfo;
          var newChildSet = createContainerChildSet(container); // If children might have changed, we have to add them all to the set.

          appendAllChildrenToContainer(newChildSet, workInProgress, false, false);
          portalOrRoot.pendingChildren = newChildSet; // Schedule an update on the container to swap out the container.

          markUpdate(workInProgress);
          finalizeContainerChildren(container, newChildSet);
        }
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {
        var currentInstance = current.stateNode;
        var oldProps = current.memoizedProps; // If there are no effects associated with this node, then none of our children had any updates.
        // This guarantees that we can reuse all of them.

        var childrenUnchanged = workInProgress.firstEffect === null;

        if (childrenUnchanged && oldProps === newProps) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
          return;
        }

        var recyclableInstance = workInProgress.stateNode;
        var currentHostContext = getHostContext();
        var updatePayload = null;

        if (oldProps !== newProps) {
          updatePayload = prepareUpdate(recyclableInstance, type, oldProps, newProps, rootContainerInstance, currentHostContext);
        }

        if (childrenUnchanged && updatePayload === null) {
          // No changes, just reuse the existing instance.
          // Note that this might release a previous clone.
          workInProgress.stateNode = currentInstance;
          return;
        }

        var newInstance = cloneInstance(currentInstance, updatePayload, type, oldProps, newProps, workInProgress, childrenUnchanged, recyclableInstance);

        if (finalizeInitialChildren(newInstance, type, newProps, rootContainerInstance, currentHostContext)) {
          markUpdate(workInProgress);
        }

        workInProgress.stateNode = newInstance;

        if (childrenUnchanged) {
          // If there are no other effects in this tree, we need to flag this node as having one.
          // Even though we're not going to use it for anything.
          // Otherwise parents won't know that there are new children to propagate upwards.
          markUpdate(workInProgress);
        } else {
          // If children might have changed, we have to add them all to the set.
          appendAllChildren(newInstance, workInProgress, false, false);
        }
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {
        if (oldText !== newText) {
          // If the text content differs, we'll create a new text instance for it.
          var rootContainerInstance = getRootHostContainer();
          var currentHostContext = getHostContext();
          workInProgress.stateNode = createTextInstance(newText, rootContainerInstance, currentHostContext, workInProgress); // We'll have to mark it as having an effect, even though we won't use the effect for anything.
          // This lets the parents know that at least one of their children has changed.

          markUpdate(workInProgress);
        }
      };
    } else {
      // No host operations
      updateHostContainer = function (workInProgress) {// Noop
      };

      updateHostComponent$1 = function (current, workInProgress, type, newProps, rootContainerInstance) {// Noop
      };

      updateHostText$1 = function (current, workInProgress, oldText, newText) {// Noop
      };
    }

    function cutOffTailIfNeeded(renderState, hasRenderedATailFallback) {
      switch (renderState.tailMode) {
        case 'hidden':
          {
            // Any insertions at the end of the tail list after this point
            // should be invisible. If there are already mounted boundaries
            // anything before them are not considered for collapsing.
            // Therefore we need to go through the whole tail to find if
            // there are any.
            var tailNode = renderState.tail;
            var lastTailNode = null;

            while (tailNode !== null) {
              if (tailNode.alternate !== null) {
                lastTailNode = tailNode;
              }

              tailNode = tailNode.sibling;
            } // Next we're simply going to delete all insertions after the
            // last rendered item.


            if (lastTailNode === null) {
              // All remaining items in the tail are insertions.
              renderState.tail = null;
            } else {
              // Detach the insertion after the last node that was already
              // inserted.
              lastTailNode.sibling = null;
            }

            break;
          }

        case 'collapsed':
          {
            // Any insertions at the end of the tail list after this point
            // should be invisible. If there are already mounted boundaries
            // anything before them are not considered for collapsing.
            // Therefore we need to go through the whole tail to find if
            // there are any.
            var _tailNode = renderState.tail;
            var _lastTailNode = null;

            while (_tailNode !== null) {
              if (_tailNode.alternate !== null) {
                _lastTailNode = _tailNode;
              }

              _tailNode = _tailNode.sibling;
            } // Next we're simply going to delete all insertions after the
            // last rendered item.


            if (_lastTailNode === null) {
              // All remaining items in the tail are insertions.
              if (!hasRenderedATailFallback && renderState.tail !== null) {
                // We suspended during the head. We want to show at least one
                // row at the tail. So we'll keep on and cut off the rest.
                renderState.tail.sibling = null;
              } else {
                renderState.tail = null;
              }
            } else {
              // Detach the insertion after the last node that was already
              // inserted.
              _lastTailNode.sibling = null;
            }

            break;
          }
      }
    }

    function completeWork(current, workInProgress, renderExpirationTime) {
      var newProps = workInProgress.pendingProps;

      switch (workInProgress.tag) {
        case IndeterminateComponent:
          break;

        case LazyComponent:
          break;

        case SimpleMemoComponent:
        case FunctionComponent:
          break;

        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            break;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            var fiberRoot = workInProgress.stateNode;

            if (fiberRoot.pendingContext) {
              fiberRoot.context = fiberRoot.pendingContext;
              fiberRoot.pendingContext = null;
            }

            if (current === null || current.child === null) {
              // If we hydrated, pop so that we can delete any remaining children
              // that weren't hydrated.
              var wasHydrated = popHydrationState(workInProgress);

              if (wasHydrated) {
                // If we hydrated, then we'll need to schedule an update for
                // the commit side-effects on the root.
                markUpdate(workInProgress);
              }
            }

            updateHostContainer(workInProgress);
            break;
          }

        case HostComponent:
          {
            popHostContext(workInProgress);
            var rootContainerInstance = getRootHostContainer();
            var type = workInProgress.type;

            if (current !== null && workInProgress.stateNode != null) {
              updateHostComponent$1(current, workInProgress, type, newProps, rootContainerInstance);

              if (enableFlareAPI) {
                var prevListeners = current.memoizedProps.listeners;
                var nextListeners = newProps.listeners;

                if (prevListeners !== nextListeners) {
                  markUpdate(workInProgress);
                }
              }

              if (current.ref !== workInProgress.ref) {
                markRef$1(workInProgress);
              }
            } else {
              if (!newProps) {
                if (!(workInProgress.stateNode !== null)) {
                  {
                    throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                } // This can happen when we abort work.


                break;
              }

              var currentHostContext = getHostContext(); // TODO: Move createInstance to beginWork and keep it on a context
              // "stack" as the parent. Then append children as we go in beginWork
              // or completeWork depending on we want to add then top->down or
              // bottom->up. Top->down is faster in IE11.

              var _wasHydrated = popHydrationState(workInProgress);

              if (_wasHydrated) {
                // TODO: Move this and createInstance step into the beginPhase
                // to consolidate.
                if (prepareToHydrateHostInstance(workInProgress, rootContainerInstance, currentHostContext)) {
                  // If changes to the hydrated node needs to be applied at the
                  // commit-phase we mark this as such.
                  markUpdate(workInProgress);
                }

                if (enableFlareAPI) {
                  var listeners = newProps.listeners;

                  if (listeners != null) {
                    updateEventListeners(listeners, workInProgress, rootContainerInstance);
                  }
                }
              } else {
                var instance = createInstance(type, newProps, rootContainerInstance, currentHostContext, workInProgress);
                appendAllChildren(instance, workInProgress, false, false); // This needs to be set before we mount Flare event listeners

                workInProgress.stateNode = instance;

                if (enableFlareAPI) {
                  var _listeners = newProps.listeners;

                  if (_listeners != null) {
                    updateEventListeners(_listeners, workInProgress, rootContainerInstance);
                  }
                } // Certain renderers require commit-time effects for initial mount.
                // (eg DOM renderer supports auto-focus for certain elements).
                // Make sure such renderers get scheduled for later work.


                if (finalizeInitialChildren(instance, type, newProps, rootContainerInstance, currentHostContext)) {
                  markUpdate(workInProgress);
                }
              }

              if (workInProgress.ref !== null) {
                // If there is a ref on a host node we need to schedule a callback
                markRef$1(workInProgress);
              }
            }

            break;
          }

        case HostText:
          {
            var newText = newProps;

            if (current && workInProgress.stateNode != null) {
              var oldText = current.memoizedProps; // If we have an alternate, that means this is an update and we need
              // to schedule a side-effect to do the updates.

              updateHostText$1(current, workInProgress, oldText, newText);
            } else {
              if (typeof newText !== 'string') {
                if (!(workInProgress.stateNode !== null)) {
                  {
                    throw Error("We must have new props for new mounts. This error is likely caused by a bug in React. Please file an issue.");
                  }
                } // This can happen when we abort work.

              }

              var _rootContainerInstance = getRootHostContainer();

              var _currentHostContext = getHostContext();

              var _wasHydrated2 = popHydrationState(workInProgress);

              if (_wasHydrated2) {
                if (prepareToHydrateHostTextInstance(workInProgress)) {
                  markUpdate(workInProgress);
                }
              } else {
                workInProgress.stateNode = createTextInstance(newText, _rootContainerInstance, _currentHostContext, workInProgress);
              }
            }

            break;
          }

        case ForwardRef:
          break;

        case SuspenseComponent:
          {
            popSuspenseContext(workInProgress);
            var nextState = workInProgress.memoizedState;

            if (enableSuspenseServerRenderer) {
              if (nextState !== null && nextState.dehydrated !== null) {
                if (current === null) {
                  var _wasHydrated3 = popHydrationState(workInProgress);

                  if (!_wasHydrated3) {
                    {
                      throw Error("A dehydrated suspense component was completed without a hydrated node. This is probably a bug in React.");
                    }
                  }

                  prepareToHydrateHostSuspenseInstance(workInProgress);

                  if (enableSchedulerTracing) {
                    markSpawnedWork(Never);
                  }

                  return null;
                } else {
                  // We should never have been in a hydration state if we didn't have a current.
                  // However, in some of those paths, we might have reentered a hydration state
                  // and then we might be inside a hydration state. In that case, we'll need to
                  // exit out of it.
                  resetHydrationState();

                  if ((workInProgress.effectTag & DidCapture) === NoEffect) {
                    // This boundary did not suspend so it's now hydrated and unsuspended.
                    workInProgress.memoizedState = null;
                  } // If nothing suspended, we need to schedule an effect to mark this boundary
                  // as having hydrated so events know that they're free be invoked.
                  // It's also a signal to replay events and the suspense callback.
                  // If something suspended, schedule an effect to attach retry listeners.
                  // So we might as well always mark this.


                  workInProgress.effectTag |= Update;
                  return null;
                }
              }
            }

            if ((workInProgress.effectTag & DidCapture) !== NoEffect) {
              // Something suspended. Re-render with the fallback children.
              workInProgress.expirationTime = renderExpirationTime; // Do not reset the effect list.

              return workInProgress;
            }

            var nextDidTimeout = nextState !== null;
            var prevDidTimeout = false;

            if (current === null) {
              if (workInProgress.memoizedProps.fallback !== undefined) {
                popHydrationState(workInProgress);
              }
            } else {
              var prevState = current.memoizedState;
              prevDidTimeout = prevState !== null;

              if (!nextDidTimeout && prevState !== null) {
                // We just switched from the fallback to the normal children.
                // Delete the fallback.
                // TODO: Would it be better to store the fallback fragment on
                // the stateNode during the begin phase?
                var currentFallbackChild = current.child.sibling;

                if (currentFallbackChild !== null) {
                  // Deletions go at the beginning of the return fiber's effect list
                  var first = workInProgress.firstEffect;

                  if (first !== null) {
                    workInProgress.firstEffect = currentFallbackChild;
                    currentFallbackChild.nextEffect = first;
                  } else {
                    workInProgress.firstEffect = workInProgress.lastEffect = currentFallbackChild;
                    currentFallbackChild.nextEffect = null;
                  }

                  currentFallbackChild.effectTag = Deletion;
                }
              }
            }

            if (nextDidTimeout && !prevDidTimeout) {
              // If this subtreee is running in blocking mode we can suspend,
              // otherwise we won't suspend.
              // TODO: This will still suspend a synchronous tree if anything
              // in the concurrent tree already suspended during this render.
              // This is a known bug.
              if ((workInProgress.mode & BlockingMode) !== NoMode) {
                // TODO: Move this back to throwException because this is too late
                // if this is a large tree which is common for initial loads. We
                // don't know if we should restart a render or not until we get
                // this marker, and this is too late.
                // If this render already had a ping or lower pri updates,
                // and this is the first time we know we're going to suspend we
                // should be able to immediately restart from within throwException.
                var hasInvisibleChildContext = current === null && workInProgress.memoizedProps.unstable_avoidThisFallback !== true;

                if (hasInvisibleChildContext || hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext)) {
                  // If this was in an invisible tree or a new render, then showing
                  // this boundary is ok.
                  renderDidSuspend();
                } else {
                  // Otherwise, we're going to have to hide content so we should
                  // suspend for longer if possible.
                  renderDidSuspendDelayIfPossible();
                }
              }
            }

            if (supportsPersistence) {
              // TODO: Only schedule updates if not prevDidTimeout.
              if (nextDidTimeout) {
                // If this boundary just timed out, schedule an effect to attach a
                // retry listener to the proimse. This flag is also used to hide the
                // primary children.
                workInProgress.effectTag |= Update;
              }
            }

            if (supportsMutation) {
              // TODO: Only schedule updates if these values are non equal, i.e. it changed.
              if (nextDidTimeout || prevDidTimeout) {
                // If this boundary just timed out, schedule an effect to attach a
                // retry listener to the proimse. This flag is also used to hide the
                // primary children. In mutation mode, we also need the flag to
                // *unhide* children that were previously hidden, so check if the
                // is currently timed out, too.
                workInProgress.effectTag |= Update;
              }
            }

            if (enableSuspenseCallback && workInProgress.updateQueue !== null && workInProgress.memoizedProps.suspenseCallback != null) {
              // Always notify the callback
              workInProgress.effectTag |= Update;
            }

            break;
          }

        case Fragment:
          break;

        case Mode:
          break;

        case Profiler:
          break;

        case HostPortal:
          popHostContainer(workInProgress);
          updateHostContainer(workInProgress);
          break;

        case ContextProvider:
          // Pop provider fiber
          popProvider(workInProgress);
          break;

        case ContextConsumer:
          break;

        case MemoComponent:
          break;

        case IncompleteClassComponent:
          {
            // Same as class component case. I put it down here so that the tags are
            // sequential to ensure this switch is compiled to a jump table.
            var _Component = workInProgress.type;

            if (isContextProvider(_Component)) {
              popContext(workInProgress);
            }

            break;
          }

        case SuspenseListComponent:
          {
            popSuspenseContext(workInProgress);
            var renderState = workInProgress.memoizedState;

            if (renderState === null) {
              // We're running in the default, "independent" mode. We don't do anything
              // in this mode.
              break;
            }

            var didSuspendAlready = (workInProgress.effectTag & DidCapture) !== NoEffect;
            var renderedTail = renderState.rendering;

            if (renderedTail === null) {
              // We just rendered the head.
              if (!didSuspendAlready) {
                // This is the first pass. We need to figure out if anything is still
                // suspended in the rendered set.
                // If new content unsuspended, but there's still some content that
                // didn't. Then we need to do a second pass that forces everything
                // to keep showing their fallbacks.
                // We might be suspended if something in this render pass suspended, or
                // something in the previous committed pass suspended. Otherwise,
                // there's no chance so we can skip the expensive call to
                // findFirstSuspended.
                var cannotBeSuspended = renderHasNotSuspendedYet() && (current === null || (current.effectTag & DidCapture) === NoEffect);

                if (!cannotBeSuspended) {
                  var row = workInProgress.child;

                  while (row !== null) {
                    var suspended = findFirstSuspended(row);

                    if (suspended !== null) {
                      didSuspendAlready = true;
                      workInProgress.effectTag |= DidCapture;
                      cutOffTailIfNeeded(renderState, false); // If this is a newly suspended tree, it might not get committed as
                      // part of the second pass. In that case nothing will subscribe to
                      // its thennables. Instead, we'll transfer its thennables to the
                      // SuspenseList so that it can retry if they resolve.
                      // There might be multiple of these in the list but since we're
                      // going to wait for all of them anyway, it doesn't really matter
                      // which ones gets to ping. In theory we could get clever and keep
                      // track of how many dependencies remain but it gets tricky because
                      // in the meantime, we can add/remove/change items and dependencies.
                      // We might bail out of the loop before finding any but that
                      // doesn't matter since that means that the other boundaries that
                      // we did find already has their listeners attached.

                      var newThennables = suspended.updateQueue;

                      if (newThennables !== null) {
                        workInProgress.updateQueue = newThennables;
                        workInProgress.effectTag |= Update;
                      } // Rerender the whole list, but this time, we'll force fallbacks
                      // to stay in place.
                      // Reset the effect list before doing the second pass since that's now invalid.


                      if (renderState.lastEffect === null) {
                        workInProgress.firstEffect = null;
                      }

                      workInProgress.lastEffect = renderState.lastEffect; // Reset the child fibers to their original state.

                      resetChildFibers(workInProgress, renderExpirationTime); // Set up the Suspense Context to force suspense and immediately
                      // rerender the children.

                      pushSuspenseContext(workInProgress, setShallowSuspenseContext(suspenseStackCursor.current, ForceSuspenseFallback));
                      return workInProgress.child;
                    }

                    row = row.sibling;
                  }
                }
              } else {
                cutOffTailIfNeeded(renderState, false);
              } // Next we're going to render the tail.

            } else {
              // Append the rendered row to the child list.
              if (!didSuspendAlready) {
                var _suspended = findFirstSuspended(renderedTail);

                if (_suspended !== null) {
                  workInProgress.effectTag |= DidCapture;
                  didSuspendAlready = true; // Ensure we transfer the update queue to the parent so that it doesn't
                  // get lost if this row ends up dropped during a second pass.

                  var _newThennables = _suspended.updateQueue;

                  if (_newThennables !== null) {
                    workInProgress.updateQueue = _newThennables;
                    workInProgress.effectTag |= Update;
                  }

                  cutOffTailIfNeeded(renderState, true); // This might have been modified.

                  if (renderState.tail === null && renderState.tailMode === 'hidden' && !renderedTail.alternate) {
                    // We need to delete the row we just rendered.
                    // Reset the effect list to what it was before we rendered this
                    // child. The nested children have already appended themselves.
                    var lastEffect = workInProgress.lastEffect = renderState.lastEffect; // Remove any effects that were appended after this point.

                    if (lastEffect !== null) {
                      lastEffect.nextEffect = null;
                    } // We're done.


                    return null;
                  }
                } else if (now() > renderState.tailExpiration && renderExpirationTime > Never) {
                  // We have now passed our CPU deadline and we'll just give up further
                  // attempts to render the main content and only render fallbacks.
                  // The assumption is that this is usually faster.
                  workInProgress.effectTag |= DidCapture;
                  didSuspendAlready = true;
                  cutOffTailIfNeeded(renderState, false); // Since nothing actually suspended, there will nothing to ping this
                  // to get it started back up to attempt the next item. If we can show
                  // them, then they really have the same priority as this render.
                  // So we'll pick it back up the very next render pass once we've had
                  // an opportunity to yield for paint.

                  var nextPriority = renderExpirationTime - 1;
                  workInProgress.expirationTime = workInProgress.childExpirationTime = nextPriority;

                  if (enableSchedulerTracing) {
                    markSpawnedWork(nextPriority);
                  }
                }
              }

              if (renderState.isBackwards) {
                // The effect list of the backwards tail will have been added
                // to the end. This breaks the guarantee that life-cycles fire in
                // sibling order but that isn't a strong guarantee promised by React.
                // Especially since these might also just pop in during future commits.
                // Append to the beginning of the list.
                renderedTail.sibling = workInProgress.child;
                workInProgress.child = renderedTail;
              } else {
                var previousSibling = renderState.last;

                if (previousSibling !== null) {
                  previousSibling.sibling = renderedTail;
                } else {
                  workInProgress.child = renderedTail;
                }

                renderState.last = renderedTail;
              }
            }

            if (renderState.tail !== null) {
              // We still have tail rows to render.
              if (renderState.tailExpiration === 0) {
                // Heuristic for how long we're willing to spend rendering rows
                // until we just give up and show what we have so far.
                var TAIL_EXPIRATION_TIMEOUT_MS = 500;
                renderState.tailExpiration = now() + TAIL_EXPIRATION_TIMEOUT_MS;
              } // Pop a row.


              var next = renderState.tail;
              renderState.rendering = next;
              renderState.tail = next.sibling;
              renderState.lastEffect = workInProgress.lastEffect;
              next.sibling = null; // Restore the context.
              // TODO: We can probably just avoid popping it instead and only
              // setting it the first time we go from not suspended to suspended.

              var suspenseContext = suspenseStackCursor.current;

              if (didSuspendAlready) {
                suspenseContext = setShallowSuspenseContext(suspenseContext, ForceSuspenseFallback);
              } else {
                suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);
              }

              pushSuspenseContext(workInProgress, suspenseContext); // Do a pass over the next row.

              return next;
            }

            break;
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              var fundamentalImpl = workInProgress.type.impl;
              var fundamentalInstance = workInProgress.stateNode;

              if (fundamentalInstance === null) {
                var getInitialState = fundamentalImpl.getInitialState;
                var fundamentalState;

                if (getInitialState !== undefined) {
                  fundamentalState = getInitialState(newProps);
                }

                fundamentalInstance = workInProgress.stateNode = createFundamentalStateInstance(workInProgress, newProps, fundamentalImpl, fundamentalState || {});

                var _instance5 = getFundamentalComponentInstance(fundamentalInstance);

                fundamentalInstance.instance = _instance5;

                if (fundamentalImpl.reconcileChildren === false) {
                  return null;
                }

                appendAllChildren(_instance5, workInProgress, false, false);
                mountFundamentalComponent(fundamentalInstance);
              } else {
                // We fire update in commit phase
                var prevProps = fundamentalInstance.props;
                fundamentalInstance.prevProps = prevProps;
                fundamentalInstance.props = newProps;
                fundamentalInstance.currentFiber = workInProgress;

                if (supportsPersistence) {
                  var _instance6 = cloneFundamentalInstance(fundamentalInstance);

                  fundamentalInstance.instance = _instance6;
                  appendAllChildren(_instance6, workInProgress, false, false);
                }

                var shouldUpdate = shouldUpdateFundamentalComponent(fundamentalInstance);

                if (shouldUpdate) {
                  markUpdate(workInProgress);
                }
              }
            }

            break;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              if (current === null) {
                var _type3 = workInProgress.type;
                var scopeInstance = {
                  fiber: workInProgress,
                  methods: null
                };
                workInProgress.stateNode = scopeInstance;
                scopeInstance.methods = createScopeMethods(_type3, scopeInstance);

                if (enableFlareAPI) {
                  var _listeners2 = newProps.listeners;

                  if (_listeners2 != null) {
                    var _rootContainerInstance2 = getRootHostContainer();

                    updateEventListeners(_listeners2, workInProgress, _rootContainerInstance2);
                  }
                }

                if (workInProgress.ref !== null) {
                  markRef$1(workInProgress);
                  markUpdate(workInProgress);
                }
              } else {
                if (enableFlareAPI) {
                  var _prevListeners = current.memoizedProps.listeners;
                  var _nextListeners = newProps.listeners;

                  if (_prevListeners !== _nextListeners || workInProgress.ref !== null) {
                    markUpdate(workInProgress);
                  }
                } else {
                  if (workInProgress.ref !== null) {
                    markUpdate(workInProgress);
                  }
                }

                if (current.ref !== workInProgress.ref) {
                  markRef$1(workInProgress);
                }
              }
            }

            break;
          }

        default:
          {
            {
              throw Error("Unknown unit of work tag (" + workInProgress.tag + "). This error is likely caused by a bug in React. Please file an issue.");
            }
          }
      }

      return null;
    }

    function unwindWork(workInProgress, renderExpirationTime) {
      switch (workInProgress.tag) {
        case ClassComponent:
          {
            var Component = workInProgress.type;

            if (isContextProvider(Component)) {
              popContext(workInProgress);
            }

            var effectTag = workInProgress.effectTag;

            if (effectTag & ShouldCapture) {
              workInProgress.effectTag = effectTag & ~ShouldCapture | DidCapture;
              return workInProgress;
            }

            return null;
          }

        case HostRoot:
          {
            popHostContainer(workInProgress);
            popTopLevelContextObject(workInProgress);
            var _effectTag = workInProgress.effectTag;

            if (!((_effectTag & DidCapture) === NoEffect)) {
              {
                throw Error("The root failed to unmount after an error. This is likely a bug in React. Please file an issue.");
              }
            }

            workInProgress.effectTag = _effectTag & ~ShouldCapture | DidCapture;
            return workInProgress;
          }

        case HostComponent:
          {
            // TODO: popHydrationState
            popHostContext(workInProgress);
            return null;
          }

        case SuspenseComponent:
          {
            popSuspenseContext(workInProgress);

            if (enableSuspenseServerRenderer) {
              var suspenseState = workInProgress.memoizedState;

              if (suspenseState !== null && suspenseState.dehydrated !== null) {
                if (!(workInProgress.alternate !== null)) {
                  {
                    throw Error("Threw in newly mounted dehydrated component. This is likely a bug in React. Please file an issue.");
                  }
                }

                resetHydrationState();
              }
            }

            var _effectTag2 = workInProgress.effectTag;

            if (_effectTag2 & ShouldCapture) {
              workInProgress.effectTag = _effectTag2 & ~ShouldCapture | DidCapture; // Captured a suspense effect. Re-render the boundary.

              return workInProgress;
            }

            return null;
          }

        case SuspenseListComponent:
          {
            popSuspenseContext(workInProgress); // SuspenseList doesn't actually catch anything. It should've been
            // caught by a nested boundary. If not, it should bubble through.

            return null;
          }

        case HostPortal:
          popHostContainer(workInProgress);
          return null;

        case ContextProvider:
          popProvider(workInProgress);
          return null;

        default:
          return null;
      }
    }

    function unwindInterruptedWork(interruptedWork) {
      switch (interruptedWork.tag) {
        case ClassComponent:
          {
            var childContextTypes = interruptedWork.type.childContextTypes;

            if (childContextTypes !== null && childContextTypes !== undefined) {
              popContext(interruptedWork);
            }

            break;
          }

        case HostRoot:
          {
            popHostContainer(interruptedWork);
            popTopLevelContextObject(interruptedWork);
            break;
          }

        case HostComponent:
          {
            popHostContext(interruptedWork);
            break;
          }

        case HostPortal:
          popHostContainer(interruptedWork);
          break;

        case SuspenseComponent:
          popSuspenseContext(interruptedWork);
          break;

        case SuspenseListComponent:
          popSuspenseContext(interruptedWork);
          break;

        case ContextProvider:
          popProvider(interruptedWork);
          break;

        default:
          break;
      }
    }

    function createCapturedValue(value, source) {
      // If the value is an error, call this function immediately after it is thrown
      // so the stack is accurate.
      return {
        value: value,
        source: source,
        stack: getStackByFiberInDevAndProd(source)
      };
    } // This module is forked in different environments.
    // By default, return `true` to log errors to the console.
    // Forks can return `false` if this isn't desirable.


    function showErrorDialog(capturedError) {
      return true;
    }

    function logCapturedError(capturedError) {
      var logError = showErrorDialog(capturedError); // Allow injected showErrorDialog() to prevent default console.error logging.
      // This enables renderers like ReactNative to better manage redbox behavior.

      if (logError === false) {
        return;
      }

      var error = capturedError.error;
      {
        var componentName = capturedError.componentName,
            componentStack = capturedError.componentStack,
            errorBoundaryName = capturedError.errorBoundaryName,
            errorBoundaryFound = capturedError.errorBoundaryFound,
            willRetry = capturedError.willRetry; // Browsers support silencing uncaught errors by calling
        // `preventDefault()` in window `error` handler.
        // We record this information as an expando on the error.

        if (error != null && error._suppressLogging) {
          if (errorBoundaryFound && willRetry) {
            // The error is recoverable and was silenced.
            // Ignore it and don't print the stack addendum.
            // This is handy for testing error boundaries without noise.
            return;
          } // The error is fatal. Since the silencing might have
          // been accidental, we'll surface it anyway.
          // However, the browser would have silenced the original error
          // so we'll print it first, and then print the stack addendum.


          console.error(error); // For a more detailed description of this block, see:
          // https://github.com/facebook/react/pull/13384
        }

        var componentNameMessage = componentName ? "The above error occurred in the <" + componentName + "> component:" : 'The above error occurred in one of your React components:';
        var errorBoundaryMessage; // errorBoundaryFound check is sufficient; errorBoundaryName check is to satisfy Flow.

        if (errorBoundaryFound && errorBoundaryName) {
          if (willRetry) {
            errorBoundaryMessage = "React will try to recreate this component tree from scratch " + ("using the error boundary you provided, " + errorBoundaryName + ".");
          } else {
            errorBoundaryMessage = "This error was initially handled by the error boundary " + errorBoundaryName + ".\n" + "Recreating the tree from scratch failed so React will unmount the tree.";
          }
        } else {
          errorBoundaryMessage = 'Consider adding an error boundary to your tree to customize error handling behavior.\n' + 'Visit https://fb.me/react-error-boundaries to learn more about error boundaries.';
        }

        var combinedMessage = "" + componentNameMessage + componentStack + "\n\n" + ("" + errorBoundaryMessage); // In development, we provide our own message with just the component stack.
        // We don't include the original error message and JS stack because the browser
        // has already printed it. Even if the application swallows the error, it is still
        // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.

        console.error(combinedMessage);
      }
    }

    var didWarnAboutUndefinedSnapshotBeforeUpdate = null;
    {
      didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();
    }
    var PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;

    function logError(boundary, errorInfo) {
      var source = errorInfo.source;
      var stack = errorInfo.stack;

      if (stack === null && source !== null) {
        stack = getStackByFiberInDevAndProd(source);
      }

      var capturedError = {
        componentName: source !== null ? getComponentName(source.type) : null,
        componentStack: stack !== null ? stack : '',
        error: errorInfo.value,
        errorBoundary: null,
        errorBoundaryName: null,
        errorBoundaryFound: false,
        willRetry: false
      };

      if (boundary !== null && boundary.tag === ClassComponent) {
        capturedError.errorBoundary = boundary.stateNode;
        capturedError.errorBoundaryName = getComponentName(boundary.type);
        capturedError.errorBoundaryFound = true;
        capturedError.willRetry = true;
      }

      try {
        logCapturedError(capturedError);
      } catch (e) {
        // This method must not throw, or React internal state will get messed up.
        // If console.error is overridden, or logCapturedError() shows a dialog that throws,
        // we want to report this error outside of the normal stack as a last resort.
        // https://github.com/facebook/react/issues/13188
        setTimeout(function () {
          throw e;
        });
      }
    }

    var callComponentWillUnmountWithTimer = function (current$$1, instance) {
      startPhaseTimer(current$$1, 'componentWillUnmount');
      instance.props = current$$1.memoizedProps;
      instance.state = current$$1.memoizedState;
      instance.componentWillUnmount();
      stopPhaseTimer();
    }; // Capture errors so they don't interrupt unmounting.


    function safelyCallComponentWillUnmount(current$$1, instance) {
      {
        invokeGuardedCallback(null, callComponentWillUnmountWithTimer, null, current$$1, instance);

        if (hasCaughtError()) {
          var unmountError = clearCaughtError();
          captureCommitPhaseError(current$$1, unmountError);
        }
      }
    }

    function safelyDetachRef(current$$1) {
      var ref = current$$1.ref;

      if (ref !== null) {
        if (typeof ref === 'function') {
          {
            invokeGuardedCallback(null, ref, null, null);

            if (hasCaughtError()) {
              var refError = clearCaughtError();
              captureCommitPhaseError(current$$1, refError);
            }
          }
        } else {
          ref.current = null;
        }
      }
    }

    function safelyCallDestroy(current$$1, destroy) {
      {
        invokeGuardedCallback(null, destroy, null);

        if (hasCaughtError()) {
          var error = clearCaughtError();
          captureCommitPhaseError(current$$1, error);
        }
      }
    }

    function commitBeforeMutationLifeCycles(current$$1, finishedWork) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            commitHookEffectList(UnmountSnapshot, NoEffect$1, finishedWork);
            return;
          }

        case ClassComponent:
          {
            if (finishedWork.effectTag & Snapshot) {
              if (current$$1 !== null) {
                var prevProps = current$$1.memoizedProps;
                var prevState = current$$1.memoizedState;
                startPhaseTimer(finishedWork, 'getSnapshotBeforeUpdate');
                var instance = finishedWork.stateNode; // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'getSnapshotBeforeUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                var snapshot = instance.getSnapshotBeforeUpdate(finishedWork.elementType === finishedWork.type ? prevProps : resolveDefaultProps(finishedWork.type, prevProps), prevState);
                {
                  var didWarnSet = didWarnAboutUndefinedSnapshotBeforeUpdate;

                  if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {
                    didWarnSet.add(finishedWork.type);
                    warningWithoutStack$1(false, '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' + 'must be returned. You have returned undefined.', getComponentName(finishedWork.type));
                  }
                }
                instance.__reactInternalSnapshotBeforeUpdate = snapshot;
                stopPhaseTimer();
              }
            }

            return;
          }

        case HostRoot:
        case HostComponent:
        case HostText:
        case HostPortal:
        case IncompleteClassComponent:
          // Nothing to do for these component types
          return;

        default:
          {
            {
              {
                throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
      }
    }

    function commitHookEffectList(unmountTag, mountTag, finishedWork) {
      var updateQueue = finishedWork.updateQueue;
      var lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;

      if (lastEffect !== null) {
        var firstEffect = lastEffect.next;
        var effect = firstEffect;

        do {
          if ((effect.tag & unmountTag) !== NoEffect$1) {
            // Unmount
            var destroy = effect.destroy;
            effect.destroy = undefined;

            if (destroy !== undefined) {
              destroy();
            }
          }

          if ((effect.tag & mountTag) !== NoEffect$1) {
            // Mount
            var create = effect.create;
            effect.destroy = create();
            {
              var _destroy = effect.destroy;

              if (_destroy !== undefined && typeof _destroy !== 'function') {
                var addendum = void 0;

                if (_destroy === null) {
                  addendum = ' You returned null. If your effect does not require clean ' + 'up, return undefined (or nothing).';
                } else if (typeof _destroy.then === 'function') {
                  addendum = '\n\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' + 'Instead, write the async function inside your effect ' + 'and call it immediately:\n\n' + 'useEffect(() => {\n' + '  async function fetchData() {\n' + '    // You can await here\n' + '    const response = await MyAPI.getData(someId);\n' + '    // ...\n' + '  }\n' + '  fetchData();\n' + "}, [someId]); // Or [] if effect doesn't need props or state\n\n" + 'Learn more about data fetching with Hooks: https://fb.me/react-hooks-data-fetching';
                } else {
                  addendum = ' You returned: ' + _destroy;
                }

                warningWithoutStack$1(false, 'An effect function must not return anything besides a function, ' + 'which is used for clean-up.%s%s', addendum, getStackByFiberInDevAndProd(finishedWork));
              }
            }
          }

          effect = effect.next;
        } while (effect !== firstEffect);
      }
    }

    function commitPassiveHookEffects(finishedWork) {
      if ((finishedWork.effectTag & Passive) !== NoEffect) {
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef:
          case SimpleMemoComponent:
            {
              commitHookEffectList(UnmountPassive, NoEffect$1, finishedWork);
              commitHookEffectList(NoEffect$1, MountPassive, finishedWork);
              break;
            }

          default:
            break;
        }
      }
    }

    function commitLifeCycles(finishedRoot, current$$1, finishedWork, committedExpirationTime) {
      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case SimpleMemoComponent:
          {
            commitHookEffectList(UnmountLayout, MountLayout, finishedWork);
            break;
          }

        case ClassComponent:
          {
            var instance = finishedWork.stateNode;

            if (finishedWork.effectTag & Update) {
              if (current$$1 === null) {
                startPhaseTimer(finishedWork, 'componentDidMount'); // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidMount. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                instance.componentDidMount();
                stopPhaseTimer();
              } else {
                var prevProps = finishedWork.elementType === finishedWork.type ? current$$1.memoizedProps : resolveDefaultProps(finishedWork.type, current$$1.memoizedProps);
                var prevState = current$$1.memoizedState;
                startPhaseTimer(finishedWork, 'componentDidUpdate'); // We could update instance props and state here,
                // but instead we rely on them being set during last render.
                // TODO: revisit this when we implement resuming.

                {
                  if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                    !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                    !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'componentDidUpdate. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  }
                }
                instance.componentDidUpdate(prevProps, prevState, instance.__reactInternalSnapshotBeforeUpdate);
                stopPhaseTimer();
              }
            }

            var updateQueue = finishedWork.updateQueue;

            if (updateQueue !== null) {
              {
                if (finishedWork.type === finishedWork.elementType && !didWarnAboutReassigningProps) {
                  !(instance.props === finishedWork.memoizedProps) ? warning$1(false, 'Expected %s props to match memoized props before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                  !(instance.state === finishedWork.memoizedState) ? warning$1(false, 'Expected %s state to match memoized state before ' + 'processing the update queue. ' + 'This might either be because of a bug in React, or because ' + 'a component reassigns its own `this.props`. ' + 'Please file an issue.', getComponentName(finishedWork.type) || 'instance') : void 0;
                }
              } // We could update instance props and state here,
              // but instead we rely on them being set during last render.
              // TODO: revisit this when we implement resuming.

              commitUpdateQueue(finishedWork, updateQueue, instance, committedExpirationTime);
            }

            return;
          }

        case HostRoot:
          {
            var _updateQueue = finishedWork.updateQueue;

            if (_updateQueue !== null) {
              var _instance = null;

              if (finishedWork.child !== null) {
                switch (finishedWork.child.tag) {
                  case HostComponent:
                    _instance = getPublicInstance(finishedWork.child.stateNode);
                    break;

                  case ClassComponent:
                    _instance = finishedWork.child.stateNode;
                    break;
                }
              }

              commitUpdateQueue(finishedWork, _updateQueue, _instance, committedExpirationTime);
            }

            return;
          }

        case HostComponent:
          {
            var _instance2 = finishedWork.stateNode; // Renderers may schedule work to be done after host components are mounted
            // (eg DOM renderer may schedule auto-focus for inputs and form controls).
            // These effects should only be committed when components are first mounted,
            // aka when there is no current/alternate.

            if (current$$1 === null && finishedWork.effectTag & Update) {
              var type = finishedWork.type;
              var props = finishedWork.memoizedProps;
              commitMount(_instance2, type, props, finishedWork);
            }

            return;
          }

        case HostText:
          {
            // We have no life-cycles associated with text.
            return;
          }

        case HostPortal:
          {
            // We have no life-cycles associated with portals.
            return;
          }

        case Profiler:
          {
            if (enableProfilerTimer) {
              var onRender = finishedWork.memoizedProps.onRender;

              if (typeof onRender === 'function') {
                if (enableSchedulerTracing) {
                  onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime(), finishedRoot.memoizedInteractions);
                } else {
                  onRender(finishedWork.memoizedProps.id, current$$1 === null ? 'mount' : 'update', finishedWork.actualDuration, finishedWork.treeBaseDuration, finishedWork.actualStartTime, getCommitTime());
                }
              }
            }

            return;
          }

        case SuspenseComponent:
          {
            commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);
            return;
          }

        case SuspenseListComponent:
        case IncompleteClassComponent:
        case FundamentalComponent:
        case ScopeComponent:
          return;

        default:
          {
            {
              {
                throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
      }
    }

    function hideOrUnhideAllChildren(finishedWork, isHidden) {
      if (supportsMutation) {
        // We only have the top Fiber that was inserted but we need to recurse down its
        // children to find all the terminal nodes.
        var node = finishedWork;

        while (true) {
          if (node.tag === HostComponent) {
            var instance = node.stateNode;

            if (isHidden) {
              hideInstance(instance);
            } else {
              unhideInstance(node.stateNode, node.memoizedProps);
            }
          } else if (node.tag === HostText) {
            var _instance3 = node.stateNode;

            if (isHidden) {
              hideTextInstance(_instance3);
            } else {
              unhideTextInstance(_instance3, node.memoizedProps);
            }
          } else if (node.tag === SuspenseComponent && node.memoizedState !== null && node.memoizedState.dehydrated === null) {
            // Found a nested Suspense component that timed out. Skip over the
            // primary child fragment, which should remain hidden.
            var fallbackChildFragment = node.child.sibling;
            fallbackChildFragment.return = node;
            node = fallbackChildFragment;
            continue;
          } else if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }

          if (node === finishedWork) {
            return;
          }

          while (node.sibling === null) {
            if (node.return === null || node.return === finishedWork) {
              return;
            }

            node = node.return;
          }

          node.sibling.return = node.return;
          node = node.sibling;
        }
      }
    }

    function commitAttachRef(finishedWork) {
      var ref = finishedWork.ref;

      if (ref !== null) {
        var instance = finishedWork.stateNode;
        var instanceToUse;

        switch (finishedWork.tag) {
          case HostComponent:
            instanceToUse = getPublicInstance(instance);
            break;

          default:
            instanceToUse = instance;
        } // Moved outside to ensure DCE works with this flag


        if (enableScopeAPI && finishedWork.tag === ScopeComponent) {
          instanceToUse = instance.methods;
        }

        if (typeof ref === 'function') {
          ref(instanceToUse);
        } else {
          {
            if (!ref.hasOwnProperty('current')) {
              warningWithoutStack$1(false, 'Unexpected ref object provided for %s. ' + 'Use either a ref-setter function or React.createRef().%s', getComponentName(finishedWork.type), getStackByFiberInDevAndProd(finishedWork));
            }
          }
          ref.current = instanceToUse;
        }
      }
    }

    function commitDetachRef(current$$1) {
      var currentRef = current$$1.ref;

      if (currentRef !== null) {
        if (typeof currentRef === 'function') {
          currentRef(null);
        } else {
          currentRef.current = null;
        }
      }
    } // User-originating errors (lifecycles and refs) should not interrupt
    // deletion, so don't let them throw. Host-originating errors should
    // interrupt deletion, so it's okay


    function commitUnmount(finishedRoot, current$$1, renderPriorityLevel) {
      onCommitUnmount(current$$1);

      switch (current$$1.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
          {
            var updateQueue = current$$1.updateQueue;

            if (updateQueue !== null) {
              var lastEffect = updateQueue.lastEffect;

              if (lastEffect !== null) {
                var firstEffect = lastEffect.next; // When the owner fiber is deleted, the destroy function of a passive
                // effect hook is called during the synchronous commit phase. This is
                // a concession to implementation complexity. Calling it in the
                // passive effect phase (like they usually are, when dependencies
                // change during an update) would require either traversing the
                // children of the deleted fiber again, or including unmount effects
                // as part of the fiber effect list.
                //
                // Because this is during the sync commit phase, we need to change
                // the priority.
                //
                // TODO: Reconsider this implementation trade off.

                var priorityLevel = renderPriorityLevel > NormalPriority ? NormalPriority : renderPriorityLevel;
                runWithPriority$2(priorityLevel, function () {
                  var effect = firstEffect;

                  do {
                    var destroy = effect.destroy;

                    if (destroy !== undefined) {
                      safelyCallDestroy(current$$1, destroy);
                    }

                    effect = effect.next;
                  } while (effect !== firstEffect);
                });
              }
            }

            break;
          }

        case ClassComponent:
          {
            safelyDetachRef(current$$1);
            var instance = current$$1.stateNode;

            if (typeof instance.componentWillUnmount === 'function') {
              safelyCallComponentWillUnmount(current$$1, instance);
            }

            return;
          }

        case HostComponent:
          {
            if (enableFlareAPI) {
              var dependencies = current$$1.dependencies;

              if (dependencies !== null) {
                var respondersMap = dependencies.responders;

                if (respondersMap !== null) {
                  var responderInstances = Array.from(respondersMap.values());

                  for (var i = 0, length = responderInstances.length; i < length; i++) {
                    var responderInstance = responderInstances[i];
                    unmountResponderInstance(responderInstance);
                  }

                  dependencies.responders = null;
                }
              }
            }

            safelyDetachRef(current$$1);
            return;
          }

        case HostPortal:
          {
            // TODO: this is recursive.
            // We are also not using this parent because
            // the portal will get pushed immediately.
            if (supportsMutation) {
              unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
            } else if (supportsPersistence) {
              emptyPortalContainer(current$$1);
            }

            return;
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              var fundamentalInstance = current$$1.stateNode;

              if (fundamentalInstance !== null) {
                unmountFundamentalComponent(fundamentalInstance);
                current$$1.stateNode = null;
              }
            }

            return;
          }

        case DehydratedFragment:
          {
            if (enableSuspenseCallback) {
              var hydrationCallbacks = finishedRoot.hydrationCallbacks;

              if (hydrationCallbacks !== null) {
                var onDeleted = hydrationCallbacks.onDeleted;

                if (onDeleted) {
                  onDeleted(current$$1.stateNode);
                }
              }
            }

            return;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              safelyDetachRef(current$$1);
            }
          }
      }
    }

    function commitNestedUnmounts(finishedRoot, root, renderPriorityLevel) {
      // While we're inside a removed host node we don't want to call
      // removeChild on the inner nodes because they're removed by the top
      // call anyway. We also want to call componentWillUnmount on all
      // composites before this host node is removed from the tree. Therefore
      // we do an inner loop while we're still inside the host node.
      var node = root;

      while (true) {
        commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because they may contain more composite or host nodes.
        // Skip portals because commitUnmount() currently visits them recursively.

        if (node.child !== null && ( // If we use mutation we drill down into portals using commitUnmount above.
        // If we don't use mutation we drill down into portals here instead.
        !supportsMutation || node.tag !== HostPortal)) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === root) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === root) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function detachFiber(current$$1) {
      var alternate = current$$1.alternate; // Cut off the return pointers to disconnect it from the tree. Ideally, we
      // should clear the child pointer of the parent alternate to let this
      // get GC:ed but we don't know which for sure which parent is the current
      // one so we'll settle for GC:ing the subtree of this child. This child
      // itself will be GC:ed when the parent updates the next time.

      current$$1.return = null;
      current$$1.child = null;
      current$$1.memoizedState = null;
      current$$1.updateQueue = null;
      current$$1.dependencies = null;
      current$$1.alternate = null;
      current$$1.firstEffect = null;
      current$$1.lastEffect = null;
      current$$1.pendingProps = null;
      current$$1.memoizedProps = null;

      if (alternate !== null) {
        detachFiber(alternate);
      }
    }

    function emptyPortalContainer(current$$1) {
      if (!supportsPersistence) {
        return;
      }

      var portal = current$$1.stateNode;
      var containerInfo = portal.containerInfo;
      var emptyChildSet = createContainerChildSet(containerInfo);
      replaceContainerChildren(containerInfo, emptyChildSet);
    }

    function commitContainer(finishedWork) {
      if (!supportsPersistence) {
        return;
      }

      switch (finishedWork.tag) {
        case ClassComponent:
        case HostComponent:
        case HostText:
        case FundamentalComponent:
          {
            return;
          }

        case HostRoot:
        case HostPortal:
          {
            var portalOrRoot = finishedWork.stateNode;
            var containerInfo = portalOrRoot.containerInfo,
                pendingChildren = portalOrRoot.pendingChildren;
            replaceContainerChildren(containerInfo, pendingChildren);
            return;
          }

        default:
          {
            {
              {
                throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
      }
    }

    function getHostParentFiber(fiber) {
      var parent = fiber.return;

      while (parent !== null) {
        if (isHostParent(parent)) {
          return parent;
        }

        parent = parent.return;
      }

      {
        {
          throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
        }
      }
    }

    function isHostParent(fiber) {
      return fiber.tag === HostComponent || fiber.tag === HostRoot || fiber.tag === HostPortal;
    }

    function getHostSibling(fiber) {
      // We're going to search forward into the tree until we find a sibling host
      // node. Unfortunately, if multiple insertions are done in a row we have to
      // search past them. This leads to exponential search for the next sibling.
      // TODO: Find a more efficient way to do this.
      var node = fiber;

      siblings: while (true) {
        // If we didn't find anything, let's try the next sibling.
        while (node.sibling === null) {
          if (node.return === null || isHostParent(node.return)) {
            // If we pop out of the root or hit the parent the fiber we are the
            // last sibling.
            return null;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;

        while (node.tag !== HostComponent && node.tag !== HostText && node.tag !== DehydratedFragment) {
          // If it is not host node and, we might have a host node inside it.
          // Try to search down until we find one.
          if (node.effectTag & Placement) {
            // If we don't have a child, try the siblings instead.
            continue siblings;
          } // If we don't have a child, try the siblings instead.
          // We also skip portals because they are not part of this host tree.


          if (node.child === null || node.tag === HostPortal) {
            continue siblings;
          } else {
            node.child.return = node;
            node = node.child;
          }
        } // Check if this host node is stable or about to be placed.


        if (!(node.effectTag & Placement)) {
          // Found it!
          return node.stateNode;
        }
      }
    }

    function commitPlacement(finishedWork) {
      if (!supportsMutation) {
        return;
      } // Recursively insert all host nodes into the parent.


      var parentFiber = getHostParentFiber(finishedWork); // Note: these two variables *must* always be updated together.

      var parent;
      var isContainer;
      var parentStateNode = parentFiber.stateNode;

      switch (parentFiber.tag) {
        case HostComponent:
          parent = parentStateNode;
          isContainer = false;
          break;

        case HostRoot:
          parent = parentStateNode.containerInfo;
          isContainer = true;
          break;

        case HostPortal:
          parent = parentStateNode.containerInfo;
          isContainer = true;
          break;

        case FundamentalComponent:
          if (enableFundamentalAPI) {
            parent = parentStateNode.instance;
            isContainer = false;
          }

        // eslint-disable-next-line-no-fallthrough

        default:
          {
            {
              throw Error("Invalid host parent fiber. This error is likely caused by a bug in React. Please file an issue.");
            }
          }
      }

      if (parentFiber.effectTag & ContentReset) {
        // Reset the text content of the parent before doing any insertions
        resetTextContent(parent); // Clear ContentReset from the effect tag

        parentFiber.effectTag &= ~ContentReset;
      }

      var before = getHostSibling(finishedWork); // We only have the top Fiber that was inserted but we need to recurse down its
      // children to find all the terminal nodes.

      var node = finishedWork;

      while (true) {
        var isHost = node.tag === HostComponent || node.tag === HostText;

        if (isHost || enableFundamentalAPI && node.tag === FundamentalComponent) {
          var stateNode = isHost ? node.stateNode : node.stateNode.instance;

          if (before) {
            if (isContainer) {
              insertInContainerBefore(parent, stateNode, before);
            } else {
              insertBefore(parent, stateNode, before);
            }
          } else {
            if (isContainer) {
              appendChildToContainer(parent, stateNode);
            } else {
              appendChild(parent, stateNode);
            }
          }
        } else if (node.tag === HostPortal) {// If the insertion itself is a portal, then we don't want to traverse
          // down its children. Instead, we'll get insertions from each child in
          // the portal directly.
        } else if (node.child !== null) {
          node.child.return = node;
          node = node.child;
          continue;
        }

        if (node === finishedWork) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === finishedWork) {
            return;
          }

          node = node.return;
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel) {
      // We only have the top Fiber that was deleted but we need to recurse down its
      // children to find all the terminal nodes.
      var node = current$$1; // Each iteration, currentParent is populated with node's host parent if not
      // currentParentIsValid.

      var currentParentIsValid = false; // Note: these two variables *must* always be updated together.

      var currentParent;
      var currentParentIsContainer;

      while (true) {
        if (!currentParentIsValid) {
          var parent = node.return;

          findParent: while (true) {
            if (!(parent !== null)) {
              {
                throw Error("Expected to find a host parent. This error is likely caused by a bug in React. Please file an issue.");
              }
            }

            var parentStateNode = parent.stateNode;

            switch (parent.tag) {
              case HostComponent:
                currentParent = parentStateNode;
                currentParentIsContainer = false;
                break findParent;

              case HostRoot:
                currentParent = parentStateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;

              case HostPortal:
                currentParent = parentStateNode.containerInfo;
                currentParentIsContainer = true;
                break findParent;

              case FundamentalComponent:
                if (enableFundamentalAPI) {
                  currentParent = parentStateNode.instance;
                  currentParentIsContainer = false;
                }

            }

            parent = parent.return;
          }

          currentParentIsValid = true;
        }

        if (node.tag === HostComponent || node.tag === HostText) {
          commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
          // node from the tree.

          if (currentParentIsContainer) {
            removeChildFromContainer(currentParent, node.stateNode);
          } else {
            removeChild(currentParent, node.stateNode);
          } // Don't visit children because we already visited them.

        } else if (enableFundamentalAPI && node.tag === FundamentalComponent) {
          var fundamentalNode = node.stateNode.instance;
          commitNestedUnmounts(finishedRoot, node, renderPriorityLevel); // After all the children have unmounted, it is now safe to remove the
          // node from the tree.

          if (currentParentIsContainer) {
            removeChildFromContainer(currentParent, fundamentalNode);
          } else {
            removeChild(currentParent, fundamentalNode);
          }
        } else if (enableSuspenseServerRenderer && node.tag === DehydratedFragment) {
          if (enableSuspenseCallback) {
            var hydrationCallbacks = finishedRoot.hydrationCallbacks;

            if (hydrationCallbacks !== null) {
              var onDeleted = hydrationCallbacks.onDeleted;

              if (onDeleted) {
                onDeleted(node.stateNode);
              }
            }
          } // Delete the dehydrated suspense boundary and all of its content.


          if (currentParentIsContainer) {
            clearSuspenseBoundaryFromContainer(currentParent, node.stateNode);
          } else {
            clearSuspenseBoundary(currentParent, node.stateNode);
          }
        } else if (node.tag === HostPortal) {
          if (node.child !== null) {
            // When we go into a portal, it becomes the parent to remove from.
            // We will reassign it back when we pop the portal on the way up.
            currentParent = node.stateNode.containerInfo;
            currentParentIsContainer = true; // Visit children because portals might contain host components.

            node.child.return = node;
            node = node.child;
            continue;
          }
        } else {
          commitUnmount(finishedRoot, node, renderPriorityLevel); // Visit children because we may find more host components below.

          if (node.child !== null) {
            node.child.return = node;
            node = node.child;
            continue;
          }
        }

        if (node === current$$1) {
          return;
        }

        while (node.sibling === null) {
          if (node.return === null || node.return === current$$1) {
            return;
          }

          node = node.return;

          if (node.tag === HostPortal) {
            // When we go out of the portal, we need to restore the parent.
            // Since we don't keep a stack of them, we will search for it.
            currentParentIsValid = false;
          }
        }

        node.sibling.return = node.return;
        node = node.sibling;
      }
    }

    function commitDeletion(finishedRoot, current$$1, renderPriorityLevel) {
      if (supportsMutation) {
        // Recursively delete all host nodes from the parent.
        // Detach refs and call componentWillUnmount() on the whole subtree.
        unmountHostComponents(finishedRoot, current$$1, renderPriorityLevel);
      } else {
        // Detach refs and call componentWillUnmount() on the whole subtree.
        commitNestedUnmounts(finishedRoot, current$$1, renderPriorityLevel);
      }

      detachFiber(current$$1);
    }

    function commitWork(current$$1, finishedWork) {
      if (!supportsMutation) {
        switch (finishedWork.tag) {
          case FunctionComponent:
          case ForwardRef:
          case MemoComponent:
          case SimpleMemoComponent:
            {
              // Note: We currently never use MountMutation, but useLayout uses
              // UnmountMutation.
              commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
              return;
            }

          case Profiler:
            {
              return;
            }

          case SuspenseComponent:
            {
              commitSuspenseComponent(finishedWork);
              attachSuspenseRetryListeners(finishedWork);
              return;
            }

          case SuspenseListComponent:
            {
              attachSuspenseRetryListeners(finishedWork);
              return;
            }

          case HostRoot:
            {
              if (supportsHydration) {
                var root = finishedWork.stateNode;

                if (root.hydrate) {
                  // We've just hydrated. No need to hydrate again.
                  root.hydrate = false;
                  commitHydratedContainer(root.containerInfo);
                }
              }

              break;
            }
        }

        commitContainer(finishedWork);
        return;
      }

      switch (finishedWork.tag) {
        case FunctionComponent:
        case ForwardRef:
        case MemoComponent:
        case SimpleMemoComponent:
          {
            // Note: We currently never use MountMutation, but useLayout uses
            // UnmountMutation.
            commitHookEffectList(UnmountMutation, MountMutation, finishedWork);
            return;
          }

        case ClassComponent:
          {
            return;
          }

        case HostComponent:
          {
            var instance = finishedWork.stateNode;

            if (instance != null) {
              // Commit the work prepared earlier.
              var newProps = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
              // as the newProps. The updatePayload will contain the real change in
              // this case.

              var oldProps = current$$1 !== null ? current$$1.memoizedProps : newProps;
              var type = finishedWork.type; // TODO: Type the updateQueue to be specific to host components.

              var updatePayload = finishedWork.updateQueue;
              finishedWork.updateQueue = null;

              if (updatePayload !== null) {
                commitUpdate(instance, updatePayload, type, oldProps, newProps, finishedWork);
              }

              if (enableFlareAPI) {
                var prevListeners = oldProps.listeners;
                var nextListeners = newProps.listeners;

                if (prevListeners !== nextListeners) {
                  updateEventListeners(nextListeners, finishedWork, null);
                }
              }
            }

            return;
          }

        case HostText:
          {
            if (!(finishedWork.stateNode !== null)) {
              {
                throw Error("This should have a text node initialized. This error is likely caused by a bug in React. Please file an issue.");
              }
            }

            var textInstance = finishedWork.stateNode;
            var newText = finishedWork.memoizedProps; // For hydration we reuse the update path but we treat the oldProps
            // as the newProps. The updatePayload will contain the real change in
            // this case.

            var oldText = current$$1 !== null ? current$$1.memoizedProps : newText;
            commitTextUpdate(textInstance, oldText, newText);
            return;
          }

        case HostRoot:
          {
            if (supportsHydration) {
              var _root = finishedWork.stateNode;

              if (_root.hydrate) {
                // We've just hydrated. No need to hydrate again.
                _root.hydrate = false;
                commitHydratedContainer(_root.containerInfo);
              }
            }

            return;
          }

        case Profiler:
          {
            return;
          }

        case SuspenseComponent:
          {
            commitSuspenseComponent(finishedWork);
            attachSuspenseRetryListeners(finishedWork);
            return;
          }

        case SuspenseListComponent:
          {
            attachSuspenseRetryListeners(finishedWork);
            return;
          }

        case IncompleteClassComponent:
          {
            return;
          }

        case FundamentalComponent:
          {
            if (enableFundamentalAPI) {
              var fundamentalInstance = finishedWork.stateNode;
              updateFundamentalComponent(fundamentalInstance);
            }

            return;
          }

        case ScopeComponent:
          {
            if (enableScopeAPI) {
              var scopeInstance = finishedWork.stateNode;
              scopeInstance.fiber = finishedWork;

              if (enableFlareAPI) {
                var _newProps = finishedWork.memoizedProps;

                var _oldProps = current$$1 !== null ? current$$1.memoizedProps : _newProps;

                var _prevListeners = _oldProps.listeners;
                var _nextListeners = _newProps.listeners;

                if (_prevListeners !== _nextListeners) {
                  updateEventListeners(_nextListeners, finishedWork, null);
                }
              }
            }

            return;
          }

        default:
          {
            {
              {
                throw Error("This unit of work tag should not have side-effects. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          }
      }
    }

    function commitSuspenseComponent(finishedWork) {
      var newState = finishedWork.memoizedState;
      var newDidTimeout;
      var primaryChildParent = finishedWork;

      if (newState === null) {
        newDidTimeout = false;
      } else {
        newDidTimeout = true;
        primaryChildParent = finishedWork.child;
        markCommitTimeOfFallback();
      }

      if (supportsMutation && primaryChildParent !== null) {
        hideOrUnhideAllChildren(primaryChildParent, newDidTimeout);
      }

      if (enableSuspenseCallback && newState !== null) {
        var suspenseCallback = finishedWork.memoizedProps.suspenseCallback;

        if (typeof suspenseCallback === 'function') {
          var thenables = finishedWork.updateQueue;

          if (thenables !== null) {
            suspenseCallback(new Set(thenables));
          }
        } else {
          if (suspenseCallback !== undefined) {
            warning$1(false, 'Unexpected type for suspenseCallback.');
          }
        }
      }
    }

    function commitSuspenseHydrationCallbacks(finishedRoot, finishedWork) {
      if (!supportsHydration) {
        return;
      }

      var newState = finishedWork.memoizedState;

      if (newState === null) {
        var current$$1 = finishedWork.alternate;

        if (current$$1 !== null) {
          var prevState = current$$1.memoizedState;

          if (prevState !== null) {
            var suspenseInstance = prevState.dehydrated;

            if (suspenseInstance !== null) {
              commitHydratedSuspenseInstance(suspenseInstance);

              if (enableSuspenseCallback) {
                var hydrationCallbacks = finishedRoot.hydrationCallbacks;

                if (hydrationCallbacks !== null) {
                  var onHydrated = hydrationCallbacks.onHydrated;

                  if (onHydrated) {
                    onHydrated(suspenseInstance);
                  }
                }
              }
            }
          }
        }
      }
    }

    function attachSuspenseRetryListeners(finishedWork) {
      // If this boundary just timed out, then it will have a set of thenables.
      // For each thenable, attach a listener so that when it resolves, React
      // attempts to re-render the boundary in the primary (pre-timeout) state.
      var thenables = finishedWork.updateQueue;

      if (thenables !== null) {
        finishedWork.updateQueue = null;
        var retryCache = finishedWork.stateNode;

        if (retryCache === null) {
          retryCache = finishedWork.stateNode = new PossiblyWeakSet();
        }

        thenables.forEach(function (thenable) {
          // Memoize using the boundary fiber to prevent redundant listeners.
          var retry = resolveRetryThenable.bind(null, finishedWork, thenable);

          if (!retryCache.has(thenable)) {
            if (enableSchedulerTracing) {
              if (thenable.__reactDoNotTraceInteractions !== true) {
                retry = tracing.unstable_wrap(retry);
              }
            }

            retryCache.add(thenable);
            thenable.then(retry, retry);
          }
        });
      }
    }

    function commitResetTextContent(current$$1) {
      if (!supportsMutation) {
        return;
      }

      resetTextContent(current$$1.stateNode);
    }

    var PossiblyWeakMap$1 = typeof WeakMap === 'function' ? WeakMap : Map;

    function createRootErrorUpdate(fiber, errorInfo, expirationTime) {
      var update = createUpdate(expirationTime, null); // Unmount the root by rendering null.

      update.tag = CaptureUpdate; // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: null
      };
      var error = errorInfo.value;

      update.callback = function () {
        onUncaughtError(error);
        logError(fiber, errorInfo);
      };

      return update;
    }

    function createClassErrorUpdate(fiber, errorInfo, expirationTime) {
      var update = createUpdate(expirationTime, null);
      update.tag = CaptureUpdate;
      var getDerivedStateFromError = fiber.type.getDerivedStateFromError;

      if (typeof getDerivedStateFromError === 'function') {
        var error = errorInfo.value;

        update.payload = function () {
          logError(fiber, errorInfo);
          return getDerivedStateFromError(error);
        };
      }

      var inst = fiber.stateNode;

      if (inst !== null && typeof inst.componentDidCatch === 'function') {
        update.callback = function callback() {
          {
            markFailedErrorBoundaryForHotReloading(fiber);
          }

          if (typeof getDerivedStateFromError !== 'function') {
            // To preserve the preexisting retry behavior of error boundaries,
            // we keep track of which ones already failed during this batch.
            // This gets reset before we yield back to the browser.
            // TODO: Warn in strict mode if getDerivedStateFromError is
            // not defined.
            markLegacyErrorBoundaryAsFailed(this); // Only log here if componentDidCatch is the only error boundary method defined

            logError(fiber, errorInfo);
          }

          var error = errorInfo.value;
          var stack = errorInfo.stack;
          this.componentDidCatch(error, {
            componentStack: stack !== null ? stack : ''
          });
          {
            if (typeof getDerivedStateFromError !== 'function') {
              // If componentDidCatch is the only error boundary method defined,
              // then it needs to call setState to recover from errors.
              // If no state update is scheduled then the boundary will swallow the error.
              !(fiber.expirationTime === Sync) ? warningWithoutStack$1(false, '%s: Error boundaries should implement getDerivedStateFromError(). ' + 'In that method, return a state update to display an error message or fallback UI.', getComponentName(fiber.type) || 'Unknown') : void 0;
            }
          }
        };
      } else {
        update.callback = function () {
          markFailedErrorBoundaryForHotReloading(fiber);
        };
      }

      return update;
    }

    function attachPingListener(root, renderExpirationTime, thenable) {
      // Attach a listener to the promise to "ping" the root and retry. But
      // only if one does not already exist for the current render expiration
      // time (which acts like a "thread ID" here).
      var pingCache = root.pingCache;
      var threadIDs;

      if (pingCache === null) {
        pingCache = root.pingCache = new PossiblyWeakMap$1();
        threadIDs = new Set();
        pingCache.set(thenable, threadIDs);
      } else {
        threadIDs = pingCache.get(thenable);

        if (threadIDs === undefined) {
          threadIDs = new Set();
          pingCache.set(thenable, threadIDs);
        }
      }

      if (!threadIDs.has(renderExpirationTime)) {
        // Memoize using the thread ID to prevent redundant listeners.
        threadIDs.add(renderExpirationTime);
        var ping = pingSuspendedRoot.bind(null, root, thenable, renderExpirationTime);
        thenable.then(ping, ping);
      }
    }

    function throwException(root, returnFiber, sourceFiber, value, renderExpirationTime) {
      // The source fiber did not complete.
      sourceFiber.effectTag |= Incomplete; // Its effect list is no longer valid.

      sourceFiber.firstEffect = sourceFiber.lastEffect = null;

      if (value !== null && typeof value === 'object' && typeof value.then === 'function') {
        // This is a thenable.
        var thenable = value;
        checkForWrongSuspensePriorityInDEV(sourceFiber);
        var hasInvisibleParentBoundary = hasSuspenseContext(suspenseStackCursor.current, InvisibleParentSuspenseContext); // Schedule the nearest Suspense to re-render the timed out view.

        var _workInProgress = returnFiber;

        do {
          if (_workInProgress.tag === SuspenseComponent && shouldCaptureSuspense(_workInProgress, hasInvisibleParentBoundary)) {
            // Found the nearest boundary.
            // Stash the promise on the boundary fiber. If the boundary times out, we'll
            // attach another listener to flip the boundary back to its normal state.
            var thenables = _workInProgress.updateQueue;

            if (thenables === null) {
              var updateQueue = new Set();
              updateQueue.add(thenable);
              _workInProgress.updateQueue = updateQueue;
            } else {
              thenables.add(thenable);
            } // If the boundary is outside of blocking mode, we should *not*
            // suspend the commit. Pretend as if the suspended component rendered
            // null and keep rendering. In the commit phase, we'll schedule a
            // subsequent synchronous update to re-render the Suspense.
            //
            // Note: It doesn't matter whether the component that suspended was
            // inside a blocking mode tree. If the Suspense is outside of it, we
            // should *not* suspend the commit.


            if ((_workInProgress.mode & BlockingMode) === NoMode) {
              _workInProgress.effectTag |= DidCapture; // We're going to commit this fiber even though it didn't complete.
              // But we shouldn't call any lifecycle methods or callbacks. Remove
              // all lifecycle effect tags.

              sourceFiber.effectTag &= ~(LifecycleEffectMask | Incomplete);

              if (sourceFiber.tag === ClassComponent) {
                var currentSourceFiber = sourceFiber.alternate;

                if (currentSourceFiber === null) {
                  // This is a new mount. Change the tag so it's not mistaken for a
                  // completed class component. For example, we should not call
                  // componentWillUnmount if it is deleted.
                  sourceFiber.tag = IncompleteClassComponent;
                } else {
                  // When we try rendering again, we should not reuse the current fiber,
                  // since it's known to be in an inconsistent state. Use a force update to
                  // prevent a bail out.
                  var update = createUpdate(Sync, null);
                  update.tag = ForceUpdate;
                  enqueueUpdate(sourceFiber, update);
                }
              } // The source fiber did not complete. Mark it with Sync priority to
              // indicate that it still has pending work.


              sourceFiber.expirationTime = Sync; // Exit without suspending.

              return;
            } // Confirmed that the boundary is in a concurrent mode tree. Continue
            // with the normal suspend path.
            //
            // After this we'll use a set of heuristics to determine whether this
            // render pass will run to completion or restart or "suspend" the commit.
            // The actual logic for this is spread out in different places.
            //
            // This first principle is that if we're going to suspend when we complete
            // a root, then we should also restart if we get an update or ping that
            // might unsuspend it, and vice versa. The only reason to suspend is
            // because you think you might want to restart before committing. However,
            // it doesn't make sense to restart only while in the period we're suspended.
            //
            // Restarting too aggressively is also not good because it starves out any
            // intermediate loading state. So we use heuristics to determine when.
            // Suspense Heuristics
            //
            // If nothing threw a Promise or all the same fallbacks are already showing,
            // then don't suspend/restart.
            //
            // If this is an initial render of a new tree of Suspense boundaries and
            // those trigger a fallback, then don't suspend/restart. We want to ensure
            // that we can show the initial loading state as quickly as possible.
            //
            // If we hit a "Delayed" case, such as when we'd switch from content back into
            // a fallback, then we should always suspend/restart. SuspenseConfig applies to
            // this case. If none is defined, JND is used instead.
            //
            // If we're already showing a fallback and it gets "retried", allowing us to show
            // another level, but there's still an inner boundary that would show a fallback,
            // then we suspend/restart for 500ms since the last time we showed a fallback
            // anywhere in the tree. This effectively throttles progressive loading into a
            // consistent train of commits. This also gives us an opportunity to restart to
            // get to the completed state slightly earlier.
            //
            // If there's ambiguity due to batching it's resolved in preference of:
            // 1) "delayed", 2) "initial render", 3) "retry".
            //
            // We want to ensure that a "busy" state doesn't get force committed. We want to
            // ensure that new initial loading states can commit as soon as possible.


            attachPingListener(root, renderExpirationTime, thenable);
            _workInProgress.effectTag |= ShouldCapture;
            _workInProgress.expirationTime = renderExpirationTime;
            return;
          } // This boundary already captured during this render. Continue to the next
          // boundary.


          _workInProgress = _workInProgress.return;
        } while (_workInProgress !== null); // No boundary was found. Fallthrough to error mode.
        // TODO: Use invariant so the message is stripped in prod?


        value = new Error((getComponentName(sourceFiber.type) || 'A React component') + ' suspended while rendering, but no fallback UI was specified.\n' + '\n' + 'Add a <Suspense fallback=...> component higher in the tree to ' + 'provide a loading indicator or placeholder to display.' + getStackByFiberInDevAndProd(sourceFiber));
      } // We didn't find a boundary that could handle this type of exception. Start
      // over and traverse parent path again, this time treating the exception
      // as an error.


      renderDidError();
      value = createCapturedValue(value, sourceFiber);
      var workInProgress = returnFiber;

      do {
        switch (workInProgress.tag) {
          case HostRoot:
            {
              var _errorInfo = value;
              workInProgress.effectTag |= ShouldCapture;
              workInProgress.expirationTime = renderExpirationTime;

              var _update = createRootErrorUpdate(workInProgress, _errorInfo, renderExpirationTime);

              enqueueCapturedUpdate(workInProgress, _update);
              return;
            }

          case ClassComponent:
            // Capture and retry
            var errorInfo = value;
            var ctor = workInProgress.type;
            var instance = workInProgress.stateNode;

            if ((workInProgress.effectTag & DidCapture) === NoEffect && (typeof ctor.getDerivedStateFromError === 'function' || instance !== null && typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance))) {
              workInProgress.effectTag |= ShouldCapture;
              workInProgress.expirationTime = renderExpirationTime; // Schedule the error boundary to re-render using updated state

              var _update2 = createClassErrorUpdate(workInProgress, errorInfo, renderExpirationTime);

              enqueueCapturedUpdate(workInProgress, _update2);
              return;
            }

            break;

          default:
            break;
        }

        workInProgress = workInProgress.return;
      } while (workInProgress !== null);
    }

    var ceil = Math.ceil;
    var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
    var ReactCurrentOwner$2 = ReactSharedInternals.ReactCurrentOwner;
    var IsSomeRendererActing = ReactSharedInternals.IsSomeRendererActing;
    var NoContext =
    /*                    */
    0;
    var BatchedContext =
    /*               */
    1;
    var EventContext =
    /*                 */
    2;
    var DiscreteEventContext =
    /*         */
    4;
    var LegacyUnbatchedContext =
    /*       */
    8;
    var RenderContext =
    /*                */
    16;
    var CommitContext =
    /*                */
    32;
    var RootIncomplete = 0;
    var RootFatalErrored = 1;
    var RootErrored = 2;
    var RootSuspended = 3;
    var RootSuspendedWithDelay = 4;
    var RootCompleted = 5; // Describes where we are in the React execution stack

    var executionContext = NoContext; // The root we're working on

    var workInProgressRoot = null; // The fiber we're working on

    var workInProgress = null; // The expiration time we're rendering

    var renderExpirationTime = NoWork; // Whether to root completed, errored, suspended, etc.

    var workInProgressRootExitStatus = RootIncomplete; // A fatal error, if one is thrown

    var workInProgressRootFatalError = null; // Most recent event time among processed updates during this render.
    // This is conceptually a time stamp but expressed in terms of an ExpirationTime
    // because we deal mostly with expiration times in the hot path, so this avoids
    // the conversion happening in the hot path.

    var workInProgressRootLatestProcessedExpirationTime = Sync;
    var workInProgressRootLatestSuspenseTimeout = Sync;
    var workInProgressRootCanSuspendUsingConfig = null; // The work left over by components that were visited during this render. Only
    // includes unprocessed updates, not work in bailed out children.

    var workInProgressRootNextUnprocessedUpdateTime = NoWork; // If we're pinged while rendering we don't always restart immediately.
    // This flag determines if it might be worthwhile to restart if an opportunity
    // happens latere.

    var workInProgressRootHasPendingPing = false; // The most recent time we committed a fallback. This lets us ensure a train
    // model where we don't commit new loading states in too quick succession.

    var globalMostRecentFallbackTime = 0;
    var FALLBACK_THROTTLE_MS = 500;
    var nextEffect = null;
    var hasUncaughtError = false;
    var firstUncaughtError = null;
    var legacyErrorBoundariesThatAlreadyFailed = null;
    var rootDoesHavePassiveEffects = false;
    var rootWithPendingPassiveEffects = null;
    var pendingPassiveEffectsRenderPriority = NoPriority;
    var pendingPassiveEffectsExpirationTime = NoWork;
    var rootsWithPendingDiscreteUpdates = null; // Use these to prevent an infinite loop of nested updates

    var NESTED_UPDATE_LIMIT = 50;
    var nestedUpdateCount = 0;
    var rootWithNestedUpdates = null;
    var NESTED_PASSIVE_UPDATE_LIMIT = 50;
    var nestedPassiveUpdateCount = 0;
    var interruptedBy = null; // Marks the need to reschedule pending interactions at these expiration times
    // during the commit phase. This enables them to be traced across components
    // that spawn new work during render. E.g. hidden boundaries, suspended SSR
    // hydration or SuspenseList.

    var spawnedWorkDuringRender = null; // Expiration times are computed by adding to the current time (the start
    // time). However, if two updates are scheduled within the same event, we
    // should treat their start times as simultaneous, even if the actual clock
    // time has advanced between the first and second call.
    // In other words, because expiration times determine how updates are batched,
    // we want all updates of like priority that occur within the same event to
    // receive the same expiration time. Otherwise we get tearing.

    var currentEventTime = NoWork;

    function requestCurrentTimeForUpdate() {
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
        // We're inside React, so it's fine to read the actual time.
        return msToExpirationTime(now());
      } // We're not inside React, so we may be in the middle of a browser event.


      if (currentEventTime !== NoWork) {
        // Use the same start time for all updates until we enter React again.
        return currentEventTime;
      } // This is the first update since React yielded. Compute a new start time.


      currentEventTime = msToExpirationTime(now());
      return currentEventTime;
    }

    function getCurrentTime() {
      return msToExpirationTime(now());
    }

    function computeExpirationForFiber(currentTime, fiber, suspenseConfig) {
      var mode = fiber.mode;

      if ((mode & BlockingMode) === NoMode) {
        return Sync;
      }

      var priorityLevel = getCurrentPriorityLevel();

      if ((mode & ConcurrentMode) === NoMode) {
        return priorityLevel === ImmediatePriority ? Sync : Batched;
      }

      if ((executionContext & RenderContext) !== NoContext) {
        // Use whatever time we're already rendering
        // TODO: Should there be a way to opt out, like with `runWithPriority`?
        return renderExpirationTime;
      }

      var expirationTime;

      if (suspenseConfig !== null) {
        // Compute an expiration time based on the Suspense timeout.
        expirationTime = computeSuspenseExpiration(currentTime, suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
      } else {
        // Compute an expiration time based on the Scheduler priority.
        switch (priorityLevel) {
          case ImmediatePriority:
            expirationTime = Sync;
            break;

          case UserBlockingPriority$2:
            // TODO: Rename this to computeUserBlockingExpiration
            expirationTime = computeInteractiveExpiration(currentTime);
            break;

          case NormalPriority:
          case LowPriority:
            // TODO: Handle LowPriority
            // TODO: Rename this to... something better.
            expirationTime = computeAsyncExpiration(currentTime);
            break;

          case IdlePriority:
            expirationTime = Idle;
            break;

          default:
            {
              {
                throw Error("Expected a valid priority level");
              }
            }
        }
      } // If we're in the middle of rendering a tree, do not update at the same
      // expiration time that is already rendering.
      // TODO: We shouldn't have to do this if the update is on a different root.
      // Refactor computeExpirationForFiber + scheduleUpdate so we have access to
      // the root when we check for this condition.


      if (workInProgressRoot !== null && expirationTime === renderExpirationTime) {
        // This is a trick to move this update into a separate batch
        expirationTime -= 1;
      }

      return expirationTime;
    }

    function scheduleUpdateOnFiber(fiber, expirationTime) {
      checkForNestedUpdates();
      warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber);
      var root = markUpdateTimeFromFiberToRoot(fiber, expirationTime);

      if (root === null) {
        warnAboutUpdateOnUnmountedFiberInDEV(fiber);
        return;
      }

      checkForInterruption(fiber, expirationTime);
      recordScheduleUpdate(); // TODO: computeExpirationForFiber also reads the priority. Pass the
      // priority as an argument to that function and this one.

      var priorityLevel = getCurrentPriorityLevel();

      if (expirationTime === Sync) {
        if ( // Check if we're inside unbatchedUpdates
        (executionContext & LegacyUnbatchedContext) !== NoContext && // Check if we're not already rendering
        (executionContext & (RenderContext | CommitContext)) === NoContext) {
          // Register pending interactions on the root to avoid losing traced interaction data.
          schedulePendingInteractions(root, expirationTime); // This is a legacy edge case. The initial mount of a ReactDOM.render-ed
          // root inside of batchedUpdates should be synchronous, but layout updates
          // should be deferred until the end of the batch.

          performSyncWorkOnRoot(root);
        } else {
          ensureRootIsScheduled(root);
          schedulePendingInteractions(root, expirationTime);

          if (executionContext === NoContext) {
            // Flush the synchronous work now, unless we're already working or inside
            // a batch. This is intentionally inside scheduleUpdateOnFiber instead of
            // scheduleCallbackForFiber to preserve the ability to schedule a callback
            // without immediately flushing it. We only do this for user-initiated
            // updates, to preserve historical behavior of legacy mode.
            flushSyncCallbackQueue();
          }
        }
      } else {
        ensureRootIsScheduled(root);
        schedulePendingInteractions(root, expirationTime);
      }

      if ((executionContext & DiscreteEventContext) !== NoContext && ( // Only updates at user-blocking priority or greater are considered
      // discrete, even inside a discrete event.
      priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority)) {
        // This is the result of a discrete event. Track the lowest priority
        // discrete update per root so we can flush them early, if needed.
        if (rootsWithPendingDiscreteUpdates === null) {
          rootsWithPendingDiscreteUpdates = new Map([[root, expirationTime]]);
        } else {
          var lastDiscreteTime = rootsWithPendingDiscreteUpdates.get(root);

          if (lastDiscreteTime === undefined || lastDiscreteTime > expirationTime) {
            rootsWithPendingDiscreteUpdates.set(root, expirationTime);
          }
        }
      }
    }

    var scheduleWork = scheduleUpdateOnFiber; // This is split into a separate function so we can mark a fiber with pending
    // work without treating it as a typical update that originates from an event;
    // e.g. retrying a Suspense boundary isn't an update, but it does schedule work
    // on a fiber.

    function markUpdateTimeFromFiberToRoot(fiber, expirationTime) {
      // Update the source fiber's expiration time
      if (fiber.expirationTime < expirationTime) {
        fiber.expirationTime = expirationTime;
      }

      var alternate = fiber.alternate;

      if (alternate !== null && alternate.expirationTime < expirationTime) {
        alternate.expirationTime = expirationTime;
      } // Walk the parent path to the root and update the child expiration time.


      var node = fiber.return;
      var root = null;

      if (node === null && fiber.tag === HostRoot) {
        root = fiber.stateNode;
      } else {
        while (node !== null) {
          alternate = node.alternate;

          if (node.childExpirationTime < expirationTime) {
            node.childExpirationTime = expirationTime;

            if (alternate !== null && alternate.childExpirationTime < expirationTime) {
              alternate.childExpirationTime = expirationTime;
            }
          } else if (alternate !== null && alternate.childExpirationTime < expirationTime) {
            alternate.childExpirationTime = expirationTime;
          }

          if (node.return === null && node.tag === HostRoot) {
            root = node.stateNode;
            break;
          }

          node = node.return;
        }
      }

      if (root !== null) {
        if (workInProgressRoot === root) {
          // Received an update to a tree that's in the middle of rendering. Mark
          // that's unprocessed work on this root.
          markUnprocessedUpdateTime(expirationTime);

          if (workInProgressRootExitStatus === RootSuspendedWithDelay) {
            // The root already suspended with a delay, which means this render
            // definitely won't finish. Since we have a new update, let's mark it as
            // suspended now, right before marking the incoming update. This has the
            // effect of interrupting the current render and switching to the update.
            // TODO: This happens to work when receiving an update during the render
            // phase, because of the trick inside computeExpirationForFiber to
            // subtract 1 from `renderExpirationTime` to move it into a
            // separate bucket. But we should probably model it with an exception,
            // using the same mechanism we use to force hydration of a subtree.
            // TODO: This does not account for low pri updates that were already
            // scheduled before the root started rendering. Need to track the next
            // pending expiration time (perhaps by backtracking the return path) and
            // then trigger a restart in the `renderDidSuspendDelayIfPossible` path.
            markRootSuspendedAtTime(root, renderExpirationTime);
          }
        } // Mark that the root has a pending update.


        markRootUpdatedAtTime(root, expirationTime);
      }

      return root;
    }

    function getNextRootExpirationTimeToWorkOn(root) {
      // Determines the next expiration time that the root should render, taking
      // into account levels that may be suspended, or levels that may have
      // received a ping.
      var lastExpiredTime = root.lastExpiredTime;

      if (lastExpiredTime !== NoWork) {
        return lastExpiredTime;
      } // "Pending" refers to any update that hasn't committed yet, including if it
      // suspended. The "suspended" range is therefore a subset.


      var firstPendingTime = root.firstPendingTime;

      if (!isRootSuspendedAtTime(root, firstPendingTime)) {
        // The highest priority pending time is not suspended. Let's work on that.
        return firstPendingTime;
      } // If the first pending time is suspended, check if there's a lower priority
      // pending level that we know about. Or check if we received a ping. Work
      // on whichever is higher priority.


      var lastPingedTime = root.lastPingedTime;
      var nextKnownPendingLevel = root.nextKnownPendingLevel;
      return lastPingedTime > nextKnownPendingLevel ? lastPingedTime : nextKnownPendingLevel;
    } // Use this function to schedule a task for a root. There's only one task per
    // root; if a task was already scheduled, we'll check to make sure the
    // expiration time of the existing task is the same as the expiration time of
    // the next level that the root has work on. This function is called on every
    // update, and right before exiting a task.


    function ensureRootIsScheduled(root) {
      var lastExpiredTime = root.lastExpiredTime;

      if (lastExpiredTime !== NoWork) {
        // Special case: Expired work should flush synchronously.
        root.callbackExpirationTime = Sync;
        root.callbackPriority = ImmediatePriority;
        root.callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
        return;
      }

      var expirationTime = getNextRootExpirationTimeToWorkOn(root);
      var existingCallbackNode = root.callbackNode;

      if (expirationTime === NoWork) {
        // There's nothing to work on.
        if (existingCallbackNode !== null) {
          root.callbackNode = null;
          root.callbackExpirationTime = NoWork;
          root.callbackPriority = NoPriority;
        }

        return;
      } // TODO: If this is an update, we already read the current time. Pass the
      // time as an argument.


      var currentTime = requestCurrentTimeForUpdate();
      var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime); // If there's an existing render task, confirm it has the correct priority and
      // expiration time. Otherwise, we'll cancel it and schedule a new one.

      if (existingCallbackNode !== null) {
        var existingCallbackPriority = root.callbackPriority;
        var existingCallbackExpirationTime = root.callbackExpirationTime;

        if ( // Callback must have the exact same expiration time.
        existingCallbackExpirationTime === expirationTime && // Callback must have greater or equal priority.
        existingCallbackPriority >= priorityLevel) {
          // Existing callback is sufficient.
          return;
        } // Need to schedule a new task.
        // TODO: Instead of scheduling a new task, we should be able to change the
        // priority of the existing one.


        cancelCallback(existingCallbackNode);
      }

      root.callbackExpirationTime = expirationTime;
      root.callbackPriority = priorityLevel;
      var callbackNode;

      if (expirationTime === Sync) {
        // Sync React callbacks are scheduled on a special internal queue
        callbackNode = scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));
      } else if (disableSchedulerTimeoutBasedOnReactExpirationTime) {
        callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root));
      } else {
        callbackNode = scheduleCallback(priorityLevel, performConcurrentWorkOnRoot.bind(null, root), // Compute a task timeout based on the expiration time. This also affects
        // ordering because tasks are processed in timeout order.
        {
          timeout: expirationTimeToMs(expirationTime) - now()
        });
      }

      root.callbackNode = callbackNode;
    } // This is the entry point for every concurrent task, i.e. anything that
    // goes through Scheduler.


    function performConcurrentWorkOnRoot(root, didTimeout) {
      // Since we know we're in a React event, we can clear the current
      // event time. The next update will compute a new event time.
      currentEventTime = NoWork;

      if (didTimeout) {
        // The render task took too long to complete. Mark the current time as
        // expired to synchronously render all expired work in a single batch.
        var currentTime = requestCurrentTimeForUpdate();
        markRootExpiredAtTime(root, currentTime); // This will schedule a synchronous callback.

        ensureRootIsScheduled(root);
        return null;
      } // Determine the next expiration time to work on, using the fields stored
      // on the root.


      var expirationTime = getNextRootExpirationTimeToWorkOn(root);

      if (expirationTime !== NoWork) {
        var originalCallbackNode = root.callbackNode;

        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
          {
            throw Error("Should not already be working.");
          }
        }

        flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.

        if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
          prepareFreshStack(root, expirationTime);
          startWorkOnPendingInteractions(root, expirationTime);
        } // If we have a work-in-progress fiber, it means there's still work to do
        // in this root.


        if (workInProgress !== null) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher(root);
          var prevInteractions = pushInteractions(root);
          startWorkLoopTimer(workInProgress);

          do {
            try {
              workLoopConcurrent();
              break;
            } catch (thrownValue) {
              handleError(root, thrownValue);
            }
          } while (true);

          resetContextDependencies();
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);

          if (enableSchedulerTracing) {
            popInteractions(prevInteractions);
          }

          if (workInProgressRootExitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            stopInterruptedWorkLoopTimer();
            prepareFreshStack(root, expirationTime);
            markRootSuspendedAtTime(root, expirationTime);
            ensureRootIsScheduled(root);
            throw fatalError;
          }

          if (workInProgress !== null) {
            // There's still work left over. Exit without committing.
            stopInterruptedWorkLoopTimer();
          } else {
            // We now have a consistent tree. The next step is either to commit it,
            // or, if something suspended, wait to commit it after a timeout.
            stopFinishedWorkLoopTimer();
            var finishedWork = root.finishedWork = root.current.alternate;
            root.finishedExpirationTime = expirationTime;
            finishConcurrentRender(root, finishedWork, workInProgressRootExitStatus, expirationTime);
          }

          ensureRootIsScheduled(root);

          if (root.callbackNode === originalCallbackNode) {
            // The task node scheduled for this root is the same one that's
            // currently executed. Need to return a continuation.
            return performConcurrentWorkOnRoot.bind(null, root);
          }
        }
      }

      return null;
    }

    function finishConcurrentRender(root, finishedWork, exitStatus, expirationTime) {
      // Set this to null to indicate there's no in-progress render.
      workInProgressRoot = null;

      switch (exitStatus) {
        case RootIncomplete:
        case RootFatalErrored:
          {
            {
              {
                throw Error("Root did not complete. This is a bug in React.");
              }
            }
          }
        // Flow knows about invariant, so it complains if I add a break
        // statement, but eslint doesn't know about invariant, so it complains
        // if I do. eslint-disable-next-line no-fallthrough

        case RootErrored:
          {
            // If this was an async render, the error may have happened due to
            // a mutation in a concurrent event. Try rendering one more time,
            // synchronously, to see if the error goes away. If there are
            // lower priority updates, let's include those, too, in case they
            // fix the inconsistency. Render at Idle to include all updates.
            // If it was Idle or Never or some not-yet-invented time, render
            // at that time.
            markRootExpiredAtTime(root, expirationTime > Idle ? Idle : expirationTime); // We assume that this second render pass will be synchronous
            // and therefore not hit this path again.

            break;
          }

        case RootSuspended:
          {
            markRootSuspendedAtTime(root, expirationTime);
            var lastSuspendedTime = root.lastSuspendedTime;

            if (expirationTime === lastSuspendedTime) {
              root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
            }

            flushSuspensePriorityWarningInDEV(); // We have an acceptable loading state. We need to figure out if we
            // should immediately commit it or wait a bit.
            // If we have processed new updates during this render, we may now
            // have a new loading state ready. We want to ensure that we commit
            // that as soon as possible.

            var hasNotProcessedNewUpdates = workInProgressRootLatestProcessedExpirationTime === Sync;

            if (hasNotProcessedNewUpdates && // do not delay if we're inside an act() scope
            !( true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
              // If we have not processed any new updates during this pass, then
              // this is either a retry of an existing fallback state or a
              // hidden tree. Hidden trees shouldn't be batched with other work
              // and after that's fixed it can only be a retry. We're going to
              // throttle committing retries so that we don't show too many
              // loading states too quickly.
              var msUntilTimeout = globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now(); // Don't bother with a very short suspense time.

              if (msUntilTimeout > 10) {
                if (workInProgressRootHasPendingPing) {
                  var lastPingedTime = root.lastPingedTime;

                  if (lastPingedTime === NoWork || lastPingedTime >= expirationTime) {
                    // This render was pinged but we didn't get to restart
                    // earlier so try restarting now instead.
                    root.lastPingedTime = expirationTime;
                    prepareFreshStack(root, expirationTime);
                    break;
                  }
                }

                var nextTime = getNextRootExpirationTimeToWorkOn(root);

                if (nextTime !== NoWork && nextTime !== expirationTime) {
                  // There's additional work on this root.
                  break;
                }

                if (lastSuspendedTime !== NoWork && lastSuspendedTime !== expirationTime) {
                  // We should prefer to render the fallback of at the last
                  // suspended level. Ping the last suspended level to try
                  // rendering it again.
                  root.lastPingedTime = lastSuspendedTime;
                  break;
                } // The render is suspended, it hasn't timed out, and there's no
                // lower priority work to do. Instead of committing the fallback
                // immediately, wait for more data to arrive.


                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), msUntilTimeout);
                break;
              }
            } // The work expired. Commit immediately.


            commitRoot(root);
            break;
          }

        case RootSuspendedWithDelay:
          {
            markRootSuspendedAtTime(root, expirationTime);
            var _lastSuspendedTime = root.lastSuspendedTime;

            if (expirationTime === _lastSuspendedTime) {
              root.nextKnownPendingLevel = getRemainingExpirationTime(finishedWork);
            }

            flushSuspensePriorityWarningInDEV();

            if ( // do not delay if we're inside an act() scope
            !( true && flushSuspenseFallbacksInTests && IsThisRendererActing.current)) {
              // We're suspended in a state that should be avoided. We'll try to
              // avoid committing it for as long as the timeouts let us.
              if (workInProgressRootHasPendingPing) {
                var _lastPingedTime = root.lastPingedTime;

                if (_lastPingedTime === NoWork || _lastPingedTime >= expirationTime) {
                  // This render was pinged but we didn't get to restart earlier
                  // so try restarting now instead.
                  root.lastPingedTime = expirationTime;
                  prepareFreshStack(root, expirationTime);
                  break;
                }
              }

              var _nextTime = getNextRootExpirationTimeToWorkOn(root);

              if (_nextTime !== NoWork && _nextTime !== expirationTime) {
                // There's additional work on this root.
                break;
              }

              if (_lastSuspendedTime !== NoWork && _lastSuspendedTime !== expirationTime) {
                // We should prefer to render the fallback of at the last
                // suspended level. Ping the last suspended level to try
                // rendering it again.
                root.lastPingedTime = _lastSuspendedTime;
                break;
              }

              var _msUntilTimeout;

              if (workInProgressRootLatestSuspenseTimeout !== Sync) {
                // We have processed a suspense config whose expiration time we
                // can use as the timeout.
                _msUntilTimeout = expirationTimeToMs(workInProgressRootLatestSuspenseTimeout) - now();
              } else if (workInProgressRootLatestProcessedExpirationTime === Sync) {
                // This should never normally happen because only new updates
                // cause delayed states, so we should have processed something.
                // However, this could also happen in an offscreen tree.
                _msUntilTimeout = 0;
              } else {
                // If we don't have a suspense config, we're going to use a
                // heuristic to determine how long we can suspend.
                var eventTimeMs = inferTimeFromExpirationTime(workInProgressRootLatestProcessedExpirationTime);
                var currentTimeMs = now();
                var timeUntilExpirationMs = expirationTimeToMs(expirationTime) - currentTimeMs;
                var timeElapsed = currentTimeMs - eventTimeMs;

                if (timeElapsed < 0) {
                  // We get this wrong some time since we estimate the time.
                  timeElapsed = 0;
                }

                _msUntilTimeout = jnd(timeElapsed) - timeElapsed; // Clamp the timeout to the expiration time. TODO: Once the
                // event time is exact instead of inferred from expiration time
                // we don't need this.

                if (timeUntilExpirationMs < _msUntilTimeout) {
                  _msUntilTimeout = timeUntilExpirationMs;
                }
              } // Don't bother with a very short suspense time.


              if (_msUntilTimeout > 10) {
                // The render is suspended, it hasn't timed out, and there's no
                // lower priority work to do. Instead of committing the fallback
                // immediately, wait for more data to arrive.
                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout);
                break;
              }
            } // The work expired. Commit immediately.


            commitRoot(root);
            break;
          }

        case RootCompleted:
          {
            // The work completed. Ready to commit.
            if ( // do not delay if we're inside an act() scope
            !( true && flushSuspenseFallbacksInTests && IsThisRendererActing.current) && workInProgressRootLatestProcessedExpirationTime !== Sync && workInProgressRootCanSuspendUsingConfig !== null) {
              // If we have exceeded the minimum loading delay, which probably
              // means we have shown a spinner already, we might have to suspend
              // a bit longer to ensure that the spinner is shown for
              // enough time.
              var _msUntilTimeout2 = computeMsUntilSuspenseLoadingDelay(workInProgressRootLatestProcessedExpirationTime, expirationTime, workInProgressRootCanSuspendUsingConfig);

              if (_msUntilTimeout2 > 10) {
                markRootSuspendedAtTime(root, expirationTime);
                root.timeoutHandle = scheduleTimeout(commitRoot.bind(null, root), _msUntilTimeout2);
                break;
              }
            }

            commitRoot(root);
            break;
          }

        default:
          {
            {
              {
                throw Error("Unknown root exit status.");
              }
            }
          }
      }
    } // This is the entry point for synchronous tasks that don't go
    // through Scheduler


    function performSyncWorkOnRoot(root) {
      // Check if there's expired work on this root. Otherwise, render at Sync.
      var lastExpiredTime = root.lastExpiredTime;
      var expirationTime = lastExpiredTime !== NoWork ? lastExpiredTime : Sync;

      if (root.finishedExpirationTime === expirationTime) {
        // There's already a pending commit at this expiration time.
        // TODO: This is poorly factored. This case only exists for the
        // batch.commit() API.
        commitRoot(root);
      } else {
        if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
          {
            throw Error("Should not already be working.");
          }
        }

        flushPassiveEffects(); // If the root or expiration time have changed, throw out the existing stack
        // and prepare a fresh one. Otherwise we'll continue where we left off.

        if (root !== workInProgressRoot || expirationTime !== renderExpirationTime) {
          prepareFreshStack(root, expirationTime);
          startWorkOnPendingInteractions(root, expirationTime);
        } // If we have a work-in-progress fiber, it means there's still work to do
        // in this root.


        if (workInProgress !== null) {
          var prevExecutionContext = executionContext;
          executionContext |= RenderContext;
          var prevDispatcher = pushDispatcher(root);
          var prevInteractions = pushInteractions(root);
          startWorkLoopTimer(workInProgress);

          do {
            try {
              workLoopSync();
              break;
            } catch (thrownValue) {
              handleError(root, thrownValue);
            }
          } while (true);

          resetContextDependencies();
          executionContext = prevExecutionContext;
          popDispatcher(prevDispatcher);

          if (enableSchedulerTracing) {
            popInteractions(prevInteractions);
          }

          if (workInProgressRootExitStatus === RootFatalErrored) {
            var fatalError = workInProgressRootFatalError;
            stopInterruptedWorkLoopTimer();
            prepareFreshStack(root, expirationTime);
            markRootSuspendedAtTime(root, expirationTime);
            ensureRootIsScheduled(root);
            throw fatalError;
          }

          if (workInProgress !== null) {
            // This is a sync render, so we should have finished the whole tree.
            {
              {
                throw Error("Cannot commit an incomplete root. This error is likely caused by a bug in React. Please file an issue.");
              }
            }
          } else {
            // We now have a consistent tree. Because this is a sync render, we
            // will commit it even if something suspended.
            stopFinishedWorkLoopTimer();
            root.finishedWork = root.current.alternate;
            root.finishedExpirationTime = expirationTime;
            finishSyncRender(root, workInProgressRootExitStatus, expirationTime);
          } // Before exiting, make sure there's a callback scheduled for the next
          // pending level.


          ensureRootIsScheduled(root);
        }
      }

      return null;
    }

    function finishSyncRender(root, exitStatus, expirationTime) {
      // Set this to null to indicate there's no in-progress render.
      workInProgressRoot = null;
      {
        if (exitStatus === RootSuspended || exitStatus === RootSuspendedWithDelay) {
          flushSuspensePriorityWarningInDEV();
        }
      }
      commitRoot(root);
    }

    function flushRoot(root, expirationTime) {
      markRootExpiredAtTime(root, expirationTime);
      ensureRootIsScheduled(root);

      if ((executionContext & (RenderContext | CommitContext)) === NoContext) {
        flushSyncCallbackQueue();
      }
    }

    function flushDiscreteUpdates() {
      // TODO: Should be able to flush inside batchedUpdates, but not inside `act`.
      // However, `act` uses `batchedUpdates`, so there's no way to distinguish
      // those two cases. Need to fix this before exposing flushDiscreteUpdates
      // as a public API.
      if ((executionContext & (BatchedContext | RenderContext | CommitContext)) !== NoContext) {
        if ( true && (executionContext & RenderContext) !== NoContext) {
          warning$1(false, 'unstable_flushDiscreteUpdates: Cannot flush updates when React is ' + 'already rendering.');
        } // We're already rendering, so we can't synchronously flush pending work.
        // This is probably a nested event dispatch triggered by a lifecycle/effect,
        // like `el.focus()`. Exit.


        return;
      }

      flushPendingDiscreteUpdates(); // If the discrete updates scheduled passive effects, flush them now so that
      // they fire before the next serial event.

      flushPassiveEffects();
    }

    function syncUpdates(fn, a, b, c) {
      return runWithPriority$2(ImmediatePriority, fn.bind(null, a, b, c));
    }

    function flushPendingDiscreteUpdates() {
      if (rootsWithPendingDiscreteUpdates !== null) {
        // For each root with pending discrete updates, schedule a callback to
        // immediately flush them.
        var roots = rootsWithPendingDiscreteUpdates;
        rootsWithPendingDiscreteUpdates = null;
        roots.forEach(function (expirationTime, root) {
          markRootExpiredAtTime(root, expirationTime);
          ensureRootIsScheduled(root);
        }); // Now flush the immediate queue.

        flushSyncCallbackQueue();
      }
    }

    function batchedUpdates$1(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext |= BatchedContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function batchedEventUpdates$1(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext |= EventContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function discreteUpdates$1(fn, a, b, c) {
      var prevExecutionContext = executionContext;
      executionContext |= DiscreteEventContext;

      try {
        // Should this
        return runWithPriority$2(UserBlockingPriority$2, fn.bind(null, a, b, c));
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function unbatchedUpdates(fn, a) {
      var prevExecutionContext = executionContext;
      executionContext &= ~BatchedContext;
      executionContext |= LegacyUnbatchedContext;

      try {
        return fn(a);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function flushSync(fn, a) {
      if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {
        {
          {
            throw Error("flushSync was called from inside a lifecycle method. It cannot be called when React is already rendering.");
          }
        }
      }

      var prevExecutionContext = executionContext;
      executionContext |= BatchedContext;

      try {
        return runWithPriority$2(ImmediatePriority, fn.bind(null, a));
      } finally {
        executionContext = prevExecutionContext; // Flush the immediate callbacks that were scheduled during this batch.
        // Note that this will happen even if batchedUpdates is higher up
        // the stack.

        flushSyncCallbackQueue();
      }
    }

    function flushControlled(fn) {
      var prevExecutionContext = executionContext;
      executionContext |= BatchedContext;

      try {
        runWithPriority$2(ImmediatePriority, fn);
      } finally {
        executionContext = prevExecutionContext;

        if (executionContext === NoContext) {
          // Flush the immediate callbacks that were scheduled during this batch
          flushSyncCallbackQueue();
        }
      }
    }

    function prepareFreshStack(root, expirationTime) {
      root.finishedWork = null;
      root.finishedExpirationTime = NoWork;
      var timeoutHandle = root.timeoutHandle;

      if (timeoutHandle !== noTimeout) {
        // The root previous suspended and scheduled a timeout to commit a fallback
        // state. Now that we have additional work, cancel the timeout.
        root.timeoutHandle = noTimeout; // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above

        cancelTimeout(timeoutHandle);
      }

      if (workInProgress !== null) {
        var interruptedWork = workInProgress.return;

        while (interruptedWork !== null) {
          unwindInterruptedWork(interruptedWork);
          interruptedWork = interruptedWork.return;
        }
      }

      workInProgressRoot = root;
      workInProgress = createWorkInProgress(root.current, null, expirationTime);
      renderExpirationTime = expirationTime;
      workInProgressRootExitStatus = RootIncomplete;
      workInProgressRootFatalError = null;
      workInProgressRootLatestProcessedExpirationTime = Sync;
      workInProgressRootLatestSuspenseTimeout = Sync;
      workInProgressRootCanSuspendUsingConfig = null;
      workInProgressRootNextUnprocessedUpdateTime = NoWork;
      workInProgressRootHasPendingPing = false;

      if (enableSchedulerTracing) {
        spawnedWorkDuringRender = null;
      }

      {
        ReactStrictModeWarnings.discardPendingWarnings();
        componentsThatTriggeredHighPriSuspend = null;
      }
    }

    function handleError(root, thrownValue) {
      do {
        try {
          // Reset module-level state that was set during the render phase.
          resetContextDependencies();
          resetHooks();
          resetCurrentFiber();

          if (workInProgress === null || workInProgress.return === null) {
            // Expected to be working on a non-root fiber. This is a fatal error
            // because there's no ancestor that can handle it; the root is
            // supposed to capture all errors that weren't caught by an error
            // boundary.
            workInProgressRootExitStatus = RootFatalErrored;
            workInProgressRootFatalError = thrownValue;
            return null;
          }

          if (enableProfilerTimer && workInProgress.mode & ProfileMode) {
            // Record the time spent rendering before an error was thrown. This
            // avoids inaccurate Profiler durations in the case of a
            // suspended render.
            stopProfilerTimerIfRunningAndRecordDelta(workInProgress, true);
          }

          throwException(root, workInProgress.return, workInProgress, thrownValue, renderExpirationTime);
          workInProgress = completeUnitOfWork(workInProgress);
        } catch (yetAnotherThrownValue) {
          // Something in the return path also threw.
          thrownValue = yetAnotherThrownValue;
          continue;
        } // Return to the normal work loop.


        return;
      } while (true);
    }

    function pushDispatcher(root) {
      var prevDispatcher = ReactCurrentDispatcher.current;
      ReactCurrentDispatcher.current = ContextOnlyDispatcher;

      if (prevDispatcher === null) {
        // The React isomorphic package does not include a default dispatcher.
        // Instead the first renderer will lazily attach one, in order to give
        // nicer error messages.
        return ContextOnlyDispatcher;
      } else {
        return prevDispatcher;
      }
    }

    function popDispatcher(prevDispatcher) {
      ReactCurrentDispatcher.current = prevDispatcher;
    }

    function pushInteractions(root) {
      if (enableSchedulerTracing) {
        var prevInteractions = tracing.__interactionsRef.current;
        tracing.__interactionsRef.current = root.memoizedInteractions;
        return prevInteractions;
      }

      return null;
    }

    function popInteractions(prevInteractions) {
      if (enableSchedulerTracing) {
        tracing.__interactionsRef.current = prevInteractions;
      }
    }

    function markCommitTimeOfFallback() {
      globalMostRecentFallbackTime = now();
    }

    function markRenderEventTimeAndConfig(expirationTime, suspenseConfig) {
      if (expirationTime < workInProgressRootLatestProcessedExpirationTime && expirationTime > Idle) {
        workInProgressRootLatestProcessedExpirationTime = expirationTime;
      }

      if (suspenseConfig !== null) {
        if (expirationTime < workInProgressRootLatestSuspenseTimeout && expirationTime > Idle) {
          workInProgressRootLatestSuspenseTimeout = expirationTime; // Most of the time we only have one config and getting wrong is not bad.

          workInProgressRootCanSuspendUsingConfig = suspenseConfig;
        }
      }
    }

    function markUnprocessedUpdateTime(expirationTime) {
      if (expirationTime > workInProgressRootNextUnprocessedUpdateTime) {
        workInProgressRootNextUnprocessedUpdateTime = expirationTime;
      }
    }

    function renderDidSuspend() {
      if (workInProgressRootExitStatus === RootIncomplete) {
        workInProgressRootExitStatus = RootSuspended;
      }
    }

    function renderDidSuspendDelayIfPossible() {
      if (workInProgressRootExitStatus === RootIncomplete || workInProgressRootExitStatus === RootSuspended) {
        workInProgressRootExitStatus = RootSuspendedWithDelay;
      } // Check if there's a lower priority update somewhere else in the tree.


      if (workInProgressRootNextUnprocessedUpdateTime !== NoWork && workInProgressRoot !== null) {
        // Mark the current render as suspended, and then mark that there's a
        // pending update.
        // TODO: This should immediately interrupt the current render, instead
        // of waiting until the next time we yield.
        markRootSuspendedAtTime(workInProgressRoot, renderExpirationTime);
        markRootUpdatedAtTime(workInProgressRoot, workInProgressRootNextUnprocessedUpdateTime);
      }
    }

    function renderDidError() {
      if (workInProgressRootExitStatus !== RootCompleted) {
        workInProgressRootExitStatus = RootErrored;
      }
    } // Called during render to determine if anything has suspended.
    // Returns false if we're not sure.


    function renderHasNotSuspendedYet() {
      // If something errored or completed, we can't really be sure,
      // so those are false.
      return workInProgressRootExitStatus === RootIncomplete;
    }

    function inferTimeFromExpirationTime(expirationTime) {
      // We don't know exactly when the update was scheduled, but we can infer an
      // approximate start time from the expiration time.
      var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
      return earliestExpirationTimeMs - LOW_PRIORITY_EXPIRATION;
    }

    function inferTimeFromExpirationTimeWithSuspenseConfig(expirationTime, suspenseConfig) {
      // We don't know exactly when the update was scheduled, but we can infer an
      // approximate start time from the expiration time by subtracting the timeout
      // that was added to the event time.
      var earliestExpirationTimeMs = expirationTimeToMs(expirationTime);
      return earliestExpirationTimeMs - (suspenseConfig.timeoutMs | 0 || LOW_PRIORITY_EXPIRATION);
    } // The work loop is an extremely hot path. Tell Closure not to inline it.

    /** @noinline */


    function workLoopSync() {
      // Already timed out, so perform work without checking if we need to yield.
      while (workInProgress !== null) {
        workInProgress = performUnitOfWork(workInProgress);
      }
    }
    /** @noinline */


    function workLoopConcurrent() {
      // Perform work until Scheduler asks us to yield
      while (workInProgress !== null && !shouldYield()) {
        workInProgress = performUnitOfWork(workInProgress);
      }
    }

    function performUnitOfWork(unitOfWork) {
      // The current, flushed, state of this fiber is the alternate. Ideally
      // nothing should rely on this, but relying on it here means that we don't
      // need an additional field on the work in progress.
      var current$$1 = unitOfWork.alternate;
      startWorkTimer(unitOfWork);
      setCurrentFiber(unitOfWork);
      var next;

      if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {
        startProfilerTimer(unitOfWork);
        next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
        stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);
      } else {
        next = beginWork$$1(current$$1, unitOfWork, renderExpirationTime);
      }

      resetCurrentFiber();
      unitOfWork.memoizedProps = unitOfWork.pendingProps;

      if (next === null) {
        // If this doesn't spawn new work, complete the current work.
        next = completeUnitOfWork(unitOfWork);
      }

      ReactCurrentOwner$2.current = null;
      return next;
    }

    function completeUnitOfWork(unitOfWork) {
      // Attempt to complete the current unit of work, then move to the next
      // sibling. If there are no more siblings, return to the parent fiber.
      workInProgress = unitOfWork;

      do {
        // The current, flushed, state of this fiber is the alternate. Ideally
        // nothing should rely on this, but relying on it here means that we don't
        // need an additional field on the work in progress.
        var current$$1 = workInProgress.alternate;
        var returnFiber = workInProgress.return; // Check if the work completed or if something threw.

        if ((workInProgress.effectTag & Incomplete) === NoEffect) {
          setCurrentFiber(workInProgress);
          var next = void 0;

          if (!enableProfilerTimer || (workInProgress.mode & ProfileMode) === NoMode) {
            next = completeWork(current$$1, workInProgress, renderExpirationTime);
          } else {
            startProfilerTimer(workInProgress);
            next = completeWork(current$$1, workInProgress, renderExpirationTime); // Update render duration assuming we didn't error.

            stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false);
          }

          stopWorkTimer(workInProgress);
          resetCurrentFiber();
          resetChildExpirationTime(workInProgress);

          if (next !== null) {
            // Completing this fiber spawned new work. Work on that next.
            return next;
          }

          if (returnFiber !== null && // Do not append effects to parents if a sibling failed to complete
          (returnFiber.effectTag & Incomplete) === NoEffect) {
            // Append all the effects of the subtree and this fiber onto the effect
            // list of the parent. The completion order of the children affects the
            // side-effect order.
            if (returnFiber.firstEffect === null) {
              returnFiber.firstEffect = workInProgress.firstEffect;
            }

            if (workInProgress.lastEffect !== null) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = workInProgress.firstEffect;
              }

              returnFiber.lastEffect = workInProgress.lastEffect;
            } // If this fiber had side-effects, we append it AFTER the children's
            // side-effects. We can perform certain side-effects earlier if needed,
            // by doing multiple passes over the effect list. We don't want to
            // schedule our own side-effect on our own list because if end up
            // reusing children we'll schedule this effect onto itself since we're
            // at the end.


            var effectTag = workInProgress.effectTag; // Skip both NoWork and PerformedWork tags when creating the effect
            // list. PerformedWork effect is read by React DevTools but shouldn't be
            // committed.

            if (effectTag > PerformedWork) {
              if (returnFiber.lastEffect !== null) {
                returnFiber.lastEffect.nextEffect = workInProgress;
              } else {
                returnFiber.firstEffect = workInProgress;
              }

              returnFiber.lastEffect = workInProgress;
            }
          }
        } else {
          // This fiber did not complete because something threw. Pop values off
          // the stack without entering the complete phase. If this is a boundary,
          // capture values if possible.
          var _next = unwindWork(workInProgress, renderExpirationTime); // Because this fiber did not complete, don't reset its expiration time.


          if (enableProfilerTimer && (workInProgress.mode & ProfileMode) !== NoMode) {
            // Record the render duration for the fiber that errored.
            stopProfilerTimerIfRunningAndRecordDelta(workInProgress, false); // Include the time spent working on failed children before continuing.

            var actualDuration = workInProgress.actualDuration;
            var child = workInProgress.child;

            while (child !== null) {
              actualDuration += child.actualDuration;
              child = child.sibling;
            }

            workInProgress.actualDuration = actualDuration;
          }

          if (_next !== null) {
            // If completing this work spawned new work, do that next. We'll come
            // back here again.
            // Since we're restarting, remove anything that is not a host effect
            // from the effect tag.
            // TODO: The name stopFailedWorkTimer is misleading because Suspense
            // also captures and restarts.
            stopFailedWorkTimer(workInProgress);
            _next.effectTag &= HostEffectMask;
            return _next;
          }

          stopWorkTimer(workInProgress);

          if (returnFiber !== null) {
            // Mark the parent fiber as incomplete and clear its effect list.
            returnFiber.firstEffect = returnFiber.lastEffect = null;
            returnFiber.effectTag |= Incomplete;
          }
        }

        var siblingFiber = workInProgress.sibling;

        if (siblingFiber !== null) {
          // If there is more work to do in this returnFiber, do that next.
          return siblingFiber;
        } // Otherwise, return to the parent


        workInProgress = returnFiber;
      } while (workInProgress !== null); // We've reached the root.


      if (workInProgressRootExitStatus === RootIncomplete) {
        workInProgressRootExitStatus = RootCompleted;
      }

      return null;
    }

    function getRemainingExpirationTime(fiber) {
      var updateExpirationTime = fiber.expirationTime;
      var childExpirationTime = fiber.childExpirationTime;
      return updateExpirationTime > childExpirationTime ? updateExpirationTime : childExpirationTime;
    }

    function resetChildExpirationTime(completedWork) {
      if (renderExpirationTime !== Never && completedWork.childExpirationTime === Never) {
        // The children of this component are hidden. Don't bubble their
        // expiration times.
        return;
      }

      var newChildExpirationTime = NoWork; // Bubble up the earliest expiration time.

      if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {
        // In profiling mode, resetChildExpirationTime is also used to reset
        // profiler durations.
        var actualDuration = completedWork.actualDuration;
        var treeBaseDuration = completedWork.selfBaseDuration; // When a fiber is cloned, its actualDuration is reset to 0. This value will
        // only be updated if work is done on the fiber (i.e. it doesn't bailout).
        // When work is done, it should bubble to the parent's actualDuration. If
        // the fiber has not been cloned though, (meaning no work was done), then
        // this value will reflect the amount of time spent working on a previous
        // render. In that case it should not bubble. We determine whether it was
        // cloned by comparing the child pointer.

        var shouldBubbleActualDurations = completedWork.alternate === null || completedWork.child !== completedWork.alternate.child;
        var child = completedWork.child;

        while (child !== null) {
          var childUpdateExpirationTime = child.expirationTime;
          var childChildExpirationTime = child.childExpirationTime;

          if (childUpdateExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = childUpdateExpirationTime;
          }

          if (childChildExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = childChildExpirationTime;
          }

          if (shouldBubbleActualDurations) {
            actualDuration += child.actualDuration;
          }

          treeBaseDuration += child.treeBaseDuration;
          child = child.sibling;
        }

        completedWork.actualDuration = actualDuration;
        completedWork.treeBaseDuration = treeBaseDuration;
      } else {
        var _child = completedWork.child;

        while (_child !== null) {
          var _childUpdateExpirationTime = _child.expirationTime;
          var _childChildExpirationTime = _child.childExpirationTime;

          if (_childUpdateExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = _childUpdateExpirationTime;
          }

          if (_childChildExpirationTime > newChildExpirationTime) {
            newChildExpirationTime = _childChildExpirationTime;
          }

          _child = _child.sibling;
        }
      }

      completedWork.childExpirationTime = newChildExpirationTime;
    }

    function commitRoot(root) {
      var renderPriorityLevel = getCurrentPriorityLevel();
      runWithPriority$2(ImmediatePriority, commitRootImpl.bind(null, root, renderPriorityLevel));
      return null;
    }

    function commitRootImpl(root, renderPriorityLevel) {
      do {
        // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which
        // means `flushPassiveEffects` will sometimes result in additional
        // passive effects. So we need to keep flushing in a loop until there are
        // no more pending effects.
        // TODO: Might be better if `flushPassiveEffects` did not automatically
        // flush synchronous work at the end, to avoid factoring hazards like this.
        flushPassiveEffects();
      } while (rootWithPendingPassiveEffects !== null);

      flushRenderPhaseStrictModeWarningsInDEV();

      if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
        {
          throw Error("Should not already be working.");
        }
      }

      var finishedWork = root.finishedWork;
      var expirationTime = root.finishedExpirationTime;

      if (finishedWork === null) {
        return null;
      }

      root.finishedWork = null;
      root.finishedExpirationTime = NoWork;

      if (!(finishedWork !== root.current)) {
        {
          throw Error("Cannot commit the same tree as before. This error is likely caused by a bug in React. Please file an issue.");
        }
      } // commitRoot never returns a continuation; it always finishes synchronously.
      // So we can clear these now to allow a new callback to be scheduled.


      root.callbackNode = null;
      root.callbackExpirationTime = NoWork;
      root.callbackPriority = NoPriority;
      root.nextKnownPendingLevel = NoWork;
      startCommitTimer(); // Update the first and last pending times on this root. The new first
      // pending time is whatever is left on the root fiber.

      var remainingExpirationTimeBeforeCommit = getRemainingExpirationTime(finishedWork);
      markRootFinishedAtTime(root, expirationTime, remainingExpirationTimeBeforeCommit);

      if (root === workInProgressRoot) {
        // We can reset these now that they are finished.
        workInProgressRoot = null;
        workInProgress = null;
        renderExpirationTime = NoWork;
      } else {} // This indicates that the last root we worked on is not the same one that
      // we're committing now. This most commonly happens when a suspended root
      // times out.
      // Get the list of effects.


      var firstEffect;

      if (finishedWork.effectTag > PerformedWork) {
        // A fiber's effect list consists only of its children, not itself. So if
        // the root has an effect, we need to add it to the end of the list. The
        // resulting list is the set that would belong to the root's parent, if it
        // had one; that is, all the effects in the tree including the root.
        if (finishedWork.lastEffect !== null) {
          finishedWork.lastEffect.nextEffect = finishedWork;
          firstEffect = finishedWork.firstEffect;
        } else {
          firstEffect = finishedWork;
        }
      } else {
        // There is no effect on the root.
        firstEffect = finishedWork.firstEffect;
      }

      if (firstEffect !== null) {
        var prevExecutionContext = executionContext;
        executionContext |= CommitContext;
        var prevInteractions = pushInteractions(root); // Reset this to null before calling lifecycles

        ReactCurrentOwner$2.current = null; // The commit phase is broken into several sub-phases. We do a separate pass
        // of the effect list for each phase: all mutation effects come before all
        // layout effects, and so on.
        // The first phase a "before mutation" phase. We use this phase to read the
        // state of the host tree right before we mutate it. This is where
        // getSnapshotBeforeUpdate is called.

        startCommitSnapshotEffectsTimer();
        prepareForCommit(root.containerInfo);
        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitBeforeMutationEffects, null);

            if (hasCaughtError()) {
              if (!(nextEffect !== null)) {
                {
                  throw Error("Should be working on an effect.");
                }
              }

              var error = clearCaughtError();
              captureCommitPhaseError(nextEffect, error);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        stopCommitSnapshotEffectsTimer();

        if (enableProfilerTimer) {
          // Mark the current commit time to be shared by all Profilers in this
          // batch. This enables them to be grouped later.
          recordCommitTime();
        } // The next phase is the mutation phase, where we mutate the host tree.


        startCommitHostEffectsTimer();
        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitMutationEffects, null, root, renderPriorityLevel);

            if (hasCaughtError()) {
              if (!(nextEffect !== null)) {
                {
                  throw Error("Should be working on an effect.");
                }
              }

              var _error = clearCaughtError();

              captureCommitPhaseError(nextEffect, _error);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        stopCommitHostEffectsTimer();
        resetAfterCommit(root.containerInfo); // The work-in-progress tree is now the current tree. This must come after
        // the mutation phase, so that the previous tree is still current during
        // componentWillUnmount, but before the layout phase, so that the finished
        // work is current during componentDidMount/Update.

        root.current = finishedWork; // The next phase is the layout phase, where we call effects that read
        // the host tree after it's been mutated. The idiomatic use case for this is
        // layout, but class component lifecycles also fire here for legacy reasons.

        startCommitLifeCyclesTimer();
        nextEffect = firstEffect;

        do {
          {
            invokeGuardedCallback(null, commitLayoutEffects, null, root, expirationTime);

            if (hasCaughtError()) {
              if (!(nextEffect !== null)) {
                {
                  throw Error("Should be working on an effect.");
                }
              }

              var _error2 = clearCaughtError();

              captureCommitPhaseError(nextEffect, _error2);
              nextEffect = nextEffect.nextEffect;
            }
          }
        } while (nextEffect !== null);

        stopCommitLifeCyclesTimer();
        nextEffect = null; // Tell Scheduler to yield at the end of the frame, so the browser has an
        // opportunity to paint.

        requestPaint();

        if (enableSchedulerTracing) {
          popInteractions(prevInteractions);
        }

        executionContext = prevExecutionContext;
      } else {
        // No effects.
        root.current = finishedWork; // Measure these anyway so the flamegraph explicitly shows that there were
        // no effects.
        // TODO: Maybe there's a better way to report this.

        startCommitSnapshotEffectsTimer();
        stopCommitSnapshotEffectsTimer();

        if (enableProfilerTimer) {
          recordCommitTime();
        }

        startCommitHostEffectsTimer();
        stopCommitHostEffectsTimer();
        startCommitLifeCyclesTimer();
        stopCommitLifeCyclesTimer();
      }

      stopCommitTimer();
      var rootDidHavePassiveEffects = rootDoesHavePassiveEffects;

      if (rootDoesHavePassiveEffects) {
        // This commit has passive effects. Stash a reference to them. But don't
        // schedule a callback until after flushing layout work.
        rootDoesHavePassiveEffects = false;
        rootWithPendingPassiveEffects = root;
        pendingPassiveEffectsExpirationTime = expirationTime;
        pendingPassiveEffectsRenderPriority = renderPriorityLevel;
      } else {
        // We are done with the effect chain at this point so let's clear the
        // nextEffect pointers to assist with GC. If we have passive effects, we'll
        // clear this in flushPassiveEffects.
        nextEffect = firstEffect;

        while (nextEffect !== null) {
          var nextNextEffect = nextEffect.nextEffect;
          nextEffect.nextEffect = null;
          nextEffect = nextNextEffect;
        }
      } // Check if there's remaining work on this root


      var remainingExpirationTime = root.firstPendingTime;

      if (remainingExpirationTime !== NoWork) {
        if (enableSchedulerTracing) {
          if (spawnedWorkDuringRender !== null) {
            var expirationTimes = spawnedWorkDuringRender;
            spawnedWorkDuringRender = null;

            for (var i = 0; i < expirationTimes.length; i++) {
              scheduleInteractions(root, expirationTimes[i], root.memoizedInteractions);
            }
          }

          schedulePendingInteractions(root, remainingExpirationTime);
        }
      } else {
        // If there's no remaining work, we can clear the set of already failed
        // error boundaries.
        legacyErrorBoundariesThatAlreadyFailed = null;
      }

      if (enableSchedulerTracing) {
        if (!rootDidHavePassiveEffects) {
          // If there are no passive effects, then we can complete the pending interactions.
          // Otherwise, we'll wait until after the passive effects are flushed.
          // Wait to do this until after remaining work has been scheduled,
          // so that we don't prematurely signal complete for interactions when there's e.g. hidden work.
          finishPendingInteractions(root, expirationTime);
        }
      }

      if (remainingExpirationTime === Sync) {
        // Count the number of times the root synchronously re-renders without
        // finishing. If there are too many, it indicates an infinite update loop.
        if (root === rootWithNestedUpdates) {
          nestedUpdateCount++;
        } else {
          nestedUpdateCount = 0;
          rootWithNestedUpdates = root;
        }
      } else {
        nestedUpdateCount = 0;
      }

      onCommitRoot(finishedWork.stateNode, expirationTime); // Always call this before exiting `commitRoot`, to ensure that any
      // additional work on this root is scheduled.

      ensureRootIsScheduled(root);

      if (hasUncaughtError) {
        hasUncaughtError = false;
        var _error3 = firstUncaughtError;
        firstUncaughtError = null;
        throw _error3;
      }

      if ((executionContext & LegacyUnbatchedContext) !== NoContext) {
        // This is a legacy edge case. We just committed the initial mount of
        // a ReactDOM.render-ed root inside of batchedUpdates. The commit fired
        // synchronously, but layout updates should be deferred until the end
        // of the batch.
        return null;
      } // If layout work was scheduled, flush it now.


      flushSyncCallbackQueue();
      return null;
    }

    function commitBeforeMutationEffects() {
      while (nextEffect !== null) {
        var effectTag = nextEffect.effectTag;

        if ((effectTag & Snapshot) !== NoEffect) {
          setCurrentFiber(nextEffect);
          recordEffect();
          var current$$1 = nextEffect.alternate;
          commitBeforeMutationLifeCycles(current$$1, nextEffect);
          resetCurrentFiber();
        }

        if ((effectTag & Passive) !== NoEffect) {
          // If there are passive effects, schedule a callback to flush at
          // the earliest opportunity.
          if (!rootDoesHavePassiveEffects) {
            rootDoesHavePassiveEffects = true;
            scheduleCallback(NormalPriority, function () {
              flushPassiveEffects();
              return null;
            });
          }
        }

        nextEffect = nextEffect.nextEffect;
      }
    }

    function commitMutationEffects(root, renderPriorityLevel) {
      // TODO: Should probably move the bulk of this function to commitWork.
      while (nextEffect !== null) {
        setCurrentFiber(nextEffect);
        var effectTag = nextEffect.effectTag;

        if (effectTag & ContentReset) {
          commitResetTextContent(nextEffect);
        }

        if (effectTag & Ref) {
          var current$$1 = nextEffect.alternate;

          if (current$$1 !== null) {
            commitDetachRef(current$$1);
          }
        } // The following switch statement is only concerned about placement,
        // updates, and deletions. To avoid needing to add a case for every possible
        // bitmap value, we remove the secondary effects from the effect tag and
        // switch on that value.


        var primaryEffectTag = effectTag & (Placement | Update | Deletion | Hydrating);

        switch (primaryEffectTag) {
          case Placement:
            {
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
              // inserted, before any life-cycles like componentDidMount gets called.
              // TODO: findDOMNode doesn't rely on this any more but isMounted does
              // and isMounted is deprecated anyway so we should be able to kill this.

              nextEffect.effectTag &= ~Placement;
              break;
            }

          case PlacementAndUpdate:
            {
              // Placement
              commitPlacement(nextEffect); // Clear the "placement" from effect tag so that we know that this is
              // inserted, before any life-cycles like componentDidMount gets called.

              nextEffect.effectTag &= ~Placement; // Update

              var _current = nextEffect.alternate;
              commitWork(_current, nextEffect);
              break;
            }

          case Hydrating:
            {
              nextEffect.effectTag &= ~Hydrating;
              break;
            }

          case HydratingAndUpdate:
            {
              nextEffect.effectTag &= ~Hydrating; // Update

              var _current2 = nextEffect.alternate;
              commitWork(_current2, nextEffect);
              break;
            }

          case Update:
            {
              var _current3 = nextEffect.alternate;
              commitWork(_current3, nextEffect);
              break;
            }

          case Deletion:
            {
              commitDeletion(root, nextEffect, renderPriorityLevel);
              break;
            }
        } // TODO: Only record a mutation effect if primaryEffectTag is non-zero.


        recordEffect();
        resetCurrentFiber();
        nextEffect = nextEffect.nextEffect;
      }
    }

    function commitLayoutEffects(root, committedExpirationTime) {
      // TODO: Should probably move the bulk of this function to commitWork.
      while (nextEffect !== null) {
        setCurrentFiber(nextEffect);
        var effectTag = nextEffect.effectTag;

        if (effectTag & (Update | Callback)) {
          recordEffect();
          var current$$1 = nextEffect.alternate;
          commitLifeCycles(root, current$$1, nextEffect, committedExpirationTime);
        }

        if (effectTag & Ref) {
          recordEffect();
          commitAttachRef(nextEffect);
        }

        resetCurrentFiber();
        nextEffect = nextEffect.nextEffect;
      }
    }

    function flushPassiveEffects() {
      if (pendingPassiveEffectsRenderPriority !== NoPriority) {
        var priorityLevel = pendingPassiveEffectsRenderPriority > NormalPriority ? NormalPriority : pendingPassiveEffectsRenderPriority;
        pendingPassiveEffectsRenderPriority = NoPriority;
        return runWithPriority$2(priorityLevel, flushPassiveEffectsImpl);
      }
    }

    function flushPassiveEffectsImpl() {
      if (rootWithPendingPassiveEffects === null) {
        return false;
      }

      var root = rootWithPendingPassiveEffects;
      var expirationTime = pendingPassiveEffectsExpirationTime;
      rootWithPendingPassiveEffects = null;
      pendingPassiveEffectsExpirationTime = NoWork;

      if (!((executionContext & (RenderContext | CommitContext)) === NoContext)) {
        {
          throw Error("Cannot flush passive effects while already rendering.");
        }
      }

      var prevExecutionContext = executionContext;
      executionContext |= CommitContext;
      var prevInteractions = pushInteractions(root); // Note: This currently assumes there are no passive effects on the root
      // fiber, because the root is not part of its own effect list. This could
      // change in the future.

      var effect = root.current.firstEffect;

      while (effect !== null) {
        {
          setCurrentFiber(effect);
          invokeGuardedCallback(null, commitPassiveHookEffects, null, effect);

          if (hasCaughtError()) {
            if (!(effect !== null)) {
              {
                throw Error("Should be working on an effect.");
              }
            }

            var error = clearCaughtError();
            captureCommitPhaseError(effect, error);
          }

          resetCurrentFiber();
        }
        var nextNextEffect = effect.nextEffect; // Remove nextEffect pointer to assist GC

        effect.nextEffect = null;
        effect = nextNextEffect;
      }

      if (enableSchedulerTracing) {
        popInteractions(prevInteractions);
        finishPendingInteractions(root, expirationTime);
      }

      executionContext = prevExecutionContext;
      flushSyncCallbackQueue(); // If additional passive effects were scheduled, increment a counter. If this
      // exceeds the limit, we'll fire a warning.

      nestedPassiveUpdateCount = rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;
      return true;
    }

    function isAlreadyFailedLegacyErrorBoundary(instance) {
      return legacyErrorBoundariesThatAlreadyFailed !== null && legacyErrorBoundariesThatAlreadyFailed.has(instance);
    }

    function markLegacyErrorBoundaryAsFailed(instance) {
      if (legacyErrorBoundariesThatAlreadyFailed === null) {
        legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);
      } else {
        legacyErrorBoundariesThatAlreadyFailed.add(instance);
      }
    }

    function prepareToThrowUncaughtError(error) {
      if (!hasUncaughtError) {
        hasUncaughtError = true;
        firstUncaughtError = error;
      }
    }

    var onUncaughtError = prepareToThrowUncaughtError;

    function captureCommitPhaseErrorOnRoot(rootFiber, sourceFiber, error) {
      var errorInfo = createCapturedValue(error, sourceFiber);
      var update = createRootErrorUpdate(rootFiber, errorInfo, Sync);
      enqueueUpdate(rootFiber, update);
      var root = markUpdateTimeFromFiberToRoot(rootFiber, Sync);

      if (root !== null) {
        ensureRootIsScheduled(root);
        schedulePendingInteractions(root, Sync);
      }
    }

    function captureCommitPhaseError(sourceFiber, error) {
      if (sourceFiber.tag === HostRoot) {
        // Error was thrown at the root. There is no parent, so the root
        // itself should capture it.
        captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);
        return;
      }

      var fiber = sourceFiber.return;

      while (fiber !== null) {
        if (fiber.tag === HostRoot) {
          captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);
          return;
        } else if (fiber.tag === ClassComponent) {
          var ctor = fiber.type;
          var instance = fiber.stateNode;

          if (typeof ctor.getDerivedStateFromError === 'function' || typeof instance.componentDidCatch === 'function' && !isAlreadyFailedLegacyErrorBoundary(instance)) {
            var errorInfo = createCapturedValue(error, sourceFiber);
            var update = createClassErrorUpdate(fiber, errorInfo, // TODO: This is always sync
            Sync);
            enqueueUpdate(fiber, update);
            var root = markUpdateTimeFromFiberToRoot(fiber, Sync);

            if (root !== null) {
              ensureRootIsScheduled(root);
              schedulePendingInteractions(root, Sync);
            }

            return;
          }
        }

        fiber = fiber.return;
      }
    }

    function pingSuspendedRoot(root, thenable, suspendedTime) {
      var pingCache = root.pingCache;

      if (pingCache !== null) {
        // The thenable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        pingCache.delete(thenable);
      }

      if (workInProgressRoot === root && renderExpirationTime === suspendedTime) {
        // Received a ping at the same priority level at which we're currently
        // rendering. We might want to restart this render. This should mirror
        // the logic of whether or not a root suspends once it completes.
        // TODO: If we're rendering sync either due to Sync, Batched or expired,
        // we should probably never restart.
        // If we're suspended with delay, we'll always suspend so we can always
        // restart. If we're suspended without any updates, it might be a retry.
        // If it's early in the retry we can restart. We can't know for sure
        // whether we'll eventually process an update during this render pass,
        // but it's somewhat unlikely that we get to a ping before that, since
        // getting to the root most update is usually very fast.
        if (workInProgressRootExitStatus === RootSuspendedWithDelay || workInProgressRootExitStatus === RootSuspended && workInProgressRootLatestProcessedExpirationTime === Sync && now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS) {
          // Restart from the root. Don't need to schedule a ping because
          // we're already working on this tree.
          prepareFreshStack(root, renderExpirationTime);
        } else {
          // Even though we can't restart right now, we might get an
          // opportunity later. So we mark this render as having a ping.
          workInProgressRootHasPendingPing = true;
        }

        return;
      }

      if (!isRootSuspendedAtTime(root, suspendedTime)) {
        // The root is no longer suspended at this time.
        return;
      }

      var lastPingedTime = root.lastPingedTime;

      if (lastPingedTime !== NoWork && lastPingedTime < suspendedTime) {
        // There's already a lower priority ping scheduled.
        return;
      } // Mark the time at which this ping was scheduled.


      root.lastPingedTime = suspendedTime;

      if (root.finishedExpirationTime === suspendedTime) {
        // If there's a pending fallback waiting to commit, throw it away.
        root.finishedExpirationTime = NoWork;
        root.finishedWork = null;
      }

      ensureRootIsScheduled(root);
      schedulePendingInteractions(root, suspendedTime);
    }

    function retryTimedOutBoundary(boundaryFiber, retryTime) {
      // The boundary fiber (a Suspense component or SuspenseList component)
      // previously was rendered in its fallback state. One of the promises that
      // suspended it has resolved, which means at least part of the tree was
      // likely unblocked. Try rendering again, at a new expiration time.
      if (retryTime === NoWork) {
        var suspenseConfig = null; // Retries don't carry over the already committed update.

        var currentTime = requestCurrentTimeForUpdate();
        retryTime = computeExpirationForFiber(currentTime, boundaryFiber, suspenseConfig);
      } // TODO: Special case idle priority?


      var root = markUpdateTimeFromFiberToRoot(boundaryFiber, retryTime);

      if (root !== null) {
        ensureRootIsScheduled(root);
        schedulePendingInteractions(root, retryTime);
      }
    }

    function retryDehydratedSuspenseBoundary(boundaryFiber) {
      var suspenseState = boundaryFiber.memoizedState;
      var retryTime = NoWork;

      if (suspenseState !== null) {
        retryTime = suspenseState.retryTime;
      }

      retryTimedOutBoundary(boundaryFiber, retryTime);
    }

    function resolveRetryThenable(boundaryFiber, thenable) {
      var retryTime = NoWork; // Default

      var retryCache;

      if (enableSuspenseServerRenderer) {
        switch (boundaryFiber.tag) {
          case SuspenseComponent:
            retryCache = boundaryFiber.stateNode;
            var suspenseState = boundaryFiber.memoizedState;

            if (suspenseState !== null) {
              retryTime = suspenseState.retryTime;
            }

            break;

          case SuspenseListComponent:
            retryCache = boundaryFiber.stateNode;
            break;

          default:
            {
              {
                throw Error("Pinged unknown suspense boundary type. This is probably a bug in React.");
              }
            }
        }
      } else {
        retryCache = boundaryFiber.stateNode;
      }

      if (retryCache !== null) {
        // The thenable resolved, so we no longer need to memoize, because it will
        // never be thrown again.
        retryCache.delete(thenable);
      }

      retryTimedOutBoundary(boundaryFiber, retryTime);
    } // Computes the next Just Noticeable Difference (JND) boundary.
    // The theory is that a person can't tell the difference between small differences in time.
    // Therefore, if we wait a bit longer than necessary that won't translate to a noticeable
    // difference in the experience. However, waiting for longer might mean that we can avoid
    // showing an intermediate loading state. The longer we have already waited, the harder it
    // is to tell small differences in time. Therefore, the longer we've already waited,
    // the longer we can wait additionally. At some point we have to give up though.
    // We pick a train model where the next boundary commits at a consistent schedule.
    // These particular numbers are vague estimates. We expect to adjust them based on research.


    function jnd(timeElapsed) {
      return timeElapsed < 120 ? 120 : timeElapsed < 480 ? 480 : timeElapsed < 1080 ? 1080 : timeElapsed < 1920 ? 1920 : timeElapsed < 3000 ? 3000 : timeElapsed < 4320 ? 4320 : ceil(timeElapsed / 1960) * 1960;
    }

    function computeMsUntilSuspenseLoadingDelay(mostRecentEventTime, committedExpirationTime, suspenseConfig) {
      var busyMinDurationMs = suspenseConfig.busyMinDurationMs | 0;

      if (busyMinDurationMs <= 0) {
        return 0;
      }

      var busyDelayMs = suspenseConfig.busyDelayMs | 0; // Compute the time until this render pass would expire.

      var currentTimeMs = now();
      var eventTimeMs = inferTimeFromExpirationTimeWithSuspenseConfig(mostRecentEventTime, suspenseConfig);
      var timeElapsed = currentTimeMs - eventTimeMs;

      if (timeElapsed <= busyDelayMs) {
        // If we haven't yet waited longer than the initial delay, we don't
        // have to wait any additional time.
        return 0;
      }

      var msUntilTimeout = busyDelayMs + busyMinDurationMs - timeElapsed; // This is the value that is passed to `setTimeout`.

      return msUntilTimeout;
    }

    function checkForNestedUpdates() {
      if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {
        nestedUpdateCount = 0;
        rootWithNestedUpdates = null;
        {
          {
            throw Error("Maximum update depth exceeded. This can happen when a component repeatedly calls setState inside componentWillUpdate or componentDidUpdate. React limits the number of nested updates to prevent infinite loops.");
          }
        }
      }

      {
        if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {
          nestedPassiveUpdateCount = 0;
          warning$1(false, 'Maximum update depth exceeded. This can happen when a component ' + "calls setState inside useEffect, but useEffect either doesn't " + 'have a dependency array, or one of the dependencies changes on ' + 'every render.');
        }
      }
    }

    function flushRenderPhaseStrictModeWarningsInDEV() {
      {
        ReactStrictModeWarnings.flushLegacyContextWarning();

        if (warnAboutDeprecatedLifecycles) {
          ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();
        }
      }
    }

    function stopFinishedWorkLoopTimer() {
      var didCompleteRoot = true;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
    }

    function stopInterruptedWorkLoopTimer() {
      // TODO: Track which fiber caused the interruption.
      var didCompleteRoot = false;
      stopWorkLoopTimer(interruptedBy, didCompleteRoot);
      interruptedBy = null;
    }

    function checkForInterruption(fiberThatReceivedUpdate, updateExpirationTime) {
      if (enableUserTimingAPI && workInProgressRoot !== null && updateExpirationTime > renderExpirationTime) {
        interruptedBy = fiberThatReceivedUpdate;
      }
    }

    var didWarnStateUpdateForUnmountedComponent = null;

    function warnAboutUpdateOnUnmountedFiberInDEV(fiber) {
      {
        var tag = fiber.tag;

        if (tag !== HostRoot && tag !== ClassComponent && tag !== FunctionComponent && tag !== ForwardRef && tag !== MemoComponent && tag !== SimpleMemoComponent) {
          // Only warn for user-defined components, not internal ones like Suspense.
          return;
        } // We show the whole stack but dedupe on the top component's name because
        // the problematic code almost always lies inside that component.


        var componentName = getComponentName(fiber.type) || 'ReactComponent';

        if (didWarnStateUpdateForUnmountedComponent !== null) {
          if (didWarnStateUpdateForUnmountedComponent.has(componentName)) {
            return;
          }

          didWarnStateUpdateForUnmountedComponent.add(componentName);
        } else {
          didWarnStateUpdateForUnmountedComponent = new Set([componentName]);
        }

        warningWithoutStack$1(false, "Can't perform a React state update on an unmounted component. This " + 'is a no-op, but it indicates a memory leak in your application. To ' + 'fix, cancel all subscriptions and asynchronous tasks in %s.%s', tag === ClassComponent ? 'the componentWillUnmount method' : 'a useEffect cleanup function', getStackByFiberInDevAndProd(fiber));
      }
    }

    var beginWork$$1;

    if ( true && replayFailedUnitOfWorkWithInvokeGuardedCallback) {
      var dummyFiber = null;

      beginWork$$1 = function (current$$1, unitOfWork, expirationTime) {
        // If a component throws an error, we replay it again in a synchronously
        // dispatched event, so that the debugger will treat it as an uncaught
        // error See ReactErrorUtils for more information.
        // Before entering the begin phase, copy the work-in-progress onto a dummy
        // fiber. If beginWork throws, we'll use this to reset the state.
        var originalWorkInProgressCopy = assignFiberPropertiesInDEV(dummyFiber, unitOfWork);

        try {
          return beginWork$1(current$$1, unitOfWork, expirationTime);
        } catch (originalError) {
          if (originalError !== null && typeof originalError === 'object' && typeof originalError.then === 'function') {
            // Don't replay promises. Treat everything else like an error.
            throw originalError;
          } // Keep this code in sync with handleError; any changes here must have
          // corresponding changes there.


          resetContextDependencies();
          resetHooks(); // Don't reset current debug fiber, since we're about to work on the
          // same fiber again.
          // Unwind the failed stack frame

          unwindInterruptedWork(unitOfWork); // Restore the original properties of the fiber.

          assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);

          if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {
            // Reset the profiler timer.
            startProfilerTimer(unitOfWork);
          } // Run beginWork again.


          invokeGuardedCallback(null, beginWork$1, null, current$$1, unitOfWork, expirationTime);

          if (hasCaughtError()) {
            var replayError = clearCaughtError(); // `invokeGuardedCallback` sometimes sets an expando `_suppressLogging`.
            // Rethrow this error instead of the original one.

            throw replayError;
          } else {
            // This branch is reachable if the render phase is impure.
            throw originalError;
          }
        }
      };
    } else {
      beginWork$$1 = beginWork$1;
    }

    var didWarnAboutUpdateInRender = false;
    var didWarnAboutUpdateInGetChildContext = false;

    function warnAboutInvalidUpdatesOnClassComponentsInDEV(fiber) {
      {
        if (fiber.tag === ClassComponent) {
          switch (phase) {
            case 'getChildContext':
              if (didWarnAboutUpdateInGetChildContext) {
                return;
              }

              warningWithoutStack$1(false, 'setState(...): Cannot call setState() inside getChildContext()');
              didWarnAboutUpdateInGetChildContext = true;
              break;

            case 'render':
              if (didWarnAboutUpdateInRender) {
                return;
              }

              warningWithoutStack$1(false, 'Cannot update during an existing state transition (such as ' + 'within `render`). Render methods should be a pure function of ' + 'props and state.');
              didWarnAboutUpdateInRender = true;
              break;
          }
        }
      }
    } // a 'shared' variable that changes when act() opens/closes in tests.


    var IsThisRendererActing = {
      current: false
    };

    function warnIfNotScopedWithMatchingAct(fiber) {
      {
        if (warnsIfNotActing === true && IsSomeRendererActing.current === true && IsThisRendererActing.current !== true) {
          warningWithoutStack$1(false, "It looks like you're using the wrong act() around your test interactions.\n" + 'Be sure to use the matching version of act() corresponding to your renderer:\n\n' + '// for react-dom:\n' + "import {act} from 'react-dom/test-utils';\n" + '// ...\n' + 'act(() => ...);\n\n' + '// for react-test-renderer:\n' + "import TestRenderer from 'react-test-renderer';\n" + 'const {act} = TestRenderer;\n' + '// ...\n' + 'act(() => ...);' + '%s', getStackByFiberInDevAndProd(fiber));
        }
      }
    }

    function warnIfNotCurrentlyActingEffectsInDEV(fiber) {
      {
        if (warnsIfNotActing === true && (fiber.mode & StrictMode) !== NoMode && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
          warningWithoutStack$1(false, 'An update to %s ran an effect, but was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
        }
      }
    }

    function warnIfNotCurrentlyActingUpdatesInDEV(fiber) {
      {
        if (warnsIfNotActing === true && executionContext === NoContext && IsSomeRendererActing.current === false && IsThisRendererActing.current === false) {
          warningWithoutStack$1(false, 'An update to %s inside a test was not wrapped in act(...).\n\n' + 'When testing, code that causes React state updates should be ' + 'wrapped into act(...):\n\n' + 'act(() => {\n' + '  /* fire events that update state */\n' + '});\n' + '/* assert on the output */\n\n' + "This ensures that you're testing the behavior the user would see " + 'in the browser.' + ' Learn more at https://fb.me/react-wrap-tests-with-act' + '%s', getComponentName(fiber.type), getStackByFiberInDevAndProd(fiber));
        }
      }
    }

    var warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV; // In tests, we want to enforce a mocked scheduler.

    var didWarnAboutUnmockedScheduler = false; // TODO Before we release concurrent mode, revisit this and decide whether a mocked
    // scheduler is the actual recommendation. The alternative could be a testing build,
    // a new lib, or whatever; we dunno just yet. This message is for early adopters
    // to get their tests right.

    function warnIfUnmockedScheduler(fiber) {
      {
        if (didWarnAboutUnmockedScheduler === false && Scheduler.unstable_flushAllWithoutAsserting === undefined) {
          if (fiber.mode & BlockingMode || fiber.mode & ConcurrentMode) {
            didWarnAboutUnmockedScheduler = true;
            warningWithoutStack$1(false, 'In Concurrent or Sync modes, the "scheduler" module needs to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
          } else if (warnAboutUnmockedScheduler === true) {
            didWarnAboutUnmockedScheduler = true;
            warningWithoutStack$1(false, 'Starting from React v17, the "scheduler" module will need to be mocked ' + 'to guarantee consistent behaviour across tests and browsers. ' + 'For example, with jest: \n' + "jest.mock('scheduler', () => require('scheduler/unstable_mock'));\n\n" + 'For more info, visit https://fb.me/react-mock-scheduler');
          }
        }
      }
    }

    var componentsThatTriggeredHighPriSuspend = null;

    function checkForWrongSuspensePriorityInDEV(sourceFiber) {
      {
        var currentPriorityLevel = getCurrentPriorityLevel();

        if ((sourceFiber.mode & ConcurrentMode) !== NoEffect && (currentPriorityLevel === UserBlockingPriority$2 || currentPriorityLevel === ImmediatePriority)) {
          var workInProgressNode = sourceFiber;

          while (workInProgressNode !== null) {
            // Add the component that triggered the suspense
            var current$$1 = workInProgressNode.alternate;

            if (current$$1 !== null) {
              // TODO: warn component that triggers the high priority
              // suspend is the HostRoot
              switch (workInProgressNode.tag) {
                case ClassComponent:
                  // Loop through the component's update queue and see whether the component
                  // has triggered any high priority updates
                  var updateQueue = current$$1.updateQueue;

                  if (updateQueue !== null) {
                    var update = updateQueue.firstUpdate;

                    while (update !== null) {
                      var priorityLevel = update.priority;

                      if (priorityLevel === UserBlockingPriority$2 || priorityLevel === ImmediatePriority) {
                        if (componentsThatTriggeredHighPriSuspend === null) {
                          componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                        } else {
                          componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                        }

                        break;
                      }

                      update = update.next;
                    }
                  }

                  break;

                case FunctionComponent:
                case ForwardRef:
                case SimpleMemoComponent:
                  if (workInProgressNode.memoizedState !== null && workInProgressNode.memoizedState.baseUpdate !== null) {
                    var _update = workInProgressNode.memoizedState.baseUpdate; // Loop through the functional component's memoized state to see whether
                    // the component has triggered any high pri updates

                    while (_update !== null) {
                      var priority = _update.priority;

                      if (priority === UserBlockingPriority$2 || priority === ImmediatePriority) {
                        if (componentsThatTriggeredHighPriSuspend === null) {
                          componentsThatTriggeredHighPriSuspend = new Set([getComponentName(workInProgressNode.type)]);
                        } else {
                          componentsThatTriggeredHighPriSuspend.add(getComponentName(workInProgressNode.type));
                        }

                        break;
                      }

                      if (_update.next === workInProgressNode.memoizedState.baseUpdate) {
                        break;
                      }

                      _update = _update.next;
                    }
                  }

                  break;

                default:
                  break;
              }
            }

            workInProgressNode = workInProgressNode.return;
          }
        }
      }
    }

    function flushSuspensePriorityWarningInDEV() {
      {
        if (componentsThatTriggeredHighPriSuspend !== null) {
          var componentNames = [];
          componentsThatTriggeredHighPriSuspend.forEach(function (name) {
            return componentNames.push(name);
          });
          componentsThatTriggeredHighPriSuspend = null;

          if (componentNames.length > 0) {
            warningWithoutStack$1(false, '%s triggered a user-blocking update that suspended.' + '\n\n' + 'The fix is to split the update into multiple parts: a user-blocking ' + 'update to provide immediate feedback, and another update that ' + 'triggers the bulk of the changes.' + '\n\n' + 'Refer to the documentation for useTransition to learn how ' + 'to implement this pattern.', // TODO: Add link to React docs with more information, once it exists
            componentNames.sort().join(', '));
          }
        }
      }
    }

    function computeThreadID(root, expirationTime) {
      // Interaction threads are unique per root and expiration time.
      return expirationTime * 1000 + root.interactionThreadID;
    }

    function markSpawnedWork(expirationTime) {
      if (!enableSchedulerTracing) {
        return;
      }

      if (spawnedWorkDuringRender === null) {
        spawnedWorkDuringRender = [expirationTime];
      } else {
        spawnedWorkDuringRender.push(expirationTime);
      }
    }

    function scheduleInteractions(root, expirationTime, interactions) {
      if (!enableSchedulerTracing) {
        return;
      }

      if (interactions.size > 0) {
        var pendingInteractionMap = root.pendingInteractionMap;
        var pendingInteractions = pendingInteractionMap.get(expirationTime);

        if (pendingInteractions != null) {
          interactions.forEach(function (interaction) {
            if (!pendingInteractions.has(interaction)) {
              // Update the pending async work count for previously unscheduled interaction.
              interaction.__count++;
            }

            pendingInteractions.add(interaction);
          });
        } else {
          pendingInteractionMap.set(expirationTime, new Set(interactions)); // Update the pending async work count for the current interactions.

          interactions.forEach(function (interaction) {
            interaction.__count++;
          });
        }

        var subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null) {
          var threadID = computeThreadID(root, expirationTime);
          subscriber.onWorkScheduled(interactions, threadID);
        }
      }
    }

    function schedulePendingInteractions(root, expirationTime) {
      // This is called when work is scheduled on a root.
      // It associates the current interactions with the newly-scheduled expiration.
      // They will be restored when that expiration is later committed.
      if (!enableSchedulerTracing) {
        return;
      }

      scheduleInteractions(root, expirationTime, tracing.__interactionsRef.current);
    }

    function startWorkOnPendingInteractions(root, expirationTime) {
      // This is called when new work is started on a root.
      if (!enableSchedulerTracing) {
        return;
      } // Determine which interactions this batch of work currently includes, So that
      // we can accurately attribute time spent working on it, And so that cascading
      // work triggered during the render phase will be associated with it.


      var interactions = new Set();
      root.pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
        if (scheduledExpirationTime >= expirationTime) {
          scheduledInteractions.forEach(function (interaction) {
            return interactions.add(interaction);
          });
        }
      }); // Store the current set of interactions on the FiberRoot for a few reasons:
      // We can re-use it in hot functions like performConcurrentWorkOnRoot()
      // without having to recalculate it. We will also use it in commitWork() to
      // pass to any Profiler onRender() hooks. This also provides DevTools with a
      // way to access it when the onCommitRoot() hook is called.

      root.memoizedInteractions = interactions;

      if (interactions.size > 0) {
        var subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null) {
          var threadID = computeThreadID(root, expirationTime);

          try {
            subscriber.onWorkStarted(interactions, threadID);
          } catch (error) {
            // If the subscriber throws, rethrow it in a separate task
            scheduleCallback(ImmediatePriority, function () {
              throw error;
            });
          }
        }
      }
    }

    function finishPendingInteractions(root, committedExpirationTime) {
      if (!enableSchedulerTracing) {
        return;
      }

      var earliestRemainingTimeAfterCommit = root.firstPendingTime;
      var subscriber;

      try {
        subscriber = tracing.__subscriberRef.current;

        if (subscriber !== null && root.memoizedInteractions.size > 0) {
          var threadID = computeThreadID(root, committedExpirationTime);
          subscriber.onWorkStopped(root.memoizedInteractions, threadID);
        }
      } catch (error) {
        // If the subscriber throws, rethrow it in a separate task
        scheduleCallback(ImmediatePriority, function () {
          throw error;
        });
      } finally {
        // Clear completed interactions from the pending Map.
        // Unless the render was suspended or cascading work was scheduled,
        // In which case– leave pending interactions until the subsequent render.
        var pendingInteractionMap = root.pendingInteractionMap;
        pendingInteractionMap.forEach(function (scheduledInteractions, scheduledExpirationTime) {
          // Only decrement the pending interaction count if we're done.
          // If there's still work at the current priority,
          // That indicates that we are waiting for suspense data.
          if (scheduledExpirationTime > earliestRemainingTimeAfterCommit) {
            pendingInteractionMap.delete(scheduledExpirationTime);
            scheduledInteractions.forEach(function (interaction) {
              interaction.__count--;

              if (subscriber !== null && interaction.__count === 0) {
                try {
                  subscriber.onInteractionScheduledWorkCompleted(interaction);
                } catch (error) {
                  // If the subscriber throws, rethrow it in a separate task
                  scheduleCallback(ImmediatePriority, function () {
                    throw error;
                  });
                }
              }
            });
          }
        });
      }
    }

    var onCommitFiberRoot = null;
    var onCommitFiberUnmount = null;
    var hasLoggedError = false;
    var isDevToolsPresent = typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';

    function injectInternals(internals) {
      if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {
        // No DevTools
        return false;
      }

      var hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;

      if (hook.isDisabled) {
        // This isn't a real property on the hook, but it can be set to opt out
        // of DevTools integration and associated warnings and logs.
        // https://github.com/facebook/react/issues/3877
        return true;
      }

      if (!hook.supportsFiber) {
        {
          warningWithoutStack$1(false, 'The installed version of React DevTools is too old and will not work ' + 'with the current version of React. Please update React DevTools. ' + 'https://fb.me/react-devtools');
        } // DevTools exists, even though it doesn't support Fiber.

        return true;
      }

      try {
        var rendererID = hook.inject(internals); // We have successfully injected, so now it is safe to set up hooks.

        onCommitFiberRoot = function (root, expirationTime) {
          try {
            var didError = (root.current.effectTag & DidCapture) === DidCapture;

            if (enableProfilerTimer) {
              var currentTime = getCurrentTime();
              var priorityLevel = inferPriorityFromExpirationTime(currentTime, expirationTime);
              hook.onCommitFiberRoot(rendererID, root, priorityLevel, didError);
            } else {
              hook.onCommitFiberRoot(rendererID, root, undefined, didError);
            }
          } catch (err) {
            if ( true && !hasLoggedError) {
              hasLoggedError = true;
              warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
            }
          }
        };

        onCommitFiberUnmount = function (fiber) {
          try {
            hook.onCommitFiberUnmount(rendererID, fiber);
          } catch (err) {
            if ( true && !hasLoggedError) {
              hasLoggedError = true;
              warningWithoutStack$1(false, 'React DevTools encountered an error: %s', err);
            }
          }
        };
      } catch (err) {
        // Catch all errors because it is unsafe to throw during initialization.
        {
          warningWithoutStack$1(false, 'React DevTools encountered an error: %s.', err);
        }
      } // DevTools exists


      return true;
    }

    function onCommitRoot(root, expirationTime) {
      if (typeof onCommitFiberRoot === 'function') {
        onCommitFiberRoot(root, expirationTime);
      }
    }

    function onCommitUnmount(fiber) {
      if (typeof onCommitFiberUnmount === 'function') {
        onCommitFiberUnmount(fiber);
      }
    }

    var hasBadMapPolyfill;
    {
      hasBadMapPolyfill = false;

      try {
        var nonExtensibleObject = Object.preventExtensions({});
        var testMap = new Map([[nonExtensibleObject, null]]);
        var testSet = new Set([nonExtensibleObject]); // This is necessary for Rollup to not consider these unused.
        // https://github.com/rollup/rollup/issues/1771
        // TODO: we can remove these if Rollup fixes the bug.

        testMap.set(0, 0);
        testSet.add(0);
      } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
      }
    }
    var debugCounter = 1;

    function FiberNode(tag, pendingProps, key, mode) {
      // Instance
      this.tag = tag;
      this.key = key;
      this.elementType = null;
      this.type = null;
      this.stateNode = null; // Fiber

      this.return = null;
      this.child = null;
      this.sibling = null;
      this.index = 0;
      this.ref = null;
      this.pendingProps = pendingProps;
      this.memoizedProps = null;
      this.updateQueue = null;
      this.memoizedState = null;
      this.dependencies = null;
      this.mode = mode; // Effects

      this.effectTag = NoEffect;
      this.nextEffect = null;
      this.firstEffect = null;
      this.lastEffect = null;
      this.expirationTime = NoWork;
      this.childExpirationTime = NoWork;
      this.alternate = null;

      if (enableProfilerTimer) {
        // Note: The following is done to avoid a v8 performance cliff.
        //
        // Initializing the fields below to smis and later updating them with
        // double values will cause Fibers to end up having separate shapes.
        // This behavior/bug has something to do with Object.preventExtension().
        // Fortunately this only impacts DEV builds.
        // Unfortunately it makes React unusably slow for some applications.
        // To work around this, initialize the fields below with doubles.
        //
        // Learn more about this here:
        // https://github.com/facebook/react/issues/14365
        // https://bugs.chromium.org/p/v8/issues/detail?id=8538
        this.actualDuration = Number.NaN;
        this.actualStartTime = Number.NaN;
        this.selfBaseDuration = Number.NaN;
        this.treeBaseDuration = Number.NaN; // It's okay to replace the initial doubles with smis after initialization.
        // This won't trigger the performance cliff mentioned above,
        // and it simplifies other profiler code (including DevTools).

        this.actualDuration = 0;
        this.actualStartTime = -1;
        this.selfBaseDuration = 0;
        this.treeBaseDuration = 0;
      } // This is normally DEV-only except www when it adds listeners.
      // TODO: remove the User Timing integration in favor of Root Events.


      if (enableUserTimingAPI) {
        this._debugID = debugCounter++;
        this._debugIsCurrentlyTiming = false;
      }

      {
        this._debugSource = null;
        this._debugOwner = null;
        this._debugNeedsRemount = false;
        this._debugHookTypes = null;

        if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {
          Object.preventExtensions(this);
        }
      }
    } // This is a constructor function, rather than a POJO constructor, still
    // please ensure we do the following:
    // 1) Nobody should add any instance methods on this. Instance methods can be
    //    more difficult to predict when they get optimized and they are almost
    //    never inlined properly in static compilers.
    // 2) Nobody should rely on `instanceof Fiber` for type testing. We should
    //    always know when it is a fiber.
    // 3) We might want to experiment with using numeric keys since they are easier
    //    to optimize in a non-JIT environment.
    // 4) We can easily go from a constructor to a createFiber object literal if that
    //    is faster.
    // 5) It should be easy to port this to a C struct and keep a C implementation
    //    compatible.


    var createFiber = function (tag, pendingProps, key, mode) {
      // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors
      return new FiberNode(tag, pendingProps, key, mode);
    };

    function shouldConstruct(Component) {
      var prototype = Component.prototype;
      return !!(prototype && prototype.isReactComponent);
    }

    function isSimpleFunctionComponent(type) {
      return typeof type === 'function' && !shouldConstruct(type) && type.defaultProps === undefined;
    }

    function resolveLazyComponentTag(Component) {
      if (typeof Component === 'function') {
        return shouldConstruct(Component) ? ClassComponent : FunctionComponent;
      } else if (Component !== undefined && Component !== null) {
        var $$typeof = Component.$$typeof;

        if ($$typeof === REACT_FORWARD_REF_TYPE) {
          return ForwardRef;
        }

        if ($$typeof === REACT_MEMO_TYPE) {
          return MemoComponent;
        }
      }

      return IndeterminateComponent;
    } // This is used to create an alternate fiber to do work on.


    function createWorkInProgress(current, pendingProps, expirationTime) {
      var workInProgress = current.alternate;

      if (workInProgress === null) {
        // We use a double buffering pooling technique because we know that we'll
        // only ever need at most two versions of a tree. We pool the "other" unused
        // node that we're free to reuse. This is lazily created to avoid allocating
        // extra objects for things that are never updated. It also allow us to
        // reclaim the extra memory if needed.
        workInProgress = createFiber(current.tag, pendingProps, current.key, current.mode);
        workInProgress.elementType = current.elementType;
        workInProgress.type = current.type;
        workInProgress.stateNode = current.stateNode;
        {
          // DEV-only fields
          workInProgress._debugID = current._debugID;
          workInProgress._debugSource = current._debugSource;
          workInProgress._debugOwner = current._debugOwner;
          workInProgress._debugHookTypes = current._debugHookTypes;
        }
        workInProgress.alternate = current;
        current.alternate = workInProgress;
      } else {
        workInProgress.pendingProps = pendingProps; // We already have an alternate.
        // Reset the effect tag.

        workInProgress.effectTag = NoEffect; // The effect list is no longer valid.

        workInProgress.nextEffect = null;
        workInProgress.firstEffect = null;
        workInProgress.lastEffect = null;

        if (enableProfilerTimer) {
          // We intentionally reset, rather than copy, actualDuration & actualStartTime.
          // This prevents time from endlessly accumulating in new commits.
          // This has the downside of resetting values for different priority renders,
          // But works for yielding (the common case) and should support resuming.
          workInProgress.actualDuration = 0;
          workInProgress.actualStartTime = -1;
        }
      }

      workInProgress.childExpirationTime = current.childExpirationTime;
      workInProgress.expirationTime = current.expirationTime;
      workInProgress.child = current.child;
      workInProgress.memoizedProps = current.memoizedProps;
      workInProgress.memoizedState = current.memoizedState;
      workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
      // it cannot be shared with the current fiber.

      var currentDependencies = current.dependencies;
      workInProgress.dependencies = currentDependencies === null ? null : {
        expirationTime: currentDependencies.expirationTime,
        firstContext: currentDependencies.firstContext,
        responders: currentDependencies.responders
      }; // These will be overridden during the parent's reconciliation

      workInProgress.sibling = current.sibling;
      workInProgress.index = current.index;
      workInProgress.ref = current.ref;

      if (enableProfilerTimer) {
        workInProgress.selfBaseDuration = current.selfBaseDuration;
        workInProgress.treeBaseDuration = current.treeBaseDuration;
      }

      {
        workInProgress._debugNeedsRemount = current._debugNeedsRemount;

        switch (workInProgress.tag) {
          case IndeterminateComponent:
          case FunctionComponent:
          case SimpleMemoComponent:
            workInProgress.type = resolveFunctionForHotReloading(current.type);
            break;

          case ClassComponent:
            workInProgress.type = resolveClassForHotReloading(current.type);
            break;

          case ForwardRef:
            workInProgress.type = resolveForwardRefForHotReloading(current.type);
            break;

          default:
            break;
        }
      }
      return workInProgress;
    } // Used to reuse a Fiber for a second pass.


    function resetWorkInProgress(workInProgress, renderExpirationTime) {
      // This resets the Fiber to what createFiber or createWorkInProgress would
      // have set the values to before during the first pass. Ideally this wouldn't
      // be necessary but unfortunately many code paths reads from the workInProgress
      // when they should be reading from current and writing to workInProgress.
      // We assume pendingProps, index, key, ref, return are still untouched to
      // avoid doing another reconciliation.
      // Reset the effect tag but keep any Placement tags, since that's something
      // that child fiber is setting, not the reconciliation.
      workInProgress.effectTag &= Placement; // The effect list is no longer valid.

      workInProgress.nextEffect = null;
      workInProgress.firstEffect = null;
      workInProgress.lastEffect = null;
      var current = workInProgress.alternate;

      if (current === null) {
        // Reset to createFiber's initial values.
        workInProgress.childExpirationTime = NoWork;
        workInProgress.expirationTime = renderExpirationTime;
        workInProgress.child = null;
        workInProgress.memoizedProps = null;
        workInProgress.memoizedState = null;
        workInProgress.updateQueue = null;
        workInProgress.dependencies = null;

        if (enableProfilerTimer) {
          // Note: We don't reset the actualTime counts. It's useful to accumulate
          // actual time across multiple render passes.
          workInProgress.selfBaseDuration = 0;
          workInProgress.treeBaseDuration = 0;
        }
      } else {
        // Reset to the cloned values that createWorkInProgress would've.
        workInProgress.childExpirationTime = current.childExpirationTime;
        workInProgress.expirationTime = current.expirationTime;
        workInProgress.child = current.child;
        workInProgress.memoizedProps = current.memoizedProps;
        workInProgress.memoizedState = current.memoizedState;
        workInProgress.updateQueue = current.updateQueue; // Clone the dependencies object. This is mutated during the render phase, so
        // it cannot be shared with the current fiber.

        var currentDependencies = current.dependencies;
        workInProgress.dependencies = currentDependencies === null ? null : {
          expirationTime: currentDependencies.expirationTime,
          firstContext: currentDependencies.firstContext,
          responders: currentDependencies.responders
        };

        if (enableProfilerTimer) {
          // Note: We don't reset the actualTime counts. It's useful to accumulate
          // actual time across multiple render passes.
          workInProgress.selfBaseDuration = current.selfBaseDuration;
          workInProgress.treeBaseDuration = current.treeBaseDuration;
        }
      }

      return workInProgress;
    }

    function createHostRootFiber(tag) {
      var mode;

      if (tag === ConcurrentRoot) {
        mode = ConcurrentMode | BlockingMode | StrictMode;
      } else if (tag === BlockingRoot) {
        mode = BlockingMode | StrictMode;
      } else {
        mode = NoMode;
      }

      if (enableProfilerTimer && isDevToolsPresent) {
        // Always collect profile timings when DevTools are present.
        // This enables DevTools to start capturing timing at any point–
        // Without some nodes in the tree having empty base times.
        mode |= ProfileMode;
      }

      return createFiber(HostRoot, null, null, mode);
    }

    function createFiberFromTypeAndProps(type, // React$ElementType
    key, pendingProps, owner, mode, expirationTime) {
      var fiber;
      var fiberTag = IndeterminateComponent; // The resolved type is set if we know what the final type will be. I.e. it's not lazy.

      var resolvedType = type;

      if (typeof type === 'function') {
        if (shouldConstruct(type)) {
          fiberTag = ClassComponent;
          {
            resolvedType = resolveClassForHotReloading(resolvedType);
          }
        } else {
          {
            resolvedType = resolveFunctionForHotReloading(resolvedType);
          }
        }
      } else if (typeof type === 'string') {
        fiberTag = HostComponent;
      } else {
        getTag: switch (type) {
          case REACT_FRAGMENT_TYPE:
            return createFiberFromFragment(pendingProps.children, mode, expirationTime, key);

          case REACT_CONCURRENT_MODE_TYPE:
            fiberTag = Mode;
            mode |= ConcurrentMode | BlockingMode | StrictMode;
            break;

          case REACT_STRICT_MODE_TYPE:
            fiberTag = Mode;
            mode |= StrictMode;
            break;

          case REACT_PROFILER_TYPE:
            return createFiberFromProfiler(pendingProps, mode, expirationTime, key);

          case REACT_SUSPENSE_TYPE:
            return createFiberFromSuspense(pendingProps, mode, expirationTime, key);

          case REACT_SUSPENSE_LIST_TYPE:
            return createFiberFromSuspenseList(pendingProps, mode, expirationTime, key);

          default:
            {
              if (typeof type === 'object' && type !== null) {
                switch (type.$$typeof) {
                  case REACT_PROVIDER_TYPE:
                    fiberTag = ContextProvider;
                    break getTag;

                  case REACT_CONTEXT_TYPE:
                    // This is a consumer
                    fiberTag = ContextConsumer;
                    break getTag;

                  case REACT_FORWARD_REF_TYPE:
                    fiberTag = ForwardRef;
                    {
                      resolvedType = resolveForwardRefForHotReloading(resolvedType);
                    }
                    break getTag;

                  case REACT_MEMO_TYPE:
                    fiberTag = MemoComponent;
                    break getTag;

                  case REACT_LAZY_TYPE:
                    fiberTag = LazyComponent;
                    resolvedType = null;
                    break getTag;

                  case REACT_FUNDAMENTAL_TYPE:
                    if (enableFundamentalAPI) {
                      return createFiberFromFundamental(type, pendingProps, mode, expirationTime, key);
                    }

                    break;

                  case REACT_SCOPE_TYPE:
                    if (enableScopeAPI) {
                      return createFiberFromScope(type, pendingProps, mode, expirationTime, key);
                    }

                }
              }

              var info = '';
              {
                if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
                  info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and " + 'named imports.';
                }

                var ownerName = owner ? getComponentName(owner.type) : null;

                if (ownerName) {
                  info += '\n\nCheck the render method of `' + ownerName + '`.';
                }
              }
              {
                {
                  throw Error("Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: " + (type == null ? type : typeof type) + "." + info);
                }
              }
            }
        }
      }

      fiber = createFiber(fiberTag, pendingProps, key, mode);
      fiber.elementType = type;
      fiber.type = resolvedType;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromElement(element, mode, expirationTime) {
      var owner = null;
      {
        owner = element._owner;
      }
      var type = element.type;
      var key = element.key;
      var pendingProps = element.props;
      var fiber = createFiberFromTypeAndProps(type, key, pendingProps, owner, mode, expirationTime);
      {
        fiber._debugSource = element._source;
        fiber._debugOwner = element._owner;
      }
      return fiber;
    }

    function createFiberFromFragment(elements, mode, expirationTime, key) {
      var fiber = createFiber(Fragment, elements, key, mode);
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromFundamental(fundamentalComponent, pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(FundamentalComponent, pendingProps, key, mode);
      fiber.elementType = fundamentalComponent;
      fiber.type = fundamentalComponent;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromScope(scope, pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(ScopeComponent, pendingProps, key, mode);
      fiber.type = scope;
      fiber.elementType = scope;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromProfiler(pendingProps, mode, expirationTime, key) {
      {
        if (typeof pendingProps.id !== 'string' || typeof pendingProps.onRender !== 'function') {
          warningWithoutStack$1(false, 'Profiler must specify an "id" string and "onRender" function as props');
        }
      }
      var fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode); // TODO: The Profiler fiber shouldn't have a type. It has a tag.

      fiber.elementType = REACT_PROFILER_TYPE;
      fiber.type = REACT_PROFILER_TYPE;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromSuspense(pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(SuspenseComponent, pendingProps, key, mode); // TODO: The SuspenseComponent fiber shouldn't have a type. It has a tag.
      // This needs to be fixed in getComponentName so that it relies on the tag
      // instead.

      fiber.type = REACT_SUSPENSE_TYPE;
      fiber.elementType = REACT_SUSPENSE_TYPE;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromSuspenseList(pendingProps, mode, expirationTime, key) {
      var fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);
      {
        // TODO: The SuspenseListComponent fiber shouldn't have a type. It has a tag.
        // This needs to be fixed in getComponentName so that it relies on the tag
        // instead.
        fiber.type = REACT_SUSPENSE_LIST_TYPE;
      }
      fiber.elementType = REACT_SUSPENSE_LIST_TYPE;
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromText(content, mode, expirationTime) {
      var fiber = createFiber(HostText, content, null, mode);
      fiber.expirationTime = expirationTime;
      return fiber;
    }

    function createFiberFromHostInstanceForDeletion() {
      var fiber = createFiber(HostComponent, null, null, NoMode); // TODO: These should not need a type.

      fiber.elementType = 'DELETED';
      fiber.type = 'DELETED';
      return fiber;
    }

    function createFiberFromDehydratedFragment(dehydratedNode) {
      var fiber = createFiber(DehydratedFragment, null, null, NoMode);
      fiber.stateNode = dehydratedNode;
      return fiber;
    }

    function createFiberFromPortal(portal, mode, expirationTime) {
      var pendingProps = portal.children !== null ? portal.children : [];
      var fiber = createFiber(HostPortal, pendingProps, portal.key, mode);
      fiber.expirationTime = expirationTime;
      fiber.stateNode = {
        containerInfo: portal.containerInfo,
        pendingChildren: null,
        // Used by persistent updates
        implementation: portal.implementation
      };
      return fiber;
    } // Used for stashing WIP properties to replay failed work in DEV.


    function assignFiberPropertiesInDEV(target, source) {
      if (target === null) {
        // This Fiber's initial properties will always be overwritten.
        // We only use a Fiber to ensure the same hidden class so DEV isn't slow.
        target = createFiber(IndeterminateComponent, null, null, NoMode);
      } // This is intentionally written as a list of all properties.
      // We tried to use Object.assign() instead but this is called in
      // the hottest path, and Object.assign() was too slow:
      // https://github.com/facebook/react/issues/12502
      // This code is DEV-only so size is not a concern.


      target.tag = source.tag;
      target.key = source.key;
      target.elementType = source.elementType;
      target.type = source.type;
      target.stateNode = source.stateNode;
      target.return = source.return;
      target.child = source.child;
      target.sibling = source.sibling;
      target.index = source.index;
      target.ref = source.ref;
      target.pendingProps = source.pendingProps;
      target.memoizedProps = source.memoizedProps;
      target.updateQueue = source.updateQueue;
      target.memoizedState = source.memoizedState;
      target.dependencies = source.dependencies;
      target.mode = source.mode;
      target.effectTag = source.effectTag;
      target.nextEffect = source.nextEffect;
      target.firstEffect = source.firstEffect;
      target.lastEffect = source.lastEffect;
      target.expirationTime = source.expirationTime;
      target.childExpirationTime = source.childExpirationTime;
      target.alternate = source.alternate;

      if (enableProfilerTimer) {
        target.actualDuration = source.actualDuration;
        target.actualStartTime = source.actualStartTime;
        target.selfBaseDuration = source.selfBaseDuration;
        target.treeBaseDuration = source.treeBaseDuration;
      }

      target._debugID = source._debugID;
      target._debugSource = source._debugSource;
      target._debugOwner = source._debugOwner;
      target._debugIsCurrentlyTiming = source._debugIsCurrentlyTiming;
      target._debugNeedsRemount = source._debugNeedsRemount;
      target._debugHookTypes = source._debugHookTypes;
      return target;
    }

    function FiberRootNode(containerInfo, tag, hydrate) {
      this.tag = tag;
      this.current = null;
      this.containerInfo = containerInfo;
      this.pendingChildren = null;
      this.pingCache = null;
      this.finishedExpirationTime = NoWork;
      this.finishedWork = null;
      this.timeoutHandle = noTimeout;
      this.context = null;
      this.pendingContext = null;
      this.hydrate = hydrate;
      this.callbackNode = null;
      this.callbackPriority = NoPriority;
      this.firstPendingTime = NoWork;
      this.firstSuspendedTime = NoWork;
      this.lastSuspendedTime = NoWork;
      this.nextKnownPendingLevel = NoWork;
      this.lastPingedTime = NoWork;
      this.lastExpiredTime = NoWork;

      if (enableSchedulerTracing) {
        this.interactionThreadID = tracing.unstable_getThreadID();
        this.memoizedInteractions = new Set();
        this.pendingInteractionMap = new Map();
      }

      if (enableSuspenseCallback) {
        this.hydrationCallbacks = null;
      }
    }

    function createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks) {
      var root = new FiberRootNode(containerInfo, tag, hydrate);

      if (enableSuspenseCallback) {
        root.hydrationCallbacks = hydrationCallbacks;
      } // Cyclic construction. This cheats the type system right now because
      // stateNode is any.


      var uninitializedFiber = createHostRootFiber(tag);
      root.current = uninitializedFiber;
      uninitializedFiber.stateNode = root;
      return root;
    }

    function isRootSuspendedAtTime(root, expirationTime) {
      var firstSuspendedTime = root.firstSuspendedTime;
      var lastSuspendedTime = root.lastSuspendedTime;
      return firstSuspendedTime !== NoWork && firstSuspendedTime >= expirationTime && lastSuspendedTime <= expirationTime;
    }

    function markRootSuspendedAtTime(root, expirationTime) {
      var firstSuspendedTime = root.firstSuspendedTime;
      var lastSuspendedTime = root.lastSuspendedTime;

      if (firstSuspendedTime < expirationTime) {
        root.firstSuspendedTime = expirationTime;
      }

      if (lastSuspendedTime > expirationTime || firstSuspendedTime === NoWork) {
        root.lastSuspendedTime = expirationTime;
      }

      if (expirationTime <= root.lastPingedTime) {
        root.lastPingedTime = NoWork;
      }

      if (expirationTime <= root.lastExpiredTime) {
        root.lastExpiredTime = NoWork;
      }
    }

    function markRootUpdatedAtTime(root, expirationTime) {
      // Update the range of pending times
      var firstPendingTime = root.firstPendingTime;

      if (expirationTime > firstPendingTime) {
        root.firstPendingTime = expirationTime;
      } // Update the range of suspended times. Treat everything lower priority or
      // equal to this update as unsuspended.


      var firstSuspendedTime = root.firstSuspendedTime;

      if (firstSuspendedTime !== NoWork) {
        if (expirationTime >= firstSuspendedTime) {
          // The entire suspended range is now unsuspended.
          root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
        } else if (expirationTime >= root.lastSuspendedTime) {
          root.lastSuspendedTime = expirationTime + 1;
        } // This is a pending level. Check if it's higher priority than the next
        // known pending level.


        if (expirationTime > root.nextKnownPendingLevel) {
          root.nextKnownPendingLevel = expirationTime;
        }
      }
    }

    function markRootFinishedAtTime(root, finishedExpirationTime, remainingExpirationTime) {
      // Update the range of pending times
      root.firstPendingTime = remainingExpirationTime; // Update the range of suspended times. Treat everything higher priority or
      // equal to this update as unsuspended.

      if (finishedExpirationTime <= root.lastSuspendedTime) {
        // The entire suspended range is now unsuspended.
        root.firstSuspendedTime = root.lastSuspendedTime = root.nextKnownPendingLevel = NoWork;
      } else if (finishedExpirationTime <= root.firstSuspendedTime) {
        // Part of the suspended range is now unsuspended. Narrow the range to
        // include everything between the unsuspended time (non-inclusive) and the
        // last suspended time.
        root.firstSuspendedTime = finishedExpirationTime - 1;
      }

      if (finishedExpirationTime <= root.lastPingedTime) {
        // Clear the pinged time
        root.lastPingedTime = NoWork;
      }

      if (finishedExpirationTime <= root.lastExpiredTime) {
        // Clear the expired time
        root.lastExpiredTime = NoWork;
      }
    }

    function markRootExpiredAtTime(root, expirationTime) {
      var lastExpiredTime = root.lastExpiredTime;

      if (lastExpiredTime === NoWork || lastExpiredTime > expirationTime) {
        root.lastExpiredTime = expirationTime;
      }
    } // This lets us hook into Fiber to debug what it's doing.
    // See https://github.com/facebook/react/pull/8033.
    // This is not part of the public API, not even for React DevTools.
    // You may only inject a debugTool if you work on React Fiber itself.


    var ReactFiberInstrumentation = {
      debugTool: null
    };
    var ReactFiberInstrumentation_1 = ReactFiberInstrumentation;
    var didWarnAboutNestedUpdates;
    var didWarnAboutFindNodeInStrictMode;
    {
      didWarnAboutNestedUpdates = false;
      didWarnAboutFindNodeInStrictMode = {};
    }

    function getContextForSubtree(parentComponent) {
      if (!parentComponent) {
        return emptyContextObject;
      }

      var fiber = get(parentComponent);
      var parentContext = findCurrentUnmaskedContext(fiber);

      if (fiber.tag === ClassComponent) {
        var Component = fiber.type;

        if (isContextProvider(Component)) {
          return processChildContext(fiber, Component, parentContext);
        }
      }

      return parentContext;
    }

    function findHostInstance(component) {
      var fiber = get(component);

      if (fiber === undefined) {
        if (typeof component.render === 'function') {
          {
            {
              throw Error("Unable to find node on an unmounted component.");
            }
          }
        } else {
          {
            {
              throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
            }
          }
        }
      }

      var hostFiber = findCurrentHostFiber(fiber);

      if (hostFiber === null) {
        return null;
      }

      return hostFiber.stateNode;
    }

    function findHostInstanceWithWarning(component, methodName) {
      {
        var fiber = get(component);

        if (fiber === undefined) {
          if (typeof component.render === 'function') {
            {
              {
                throw Error("Unable to find node on an unmounted component.");
              }
            }
          } else {
            {
              {
                throw Error("Argument appears to not be a ReactComponent. Keys: " + Object.keys(component));
              }
            }
          }
        }

        var hostFiber = findCurrentHostFiber(fiber);

        if (hostFiber === null) {
          return null;
        }

        if (hostFiber.mode & StrictMode) {
          var componentName = getComponentName(fiber.type) || 'Component';

          if (!didWarnAboutFindNodeInStrictMode[componentName]) {
            didWarnAboutFindNodeInStrictMode[componentName] = true;

            if (fiber.mode & StrictMode) {
              warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which is inside StrictMode. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
            } else {
              warningWithoutStack$1(false, '%s is deprecated in StrictMode. ' + '%s was passed an instance of %s which renders StrictMode children. ' + 'Instead, add a ref directly to the element you want to reference. ' + 'Learn more about using refs safely here: ' + 'https://fb.me/react-strict-mode-find-node%s', methodName, methodName, componentName, getStackByFiberInDevAndProd(hostFiber));
            }
          }
        }

        return hostFiber.stateNode;
      }
      return findHostInstance(component);
    }

    function createContainer(containerInfo, tag, hydrate, hydrationCallbacks) {
      return createFiberRoot(containerInfo, tag, hydrate, hydrationCallbacks);
    }

    function updateContainer(element, container, parentComponent, callback) {
      var current$$1 = container.current;
      var currentTime = requestCurrentTimeForUpdate();
      {
        // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests
        if ('undefined' !== typeof jest) {
          warnIfUnmockedScheduler(current$$1);
          warnIfNotScopedWithMatchingAct(current$$1);
        }
      }
      var suspenseConfig = requestCurrentSuspenseConfig();
      var expirationTime = computeExpirationForFiber(currentTime, current$$1, suspenseConfig);
      {
        if (ReactFiberInstrumentation_1.debugTool) {
          if (current$$1.alternate === null) {
            ReactFiberInstrumentation_1.debugTool.onMountContainer(container);
          } else if (element === null) {
            ReactFiberInstrumentation_1.debugTool.onUnmountContainer(container);
          } else {
            ReactFiberInstrumentation_1.debugTool.onUpdateContainer(container);
          }
        }
      }
      var context = getContextForSubtree(parentComponent);

      if (container.context === null) {
        container.context = context;
      } else {
        container.pendingContext = context;
      }

      {
        if (phase === 'render' && current !== null && !didWarnAboutNestedUpdates) {
          didWarnAboutNestedUpdates = true;
          warningWithoutStack$1(false, 'Render methods should be a pure function of props and state; ' + 'triggering nested component updates from render is not allowed. ' + 'If necessary, trigger nested updates in componentDidUpdate.\n\n' + 'Check the render method of %s.', getComponentName(current.type) || 'Unknown');
        }
      }
      var update = createUpdate(expirationTime, suspenseConfig); // Caution: React DevTools currently depends on this property
      // being called "element".

      update.payload = {
        element: element
      };
      callback = callback === undefined ? null : callback;

      if (callback !== null) {
        !(typeof callback === 'function') ? warningWithoutStack$1(false, 'render(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callback) : void 0;
        update.callback = callback;
      }

      enqueueUpdate(current$$1, update);
      scheduleWork(current$$1, expirationTime);
      return expirationTime;
    }

    function getPublicRootInstance(container) {
      var containerFiber = container.current;

      if (!containerFiber.child) {
        return null;
      }

      switch (containerFiber.child.tag) {
        case HostComponent:
          return getPublicInstance(containerFiber.child.stateNode);

        default:
          return containerFiber.child.stateNode;
      }
    }

    function attemptSynchronousHydration$1(fiber) {
      switch (fiber.tag) {
        case HostRoot:
          var root = fiber.stateNode;

          if (root.hydrate) {
            // Flush the first scheduled "update".
            flushRoot(root, root.firstPendingTime);
          }

          break;

        case SuspenseComponent:
          flushSync(function () {
            return scheduleWork(fiber, Sync);
          }); // If we're still blocked after this, we need to increase
          // the priority of any promises resolving within this
          // boundary so that they next attempt also has higher pri.

          var retryExpTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
          markRetryTimeIfNotHydrated(fiber, retryExpTime);
          break;
      }
    }

    function markRetryTimeImpl(fiber, retryTime) {
      var suspenseState = fiber.memoizedState;

      if (suspenseState !== null && suspenseState.dehydrated !== null) {
        if (suspenseState.retryTime < retryTime) {
          suspenseState.retryTime = retryTime;
        }
      }
    } // Increases the priority of thennables when they resolve within this boundary.


    function markRetryTimeIfNotHydrated(fiber, retryTime) {
      markRetryTimeImpl(fiber, retryTime);
      var alternate = fiber.alternate;

      if (alternate) {
        markRetryTimeImpl(alternate, retryTime);
      }
    }

    function attemptUserBlockingHydration$1(fiber) {
      if (fiber.tag !== SuspenseComponent) {
        // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
      }

      var expTime = computeInteractiveExpiration(requestCurrentTimeForUpdate());
      scheduleWork(fiber, expTime);
      markRetryTimeIfNotHydrated(fiber, expTime);
    }

    function attemptContinuousHydration$1(fiber) {
      if (fiber.tag !== SuspenseComponent) {
        // We ignore HostRoots here because we can't increase
        // their priority and they should not suspend on I/O,
        // since you have to wrap anything that might suspend in
        // Suspense.
        return;
      }

      var expTime = computeContinuousHydrationExpiration(requestCurrentTimeForUpdate());
      scheduleWork(fiber, expTime);
      markRetryTimeIfNotHydrated(fiber, expTime);
    }

    function attemptHydrationAtCurrentPriority$1(fiber) {
      if (fiber.tag !== SuspenseComponent) {
        // We ignore HostRoots here because we can't increase
        // their priority other than synchronously flush it.
        return;
      }

      var currentTime = requestCurrentTimeForUpdate();
      var expTime = computeExpirationForFiber(currentTime, fiber, null);
      scheduleWork(fiber, expTime);
      markRetryTimeIfNotHydrated(fiber, expTime);
    }

    function findHostInstanceWithNoPortals(fiber) {
      var hostFiber = findCurrentHostFiberWithNoPortals(fiber);

      if (hostFiber === null) {
        return null;
      }

      if (hostFiber.tag === FundamentalComponent) {
        return hostFiber.stateNode.instance;
      }

      return hostFiber.stateNode;
    }

    var shouldSuspendImpl = function (fiber) {
      return false;
    };

    function shouldSuspend(fiber) {
      return shouldSuspendImpl(fiber);
    }

    var overrideHookState = null;
    var overrideProps = null;
    var scheduleUpdate = null;
    var setSuspenseHandler = null;
    {
      var copyWithSetImpl = function (obj, path, idx, value) {
        if (idx >= path.length) {
          return value;
        }

        var key = path[idx];
        var updated = Array.isArray(obj) ? obj.slice() : _assign({}, obj); // $FlowFixMe number or string is fine here

        updated[key] = copyWithSetImpl(obj[key], path, idx + 1, value);
        return updated;
      };

      var copyWithSet = function (obj, path, value) {
        return copyWithSetImpl(obj, path, 0, value);
      }; // Support DevTools editable values for useState and useReducer.


      overrideHookState = function (fiber, id, path, value) {
        // For now, the "id" of stateful hooks is just the stateful hook index.
        // This may change in the future with e.g. nested hooks.
        var currentHook = fiber.memoizedState;

        while (currentHook !== null && id > 0) {
          currentHook = currentHook.next;
          id--;
        }

        if (currentHook !== null) {
          var newState = copyWithSet(currentHook.memoizedState, path, value);
          currentHook.memoizedState = newState;
          currentHook.baseState = newState; // We aren't actually adding an update to the queue,
          // because there is no update we can add for useReducer hooks that won't trigger an error.
          // (There's no appropriate action type for DevTools overrides.)
          // As a result though, React will see the scheduled update as a noop and bailout.
          // Shallow cloning props works as a workaround for now to bypass the bailout check.

          fiber.memoizedProps = _assign({}, fiber.memoizedProps);
          scheduleWork(fiber, Sync);
        }
      }; // Support DevTools props for function components, forwardRef, memo, host components, etc.


      overrideProps = function (fiber, path, value) {
        fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);

        if (fiber.alternate) {
          fiber.alternate.pendingProps = fiber.pendingProps;
        }

        scheduleWork(fiber, Sync);
      };

      scheduleUpdate = function (fiber) {
        scheduleWork(fiber, Sync);
      };

      setSuspenseHandler = function (newShouldSuspendImpl) {
        shouldSuspendImpl = newShouldSuspendImpl;
      };
    }

    function injectIntoDevTools(devToolsConfig) {
      var findFiberByHostInstance = devToolsConfig.findFiberByHostInstance;
      var ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;
      return injectInternals(_assign({}, devToolsConfig, {
        overrideHookState: overrideHookState,
        overrideProps: overrideProps,
        setSuspenseHandler: setSuspenseHandler,
        scheduleUpdate: scheduleUpdate,
        currentDispatcherRef: ReactCurrentDispatcher,
        findHostInstanceByFiber: function (fiber) {
          var hostFiber = findCurrentHostFiber(fiber);

          if (hostFiber === null) {
            return null;
          }

          return hostFiber.stateNode;
        },
        findFiberByHostInstance: function (instance) {
          if (!findFiberByHostInstance) {
            // Might not be implemented by the renderer.
            return null;
          }

          return findFiberByHostInstance(instance);
        },
        // React Refresh
        findHostInstancesForRefresh: findHostInstancesForRefresh,
        scheduleRefresh: scheduleRefresh,
        scheduleRoot: scheduleRoot,
        setRefreshHandler: setRefreshHandler,
        // Enables DevTools to append owner stacks to error messages in DEV mode.
        getCurrentFiber: function () {
          return current;
        }
      }));
    } // This file intentionally does *not* have the Flow annotation.
    // Don't add it. See `./inline-typed.js` for an explanation.
    // TODO: This type is shared between the reconciler and ReactDOM, but will
    // eventually be lifted out to the renderer.


    function ReactDOMRoot(container, options) {
      this._internalRoot = createRootImpl(container, ConcurrentRoot, options);
    }

    function ReactDOMBlockingRoot(container, tag, options) {
      this._internalRoot = createRootImpl(container, tag, options);
    }

    ReactDOMRoot.prototype.render = ReactDOMBlockingRoot.prototype.render = function (children, callback) {
      var root = this._internalRoot;
      var cb = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(cb, 'render');
      }
      updateContainer(children, root, null, cb);
    };

    ReactDOMRoot.prototype.unmount = ReactDOMBlockingRoot.prototype.unmount = function (callback) {
      var root = this._internalRoot;
      var cb = callback === undefined ? null : callback;
      {
        warnOnInvalidCallback(cb, 'render');
      }
      var container = root.containerInfo;
      updateContainer(null, root, null, function () {
        unmarkContainerAsRoot(container);

        if (cb !== null) {
          cb();
        }
      });
    };

    function createRootImpl(container, tag, options) {
      // Tag is either LegacyRoot or Concurrent Root
      var hydrate = options != null && options.hydrate === true;
      var hydrationCallbacks = options != null && options.hydrationOptions || null;
      var root = createContainer(container, tag, hydrate, hydrationCallbacks);
      markContainerAsRoot(root.current, container);

      if (hydrate && tag !== LegacyRoot) {
        var doc = container.nodeType === DOCUMENT_NODE ? container : container.ownerDocument;
        eagerlyTrapReplayableEvents(doc);
      }

      return root;
    }

    function createRoot(container, options) {
      if (!isValidContainer(container)) {
        {
          throw Error("createRoot(...): Target container is not a DOM element.");
        }
      }

      warnIfReactDOMContainerInDEV(container);
      return new ReactDOMRoot(container, options);
    }

    function createBlockingRoot(container, options) {
      if (!isValidContainer(container)) {
        {
          throw Error("createRoot(...): Target container is not a DOM element.");
        }
      }

      warnIfReactDOMContainerInDEV(container);
      return new ReactDOMBlockingRoot(container, BlockingRoot, options);
    }

    function createLegacyRoot(container, options) {
      return new ReactDOMBlockingRoot(container, LegacyRoot, options);
    }

    function isValidContainer(node) {
      return !!(node && (node.nodeType === ELEMENT_NODE || node.nodeType === DOCUMENT_NODE || node.nodeType === DOCUMENT_FRAGMENT_NODE || node.nodeType === COMMENT_NODE && node.nodeValue === ' react-mount-point-unstable '));
    }

    function warnOnInvalidCallback(callback, callerName) {
      {
        !(callback === null || typeof callback === 'function') ? warningWithoutStack$1(false, '%s(...): Expected the last optional `callback` argument to be a ' + 'function. Instead received: %s.', callerName, callback) : void 0;
      }
    }

    function warnIfReactDOMContainerInDEV(container) {
      {
        if (isContainerMarkedAsRoot(container)) {
          if (container._reactRootContainer) {
            warningWithoutStack$1(false, 'You are calling ReactDOM.createRoot() on a container that was previously ' + 'passed to ReactDOM.render(). This is not supported.');
          } else {
            warningWithoutStack$1(false, 'You are calling ReactDOM.createRoot() on a container that ' + 'has already been passed to createRoot() before. Instead, call ' + 'root.render() on the existing root instead if you want to update it.');
          }
        }
      }
    }

    var ReactCurrentOwner$1 = ReactSharedInternals.ReactCurrentOwner;
    var topLevelUpdateWarnings;
    var warnedAboutHydrateAPI = false;
    {
      topLevelUpdateWarnings = function (container) {
        if (container._reactRootContainer && container.nodeType !== COMMENT_NODE) {
          var hostInstance = findHostInstanceWithNoPortals(container._reactRootContainer._internalRoot.current);

          if (hostInstance) {
            !(hostInstance.parentNode === container) ? warningWithoutStack$1(false, 'render(...): It looks like the React-rendered content of this ' + 'container was removed without using React. This is not ' + 'supported and will cause errors. Instead, call ' + 'ReactDOM.unmountComponentAtNode to empty a container.') : void 0;
          }
        }

        var isRootRenderedBySomeReact = !!container._reactRootContainer;
        var rootEl = getReactRootElementInContainer(container);
        var hasNonRootReactChild = !!(rootEl && getInstanceFromNode$1(rootEl));
        !(!hasNonRootReactChild || isRootRenderedBySomeReact) ? warningWithoutStack$1(false, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : void 0;
        !(container.nodeType !== ELEMENT_NODE || !container.tagName || container.tagName.toUpperCase() !== 'BODY') ? warningWithoutStack$1(false, 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : void 0;
      };
    }

    function getReactRootElementInContainer(container) {
      if (!container) {
        return null;
      }

      if (container.nodeType === DOCUMENT_NODE) {
        return container.documentElement;
      } else {
        return container.firstChild;
      }
    }

    function shouldHydrateDueToLegacyHeuristic(container) {
      var rootElement = getReactRootElementInContainer(container);
      return !!(rootElement && rootElement.nodeType === ELEMENT_NODE && rootElement.hasAttribute(ROOT_ATTRIBUTE_NAME));
    }

    function legacyCreateRootFromDOMContainer(container, forceHydrate) {
      var shouldHydrate = forceHydrate || shouldHydrateDueToLegacyHeuristic(container); // First clear any existing content.

      if (!shouldHydrate) {
        var warned = false;
        var rootSibling;

        while (rootSibling = container.lastChild) {
          {
            if (!warned && rootSibling.nodeType === ELEMENT_NODE && rootSibling.hasAttribute(ROOT_ATTRIBUTE_NAME)) {
              warned = true;
              warningWithoutStack$1(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.');
            }
          }
          container.removeChild(rootSibling);
        }
      }

      {
        if (shouldHydrate && !forceHydrate && !warnedAboutHydrateAPI) {
          warnedAboutHydrateAPI = true;
          lowPriorityWarningWithoutStack$1(false, 'render(): Calling ReactDOM.render() to hydrate server-rendered markup ' + 'will stop working in React v17. Replace the ReactDOM.render() call ' + 'with ReactDOM.hydrate() if you want React to attach to the server HTML.');
        }
      }
      return createLegacyRoot(container, shouldHydrate ? {
        hydrate: true
      } : undefined);
    }

    function legacyRenderSubtreeIntoContainer(parentComponent, children, container, forceHydrate, callback) {
      {
        topLevelUpdateWarnings(container);
        warnOnInvalidCallback(callback === undefined ? null : callback, 'render');
      } // TODO: Without `any` type, Flow says "Property cannot be accessed on any
      // member of intersection type." Whyyyyyy.

      var root = container._reactRootContainer;
      var fiberRoot;

      if (!root) {
        // Initial mount
        root = container._reactRootContainer = legacyCreateRootFromDOMContainer(container, forceHydrate);
        fiberRoot = root._internalRoot;

        if (typeof callback === 'function') {
          var originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(fiberRoot);
            originalCallback.call(instance);
          };
        } // Initial mount should not be batched.


        unbatchedUpdates(function () {
          updateContainer(children, fiberRoot, parentComponent, callback);
        });
      } else {
        fiberRoot = root._internalRoot;

        if (typeof callback === 'function') {
          var _originalCallback = callback;

          callback = function () {
            var instance = getPublicRootInstance(fiberRoot);

            _originalCallback.call(instance);
          };
        } // Update


        updateContainer(children, fiberRoot, parentComponent, callback);
      }

      return getPublicRootInstance(fiberRoot);
    }

    function findDOMNode(componentOrElement) {
      {
        var owner = ReactCurrentOwner$1.current;

        if (owner !== null && owner.stateNode !== null) {
          var warnedAboutRefsInRender = owner.stateNode._warnedAboutRefsInRender;
          !warnedAboutRefsInRender ? warningWithoutStack$1(false, '%s is accessing findDOMNode inside its render(). ' + 'render() should be a pure function of props and state. It should ' + 'never access something that requires stale data from the previous ' + 'render, such as refs. Move this logic to componentDidMount and ' + 'componentDidUpdate instead.', getComponentName(owner.type) || 'A component') : void 0;
          owner.stateNode._warnedAboutRefsInRender = true;
        }
      }

      if (componentOrElement == null) {
        return null;
      }

      if (componentOrElement.nodeType === ELEMENT_NODE) {
        return componentOrElement;
      }

      {
        return findHostInstanceWithWarning(componentOrElement, 'findDOMNode');
      }
      return findHostInstance(componentOrElement);
    }

    function hydrate(element, container, callback) {
      if (!isValidContainer(container)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      }

      {
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

        if (isModernRoot) {
          warningWithoutStack$1(false, 'You are calling ReactDOM.hydrate() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call createRoot(container, {hydrate: true}).render(element)?');
        }
      } // TODO: throw or warn if we couldn't hydrate?

      return legacyRenderSubtreeIntoContainer(null, element, container, true, callback);
    }

    function render(element, container, callback) {
      if (!isValidContainer(container)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      }

      {
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

        if (isModernRoot) {
          warningWithoutStack$1(false, 'You are calling ReactDOM.render() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. ' + 'Did you mean to call root.render(element)?');
        }
      }
      return legacyRenderSubtreeIntoContainer(null, element, container, false, callback);
    }

    function unstable_renderSubtreeIntoContainer(parentComponent, element, containerNode, callback) {
      if (!isValidContainer(containerNode)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      }

      if (!(parentComponent != null && has(parentComponent))) {
        {
          throw Error("parentComponent must be a valid React Component");
        }
      }

      return legacyRenderSubtreeIntoContainer(parentComponent, element, containerNode, false, callback);
    }

    function unmountComponentAtNode(container) {
      if (!isValidContainer(container)) {
        {
          throw Error("unmountComponentAtNode(...): Target container is not a DOM element.");
        }
      }

      {
        var isModernRoot = isContainerMarkedAsRoot(container) && container._reactRootContainer === undefined;

        if (isModernRoot) {
          warningWithoutStack$1(false, 'You are calling ReactDOM.unmountComponentAtNode() on a container that was previously ' + 'passed to ReactDOM.createRoot(). This is not supported. Did you mean to call root.unmount()?');
        }
      }

      if (container._reactRootContainer) {
        {
          var rootEl = getReactRootElementInContainer(container);
          var renderedByDifferentReact = rootEl && !getInstanceFromNode$1(rootEl);
          !!renderedByDifferentReact ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by another copy of React.') : void 0;
        } // Unmount should not be batched.

        unbatchedUpdates(function () {
          legacyRenderSubtreeIntoContainer(null, null, container, false, function () {
            container._reactRootContainer = null;
            unmarkContainerAsRoot(container);
          });
        }); // If you call unmountComponentAtNode twice in quick succession, you'll
        // get `true` twice. That's probably fine?

        return true;
      } else {
        {
          var _rootEl = getReactRootElementInContainer(container);

          var hasNonRootReactChild = !!(_rootEl && getInstanceFromNode$1(_rootEl)); // Check if the container itself is a React root node.

          var isContainerReactRoot = container.nodeType === ELEMENT_NODE && isValidContainer(container.parentNode) && !!container.parentNode._reactRootContainer;
          !!hasNonRootReactChild ? warningWithoutStack$1(false, "unmountComponentAtNode(): The node you're attempting to unmount " + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : void 0;
        }
        return false;
      }
    }

    function createPortal$1(children, containerInfo, // TODO: figure out the API for cross-renderer implementation.
    implementation) {
      var key = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;
      return {
        // This tag allow us to uniquely identify this as a React Portal
        $$typeof: REACT_PORTAL_TYPE,
        key: key == null ? null : '' + key,
        children: children,
        containerInfo: containerInfo,
        implementation: implementation
      };
    } // TODO: this is special because it gets imported during build.


    var ReactVersion = '16.12.0';
    setAttemptSynchronousHydration(attemptSynchronousHydration$1);
    setAttemptUserBlockingHydration(attemptUserBlockingHydration$1);
    setAttemptContinuousHydration(attemptContinuousHydration$1);
    setAttemptHydrationAtCurrentPriority(attemptHydrationAtCurrentPriority$1);
    var didWarnAboutUnstableCreatePortal = false;
    {
      if (typeof Map !== 'function' || // $FlowIssue Flow incorrectly thinks Map has no prototype
      Map.prototype == null || typeof Map.prototype.forEach !== 'function' || typeof Set !== 'function' || // $FlowIssue Flow incorrectly thinks Set has no prototype
      Set.prototype == null || typeof Set.prototype.clear !== 'function' || typeof Set.prototype.forEach !== 'function') {
        warningWithoutStack$1(false, 'React depends on Map and Set built-in types. Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
      }
    }
    setRestoreImplementation(restoreControlledState$$1);
    setBatchingImplementation(batchedUpdates$1, discreteUpdates$1, flushDiscreteUpdates, batchedEventUpdates$1);

    function createPortal$$1(children, container) {
      var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;

      if (!isValidContainer(container)) {
        {
          throw Error("Target container is not a DOM element.");
        }
      } // TODO: pass ReactDOM portal implementation as third argument


      return createPortal$1(children, container, null, key);
    }

    var ReactDOM = {
      createPortal: createPortal$$1,
      // Legacy
      findDOMNode: findDOMNode,
      hydrate: hydrate,
      render: render,
      unstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,
      unmountComponentAtNode: unmountComponentAtNode,
      // Temporary alias since we already shipped React 16 RC with it.
      // TODO: remove in React 17.
      unstable_createPortal: function () {
        if (!didWarnAboutUnstableCreatePortal) {
          didWarnAboutUnstableCreatePortal = true;
          lowPriorityWarningWithoutStack$1(false, 'The ReactDOM.unstable_createPortal() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactDOM.createPortal() instead. It has the exact same API, ' + 'but without the "unstable_" prefix.');
        }

        return createPortal$$1.apply(void 0, arguments);
      },
      unstable_batchedUpdates: batchedUpdates$1,
      flushSync: flushSync,
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
        // Keep in sync with ReactDOMUnstableNativeDependencies.js
        // ReactTestUtils.js, and ReactTestUtilsAct.js. This is an array for better minification.
        Events: [getInstanceFromNode$1, getNodeFromInstance$1, getFiberCurrentPropsFromNode$1, injection.injectEventPluginsByName, eventNameDispatchConfigs, accumulateTwoPhaseDispatches, accumulateDirectDispatches, enqueueStateRestore, restoreStateIfNeeded, dispatchEvent, runEventsInBatch, flushPassiveEffects, IsThisRendererActing]
      }
    };

    if (exposeConcurrentModeAPIs) {
      ReactDOM.createRoot = createRoot;
      ReactDOM.createBlockingRoot = createBlockingRoot;
      ReactDOM.unstable_discreteUpdates = discreteUpdates$1;
      ReactDOM.unstable_flushDiscreteUpdates = flushDiscreteUpdates;
      ReactDOM.unstable_flushControlled = flushControlled;

      ReactDOM.unstable_scheduleHydration = function (target) {
        if (target) {
          queueExplicitHydrationTarget(target);
        }
      };
    }

    var foundDevTools = injectIntoDevTools({
      findFiberByHostInstance: getClosestInstanceFromNode,
      bundleType: 1,
      version: ReactVersion,
      rendererPackageName: 'react-dom'
    });
    {
      if (!foundDevTools && canUseDOM && window.top === window.self) {
        // If we're in Chrome or Firefox, provide a download link if not installed.
        if (navigator.userAgent.indexOf('Chrome') > -1 && navigator.userAgent.indexOf('Edge') === -1 || navigator.userAgent.indexOf('Firefox') > -1) {
          var protocol = window.location.protocol; // Don't warn in exotic cases like chrome-extension://.

          if (/^(https?|file):$/.test(protocol)) {
            console.info('%cDownload the React DevTools ' + 'for a better development experience: ' + 'https://fb.me/react-devtools' + (protocol === 'file:' ? '\nYou might need to use a local HTTP server (instead of file://): ' + 'https://fb.me/react-devtools-faq' : ''), 'font-weight:bold');
          }
        }
      }
    }
    var ReactDOM$2 = Object.freeze({
      default: ReactDOM
    });
    var ReactDOM$3 = ReactDOM$2 && ReactDOM || ReactDOM$2; // TODO: decide on the top-level export form.
    // This is hacky but makes it work with both Rollup and Jest.

    var reactDom = ReactDOM$3.default || ReactDOM$3;
    module.exports = reactDom;
  })();
}

/***/ }),

/***/ "./node_modules/react-dom/index.js":
/*!*****************************************!*\
  !*** ./node_modules/react-dom/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function checkDCE() {
  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */
  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {
    return;
  }

  if (true) {
    // This branch is unreachable because this function is only called
    // in production, but the condition is true only in development.
    // Therefore if the branch is still here, dead code elimination wasn't
    // properly applied.
    // Don't change the message. React DevTools relies on it. Also make sure
    // this message doesn't occur elsewhere in this function, or it will cause
    // a false positive.
    throw new Error('^_^');
  }

  try {
    // Verify that the code above has been dead code eliminated (DCE'd).
    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
  } catch (err) {
    // DevTools shouldn't crash React, no matter what.
    // We should still report in case we break this code.
    console.error(err);
  }
}

if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react-dom.development.js */ "./node_modules/react-dom/cjs/react-dom.development.js");
}

/***/ }),

/***/ "./node_modules/react-error-overlay/lib/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/react-error-overlay/lib/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {!function (e, t) {
   true ? module.exports = t() : undefined;
}(window, function () {
  return function (e) {
    var t = {};

    function n(r) {
      if (t[r]) return t[r].exports;
      var u = t[r] = {
        i: r,
        l: !1,
        exports: {}
      };
      return e[r].call(u.exports, u, u.exports, n), u.l = !0, u.exports;
    }

    return n.m = e, n.c = t, n.d = function (e, t, r) {
      n.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: r
      });
    }, n.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, n.t = function (e, t) {
      if (1 & t && (e = n(e)), 8 & t) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var r = Object.create(null);
      if (n.r(r), Object.defineProperty(r, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var u in e) n.d(r, u, function (t) {
        return e[t];
      }.bind(null, u));
      return r;
    }, n.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return n.d(t, "a", t), t;
    }, n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, n.p = "", n(n.s = 16);
  }([function (e, t, n) {
    e.exports = n(9);
  }, function (e, t) {
    t.getArg = function (e, t, n) {
      if (t in e) return e[t];
      if (3 === arguments.length) return n;
      throw new Error('"' + t + '" is a required argument.');
    };

    var n = /^(?:([\w+\-.]+):)?\/\/(?:(\w+:\w+)@)?([\w.]*)(?::(\d+))?(\S*)$/,
        r = /^data:.+\,.+$/;

    function u(e) {
      var t = e.match(n);
      return t ? {
        scheme: t[1],
        auth: t[2],
        host: t[3],
        port: t[4],
        path: t[5]
      } : null;
    }

    function o(e) {
      var t = "";
      return e.scheme && (t += e.scheme + ":"), t += "//", e.auth && (t += e.auth + "@"), e.host && (t += e.host), e.port && (t += ":" + e.port), e.path && (t += e.path), t;
    }

    function i(e) {
      var n = e,
          r = u(e);

      if (r) {
        if (!r.path) return e;
        n = r.path;
      }

      for (var i, a = t.isAbsolute(n), l = n.split(/\/+/), s = 0, c = l.length - 1; c >= 0; c--) "." === (i = l[c]) ? l.splice(c, 1) : ".." === i ? s++ : s > 0 && ("" === i ? (l.splice(c + 1, s), s = 0) : (l.splice(c, 2), s--));

      return "" === (n = l.join("/")) && (n = a ? "/" : "."), r ? (r.path = n, o(r)) : n;
    }

    t.urlParse = u, t.urlGenerate = o, t.normalize = i, t.join = function (e, t) {
      "" === e && (e = "."), "" === t && (t = ".");
      var n = u(t),
          a = u(e);
      if (a && (e = a.path || "/"), n && !n.scheme) return a && (n.scheme = a.scheme), o(n);
      if (n || t.match(r)) return t;
      if (a && !a.host && !a.path) return a.host = t, o(a);
      var l = "/" === t.charAt(0) ? t : i(e.replace(/\/+$/, "") + "/" + t);
      return a ? (a.path = l, o(a)) : l;
    }, t.isAbsolute = function (e) {
      return "/" === e.charAt(0) || !!e.match(n);
    }, t.relative = function (e, t) {
      "" === e && (e = "."), e = e.replace(/\/$/, "");

      for (var n = 0; 0 !== t.indexOf(e + "/");) {
        var r = e.lastIndexOf("/");
        if (r < 0) return t;
        if ((e = e.slice(0, r)).match(/^([^\/]+:\/)?\/*$/)) return t;
        ++n;
      }

      return Array(n + 1).join("../") + t.substr(e.length + 1);
    };
    var a = !("__proto__" in Object.create(null));

    function l(e) {
      return e;
    }

    function s(e) {
      if (!e) return !1;
      var t = e.length;
      if (t < 9) return !1;
      if (95 !== e.charCodeAt(t - 1) || 95 !== e.charCodeAt(t - 2) || 111 !== e.charCodeAt(t - 3) || 116 !== e.charCodeAt(t - 4) || 111 !== e.charCodeAt(t - 5) || 114 !== e.charCodeAt(t - 6) || 112 !== e.charCodeAt(t - 7) || 95 !== e.charCodeAt(t - 8) || 95 !== e.charCodeAt(t - 9)) return !1;

      for (var n = t - 10; n >= 0; n--) if (36 !== e.charCodeAt(n)) return !1;

      return !0;
    }

    function c(e, t) {
      return e === t ? 0 : e > t ? 1 : -1;
    }

    t.toSetString = a ? l : function (e) {
      return s(e) ? "$" + e : e;
    }, t.fromSetString = a ? l : function (e) {
      return s(e) ? e.slice(1) : e;
    }, t.compareByOriginalPositions = function (e, t, n) {
      var r = e.source - t.source;
      return 0 !== r ? r : 0 != (r = e.originalLine - t.originalLine) ? r : 0 != (r = e.originalColumn - t.originalColumn) || n ? r : 0 != (r = e.generatedColumn - t.generatedColumn) ? r : 0 != (r = e.generatedLine - t.generatedLine) ? r : e.name - t.name;
    }, t.compareByGeneratedPositionsDeflated = function (e, t, n) {
      var r = e.generatedLine - t.generatedLine;
      return 0 !== r ? r : 0 != (r = e.generatedColumn - t.generatedColumn) || n ? r : 0 != (r = e.source - t.source) ? r : 0 != (r = e.originalLine - t.originalLine) ? r : 0 != (r = e.originalColumn - t.originalColumn) ? r : e.name - t.name;
    }, t.compareByGeneratedPositionsInflated = function (e, t) {
      var n = e.generatedLine - t.generatedLine;
      return 0 !== n ? n : 0 != (n = e.generatedColumn - t.generatedColumn) ? n : 0 !== (n = c(e.source, t.source)) ? n : 0 != (n = e.originalLine - t.originalLine) ? n : 0 != (n = e.originalColumn - t.originalColumn) ? n : c(e.name, t.name);
    };
  }, function (e, t) {
    function n(e, t) {
      for (var n = 0, r = e.length - 1; r >= 0; r--) {
        var u = e[r];
        "." === u ? e.splice(r, 1) : ".." === u ? (e.splice(r, 1), n++) : n && (e.splice(r, 1), n--);
      }

      if (t) for (; n--; n) e.unshift("..");
      return e;
    }

    var r = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/,
        u = function (e) {
      return r.exec(e).slice(1);
    };

    function o(e, t) {
      if (e.filter) return e.filter(t);

      for (var n = [], r = 0; r < e.length; r++) t(e[r], r, e) && n.push(e[r]);

      return n;
    }

    t.resolve = function () {
      for (var e = "", t = !1, r = arguments.length - 1; r >= -1 && !t; r--) {
        var u = r >= 0 ? arguments[r] : process.cwd();
        if ("string" != typeof u) throw new TypeError("Arguments to path.resolve must be strings");
        u && (e = u + "/" + e, t = "/" === u.charAt(0));
      }

      return (t ? "/" : "") + (e = n(o(e.split("/"), function (e) {
        return !!e;
      }), !t).join("/")) || ".";
    }, t.normalize = function (e) {
      var r = t.isAbsolute(e),
          u = "/" === i(e, -1);
      return (e = n(o(e.split("/"), function (e) {
        return !!e;
      }), !r).join("/")) || r || (e = "."), e && u && (e += "/"), (r ? "/" : "") + e;
    }, t.isAbsolute = function (e) {
      return "/" === e.charAt(0);
    }, t.join = function () {
      var e = Array.prototype.slice.call(arguments, 0);
      return t.normalize(o(e, function (e, t) {
        if ("string" != typeof e) throw new TypeError("Arguments to path.join must be strings");
        return e;
      }).join("/"));
    }, t.relative = function (e, n) {
      function r(e) {
        for (var t = 0; t < e.length && "" === e[t]; t++);

        for (var n = e.length - 1; n >= 0 && "" === e[n]; n--);

        return t > n ? [] : e.slice(t, n - t + 1);
      }

      e = t.resolve(e).substr(1), n = t.resolve(n).substr(1);

      for (var u = r(e.split("/")), o = r(n.split("/")), i = Math.min(u.length, o.length), a = i, l = 0; l < i; l++) if (u[l] !== o[l]) {
        a = l;
        break;
      }

      var s = [];

      for (l = a; l < u.length; l++) s.push("..");

      return (s = s.concat(o.slice(a))).join("/");
    }, t.sep = "/", t.delimiter = ":", t.dirname = function (e) {
      var t = u(e),
          n = t[0],
          r = t[1];
      return n || r ? (r && (r = r.substr(0, r.length - 1)), n + r) : ".";
    }, t.basename = function (e, t) {
      var n = u(e)[2];
      return t && n.substr(-1 * t.length) === t && (n = n.substr(0, n.length - t.length)), n;
    }, t.extname = function (e) {
      return u(e)[3];
    };
    var i = "b" === "ab".substr(-1) ? function (e, t, n) {
      return e.substr(t, n);
    } : function (e, t, n) {
      return t < 0 && (t = e.length + t), e.substr(t, n);
    };
  }, function (e, t, n) {
    t.SourceMapGenerator = n(4).SourceMapGenerator, t.SourceMapConsumer = n(12).SourceMapConsumer, t.SourceNode = n(15).SourceNode;
  }, function (e, t, n) {
    var r = n(5),
        u = n(1),
        o = n(6).ArraySet,
        i = n(11).MappingList;

    function a(e) {
      e || (e = {}), this._file = u.getArg(e, "file", null), this._sourceRoot = u.getArg(e, "sourceRoot", null), this._skipValidation = u.getArg(e, "skipValidation", !1), this._sources = new o(), this._names = new o(), this._mappings = new i(), this._sourcesContents = null;
    }

    a.prototype._version = 3, a.fromSourceMap = function (e) {
      var t = e.sourceRoot,
          n = new a({
        file: e.file,
        sourceRoot: t
      });
      return e.eachMapping(function (e) {
        var r = {
          generated: {
            line: e.generatedLine,
            column: e.generatedColumn
          }
        };
        null != e.source && (r.source = e.source, null != t && (r.source = u.relative(t, r.source)), r.original = {
          line: e.originalLine,
          column: e.originalColumn
        }, null != e.name && (r.name = e.name)), n.addMapping(r);
      }), e.sources.forEach(function (t) {
        var r = e.sourceContentFor(t);
        null != r && n.setSourceContent(t, r);
      }), n;
    }, a.prototype.addMapping = function (e) {
      var t = u.getArg(e, "generated"),
          n = u.getArg(e, "original", null),
          r = u.getArg(e, "source", null),
          o = u.getArg(e, "name", null);
      this._skipValidation || this._validateMapping(t, n, r, o), null != r && (r = String(r), this._sources.has(r) || this._sources.add(r)), null != o && (o = String(o), this._names.has(o) || this._names.add(o)), this._mappings.add({
        generatedLine: t.line,
        generatedColumn: t.column,
        originalLine: null != n && n.line,
        originalColumn: null != n && n.column,
        source: r,
        name: o
      });
    }, a.prototype.setSourceContent = function (e, t) {
      var n = e;
      null != this._sourceRoot && (n = u.relative(this._sourceRoot, n)), null != t ? (this._sourcesContents || (this._sourcesContents = Object.create(null)), this._sourcesContents[u.toSetString(n)] = t) : this._sourcesContents && (delete this._sourcesContents[u.toSetString(n)], 0 === Object.keys(this._sourcesContents).length && (this._sourcesContents = null));
    }, a.prototype.applySourceMap = function (e, t, n) {
      var r = t;

      if (null == t) {
        if (null == e.file) throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, or the source map\'s "file" property. Both were omitted.');
        r = e.file;
      }

      var i = this._sourceRoot;
      null != i && (r = u.relative(i, r));
      var a = new o(),
          l = new o();
      this._mappings.unsortedForEach(function (t) {
        if (t.source === r && null != t.originalLine) {
          var o = e.originalPositionFor({
            line: t.originalLine,
            column: t.originalColumn
          });
          null != o.source && (t.source = o.source, null != n && (t.source = u.join(n, t.source)), null != i && (t.source = u.relative(i, t.source)), t.originalLine = o.line, t.originalColumn = o.column, null != o.name && (t.name = o.name));
        }

        var s = t.source;
        null == s || a.has(s) || a.add(s);
        var c = t.name;
        null == c || l.has(c) || l.add(c);
      }, this), this._sources = a, this._names = l, e.sources.forEach(function (t) {
        var r = e.sourceContentFor(t);
        null != r && (null != n && (t = u.join(n, t)), null != i && (t = u.relative(i, t)), this.setSourceContent(t, r));
      }, this);
    }, a.prototype._validateMapping = function (e, t, n, r) {
      if ((!(e && "line" in e && "column" in e && e.line > 0 && e.column >= 0) || t || n || r) && !(e && "line" in e && "column" in e && t && "line" in t && "column" in t && e.line > 0 && e.column >= 0 && t.line > 0 && t.column >= 0 && n)) throw new Error("Invalid mapping: " + JSON.stringify({
        generated: e,
        source: n,
        original: t,
        name: r
      }));
    }, a.prototype._serializeMappings = function () {
      for (var e, t, n, o, i = 0, a = 1, l = 0, s = 0, c = 0, f = 0, p = "", d = this._mappings.toArray(), h = 0, m = d.length; h < m; h++) {
        if (e = "", (t = d[h]).generatedLine !== a) for (i = 0; t.generatedLine !== a;) e += ";", a++;else if (h > 0) {
          if (!u.compareByGeneratedPositionsInflated(t, d[h - 1])) continue;
          e += ",";
        }
        e += r.encode(t.generatedColumn - i), i = t.generatedColumn, null != t.source && (o = this._sources.indexOf(t.source), e += r.encode(o - f), f = o, e += r.encode(t.originalLine - 1 - s), s = t.originalLine - 1, e += r.encode(t.originalColumn - l), l = t.originalColumn, null != t.name && (n = this._names.indexOf(t.name), e += r.encode(n - c), c = n)), p += e;
      }

      return p;
    }, a.prototype._generateSourcesContent = function (e, t) {
      return e.map(function (e) {
        if (!this._sourcesContents) return null;
        null != t && (e = u.relative(t, e));
        var n = u.toSetString(e);
        return Object.prototype.hasOwnProperty.call(this._sourcesContents, n) ? this._sourcesContents[n] : null;
      }, this);
    }, a.prototype.toJSON = function () {
      var e = {
        version: this._version,
        sources: this._sources.toArray(),
        names: this._names.toArray(),
        mappings: this._serializeMappings()
      };
      return null != this._file && (e.file = this._file), null != this._sourceRoot && (e.sourceRoot = this._sourceRoot), this._sourcesContents && (e.sourcesContent = this._generateSourcesContent(e.sources, e.sourceRoot)), e;
    }, a.prototype.toString = function () {
      return JSON.stringify(this.toJSON());
    }, t.SourceMapGenerator = a;
  }, function (e, t, n) {
    var r = n(10);
    t.encode = function (e) {
      var t,
          n = "",
          u = function (e) {
        return e < 0 ? 1 + (-e << 1) : 0 + (e << 1);
      }(e);

      do {
        t = 31 & u, (u >>>= 5) > 0 && (t |= 32), n += r.encode(t);
      } while (u > 0);

      return n;
    }, t.decode = function (e, t, n) {
      var u,
          o,
          i,
          a,
          l = e.length,
          s = 0,
          c = 0;

      do {
        if (t >= l) throw new Error("Expected more digits in base 64 VLQ value.");
        if (-1 === (o = r.decode(e.charCodeAt(t++)))) throw new Error("Invalid base64 digit: " + e.charAt(t - 1));
        u = !!(32 & o), s += (o &= 31) << c, c += 5;
      } while (u);

      n.value = (a = (i = s) >> 1, 1 == (1 & i) ? -a : a), n.rest = t;
    };
  }, function (e, t, n) {
    var r = n(1),
        u = Object.prototype.hasOwnProperty;

    function o() {
      this._array = [], this._set = Object.create(null);
    }

    o.fromArray = function (e, t) {
      for (var n = new o(), r = 0, u = e.length; r < u; r++) n.add(e[r], t);

      return n;
    }, o.prototype.size = function () {
      return Object.getOwnPropertyNames(this._set).length;
    }, o.prototype.add = function (e, t) {
      var n = r.toSetString(e),
          o = u.call(this._set, n),
          i = this._array.length;
      o && !t || this._array.push(e), o || (this._set[n] = i);
    }, o.prototype.has = function (e) {
      var t = r.toSetString(e);
      return u.call(this._set, t);
    }, o.prototype.indexOf = function (e) {
      var t = r.toSetString(e);
      if (u.call(this._set, t)) return this._set[t];
      throw new Error('"' + e + '" is not in the set.');
    }, o.prototype.at = function (e) {
      if (e >= 0 && e < this._array.length) return this._array[e];
      throw new Error("No element indexed by " + e);
    }, o.prototype.toArray = function () {
      return this._array.slice();
    }, t.ArraySet = o;
  }, function (e, t, n) {
    "use strict";

    function r(e) {
      return Array.isArray(e) || (e = [e]), Promise.all(e.map(function (e) {
        return e.then(function (e) {
          return {
            isFulfilled: !0,
            isRejected: !1,
            value: e
          };
        }).catch(function (e) {
          return {
            isFulfilled: !1,
            isRejected: !0,
            reason: e
          };
        });
      }));
    }

    Object.defineProperty(t, "__esModule", {
      value: !0
    }), t.settle = r, t.default = r;
  }, function (e, t) {
    e.exports = '!function(e){var t={};function n(r){if(t[r])return t[r].exports;var u=t[r]={i:r,l:!1,exports:{}};return e[r].call(u.exports,u,u.exports,n),u.l=!0,u.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"===typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var u in e)n.d(r,u,function(t){return e[t]}.bind(null,u));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=202)}([function(e,t,n){"use strict";e.exports=n(178)},function(e,t,n){var r=n(5),u=n(34).f,o=n(17),i=n(21),a=n(38),l=n(58),c=n(54);e.exports=function(e,t){var n,s,f,d,p,h=e.target,m=e.global,g=e.stat;if(n=m?r:g?r[h]||a(h,{}):(r[h]||{}).prototype)for(s in t){if(d=t[s],f=e.noTargetGet?(p=u(n,s))&&p.value:n[s],!c(m?s:h+(g?".":"#")+s,e.forced)&&void 0!==f){if(typeof d===typeof f)continue;l(d,f)}(e.sham||f&&f.sham)&&o(d,"sham",!0),i(n,s,d,e)}}},function(e,t,n){var r=n(10);e.exports=function(e){if(!r(e))throw TypeError(String(e)+" is not an object");return e}},function(e,t){e.exports=!1},function(e,t){e.exports=function(e){if("function"!=typeof e)throw TypeError(String(e)+" is not a function");return e}},function(e,t){e.exports="object"==typeof window&&window&&window.Math==Math?window:"object"==typeof self&&self&&self.Math==Math?self:Function("return this")()},function(e,t,n){var r=n(24)("wks"),u=n(30),o=n(5).Symbol,i=n(62);e.exports=function(e){return r[e]||(r[e]=i&&o[e]||(i?o:u)("Symbol."+e))}},function(e,t,n){var r=n(4);e.exports=function(e,t,n){if(r(e),void 0===t)return e;switch(n){case 0:return function(){return e.call(t)};case 1:return function(n){return e.call(t,n)};case 2:return function(n,r){return e.call(t,n,r)};case 3:return function(n,r,u){return e.call(t,n,r,u)}}return function(){return e.apply(t,arguments)}}},function(e,t,n){var r=n(71),u=n(11),o=n(77),i=n(13).f;e.exports=function(e){var t=r.Symbol||(r.Symbol={});u(t,e)||i(t,e,{value:o.f(e)})}},function(e,t,n){var r=n(2),u=n(61),o=n(31),i=n(7),a=n(43),l=n(64),c={};(e.exports=function(e,t,n,s,f){var d,p,h,m,g,v=i(t,n,s?2:1);if(f)d=e;else{if("function"!=typeof(p=a(e)))throw TypeError("Target is not iterable");if(u(p)){for(h=0,m=o(e.length);m>h;h++)if((s?v(r(g=e[h])[0],g[1]):v(e[h]))===c)return c;return}d=p.call(e)}for(;!(g=d.next()).done;)if(l(d,v,g.value,s)===c)return c}).BREAK=c},function(e,t){e.exports=function(e){return"object"===typeof e?null!==e:"function"===typeof e}},function(e,t){var n={}.hasOwnProperty;e.exports=function(e,t){return n.call(e,t)}},function(e,t){e.exports=function(e){try{return!!e()}catch(e){return!0}}},function(e,t,n){var r=n(16),u=n(55),o=n(2),i=n(28),a=Object.defineProperty;t.f=r?a:function(e,t,n){if(o(e),t=i(t,!0),o(n),u)try{return a(e,t,n)}catch(e){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(e[t]=n.value),e}},function(e,t,n){var r=n(71),u=n(5),o=function(e){return"function"==typeof e?e:void 0};e.exports=function(e,t){return arguments.length<2?o(r[e])||o(u[e]):r[e]&&r[e][t]||u[e]&&u[e][t]}},function(e,t,n){var r=n(3),u=n(47);e.exports=r?u:function(e){return Map.prototype.entries.call(e)}},function(e,t,n){e.exports=!n(12)(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(13),u=n(23);e.exports=n(16)?function(e,t,n){return r.f(e,t,u(1,n))}:function(e,t,n){return e[t]=n,e}},function(e,t,n){var r=n(2),u=n(4),o=n(6)("species");e.exports=function(e,t){var n,i=r(e).constructor;return void 0===i||void 0==(n=r(i)[o])?t:u(n)}},function(e,t,n){var r=n(3),u=n(47);e.exports=r?u:function(e){return Set.prototype.values.call(e)}},function(e,t,n){var r=n(87),u=n(37);e.exports=function(e){return r(u(e))}},function(e,t,n){var r=n(5),u=n(17),o=n(11),i=n(38),a=n(57),l=n(25),c=l.get,s=l.enforce,f=String(a).split("toString");n(24)("inspectSource",function(e){return a.call(e)}),(e.exports=function(e,t,n,a){var l=!!a&&!!a.unsafe,c=!!a&&!!a.enumerable,d=!!a&&!!a.noTargetGet;"function"==typeof n&&("string"!=typeof t||o(n,"name")||u(n,"name",t),s(n).source=f.join("string"==typeof t?t:"")),e!==r?(l?!d&&e[t]&&(c=!0):delete e[t],c?e[t]=n:u(e,t,n)):c?e[t]=n:i(t,n)})(Function.prototype,"toString",function(){return"function"==typeof this&&c(this).source||a.call(this)})},function(e,t,n){var r=n(13).f,u=n(11),o=n(6)("toStringTag");e.exports=function(e,t,n){e&&!u(e=n?e:e.prototype,o)&&r(e,o,{configurable:!0,value:t})}},function(e,t){e.exports=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}}},function(e,t,n){var r=n(5),u=n(38),o=r["__core-js_shared__"]||u("__core-js_shared__",{});(e.exports=function(e,t){return o[e]||(o[e]=void 0!==t?t:{})})("versions",[]).push({version:"3.0.1",mode:n(3)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},function(e,t,n){var r,u,o,i=n(88),a=n(10),l=n(17),c=n(11),s=n(29),f=n(26),d=n(5).WeakMap;if(i){var p=new d,h=p.get,m=p.has,g=p.set;r=function(e,t){return g.call(p,e,t),t},u=function(e){return h.call(p,e)||{}},o=function(e){return m.call(p,e)}}else{var v=s("state");f[v]=!0,r=function(e,t){return l(e,v,t),t},u=function(e){return c(e,v)?e[v]:{}},o=function(e){return c(e,v)}}e.exports={set:r,get:u,has:o,enforce:function(e){return o(e)?u(e):r(e,{})},getterFor:function(e){return function(t){var n;if(!a(t)||(n=u(t)).type!==e)throw TypeError("Incompatible receiver, "+e+" required");return n}}}},function(e,t){e.exports={}},function(e,t){e.exports={}},function(e,t,n){var r=n(10);e.exports=function(e,t){if(!r(e))return e;var n,u;if(t&&"function"==typeof(n=e.toString)&&!r(u=n.call(e)))return u;if("function"==typeof(n=e.valueOf)&&!r(u=n.call(e)))return u;if(!t&&"function"==typeof(n=e.toString)&&!r(u=n.call(e)))return u;throw TypeError("Can\'t convert object to primitive value")}},function(e,t,n){var r=n(24)("keys"),u=n(30);e.exports=function(e){return r[e]||(r[e]=u(e))}},function(e,t){var n=0,r=Math.random();e.exports=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++n+r).toString(36))}},function(e,t,n){var r=n(40),u=Math.min;e.exports=function(e){return e>0?u(r(e),9007199254740991):0}},function(e,t,n){var r=n(2),u=n(95),o=n(41),i=n(96),a=n(56),l=n(29)("IE_PROTO"),c=function(){},s=function(){var e,t=a("iframe"),n=o.length;for(t.style.display="none",i.appendChild(t),t.src=String("javascript:"),(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\\/script>"),e.close(),s=e.F;n--;)delete s.prototype[o[n]];return s()};e.exports=Object.create||function(e,t){var n;return null!==e?(c.prototype=r(e),n=new c,c.prototype=null,n[l]=e):n=s(),void 0===t?n:u(n,t)},n(26)[l]=!0},function(e,t,n){"use strict";var r=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}();var u=[[{color:"0, 0, 0",class:"ansi-black"},{color:"187, 0, 0",class:"ansi-red"},{color:"0, 187, 0",class:"ansi-green"},{color:"187, 187, 0",class:"ansi-yellow"},{color:"0, 0, 187",class:"ansi-blue"},{color:"187, 0, 187",class:"ansi-magenta"},{color:"0, 187, 187",class:"ansi-cyan"},{color:"255,255,255",class:"ansi-white"}],[{color:"85, 85, 85",class:"ansi-bright-black"},{color:"255, 85, 85",class:"ansi-bright-red"},{color:"0, 255, 0",class:"ansi-bright-green"},{color:"255, 255, 85",class:"ansi-bright-yellow"},{color:"85, 85, 255",class:"ansi-bright-blue"},{color:"255, 85, 255",class:"ansi-bright-magenta"},{color:"85, 255, 255",class:"ansi-bright-cyan"},{color:"255, 255, 255",class:"ansi-bright-white"}]],o=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.fg=this.bg=this.fg_truecolor=this.bg_truecolor=null,this.bright=0}return r(e,null,[{key:"escapeForHtml",value:function(t){return(new e).escapeForHtml(t)}},{key:"linkify",value:function(t){return(new e).linkify(t)}},{key:"ansiToHtml",value:function(t,n){return(new e).ansiToHtml(t,n)}},{key:"ansiToJson",value:function(t,n){return(new e).ansiToJson(t,n)}},{key:"ansiToText",value:function(t){return(new e).ansiToText(t)}}]),r(e,[{key:"setupPalette",value:function(){this.PALETTE_COLORS=[];for(var e=0;e<2;++e)for(var t=0;t<8;++t)this.PALETTE_COLORS.push(u[e][t].color);for(var n=[0,95,135,175,215,255],r=function(e,t,r){return n[e]+", "+n[t]+", "+n[r]},o=0;o<6;++o)for(var i=0;i<6;++i)for(var a=0;a<6;++a)this.PALETTE_COLORS.push(r(o,i,a));for(var l=8,c=0;c<24;++c,l+=10)this.PALETTE_COLORS.push(r(l,l,l))}},{key:"escapeForHtml",value:function(e){return e.replace(/[&<>]/gm,function(e){return"&"==e?"&amp;":"<"==e?"&lt;":">"==e?"&gt;":""})}},{key:"linkify",value:function(e){return e.replace(/(https?:\\/\\/[^\\s]+)/gm,function(e){return\'<a href="\'+e+\'">\'+e+"</a>"})}},{key:"ansiToHtml",value:function(e,t){return this.process(e,t,!0)}},{key:"ansiToJson",value:function(e,t){return(t=t||{}).json=!0,t.clearLine=!1,this.process(e,t,!0)}},{key:"ansiToText",value:function(e){return this.process(e,{},!1)}},{key:"process",value:function(e,t,n){var r=this,u=e.split(/\\033\\[/),o=u.shift();void 0!==t&&null!==t||(t={}),t.clearLine=/\\r/.test(e);var i=u.map(function(e){return r.processChunk(e,t,n)});if(t&&t.json){var a=this.processChunkJson("");return a.content=o,a.clearLine=t.clearLine,i.unshift(a),t.remove_empty&&(i=i.filter(function(e){return!e.isEmpty()})),i}return i.unshift(o),i.join("")}},{key:"processChunkJson",value:function(e,t,n){var r=(t="undefined"==typeof t?{}:t).use_classes="undefined"!=typeof t.use_classes&&t.use_classes,o=t.key=r?"class":"color",i={content:e,fg:null,bg:null,fg_truecolor:null,bg_truecolor:null,clearLine:t.clearLine,decoration:null,was_processed:!1,isEmpty:function(){return!i.content}},a=e.match(/^([!\\x3c-\\x3f]*)([\\d;]*)([\\x20-\\x2c]*[\\x40-\\x7e])([\\s\\S]*)/m);if(!a)return i;i.content=a[4];var l=a[2].split(";");if(""!==a[1]||"m"!==a[3])return i;if(!n)return i;for(this.decoration=null;l.length>0;){var c=l.shift(),s=parseInt(c);if(isNaN(s)||0===s)this.fg=this.bg=this.decoration=null;else if(1===s)this.decoration="bold";else if(2===s)this.decoration="dim";else if(3==s)this.decoration="italic";else if(4==s)this.decoration="underline";else if(5==s)this.decoration="blink";else if(7===s)this.decoration="reverse";else if(8===s)this.decoration="hidden";else if(9===s)this.decoration="strikethrough";else if(39==s)this.fg=null;else if(49==s)this.bg=null;else if(s>=30&&s<38)this.fg=u[0][s%10][o];else if(s>=90&&s<98)this.fg=u[1][s%10][o];else if(s>=40&&s<48)this.bg=u[0][s%10][o];else if(s>=100&&s<108)this.bg=u[1][s%10][o];else if(38===s||48===s){var f=38===s;if(l.length>=1){var d=l.shift();if("5"===d&&l.length>=1){var p=parseInt(l.shift());if(p>=0&&p<=255)if(r){var h=p>=16?"ansi-palette-"+p:u[p>7?1:0][p%8].class;f?this.fg=h:this.bg=h}else this.PALETTE_COLORS||this.setupPalette(),f?this.fg=this.PALETTE_COLORS[p]:this.bg=this.PALETTE_COLORS[p]}else if("2"===d&&l.length>=3){var m=parseInt(l.shift()),g=parseInt(l.shift()),v=parseInt(l.shift());if(m>=0&&m<=255&&g>=0&&g<=255&&v>=0&&v<=255){var y=m+", "+g+", "+v;r?f?(this.fg="ansi-truecolor",this.fg_truecolor=y):(this.bg="ansi-truecolor",this.bg_truecolor=y):f?this.fg=y:this.bg=y}}}}}if(null===this.fg&&null===this.bg&&null===this.decoration)return i;return i.fg=this.fg,i.bg=this.bg,i.fg_truecolor=this.fg_truecolor,i.bg_truecolor=this.bg_truecolor,i.decoration=this.decoration,i.was_processed=!0,i}},{key:"processChunk",value:function(e,t,n){var r=this;t=t||{};var u=this.processChunkJson(e,t,n);if(t.json)return u;if(u.isEmpty())return"";if(!u.was_processed)return u.content;var o=t.use_classes,i=[],a=[],l={},c=function(e){var t=[],n=void 0;for(n in e)e.hasOwnProperty(n)&&t.push("data-"+n+\'="\'+r.escapeForHtml(e[n])+\'"\');return t.length>0?" "+t.join(" "):""};return u.fg&&(o?(a.push(u.fg+"-fg"),null!==u.fg_truecolor&&(l["ansi-truecolor-fg"]=u.fg_truecolor,u.fg_truecolor=null)):i.push("color:rgb("+u.fg+")")),u.bg&&(o?(a.push(u.bg+"-bg"),null!==u.bg_truecolor&&(l["ansi-truecolor-bg"]=u.bg_truecolor,u.bg_truecolor=null)):i.push("background-color:rgb("+u.bg+")")),u.decoration&&(o?a.push("ansi-"+u.decoration):"bold"===u.decoration?i.push("font-weight:bold"):"dim"===u.decoration?i.push("opacity:0.5"):"italic"===u.decoration?i.push("font-style:italic"):"reverse"===u.decoration?i.push("filter:invert(100%)"):"hidden"===u.decoration?i.push("visibility:hidden"):"strikethrough"===u.decoration?i.push("text-decoration:line-through"):i.push("text-decoration:"+u.decoration)),o?\'<span class="\'+a.join(" ")+\'"\'+c(l)+">"+u.content+"</span>":\'<span style="\'+i.join(";")+\'"\'+c(l)+">"+u.content+"</span>"}}]),e}();e.exports=o},function(e,t,n){var r=n(16),u=n(35),o=n(23),i=n(20),a=n(28),l=n(11),c=n(55),s=Object.getOwnPropertyDescriptor;t.f=r?s:function(e,t){if(e=i(e),t=a(t,!0),c)try{return s(e,t)}catch(e){}if(l(e,t))return o(!u.f.call(e,t),e[t])}},function(e,t,n){"use strict";var r={}.propertyIsEnumerable,u=Object.getOwnPropertyDescriptor,o=u&&!r.call({1:2},1);t.f=o?function(e){var t=u(this,e);return!!t&&t.enumerable}:r},function(e,t){var n={}.toString;e.exports=function(e){return n.call(e).slice(8,-1)}},function(e,t){e.exports=function(e){if(void 0==e)throw TypeError("Can\'t call method on "+e);return e}},function(e,t,n){var r=n(5),u=n(17);e.exports=function(e,t){try{u(r,e,t)}catch(n){r[e]=t}return t}},function(e,t,n){var r=n(59),u=n(41).concat("length","prototype");t.f=Object.getOwnPropertyNames||function(e){return r(e,u)}},function(e,t){var n=Math.ceil,r=Math.floor;e.exports=function(e){return isNaN(e=+e)?0:(e>0?r:n)(e)}},function(e,t){e.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(e,t){t.f=Object.getOwnPropertySymbols},function(e,t,n){var r=n(63),u=n(6)("iterator"),o=n(27);e.exports=function(e){if(void 0!=e)return e[u]||e["@@iterator"]||o[r(e)]}},function(e,t,n){var r=n(59),u=n(41);e.exports=Object.keys||function(e){return r(e,u)}},function(e,t,n){"use strict";var r=n(1),u=n(98),o=n(70),i=n(67),a=n(22),l=n(17),c=n(21),s=n(3),f=n(6)("iterator"),d=n(27),p=n(69),h=p.IteratorPrototype,m=p.BUGGY_SAFARI_ITERATORS,g=function(){return this};e.exports=function(e,t,n,p,v,y,D){u(n,t,p);var b,A,C,E=function(e){if(e===v&&k)return k;if(!m&&e in x)return x[e];switch(e){case"keys":case"values":case"entries":return function(){return new n(this,e)}}return function(){return new n(this)}},F=t+" Iterator",w=!1,x=e.prototype,B=x[f]||x["@@iterator"]||v&&x[v],k=!m&&B||E(v),S="Array"==t&&x.entries||B;if(S&&(b=o(S.call(new e)),h!==Object.prototype&&b.next&&(s||o(b)===h||(i?i(b,h):"function"!=typeof b[f]&&l(b,f,g)),a(b,F,!0,!0),s&&(d[F]=g))),"values"==v&&B&&"values"!==B.name&&(w=!0,k=function(){return B.call(this)}),s&&!D||x[f]===k||l(x,f,k),d[t]=k,v)if(A={values:E("values"),keys:y?k:E("keys"),entries:E("entries")},D)for(C in A)!m&&!w&&C in x||c(x,C,A[C]);else r({target:t,proto:!0,forced:m||w},A);return A}},function(e,t,n){var r=n(37);e.exports=function(e){return Object(r(e))}},function(e,t,n){var r=n(2),u=n(43);e.exports=function(e){var t=u(e);if("function"!=typeof t)throw TypeError(String(e)+" is not iterable");return r(t.call(e))}},function(e,t,n){var r=n(36);e.exports=Array.isArray||function(e){return"Array"==r(e)}},function(e,t){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(e){"object"===typeof window&&(n=window)}e.exports=n},function(e,t,n){"use strict";var r=Object.getOwnPropertySymbols,u=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map(function(e){return t[e]}).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach(function(e){r[e]=e}),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,t){for(var n,i,a=function(e){if(null===e||void 0===e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}(e),l=1;l<arguments.length;l++){for(var c in n=Object(arguments[l]))u.call(n,c)&&(a[c]=n[c]);if(r){i=r(n);for(var s=0;s<i.length;s++)o.call(n,i[s])&&(a[i[s]]=n[i[s]])}}return a}},function(e,t){var n,r,u=e.exports={};function o(){throw new Error("setTimeout has not been defined")}function i(){throw new Error("clearTimeout has not been defined")}function a(e){if(n===setTimeout)return setTimeout(e,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(e,0);try{return n(e,0)}catch(t){try{return n.call(null,e,0)}catch(t){return n.call(this,e,0)}}}!function(){try{n="function"===typeof setTimeout?setTimeout:o}catch(e){n=o}try{r="function"===typeof clearTimeout?clearTimeout:i}catch(e){r=i}}();var l,c=[],s=!1,f=-1;function d(){s&&l&&(s=!1,l.length?c=l.concat(c):f=-1,c.length&&p())}function p(){if(!s){var e=a(d);s=!0;for(var t=c.length;t;){for(l=c,c=[];++f<t;)l&&l[f].run();f=-1,t=c.length}l=null,s=!1,function(e){if(r===clearTimeout)return clearTimeout(e);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(e);try{r(e)}catch(t){try{return r.call(null,e)}catch(t){return r.call(this,e)}}}(e)}}function h(e,t){this.fun=e,this.array=t}function m(){}u.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)t[n-1]=arguments[n];c.push(new h(e,t)),1!==c.length||s||a(p)},h.prototype.run=function(){this.fun.apply(null,this.array)},u.title="browser",u.browser=!0,u.env={},u.argv=[],u.version="",u.versions={},u.on=m,u.addListener=m,u.once=m,u.off=m,u.removeListener=m,u.removeAllListeners=m,u.emit=m,u.prependListener=m,u.prependOnceListener=m,u.listeners=function(e){return[]},u.binding=function(e){throw new Error("process.binding is not supported")},u.cwd=function(){return"/"},u.chdir=function(e){throw new Error("process.chdir is not supported")},u.umask=function(){return 0}},function(e,t,n){"use strict";!function e(){if("undefined"!==typeof{}&&"function"===typeof{}.checkDCE)try{({}).checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(179)},function(e,t,n){"use strict";var r=n(5),u=n(54),o=n(1),i=n(21),a=n(60),l=n(9),c=n(65),s=n(10),f=n(12),d=n(66),p=n(22),h=n(93);e.exports=function(e,t,n,m,g){var v=r[e],y=v&&v.prototype,D=v,b=m?"set":"add",A={},C=function(e){var t=y[e];i(y,e,"add"==e?function(e){return t.call(this,0===e?0:e),this}:"delete"==e?function(e){return!(g&&!s(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return g&&!s(e)?void 0:t.call(this,0===e?0:e)}:"has"==e?function(e){return!(g&&!s(e))&&t.call(this,0===e?0:e)}:function(e,n){return t.call(this,0===e?0:e,n),this})};if(u(e,"function"!=typeof v||!(g||y.forEach&&!f(function(){(new v).entries().next()}))))D=n.getConstructor(t,e,m,b),a.REQUIRED=!0;else if(u(e,!0)){var E=new D,F=E[b](g?{}:-0,1)!=E,w=f(function(){E.has(1)}),x=d(function(e){new v(e)}),B=!g&&f(function(){for(var e=new v,t=5;t--;)e[b](t,t);return!e.has(-0)});x||((D=t(function(t,n){c(t,D,e);var r=h(new v,t,D);return void 0!=n&&l(n,r[b],r,m),r})).prototype=y,y.constructor=D),(w||B)&&(C("delete"),C("has"),m&&C("get")),(B||F)&&C(b),g&&y.clear&&delete y.clear}return A[e]=D,o({global:!0,forced:D!=v},A),p(D,e),g||n.setStrong(D,e,m),D}},function(e,t,n){var r=n(12),u=/#|\\.prototype\\./,o=function(e,t){var n=a[i(e)];return n==c||n!=l&&("function"==typeof t?r(t):!!t)},i=o.normalize=function(e){return String(e).replace(u,".").toLowerCase()},a=o.data={},l=o.NATIVE="N",c=o.POLYFILL="P";e.exports=o},function(e,t,n){e.exports=!n(16)&&!n(12)(function(){return 7!=Object.defineProperty(n(56)("div"),"a",{get:function(){return 7}}).a})},function(e,t,n){var r=n(10),u=n(5).document,o=r(u)&&r(u.createElement);e.exports=function(e){return o?u.createElement(e):{}}},function(e,t,n){e.exports=n(24)("native-function-to-string",Function.toString)},function(e,t,n){var r=n(11),u=n(89),o=n(34),i=n(13);e.exports=function(e,t){for(var n=u(t),a=i.f,l=o.f,c=0;c<n.length;c++){var s=n[c];r(e,s)||a(e,s,l(t,s))}}},function(e,t,n){var r=n(11),u=n(20),o=n(90)(!1),i=n(26);e.exports=function(e,t){var n,a=u(e),l=0,c=[];for(n in a)!r(i,n)&&r(a,n)&&c.push(n);for(;t.length>l;)r(a,n=t[l++])&&(~o(c,n)||c.push(n));return c}},function(e,t,n){var r=n(30)("meta"),u=n(92),o=n(10),i=n(11),a=n(13).f,l=0,c=Object.isExtensible||function(){return!0},s=function(e){a(e,r,{value:{objectID:"O"+ ++l,weakData:{}}})},f=e.exports={REQUIRED:!1,fastKey:function(e,t){if(!o(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!i(e,r)){if(!c(e))return"F";if(!t)return"E";s(e)}return e[r].objectID},getWeakData:function(e,t){if(!i(e,r)){if(!c(e))return!0;if(!t)return!1;s(e)}return e[r].weakData},onFreeze:function(e){return u&&f.REQUIRED&&c(e)&&!i(e,r)&&s(e),e}};n(26)[r]=!0},function(e,t,n){var r=n(27),u=n(6)("iterator"),o=Array.prototype;e.exports=function(e){return void 0!==e&&(r.Array===e||o[u]===e)}},function(e,t,n){e.exports=!n(12)(function(){return!String(Symbol())})},function(e,t,n){var r=n(36),u=n(6)("toStringTag"),o="Arguments"==r(function(){return arguments}());e.exports=function(e){var t,n,i;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(n=function(e,t){try{return e[t]}catch(e){}}(t=Object(e),u))?n:o?r(t):"Object"==(i=r(t))&&"function"==typeof t.callee?"Arguments":i}},function(e,t,n){var r=n(2);e.exports=function(e,t,n,u){try{return u?t(r(n)[0],n[1]):t(n)}catch(t){var o=e.return;throw void 0!==o&&r(o.call(e)),t}}},function(e,t){e.exports=function(e,t,n){if(!(e instanceof t))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return e}},function(e,t,n){var r=n(6)("iterator"),u=!1;try{var o=0,i={next:function(){return{done:!!o++}},return:function(){u=!0}};i[r]=function(){return this},Array.from(i,function(){throw 2})}catch(e){}e.exports=function(e,t){if(!t&&!u)return!1;var n=!1;try{var o={};o[r]=function(){return{next:function(){return{done:n=!0}}}},e(o)}catch(e){}return n}},function(e,t,n){var r=n(94);e.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var e,t=!1,n={};try{(e=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),t=n instanceof Array}catch(e){}return function(n,u){return r(n,u),t?e.call(n,u):n.__proto__=u,n}}():void 0)},function(e,t,n){"use strict";var r=n(13).f,u=n(32),o=n(97),i=n(7),a=n(65),l=n(9),c=n(45),s=n(100),f=n(16),d=n(60).fastKey,p=n(25),h=p.set,m=p.getterFor;e.exports={getConstructor:function(e,t,n,c){var s=e(function(e,r){a(e,s,t),h(e,{type:t,index:u(null),first:void 0,last:void 0,size:0}),f||(e.size=0),void 0!=r&&l(r,e[c],e,n)}),p=m(t),g=function(e,t,n){var r,u,o=p(e),i=v(e,t);return i?i.value=n:(o.last=i={index:u=d(t,!0),key:t,value:n,previous:r=o.last,next:void 0,removed:!1},o.first||(o.first=i),r&&(r.next=i),f?o.size++:e.size++,"F"!==u&&(o.index[u]=i)),e},v=function(e,t){var n,r=p(e),u=d(t);if("F"!==u)return r.index[u];for(n=r.first;n;n=n.next)if(n.key==t)return n};return o(s.prototype,{clear:function(){for(var e=p(this),t=e.index,n=e.first;n;)n.removed=!0,n.previous&&(n.previous=n.previous.next=void 0),delete t[n.index],n=n.next;e.first=e.last=void 0,f?e.size=0:this.size=0},delete:function(e){var t=p(this),n=v(this,e);if(n){var r=n.next,u=n.previous;delete t.index[n.index],n.removed=!0,u&&(u.next=r),r&&(r.previous=u),t.first==n&&(t.first=r),t.last==n&&(t.last=u),f?t.size--:this.size--}return!!n},forEach:function(e){for(var t,n=p(this),r=i(e,arguments.length>1?arguments[1]:void 0,3);t=t?t.next:n.first;)for(r(t.value,t.key,this);t&&t.removed;)t=t.previous},has:function(e){return!!v(this,e)}}),o(s.prototype,n?{get:function(e){var t=v(this,e);return t&&t.value},set:function(e,t){return g(this,0===e?0:e,t)}}:{add:function(e){return g(this,e=0===e?0:e,e)}}),f&&r(s.prototype,"size",{get:function(){return p(this).size}}),s},setStrong:function(e,t,n){var r=t+" Iterator",u=m(t),o=m(r);c(e,t,function(e,t){h(this,{type:r,target:e,state:u(e),kind:t,last:void 0})},function(){for(var e=o(this),t=e.kind,n=e.last;n&&n.removed;)n=n.previous;return e.target&&(e.last=n=n?n.next:e.state.first)?"keys"==t?{value:n.key,done:!1}:"values"==t?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(e.target=void 0,{value:void 0,done:!0})},n?"entries":"values",!n,!0),s(t)}}},function(e,t,n){"use strict";var r,u,o,i=n(70),a=n(17),l=n(11),c=n(3),s=n(6)("iterator"),f=!1;[].keys&&("next"in(o=[].keys())?(u=i(i(o)))!==Object.prototype&&(r=u):f=!0),void 0==r&&(r={}),c||l(r,s)||a(r,s,function(){return this}),e.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:f}},function(e,t,n){var r=n(11),u=n(46),o=n(29)("IE_PROTO"),i=n(99),a=Object.prototype;e.exports=i?Object.getPrototypeOf:function(e){return e=u(e),r(e,o)?e[o]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?a:null}},function(e,t,n){e.exports=n(5)},function(e,t,n){var r=n(101),u=Object.prototype;r!==u.toString&&n(21)(u,"toString",r,{unsafe:!0})},function(e,t,n){"use strict";var r=n(103),u=n(25),o=n(45),i=u.set,a=u.getterFor("String Iterator");o(String,"String",function(e){i(this,{type:"String Iterator",string:String(e),index:0})},function(){var e,t=a(this),n=t.string,u=t.index;return u>=n.length?{value:void 0,done:!0}:(e=r(n,u,!0),t.index+=e.length,{value:e,done:!1})})},function(e,t,n){"use strict";var r=n(2),u=n(4);e.exports=function(){for(var e=r(this),t=u(e.delete),n=!0,o=0,i=arguments.length;o<i;o++)n=n&&t.call(e,arguments[o]);return!!n}},function(e,t,n){"use strict";var r=n(4),u=n(7),o=n(9);e.exports=function(e){var t,n,i,a,l=arguments[1];return r(this),(t=void 0!==l)&&r(l),void 0==e?new this:(n=[],t?(i=0,a=u(l,arguments[2],2),o(e,function(e){n.push(a(e,i++))})):o(e,n.push,n),new this(n))}},function(e,t,n){"use strict";e.exports=function(){for(var e=arguments.length,t=new Array(e);e--;)t[e]=arguments[e];return new this(t)}},function(e,t,n){t.f=n(6)},function(e,t,n){"use strict";var r=n(28),u=n(13),o=n(23);e.exports=function(e,t,n){var i=r(t);i in e?u.f(e,i,o(0,n)):e[i]=n}},function(e,t,n){"use strict";var r=n(173);function u(){}var o=null,i={};function a(e){if("object"!==typeof this)throw new TypeError("Promises must be constructed via new");if("function"!==typeof e)throw new TypeError("Promise constructor\'s argument is not a function");this._h=0,this._i=0,this._j=null,this._k=null,e!==u&&p(e,this)}function l(e,t){for(;3===e._i;)e=e._j;if(a._l&&a._l(e),0===e._i)return 0===e._h?(e._h=1,void(e._k=t)):1===e._h?(e._h=2,void(e._k=[e._k,t])):void e._k.push(t);!function(e,t){r(function(){var n=1===e._i?t.onFulfilled:t.onRejected;if(null!==n){var r=function(e,t){try{return e(t)}catch(e){return o=e,i}}(n,e._j);r===i?s(t.promise,o):c(t.promise,r)}else 1===e._i?c(t.promise,e._j):s(t.promise,e._j)})}(e,t)}function c(e,t){if(t===e)return s(e,new TypeError("A promise cannot be resolved with itself."));if(t&&("object"===typeof t||"function"===typeof t)){var n=function(e){try{return e.then}catch(e){return o=e,i}}(t);if(n===i)return s(e,o);if(n===e.then&&t instanceof a)return e._i=3,e._j=t,void f(e);if("function"===typeof n)return void p(n.bind(t),e)}e._i=1,e._j=t,f(e)}function s(e,t){e._i=2,e._j=t,a._m&&a._m(e,t),f(e)}function f(e){if(1===e._h&&(l(e,e._k),e._k=null),2===e._h){for(var t=0;t<e._k.length;t++)l(e,e._k[t]);e._k=null}}function d(e,t,n){this.onFulfilled="function"===typeof e?e:null,this.onRejected="function"===typeof t?t:null,this.promise=n}function p(e,t){var n=!1,r=function(e,t,n){try{e(t,n)}catch(e){return o=e,i}}(e,function(e){n||(n=!0,c(t,e))},function(e){n||(n=!0,s(t,e))});n||r!==i||(n=!0,s(t,o))}e.exports=a,a._l=null,a._m=null,a._n=u,a.prototype.then=function(e,t){if(this.constructor!==a)return function(e,t,n){return new e.constructor(function(r,o){var i=new a(u);i.then(r,o),l(e,new d(t,n,i))})}(this,e,t);var n=new a(u);return l(this,new d(e,t,n)),n}},function(e,t){var n=[["Aacute",[193]],["aacute",[225]],["Abreve",[258]],["abreve",[259]],["ac",[8766]],["acd",[8767]],["acE",[8766,819]],["Acirc",[194]],["acirc",[226]],["acute",[180]],["Acy",[1040]],["acy",[1072]],["AElig",[198]],["aelig",[230]],["af",[8289]],["Afr",[120068]],["afr",[120094]],["Agrave",[192]],["agrave",[224]],["alefsym",[8501]],["aleph",[8501]],["Alpha",[913]],["alpha",[945]],["Amacr",[256]],["amacr",[257]],["amalg",[10815]],["amp",[38]],["AMP",[38]],["andand",[10837]],["And",[10835]],["and",[8743]],["andd",[10844]],["andslope",[10840]],["andv",[10842]],["ang",[8736]],["ange",[10660]],["angle",[8736]],["angmsdaa",[10664]],["angmsdab",[10665]],["angmsdac",[10666]],["angmsdad",[10667]],["angmsdae",[10668]],["angmsdaf",[10669]],["angmsdag",[10670]],["angmsdah",[10671]],["angmsd",[8737]],["angrt",[8735]],["angrtvb",[8894]],["angrtvbd",[10653]],["angsph",[8738]],["angst",[197]],["angzarr",[9084]],["Aogon",[260]],["aogon",[261]],["Aopf",[120120]],["aopf",[120146]],["apacir",[10863]],["ap",[8776]],["apE",[10864]],["ape",[8778]],["apid",[8779]],["apos",[39]],["ApplyFunction",[8289]],["approx",[8776]],["approxeq",[8778]],["Aring",[197]],["aring",[229]],["Ascr",[119964]],["ascr",[119990]],["Assign",[8788]],["ast",[42]],["asymp",[8776]],["asympeq",[8781]],["Atilde",[195]],["atilde",[227]],["Auml",[196]],["auml",[228]],["awconint",[8755]],["awint",[10769]],["backcong",[8780]],["backepsilon",[1014]],["backprime",[8245]],["backsim",[8765]],["backsimeq",[8909]],["Backslash",[8726]],["Barv",[10983]],["barvee",[8893]],["barwed",[8965]],["Barwed",[8966]],["barwedge",[8965]],["bbrk",[9141]],["bbrktbrk",[9142]],["bcong",[8780]],["Bcy",[1041]],["bcy",[1073]],["bdquo",[8222]],["becaus",[8757]],["because",[8757]],["Because",[8757]],["bemptyv",[10672]],["bepsi",[1014]],["bernou",[8492]],["Bernoullis",[8492]],["Beta",[914]],["beta",[946]],["beth",[8502]],["between",[8812]],["Bfr",[120069]],["bfr",[120095]],["bigcap",[8898]],["bigcirc",[9711]],["bigcup",[8899]],["bigodot",[10752]],["bigoplus",[10753]],["bigotimes",[10754]],["bigsqcup",[10758]],["bigstar",[9733]],["bigtriangledown",[9661]],["bigtriangleup",[9651]],["biguplus",[10756]],["bigvee",[8897]],["bigwedge",[8896]],["bkarow",[10509]],["blacklozenge",[10731]],["blacksquare",[9642]],["blacktriangle",[9652]],["blacktriangledown",[9662]],["blacktriangleleft",[9666]],["blacktriangleright",[9656]],["blank",[9251]],["blk12",[9618]],["blk14",[9617]],["blk34",[9619]],["block",[9608]],["bne",[61,8421]],["bnequiv",[8801,8421]],["bNot",[10989]],["bnot",[8976]],["Bopf",[120121]],["bopf",[120147]],["bot",[8869]],["bottom",[8869]],["bowtie",[8904]],["boxbox",[10697]],["boxdl",[9488]],["boxdL",[9557]],["boxDl",[9558]],["boxDL",[9559]],["boxdr",[9484]],["boxdR",[9554]],["boxDr",[9555]],["boxDR",[9556]],["boxh",[9472]],["boxH",[9552]],["boxhd",[9516]],["boxHd",[9572]],["boxhD",[9573]],["boxHD",[9574]],["boxhu",[9524]],["boxHu",[9575]],["boxhU",[9576]],["boxHU",[9577]],["boxminus",[8863]],["boxplus",[8862]],["boxtimes",[8864]],["boxul",[9496]],["boxuL",[9563]],["boxUl",[9564]],["boxUL",[9565]],["boxur",[9492]],["boxuR",[9560]],["boxUr",[9561]],["boxUR",[9562]],["boxv",[9474]],["boxV",[9553]],["boxvh",[9532]],["boxvH",[9578]],["boxVh",[9579]],["boxVH",[9580]],["boxvl",[9508]],["boxvL",[9569]],["boxVl",[9570]],["boxVL",[9571]],["boxvr",[9500]],["boxvR",[9566]],["boxVr",[9567]],["boxVR",[9568]],["bprime",[8245]],["breve",[728]],["Breve",[728]],["brvbar",[166]],["bscr",[119991]],["Bscr",[8492]],["bsemi",[8271]],["bsim",[8765]],["bsime",[8909]],["bsolb",[10693]],["bsol",[92]],["bsolhsub",[10184]],["bull",[8226]],["bullet",[8226]],["bump",[8782]],["bumpE",[10926]],["bumpe",[8783]],["Bumpeq",[8782]],["bumpeq",[8783]],["Cacute",[262]],["cacute",[263]],["capand",[10820]],["capbrcup",[10825]],["capcap",[10827]],["cap",[8745]],["Cap",[8914]],["capcup",[10823]],["capdot",[10816]],["CapitalDifferentialD",[8517]],["caps",[8745,65024]],["caret",[8257]],["caron",[711]],["Cayleys",[8493]],["ccaps",[10829]],["Ccaron",[268]],["ccaron",[269]],["Ccedil",[199]],["ccedil",[231]],["Ccirc",[264]],["ccirc",[265]],["Cconint",[8752]],["ccups",[10828]],["ccupssm",[10832]],["Cdot",[266]],["cdot",[267]],["cedil",[184]],["Cedilla",[184]],["cemptyv",[10674]],["cent",[162]],["centerdot",[183]],["CenterDot",[183]],["cfr",[120096]],["Cfr",[8493]],["CHcy",[1063]],["chcy",[1095]],["check",[10003]],["checkmark",[10003]],["Chi",[935]],["chi",[967]],["circ",[710]],["circeq",[8791]],["circlearrowleft",[8634]],["circlearrowright",[8635]],["circledast",[8859]],["circledcirc",[8858]],["circleddash",[8861]],["CircleDot",[8857]],["circledR",[174]],["circledS",[9416]],["CircleMinus",[8854]],["CirclePlus",[8853]],["CircleTimes",[8855]],["cir",[9675]],["cirE",[10691]],["cire",[8791]],["cirfnint",[10768]],["cirmid",[10991]],["cirscir",[10690]],["ClockwiseContourIntegral",[8754]],["clubs",[9827]],["clubsuit",[9827]],["colon",[58]],["Colon",[8759]],["Colone",[10868]],["colone",[8788]],["coloneq",[8788]],["comma",[44]],["commat",[64]],["comp",[8705]],["compfn",[8728]],["complement",[8705]],["complexes",[8450]],["cong",[8773]],["congdot",[10861]],["Congruent",[8801]],["conint",[8750]],["Conint",[8751]],["ContourIntegral",[8750]],["copf",[120148]],["Copf",[8450]],["coprod",[8720]],["Coproduct",[8720]],["copy",[169]],["COPY",[169]],["copysr",[8471]],["CounterClockwiseContourIntegral",[8755]],["crarr",[8629]],["cross",[10007]],["Cross",[10799]],["Cscr",[119966]],["cscr",[119992]],["csub",[10959]],["csube",[10961]],["csup",[10960]],["csupe",[10962]],["ctdot",[8943]],["cudarrl",[10552]],["cudarrr",[10549]],["cuepr",[8926]],["cuesc",[8927]],["cularr",[8630]],["cularrp",[10557]],["cupbrcap",[10824]],["cupcap",[10822]],["CupCap",[8781]],["cup",[8746]],["Cup",[8915]],["cupcup",[10826]],["cupdot",[8845]],["cupor",[10821]],["cups",[8746,65024]],["curarr",[8631]],["curarrm",[10556]],["curlyeqprec",[8926]],["curlyeqsucc",[8927]],["curlyvee",[8910]],["curlywedge",[8911]],["curren",[164]],["curvearrowleft",[8630]],["curvearrowright",[8631]],["cuvee",[8910]],["cuwed",[8911]],["cwconint",[8754]],["cwint",[8753]],["cylcty",[9005]],["dagger",[8224]],["Dagger",[8225]],["daleth",[8504]],["darr",[8595]],["Darr",[8609]],["dArr",[8659]],["dash",[8208]],["Dashv",[10980]],["dashv",[8867]],["dbkarow",[10511]],["dblac",[733]],["Dcaron",[270]],["dcaron",[271]],["Dcy",[1044]],["dcy",[1076]],["ddagger",[8225]],["ddarr",[8650]],["DD",[8517]],["dd",[8518]],["DDotrahd",[10513]],["ddotseq",[10871]],["deg",[176]],["Del",[8711]],["Delta",[916]],["delta",[948]],["demptyv",[10673]],["dfisht",[10623]],["Dfr",[120071]],["dfr",[120097]],["dHar",[10597]],["dharl",[8643]],["dharr",[8642]],["DiacriticalAcute",[180]],["DiacriticalDot",[729]],["DiacriticalDoubleAcute",[733]],["DiacriticalGrave",[96]],["DiacriticalTilde",[732]],["diam",[8900]],["diamond",[8900]],["Diamond",[8900]],["diamondsuit",[9830]],["diams",[9830]],["die",[168]],["DifferentialD",[8518]],["digamma",[989]],["disin",[8946]],["div",[247]],["divide",[247]],["divideontimes",[8903]],["divonx",[8903]],["DJcy",[1026]],["djcy",[1106]],["dlcorn",[8990]],["dlcrop",[8973]],["dollar",[36]],["Dopf",[120123]],["dopf",[120149]],["Dot",[168]],["dot",[729]],["DotDot",[8412]],["doteq",[8784]],["doteqdot",[8785]],["DotEqual",[8784]],["dotminus",[8760]],["dotplus",[8724]],["dotsquare",[8865]],["doublebarwedge",[8966]],["DoubleContourIntegral",[8751]],["DoubleDot",[168]],["DoubleDownArrow",[8659]],["DoubleLeftArrow",[8656]],["DoubleLeftRightArrow",[8660]],["DoubleLeftTee",[10980]],["DoubleLongLeftArrow",[10232]],["DoubleLongLeftRightArrow",[10234]],["DoubleLongRightArrow",[10233]],["DoubleRightArrow",[8658]],["DoubleRightTee",[8872]],["DoubleUpArrow",[8657]],["DoubleUpDownArrow",[8661]],["DoubleVerticalBar",[8741]],["DownArrowBar",[10515]],["downarrow",[8595]],["DownArrow",[8595]],["Downarrow",[8659]],["DownArrowUpArrow",[8693]],["DownBreve",[785]],["downdownarrows",[8650]],["downharpoonleft",[8643]],["downharpoonright",[8642]],["DownLeftRightVector",[10576]],["DownLeftTeeVector",[10590]],["DownLeftVectorBar",[10582]],["DownLeftVector",[8637]],["DownRightTeeVector",[10591]],["DownRightVectorBar",[10583]],["DownRightVector",[8641]],["DownTeeArrow",[8615]],["DownTee",[8868]],["drbkarow",[10512]],["drcorn",[8991]],["drcrop",[8972]],["Dscr",[119967]],["dscr",[119993]],["DScy",[1029]],["dscy",[1109]],["dsol",[10742]],["Dstrok",[272]],["dstrok",[273]],["dtdot",[8945]],["dtri",[9663]],["dtrif",[9662]],["duarr",[8693]],["duhar",[10607]],["dwangle",[10662]],["DZcy",[1039]],["dzcy",[1119]],["dzigrarr",[10239]],["Eacute",[201]],["eacute",[233]],["easter",[10862]],["Ecaron",[282]],["ecaron",[283]],["Ecirc",[202]],["ecirc",[234]],["ecir",[8790]],["ecolon",[8789]],["Ecy",[1069]],["ecy",[1101]],["eDDot",[10871]],["Edot",[278]],["edot",[279]],["eDot",[8785]],["ee",[8519]],["efDot",[8786]],["Efr",[120072]],["efr",[120098]],["eg",[10906]],["Egrave",[200]],["egrave",[232]],["egs",[10902]],["egsdot",[10904]],["el",[10905]],["Element",[8712]],["elinters",[9191]],["ell",[8467]],["els",[10901]],["elsdot",[10903]],["Emacr",[274]],["emacr",[275]],["empty",[8709]],["emptyset",[8709]],["EmptySmallSquare",[9723]],["emptyv",[8709]],["EmptyVerySmallSquare",[9643]],["emsp13",[8196]],["emsp14",[8197]],["emsp",[8195]],["ENG",[330]],["eng",[331]],["ensp",[8194]],["Eogon",[280]],["eogon",[281]],["Eopf",[120124]],["eopf",[120150]],["epar",[8917]],["eparsl",[10723]],["eplus",[10865]],["epsi",[949]],["Epsilon",[917]],["epsilon",[949]],["epsiv",[1013]],["eqcirc",[8790]],["eqcolon",[8789]],["eqsim",[8770]],["eqslantgtr",[10902]],["eqslantless",[10901]],["Equal",[10869]],["equals",[61]],["EqualTilde",[8770]],["equest",[8799]],["Equilibrium",[8652]],["equiv",[8801]],["equivDD",[10872]],["eqvparsl",[10725]],["erarr",[10609]],["erDot",[8787]],["escr",[8495]],["Escr",[8496]],["esdot",[8784]],["Esim",[10867]],["esim",[8770]],["Eta",[919]],["eta",[951]],["ETH",[208]],["eth",[240]],["Euml",[203]],["euml",[235]],["euro",[8364]],["excl",[33]],["exist",[8707]],["Exists",[8707]],["expectation",[8496]],["exponentiale",[8519]],["ExponentialE",[8519]],["fallingdotseq",[8786]],["Fcy",[1060]],["fcy",[1092]],["female",[9792]],["ffilig",[64259]],["fflig",[64256]],["ffllig",[64260]],["Ffr",[120073]],["ffr",[120099]],["filig",[64257]],["FilledSmallSquare",[9724]],["FilledVerySmallSquare",[9642]],["fjlig",[102,106]],["flat",[9837]],["fllig",[64258]],["fltns",[9649]],["fnof",[402]],["Fopf",[120125]],["fopf",[120151]],["forall",[8704]],["ForAll",[8704]],["fork",[8916]],["forkv",[10969]],["Fouriertrf",[8497]],["fpartint",[10765]],["frac12",[189]],["frac13",[8531]],["frac14",[188]],["frac15",[8533]],["frac16",[8537]],["frac18",[8539]],["frac23",[8532]],["frac25",[8534]],["frac34",[190]],["frac35",[8535]],["frac38",[8540]],["frac45",[8536]],["frac56",[8538]],["frac58",[8541]],["frac78",[8542]],["frasl",[8260]],["frown",[8994]],["fscr",[119995]],["Fscr",[8497]],["gacute",[501]],["Gamma",[915]],["gamma",[947]],["Gammad",[988]],["gammad",[989]],["gap",[10886]],["Gbreve",[286]],["gbreve",[287]],["Gcedil",[290]],["Gcirc",[284]],["gcirc",[285]],["Gcy",[1043]],["gcy",[1075]],["Gdot",[288]],["gdot",[289]],["ge",[8805]],["gE",[8807]],["gEl",[10892]],["gel",[8923]],["geq",[8805]],["geqq",[8807]],["geqslant",[10878]],["gescc",[10921]],["ges",[10878]],["gesdot",[10880]],["gesdoto",[10882]],["gesdotol",[10884]],["gesl",[8923,65024]],["gesles",[10900]],["Gfr",[120074]],["gfr",[120100]],["gg",[8811]],["Gg",[8921]],["ggg",[8921]],["gimel",[8503]],["GJcy",[1027]],["gjcy",[1107]],["gla",[10917]],["gl",[8823]],["glE",[10898]],["glj",[10916]],["gnap",[10890]],["gnapprox",[10890]],["gne",[10888]],["gnE",[8809]],["gneq",[10888]],["gneqq",[8809]],["gnsim",[8935]],["Gopf",[120126]],["gopf",[120152]],["grave",[96]],["GreaterEqual",[8805]],["GreaterEqualLess",[8923]],["GreaterFullEqual",[8807]],["GreaterGreater",[10914]],["GreaterLess",[8823]],["GreaterSlantEqual",[10878]],["GreaterTilde",[8819]],["Gscr",[119970]],["gscr",[8458]],["gsim",[8819]],["gsime",[10894]],["gsiml",[10896]],["gtcc",[10919]],["gtcir",[10874]],["gt",[62]],["GT",[62]],["Gt",[8811]],["gtdot",[8919]],["gtlPar",[10645]],["gtquest",[10876]],["gtrapprox",[10886]],["gtrarr",[10616]],["gtrdot",[8919]],["gtreqless",[8923]],["gtreqqless",[10892]],["gtrless",[8823]],["gtrsim",[8819]],["gvertneqq",[8809,65024]],["gvnE",[8809,65024]],["Hacek",[711]],["hairsp",[8202]],["half",[189]],["hamilt",[8459]],["HARDcy",[1066]],["hardcy",[1098]],["harrcir",[10568]],["harr",[8596]],["hArr",[8660]],["harrw",[8621]],["Hat",[94]],["hbar",[8463]],["Hcirc",[292]],["hcirc",[293]],["hearts",[9829]],["heartsuit",[9829]],["hellip",[8230]],["hercon",[8889]],["hfr",[120101]],["Hfr",[8460]],["HilbertSpace",[8459]],["hksearow",[10533]],["hkswarow",[10534]],["hoarr",[8703]],["homtht",[8763]],["hookleftarrow",[8617]],["hookrightarrow",[8618]],["hopf",[120153]],["Hopf",[8461]],["horbar",[8213]],["HorizontalLine",[9472]],["hscr",[119997]],["Hscr",[8459]],["hslash",[8463]],["Hstrok",[294]],["hstrok",[295]],["HumpDownHump",[8782]],["HumpEqual",[8783]],["hybull",[8259]],["hyphen",[8208]],["Iacute",[205]],["iacute",[237]],["ic",[8291]],["Icirc",[206]],["icirc",[238]],["Icy",[1048]],["icy",[1080]],["Idot",[304]],["IEcy",[1045]],["iecy",[1077]],["iexcl",[161]],["iff",[8660]],["ifr",[120102]],["Ifr",[8465]],["Igrave",[204]],["igrave",[236]],["ii",[8520]],["iiiint",[10764]],["iiint",[8749]],["iinfin",[10716]],["iiota",[8489]],["IJlig",[306]],["ijlig",[307]],["Imacr",[298]],["imacr",[299]],["image",[8465]],["ImaginaryI",[8520]],["imagline",[8464]],["imagpart",[8465]],["imath",[305]],["Im",[8465]],["imof",[8887]],["imped",[437]],["Implies",[8658]],["incare",[8453]],["in",[8712]],["infin",[8734]],["infintie",[10717]],["inodot",[305]],["intcal",[8890]],["int",[8747]],["Int",[8748]],["integers",[8484]],["Integral",[8747]],["intercal",[8890]],["Intersection",[8898]],["intlarhk",[10775]],["intprod",[10812]],["InvisibleComma",[8291]],["InvisibleTimes",[8290]],["IOcy",[1025]],["iocy",[1105]],["Iogon",[302]],["iogon",[303]],["Iopf",[120128]],["iopf",[120154]],["Iota",[921]],["iota",[953]],["iprod",[10812]],["iquest",[191]],["iscr",[119998]],["Iscr",[8464]],["isin",[8712]],["isindot",[8949]],["isinE",[8953]],["isins",[8948]],["isinsv",[8947]],["isinv",[8712]],["it",[8290]],["Itilde",[296]],["itilde",[297]],["Iukcy",[1030]],["iukcy",[1110]],["Iuml",[207]],["iuml",[239]],["Jcirc",[308]],["jcirc",[309]],["Jcy",[1049]],["jcy",[1081]],["Jfr",[120077]],["jfr",[120103]],["jmath",[567]],["Jopf",[120129]],["jopf",[120155]],["Jscr",[119973]],["jscr",[119999]],["Jsercy",[1032]],["jsercy",[1112]],["Jukcy",[1028]],["jukcy",[1108]],["Kappa",[922]],["kappa",[954]],["kappav",[1008]],["Kcedil",[310]],["kcedil",[311]],["Kcy",[1050]],["kcy",[1082]],["Kfr",[120078]],["kfr",[120104]],["kgreen",[312]],["KHcy",[1061]],["khcy",[1093]],["KJcy",[1036]],["kjcy",[1116]],["Kopf",[120130]],["kopf",[120156]],["Kscr",[119974]],["kscr",[12e4]],["lAarr",[8666]],["Lacute",[313]],["lacute",[314]],["laemptyv",[10676]],["lagran",[8466]],["Lambda",[923]],["lambda",[955]],["lang",[10216]],["Lang",[10218]],["langd",[10641]],["langle",[10216]],["lap",[10885]],["Laplacetrf",[8466]],["laquo",[171]],["larrb",[8676]],["larrbfs",[10527]],["larr",[8592]],["Larr",[8606]],["lArr",[8656]],["larrfs",[10525]],["larrhk",[8617]],["larrlp",[8619]],["larrpl",[10553]],["larrsim",[10611]],["larrtl",[8610]],["latail",[10521]],["lAtail",[10523]],["lat",[10923]],["late",[10925]],["lates",[10925,65024]],["lbarr",[10508]],["lBarr",[10510]],["lbbrk",[10098]],["lbrace",[123]],["lbrack",[91]],["lbrke",[10635]],["lbrksld",[10639]],["lbrkslu",[10637]],["Lcaron",[317]],["lcaron",[318]],["Lcedil",[315]],["lcedil",[316]],["lceil",[8968]],["lcub",[123]],["Lcy",[1051]],["lcy",[1083]],["ldca",[10550]],["ldquo",[8220]],["ldquor",[8222]],["ldrdhar",[10599]],["ldrushar",[10571]],["ldsh",[8626]],["le",[8804]],["lE",[8806]],["LeftAngleBracket",[10216]],["LeftArrowBar",[8676]],["leftarrow",[8592]],["LeftArrow",[8592]],["Leftarrow",[8656]],["LeftArrowRightArrow",[8646]],["leftarrowtail",[8610]],["LeftCeiling",[8968]],["LeftDoubleBracket",[10214]],["LeftDownTeeVector",[10593]],["LeftDownVectorBar",[10585]],["LeftDownVector",[8643]],["LeftFloor",[8970]],["leftharpoondown",[8637]],["leftharpoonup",[8636]],["leftleftarrows",[8647]],["leftrightarrow",[8596]],["LeftRightArrow",[8596]],["Leftrightarrow",[8660]],["leftrightarrows",[8646]],["leftrightharpoons",[8651]],["leftrightsquigarrow",[8621]],["LeftRightVector",[10574]],["LeftTeeArrow",[8612]],["LeftTee",[8867]],["LeftTeeVector",[10586]],["leftthreetimes",[8907]],["LeftTriangleBar",[10703]],["LeftTriangle",[8882]],["LeftTriangleEqual",[8884]],["LeftUpDownVector",[10577]],["LeftUpTeeVector",[10592]],["LeftUpVectorBar",[10584]],["LeftUpVector",[8639]],["LeftVectorBar",[10578]],["LeftVector",[8636]],["lEg",[10891]],["leg",[8922]],["leq",[8804]],["leqq",[8806]],["leqslant",[10877]],["lescc",[10920]],["les",[10877]],["lesdot",[10879]],["lesdoto",[10881]],["lesdotor",[10883]],["lesg",[8922,65024]],["lesges",[10899]],["lessapprox",[10885]],["lessdot",[8918]],["lesseqgtr",[8922]],["lesseqqgtr",[10891]],["LessEqualGreater",[8922]],["LessFullEqual",[8806]],["LessGreater",[8822]],["lessgtr",[8822]],["LessLess",[10913]],["lesssim",[8818]],["LessSlantEqual",[10877]],["LessTilde",[8818]],["lfisht",[10620]],["lfloor",[8970]],["Lfr",[120079]],["lfr",[120105]],["lg",[8822]],["lgE",[10897]],["lHar",[10594]],["lhard",[8637]],["lharu",[8636]],["lharul",[10602]],["lhblk",[9604]],["LJcy",[1033]],["ljcy",[1113]],["llarr",[8647]],["ll",[8810]],["Ll",[8920]],["llcorner",[8990]],["Lleftarrow",[8666]],["llhard",[10603]],["lltri",[9722]],["Lmidot",[319]],["lmidot",[320]],["lmoustache",[9136]],["lmoust",[9136]],["lnap",[10889]],["lnapprox",[10889]],["lne",[10887]],["lnE",[8808]],["lneq",[10887]],["lneqq",[8808]],["lnsim",[8934]],["loang",[10220]],["loarr",[8701]],["lobrk",[10214]],["longleftarrow",[10229]],["LongLeftArrow",[10229]],["Longleftarrow",[10232]],["longleftrightarrow",[10231]],["LongLeftRightArrow",[10231]],["Longleftrightarrow",[10234]],["longmapsto",[10236]],["longrightarrow",[10230]],["LongRightArrow",[10230]],["Longrightarrow",[10233]],["looparrowleft",[8619]],["looparrowright",[8620]],["lopar",[10629]],["Lopf",[120131]],["lopf",[120157]],["loplus",[10797]],["lotimes",[10804]],["lowast",[8727]],["lowbar",[95]],["LowerLeftArrow",[8601]],["LowerRightArrow",[8600]],["loz",[9674]],["lozenge",[9674]],["lozf",[10731]],["lpar",[40]],["lparlt",[10643]],["lrarr",[8646]],["lrcorner",[8991]],["lrhar",[8651]],["lrhard",[10605]],["lrm",[8206]],["lrtri",[8895]],["lsaquo",[8249]],["lscr",[120001]],["Lscr",[8466]],["lsh",[8624]],["Lsh",[8624]],["lsim",[8818]],["lsime",[10893]],["lsimg",[10895]],["lsqb",[91]],["lsquo",[8216]],["lsquor",[8218]],["Lstrok",[321]],["lstrok",[322]],["ltcc",[10918]],["ltcir",[10873]],["lt",[60]],["LT",[60]],["Lt",[8810]],["ltdot",[8918]],["lthree",[8907]],["ltimes",[8905]],["ltlarr",[10614]],["ltquest",[10875]],["ltri",[9667]],["ltrie",[8884]],["ltrif",[9666]],["ltrPar",[10646]],["lurdshar",[10570]],["luruhar",[10598]],["lvertneqq",[8808,65024]],["lvnE",[8808,65024]],["macr",[175]],["male",[9794]],["malt",[10016]],["maltese",[10016]],["Map",[10501]],["map",[8614]],["mapsto",[8614]],["mapstodown",[8615]],["mapstoleft",[8612]],["mapstoup",[8613]],["marker",[9646]],["mcomma",[10793]],["Mcy",[1052]],["mcy",[1084]],["mdash",[8212]],["mDDot",[8762]],["measuredangle",[8737]],["MediumSpace",[8287]],["Mellintrf",[8499]],["Mfr",[120080]],["mfr",[120106]],["mho",[8487]],["micro",[181]],["midast",[42]],["midcir",[10992]],["mid",[8739]],["middot",[183]],["minusb",[8863]],["minus",[8722]],["minusd",[8760]],["minusdu",[10794]],["MinusPlus",[8723]],["mlcp",[10971]],["mldr",[8230]],["mnplus",[8723]],["models",[8871]],["Mopf",[120132]],["mopf",[120158]],["mp",[8723]],["mscr",[120002]],["Mscr",[8499]],["mstpos",[8766]],["Mu",[924]],["mu",[956]],["multimap",[8888]],["mumap",[8888]],["nabla",[8711]],["Nacute",[323]],["nacute",[324]],["nang",[8736,8402]],["nap",[8777]],["napE",[10864,824]],["napid",[8779,824]],["napos",[329]],["napprox",[8777]],["natural",[9838]],["naturals",[8469]],["natur",[9838]],["nbsp",[160]],["nbump",[8782,824]],["nbumpe",[8783,824]],["ncap",[10819]],["Ncaron",[327]],["ncaron",[328]],["Ncedil",[325]],["ncedil",[326]],["ncong",[8775]],["ncongdot",[10861,824]],["ncup",[10818]],["Ncy",[1053]],["ncy",[1085]],["ndash",[8211]],["nearhk",[10532]],["nearr",[8599]],["neArr",[8663]],["nearrow",[8599]],["ne",[8800]],["nedot",[8784,824]],["NegativeMediumSpace",[8203]],["NegativeThickSpace",[8203]],["NegativeThinSpace",[8203]],["NegativeVeryThinSpace",[8203]],["nequiv",[8802]],["nesear",[10536]],["nesim",[8770,824]],["NestedGreaterGreater",[8811]],["NestedLessLess",[8810]],["nexist",[8708]],["nexists",[8708]],["Nfr",[120081]],["nfr",[120107]],["ngE",[8807,824]],["nge",[8817]],["ngeq",[8817]],["ngeqq",[8807,824]],["ngeqslant",[10878,824]],["nges",[10878,824]],["nGg",[8921,824]],["ngsim",[8821]],["nGt",[8811,8402]],["ngt",[8815]],["ngtr",[8815]],["nGtv",[8811,824]],["nharr",[8622]],["nhArr",[8654]],["nhpar",[10994]],["ni",[8715]],["nis",[8956]],["nisd",[8954]],["niv",[8715]],["NJcy",[1034]],["njcy",[1114]],["nlarr",[8602]],["nlArr",[8653]],["nldr",[8229]],["nlE",[8806,824]],["nle",[8816]],["nleftarrow",[8602]],["nLeftarrow",[8653]],["nleftrightarrow",[8622]],["nLeftrightarrow",[8654]],["nleq",[8816]],["nleqq",[8806,824]],["nleqslant",[10877,824]],["nles",[10877,824]],["nless",[8814]],["nLl",[8920,824]],["nlsim",[8820]],["nLt",[8810,8402]],["nlt",[8814]],["nltri",[8938]],["nltrie",[8940]],["nLtv",[8810,824]],["nmid",[8740]],["NoBreak",[8288]],["NonBreakingSpace",[160]],["nopf",[120159]],["Nopf",[8469]],["Not",[10988]],["not",[172]],["NotCongruent",[8802]],["NotCupCap",[8813]],["NotDoubleVerticalBar",[8742]],["NotElement",[8713]],["NotEqual",[8800]],["NotEqualTilde",[8770,824]],["NotExists",[8708]],["NotGreater",[8815]],["NotGreaterEqual",[8817]],["NotGreaterFullEqual",[8807,824]],["NotGreaterGreater",[8811,824]],["NotGreaterLess",[8825]],["NotGreaterSlantEqual",[10878,824]],["NotGreaterTilde",[8821]],["NotHumpDownHump",[8782,824]],["NotHumpEqual",[8783,824]],["notin",[8713]],["notindot",[8949,824]],["notinE",[8953,824]],["notinva",[8713]],["notinvb",[8951]],["notinvc",[8950]],["NotLeftTriangleBar",[10703,824]],["NotLeftTriangle",[8938]],["NotLeftTriangleEqual",[8940]],["NotLess",[8814]],["NotLessEqual",[8816]],["NotLessGreater",[8824]],["NotLessLess",[8810,824]],["NotLessSlantEqual",[10877,824]],["NotLessTilde",[8820]],["NotNestedGreaterGreater",[10914,824]],["NotNestedLessLess",[10913,824]],["notni",[8716]],["notniva",[8716]],["notnivb",[8958]],["notnivc",[8957]],["NotPrecedes",[8832]],["NotPrecedesEqual",[10927,824]],["NotPrecedesSlantEqual",[8928]],["NotReverseElement",[8716]],["NotRightTriangleBar",[10704,824]],["NotRightTriangle",[8939]],["NotRightTriangleEqual",[8941]],["NotSquareSubset",[8847,824]],["NotSquareSubsetEqual",[8930]],["NotSquareSuperset",[8848,824]],["NotSquareSupersetEqual",[8931]],["NotSubset",[8834,8402]],["NotSubsetEqual",[8840]],["NotSucceeds",[8833]],["NotSucceedsEqual",[10928,824]],["NotSucceedsSlantEqual",[8929]],["NotSucceedsTilde",[8831,824]],["NotSuperset",[8835,8402]],["NotSupersetEqual",[8841]],["NotTilde",[8769]],["NotTildeEqual",[8772]],["NotTildeFullEqual",[8775]],["NotTildeTilde",[8777]],["NotVerticalBar",[8740]],["nparallel",[8742]],["npar",[8742]],["nparsl",[11005,8421]],["npart",[8706,824]],["npolint",[10772]],["npr",[8832]],["nprcue",[8928]],["nprec",[8832]],["npreceq",[10927,824]],["npre",[10927,824]],["nrarrc",[10547,824]],["nrarr",[8603]],["nrArr",[8655]],["nrarrw",[8605,824]],["nrightarrow",[8603]],["nRightarrow",[8655]],["nrtri",[8939]],["nrtrie",[8941]],["nsc",[8833]],["nsccue",[8929]],["nsce",[10928,824]],["Nscr",[119977]],["nscr",[120003]],["nshortmid",[8740]],["nshortparallel",[8742]],["nsim",[8769]],["nsime",[8772]],["nsimeq",[8772]],["nsmid",[8740]],["nspar",[8742]],["nsqsube",[8930]],["nsqsupe",[8931]],["nsub",[8836]],["nsubE",[10949,824]],["nsube",[8840]],["nsubset",[8834,8402]],["nsubseteq",[8840]],["nsubseteqq",[10949,824]],["nsucc",[8833]],["nsucceq",[10928,824]],["nsup",[8837]],["nsupE",[10950,824]],["nsupe",[8841]],["nsupset",[8835,8402]],["nsupseteq",[8841]],["nsupseteqq",[10950,824]],["ntgl",[8825]],["Ntilde",[209]],["ntilde",[241]],["ntlg",[8824]],["ntriangleleft",[8938]],["ntrianglelefteq",[8940]],["ntriangleright",[8939]],["ntrianglerighteq",[8941]],["Nu",[925]],["nu",[957]],["num",[35]],["numero",[8470]],["numsp",[8199]],["nvap",[8781,8402]],["nvdash",[8876]],["nvDash",[8877]],["nVdash",[8878]],["nVDash",[8879]],["nvge",[8805,8402]],["nvgt",[62,8402]],["nvHarr",[10500]],["nvinfin",[10718]],["nvlArr",[10498]],["nvle",[8804,8402]],["nvlt",[60,8402]],["nvltrie",[8884,8402]],["nvrArr",[10499]],["nvrtrie",[8885,8402]],["nvsim",[8764,8402]],["nwarhk",[10531]],["nwarr",[8598]],["nwArr",[8662]],["nwarrow",[8598]],["nwnear",[10535]],["Oacute",[211]],["oacute",[243]],["oast",[8859]],["Ocirc",[212]],["ocirc",[244]],["ocir",[8858]],["Ocy",[1054]],["ocy",[1086]],["odash",[8861]],["Odblac",[336]],["odblac",[337]],["odiv",[10808]],["odot",[8857]],["odsold",[10684]],["OElig",[338]],["oelig",[339]],["ofcir",[10687]],["Ofr",[120082]],["ofr",[120108]],["ogon",[731]],["Ograve",[210]],["ograve",[242]],["ogt",[10689]],["ohbar",[10677]],["ohm",[937]],["oint",[8750]],["olarr",[8634]],["olcir",[10686]],["olcross",[10683]],["oline",[8254]],["olt",[10688]],["Omacr",[332]],["omacr",[333]],["Omega",[937]],["omega",[969]],["Omicron",[927]],["omicron",[959]],["omid",[10678]],["ominus",[8854]],["Oopf",[120134]],["oopf",[120160]],["opar",[10679]],["OpenCurlyDoubleQuote",[8220]],["OpenCurlyQuote",[8216]],["operp",[10681]],["oplus",[8853]],["orarr",[8635]],["Or",[10836]],["or",[8744]],["ord",[10845]],["order",[8500]],["orderof",[8500]],["ordf",[170]],["ordm",[186]],["origof",[8886]],["oror",[10838]],["orslope",[10839]],["orv",[10843]],["oS",[9416]],["Oscr",[119978]],["oscr",[8500]],["Oslash",[216]],["oslash",[248]],["osol",[8856]],["Otilde",[213]],["otilde",[245]],["otimesas",[10806]],["Otimes",[10807]],["otimes",[8855]],["Ouml",[214]],["ouml",[246]],["ovbar",[9021]],["OverBar",[8254]],["OverBrace",[9182]],["OverBracket",[9140]],["OverParenthesis",[9180]],["para",[182]],["parallel",[8741]],["par",[8741]],["parsim",[10995]],["parsl",[11005]],["part",[8706]],["PartialD",[8706]],["Pcy",[1055]],["pcy",[1087]],["percnt",[37]],["period",[46]],["permil",[8240]],["perp",[8869]],["pertenk",[8241]],["Pfr",[120083]],["pfr",[120109]],["Phi",[934]],["phi",[966]],["phiv",[981]],["phmmat",[8499]],["phone",[9742]],["Pi",[928]],["pi",[960]],["pitchfork",[8916]],["piv",[982]],["planck",[8463]],["planckh",[8462]],["plankv",[8463]],["plusacir",[10787]],["plusb",[8862]],["pluscir",[10786]],["plus",[43]],["plusdo",[8724]],["plusdu",[10789]],["pluse",[10866]],["PlusMinus",[177]],["plusmn",[177]],["plussim",[10790]],["plustwo",[10791]],["pm",[177]],["Poincareplane",[8460]],["pointint",[10773]],["popf",[120161]],["Popf",[8473]],["pound",[163]],["prap",[10935]],["Pr",[10939]],["pr",[8826]],["prcue",[8828]],["precapprox",[10935]],["prec",[8826]],["preccurlyeq",[8828]],["Precedes",[8826]],["PrecedesEqual",[10927]],["PrecedesSlantEqual",[8828]],["PrecedesTilde",[8830]],["preceq",[10927]],["precnapprox",[10937]],["precneqq",[10933]],["precnsim",[8936]],["pre",[10927]],["prE",[10931]],["precsim",[8830]],["prime",[8242]],["Prime",[8243]],["primes",[8473]],["prnap",[10937]],["prnE",[10933]],["prnsim",[8936]],["prod",[8719]],["Product",[8719]],["profalar",[9006]],["profline",[8978]],["profsurf",[8979]],["prop",[8733]],["Proportional",[8733]],["Proportion",[8759]],["propto",[8733]],["prsim",[8830]],["prurel",[8880]],["Pscr",[119979]],["pscr",[120005]],["Psi",[936]],["psi",[968]],["puncsp",[8200]],["Qfr",[120084]],["qfr",[120110]],["qint",[10764]],["qopf",[120162]],["Qopf",[8474]],["qprime",[8279]],["Qscr",[119980]],["qscr",[120006]],["quaternions",[8461]],["quatint",[10774]],["quest",[63]],["questeq",[8799]],["quot",[34]],["QUOT",[34]],["rAarr",[8667]],["race",[8765,817]],["Racute",[340]],["racute",[341]],["radic",[8730]],["raemptyv",[10675]],["rang",[10217]],["Rang",[10219]],["rangd",[10642]],["range",[10661]],["rangle",[10217]],["raquo",[187]],["rarrap",[10613]],["rarrb",[8677]],["rarrbfs",[10528]],["rarrc",[10547]],["rarr",[8594]],["Rarr",[8608]],["rArr",[8658]],["rarrfs",[10526]],["rarrhk",[8618]],["rarrlp",[8620]],["rarrpl",[10565]],["rarrsim",[10612]],["Rarrtl",[10518]],["rarrtl",[8611]],["rarrw",[8605]],["ratail",[10522]],["rAtail",[10524]],["ratio",[8758]],["rationals",[8474]],["rbarr",[10509]],["rBarr",[10511]],["RBarr",[10512]],["rbbrk",[10099]],["rbrace",[125]],["rbrack",[93]],["rbrke",[10636]],["rbrksld",[10638]],["rbrkslu",[10640]],["Rcaron",[344]],["rcaron",[345]],["Rcedil",[342]],["rcedil",[343]],["rceil",[8969]],["rcub",[125]],["Rcy",[1056]],["rcy",[1088]],["rdca",[10551]],["rdldhar",[10601]],["rdquo",[8221]],["rdquor",[8221]],["CloseCurlyDoubleQuote",[8221]],["rdsh",[8627]],["real",[8476]],["realine",[8475]],["realpart",[8476]],["reals",[8477]],["Re",[8476]],["rect",[9645]],["reg",[174]],["REG",[174]],["ReverseElement",[8715]],["ReverseEquilibrium",[8651]],["ReverseUpEquilibrium",[10607]],["rfisht",[10621]],["rfloor",[8971]],["rfr",[120111]],["Rfr",[8476]],["rHar",[10596]],["rhard",[8641]],["rharu",[8640]],["rharul",[10604]],["Rho",[929]],["rho",[961]],["rhov",[1009]],["RightAngleBracket",[10217]],["RightArrowBar",[8677]],["rightarrow",[8594]],["RightArrow",[8594]],["Rightarrow",[8658]],["RightArrowLeftArrow",[8644]],["rightarrowtail",[8611]],["RightCeiling",[8969]],["RightDoubleBracket",[10215]],["RightDownTeeVector",[10589]],["RightDownVectorBar",[10581]],["RightDownVector",[8642]],["RightFloor",[8971]],["rightharpoondown",[8641]],["rightharpoonup",[8640]],["rightleftarrows",[8644]],["rightleftharpoons",[8652]],["rightrightarrows",[8649]],["rightsquigarrow",[8605]],["RightTeeArrow",[8614]],["RightTee",[8866]],["RightTeeVector",[10587]],["rightthreetimes",[8908]],["RightTriangleBar",[10704]],["RightTriangle",[8883]],["RightTriangleEqual",[8885]],["RightUpDownVector",[10575]],["RightUpTeeVector",[10588]],["RightUpVectorBar",[10580]],["RightUpVector",[8638]],["RightVectorBar",[10579]],["RightVector",[8640]],["ring",[730]],["risingdotseq",[8787]],["rlarr",[8644]],["rlhar",[8652]],["rlm",[8207]],["rmoustache",[9137]],["rmoust",[9137]],["rnmid",[10990]],["roang",[10221]],["roarr",[8702]],["robrk",[10215]],["ropar",[10630]],["ropf",[120163]],["Ropf",[8477]],["roplus",[10798]],["rotimes",[10805]],["RoundImplies",[10608]],["rpar",[41]],["rpargt",[10644]],["rppolint",[10770]],["rrarr",[8649]],["Rrightarrow",[8667]],["rsaquo",[8250]],["rscr",[120007]],["Rscr",[8475]],["rsh",[8625]],["Rsh",[8625]],["rsqb",[93]],["rsquo",[8217]],["rsquor",[8217]],["CloseCurlyQuote",[8217]],["rthree",[8908]],["rtimes",[8906]],["rtri",[9657]],["rtrie",[8885]],["rtrif",[9656]],["rtriltri",[10702]],["RuleDelayed",[10740]],["ruluhar",[10600]],["rx",[8478]],["Sacute",[346]],["sacute",[347]],["sbquo",[8218]],["scap",[10936]],["Scaron",[352]],["scaron",[353]],["Sc",[10940]],["sc",[8827]],["sccue",[8829]],["sce",[10928]],["scE",[10932]],["Scedil",[350]],["scedil",[351]],["Scirc",[348]],["scirc",[349]],["scnap",[10938]],["scnE",[10934]],["scnsim",[8937]],["scpolint",[10771]],["scsim",[8831]],["Scy",[1057]],["scy",[1089]],["sdotb",[8865]],["sdot",[8901]],["sdote",[10854]],["searhk",[10533]],["searr",[8600]],["seArr",[8664]],["searrow",[8600]],["sect",[167]],["semi",[59]],["seswar",[10537]],["setminus",[8726]],["setmn",[8726]],["sext",[10038]],["Sfr",[120086]],["sfr",[120112]],["sfrown",[8994]],["sharp",[9839]],["SHCHcy",[1065]],["shchcy",[1097]],["SHcy",[1064]],["shcy",[1096]],["ShortDownArrow",[8595]],["ShortLeftArrow",[8592]],["shortmid",[8739]],["shortparallel",[8741]],["ShortRightArrow",[8594]],["ShortUpArrow",[8593]],["shy",[173]],["Sigma",[931]],["sigma",[963]],["sigmaf",[962]],["sigmav",[962]],["sim",[8764]],["simdot",[10858]],["sime",[8771]],["simeq",[8771]],["simg",[10910]],["simgE",[10912]],["siml",[10909]],["simlE",[10911]],["simne",[8774]],["simplus",[10788]],["simrarr",[10610]],["slarr",[8592]],["SmallCircle",[8728]],["smallsetminus",[8726]],["smashp",[10803]],["smeparsl",[10724]],["smid",[8739]],["smile",[8995]],["smt",[10922]],["smte",[10924]],["smtes",[10924,65024]],["SOFTcy",[1068]],["softcy",[1100]],["solbar",[9023]],["solb",[10692]],["sol",[47]],["Sopf",[120138]],["sopf",[120164]],["spades",[9824]],["spadesuit",[9824]],["spar",[8741]],["sqcap",[8851]],["sqcaps",[8851,65024]],["sqcup",[8852]],["sqcups",[8852,65024]],["Sqrt",[8730]],["sqsub",[8847]],["sqsube",[8849]],["sqsubset",[8847]],["sqsubseteq",[8849]],["sqsup",[8848]],["sqsupe",[8850]],["sqsupset",[8848]],["sqsupseteq",[8850]],["square",[9633]],["Square",[9633]],["SquareIntersection",[8851]],["SquareSubset",[8847]],["SquareSubsetEqual",[8849]],["SquareSuperset",[8848]],["SquareSupersetEqual",[8850]],["SquareUnion",[8852]],["squarf",[9642]],["squ",[9633]],["squf",[9642]],["srarr",[8594]],["Sscr",[119982]],["sscr",[120008]],["ssetmn",[8726]],["ssmile",[8995]],["sstarf",[8902]],["Star",[8902]],["star",[9734]],["starf",[9733]],["straightepsilon",[1013]],["straightphi",[981]],["strns",[175]],["sub",[8834]],["Sub",[8912]],["subdot",[10941]],["subE",[10949]],["sube",[8838]],["subedot",[10947]],["submult",[10945]],["subnE",[10955]],["subne",[8842]],["subplus",[10943]],["subrarr",[10617]],["subset",[8834]],["Subset",[8912]],["subseteq",[8838]],["subseteqq",[10949]],["SubsetEqual",[8838]],["subsetneq",[8842]],["subsetneqq",[10955]],["subsim",[10951]],["subsub",[10965]],["subsup",[10963]],["succapprox",[10936]],["succ",[8827]],["succcurlyeq",[8829]],["Succeeds",[8827]],["SucceedsEqual",[10928]],["SucceedsSlantEqual",[8829]],["SucceedsTilde",[8831]],["succeq",[10928]],["succnapprox",[10938]],["succneqq",[10934]],["succnsim",[8937]],["succsim",[8831]],["SuchThat",[8715]],["sum",[8721]],["Sum",[8721]],["sung",[9834]],["sup1",[185]],["sup2",[178]],["sup3",[179]],["sup",[8835]],["Sup",[8913]],["supdot",[10942]],["supdsub",[10968]],["supE",[10950]],["supe",[8839]],["supedot",[10948]],["Superset",[8835]],["SupersetEqual",[8839]],["suphsol",[10185]],["suphsub",[10967]],["suplarr",[10619]],["supmult",[10946]],["supnE",[10956]],["supne",[8843]],["supplus",[10944]],["supset",[8835]],["Supset",[8913]],["supseteq",[8839]],["supseteqq",[10950]],["supsetneq",[8843]],["supsetneqq",[10956]],["supsim",[10952]],["supsub",[10964]],["supsup",[10966]],["swarhk",[10534]],["swarr",[8601]],["swArr",[8665]],["swarrow",[8601]],["swnwar",[10538]],["szlig",[223]],["Tab",[9]],["target",[8982]],["Tau",[932]],["tau",[964]],["tbrk",[9140]],["Tcaron",[356]],["tcaron",[357]],["Tcedil",[354]],["tcedil",[355]],["Tcy",[1058]],["tcy",[1090]],["tdot",[8411]],["telrec",[8981]],["Tfr",[120087]],["tfr",[120113]],["there4",[8756]],["therefore",[8756]],["Therefore",[8756]],["Theta",[920]],["theta",[952]],["thetasym",[977]],["thetav",[977]],["thickapprox",[8776]],["thicksim",[8764]],["ThickSpace",[8287,8202]],["ThinSpace",[8201]],["thinsp",[8201]],["thkap",[8776]],["thksim",[8764]],["THORN",[222]],["thorn",[254]],["tilde",[732]],["Tilde",[8764]],["TildeEqual",[8771]],["TildeFullEqual",[8773]],["TildeTilde",[8776]],["timesbar",[10801]],["timesb",[8864]],["times",[215]],["timesd",[10800]],["tint",[8749]],["toea",[10536]],["topbot",[9014]],["topcir",[10993]],["top",[8868]],["Topf",[120139]],["topf",[120165]],["topfork",[10970]],["tosa",[10537]],["tprime",[8244]],["trade",[8482]],["TRADE",[8482]],["triangle",[9653]],["triangledown",[9663]],["triangleleft",[9667]],["trianglelefteq",[8884]],["triangleq",[8796]],["triangleright",[9657]],["trianglerighteq",[8885]],["tridot",[9708]],["trie",[8796]],["triminus",[10810]],["TripleDot",[8411]],["triplus",[10809]],["trisb",[10701]],["tritime",[10811]],["trpezium",[9186]],["Tscr",[119983]],["tscr",[120009]],["TScy",[1062]],["tscy",[1094]],["TSHcy",[1035]],["tshcy",[1115]],["Tstrok",[358]],["tstrok",[359]],["twixt",[8812]],["twoheadleftarrow",[8606]],["twoheadrightarrow",[8608]],["Uacute",[218]],["uacute",[250]],["uarr",[8593]],["Uarr",[8607]],["uArr",[8657]],["Uarrocir",[10569]],["Ubrcy",[1038]],["ubrcy",[1118]],["Ubreve",[364]],["ubreve",[365]],["Ucirc",[219]],["ucirc",[251]],["Ucy",[1059]],["ucy",[1091]],["udarr",[8645]],["Udblac",[368]],["udblac",[369]],["udhar",[10606]],["ufisht",[10622]],["Ufr",[120088]],["ufr",[120114]],["Ugrave",[217]],["ugrave",[249]],["uHar",[10595]],["uharl",[8639]],["uharr",[8638]],["uhblk",[9600]],["ulcorn",[8988]],["ulcorner",[8988]],["ulcrop",[8975]],["ultri",[9720]],["Umacr",[362]],["umacr",[363]],["uml",[168]],["UnderBar",[95]],["UnderBrace",[9183]],["UnderBracket",[9141]],["UnderParenthesis",[9181]],["Union",[8899]],["UnionPlus",[8846]],["Uogon",[370]],["uogon",[371]],["Uopf",[120140]],["uopf",[120166]],["UpArrowBar",[10514]],["uparrow",[8593]],["UpArrow",[8593]],["Uparrow",[8657]],["UpArrowDownArrow",[8645]],["updownarrow",[8597]],["UpDownArrow",[8597]],["Updownarrow",[8661]],["UpEquilibrium",[10606]],["upharpoonleft",[8639]],["upharpoonright",[8638]],["uplus",[8846]],["UpperLeftArrow",[8598]],["UpperRightArrow",[8599]],["upsi",[965]],["Upsi",[978]],["upsih",[978]],["Upsilon",[933]],["upsilon",[965]],["UpTeeArrow",[8613]],["UpTee",[8869]],["upuparrows",[8648]],["urcorn",[8989]],["urcorner",[8989]],["urcrop",[8974]],["Uring",[366]],["uring",[367]],["urtri",[9721]],["Uscr",[119984]],["uscr",[120010]],["utdot",[8944]],["Utilde",[360]],["utilde",[361]],["utri",[9653]],["utrif",[9652]],["uuarr",[8648]],["Uuml",[220]],["uuml",[252]],["uwangle",[10663]],["vangrt",[10652]],["varepsilon",[1013]],["varkappa",[1008]],["varnothing",[8709]],["varphi",[981]],["varpi",[982]],["varpropto",[8733]],["varr",[8597]],["vArr",[8661]],["varrho",[1009]],["varsigma",[962]],["varsubsetneq",[8842,65024]],["varsubsetneqq",[10955,65024]],["varsupsetneq",[8843,65024]],["varsupsetneqq",[10956,65024]],["vartheta",[977]],["vartriangleleft",[8882]],["vartriangleright",[8883]],["vBar",[10984]],["Vbar",[10987]],["vBarv",[10985]],["Vcy",[1042]],["vcy",[1074]],["vdash",[8866]],["vDash",[8872]],["Vdash",[8873]],["VDash",[8875]],["Vdashl",[10982]],["veebar",[8891]],["vee",[8744]],["Vee",[8897]],["veeeq",[8794]],["vellip",[8942]],["verbar",[124]],["Verbar",[8214]],["vert",[124]],["Vert",[8214]],["VerticalBar",[8739]],["VerticalLine",[124]],["VerticalSeparator",[10072]],["VerticalTilde",[8768]],["VeryThinSpace",[8202]],["Vfr",[120089]],["vfr",[120115]],["vltri",[8882]],["vnsub",[8834,8402]],["vnsup",[8835,8402]],["Vopf",[120141]],["vopf",[120167]],["vprop",[8733]],["vrtri",[8883]],["Vscr",[119985]],["vscr",[120011]],["vsubnE",[10955,65024]],["vsubne",[8842,65024]],["vsupnE",[10956,65024]],["vsupne",[8843,65024]],["Vvdash",[8874]],["vzigzag",[10650]],["Wcirc",[372]],["wcirc",[373]],["wedbar",[10847]],["wedge",[8743]],["Wedge",[8896]],["wedgeq",[8793]],["weierp",[8472]],["Wfr",[120090]],["wfr",[120116]],["Wopf",[120142]],["wopf",[120168]],["wp",[8472]],["wr",[8768]],["wreath",[8768]],["Wscr",[119986]],["wscr",[120012]],["xcap",[8898]],["xcirc",[9711]],["xcup",[8899]],["xdtri",[9661]],["Xfr",[120091]],["xfr",[120117]],["xharr",[10231]],["xhArr",[10234]],["Xi",[926]],["xi",[958]],["xlarr",[10229]],["xlArr",[10232]],["xmap",[10236]],["xnis",[8955]],["xodot",[10752]],["Xopf",[120143]],["xopf",[120169]],["xoplus",[10753]],["xotime",[10754]],["xrarr",[10230]],["xrArr",[10233]],["Xscr",[119987]],["xscr",[120013]],["xsqcup",[10758]],["xuplus",[10756]],["xutri",[9651]],["xvee",[8897]],["xwedge",[8896]],["Yacute",[221]],["yacute",[253]],["YAcy",[1071]],["yacy",[1103]],["Ycirc",[374]],["ycirc",[375]],["Ycy",[1067]],["ycy",[1099]],["yen",[165]],["Yfr",[120092]],["yfr",[120118]],["YIcy",[1031]],["yicy",[1111]],["Yopf",[120144]],["yopf",[120170]],["Yscr",[119988]],["yscr",[120014]],["YUcy",[1070]],["yucy",[1102]],["yuml",[255]],["Yuml",[376]],["Zacute",[377]],["zacute",[378]],["Zcaron",[381]],["zcaron",[382]],["Zcy",[1047]],["zcy",[1079]],["Zdot",[379]],["zdot",[380]],["zeetrf",[8488]],["ZeroWidthSpace",[8203]],["Zeta",[918]],["zeta",[950]],["zfr",[120119]],["Zfr",[8488]],["ZHcy",[1046]],["zhcy",[1078]],["zigrarr",[8669]],["zopf",[120171]],["Zopf",[8484]],["Zscr",[119989]],["zscr",[120015]],["zwj",[8205]],["zwnj",[8204]]],r={},u={};function o(){}!function(e,t){var r=n.length,u=[];for(;r--;){var o,i=n[r],a=i[0],l=i[1],c=l[0],s=c<32||c>126||62===c||60===c||38===c||34===c||39===c;if(s&&(o=t[c]=t[c]||{}),l[1]){var f=l[1];e[a]=String.fromCharCode(c)+String.fromCharCode(f),u.push(s&&(o[f]=a))}else e[a]=String.fromCharCode(c),u.push(s&&(o[""]=a))}}(r,u),o.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,function(e,t){var n;if("#"===t.charAt(0)){var u="x"===t.charAt(1)?parseInt(t.substr(2).toLowerCase(),16):parseInt(t.substr(1));isNaN(u)||u<-32768||u>65535||(n=String.fromCharCode(u))}else n=r[t];return n||e}):""},o.decode=function(e){return(new o).decode(e)},o.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=u[e.charCodeAt(r)];if(o){var i=o[e.charCodeAt(r+1)];if(i?r++:i=o[""],i){n+="&"+i+";",r++;continue}}n+=e.charAt(r),r++}return n},o.encode=function(e){return(new o).encode(e)},o.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var o=e.charCodeAt(r),i=u[o];if(i){var a=i[e.charCodeAt(r+1)];if(a?r++:a=i[""],a){n+="&"+a+";",r++;continue}}n+=o<32||o>126?"&#"+o+";":e.charAt(r),r++}return n},o.encodeNonUTF=function(e){return(new o).encodeNonUTF(e)},o.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r);u<=255?n+=e[r++]:(n+="&#"+u+";",r++)}return n},o.encodeNonASCII=function(e){return(new o).encodeNonASCII(e)},e.exports=o},function(e,t){!function(){"use strict";var t,n,r,u,o,i;function a(e){return e<=65535?String.fromCharCode(e):String.fromCharCode(Math.floor((e-65536)/1024)+55296)+String.fromCharCode((e-65536)%1024+56320)}for(n={NonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/,NonAsciiIdentifierPart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19D9\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u2E2F\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099\\u309A\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]/},t={NonAsciiIdentifierStart:/[\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B2\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58\\u0C59\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D60\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19C1-\\u19C7\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF98]|\\uD809[\\uDC00-\\uDC6E]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD87E[\\uDC00-\\uDE1D]/,NonAsciiIdentifierPart:/[\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B2\\u08E4-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58\\u0C59\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D60-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F4\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FCC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA69D\\uA69F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA78E\\uA790-\\uA7AD\\uA7B0\\uA7B1\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB5F\\uAB64\\uAB65\\uABC0-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2D\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDD0-\\uDDDA\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF01-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF98]|\\uD809[\\uDC00-\\uDC6E]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF]/},r=[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279],u=new Array(128),i=0;i<128;++i)u[i]=i>=97&&i<=122||i>=65&&i<=90||36===i||95===i;for(o=new Array(128),i=0;i<128;++i)o[i]=i>=97&&i<=122||i>=65&&i<=90||i>=48&&i<=57||36===i||95===i;e.exports={isDecimalDigit:function(e){return 48<=e&&e<=57},isHexDigit:function(e){return 48<=e&&e<=57||97<=e&&e<=102||65<=e&&e<=70},isOctalDigit:function(e){return e>=48&&e<=55},isWhiteSpace:function(e){return 32===e||9===e||11===e||12===e||160===e||e>=5760&&r.indexOf(e)>=0},isLineTerminator:function(e){return 10===e||13===e||8232===e||8233===e},isIdentifierStartES5:function(e){return e<128?u[e]:n.NonAsciiIdentifierStart.test(a(e))},isIdentifierPartES5:function(e){return e<128?o[e]:n.NonAsciiIdentifierPart.test(a(e))},isIdentifierStartES6:function(e){return e<128?u[e]:t.NonAsciiIdentifierStart.test(a(e))},isIdentifierPartES6:function(e){return e<128?o[e]:t.NonAsciiIdentifierPart.test(a(e))}}}()},function(e,t,n){var r=n(198),u={};for(var o in r)r.hasOwnProperty(o)&&(u[r[o]]=o);var i=e.exports={rgb:{channels:3,labels:"rgb"},hsl:{channels:3,labels:"hsl"},hsv:{channels:3,labels:"hsv"},hwb:{channels:3,labels:"hwb"},cmyk:{channels:4,labels:"cmyk"},xyz:{channels:3,labels:"xyz"},lab:{channels:3,labels:"lab"},lch:{channels:3,labels:"lch"},hex:{channels:1,labels:["hex"]},keyword:{channels:1,labels:["keyword"]},ansi16:{channels:1,labels:["ansi16"]},ansi256:{channels:1,labels:["ansi256"]},hcg:{channels:3,labels:["h","c","g"]},apple:{channels:3,labels:["r16","g16","b16"]},gray:{channels:1,labels:["gray"]}};for(var a in i)if(i.hasOwnProperty(a)){if(!("channels"in i[a]))throw new Error("missing channels property: "+a);if(!("labels"in i[a]))throw new Error("missing channel labels property: "+a);if(i[a].labels.length!==i[a].channels)throw new Error("channel and label counts mismatch: "+a);var l=i[a].channels,c=i[a].labels;delete i[a].channels,delete i[a].labels,Object.defineProperty(i[a],"channels",{value:l}),Object.defineProperty(i[a],"labels",{value:c})}i.rgb.hsl=function(e){var t,n,r=e[0]/255,u=e[1]/255,o=e[2]/255,i=Math.min(r,u,o),a=Math.max(r,u,o),l=a-i;return a===i?t=0:r===a?t=(u-o)/l:u===a?t=2+(o-r)/l:o===a&&(t=4+(r-u)/l),(t=Math.min(60*t,360))<0&&(t+=360),n=(i+a)/2,[t,100*(a===i?0:n<=.5?l/(a+i):l/(2-a-i)),100*n]},i.rgb.hsv=function(e){var t,n,r,u,o,i=e[0]/255,a=e[1]/255,l=e[2]/255,c=Math.max(i,a,l),s=c-Math.min(i,a,l),f=function(e){return(c-e)/6/s+.5};return 0===s?u=o=0:(o=s/c,t=f(i),n=f(a),r=f(l),i===c?u=r-n:a===c?u=1/3+t-r:l===c&&(u=2/3+n-t),u<0?u+=1:u>1&&(u-=1)),[360*u,100*o,100*c]},i.rgb.hwb=function(e){var t=e[0],n=e[1],r=e[2];return[i.rgb.hsl(e)[0],100*(1/255*Math.min(t,Math.min(n,r))),100*(r=1-1/255*Math.max(t,Math.max(n,r)))]},i.rgb.cmyk=function(e){var t,n=e[0]/255,r=e[1]/255,u=e[2]/255;return[100*((1-n-(t=Math.min(1-n,1-r,1-u)))/(1-t)||0),100*((1-r-t)/(1-t)||0),100*((1-u-t)/(1-t)||0),100*t]},i.rgb.keyword=function(e){var t=u[e];if(t)return t;var n,o,i,a=1/0;for(var l in r)if(r.hasOwnProperty(l)){var c=r[l],s=(o=e,i=c,Math.pow(o[0]-i[0],2)+Math.pow(o[1]-i[1],2)+Math.pow(o[2]-i[2],2));s<a&&(a=s,n=l)}return n},i.keyword.rgb=function(e){return r[e]},i.rgb.xyz=function(e){var t=e[0]/255,n=e[1]/255,r=e[2]/255;return[100*(.4124*(t=t>.04045?Math.pow((t+.055)/1.055,2.4):t/12.92)+.3576*(n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(r=r>.04045?Math.pow((r+.055)/1.055,2.4):r/12.92)),100*(.2126*t+.7152*n+.0722*r),100*(.0193*t+.1192*n+.9505*r)]},i.rgb.lab=function(e){var t=i.rgb.xyz(e),n=t[0],r=t[1],u=t[2];return r/=100,u/=108.883,n=(n/=95.047)>.008856?Math.pow(n,1/3):7.787*n+16/116,[116*(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116)-16,500*(n-r),200*(r-(u=u>.008856?Math.pow(u,1/3):7.787*u+16/116))]},i.hsl.rgb=function(e){var t,n,r,u,o,i=e[0]/360,a=e[1]/100,l=e[2]/100;if(0===a)return[o=255*l,o,o];t=2*l-(n=l<.5?l*(1+a):l+a-l*a),u=[0,0,0];for(var c=0;c<3;c++)(r=i+1/3*-(c-1))<0&&r++,r>1&&r--,o=6*r<1?t+6*(n-t)*r:2*r<1?n:3*r<2?t+(n-t)*(2/3-r)*6:t,u[c]=255*o;return u},i.hsl.hsv=function(e){var t=e[0],n=e[1]/100,r=e[2]/100,u=n,o=Math.max(r,.01);return n*=(r*=2)<=1?r:2-r,u*=o<=1?o:2-o,[t,100*(0===r?2*u/(o+u):2*n/(r+n)),100*((r+n)/2)]},i.hsv.rgb=function(e){var t=e[0]/60,n=e[1]/100,r=e[2]/100,u=Math.floor(t)%6,o=t-Math.floor(t),i=255*r*(1-n),a=255*r*(1-n*o),l=255*r*(1-n*(1-o));switch(r*=255,u){case 0:return[r,l,i];case 1:return[a,r,i];case 2:return[i,r,l];case 3:return[i,a,r];case 4:return[l,i,r];case 5:return[r,i,a]}},i.hsv.hsl=function(e){var t,n,r,u=e[0],o=e[1]/100,i=e[2]/100,a=Math.max(i,.01);return r=(2-o)*i,n=o*a,[u,100*(n=(n/=(t=(2-o)*a)<=1?t:2-t)||0),100*(r/=2)]},i.hwb.rgb=function(e){var t,n,r,u,o,i,a,l=e[0]/360,c=e[1]/100,s=e[2]/100,f=c+s;switch(f>1&&(c/=f,s/=f),r=6*l-(t=Math.floor(6*l)),0!==(1&t)&&(r=1-r),u=c+r*((n=1-s)-c),t){default:case 6:case 0:o=n,i=u,a=c;break;case 1:o=u,i=n,a=c;break;case 2:o=c,i=n,a=u;break;case 3:o=c,i=u,a=n;break;case 4:o=u,i=c,a=n;break;case 5:o=n,i=c,a=u}return[255*o,255*i,255*a]},i.cmyk.rgb=function(e){var t=e[0]/100,n=e[1]/100,r=e[2]/100,u=e[3]/100;return[255*(1-Math.min(1,t*(1-u)+u)),255*(1-Math.min(1,n*(1-u)+u)),255*(1-Math.min(1,r*(1-u)+u))]},i.xyz.rgb=function(e){var t,n,r,u=e[0]/100,o=e[1]/100,i=e[2]/100;return n=-.9689*u+1.8758*o+.0415*i,r=.0557*u+-.204*o+1.057*i,t=(t=3.2406*u+-1.5372*o+-.4986*i)>.0031308?1.055*Math.pow(t,1/2.4)-.055:12.92*t,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:12.92*n,r=r>.0031308?1.055*Math.pow(r,1/2.4)-.055:12.92*r,[255*(t=Math.min(Math.max(0,t),1)),255*(n=Math.min(Math.max(0,n),1)),255*(r=Math.min(Math.max(0,r),1))]},i.xyz.lab=function(e){var t=e[0],n=e[1],r=e[2];return n/=100,r/=108.883,t=(t/=95.047)>.008856?Math.pow(t,1/3):7.787*t+16/116,[116*(n=n>.008856?Math.pow(n,1/3):7.787*n+16/116)-16,500*(t-n),200*(n-(r=r>.008856?Math.pow(r,1/3):7.787*r+16/116))]},i.lab.xyz=function(e){var t,n,r,u=e[0];t=e[1]/500+(n=(u+16)/116),r=n-e[2]/200;var o=Math.pow(n,3),i=Math.pow(t,3),a=Math.pow(r,3);return n=o>.008856?o:(n-16/116)/7.787,t=i>.008856?i:(t-16/116)/7.787,r=a>.008856?a:(r-16/116)/7.787,[t*=95.047,n*=100,r*=108.883]},i.lab.lch=function(e){var t,n=e[0],r=e[1],u=e[2];return(t=360*Math.atan2(u,r)/2/Math.PI)<0&&(t+=360),[n,Math.sqrt(r*r+u*u),t]},i.lch.lab=function(e){var t,n=e[0],r=e[1];return t=e[2]/360*2*Math.PI,[n,r*Math.cos(t),r*Math.sin(t)]},i.rgb.ansi16=function(e){var t=e[0],n=e[1],r=e[2],u=1 in arguments?arguments[1]:i.rgb.hsv(e)[2];if(0===(u=Math.round(u/50)))return 30;var o=30+(Math.round(r/255)<<2|Math.round(n/255)<<1|Math.round(t/255));return 2===u&&(o+=60),o},i.hsv.ansi16=function(e){return i.rgb.ansi16(i.hsv.rgb(e),e[2])},i.rgb.ansi256=function(e){var t=e[0],n=e[1],r=e[2];return t===n&&n===r?t<8?16:t>248?231:Math.round((t-8)/247*24)+232:16+36*Math.round(t/255*5)+6*Math.round(n/255*5)+Math.round(r/255*5)},i.ansi16.rgb=function(e){var t=e%10;if(0===t||7===t)return e>50&&(t+=3.5),[t=t/10.5*255,t,t];var n=.5*(1+~~(e>50));return[(1&t)*n*255,(t>>1&1)*n*255,(t>>2&1)*n*255]},i.ansi256.rgb=function(e){if(e>=232){var t=10*(e-232)+8;return[t,t,t]}var n;return e-=16,[Math.floor(e/36)/5*255,Math.floor((n=e%36)/6)/5*255,n%6/5*255]},i.rgb.hex=function(e){var t=(((255&Math.round(e[0]))<<16)+((255&Math.round(e[1]))<<8)+(255&Math.round(e[2]))).toString(16).toUpperCase();return"000000".substring(t.length)+t},i.hex.rgb=function(e){var t=e.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);if(!t)return[0,0,0];var n=t[0];3===t[0].length&&(n=n.split("").map(function(e){return e+e}).join(""));var r=parseInt(n,16);return[r>>16&255,r>>8&255,255&r]},i.rgb.hcg=function(e){var t,n=e[0]/255,r=e[1]/255,u=e[2]/255,o=Math.max(Math.max(n,r),u),i=Math.min(Math.min(n,r),u),a=o-i;return t=a<=0?0:o===n?(r-u)/a%6:o===r?2+(u-n)/a:4+(n-r)/a+4,t/=6,[360*(t%=1),100*a,100*(a<1?i/(1-a):0)]},i.hsl.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=1,u=0;return(r=n<.5?2*t*n:2*t*(1-n))<1&&(u=(n-.5*r)/(1-r)),[e[0],100*r,100*u]},i.hsv.hcg=function(e){var t=e[1]/100,n=e[2]/100,r=t*n,u=0;return r<1&&(u=(n-r)/(1-r)),[e[0],100*r,100*u]},i.hcg.rgb=function(e){var t=e[0]/360,n=e[1]/100,r=e[2]/100;if(0===n)return[255*r,255*r,255*r];var u,o=[0,0,0],i=t%1*6,a=i%1,l=1-a;switch(Math.floor(i)){case 0:o[0]=1,o[1]=a,o[2]=0;break;case 1:o[0]=l,o[1]=1,o[2]=0;break;case 2:o[0]=0,o[1]=1,o[2]=a;break;case 3:o[0]=0,o[1]=l,o[2]=1;break;case 4:o[0]=a,o[1]=0,o[2]=1;break;default:o[0]=1,o[1]=0,o[2]=l}return u=(1-n)*r,[255*(n*o[0]+u),255*(n*o[1]+u),255*(n*o[2]+u)]},i.hcg.hsv=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t),r=0;return n>0&&(r=t/n),[e[0],100*r,100*n]},i.hcg.hsl=function(e){var t=e[1]/100,n=e[2]/100*(1-t)+.5*t,r=0;return n>0&&n<.5?r=t/(2*n):n>=.5&&n<1&&(r=t/(2*(1-n))),[e[0],100*r,100*n]},i.hcg.hwb=function(e){var t=e[1]/100,n=t+e[2]/100*(1-t);return[e[0],100*(n-t),100*(1-n)]},i.hwb.hcg=function(e){var t=e[1]/100,n=1-e[2]/100,r=n-t,u=0;return r<1&&(u=(n-r)/(1-r)),[e[0],100*r,100*u]},i.apple.rgb=function(e){return[e[0]/65535*255,e[1]/65535*255,e[2]/65535*255]},i.rgb.apple=function(e){return[e[0]/255*65535,e[1]/255*65535,e[2]/255*65535]},i.gray.rgb=function(e){return[e[0]/100*255,e[0]/100*255,e[0]/100*255]},i.gray.hsl=i.gray.hsv=function(e){return[0,0,e[0]]},i.gray.hwb=function(e){return[0,100,e[0]]},i.gray.cmyk=function(e){return[0,0,0,e[0]]},i.gray.lab=function(e){return[e[0],0,0]},i.gray.hex=function(e){var t=255&Math.round(e[0]/100*255),n=((t<<16)+(t<<8)+t).toString(16).toUpperCase();return"000000".substring(n.length)+n},i.rgb.gray=function(e){return[(e[0]+e[1]+e[2])/3/255*100]}},function(e,t,n){e.exports={XmlEntities:n(182),Html4Entities:n(183),Html5Entities:n(80),AllHtmlEntities:n(80)}},function(e,t,n){"use strict";(function(e){function r(){var e=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n(184));return r=function(){return e},e}Object.defineProperty(t,"__esModule",{value:!0}),t.codeFrameColumns=i,t.default=function(t,n,r){var o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};if(!u){u=!0;var a="Passing lineNumber and colNumber is deprecated to @babel/code-frame. Please use `codeFrameColumns`.";if(e.emitWarning)e.emitWarning(a,"DeprecationWarning");else{var l=new Error(a);l.name="DeprecationWarning",console.warn(new Error(a))}}return r=Math.max(r,0),i(t,{start:{column:r,line:n}},o)};var u=!1;var o=/\\r\\n|[\\n\\r\\u2028\\u2029]/;function i(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{},u=(n.highlightCode||n.forceColor)&&(0,r().shouldHighlight)(n),i=(0,r().getChalk)(n),a=function(e){return{gutter:e.grey,marker:e.red.bold,message:e.red.bold}}(i),l=function(e,t){return u?e(t):t};u&&(e=(0,r().default)(e,n));var c=e.split(o),s=function(e,t,n){var r=Object.assign({column:0,line:-1},e.start),u=Object.assign({},r,e.end),o=n||{},i=o.linesAbove,a=void 0===i?2:i,l=o.linesBelow,c=void 0===l?3:l,s=r.line,f=r.column,d=u.line,p=u.column,h=Math.max(s-(a+1),0),m=Math.min(t.length,d+c);-1===s&&(h=0),-1===d&&(m=t.length);var g=d-s,v={};if(g)for(var y=0;y<=g;y++){var D=y+s;if(f)if(0===y){var b=t[D-1].length;v[D]=[f,b-f]}else if(y===g)v[D]=[0,p];else{var A=t[D-y].length;v[D]=[0,A]}else v[D]=!0}else v[s]=f===p?!f||[f,0]:[f,p-f];return{start:h,end:m,markerLines:v}}(t,c,n),f=s.start,d=s.end,p=s.markerLines,h=t.start&&"number"===typeof t.start.column,m=String(d).length,g=c.slice(f,d).map(function(e,t){var r=f+1+t,u=" ".concat(r).slice(-m),o=" ".concat(u," | "),i=p[r],c=!p[r+1];if(i){var s="";if(Array.isArray(i)){var d=e.slice(0,Math.max(i[0]-1,0)).replace(/[^\\t]/g," "),h=i[1]||1;s=["\\n ",l(a.gutter,o.replace(/\\d/g," ")),d,l(a.marker,"^").repeat(h)].join(""),c&&n.message&&(s+=" "+l(a.message,n.message))}return[l(a.marker,">"),l(a.gutter,o),e,s].join("")}return" ".concat(l(a.gutter,o)).concat(e)}).join("\\n");return n.message&&!h&&(g="".concat(" ".repeat(m+1)).concat(n.message,"\\n").concat(g)),u?i.reset(g):g}}).call(this,n(51))},function(e,t,n){"use strict";n(86),n(72),n(102),n(73),n(104),n(105),n(106),n(107),n(108),n(109),n(110),n(111),n(113),n(114),n(115),n(116),n(117),n(118),n(119),n(120),n(121),n(122),n(124),n(125),n(126),n(127),n(128),n(129),n(130),n(131),n(132),n(133),n(134),n(135),n(136),n(137),n(138),n(139),n(140),n(141),n(145),n(176).polyfill()},function(e,t,n){"use strict";e.exports=n(53)("Map",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},n(68),!0)},function(e,t,n){var r=n(12),u=n(36),o="".split;e.exports=r(function(){return!Object("z").propertyIsEnumerable(0)})?function(e){return"String"==u(e)?o.call(e,""):Object(e)}:Object},function(e,t,n){var r=n(57),u=n(5).WeakMap;e.exports="function"===typeof u&&/native code/.test(r.call(u))},function(e,t,n){var r=n(39),u=n(42),o=n(2),i=n(5).Reflect;e.exports=i&&i.ownKeys||function(e){var t=r.f(o(e)),n=u.f;return n?t.concat(n(e)):t}},function(e,t,n){var r=n(20),u=n(31),o=n(91);e.exports=function(e){return function(t,n,i){var a,l=r(t),c=u(l.length),s=o(i,c);if(e&&n!=n){for(;c>s;)if((a=l[s++])!=a)return!0}else for(;c>s;s++)if((e||s in l)&&l[s]===n)return e||s||0;return!e&&-1}}},function(e,t,n){var r=n(40),u=Math.max,o=Math.min;e.exports=function(e,t){var n=r(e);return n<0?u(n+t,0):o(n,t)}},function(e,t,n){e.exports=!n(12)(function(){return Object.isExtensible(Object.preventExtensions({}))})},function(e,t,n){var r=n(10),u=n(67);e.exports=function(e,t,n){var o,i=t.constructor;return i!==n&&"function"==typeof i&&(o=i.prototype)!==n.prototype&&r(o)&&u&&u(e,o),e}},function(e,t,n){var r=n(10),u=n(2);e.exports=function(e,t){if(u(e),!r(t)&&null!==t)throw TypeError("Can\'t set "+String(t)+" as a prototype")}},function(e,t,n){var r=n(16),u=n(13),o=n(2),i=n(44);e.exports=r?Object.defineProperties:function(e,t){o(e);for(var n,r=i(t),a=r.length,l=0;a>l;)u.f(e,n=r[l++],t[n]);return e}},function(e,t,n){var r=n(5).document;e.exports=r&&r.documentElement},function(e,t,n){var r=n(21);e.exports=function(e,t,n){for(var u in t)r(e,u,t[u],n);return e}},function(e,t,n){"use strict";var r=n(69).IteratorPrototype,u=n(32),o=n(23),i=n(22),a=n(27),l=function(){return this};e.exports=function(e,t,n){var c=t+" Iterator";return e.prototype=u(r,{next:o(1,n)}),i(e,c,!1,!0),a[c]=l,e}},function(e,t,n){e.exports=!n(12)(function(){function e(){}return e.prototype.constructor=null,Object.getPrototypeOf(new e)!==e.prototype})},function(e,t,n){"use strict";var r=n(14),u=n(13),o=n(16),i=n(6)("species");e.exports=function(e){var t=r(e),n=u.f;o&&t&&!t[i]&&n(t,i,{configurable:!0,get:function(){return this}})}},function(e,t,n){"use strict";var r=n(63),u={};u[n(6)("toStringTag")]="z",e.exports="[object z]"!==String(u)?function(){return"[object "+r(this)+"]"}:u.toString},function(e,t,n){"use strict";e.exports=n(53)("Set",function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},n(68))},function(e,t,n){var r=n(40),u=n(37);e.exports=function(e,t,n){var o,i,a=String(u(e)),l=r(t),c=a.length;return l<0||l>=c?n?"":void 0:(o=a.charCodeAt(l))<55296||o>56319||l+1===c||(i=a.charCodeAt(l+1))<56320||i>57343?n?a.charAt(l):o:n?a.slice(l,l+2):i-56320+(o-55296<<10)+65536}},function(e,t,n){"use strict";var r=n(74);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{deleteAll:function(){return r.apply(this,arguments)}})},function(e,t,n){"use strict";var r=n(2),u=n(7),o=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{every:function(e){for(var t,n,i=r(this),a=o(i),l=u(e,arguments.length>1?arguments[1]:void 0,3);!(t=a.next()).done;)if(!l((n=t.value)[1],n[0],i))return!1;return!0}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(7),a=n(18),l=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{filter:function(e){for(var t,n,c,s,f=u(this),d=l(f),p=i(e,arguments.length>1?arguments[1]:void 0,3),h=new(a(f,r("Map"))),m=o(h.set);!(t=d.next()).done;)p(s=(n=t.value)[1],c=n[0],f)&&m.call(h,c,s);return h}})},function(e,t,n){"use strict";var r=n(2),u=n(7),o=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{find:function(e){for(var t,n,i,a=r(this),l=o(a),c=u(e,arguments.length>1?arguments[1]:void 0,3);!(t=l.next()).done;)if(c(i=(n=t.value)[1],n[0],a))return i}})},function(e,t,n){"use strict";var r=n(2),u=n(7),o=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{findKey:function(e){for(var t,n,i,a=r(this),l=o(a),c=u(e,arguments.length>1?arguments[1]:void 0,3);!(t=l.next()).done;)if(c((n=t.value)[1],i=n[0],a))return i}})},function(e,t,n){n(1)({target:"Map",stat:!0},{from:n(75)})},function(e,t,n){"use strict";var r=n(9),u=n(4);n(1)({target:"Map",stat:!0,forced:n(3)},{groupBy:function(e,t){var n=new this;u(t);var o=u(n.has),i=u(n.get),a=u(n.set);return r(e,function(e){var r=t(e);o.call(n,r)?i.call(n,r).push(e):a.call(n,r,[e])}),n}})},function(e,t,n){"use strict";var r=n(2),u=n(15),o=n(112);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{includes:function(e){for(var t,n=r(this),i=u(n);!(t=i.next()).done;)if(o(t.value[1],e))return!0;return!1}})},function(e,t){e.exports=function(e,t){return e===t||e!=e&&t!=t}},function(e,t,n){"use strict";var r=n(9),u=n(4);n(1)({target:"Map",stat:!0,forced:n(3)},{keyBy:function(e,t){var n=new this;u(t);var o=u(n.set);return r(e,function(e){o.call(n,t(e),e)}),n}})},function(e,t,n){"use strict";var r=n(2),u=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{keyOf:function(e){for(var t,n,o=r(this),i=u(o);!(t=i.next()).done;)if((n=t.value)[1]===e)return n[0]}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(7),a=n(18),l=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{mapKeys:function(e){for(var t,n,c,s=u(this),f=l(s),d=i(e,arguments.length>1?arguments[1]:void 0,3),p=new(a(s,r("Map"))),h=o(p.set);!(t=f.next()).done;)n=t.value,h.call(p,d(c=n[1],n[0],s),c);return p}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(7),a=n(18),l=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{mapValues:function(e){for(var t,n,c,s=u(this),f=l(s),d=i(e,arguments.length>1?arguments[1]:void 0,3),p=new(a(s,r("Map"))),h=o(p.set);!(t=f.next()).done;)n=t.value,h.call(p,c=n[0],d(n[1],c,s));return p}})},function(e,t,n){"use strict";var r=n(2),u=n(4),o=n(9);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{merge:function(e){for(var t=r(this),n=u(t.set),i=0;i<arguments.length;)o(arguments[i++],n,t,!0);return t}})},function(e,t,n){n(1)({target:"Map",stat:!0},{of:n(76)})},function(e,t,n){"use strict";var r=n(2),u=n(4),o=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{reduce:function(e){var t,n,i,a=r(this),l=o(a);if(u(e),arguments.length>1)t=arguments[1];else{if((n=l.next()).done)throw TypeError("Reduce of empty map with no initial value");t=n.value[1]}for(;!(n=l.next()).done;)t=e(t,(i=n.value)[1],i[0],a);return t}})},function(e,t,n){"use strict";var r=n(2),u=n(7),o=n(15);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{some:function(e){for(var t,n,i=r(this),a=o(i),l=u(e,arguments.length>1?arguments[1]:void 0,3);!(t=a.next()).done;)if(l((n=t.value)[1],n[0],i))return!0;return!1}})},function(e,t,n){"use strict";var r=n(2),u=n(4);n(1)({target:"Map",proto:!0,real:!0,forced:n(3)},{update:function(e,t){var n=r(this);u(t);var o=n.has(e);if(!o&&arguments.length<3)throw TypeError("Updating absent value");var i=o?n.get(e):u(arguments[2])(e,n);return n.set(e,t(i,e,n)),n}})},function(e,t,n){"use strict";var r=n(123);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{addAll:function(){return r.apply(this,arguments)}})},function(e,t,n){"use strict";var r=n(2),u=n(4);e.exports=function(){for(var e=r(this),t=u(e.add),n=0,o=arguments.length;n<o;n++)t.call(e,arguments[n]);return e}},function(e,t,n){"use strict";var r=n(74);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{deleteAll:function(){return r.apply(this,arguments)}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(18),a=n(9);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{difference:function(e){var t=u(this),n=new(i(t,r("Set")))(t),l=o(n.delete);return a(e,function(e){l.call(n,e)}),n}})},function(e,t,n){"use strict";var r=n(2),u=n(7),o=n(19);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{every:function(e){for(var t,n,i=r(this),a=o(i),l=u(e,arguments.length>1?arguments[1]:void 0,3);!(t=a.next()).done;)if(!l(n=t.value,n,i))return!1;return!0}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(7),a=n(18),l=n(19);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{filter:function(e){for(var t,n,c=u(this),s=l(c),f=i(e,arguments.length>1?arguments[1]:void 0,3),d=new(a(c,r("Set"))),p=o(d.add);!(t=s.next()).done;)f(n=t.value,n,c)&&p.call(d,n);return d}})},function(e,t,n){"use strict";var r=n(2),u=n(7),o=n(19);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{find:function(e){for(var t,n,i=r(this),a=o(i),l=u(e,arguments.length>1?arguments[1]:void 0,3);!(t=a.next()).done;)if(l(n=t.value,n,i))return n}})},function(e,t,n){n(1)({target:"Set",stat:!0},{from:n(75)})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(18),a=n(9);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{intersection:function(e){var t=u(this),n=new(i(t,r("Set"))),l=o(t.has),c=o(n.add);return a(e,function(e){l.call(t,e)&&c.call(n,e)}),n}})},function(e,t,n){"use strict";var r=n(2),u=n(4),o=n(9),i=o.BREAK;n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{isDisjointFrom:function(e){var t=r(this),n=u(t.has);return o(e,function(e){if(!0===n.call(t,e))return i})!==i}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(47),a=n(9),l=a.BREAK;n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{isSubsetOf:function(e){var t=i(this),n=u(e),c=n.has;return"function"!=typeof c&&(n=new(r("Set"))(e),c=o(n.has)),a(t,function(e){if(!1===c.call(n,e))return l},void 0,!1,!0)!==l}})},function(e,t,n){"use strict";var r=n(2),u=n(4),o=n(9),i=o.BREAK;n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{isSupersetOf:function(e){var t=r(this),n=u(t.has);return o(e,function(e){if(!1===n.call(t,e))return i})!==i}})},function(e,t,n){"use strict";var r=n(2),u=n(19);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{join:function(e){for(var t,n=r(this),o=u(n),i=void 0===e?",":String(e),a=[];!(t=o.next()).done;)a.push(t.value);return a.join(i)}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(7),a=n(18),l=n(19);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{map:function(e){for(var t,n,c=u(this),s=l(c),f=i(e,arguments.length>1?arguments[1]:void 0,3),d=new(a(c,r("Set"))),p=o(d.add);!(t=s.next()).done;)p.call(d,f(n=t.value,n,c));return d}})},function(e,t,n){n(1)({target:"Set",stat:!0},{of:n(76)})},function(e,t,n){"use strict";var r=n(2),u=n(4),o=n(19);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{reduce:function(e){var t,n,i,a=r(this),l=o(a);if(u(e),arguments.length>1)t=arguments[1];else{if((n=l.next()).done)throw TypeError("Reduce of empty set with no initial value");t=n.value}for(;!(n=l.next()).done;)t=e(t,i=n.value,i,a);return t}})},function(e,t,n){"use strict";var r=n(2),u=n(7),o=n(19);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{some:function(e){for(var t,n,i=r(this),a=o(i),l=u(e,arguments.length>1?arguments[1]:void 0,3);!(t=a.next()).done;)if(l(n=t.value,n,i))return!0;return!1}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(18),a=n(9);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{symmetricDifference:function(e){var t=u(this),n=new(i(t,r("Set")))(t),l=o(n.delete),c=o(n.add);return a(e,function(e){l.call(n,e)||c.call(n,e)}),n}})},function(e,t,n){"use strict";var r=n(14),u=n(2),o=n(4),i=n(18),a=n(9);n(1)({target:"Set",proto:!0,real:!0,forced:n(3)},{union:function(e){var t=u(this),n=new(i(t,r("Set")))(t);return a(e,o(n.add),n),n}})},function(e,t,n){var r=n(142),u=n(143),o=n(5),i=n(17),a=n(6),l=a("iterator"),c=a("toStringTag"),s=u.values;for(var f in r){var d=o[f],p=d&&d.prototype;if(p){if(p[l]!==s)try{i(p,l,s)}catch(e){p[l]=s}if(p[c]||i(p,c,f),r[f])for(var h in u)if(p[h]!==u[h])try{i(p,h,u[h])}catch(e){p[h]=u[h]}}}},function(e,t){e.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(e,t,n){"use strict";var r=n(20),u=n(144),o=n(27),i=n(25),a=n(45),l=i.set,c=i.getterFor("Array Iterator");e.exports=a(Array,"Array",function(e,t){l(this,{type:"Array Iterator",target:r(e),index:0,kind:t})},function(){var e=c(this),t=e.target,n=e.kind,r=e.index++;return!t||r>=t.length?(e.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:t[r],done:!1}:{value:[r,t[r]],done:!1}},"values"),o.Arguments=o.Array,u("keys"),u("values"),u("entries")},function(e,t,n){var r=n(6)("unscopables"),u=n(32),o=n(17),i=Array.prototype;void 0==i[r]&&o(i,r,u(null)),e.exports=function(e){i[r][e]=!0}},function(e,t,n){"use strict";n(146),n(149),n(150),n(151),n(152),n(153),n(154),n(155),n(156),n(157),n(158),n(159),n(160),n(161),n(162),n(165),n(167),n(168),n(72),n(73),n(169),n(170),n(171),"undefined"===typeof Promise&&(n(172).enable(),self.Promise=n(174)),"undefined"!==typeof window&&n(175),Object.assign=n(50)},function(e,t,n){"use strict";var r=n(5),u=n(11),o=n(16),i=n(3),a=n(1),l=n(21),c=n(26),s=n(12),f=n(24),d=n(22),p=n(30),h=n(6),m=n(77),g=n(8),v=n(147),y=n(48),D=n(2),b=n(10),A=n(20),C=n(28),E=n(23),F=n(32),w=n(148),x=n(34),B=n(13),k=n(35),S=n(17),T=n(44),_=n(29)("hidden"),P=n(25),O=P.set,N=P.getterFor("Symbol"),R=x.f,I=B.f,L=w.f,M=r.Symbol,j=r.JSON,q=j&&j.stringify,U=h("toPrimitive"),z=k.f,H=f("symbol-registry"),V=f("symbols"),W=f("op-symbols"),G=f("wks"),$=Object.prototype,K=r.QObject,Q=n(62),Y=!K||!K.prototype||!K.prototype.findChild,J=o&&s(function(){return 7!=F(I({},"a",{get:function(){return I(this,"a",{value:7}).a}})).a})?function(e,t,n){var r=R($,t);r&&delete $[t],I(e,t,n),r&&e!==$&&I($,t,r)}:I,X=function(e,t){var n=V[e]=F(M.prototype);return O(n,{type:"Symbol",tag:e,description:t}),o||(n.description=t),n},Z=Q&&"symbol"==typeof M.iterator?function(e){return"symbol"==typeof e}:function(e){return Object(e)instanceof M},ee=function(e,t,n){return e===$&&ee(W,t,n),D(e),t=C(t,!0),D(n),u(V,t)?(n.enumerable?(u(e,_)&&e[_][t]&&(e[_][t]=!1),n=F(n,{enumerable:E(0,!1)})):(u(e,_)||I(e,_,E(1,{})),e[_][t]=!0),J(e,t,n)):I(e,t,n)},te=function(e,t){D(e);for(var n,r=v(t=A(t)),u=0,o=r.length;o>u;)ee(e,n=r[u++],t[n]);return e},ne=function(e){var t=z.call(this,e=C(e,!0));return!(this===$&&u(V,e)&&!u(W,e))&&(!(t||!u(this,e)||!u(V,e)||u(this,_)&&this[_][e])||t)},re=function(e,t){if(e=A(e),t=C(t,!0),e!==$||!u(V,t)||u(W,t)){var n=R(e,t);return!n||!u(V,t)||u(e,_)&&e[_][t]||(n.enumerable=!0),n}},ue=function(e){for(var t,n=L(A(e)),r=[],o=0;n.length>o;)u(V,t=n[o++])||u(c,t)||r.push(t);return r},oe=function(e){for(var t,n=e===$,r=L(n?W:A(e)),o=[],i=0;r.length>i;)!u(V,t=r[i++])||n&&!u($,t)||o.push(V[t]);return o};Q||(l((M=function(){if(this instanceof M)throw TypeError("Symbol is not a constructor");var e=void 0===arguments[0]?void 0:String(arguments[0]),t=p(e);return o&&Y&&J($,t,{configurable:!0,set:function e(n){this===$&&e.call(W,n),u(this,_)&&u(this[_],t)&&(this[_][t]=!1),J(this,t,E(1,n))}}),X(t,e)}).prototype,"toString",function(){return N(this).tag}),k.f=ne,B.f=ee,x.f=re,n(39).f=w.f=ue,n(42).f=oe,o&&(I(M.prototype,"description",{configurable:!0,get:function(){return N(this).description}}),i||l($,"propertyIsEnumerable",ne,{unsafe:!0})),m.f=function(e){return X(h(e),e)}),a({global:!0,wrap:!0,forced:!Q,sham:!Q},{Symbol:M});for(var ie=T(G),ae=0;ie.length>ae;)g(ie[ae++]);a({target:"Symbol",stat:!0,forced:!Q},{for:function(e){return u(H,e+="")?H[e]:H[e]=M(e)},keyFor:function(e){if(!Z(e))throw TypeError(e+" is not a symbol");for(var t in H)if(H[t]===e)return t},useSetter:function(){Y=!0},useSimple:function(){Y=!1}}),a({target:"Object",stat:!0,forced:!Q,sham:!o},{create:function(e,t){return void 0===t?F(e):te(F(e),t)},defineProperty:ee,defineProperties:te,getOwnPropertyDescriptor:re}),a({target:"Object",stat:!0,forced:!Q},{getOwnPropertyNames:ue,getOwnPropertySymbols:oe}),j&&a({target:"JSON",stat:!0,forced:!Q||s(function(){var e=M();return"[null]"!=q([e])||"{}"!=q({a:e})||"{}"!=q(Object(e))})},{stringify:function(e){for(var t,n,r=[e],u=1;arguments.length>u;)r.push(arguments[u++]);if(n=t=r[1],(b(t)||void 0!==e)&&!Z(e))return y(t)||(t=function(e,t){if("function"==typeof n&&(t=n.call(this,e,t)),!Z(t))return t}),r[1]=t,q.apply(j,r)}}),M.prototype[U]||S(M.prototype,U,M.prototype.valueOf),d(M,"Symbol"),c[_]=!0},function(e,t,n){var r=n(44),u=n(42),o=n(35);e.exports=function(e){var t=r(e),n=u.f;if(n)for(var i,a=n(e),l=o.f,c=0;a.length>c;)l.call(e,i=a[c++])&&t.push(i);return t}},function(e,t,n){var r=n(20),u=n(39).f,o={}.toString,i="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];e.exports.f=function(e){return i&&"[object Window]"==o.call(e)?function(e){try{return u(e)}catch(e){return i.slice()}}(e):u(r(e))}},function(e,t,n){"use strict";var r=n(16),u=n(11),o=n(10),i=n(13).f,a=n(58),l=n(5).Symbol;if(r&&"function"==typeof l&&(!("description"in l.prototype)||void 0!==l().description)){var c={},s=function(){var e=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),t=this instanceof s?new l(e):void 0===e?l():l(e);return""===e&&(c[t]=!0),t};a(s,l);var f=s.prototype=l.prototype;f.constructor=s;var d=f.toString,p="Symbol(test)"==String(l("test")),h=/^Symbol\\((.*)\\)[^)]+$/;i(f,"description",{configurable:!0,get:function(){var e=o(this)?this.valueOf():this,t=d.call(e);if(u(c,e))return"";var n=p?t.slice(7,-1):t.replace(h,"$1");return""===n?void 0:n}}),n(1)({global:!0,forced:!0},{Symbol:s})}},function(e,t,n){n(8)("asyncIterator")},function(e,t,n){n(8)("hasInstance")},function(e,t,n){n(8)("isConcatSpreadable")},function(e,t,n){n(8)("iterator")},function(e,t,n){n(8)("match")},function(e,t,n){n(8)("replace")},function(e,t,n){n(8)("search")},function(e,t,n){n(8)("species")},function(e,t,n){n(8)("split")},function(e,t,n){n(8)("toPrimitive")},function(e,t,n){n(8)("toStringTag")},function(e,t,n){n(8)("unscopables")},function(e,t,n){"use strict";var r=n(48),u=n(10),o=n(46),i=n(31),a=n(78),l=n(163),c=n(6)("isConcatSpreadable"),s=!n(12)(function(){var e=[];return e[c]=!1,e.concat()[0]!==e}),f=n(164)("concat"),d=function(e){if(!u(e))return!1;var t=e[c];return void 0!==t?!!t:r(e)},p=!s||!f;n(1)({target:"Array",proto:!0,forced:p},{concat:function(e){var t,n,r,u,c,s=o(this),f=l(s,0),p=0;for(t=-1,r=arguments.length;t<r;t++)if(c=-1===t?s:arguments[t],d(c)){if(p+(u=i(c.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<u;n++,p++)n in c&&a(f,p,c[n])}else{if(p>=9007199254740991)throw TypeError("Maximum allowed index exceeded");a(f,p++,c)}return f.length=p,f}})},function(e,t,n){var r=n(10),u=n(48),o=n(6)("species");e.exports=function(e,t){var n;return u(e)&&("function"!=typeof(n=e.constructor)||n!==Array&&!u(n.prototype)?r(n)&&null===(n=n[o])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===t?0:t)}},function(e,t,n){var r=n(12),u=n(6)("species");e.exports=function(e){return!r(function(){var t=[];return(t.constructor={})[u]=function(){return{foo:1}},1!==t[e](Boolean).foo})}},function(e,t,n){var r=!n(66)(function(e){Array.from(e)});n(1)({target:"Array",stat:!0,forced:r},{from:n(166)})},function(e,t,n){"use strict";var r=n(7),u=n(46),o=n(64),i=n(61),a=n(31),l=n(78),c=n(43);e.exports=function(e){var t,n,s,f,d=u(e),p="function"==typeof this?this:Array,h=arguments.length,m=h>1?arguments[1]:void 0,g=void 0!==m,v=0,y=c(d);if(g&&(m=r(m,h>2?arguments[2]:void 0,2)),void 0==y||p==Array&&i(y))for(n=new p(t=a(d.length));t>v;v++)l(n,v,g?m(d[v],v):d[v]);else for(f=y.call(d),n=new p;!(s=f.next()).done;v++)l(n,v,g?o(f,m,[s.value,v],!0):s.value);return n.length=v,n}},function(e,t,n){n(22)(n(5).JSON,"JSON",!0)},function(e,t,n){n(22)(Math,"Math",!0)},function(e,t,n){n(8)("dispose")},function(e,t,n){n(8)("observable")},function(e,t,n){n(8)("patternMatch")},function(e,t,n){"use strict";var r=n(79),u=[ReferenceError,TypeError,RangeError],o=!1;function i(){o=!1,r._l=null,r._m=null}function a(e,t){return t.some(function(t){return e instanceof t})}t.disable=i,t.enable=function(e){e=e||{},o&&i();o=!0;var t=0,n=0,l={};function c(t){(e.allRejections||a(l[t].error,e.whitelist||u))&&(l[t].displayId=n++,e.onUnhandled?(l[t].logged=!0,e.onUnhandled(l[t].displayId,l[t].error)):(l[t].logged=!0,function(e,t){console.warn("Possible Unhandled Promise Rejection (id: "+e+"):"),((t&&(t.stack||t))+"").split("\\n").forEach(function(e){console.warn("  "+e)})}(l[t].displayId,l[t].error)))}r._l=function(t){var n;2===t._i&&l[t._o]&&(l[t._o].logged?(n=t._o,l[n].logged&&(e.onHandled?e.onHandled(l[n].displayId,l[n].error):l[n].onUnhandled||(console.warn("Promise Rejection Handled (id: "+l[n].displayId+"):"),console.warn(\'  This means you can ignore any previous messages of the form "Possible Unhandled Promise Rejection" with id \'+l[n].displayId+".")))):clearTimeout(l[t._o].timeout),delete l[t._o])},r._m=function(e,n){0===e._h&&(e._o=t++,l[e._o]={displayId:null,error:n,timeout:setTimeout(c.bind(null,e._o),a(n,u)?100:2e3),logged:!1})}}},function(e,t,n){"use strict";(function(t){function n(e){u.length||(r(),!0),u[u.length]=e}e.exports=n;var r,u=[],o=0,i=1024;function a(){for(;o<u.length;){var e=o;if(o+=1,u[e].call(),o>i){for(var t=0,n=u.length-o;t<n;t++)u[t]=u[t+o];u.length-=o,o=0}}u.length=0,o=0,!1}var l,c,s,f="undefined"!==typeof t?t:self,d=f.MutationObserver||f.WebKitMutationObserver;function p(e){return function(){var t=setTimeout(r,0),n=setInterval(r,50);function r(){clearTimeout(t),clearInterval(n),e()}}}"function"===typeof d?(l=1,c=new d(a),s=document.createTextNode(""),c.observe(s,{characterData:!0}),r=function(){l=-l,s.data=l}):r=p(a),n.requestFlush=r,n.makeRequestCallFromTimer=p}).call(this,n(49))},function(e,t,n){"use strict";var r=n(79);e.exports=r;var u=s(!0),o=s(!1),i=s(null),a=s(void 0),l=s(0),c=s("");function s(e){var t=new r(r._n);return t._i=1,t._j=e,t}r.resolve=function(e){if(e instanceof r)return e;if(null===e)return i;if(void 0===e)return a;if(!0===e)return u;if(!1===e)return o;if(0===e)return l;if(""===e)return c;if("object"===typeof e||"function"===typeof e)try{var t=e.then;if("function"===typeof t)return new r(t.bind(e))}catch(e){return new r(function(t,n){n(e)})}return s(e)},r.all=function(e){var t=Array.prototype.slice.call(e);return new r(function(e,n){if(0===t.length)return e([]);var u=t.length;function o(i,a){if(a&&("object"===typeof a||"function"===typeof a)){if(a instanceof r&&a.then===r.prototype.then){for(;3===a._i;)a=a._j;return 1===a._i?o(i,a._j):(2===a._i&&n(a._j),void a.then(function(e){o(i,e)},n))}var l=a.then;if("function"===typeof l)return void new r(l.bind(a)).then(function(e){o(i,e)},n)}t[i]=a,0===--u&&e(t)}for(var i=0;i<t.length;i++)o(i,t[i])})},r.reject=function(e){return new r(function(t,n){n(e)})},r.race=function(e){return new r(function(t,n){e.forEach(function(e){r.resolve(e).then(t,n)})})},r.prototype.catch=function(e){return this.then(null,e)}},function(e,t,n){"use strict";n.r(t),n.d(t,"Headers",function(){return c}),n.d(t,"Request",function(){return g}),n.d(t,"Response",function(){return y}),n.d(t,"DOMException",function(){return b}),n.d(t,"fetch",function(){return A});var r={searchParams:"URLSearchParams"in self,iterable:"Symbol"in self&&"iterator"in Symbol,blob:"FileReader"in self&&"Blob"in self&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in self,arrayBuffer:"ArrayBuffer"in self};if(r.arrayBuffer)var u=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],o=ArrayBuffer.isView||function(e){return e&&u.indexOf(Object.prototype.toString.call(e))>-1};function i(e){if("string"!==typeof e&&(e=String(e)),/[^a-z0-9\\-#$%&\'*+.^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function a(e){return"string"!==typeof e&&(e=String(e)),e}function l(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return r.iterable&&(t[Symbol.iterator]=function(){return t}),t}function c(e){this.map={},e instanceof c?e.forEach(function(e,t){this.append(t,e)},this):Array.isArray(e)?e.forEach(function(e){this.append(e[0],e[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function s(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function f(e){return new Promise(function(t,n){e.onload=function(){t(e.result)},e.onerror=function(){n(e.error)}})}function d(e){var t=new FileReader,n=f(t);return t.readAsArrayBuffer(e),n}function p(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function h(){return this.bodyUsed=!1,this._initBody=function(e){var t;this._bodyInit=e,e?"string"===typeof e?this._bodyText=e:r.blob&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:r.formData&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:r.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():r.arrayBuffer&&r.blob&&((t=e)&&DataView.prototype.isPrototypeOf(t))?(this._bodyArrayBuffer=p(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):r.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||o(e))?this._bodyArrayBuffer=p(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"===typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):r.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},r.blob&&(this.blob=function(){var e=s(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?s(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(d)}),this.text=function(){var e,t,n,r=s(this);if(r)return r;if(this._bodyBlob)return e=this._bodyBlob,t=new FileReader,n=f(t),t.readAsText(e),n;if(this._bodyArrayBuffer)return Promise.resolve(function(e){for(var t=new Uint8Array(e),n=new Array(t.length),r=0;r<t.length;r++)n[r]=String.fromCharCode(t[r]);return n.join("")}(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},r.formData&&(this.formData=function(){return this.text().then(v)}),this.json=function(){return this.text().then(JSON.parse)},this}c.prototype.append=function(e,t){e=i(e),t=a(t);var n=this.map[e];this.map[e]=n?n+", "+t:t},c.prototype.delete=function(e){delete this.map[i(e)]},c.prototype.get=function(e){return e=i(e),this.has(e)?this.map[e]:null},c.prototype.has=function(e){return this.map.hasOwnProperty(i(e))},c.prototype.set=function(e,t){this.map[i(e)]=a(t)},c.prototype.forEach=function(e,t){for(var n in this.map)this.map.hasOwnProperty(n)&&e.call(t,this.map[n],n,this)},c.prototype.keys=function(){var e=[];return this.forEach(function(t,n){e.push(n)}),l(e)},c.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),l(e)},c.prototype.entries=function(){var e=[];return this.forEach(function(t,n){e.push([n,t])}),l(e)},r.iterable&&(c.prototype[Symbol.iterator]=c.prototype.entries);var m=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function g(e,t){var n,r,u=(t=t||{}).body;if(e instanceof g){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new c(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,u||null==e._bodyInit||(u=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new c(t.headers)),this.method=(n=t.method||this.method||"GET",r=n.toUpperCase(),m.indexOf(r)>-1?r:n),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&u)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(u)}function v(e){var t=new FormData;return e.trim().split("&").forEach(function(e){if(e){var n=e.split("="),r=n.shift().replace(/\\+/g," "),u=n.join("=").replace(/\\+/g," ");t.append(decodeURIComponent(r),decodeURIComponent(u))}}),t}function y(e,t){t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new c(t.headers),this.url=t.url||"",this._initBody(e)}g.prototype.clone=function(){return new g(this,{body:this._bodyInit})},h.call(g.prototype),h.call(y.prototype),y.prototype.clone=function(){return new y(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new c(this.headers),url:this.url})},y.error=function(){var e=new y(null,{status:0,statusText:""});return e.type="error",e};var D=[301,302,303,307,308];y.redirect=function(e,t){if(-1===D.indexOf(t))throw new RangeError("Invalid status code");return new y(null,{status:t,headers:{location:e}})};var b=self.DOMException;try{new b}catch(e){(b=function(e,t){this.message=e,this.name=t;var n=Error(e);this.stack=n.stack}).prototype=Object.create(Error.prototype),b.prototype.constructor=b}function A(e,t){return new Promise(function(n,u){var o=new g(e,t);if(o.signal&&o.signal.aborted)return u(new b("Aborted","AbortError"));var i=new XMLHttpRequest;function a(){i.abort()}i.onload=function(){var e,t,r={status:i.status,statusText:i.statusText,headers:(e=i.getAllResponseHeaders()||"",t=new c,e.replace(/\\r?\\n[\\t ]+/g," ").split(/\\r?\\n/).forEach(function(e){var n=e.split(":"),r=n.shift().trim();if(r){var u=n.join(":").trim();t.append(r,u)}}),t)};r.url="responseURL"in i?i.responseURL:r.headers.get("X-Request-URL");var u="response"in i?i.response:i.responseText;n(new y(u,r))},i.onerror=function(){u(new TypeError("Network request failed"))},i.ontimeout=function(){u(new TypeError("Network request failed"))},i.onabort=function(){u(new b("Aborted","AbortError"))},i.open(o.method,o.url,!0),"include"===o.credentials?i.withCredentials=!0:"omit"===o.credentials&&(i.withCredentials=!1),"responseType"in i&&r.blob&&(i.responseType="blob"),o.headers.forEach(function(e,t){i.setRequestHeader(t,e)}),o.signal&&(o.signal.addEventListener("abort",a),i.onreadystatechange=function(){4===i.readyState&&o.signal.removeEventListener("abort",a)}),i.send("undefined"===typeof o._bodyInit?null:o._bodyInit)})}A.polyfill=!0,self.fetch||(self.fetch=A,self.Headers=c,self.Request=g,self.Response=y)},function(e,t,n){(function(t){for(var r=n(177),u="undefined"===typeof window?t:window,o=["moz","webkit"],i="AnimationFrame",a=u["request"+i],l=u["cancel"+i]||u["cancelRequest"+i],c=0;!a&&c<o.length;c++)a=u[o[c]+"Request"+i],l=u[o[c]+"Cancel"+i]||u[o[c]+"CancelRequest"+i];if(!a||!l){var s=0,f=0,d=[];a=function(e){if(0===d.length){var t=r(),n=Math.max(0,1e3/60-(t-s));s=n+t,setTimeout(function(){var e=d.slice(0);d.length=0;for(var t=0;t<e.length;t++)if(!e[t].cancelled)try{e[t].callback(s)}catch(e){setTimeout(function(){throw e},0)}},Math.round(n))}return d.push({handle:++f,callback:e,cancelled:!1}),f},l=function(e){for(var t=0;t<d.length;t++)d[t].handle===e&&(d[t].cancelled=!0)}}e.exports=function(e){return a.call(u,e)},e.exports.cancel=function(){l.apply(u,arguments)},e.exports.polyfill=function(e){e||(e=u),e.requestAnimationFrame=a,e.cancelAnimationFrame=l}}).call(this,n(49))},function(e,t,n){(function(t){(function(){var n,r,u,o,i,a;"undefined"!==typeof performance&&null!==performance&&performance.now?e.exports=function(){return performance.now()}:"undefined"!==typeof t&&null!==t&&t.hrtime?(e.exports=function(){return(n()-i)/1e6},r=t.hrtime,o=(n=function(){var e;return 1e9*(e=r())[0]+e[1]})(),a=1e9*t.uptime(),i=o-a):Date.now?(e.exports=function(){return Date.now()-u},u=Date.now()):(e.exports=function(){return(new Date).getTime()-u},u=(new Date).getTime())}).call(this)}).call(this,n(51))},function(e,t,n){"use strict";var r=n(50),u="function"===typeof Symbol&&Symbol.for,o=u?Symbol.for("react.element"):60103,i=u?Symbol.for("react.portal"):60106,a=u?Symbol.for("react.fragment"):60107,l=u?Symbol.for("react.strict_mode"):60108,c=u?Symbol.for("react.profiler"):60114,s=u?Symbol.for("react.provider"):60109,f=u?Symbol.for("react.context"):60110,d=u?Symbol.for("react.concurrent_mode"):60111,p=u?Symbol.for("react.forward_ref"):60112,h=u?Symbol.for("react.suspense"):60113,m=u?Symbol.for("react.memo"):60115,g=u?Symbol.for("react.lazy"):60116,v="function"===typeof Symbol&&Symbol.iterator;function y(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,u,o,i,a){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,u,o,i,a],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}var D={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},b={};function A(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||D}function C(){}function E(e,t,n){this.props=e,this.context=t,this.refs=b,this.updater=n||D}A.prototype.isReactComponent={},A.prototype.setState=function(e,t){"object"!==typeof e&&"function"!==typeof e&&null!=e&&y("85"),this.updater.enqueueSetState(this,e,t,"setState")},A.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},C.prototype=A.prototype;var F=E.prototype=new C;F.constructor=E,r(F,A.prototype),F.isPureReactComponent=!0;var w={current:null},x={current:null},B=Object.prototype.hasOwnProperty,k={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r=void 0,u={},i=null,a=null;if(null!=t)for(r in void 0!==t.ref&&(a=t.ref),void 0!==t.key&&(i=""+t.key),t)B.call(t,r)&&!k.hasOwnProperty(r)&&(u[r]=t[r]);var l=arguments.length-2;if(1===l)u.children=n;else if(1<l){for(var c=Array(l),s=0;s<l;s++)c[s]=arguments[s+2];u.children=c}if(e&&e.defaultProps)for(r in l=e.defaultProps)void 0===u[r]&&(u[r]=l[r]);return{$$typeof:o,type:e,key:i,ref:a,props:u,_owner:x.current}}function T(e){return"object"===typeof e&&null!==e&&e.$$typeof===o}var _=/\\/+/g,P=[];function O(e,t,n,r){if(P.length){var u=P.pop();return u.result=e,u.keyPrefix=t,u.func=n,u.context=r,u.count=0,u}return{result:e,keyPrefix:t,func:n,context:r,count:0}}function N(e){e.result=null,e.keyPrefix=null,e.func=null,e.context=null,e.count=0,10>P.length&&P.push(e)}function R(e,t,n){return null==e?0:function e(t,n,r,u){var a=typeof t;"undefined"!==a&&"boolean"!==a||(t=null);var l=!1;if(null===t)l=!0;else switch(a){case"string":case"number":l=!0;break;case"object":switch(t.$$typeof){case o:case i:l=!0}}if(l)return r(u,t,""===n?"."+I(t,0):n),1;if(l=0,n=""===n?".":n+":",Array.isArray(t))for(var c=0;c<t.length;c++){var s=n+I(a=t[c],c);l+=e(a,s,r,u)}else if(s=null===t||"object"!==typeof t?null:"function"===typeof(s=v&&t[v]||t["@@iterator"])?s:null,"function"===typeof s)for(t=s.call(t),c=0;!(a=t.next()).done;)l+=e(a=a.value,s=n+I(a,c++),r,u);else"object"===a&&y("31","[object Object]"===(r=""+t)?"object with keys {"+Object.keys(t).join(", ")+"}":r,"");return l}(e,"",t,n)}function I(e,t){return"object"===typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+(""+e).replace(/[=:]/g,function(e){return t[e]})}(e.key):t.toString(36)}function L(e,t){e.func.call(e.context,t,e.count++)}function M(e,t,n){var r=e.result,u=e.keyPrefix;e=e.func.call(e.context,t,e.count++),Array.isArray(e)?j(e,r,n,function(e){return e}):null!=e&&(T(e)&&(e=function(e,t){return{$$typeof:o,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(e,u+(!e.key||t&&t.key===e.key?"":(""+e.key).replace(_,"$&/")+"/")+n)),r.push(e))}function j(e,t,n,r,u){var o="";null!=n&&(o=(""+n).replace(_,"$&/")+"/"),R(e,M,t=O(t,o,r,u)),N(t)}function q(){var e=w.current;return null===e&&y("321"),e}var U={Children:{map:function(e,t,n){if(null==e)return e;var r=[];return j(e,r,null,t,n),r},forEach:function(e,t,n){if(null==e)return e;R(e,L,t=O(null,null,t,n)),N(t)},count:function(e){return R(e,function(){return null},null)},toArray:function(e){var t=[];return j(e,t,null,function(e){return e}),t},only:function(e){return T(e)||y("143"),e}},createRef:function(){return{current:null}},Component:A,PureComponent:E,createContext:function(e,t){return void 0===t&&(t=null),(e={$$typeof:f,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:s,_context:e},e.Consumer=e},forwardRef:function(e){return{$$typeof:p,render:e}},lazy:function(e){return{$$typeof:g,_ctor:e,_status:-1,_result:null}},memo:function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},useCallback:function(e,t){return q().useCallback(e,t)},useContext:function(e,t){return q().useContext(e,t)},useEffect:function(e,t){return q().useEffect(e,t)},useImperativeHandle:function(e,t,n){return q().useImperativeHandle(e,t,n)},useDebugValue:function(){},useLayoutEffect:function(e,t){return q().useLayoutEffect(e,t)},useMemo:function(e,t){return q().useMemo(e,t)},useReducer:function(e,t,n){return q().useReducer(e,t,n)},useRef:function(e){return q().useRef(e)},useState:function(e){return q().useState(e)},Fragment:a,StrictMode:l,Suspense:h,createElement:S,cloneElement:function(e,t,n){(null===e||void 0===e)&&y("267",e);var u=void 0,i=r({},e.props),a=e.key,l=e.ref,c=e._owner;if(null!=t){void 0!==t.ref&&(l=t.ref,c=x.current),void 0!==t.key&&(a=""+t.key);var s=void 0;for(u in e.type&&e.type.defaultProps&&(s=e.type.defaultProps),t)B.call(t,u)&&!k.hasOwnProperty(u)&&(i[u]=void 0===t[u]&&void 0!==s?s[u]:t[u])}if(1===(u=arguments.length-2))i.children=n;else if(1<u){s=Array(u);for(var f=0;f<u;f++)s[f]=arguments[f+2];i.children=s}return{$$typeof:o,type:e.type,key:a,ref:l,props:i,_owner:c}},createFactory:function(e){var t=S.bind(null,e);return t.type=e,t},isValidElement:T,version:"16.8.6",unstable_ConcurrentMode:d,unstable_Profiler:c,__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{ReactCurrentDispatcher:w,ReactCurrentOwner:x,assign:r}},z={default:U},H=z&&U||z;e.exports=H.default||H},function(e,t,n){"use strict";var r=n(0),u=n(50),o=n(180);function i(e){for(var t=arguments.length-1,n="https://reactjs.org/docs/error-decoder.html?invariant="+e,r=0;r<t;r++)n+="&args[]="+encodeURIComponent(arguments[r+1]);!function(e,t,n,r,u,o,i,a){if(!e){if(e=void 0,void 0===t)e=Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var l=[n,r,u,o,i,a],c=0;(e=Error(t.replace(/%s/g,function(){return l[c++]}))).name="Invariant Violation"}throw e.framesToPop=1,e}}(!1,"Minified React error #"+e+"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. ",n)}r||i("227");var a=!1,l=null,c=!1,s=null,f={onError:function(e){a=!0,l=e}};function d(e,t,n,r,u,o,i,c,s){a=!1,l=null,function(e,t,n,r,u,o,i,a,l){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}.apply(f,arguments)}var p=null,h={};function m(){if(p)for(var e in h){var t=h[e],n=p.indexOf(e);if(-1<n||i("96",e),!v[n])for(var r in t.extractEvents||i("97",e),v[n]=t,n=t.eventTypes){var u=void 0,o=n[r],a=t,l=r;y.hasOwnProperty(l)&&i("99",l),y[l]=o;var c=o.phasedRegistrationNames;if(c){for(u in c)c.hasOwnProperty(u)&&g(c[u],a,l);u=!0}else o.registrationName?(g(o.registrationName,a,l),u=!0):u=!1;u||i("98",r,e)}}}function g(e,t,n){D[e]&&i("100",e),D[e]=t,b[e]=t.eventTypes[n].dependencies}var v=[],y={},D={},b={},A=null,C=null,E=null;function F(e,t,n){var r=e.type||"unknown-event";e.currentTarget=E(n),function(e,t,n,r,u,o,f,p,h){if(d.apply(this,arguments),a){if(a){var m=l;a=!1,l=null}else i("198"),m=void 0;c||(c=!0,s=m)}}(r,t,void 0,e),e.currentTarget=null}function w(e,t){return null==t&&i("30"),null==e?t:Array.isArray(e)?Array.isArray(t)?(e.push.apply(e,t),e):(e.push(t),e):Array.isArray(t)?[e].concat(t):[e,t]}function x(e,t,n){Array.isArray(e)?e.forEach(t,n):e&&t.call(n,e)}var B=null;function k(e){if(e){var t=e._dispatchListeners,n=e._dispatchInstances;if(Array.isArray(t))for(var r=0;r<t.length&&!e.isPropagationStopped();r++)F(e,t[r],n[r]);else t&&F(e,t,n);e._dispatchListeners=null,e._dispatchInstances=null,e.isPersistent()||e.constructor.release(e)}}var S={injectEventPluginOrder:function(e){p&&i("101"),p=Array.prototype.slice.call(e),m()},injectEventPluginsByName:function(e){var t,n=!1;for(t in e)if(e.hasOwnProperty(t)){var r=e[t];h.hasOwnProperty(t)&&h[t]===r||(h[t]&&i("102",t),h[t]=r,n=!0)}n&&m()}};function T(e,t){var n=e.stateNode;if(!n)return null;var r=A(n);if(!r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}return e?null:(n&&"function"!==typeof n&&i("231",t,typeof n),n)}function _(e){if(null!==e&&(B=w(B,e)),e=B,B=null,e&&(x(e,k),B&&i("95"),c))throw e=s,c=!1,s=null,e}var P=Math.random().toString(36).slice(2),O="__reactInternalInstance$"+P,N="__reactEventHandlers$"+P;function R(e){if(e[O])return e[O];for(;!e[O];){if(!e.parentNode)return null;e=e.parentNode}return 5===(e=e[O]).tag||6===e.tag?e:null}function I(e){return!(e=e[O])||5!==e.tag&&6!==e.tag?null:e}function L(e){if(5===e.tag||6===e.tag)return e.stateNode;i("33")}function M(e){return e[N]||null}function j(e){do{e=e.return}while(e&&5!==e.tag);return e||null}function q(e,t,n){(t=T(e,n.dispatchConfig.phasedRegistrationNames[t]))&&(n._dispatchListeners=w(n._dispatchListeners,t),n._dispatchInstances=w(n._dispatchInstances,e))}function U(e){if(e&&e.dispatchConfig.phasedRegistrationNames){for(var t=e._targetInst,n=[];t;)n.push(t),t=j(t);for(t=n.length;0<t--;)q(n[t],"captured",e);for(t=0;t<n.length;t++)q(n[t],"bubbled",e)}}function z(e,t,n){e&&n&&n.dispatchConfig.registrationName&&(t=T(e,n.dispatchConfig.registrationName))&&(n._dispatchListeners=w(n._dispatchListeners,t),n._dispatchInstances=w(n._dispatchInstances,e))}function H(e){e&&e.dispatchConfig.registrationName&&z(e._targetInst,null,e)}function V(e){x(e,U)}var W=!("undefined"===typeof window||!window.document||!window.document.createElement);function G(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var $={animationend:G("Animation","AnimationEnd"),animationiteration:G("Animation","AnimationIteration"),animationstart:G("Animation","AnimationStart"),transitionend:G("Transition","TransitionEnd")},K={},Q={};function Y(e){if(K[e])return K[e];if(!$[e])return e;var t,n=$[e];for(t in n)if(n.hasOwnProperty(t)&&t in Q)return K[e]=n[t];return e}W&&(Q=document.createElement("div").style,"AnimationEvent"in window||(delete $.animationend.animation,delete $.animationiteration.animation,delete $.animationstart.animation),"TransitionEvent"in window||delete $.transitionend.transition);var J=Y("animationend"),X=Y("animationiteration"),Z=Y("animationstart"),ee=Y("transitionend"),te="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),ne=null,re=null,ue=null;function oe(){if(ue)return ue;var e,t,n=re,r=n.length,u="value"in ne?ne.value:ne.textContent,o=u.length;for(e=0;e<r&&n[e]===u[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===u[o-t];t++);return ue=u.slice(e,1<t?1-t:void 0)}function ie(){return!0}function ae(){return!1}function le(e,t,n,r){for(var u in this.dispatchConfig=e,this._targetInst=t,this.nativeEvent=n,e=this.constructor.Interface)e.hasOwnProperty(u)&&((t=e[u])?this[u]=t(n):"target"===u?this.target=r:this[u]=n[u]);return this.isDefaultPrevented=(null!=n.defaultPrevented?n.defaultPrevented:!1===n.returnValue)?ie:ae,this.isPropagationStopped=ae,this}function ce(e,t,n,r){if(this.eventPool.length){var u=this.eventPool.pop();return this.call(u,e,t,n,r),u}return new this(e,t,n,r)}function se(e){e instanceof this||i("279"),e.destructor(),10>this.eventPool.length&&this.eventPool.push(e)}function fe(e){e.eventPool=[],e.getPooled=ce,e.release=se}u(le.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!==typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=ie)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!==typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=ie)},persist:function(){this.isPersistent=ie},isPersistent:ae,destructor:function(){var e,t=this.constructor.Interface;for(e in t)this[e]=null;this.nativeEvent=this._targetInst=this.dispatchConfig=null,this.isPropagationStopped=this.isDefaultPrevented=ae,this._dispatchInstances=this._dispatchListeners=null}}),le.Interface={type:null,target:null,currentTarget:function(){return null},eventPhase:null,bubbles:null,cancelable:null,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:null,isTrusted:null},le.extend=function(e){function t(){}function n(){return r.apply(this,arguments)}var r=this;t.prototype=r.prototype;var o=new t;return u(o,n.prototype),n.prototype=o,n.prototype.constructor=n,n.Interface=u({},r.Interface,e),n.extend=r.extend,fe(n),n},fe(le);var de=le.extend({data:null}),pe=le.extend({data:null}),he=[9,13,27,32],me=W&&"CompositionEvent"in window,ge=null;W&&"documentMode"in document&&(ge=document.documentMode);var ve=W&&"TextEvent"in window&&!ge,ye=W&&(!me||ge&&8<ge&&11>=ge),De=String.fromCharCode(32),be={beforeInput:{phasedRegistrationNames:{bubbled:"onBeforeInput",captured:"onBeforeInputCapture"},dependencies:["compositionend","keypress","textInput","paste"]},compositionEnd:{phasedRegistrationNames:{bubbled:"onCompositionEnd",captured:"onCompositionEndCapture"},dependencies:"blur compositionend keydown keypress keyup mousedown".split(" ")},compositionStart:{phasedRegistrationNames:{bubbled:"onCompositionStart",captured:"onCompositionStartCapture"},dependencies:"blur compositionstart keydown keypress keyup mousedown".split(" ")},compositionUpdate:{phasedRegistrationNames:{bubbled:"onCompositionUpdate",captured:"onCompositionUpdateCapture"},dependencies:"blur compositionupdate keydown keypress keyup mousedown".split(" ")}},Ae=!1;function Ce(e,t){switch(e){case"keyup":return-1!==he.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"blur":return!0;default:return!1}}function Ee(e){return"object"===typeof(e=e.detail)&&"data"in e?e.data:null}var Fe=!1;var we={eventTypes:be,extractEvents:function(e,t,n,r){var u=void 0,o=void 0;if(me)e:{switch(e){case"compositionstart":u=be.compositionStart;break e;case"compositionend":u=be.compositionEnd;break e;case"compositionupdate":u=be.compositionUpdate;break e}u=void 0}else Fe?Ce(e,n)&&(u=be.compositionEnd):"keydown"===e&&229===n.keyCode&&(u=be.compositionStart);return u?(ye&&"ko"!==n.locale&&(Fe||u!==be.compositionStart?u===be.compositionEnd&&Fe&&(o=oe()):(re="value"in(ne=r)?ne.value:ne.textContent,Fe=!0)),u=de.getPooled(u,t,n,r),o?u.data=o:null!==(o=Ee(n))&&(u.data=o),V(u),o=u):o=null,(e=ve?function(e,t){switch(e){case"compositionend":return Ee(t);case"keypress":return 32!==t.which?null:(Ae=!0,De);case"textInput":return(e=t.data)===De&&Ae?null:e;default:return null}}(e,n):function(e,t){if(Fe)return"compositionend"===e||!me&&Ce(e,t)?(e=oe(),ue=re=ne=null,Fe=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return ye&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))?((t=pe.getPooled(be.beforeInput,t,n,r)).data=e,V(t)):t=null,null===o?t:null===t?o:[o,t]}},xe=null,Be=null,ke=null;function Se(e){if(e=C(e)){"function"!==typeof xe&&i("280");var t=A(e.stateNode);xe(e.stateNode,e.type,t)}}function Te(e){Be?ke?ke.push(e):ke=[e]:Be=e}function _e(){if(Be){var e=Be,t=ke;if(ke=Be=null,Se(e),t)for(e=0;e<t.length;e++)Se(t[e])}}function Pe(e,t){return e(t)}function Oe(e,t,n){return e(t,n)}function Ne(){}var Re=!1;function Ie(e,t){if(Re)return e(t);Re=!0;try{return Pe(e,t)}finally{Re=!1,(null!==Be||null!==ke)&&(Ne(),_e())}}var Le={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Me(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Le[e.type]:"textarea"===t}function je(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}function qe(e){if(!W)return!1;var t=(e="on"+e)in document;return t||((t=document.createElement("div")).setAttribute(e,"return;"),t="function"===typeof t[e]),t}function Ue(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function ze(e){e._valueTracker||(e._valueTracker=function(e){var t=Ue(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&"undefined"!==typeof n&&"function"===typeof n.get&&"function"===typeof n.set){var u=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return u.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function He(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Ue(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}var Ve=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;Ve.hasOwnProperty("ReactCurrentDispatcher")||(Ve.ReactCurrentDispatcher={current:null});var We=/^(.*)[\\\\\\/]/,Ge="function"===typeof Symbol&&Symbol.for,$e=Ge?Symbol.for("react.element"):60103,Ke=Ge?Symbol.for("react.portal"):60106,Qe=Ge?Symbol.for("react.fragment"):60107,Ye=Ge?Symbol.for("react.strict_mode"):60108,Je=Ge?Symbol.for("react.profiler"):60114,Xe=Ge?Symbol.for("react.provider"):60109,Ze=Ge?Symbol.for("react.context"):60110,et=Ge?Symbol.for("react.concurrent_mode"):60111,tt=Ge?Symbol.for("react.forward_ref"):60112,nt=Ge?Symbol.for("react.suspense"):60113,rt=Ge?Symbol.for("react.memo"):60115,ut=Ge?Symbol.for("react.lazy"):60116,ot="function"===typeof Symbol&&Symbol.iterator;function it(e){return null===e||"object"!==typeof e?null:"function"===typeof(e=ot&&e[ot]||e["@@iterator"])?e:null}function at(e){if(null==e)return null;if("function"===typeof e)return e.displayName||e.name||null;if("string"===typeof e)return e;switch(e){case et:return"ConcurrentMode";case Qe:return"Fragment";case Ke:return"Portal";case Je:return"Profiler";case Ye:return"StrictMode";case nt:return"Suspense"}if("object"===typeof e)switch(e.$$typeof){case Ze:return"Context.Consumer";case Xe:return"Context.Provider";case tt:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case rt:return at(e.type);case ut:if(e=1===e._status?e._result:null)return at(e)}return null}function lt(e){var t="";do{e:switch(e.tag){case 3:case 4:case 6:case 7:case 10:case 9:var n="";break e;default:var r=e._debugOwner,u=e._debugSource,o=at(e.type);n=null,r&&(n=at(r.type)),r=o,o="",u?o=" (at "+u.fileName.replace(We,"")+":"+u.lineNumber+")":n&&(o=" (created by "+n+")"),n="\\n    in "+(r||"Unknown")+o}t+=n,e=e.return}while(e);return t}var ct=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,st=Object.prototype.hasOwnProperty,ft={},dt={};function pt(e,t,n,r,u){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=u,this.mustUseProperty=n,this.propertyName=e,this.type=t}var ht={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e){ht[e]=new pt(e,0,!1,e,null)}),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach(function(e){var t=e[0];ht[t]=new pt(t,1,!1,e[1],null)}),["contentEditable","draggable","spellCheck","value"].forEach(function(e){ht[e]=new pt(e,2,!1,e.toLowerCase(),null)}),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach(function(e){ht[e]=new pt(e,2,!1,e,null)}),"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e){ht[e]=new pt(e,3,!1,e.toLowerCase(),null)}),["checked","multiple","muted","selected"].forEach(function(e){ht[e]=new pt(e,3,!0,e,null)}),["capture","download"].forEach(function(e){ht[e]=new pt(e,4,!1,e,null)}),["cols","rows","size","span"].forEach(function(e){ht[e]=new pt(e,6,!1,e,null)}),["rowSpan","start"].forEach(function(e){ht[e]=new pt(e,5,!1,e.toLowerCase(),null)});var mt=/[\\-:]([a-z])/g;function gt(e){return e[1].toUpperCase()}function vt(e,t,n,r){var u=ht.hasOwnProperty(t)?ht[t]:null;(null!==u?0===u.type:!r&&(2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1])))||(function(e,t,n,r){if(null===t||"undefined"===typeof t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,u,r)&&(n=null),r||null===u?function(e){return!!st.call(dt,e)||!st.call(ft,e)&&(ct.test(e)?dt[e]=!0:(ft[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):u.mustUseProperty?e[u.propertyName]=null===n?3!==u.type&&"":n:(t=u.attributeName,r=u.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(u=u.type)||4===u&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}function yt(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Dt(e,t){var n=t.checked;return u({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function bt(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=yt(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function At(e,t){null!=(t=t.checked)&&vt(e,"checked",t,!1)}function Ct(e,t){At(e,t);var n=yt(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?Ft(e,t.type,n):t.hasOwnProperty("defaultValue")&&Ft(e,t.type,yt(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Et(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!e.defaultChecked,e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function Ft(e,t,n){"number"===t&&e.ownerDocument.activeElement===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e){var t=e.replace(mt,gt);ht[t]=new pt(t,1,!1,e,null)}),"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e){var t=e.replace(mt,gt);ht[t]=new pt(t,1,!1,e,"http://www.w3.org/1999/xlink")}),["xml:base","xml:lang","xml:space"].forEach(function(e){var t=e.replace(mt,gt);ht[t]=new pt(t,1,!1,e,"http://www.w3.org/XML/1998/namespace")}),["tabIndex","crossOrigin"].forEach(function(e){ht[e]=new pt(e,1,!1,e.toLowerCase(),null)});var wt={change:{phasedRegistrationNames:{bubbled:"onChange",captured:"onChangeCapture"},dependencies:"blur change click focus input keydown keyup selectionchange".split(" ")}};function xt(e,t,n){return(e=le.getPooled(wt.change,e,t,n)).type="change",Te(n),V(e),e}var Bt=null,kt=null;function St(e){_(e)}function Tt(e){if(He(L(e)))return e}function _t(e,t){if("change"===e)return t}var Pt=!1;function Ot(){Bt&&(Bt.detachEvent("onpropertychange",Nt),kt=Bt=null)}function Nt(e){"value"===e.propertyName&&Tt(kt)&&Ie(St,e=xt(kt,e,je(e)))}function Rt(e,t,n){"focus"===e?(Ot(),kt=n,(Bt=t).attachEvent("onpropertychange",Nt)):"blur"===e&&Ot()}function It(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Tt(kt)}function Lt(e,t){if("click"===e)return Tt(t)}function Mt(e,t){if("input"===e||"change"===e)return Tt(t)}W&&(Pt=qe("input")&&(!document.documentMode||9<document.documentMode));var jt={eventTypes:wt,_isInputEventSupported:Pt,extractEvents:function(e,t,n,r){var u=t?L(t):window,o=void 0,i=void 0,a=u.nodeName&&u.nodeName.toLowerCase();if("select"===a||"input"===a&&"file"===u.type?o=_t:Me(u)?Pt?o=Mt:(o=It,i=Rt):(a=u.nodeName)&&"input"===a.toLowerCase()&&("checkbox"===u.type||"radio"===u.type)&&(o=Lt),o&&(o=o(e,t)))return xt(o,n,r);i&&i(e,u,t),"blur"===e&&(e=u._wrapperState)&&e.controlled&&"number"===u.type&&Ft(u,"number",u.value)}},qt=le.extend({view:null,detail:null}),Ut={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function zt(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Ut[e])&&!!t[e]}function Ht(){return zt}var Vt=0,Wt=0,Gt=!1,$t=!1,Kt=qt.extend({screenX:null,screenY:null,clientX:null,clientY:null,pageX:null,pageY:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,getModifierState:Ht,button:null,buttons:null,relatedTarget:function(e){return e.relatedTarget||(e.fromElement===e.srcElement?e.toElement:e.fromElement)},movementX:function(e){if("movementX"in e)return e.movementX;var t=Vt;return Vt=e.screenX,Gt?"mousemove"===e.type?e.screenX-t:0:(Gt=!0,0)},movementY:function(e){if("movementY"in e)return e.movementY;var t=Wt;return Wt=e.screenY,$t?"mousemove"===e.type?e.screenY-t:0:($t=!0,0)}}),Qt=Kt.extend({pointerId:null,width:null,height:null,pressure:null,tangentialPressure:null,tiltX:null,tiltY:null,twist:null,pointerType:null,isPrimary:null}),Yt={mouseEnter:{registrationName:"onMouseEnter",dependencies:["mouseout","mouseover"]},mouseLeave:{registrationName:"onMouseLeave",dependencies:["mouseout","mouseover"]},pointerEnter:{registrationName:"onPointerEnter",dependencies:["pointerout","pointerover"]},pointerLeave:{registrationName:"onPointerLeave",dependencies:["pointerout","pointerover"]}},Jt={eventTypes:Yt,extractEvents:function(e,t,n,r){var u="mouseover"===e||"pointerover"===e,o="mouseout"===e||"pointerout"===e;if(u&&(n.relatedTarget||n.fromElement)||!o&&!u)return null;if(u=r.window===r?r:(u=r.ownerDocument)?u.defaultView||u.parentWindow:window,o?(o=t,t=(t=n.relatedTarget||n.toElement)?R(t):null):o=null,o===t)return null;var i=void 0,a=void 0,l=void 0,c=void 0;"mouseout"===e||"mouseover"===e?(i=Kt,a=Yt.mouseLeave,l=Yt.mouseEnter,c="mouse"):"pointerout"!==e&&"pointerover"!==e||(i=Qt,a=Yt.pointerLeave,l=Yt.pointerEnter,c="pointer");var s=null==o?u:L(o);if(u=null==t?u:L(t),(e=i.getPooled(a,o,n,r)).type=c+"leave",e.target=s,e.relatedTarget=u,(n=i.getPooled(l,t,n,r)).type=c+"enter",n.target=u,n.relatedTarget=s,r=t,o&&r)e:{for(u=r,c=0,i=t=o;i;i=j(i))c++;for(i=0,l=u;l;l=j(l))i++;for(;0<c-i;)t=j(t),c--;for(;0<i-c;)u=j(u),i--;for(;c--;){if(t===u||t===u.alternate)break e;t=j(t),u=j(u)}t=null}else t=null;for(u=t,t=[];o&&o!==u&&(null===(c=o.alternate)||c!==u);)t.push(o),o=j(o);for(o=[];r&&r!==u&&(null===(c=r.alternate)||c!==u);)o.push(r),r=j(r);for(r=0;r<t.length;r++)z(t[r],"bubbled",e);for(r=o.length;0<r--;)z(o[r],"captured",n);return[e,n]}};function Xt(e,t){return e===t&&(0!==e||1/e===1/t)||e!==e&&t!==t}var Zt=Object.prototype.hasOwnProperty;function en(e,t){if(Xt(e,t))return!0;if("object"!==typeof e||null===e||"object"!==typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!Zt.call(t,n[r])||!Xt(e[n[r]],t[n[r]]))return!1;return!0}function tn(e){var t=e;if(e.alternate)for(;t.return;)t=t.return;else{if(0!==(2&t.effectTag))return 1;for(;t.return;)if(0!==(2&(t=t.return).effectTag))return 1}return 3===t.tag?2:3}function nn(e){2!==tn(e)&&i("188")}function rn(e){if(!(e=function(e){var t=e.alternate;if(!t)return 3===(t=tn(e))&&i("188"),1===t?null:e;for(var n=e,r=t;;){var u=n.return,o=u?u.alternate:null;if(!u||!o)break;if(u.child===o.child){for(var a=u.child;a;){if(a===n)return nn(u),e;if(a===r)return nn(u),t;a=a.sibling}i("188")}if(n.return!==r.return)n=u,r=o;else{a=!1;for(var l=u.child;l;){if(l===n){a=!0,n=u,r=o;break}if(l===r){a=!0,r=u,n=o;break}l=l.sibling}if(!a){for(l=o.child;l;){if(l===n){a=!0,n=o,r=u;break}if(l===r){a=!0,r=o,n=u;break}l=l.sibling}a||i("189")}}n.alternate!==r&&i("190")}return 3!==n.tag&&i("188"),n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}var un=le.extend({animationName:null,elapsedTime:null,pseudoElement:null}),on=le.extend({clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),an=qt.extend({relatedTarget:null});function ln(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}var cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},sn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fn=qt.extend({key:function(e){if(e.key){var t=cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=ln(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?sn[e.keyCode]||"Unidentified":""},location:null,ctrlKey:null,shiftKey:null,altKey:null,metaKey:null,repeat:null,locale:null,getModifierState:Ht,charCode:function(e){return"keypress"===e.type?ln(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?ln(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),dn=Kt.extend({dataTransfer:null}),pn=qt.extend({touches:null,targetTouches:null,changedTouches:null,altKey:null,metaKey:null,ctrlKey:null,shiftKey:null,getModifierState:Ht}),hn=le.extend({propertyName:null,elapsedTime:null,pseudoElement:null}),mn=Kt.extend({deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:null,deltaMode:null}),gn=[["abort","abort"],[J,"animationEnd"],[X,"animationIteration"],[Z,"animationStart"],["canplay","canPlay"],["canplaythrough","canPlayThrough"],["drag","drag"],["dragenter","dragEnter"],["dragexit","dragExit"],["dragleave","dragLeave"],["dragover","dragOver"],["durationchange","durationChange"],["emptied","emptied"],["encrypted","encrypted"],["ended","ended"],["error","error"],["gotpointercapture","gotPointerCapture"],["load","load"],["loadeddata","loadedData"],["loadedmetadata","loadedMetadata"],["loadstart","loadStart"],["lostpointercapture","lostPointerCapture"],["mousemove","mouseMove"],["mouseout","mouseOut"],["mouseover","mouseOver"],["playing","playing"],["pointermove","pointerMove"],["pointerout","pointerOut"],["pointerover","pointerOver"],["progress","progress"],["scroll","scroll"],["seeking","seeking"],["stalled","stalled"],["suspend","suspend"],["timeupdate","timeUpdate"],["toggle","toggle"],["touchmove","touchMove"],[ee,"transitionEnd"],["waiting","waiting"],["wheel","wheel"]],vn={},yn={};function Dn(e,t){var n=e[0],r="on"+((e=e[1])[0].toUpperCase()+e.slice(1));t={phasedRegistrationNames:{bubbled:r,captured:r+"Capture"},dependencies:[n],isInteractive:t},vn[e]=t,yn[n]=t}[["blur","blur"],["cancel","cancel"],["click","click"],["close","close"],["contextmenu","contextMenu"],["copy","copy"],["cut","cut"],["auxclick","auxClick"],["dblclick","doubleClick"],["dragend","dragEnd"],["dragstart","dragStart"],["drop","drop"],["focus","focus"],["input","input"],["invalid","invalid"],["keydown","keyDown"],["keypress","keyPress"],["keyup","keyUp"],["mousedown","mouseDown"],["mouseup","mouseUp"],["paste","paste"],["pause","pause"],["play","play"],["pointercancel","pointerCancel"],["pointerdown","pointerDown"],["pointerup","pointerUp"],["ratechange","rateChange"],["reset","reset"],["seeked","seeked"],["submit","submit"],["touchcancel","touchCancel"],["touchend","touchEnd"],["touchstart","touchStart"],["volumechange","volumeChange"]].forEach(function(e){Dn(e,!0)}),gn.forEach(function(e){Dn(e,!1)});var bn={eventTypes:vn,isInteractiveTopLevelEventType:function(e){return void 0!==(e=yn[e])&&!0===e.isInteractive},extractEvents:function(e,t,n,r){var u=yn[e];if(!u)return null;switch(e){case"keypress":if(0===ln(n))return null;case"keydown":case"keyup":e=fn;break;case"blur":case"focus":e=an;break;case"click":if(2===n.button)return null;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":e=Kt;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":e=dn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":e=pn;break;case J:case X:case Z:e=un;break;case ee:e=hn;break;case"scroll":e=qt;break;case"wheel":e=mn;break;case"copy":case"cut":case"paste":e=on;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":e=Qt;break;default:e=le}return V(t=e.getPooled(u,t,n,r)),t}},An=bn.isInteractiveTopLevelEventType,Cn=[];function En(e){var t=e.targetInst,n=t;do{if(!n){e.ancestors.push(n);break}var r;for(r=n;r.return;)r=r.return;if(!(r=3!==r.tag?null:r.stateNode.containerInfo))break;e.ancestors.push(n),n=R(r)}while(n);for(n=0;n<e.ancestors.length;n++){t=e.ancestors[n];var u=je(e.nativeEvent);r=e.topLevelType;for(var o=e.nativeEvent,i=null,a=0;a<v.length;a++){var l=v[a];l&&(l=l.extractEvents(r,t,o,u))&&(i=w(i,l))}_(i)}}var Fn=!0;function wn(e,t){if(!t)return null;var n=(An(e)?Bn:kn).bind(null,e);t.addEventListener(e,n,!1)}function xn(e,t){if(!t)return null;var n=(An(e)?Bn:kn).bind(null,e);t.addEventListener(e,n,!0)}function Bn(e,t){Oe(kn,e,t)}function kn(e,t){if(Fn){var n=je(t);if(null===(n=R(n))||"number"!==typeof n.tag||2===tn(n)||(n=null),Cn.length){var r=Cn.pop();r.topLevelType=e,r.nativeEvent=t,r.targetInst=n,e=r}else e={topLevelType:e,nativeEvent:t,targetInst:n,ancestors:[]};try{Ie(En,e)}finally{e.topLevelType=null,e.nativeEvent=null,e.targetInst=null,e.ancestors.length=0,10>Cn.length&&Cn.push(e)}}}var Sn={},Tn=0,_n="_reactListenersID"+(""+Math.random()).slice(2);function Pn(e){return Object.prototype.hasOwnProperty.call(e,_n)||(e[_n]=Tn++,Sn[e[_n]]={}),Sn[e[_n]]}function On(e){if("undefined"===typeof(e=e||("undefined"!==typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function Nn(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function Rn(e,t){var n,r=Nn(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=Nn(r)}}function In(){for(var e=window,t=On();t instanceof e.HTMLIFrameElement;){try{var n="string"===typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=On((e=t.contentWindow).document)}return t}function Ln(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function Mn(e){var t=In(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&function e(t,n){return!(!t||!n)&&(t===n||(!t||3!==t.nodeType)&&(n&&3===n.nodeType?e(t,n.parentNode):"contains"in t?t.contains(n):!!t.compareDocumentPosition&&!!(16&t.compareDocumentPosition(n))))}(n.ownerDocument.documentElement,n)){if(null!==r&&Ln(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var u=n.textContent.length,o=Math.min(r.start,u);r=void 0===r.end?o:Math.min(r.end,u),!e.extend&&o>r&&(u=r,r=o,o=u),u=Rn(n,o);var i=Rn(n,r);u&&i&&(1!==e.rangeCount||e.anchorNode!==u.node||e.anchorOffset!==u.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(u.node,u.offset),e.removeAllRanges(),o>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"===typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var jn=W&&"documentMode"in document&&11>=document.documentMode,qn={select:{phasedRegistrationNames:{bubbled:"onSelect",captured:"onSelectCapture"},dependencies:"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")}},Un=null,zn=null,Hn=null,Vn=!1;function Wn(e,t){var n=t.window===t?t.document:9===t.nodeType?t:t.ownerDocument;return Vn||null==Un||Un!==On(n)?null:("selectionStart"in(n=Un)&&Ln(n)?n={start:n.selectionStart,end:n.selectionEnd}:n={anchorNode:(n=(n.ownerDocument&&n.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:n.anchorOffset,focusNode:n.focusNode,focusOffset:n.focusOffset},Hn&&en(Hn,n)?null:(Hn=n,(e=le.getPooled(qn.select,zn,e,t)).type="select",e.target=Un,V(e),e))}var Gn={eventTypes:qn,extractEvents:function(e,t,n,r){var u,o=r.window===r?r.document:9===r.nodeType?r:r.ownerDocument;if(!(u=!o)){e:{o=Pn(o),u=b.onSelect;for(var i=0;i<u.length;i++){var a=u[i];if(!o.hasOwnProperty(a)||!o[a]){o=!1;break e}}o=!0}u=!o}if(u)return null;switch(o=t?L(t):window,e){case"focus":(Me(o)||"true"===o.contentEditable)&&(Un=o,zn=t,Hn=null);break;case"blur":Hn=zn=Un=null;break;case"mousedown":Vn=!0;break;case"contextmenu":case"mouseup":case"dragend":return Vn=!1,Wn(n,r);case"selectionchange":if(jn)break;case"keydown":case"keyup":return Wn(n,r)}return null}};function $n(e,t){return e=u({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,function(e){null!=e&&(t+=e)}),t}(t.children))&&(e.children=t),e}function Kn(e,t,n,r){if(e=e.options,t){t={};for(var u=0;u<n.length;u++)t["$"+n[u]]=!0;for(n=0;n<e.length;n++)u=t.hasOwnProperty("$"+e[n].value),e[n].selected!==u&&(e[n].selected=u),u&&r&&(e[n].defaultSelected=!0)}else{for(n=""+yt(n),t=null,u=0;u<e.length;u++){if(e[u].value===n)return e[u].selected=!0,void(r&&(e[u].defaultSelected=!0));null!==t||e[u].disabled||(t=e[u])}null!==t&&(t.selected=!0)}}function Qn(e,t){return null!=t.dangerouslySetInnerHTML&&i("91"),u({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function Yn(e,t){var n=t.value;null==n&&(n=t.defaultValue,null!=(t=t.children)&&(null!=n&&i("92"),Array.isArray(t)&&(1>=t.length||i("93"),t=t[0]),n=t),null==n&&(n="")),e._wrapperState={initialValue:yt(n)}}function Jn(e,t){var n=yt(t.value),r=yt(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function Xn(e){var t=e.textContent;t===e._wrapperState.initialValue&&(e.value=t)}S.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")),A=M,C=I,E=L,S.injectEventPluginsByName({SimpleEventPlugin:bn,EnterLeaveEventPlugin:Jt,ChangeEventPlugin:jt,SelectEventPlugin:Gn,BeforeInputEventPlugin:we});var Zn={html:"http://www.w3.org/1999/xhtml",mathml:"http://www.w3.org/1998/Math/MathML",svg:"http://www.w3.org/2000/svg"};function er(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function tr(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?er(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var nr,rr=void 0,ur=(nr=function(e,t){if(e.namespaceURI!==Zn.svg||"innerHTML"in e)e.innerHTML=t;else{for((rr=rr||document.createElement("div")).innerHTML="<svg>"+t+"</svg>",t=rr.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction(function(){return nr(e,t)})}:nr);function or(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ir={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},ar=["Webkit","ms","Moz","O"];function lr(e,t,n){return null==t||"boolean"===typeof t||""===t?"":n||"number"!==typeof t||0===t||ir.hasOwnProperty(e)&&ir[e]?(""+t).trim():t+"px"}function cr(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),u=lr(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,u):e[n]=u}}Object.keys(ir).forEach(function(e){ar.forEach(function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ir[t]=ir[e]})});var sr=u({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function fr(e,t){t&&(sr[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML)&&i("137",e,""),null!=t.dangerouslySetInnerHTML&&(null!=t.children&&i("60"),"object"===typeof t.dangerouslySetInnerHTML&&"__html"in t.dangerouslySetInnerHTML||i("61")),null!=t.style&&"object"!==typeof t.style&&i("62",""))}function dr(e,t){if(-1===e.indexOf("-"))return"string"===typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function pr(e,t){var n=Pn(e=9===e.nodeType||11===e.nodeType?e:e.ownerDocument);t=b[t];for(var r=0;r<t.length;r++){var u=t[r];if(!n.hasOwnProperty(u)||!n[u]){switch(u){case"scroll":xn("scroll",e);break;case"focus":case"blur":xn("focus",e),xn("blur",e),n.blur=!0,n.focus=!0;break;case"cancel":case"close":qe(u)&&xn(u,e);break;case"invalid":case"submit":case"reset":break;default:-1===te.indexOf(u)&&wn(u,e)}n[u]=!0}}}function hr(){}var mr=null,gr=null;function vr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function yr(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"===typeof t.children||"number"===typeof t.children||"object"===typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var Dr="function"===typeof setTimeout?setTimeout:void 0,br="function"===typeof clearTimeout?clearTimeout:void 0,Ar=o.unstable_scheduleCallback,Cr=o.unstable_cancelCallback;function Er(e){for(e=e.nextSibling;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}function Fr(e){for(e=e.firstChild;e&&1!==e.nodeType&&3!==e.nodeType;)e=e.nextSibling;return e}new Set;var wr=[],xr=-1;function Br(e){0>xr||(e.current=wr[xr],wr[xr]=null,xr--)}function kr(e,t){wr[++xr]=e.current,e.current=t}var Sr={},Tr={current:Sr},_r={current:!1},Pr=Sr;function Or(e,t){var n=e.type.contextTypes;if(!n)return Sr;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var u,o={};for(u in n)o[u]=t[u];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function Nr(e){return null!==(e=e.childContextTypes)&&void 0!==e}function Rr(e){Br(_r),Br(Tr)}function Ir(e){Br(_r),Br(Tr)}function Lr(e,t,n){Tr.current!==Sr&&i("168"),kr(Tr,t),kr(_r,n)}function Mr(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!==typeof r.getChildContext)return n;for(var o in r=r.getChildContext())o in e||i("108",at(t)||"Unknown",o);return u({},n,r)}function jr(e){var t=e.stateNode;return t=t&&t.__reactInternalMemoizedMergedChildContext||Sr,Pr=Tr.current,kr(Tr,t),kr(_r,_r.current),!0}function qr(e,t,n){var r=e.stateNode;r||i("169"),n?(t=Mr(e,t,Pr),r.__reactInternalMemoizedMergedChildContext=t,Br(_r),Br(Tr),kr(Tr,t)):Br(_r),kr(_r,n)}var Ur=null,zr=null;function Hr(e){return function(t){try{return e(t)}catch(e){}}}function Vr(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.contextDependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.effectTag=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childExpirationTime=this.expirationTime=0,this.alternate=null}function Wr(e,t,n,r){return new Vr(e,t,n,r)}function Gr(e){return!(!(e=e.prototype)||!e.isReactComponent)}function $r(e,t){var n=e.alternate;return null===n?((n=Wr(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.effectTag=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childExpirationTime=e.childExpirationTime,n.expirationTime=e.expirationTime,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,n.contextDependencies=e.contextDependencies,n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Kr(e,t,n,r,u,o){var a=2;if(r=e,"function"===typeof e)Gr(e)&&(a=1);else if("string"===typeof e)a=5;else e:switch(e){case Qe:return Qr(n.children,u,o,t);case et:return Yr(n,3|u,o,t);case Ye:return Yr(n,2|u,o,t);case Je:return(e=Wr(12,n,t,4|u)).elementType=Je,e.type=Je,e.expirationTime=o,e;case nt:return(e=Wr(13,n,t,u)).elementType=nt,e.type=nt,e.expirationTime=o,e;default:if("object"===typeof e&&null!==e)switch(e.$$typeof){case Xe:a=10;break e;case Ze:a=9;break e;case tt:a=11;break e;case rt:a=14;break e;case ut:a=16,r=null;break e}i("130",null==e?e:typeof e,"")}return(t=Wr(a,n,t,u)).elementType=e,t.type=r,t.expirationTime=o,t}function Qr(e,t,n,r){return(e=Wr(7,e,r,t)).expirationTime=n,e}function Yr(e,t,n,r){return e=Wr(8,e,r,t),t=0===(1&t)?Ye:et,e.elementType=t,e.type=t,e.expirationTime=n,e}function Jr(e,t,n){return(e=Wr(6,e,null,t)).expirationTime=n,e}function Xr(e,t,n){return(t=Wr(4,null!==e.children?e.children:[],e.key,t)).expirationTime=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Zr(e,t){e.didError=!1;var n=e.earliestPendingTime;0===n?e.earliestPendingTime=e.latestPendingTime=t:n<t?e.earliestPendingTime=t:e.latestPendingTime>t&&(e.latestPendingTime=t),nu(t,e)}function eu(e,t){e.didError=!1,e.latestPingedTime>=t&&(e.latestPingedTime=0);var n=e.earliestPendingTime,r=e.latestPendingTime;n===t?e.earliestPendingTime=r===t?e.latestPendingTime=0:r:r===t&&(e.latestPendingTime=n),n=e.earliestSuspendedTime,r=e.latestSuspendedTime,0===n?e.earliestSuspendedTime=e.latestSuspendedTime=t:n<t?e.earliestSuspendedTime=t:r>t&&(e.latestSuspendedTime=t),nu(t,e)}function tu(e,t){var n=e.earliestPendingTime;return n>t&&(t=n),(e=e.earliestSuspendedTime)>t&&(t=e),t}function nu(e,t){var n=t.earliestSuspendedTime,r=t.latestSuspendedTime,u=t.earliestPendingTime,o=t.latestPingedTime;0===(u=0!==u?u:o)&&(0===e||r<e)&&(u=r),0!==(e=u)&&n>e&&(e=n),t.nextExpirationTimeToWorkOn=u,t.expirationTime=e}function ru(e,t){if(e&&e.defaultProps)for(var n in t=u({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}var uu=(new r.Component).refs;function ou(e,t,n,r){n=null===(n=n(r,t=e.memoizedState))||void 0===n?t:u({},t,n),e.memoizedState=n,null!==(r=e.updateQueue)&&0===e.expirationTime&&(r.baseState=n)}var iu={isMounted:function(e){return!!(e=e._reactInternalFiber)&&2===tn(e)},enqueueSetState:function(e,t,n){e=e._reactInternalFiber;var r=Ca(),u=Yo(r=Qi(r,e));u.payload=t,void 0!==n&&null!==n&&(u.callback=n),Hi(),Xo(e,u),Xi(e,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternalFiber;var r=Ca(),u=Yo(r=Qi(r,e));u.tag=Vo,u.payload=t,void 0!==n&&null!==n&&(u.callback=n),Hi(),Xo(e,u),Xi(e,r)},enqueueForceUpdate:function(e,t){e=e._reactInternalFiber;var n=Ca(),r=Yo(n=Qi(n,e));r.tag=Wo,void 0!==t&&null!==t&&(r.callback=t),Hi(),Xo(e,r),Xi(e,n)}};function au(e,t,n,r,u,o,i){return"function"===typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,i):!t.prototype||!t.prototype.isPureReactComponent||(!en(n,r)||!en(u,o))}function lu(e,t,n){var r=!1,u=Sr,o=t.contextType;return"object"===typeof o&&null!==o?o=zo(o):(u=Nr(t)?Pr:Tr.current,o=(r=null!==(r=t.contextTypes)&&void 0!==r)?Or(e,u):Sr),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=iu,e.stateNode=t,t._reactInternalFiber=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=u,e.__reactInternalMemoizedMaskedChildContext=o),t}function cu(e,t,n,r){e=t.state,"function"===typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"===typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&iu.enqueueReplaceState(t,t.state,null)}function su(e,t,n,r){var u=e.stateNode;u.props=n,u.state=e.memoizedState,u.refs=uu;var o=t.contextType;"object"===typeof o&&null!==o?u.context=zo(o):(o=Nr(t)?Pr:Tr.current,u.context=Or(e,o)),null!==(o=e.updateQueue)&&(ni(e,o,n,u,r),u.state=e.memoizedState),"function"===typeof(o=t.getDerivedStateFromProps)&&(ou(e,t,o,n),u.state=e.memoizedState),"function"===typeof t.getDerivedStateFromProps||"function"===typeof u.getSnapshotBeforeUpdate||"function"!==typeof u.UNSAFE_componentWillMount&&"function"!==typeof u.componentWillMount||(t=u.state,"function"===typeof u.componentWillMount&&u.componentWillMount(),"function"===typeof u.UNSAFE_componentWillMount&&u.UNSAFE_componentWillMount(),t!==u.state&&iu.enqueueReplaceState(u,u.state,null),null!==(o=e.updateQueue)&&(ni(e,o,n,u,r),u.state=e.memoizedState)),"function"===typeof u.componentDidMount&&(e.effectTag|=4)}var fu=Array.isArray;function du(e,t,n){if(null!==(e=n.ref)&&"function"!==typeof e&&"object"!==typeof e){if(n._owner){n=n._owner;var r=void 0;n&&(1!==n.tag&&i("309"),r=n.stateNode),r||i("147",e);var u=""+e;return null!==t&&null!==t.ref&&"function"===typeof t.ref&&t.ref._stringRef===u?t.ref:((t=function(e){var t=r.refs;t===uu&&(t=r.refs={}),null===e?delete t[u]:t[u]=e})._stringRef=u,t)}"string"!==typeof e&&i("284"),n._owner||i("290",e)}return e}function pu(e,t){"textarea"!==e.type&&i("31","[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t,"")}function hu(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.effectTag=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function u(e,t,n){return(e=$r(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.effectTag=2,n):r:(t.effectTag=2,n):n}function a(t){return e&&null===t.alternate&&(t.effectTag=2),t}function l(e,t,n,r){return null===t||6!==t.tag?((t=Jr(n,e.mode,r)).return=e,t):((t=u(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=u(t,n.props)).ref=du(e,t,n),r.return=e,r):((r=Kr(n.type,n.key,n.props,null,e.mode,r)).ref=du(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Xr(n,e.mode,r)).return=e,t):((t=u(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Qr(n,e.mode,r,o)).return=e,t):((t=u(t,n)).return=e,t)}function d(e,t,n){if("string"===typeof t||"number"===typeof t)return(t=Jr(""+t,e.mode,n)).return=e,t;if("object"===typeof t&&null!==t){switch(t.$$typeof){case $e:return(n=Kr(t.type,t.key,t.props,null,e.mode,n)).ref=du(e,null,t),n.return=e,n;case Ke:return(t=Xr(t,e.mode,n)).return=e,t}if(fu(t)||it(t))return(t=Qr(t,e.mode,n,null)).return=e,t;pu(e,t)}return null}function p(e,t,n,r){var u=null!==t?t.key:null;if("string"===typeof n||"number"===typeof n)return null!==u?null:l(e,t,""+n,r);if("object"===typeof n&&null!==n){switch(n.$$typeof){case $e:return n.key===u?n.type===Qe?f(e,t,n.props.children,r,u):c(e,t,n,r):null;case Ke:return n.key===u?s(e,t,n,r):null}if(fu(n)||it(n))return null!==u?null:f(e,t,n,r,null);pu(e,n)}return null}function h(e,t,n,r,u){if("string"===typeof r||"number"===typeof r)return l(t,e=e.get(n)||null,""+r,u);if("object"===typeof r&&null!==r){switch(r.$$typeof){case $e:return e=e.get(null===r.key?n:r.key)||null,r.type===Qe?f(t,e,r.props.children,u,r.key):c(t,e,r,u);case Ke:return s(t,e=e.get(null===r.key?n:r.key)||null,r,u)}if(fu(r)||it(r))return f(t,e=e.get(n)||null,r,u,null);pu(t,r)}return null}function m(u,i,a,l){for(var c=null,s=null,f=i,m=i=0,g=null;null!==f&&m<a.length;m++){f.index>m?(g=f,f=null):g=f.sibling;var v=p(u,f,a[m],l);if(null===v){null===f&&(f=g);break}e&&f&&null===v.alternate&&t(u,f),i=o(v,i,m),null===s?c=v:s.sibling=v,s=v,f=g}if(m===a.length)return n(u,f),c;if(null===f){for(;m<a.length;m++)(f=d(u,a[m],l))&&(i=o(f,i,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(u,f);m<a.length;m++)(g=h(f,u,m,a[m],l))&&(e&&null!==g.alternate&&f.delete(null===g.key?m:g.key),i=o(g,i,m),null===s?c=g:s.sibling=g,s=g);return e&&f.forEach(function(e){return t(u,e)}),c}function g(u,a,l,c){var s=it(l);"function"!==typeof s&&i("150"),null==(l=s.call(l))&&i("151");for(var f=s=null,m=a,g=a=0,v=null,y=l.next();null!==m&&!y.done;g++,y=l.next()){m.index>g?(v=m,m=null):v=m.sibling;var D=p(u,m,y.value,c);if(null===D){m||(m=v);break}e&&m&&null===D.alternate&&t(u,m),a=o(D,a,g),null===f?s=D:f.sibling=D,f=D,m=v}if(y.done)return n(u,m),s;if(null===m){for(;!y.done;g++,y=l.next())null!==(y=d(u,y.value,c))&&(a=o(y,a,g),null===f?s=y:f.sibling=y,f=y);return s}for(m=r(u,m);!y.done;g++,y=l.next())null!==(y=h(m,u,g,y.value,c))&&(e&&null!==y.alternate&&m.delete(null===y.key?g:y.key),a=o(y,a,g),null===f?s=y:f.sibling=y,f=y);return e&&m.forEach(function(e){return t(u,e)}),s}return function(e,r,o,l){var c="object"===typeof o&&null!==o&&o.type===Qe&&null===o.key;c&&(o=o.props.children);var s="object"===typeof o&&null!==o;if(s)switch(o.$$typeof){case $e:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){if(7===c.tag?o.type===Qe:c.elementType===o.type){n(e,c.sibling),(r=u(c,o.type===Qe?o.props.children:o.props)).ref=du(e,c,o),r.return=e,e=r;break e}n(e,c);break}t(e,c),c=c.sibling}o.type===Qe?((r=Qr(o.props.children,e.mode,l,o.key)).return=e,e=r):((l=Kr(o.type,o.key,o.props,null,e.mode,l)).ref=du(e,r,o),l.return=e,e=l)}return a(e);case Ke:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=u(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Xr(o,e.mode,l)).return=e,e=r}return a(e)}if("string"===typeof o||"number"===typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=u(r,o)).return=e,e=r):(n(e,r),(r=Jr(o,e.mode,l)).return=e,e=r),a(e);if(fu(o))return m(e,r,o,l);if(it(o))return g(e,r,o,l);if(s&&pu(e,o),"undefined"===typeof o&&!c)switch(e.tag){case 1:case 0:i("152",(l=e.type).displayName||l.name||"Component")}return n(e,r)}}var mu=hu(!0),gu=hu(!1),vu={},yu={current:vu},Du={current:vu},bu={current:vu};function Au(e){return e===vu&&i("174"),e}function Cu(e,t){kr(bu,t),kr(Du,e),kr(yu,vu);var n=t.nodeType;switch(n){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:tr(null,"");break;default:t=tr(t=(n=8===n?t.parentNode:t).namespaceURI||null,n=n.tagName)}Br(yu),kr(yu,t)}function Eu(e){Br(yu),Br(Du),Br(bu)}function Fu(e){Au(bu.current);var t=Au(yu.current),n=tr(t,e.type);t!==n&&(kr(Du,e),kr(yu,n))}function wu(e){Du.current===e&&(Br(yu),Br(Du))}var xu=0,Bu=2,ku=4,Su=8,Tu=16,_u=32,Pu=64,Ou=128,Nu=Ve.ReactCurrentDispatcher,Ru=0,Iu=null,Lu=null,Mu=null,ju=null,qu=null,Uu=null,zu=0,Hu=null,Vu=0,Wu=!1,Gu=null,$u=0;function Ku(){i("321")}function Qu(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!Xt(e[n],t[n]))return!1;return!0}function Yu(e,t,n,r,u,o){if(Ru=o,Iu=t,Mu=null!==e?e.memoizedState:null,Nu.current=null===Mu?co:so,t=n(r,u),Wu){do{Wu=!1,$u+=1,Mu=null!==e?e.memoizedState:null,Uu=ju,Hu=qu=Lu=null,Nu.current=so,t=n(r,u)}while(Wu);Gu=null,$u=0}return Nu.current=lo,(e=Iu).memoizedState=ju,e.expirationTime=zu,e.updateQueue=Hu,e.effectTag|=Vu,e=null!==Lu&&null!==Lu.next,Ru=0,Uu=qu=ju=Mu=Lu=Iu=null,zu=0,Hu=null,Vu=0,e&&i("300"),t}function Ju(){Nu.current=lo,Ru=0,Uu=qu=ju=Mu=Lu=Iu=null,zu=0,Hu=null,Vu=0,Wu=!1,Gu=null,$u=0}function Xu(){var e={memoizedState:null,baseState:null,queue:null,baseUpdate:null,next:null};return null===qu?ju=qu=e:qu=qu.next=e,qu}function Zu(){if(null!==Uu)Uu=(qu=Uu).next,Mu=null!==(Lu=Mu)?Lu.next:null;else{null===Mu&&i("310");var e={memoizedState:(Lu=Mu).memoizedState,baseState:Lu.baseState,queue:Lu.queue,baseUpdate:Lu.baseUpdate,next:null};qu=null===qu?ju=e:qu.next=e,Mu=Lu.next}return qu}function eo(e,t){return"function"===typeof t?t(e):t}function to(e){var t=Zu(),n=t.queue;if(null===n&&i("311"),n.lastRenderedReducer=e,0<$u){var r=n.dispatch;if(null!==Gu){var u=Gu.get(n);if(void 0!==u){Gu.delete(n);var o=t.memoizedState;do{o=e(o,u.action),u=u.next}while(null!==u);return Xt(o,t.memoizedState)||(Co=!0),t.memoizedState=o,t.baseUpdate===n.last&&(t.baseState=o),n.lastRenderedState=o,[o,r]}}return[t.memoizedState,r]}r=n.last;var a=t.baseUpdate;if(o=t.baseState,null!==a?(null!==r&&(r.next=null),r=a.next):r=null!==r?r.next:null,null!==r){var l=u=null,c=r,s=!1;do{var f=c.expirationTime;f<Ru?(s||(s=!0,l=a,u=o),f>zu&&(zu=f)):o=c.eagerReducer===e?c.eagerState:e(o,c.action),a=c,c=c.next}while(null!==c&&c!==r);s||(l=a,u=o),Xt(o,t.memoizedState)||(Co=!0),t.memoizedState=o,t.baseUpdate=l,t.baseState=u,n.lastRenderedState=o}return[t.memoizedState,n.dispatch]}function no(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===Hu?(Hu={lastEffect:null}).lastEffect=e.next=e:null===(t=Hu.lastEffect)?Hu.lastEffect=e.next=e:(n=t.next,t.next=e,e.next=n,Hu.lastEffect=e),e}function ro(e,t,n,r){var u=Xu();Vu|=e,u.memoizedState=no(t,n,void 0,void 0===r?null:r)}function uo(e,t,n,r){var u=Zu();r=void 0===r?null:r;var o=void 0;if(null!==Lu){var i=Lu.memoizedState;if(o=i.destroy,null!==r&&Qu(r,i.deps))return void no(xu,n,o,r)}Vu|=e,u.memoizedState=no(t,n,o,r)}function oo(e,t){return"function"===typeof t?(e=e(),t(e),function(){t(null)}):null!==t&&void 0!==t?(e=e(),t.current=e,function(){t.current=null}):void 0}function io(){}function ao(e,t,n){25>$u||i("301");var r=e.alternate;if(e===Iu||null!==r&&r===Iu)if(Wu=!0,e={expirationTime:Ru,action:n,eagerReducer:null,eagerState:null,next:null},null===Gu&&(Gu=new Map),void 0===(n=Gu.get(t)))Gu.set(t,e);else{for(t=n;null!==t.next;)t=t.next;t.next=e}else{Hi();var u=Ca(),o={expirationTime:u=Qi(u,e),action:n,eagerReducer:null,eagerState:null,next:null},a=t.last;if(null===a)o.next=o;else{var l=a.next;null!==l&&(o.next=l),a.next=o}if(t.last=o,0===e.expirationTime&&(null===r||0===r.expirationTime)&&null!==(r=t.lastRenderedReducer))try{var c=t.lastRenderedState,s=r(c,n);if(o.eagerReducer=r,o.eagerState=s,Xt(s,c))return}catch(e){}Xi(e,u)}}var lo={readContext:zo,useCallback:Ku,useContext:Ku,useEffect:Ku,useImperativeHandle:Ku,useLayoutEffect:Ku,useMemo:Ku,useReducer:Ku,useRef:Ku,useState:Ku,useDebugValue:Ku},co={readContext:zo,useCallback:function(e,t){return Xu().memoizedState=[e,void 0===t?null:t],e},useContext:zo,useEffect:function(e,t){return ro(516,Ou|Pu,e,t)},useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,ro(4,ku|_u,oo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ro(4,ku|_u,e,t)},useMemo:function(e,t){var n=Xu();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=Xu();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={last:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=ao.bind(null,Iu,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},Xu().memoizedState=e},useState:function(e){var t=Xu();return"function"===typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={last:null,dispatch:null,lastRenderedReducer:eo,lastRenderedState:e}).dispatch=ao.bind(null,Iu,e),[t.memoizedState,e]},useDebugValue:io},so={readContext:zo,useCallback:function(e,t){var n=Zu();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Qu(t,r[1])?r[0]:(n.memoizedState=[e,t],e)},useContext:zo,useEffect:function(e,t){return uo(516,Ou|Pu,e,t)},useImperativeHandle:function(e,t,n){return n=null!==n&&void 0!==n?n.concat([e]):null,uo(4,ku|_u,oo.bind(null,t,e),n)},useLayoutEffect:function(e,t){return uo(4,ku|_u,e,t)},useMemo:function(e,t){var n=Zu();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&Qu(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)},useReducer:to,useRef:function(){return Zu().memoizedState},useState:function(e){return to(eo)},useDebugValue:io},fo=null,po=null,ho=!1;function mo(e,t){var n=Wr(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.effectTag=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function go(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function vo(e){if(ho){var t=po;if(t){var n=t;if(!go(e,t)){if(!(t=Er(n))||!go(e,t))return e.effectTag|=2,ho=!1,void(fo=e);mo(fo,n)}fo=e,po=Fr(t)}else e.effectTag|=2,ho=!1,fo=e}}function yo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&18!==e.tag;)e=e.return;fo=e}function Do(e){if(e!==fo)return!1;if(!ho)return yo(e),ho=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!yr(t,e.memoizedProps))for(t=po;t;)mo(e,t),t=Er(t);return yo(e),po=fo?Er(e.stateNode):null,!0}function bo(){po=fo=null,ho=!1}var Ao=Ve.ReactCurrentOwner,Co=!1;function Eo(e,t,n,r){t.child=null===e?gu(t,null,n,r):mu(t,e.child,n,r)}function Fo(e,t,n,r,u){n=n.render;var o=t.ref;return Uo(t,u),r=Yu(e,t,n,r,o,u),null===e||Co?(t.effectTag|=1,Eo(e,t,r,u),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=u&&(e.expirationTime=0),Oo(e,t,u))}function wo(e,t,n,r,u,o){if(null===e){var i=n.type;return"function"!==typeof i||Gr(i)||void 0!==i.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Kr(n.type,null,r,null,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=i,xo(e,t,i,r,u,o))}return i=e.child,u<o&&(u=i.memoizedProps,(n=null!==(n=n.compare)?n:en)(u,r)&&e.ref===t.ref)?Oo(e,t,o):(t.effectTag|=1,(e=$r(i,r)).ref=t.ref,e.return=t,t.child=e)}function xo(e,t,n,r,u,o){return null!==e&&en(e.memoizedProps,r)&&e.ref===t.ref&&(Co=!1,u<o)?Oo(e,t,o):ko(e,t,n,r,o)}function Bo(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.effectTag|=128)}function ko(e,t,n,r,u){var o=Nr(n)?Pr:Tr.current;return o=Or(t,o),Uo(t,u),n=Yu(e,t,n,r,o,u),null===e||Co?(t.effectTag|=1,Eo(e,t,n,u),t.child):(t.updateQueue=e.updateQueue,t.effectTag&=-517,e.expirationTime<=u&&(e.expirationTime=0),Oo(e,t,u))}function So(e,t,n,r,u){if(Nr(n)){var o=!0;jr(t)}else o=!1;if(Uo(t,u),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),lu(t,n,r),su(t,n,r,u),r=!0;else if(null===e){var i=t.stateNode,a=t.memoizedProps;i.props=a;var l=i.context,c=n.contextType;"object"===typeof c&&null!==c?c=zo(c):c=Or(t,c=Nr(n)?Pr:Tr.current);var s=n.getDerivedStateFromProps,f="function"===typeof s||"function"===typeof i.getSnapshotBeforeUpdate;f||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(a!==r||l!==c)&&cu(t,i,r,c),$o=!1;var d=t.memoizedState;l=i.state=d;var p=t.updateQueue;null!==p&&(ni(t,p,r,i,u),l=t.memoizedState),a!==r||d!==l||_r.current||$o?("function"===typeof s&&(ou(t,n,s,r),l=t.memoizedState),(a=$o||au(t,n,a,r,d,l,c))?(f||"function"!==typeof i.UNSAFE_componentWillMount&&"function"!==typeof i.componentWillMount||("function"===typeof i.componentWillMount&&i.componentWillMount(),"function"===typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"===typeof i.componentDidMount&&(t.effectTag|=4)):("function"===typeof i.componentDidMount&&(t.effectTag|=4),t.memoizedProps=r,t.memoizedState=l),i.props=r,i.state=l,i.context=c,r=a):("function"===typeof i.componentDidMount&&(t.effectTag|=4),r=!1)}else i=t.stateNode,a=t.memoizedProps,i.props=t.type===t.elementType?a:ru(t.type,a),l=i.context,"object"===typeof(c=n.contextType)&&null!==c?c=zo(c):c=Or(t,c=Nr(n)?Pr:Tr.current),(f="function"===typeof(s=n.getDerivedStateFromProps)||"function"===typeof i.getSnapshotBeforeUpdate)||"function"!==typeof i.UNSAFE_componentWillReceiveProps&&"function"!==typeof i.componentWillReceiveProps||(a!==r||l!==c)&&cu(t,i,r,c),$o=!1,l=t.memoizedState,d=i.state=l,null!==(p=t.updateQueue)&&(ni(t,p,r,i,u),d=t.memoizedState),a!==r||l!==d||_r.current||$o?("function"===typeof s&&(ou(t,n,s,r),d=t.memoizedState),(s=$o||au(t,n,a,r,l,d,c))?(f||"function"!==typeof i.UNSAFE_componentWillUpdate&&"function"!==typeof i.componentWillUpdate||("function"===typeof i.componentWillUpdate&&i.componentWillUpdate(r,d,c),"function"===typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,d,c)),"function"===typeof i.componentDidUpdate&&(t.effectTag|=4),"function"===typeof i.getSnapshotBeforeUpdate&&(t.effectTag|=256)):("function"!==typeof i.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),t.memoizedProps=r,t.memoizedState=d),i.props=r,i.state=d,i.context=c,r=s):("function"!==typeof i.componentDidUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=4),"function"!==typeof i.getSnapshotBeforeUpdate||a===e.memoizedProps&&l===e.memoizedState||(t.effectTag|=256),r=!1);return To(e,t,n,r,o,u)}function To(e,t,n,r,u,o){Bo(e,t);var i=0!==(64&t.effectTag);if(!r&&!i)return u&&qr(t,n,!1),Oo(e,t,o);r=t.stateNode,Ao.current=t;var a=i&&"function"!==typeof n.getDerivedStateFromError?null:r.render();return t.effectTag|=1,null!==e&&i?(t.child=mu(t,e.child,null,o),t.child=mu(t,null,a,o)):Eo(e,t,a,o),t.memoizedState=r.state,u&&qr(t,n,!0),t.child}function _o(e){var t=e.stateNode;t.pendingContext?Lr(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Lr(0,t.context,!1),Cu(e,t.containerInfo)}function Po(e,t,n){var r=t.mode,u=t.pendingProps,o=t.memoizedState;if(0===(64&t.effectTag)){o=null;var i=!1}else o={timedOutAt:null!==o?o.timedOutAt:0},i=!0,t.effectTag&=-65;if(null===e)if(i){var a=u.fallback;e=Qr(null,r,0,null),0===(1&t.mode)&&(e.child=null!==t.memoizedState?t.child.child:t.child),r=Qr(a,r,n,null),e.sibling=r,(n=e).return=r.return=t}else n=r=gu(t,null,u.children,n);else null!==e.memoizedState?(a=(r=e.child).sibling,i?(n=u.fallback,u=$r(r,r.pendingProps),0===(1&t.mode)&&((i=null!==t.memoizedState?t.child.child:t.child)!==r.child&&(u.child=i)),r=u.sibling=$r(a,n,a.expirationTime),n=u,u.childExpirationTime=0,n.return=r.return=t):n=r=mu(t,r.child,u.children,n)):(a=e.child,i?(i=u.fallback,(u=Qr(null,r,0,null)).child=a,0===(1&t.mode)&&(u.child=null!==t.memoizedState?t.child.child:t.child),(r=u.sibling=Qr(i,r,n,null)).effectTag|=2,n=u,u.childExpirationTime=0,n.return=r.return=t):r=n=mu(t,a,u.children,n)),t.stateNode=e.stateNode;return t.memoizedState=o,t.child=n,r}function Oo(e,t,n){if(null!==e&&(t.contextDependencies=e.contextDependencies),t.childExpirationTime<n)return null;if(null!==e&&t.child!==e.child&&i("153"),null!==t.child){for(n=$r(e=t.child,e.pendingProps,e.expirationTime),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=$r(e,e.pendingProps,e.expirationTime)).return=t;n.sibling=null}return t.child}function No(e,t,n){var r=t.expirationTime;if(null!==e){if(e.memoizedProps!==t.pendingProps||_r.current)Co=!0;else if(r<n){switch(Co=!1,t.tag){case 3:_o(t),bo();break;case 5:Fu(t);break;case 1:Nr(t.type)&&jr(t);break;case 4:Cu(t,t.stateNode.containerInfo);break;case 10:jo(t,t.memoizedProps.value);break;case 13:if(null!==t.memoizedState)return 0!==(r=t.child.childExpirationTime)&&r>=n?Po(e,t,n):null!==(t=Oo(e,t,n))?t.sibling:null}return Oo(e,t,n)}}else Co=!1;switch(t.expirationTime=0,t.tag){case 2:r=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),e=t.pendingProps;var u=Or(t,Tr.current);if(Uo(t,n),u=Yu(null,t,r,e,u,n),t.effectTag|=1,"object"===typeof u&&null!==u&&"function"===typeof u.render&&void 0===u.$$typeof){if(t.tag=1,Ju(),Nr(r)){var o=!0;jr(t)}else o=!1;t.memoizedState=null!==u.state&&void 0!==u.state?u.state:null;var a=r.getDerivedStateFromProps;"function"===typeof a&&ou(t,r,a,e),u.updater=iu,t.stateNode=u,u._reactInternalFiber=t,su(t,r,e,n),t=To(null,t,r,!0,o,n)}else t.tag=0,Eo(null,t,u,n),t=t.child;return t;case 16:switch(u=t.elementType,null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),o=t.pendingProps,e=function(e){var t=e._result;switch(e._status){case 1:return t;case 2:case 0:throw t;default:switch(e._status=0,(t=(t=e._ctor)()).then(function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)},function(t){0===e._status&&(e._status=2,e._result=t)}),e._status){case 1:return e._result;case 2:throw e._result}throw e._result=t,t}}(u),t.type=e,u=t.tag=function(e){if("function"===typeof e)return Gr(e)?1:0;if(void 0!==e&&null!==e){if((e=e.$$typeof)===tt)return 11;if(e===rt)return 14}return 2}(e),o=ru(e,o),a=void 0,u){case 0:a=ko(null,t,e,o,n);break;case 1:a=So(null,t,e,o,n);break;case 11:a=Fo(null,t,e,o,n);break;case 14:a=wo(null,t,e,ru(e.type,o),r,n);break;default:i("306",e,"")}return a;case 0:return r=t.type,u=t.pendingProps,ko(e,t,r,u=t.elementType===r?u:ru(r,u),n);case 1:return r=t.type,u=t.pendingProps,So(e,t,r,u=t.elementType===r?u:ru(r,u),n);case 3:return _o(t),null===(r=t.updateQueue)&&i("282"),u=null!==(u=t.memoizedState)?u.element:null,ni(t,r,t.pendingProps,null,n),(r=t.memoizedState.element)===u?(bo(),t=Oo(e,t,n)):(u=t.stateNode,(u=(null===e||null===e.child)&&u.hydrate)&&(po=Fr(t.stateNode.containerInfo),fo=t,u=ho=!0),u?(t.effectTag|=2,t.child=gu(t,null,r,n)):(Eo(e,t,r,n),bo()),t=t.child),t;case 5:return Fu(t),null===e&&vo(t),r=t.type,u=t.pendingProps,o=null!==e?e.memoizedProps:null,a=u.children,yr(r,u)?a=null:null!==o&&yr(r,o)&&(t.effectTag|=16),Bo(e,t),1!==n&&1&t.mode&&u.hidden?(t.expirationTime=t.childExpirationTime=1,t=null):(Eo(e,t,a,n),t=t.child),t;case 6:return null===e&&vo(t),null;case 13:return Po(e,t,n);case 4:return Cu(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=mu(t,null,r,n):Eo(e,t,r,n),t.child;case 11:return r=t.type,u=t.pendingProps,Fo(e,t,r,u=t.elementType===r?u:ru(r,u),n);case 7:return Eo(e,t,t.pendingProps,n),t.child;case 8:case 12:return Eo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,u=t.pendingProps,a=t.memoizedProps,jo(t,o=u.value),null!==a){var l=a.value;if(0===(o=Xt(l,o)?0:0|("function"===typeof r._calculateChangedBits?r._calculateChangedBits(l,o):1073741823))){if(a.children===u.children&&!_r.current){t=Oo(e,t,n);break e}}else for(null!==(l=t.child)&&(l.return=t);null!==l;){var c=l.contextDependencies;if(null!==c){a=l.child;for(var s=c.first;null!==s;){if(s.context===r&&0!==(s.observedBits&o)){1===l.tag&&((s=Yo(n)).tag=Wo,Xo(l,s)),l.expirationTime<n&&(l.expirationTime=n),null!==(s=l.alternate)&&s.expirationTime<n&&(s.expirationTime=n),s=n;for(var f=l.return;null!==f;){var d=f.alternate;if(f.childExpirationTime<s)f.childExpirationTime=s,null!==d&&d.childExpirationTime<s&&(d.childExpirationTime=s);else{if(!(null!==d&&d.childExpirationTime<s))break;d.childExpirationTime=s}f=f.return}c.expirationTime<n&&(c.expirationTime=n);break}s=s.next}}else a=10===l.tag&&l.type===t.type?null:l.child;if(null!==a)a.return=l;else for(a=l;null!==a;){if(a===t){a=null;break}if(null!==(l=a.sibling)){l.return=a.return,a=l;break}a=a.return}l=a}}Eo(e,t,u.children,n),t=t.child}return t;case 9:return u=t.type,r=(o=t.pendingProps).children,Uo(t,n),r=r(u=zo(u,o.unstable_observedBits)),t.effectTag|=1,Eo(e,t,r,n),t.child;case 14:return o=ru(u=t.type,t.pendingProps),wo(e,t,u,o=ru(u.type,o),r,n);case 15:return xo(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,u=t.pendingProps,u=t.elementType===r?u:ru(r,u),null!==e&&(e.alternate=null,t.alternate=null,t.effectTag|=2),t.tag=1,Nr(r)?(e=!0,jr(t)):e=!1,Uo(t,n),lu(t,r,u),su(t,r,u,n),To(null,t,r,!0,e,n)}i("156")}var Ro={current:null},Io=null,Lo=null,Mo=null;function jo(e,t){var n=e.type._context;kr(Ro,n._currentValue),n._currentValue=t}function qo(e){var t=Ro.current;Br(Ro),e.type._context._currentValue=t}function Uo(e,t){Io=e,Mo=Lo=null;var n=e.contextDependencies;null!==n&&n.expirationTime>=t&&(Co=!0),e.contextDependencies=null}function zo(e,t){return Mo!==e&&!1!==t&&0!==t&&("number"===typeof t&&1073741823!==t||(Mo=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Lo?(null===Io&&i("308"),Lo=t,Io.contextDependencies={first:t,expirationTime:0}):Lo=Lo.next=t),e._currentValue}var Ho=0,Vo=1,Wo=2,Go=3,$o=!1;function Ko(e){return{baseState:e,firstUpdate:null,lastUpdate:null,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Qo(e){return{baseState:e.baseState,firstUpdate:e.firstUpdate,lastUpdate:e.lastUpdate,firstCapturedUpdate:null,lastCapturedUpdate:null,firstEffect:null,lastEffect:null,firstCapturedEffect:null,lastCapturedEffect:null}}function Yo(e){return{expirationTime:e,tag:Ho,payload:null,callback:null,next:null,nextEffect:null}}function Jo(e,t){null===e.lastUpdate?e.firstUpdate=e.lastUpdate=t:(e.lastUpdate.next=t,e.lastUpdate=t)}function Xo(e,t){var n=e.alternate;if(null===n){var r=e.updateQueue,u=null;null===r&&(r=e.updateQueue=Ko(e.memoizedState))}else r=e.updateQueue,u=n.updateQueue,null===r?null===u?(r=e.updateQueue=Ko(e.memoizedState),u=n.updateQueue=Ko(n.memoizedState)):r=e.updateQueue=Qo(u):null===u&&(u=n.updateQueue=Qo(r));null===u||r===u?Jo(r,t):null===r.lastUpdate||null===u.lastUpdate?(Jo(r,t),Jo(u,t)):(Jo(r,t),u.lastUpdate=t)}function Zo(e,t){var n=e.updateQueue;null===(n=null===n?e.updateQueue=Ko(e.memoizedState):ei(e,n)).lastCapturedUpdate?n.firstCapturedUpdate=n.lastCapturedUpdate=t:(n.lastCapturedUpdate.next=t,n.lastCapturedUpdate=t)}function ei(e,t){var n=e.alternate;return null!==n&&t===n.updateQueue&&(t=e.updateQueue=Qo(t)),t}function ti(e,t,n,r,o,i){switch(n.tag){case Vo:return"function"===typeof(e=n.payload)?e.call(i,r,o):e;case Go:e.effectTag=-2049&e.effectTag|64;case Ho:if(null===(o="function"===typeof(e=n.payload)?e.call(i,r,o):e)||void 0===o)break;return u({},r,o);case Wo:$o=!0}return r}function ni(e,t,n,r,u){$o=!1;for(var o=(t=ei(e,t)).baseState,i=null,a=0,l=t.firstUpdate,c=o;null!==l;){var s=l.expirationTime;s<u?(null===i&&(i=l,o=c),a<s&&(a=s)):(c=ti(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastEffect?t.firstEffect=t.lastEffect=l:(t.lastEffect.nextEffect=l,t.lastEffect=l))),l=l.next}for(s=null,l=t.firstCapturedUpdate;null!==l;){var f=l.expirationTime;f<u?(null===s&&(s=l,null===i&&(o=c)),a<f&&(a=f)):(c=ti(e,0,l,c,n,r),null!==l.callback&&(e.effectTag|=32,l.nextEffect=null,null===t.lastCapturedEffect?t.firstCapturedEffect=t.lastCapturedEffect=l:(t.lastCapturedEffect.nextEffect=l,t.lastCapturedEffect=l))),l=l.next}null===i&&(t.lastUpdate=null),null===s?t.lastCapturedUpdate=null:e.effectTag|=32,null===i&&null===s&&(o=c),t.baseState=o,t.firstUpdate=i,t.firstCapturedUpdate=s,e.expirationTime=a,e.memoizedState=c}function ri(e,t,n){null!==t.firstCapturedUpdate&&(null!==t.lastUpdate&&(t.lastUpdate.next=t.firstCapturedUpdate,t.lastUpdate=t.lastCapturedUpdate),t.firstCapturedUpdate=t.lastCapturedUpdate=null),ui(t.firstEffect,n),t.firstEffect=t.lastEffect=null,ui(t.firstCapturedEffect,n),t.firstCapturedEffect=t.lastCapturedEffect=null}function ui(e,t){for(;null!==e;){var n=e.callback;if(null!==n){e.callback=null;var r=t;"function"!==typeof n&&i("191",n),n.call(r)}e=e.nextEffect}}function oi(e,t){return{value:e,source:t,stack:lt(t)}}function ii(e){e.effectTag|=4}var ai=void 0,li=void 0,ci=void 0,si=void 0;ai=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},li=function(){},ci=function(e,t,n,r,o){var i=e.memoizedProps;if(i!==r){var a=t.stateNode;switch(Au(yu.current),e=null,n){case"input":i=Dt(a,i),r=Dt(a,r),e=[];break;case"option":i=$n(a,i),r=$n(a,r),e=[];break;case"select":i=u({},i,{value:void 0}),r=u({},r,{value:void 0}),e=[];break;case"textarea":i=Qn(a,i),r=Qn(a,r),e=[];break;default:"function"!==typeof i.onClick&&"function"===typeof r.onClick&&(a.onclick=hr)}fr(n,r),a=n=void 0;var l=null;for(n in i)if(!r.hasOwnProperty(n)&&i.hasOwnProperty(n)&&null!=i[n])if("style"===n){var c=i[n];for(a in c)c.hasOwnProperty(a)&&(l||(l={}),l[a]="")}else"dangerouslySetInnerHTML"!==n&&"children"!==n&&"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&"autoFocus"!==n&&(D.hasOwnProperty(n)?e||(e=[]):(e=e||[]).push(n,null));for(n in r){var s=r[n];if(c=null!=i?i[n]:void 0,r.hasOwnProperty(n)&&s!==c&&(null!=s||null!=c))if("style"===n)if(c){for(a in c)!c.hasOwnProperty(a)||s&&s.hasOwnProperty(a)||(l||(l={}),l[a]="");for(a in s)s.hasOwnProperty(a)&&c[a]!==s[a]&&(l||(l={}),l[a]=s[a])}else l||(e||(e=[]),e.push(n,l)),l=s;else"dangerouslySetInnerHTML"===n?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(e=e||[]).push(n,""+s)):"children"===n?c===s||"string"!==typeof s&&"number"!==typeof s||(e=e||[]).push(n,""+s):"suppressContentEditableWarning"!==n&&"suppressHydrationWarning"!==n&&(D.hasOwnProperty(n)?(null!=s&&pr(o,n),e||c===s||(e=[])):(e=e||[]).push(n,s))}l&&(e=e||[]).push("style",l),o=e,(t.updateQueue=o)&&ii(t)}},si=function(e,t,n,r){n!==r&&ii(t)};var fi="function"===typeof WeakSet?WeakSet:Set;function di(e,t){var n=t.source,r=t.stack;null===r&&null!==n&&(r=lt(n)),null!==n&&at(n.type),t=t.value,null!==e&&1===e.tag&&at(e.type);try{console.error(t)}catch(e){setTimeout(function(){throw e})}}function pi(e){var t=e.ref;if(null!==t)if("function"===typeof t)try{t(null)}catch(t){Ki(e,t)}else t.current=null}function hi(e,t,n){if(null!==(n=null!==(n=n.updateQueue)?n.lastEffect:null)){var r=n=n.next;do{if((r.tag&e)!==xu){var u=r.destroy;r.destroy=void 0,void 0!==u&&u()}(r.tag&t)!==xu&&(u=r.create,r.destroy=u()),r=r.next}while(r!==n)}}function mi(e){switch("function"===typeof zr&&zr(e),e.tag){case 0:case 11:case 14:case 15:var t=e.updateQueue;if(null!==t&&null!==(t=t.lastEffect)){var n=t=t.next;do{var r=n.destroy;if(void 0!==r){var u=e;try{r()}catch(e){Ki(u,e)}}n=n.next}while(n!==t)}break;case 1:if(pi(e),"function"===typeof(t=e.stateNode).componentWillUnmount)try{t.props=e.memoizedProps,t.state=e.memoizedState,t.componentWillUnmount()}catch(t){Ki(e,t)}break;case 5:pi(e);break;case 4:yi(e)}}function gi(e){return 5===e.tag||3===e.tag||4===e.tag}function vi(e){e:{for(var t=e.return;null!==t;){if(gi(t)){var n=t;break e}t=t.return}i("160"),n=void 0}var r=t=void 0;switch(n.tag){case 5:t=n.stateNode,r=!1;break;case 3:case 4:t=n.stateNode.containerInfo,r=!0;break;default:i("161")}16&n.effectTag&&(or(t,""),n.effectTag&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||gi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.effectTag)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.effectTag)){n=n.stateNode;break e}}for(var u=e;;){if(5===u.tag||6===u.tag)if(n)if(r){var o=t,a=u.stateNode,l=n;8===o.nodeType?o.parentNode.insertBefore(a,l):o.insertBefore(a,l)}else t.insertBefore(u.stateNode,n);else r?(a=t,l=u.stateNode,8===a.nodeType?(o=a.parentNode).insertBefore(l,a):(o=a).appendChild(l),null!==(a=a._reactRootContainer)&&void 0!==a||null!==o.onclick||(o.onclick=hr)):t.appendChild(u.stateNode);else if(4!==u.tag&&null!==u.child){u.child.return=u,u=u.child;continue}if(u===e)break;for(;null===u.sibling;){if(null===u.return||u.return===e)return;u=u.return}u.sibling.return=u.return,u=u.sibling}}function yi(e){for(var t=e,n=!1,r=void 0,u=void 0;;){if(!n){n=t.return;e:for(;;){switch(null===n&&i("160"),n.tag){case 5:r=n.stateNode,u=!1;break e;case 3:case 4:r=n.stateNode.containerInfo,u=!0;break e}n=n.return}n=!0}if(5===t.tag||6===t.tag){e:for(var o=t,a=o;;)if(mi(a),null!==a.child&&4!==a.tag)a.child.return=a,a=a.child;else{if(a===o)break;for(;null===a.sibling;){if(null===a.return||a.return===o)break e;a=a.return}a.sibling.return=a.return,a=a.sibling}u?(o=r,a=t.stateNode,8===o.nodeType?o.parentNode.removeChild(a):o.removeChild(a)):r.removeChild(t.stateNode)}else if(4===t.tag){if(null!==t.child){r=t.stateNode.containerInfo,u=!0,t.child.return=t,t=t.child;continue}}else if(mi(t),null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return;4===(t=t.return).tag&&(n=!1)}t.sibling.return=t.return,t=t.sibling}}function Di(e,t){switch(t.tag){case 0:case 11:case 14:case 15:hi(ku,Su,t);break;case 1:break;case 5:var n=t.stateNode;if(null!=n){var r=t.memoizedProps;e=null!==e?e.memoizedProps:r;var u=t.type,o=t.updateQueue;t.updateQueue=null,null!==o&&function(e,t,n,r,u){e[N]=u,"input"===n&&"radio"===u.type&&null!=u.name&&At(e,u),dr(n,r),r=dr(n,u);for(var o=0;o<t.length;o+=2){var i=t[o],a=t[o+1];"style"===i?cr(e,a):"dangerouslySetInnerHTML"===i?ur(e,a):"children"===i?or(e,a):vt(e,i,a,r)}switch(n){case"input":Ct(e,u);break;case"textarea":Jn(e,u);break;case"select":t=e._wrapperState.wasMultiple,e._wrapperState.wasMultiple=!!u.multiple,null!=(n=u.value)?Kn(e,!!u.multiple,n,!1):t!==!!u.multiple&&(null!=u.defaultValue?Kn(e,!!u.multiple,u.defaultValue,!0):Kn(e,!!u.multiple,u.multiple?[]:"",!1))}}(n,o,u,e,r)}break;case 6:null===t.stateNode&&i("162"),t.stateNode.nodeValue=t.memoizedProps;break;case 3:case 12:break;case 13:if(n=t.memoizedState,r=void 0,e=t,null===n?r=!1:(r=!0,e=t.child,0===n.timedOutAt&&(n.timedOutAt=Ca())),null!==e&&function(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)r.style.display="none";else{r=n.stateNode;var u=n.memoizedProps.style;u=void 0!==u&&null!==u&&u.hasOwnProperty("display")?u.display:null,r.style.display=lr("display",u)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else{if(13===n.tag&&null!==n.memoizedState){(r=n.child.sibling).return=n,n=r;continue}if(null!==n.child){n.child.return=n,n=n.child;continue}}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}(e,r),null!==(n=t.updateQueue)){t.updateQueue=null;var a=t.stateNode;null===a&&(a=t.stateNode=new fi),n.forEach(function(e){var n=function(e,t){var n=e.stateNode;null!==n&&n.delete(t),t=Qi(t=Ca(),e),null!==(e=Ji(e,t))&&(Zr(e,t),0!==(t=e.expirationTime)&&Ea(e,t))}.bind(null,t,e);a.has(e)||(a.add(e),e.then(n,n))})}break;case 17:break;default:i("163")}}var bi="function"===typeof WeakMap?WeakMap:Map;function Ai(e,t,n){(n=Yo(n)).tag=Go,n.payload={element:null};var r=t.value;return n.callback=function(){Pa(r),di(e,t)},n}function Ci(e,t,n){(n=Yo(n)).tag=Go;var r=e.type.getDerivedStateFromError;if("function"===typeof r){var u=t.value;n.payload=function(){return r(u)}}var o=e.stateNode;return null!==o&&"function"===typeof o.componentDidCatch&&(n.callback=function(){"function"!==typeof r&&(null===Mi?Mi=new Set([this]):Mi.add(this));var n=t.value,u=t.stack;di(e,t),this.componentDidCatch(n,{componentStack:null!==u?u:""})}),n}function Ei(e){switch(e.tag){case 1:Nr(e.type)&&Rr();var t=e.effectTag;return 2048&t?(e.effectTag=-2049&t|64,e):null;case 3:return Eu(),Ir(),0!==(64&(t=e.effectTag))&&i("285"),e.effectTag=-2049&t|64,e;case 5:return wu(e),null;case 13:return 2048&(t=e.effectTag)?(e.effectTag=-2049&t|64,e):null;case 18:return null;case 4:return Eu(),null;case 10:return qo(e),null;default:return null}}var Fi=Ve.ReactCurrentDispatcher,wi=Ve.ReactCurrentOwner,xi=1073741822,Bi=!1,ki=null,Si=null,Ti=0,_i=-1,Pi=!1,Oi=null,Ni=!1,Ri=null,Ii=null,Li=null,Mi=null;function ji(){if(null!==ki)for(var e=ki.return;null!==e;){var t=e;switch(t.tag){case 1:var n=t.type.childContextTypes;null!==n&&void 0!==n&&Rr();break;case 3:Eu(),Ir();break;case 5:wu(t);break;case 4:Eu();break;case 10:qo(t)}e=e.return}Si=null,Ti=0,_i=-1,Pi=!1,ki=null}function qi(){for(;null!==Oi;){var e=Oi.effectTag;if(16&e&&or(Oi.stateNode,""),128&e){var t=Oi.alternate;null!==t&&(null!==(t=t.ref)&&("function"===typeof t?t(null):t.current=null))}switch(14&e){case 2:vi(Oi),Oi.effectTag&=-3;break;case 6:vi(Oi),Oi.effectTag&=-3,Di(Oi.alternate,Oi);break;case 4:Di(Oi.alternate,Oi);break;case 8:yi(e=Oi),e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null,null!==(e=e.alternate)&&(e.return=null,e.child=null,e.memoizedState=null,e.updateQueue=null)}Oi=Oi.nextEffect}}function Ui(){for(;null!==Oi;){if(256&Oi.effectTag)e:{var e=Oi.alternate,t=Oi;switch(t.tag){case 0:case 11:case 15:hi(Bu,xu,t);break e;case 1:if(256&t.effectTag&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:ru(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}break e;case 3:case 5:case 6:case 4:case 17:break e;default:i("163")}}Oi=Oi.nextEffect}}function zi(e,t){for(;null!==Oi;){var n=Oi.effectTag;if(36&n){var r=Oi.alternate,u=Oi,o=t;switch(u.tag){case 0:case 11:case 15:hi(Tu,_u,u);break;case 1:var a=u.stateNode;if(4&u.effectTag)if(null===r)a.componentDidMount();else{var l=u.elementType===u.type?r.memoizedProps:ru(u.type,r.memoizedProps);a.componentDidUpdate(l,r.memoizedState,a.__reactInternalSnapshotBeforeUpdate)}null!==(r=u.updateQueue)&&ri(0,r,a);break;case 3:if(null!==(r=u.updateQueue)){if(a=null,null!==u.child)switch(u.child.tag){case 5:a=u.child.stateNode;break;case 1:a=u.child.stateNode}ri(0,r,a)}break;case 5:o=u.stateNode,null===r&&4&u.effectTag&&vr(u.type,u.memoizedProps)&&o.focus();break;case 6:case 4:case 12:case 13:case 17:break;default:i("163")}}128&n&&(null!==(u=Oi.ref)&&(o=Oi.stateNode,"function"===typeof u?u(o):u.current=o)),512&n&&(Ri=e),Oi=Oi.nextEffect}}function Hi(){null!==Ii&&Cr(Ii),null!==Li&&Li()}function Vi(e,t){Ni=Bi=!0,e.current===t&&i("177");var n=e.pendingCommitExpirationTime;0===n&&i("261"),e.pendingCommitExpirationTime=0;var r=t.expirationTime,u=t.childExpirationTime;for(function(e,t){if(e.didError=!1,0===t)e.earliestPendingTime=0,e.latestPendingTime=0,e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0;else{t<e.latestPingedTime&&(e.latestPingedTime=0);var n=e.latestPendingTime;0!==n&&(n>t?e.earliestPendingTime=e.latestPendingTime=0:e.earliestPendingTime>t&&(e.earliestPendingTime=e.latestPendingTime)),0===(n=e.earliestSuspendedTime)?Zr(e,t):t<e.latestSuspendedTime?(e.earliestSuspendedTime=0,e.latestSuspendedTime=0,e.latestPingedTime=0,Zr(e,t)):t>n&&Zr(e,t)}nu(0,e)}(e,u>r?u:r),wi.current=null,r=void 0,1<t.effectTag?null!==t.lastEffect?(t.lastEffect.nextEffect=t,r=t.firstEffect):r=t:r=t.firstEffect,mr=Fn,gr=function(){var e=In();if(Ln(e)){if("selectionStart"in e)var t={start:e.selectionStart,end:e.selectionEnd};else e:{var n=(t=(t=e.ownerDocument)&&t.defaultView||window).getSelection&&t.getSelection();if(n&&0!==n.rangeCount){t=n.anchorNode;var r=n.anchorOffset,u=n.focusNode;n=n.focusOffset;try{t.nodeType,u.nodeType}catch(e){t=null;break e}var o=0,i=-1,a=-1,l=0,c=0,s=e,f=null;t:for(;;){for(var d;s!==t||0!==r&&3!==s.nodeType||(i=o+r),s!==u||0!==n&&3!==s.nodeType||(a=o+n),3===s.nodeType&&(o+=s.nodeValue.length),null!==(d=s.firstChild);)f=s,s=d;for(;;){if(s===e)break t;if(f===t&&++l===r&&(i=o),f===u&&++c===n&&(a=o),null!==(d=s.nextSibling))break;f=(s=f).parentNode}s=d}t=-1===i||-1===a?null:{start:i,end:a}}else t=null}t=t||{start:0,end:0}}else t=null;return{focusedElem:e,selectionRange:t}}(),Fn=!1,Oi=r;null!==Oi;){u=!1;var a=void 0;try{Ui()}catch(e){u=!0,a=e}u&&(null===Oi&&i("178"),Ki(Oi,a),null!==Oi&&(Oi=Oi.nextEffect))}for(Oi=r;null!==Oi;){u=!1,a=void 0;try{qi()}catch(e){u=!0,a=e}u&&(null===Oi&&i("178"),Ki(Oi,a),null!==Oi&&(Oi=Oi.nextEffect))}for(Mn(gr),gr=null,Fn=!!mr,mr=null,e.current=t,Oi=r;null!==Oi;){u=!1,a=void 0;try{zi(e,n)}catch(e){u=!0,a=e}u&&(null===Oi&&i("178"),Ki(Oi,a),null!==Oi&&(Oi=Oi.nextEffect))}if(null!==r&&null!==Ri){var l=function(e,t){Li=Ii=Ri=null;var n=ua;ua=!0;do{if(512&t.effectTag){var r=!1,u=void 0;try{var o=t;hi(Ou,xu,o),hi(xu,Pu,o)}catch(e){r=!0,u=e}r&&Ki(t,u)}t=t.nextEffect}while(null!==t);ua=n,0!==(n=e.expirationTime)&&Ea(e,n),sa||ua||ka(1073741823,!1)}.bind(null,e,r);Ii=o.unstable_runWithPriority(o.unstable_NormalPriority,function(){return Ar(l)}),Li=l}Bi=Ni=!1,"function"===typeof Ur&&Ur(t.stateNode),n=t.expirationTime,0===(t=(t=t.childExpirationTime)>n?t:n)&&(Mi=null),function(e,t){e.expirationTime=t,e.finishedWork=null}(e,t)}function Wi(e){for(;;){var t=e.alternate,n=e.return,r=e.sibling;if(0===(1024&e.effectTag)){ki=e;e:{var o=t,a=Ti,l=(t=e).pendingProps;switch(t.tag){case 2:case 16:break;case 15:case 0:break;case 1:Nr(t.type)&&Rr();break;case 3:Eu(),Ir(),(l=t.stateNode).pendingContext&&(l.context=l.pendingContext,l.pendingContext=null),null!==o&&null!==o.child||(Do(t),t.effectTag&=-3),li(t);break;case 5:wu(t);var c=Au(bu.current);if(a=t.type,null!==o&&null!=t.stateNode)ci(o,t,a,l,c),o.ref!==t.ref&&(t.effectTag|=128);else if(l){var s=Au(yu.current);if(Do(t)){o=(l=t).stateNode;var f=l.type,d=l.memoizedProps,p=c;switch(o[O]=l,o[N]=d,a=void 0,c=f){case"iframe":case"object":wn("load",o);break;case"video":case"audio":for(f=0;f<te.length;f++)wn(te[f],o);break;case"source":wn("error",o);break;case"img":case"image":case"link":wn("error",o),wn("load",o);break;case"form":wn("reset",o),wn("submit",o);break;case"details":wn("toggle",o);break;case"input":bt(o,d),wn("invalid",o),pr(p,"onChange");break;case"select":o._wrapperState={wasMultiple:!!d.multiple},wn("invalid",o),pr(p,"onChange");break;case"textarea":Yn(o,d),wn("invalid",o),pr(p,"onChange")}for(a in fr(c,d),f=null,d)d.hasOwnProperty(a)&&(s=d[a],"children"===a?"string"===typeof s?o.textContent!==s&&(f=["children",s]):"number"===typeof s&&o.textContent!==""+s&&(f=["children",""+s]):D.hasOwnProperty(a)&&null!=s&&pr(p,a));switch(c){case"input":ze(o),Et(o,d,!0);break;case"textarea":ze(o),Xn(o);break;case"select":case"option":break;default:"function"===typeof d.onClick&&(o.onclick=hr)}a=f,l.updateQueue=a,(l=null!==a)&&ii(t)}else{d=t,p=a,o=l,f=9===c.nodeType?c:c.ownerDocument,s===Zn.html&&(s=er(p)),s===Zn.html?"script"===p?((o=f.createElement("div")).innerHTML="<script><\\/script>",f=o.removeChild(o.firstChild)):"string"===typeof o.is?f=f.createElement(p,{is:o.is}):(f=f.createElement(p),"select"===p&&(p=f,o.multiple?p.multiple=!0:o.size&&(p.size=o.size))):f=f.createElementNS(s,p),(o=f)[O]=d,o[N]=l,ai(o,t,!1,!1),p=o;var h=c,m=dr(f=a,d=l);switch(f){case"iframe":case"object":wn("load",p),c=d;break;case"video":case"audio":for(c=0;c<te.length;c++)wn(te[c],p);c=d;break;case"source":wn("error",p),c=d;break;case"img":case"image":case"link":wn("error",p),wn("load",p),c=d;break;case"form":wn("reset",p),wn("submit",p),c=d;break;case"details":wn("toggle",p),c=d;break;case"input":bt(p,d),c=Dt(p,d),wn("invalid",p),pr(h,"onChange");break;case"option":c=$n(p,d);break;case"select":p._wrapperState={wasMultiple:!!d.multiple},c=u({},d,{value:void 0}),wn("invalid",p),pr(h,"onChange");break;case"textarea":Yn(p,d),c=Qn(p,d),wn("invalid",p),pr(h,"onChange");break;default:c=d}fr(f,c),s=void 0;var g=f,v=p,y=c;for(s in y)if(y.hasOwnProperty(s)){var b=y[s];"style"===s?cr(v,b):"dangerouslySetInnerHTML"===s?null!=(b=b?b.__html:void 0)&&ur(v,b):"children"===s?"string"===typeof b?("textarea"!==g||""!==b)&&or(v,b):"number"===typeof b&&or(v,""+b):"suppressContentEditableWarning"!==s&&"suppressHydrationWarning"!==s&&"autoFocus"!==s&&(D.hasOwnProperty(s)?null!=b&&pr(h,s):null!=b&&vt(v,s,b,m))}switch(f){case"input":ze(p),Et(p,d,!1);break;case"textarea":ze(p),Xn(p);break;case"option":null!=d.value&&p.setAttribute("value",""+yt(d.value));break;case"select":(c=p).multiple=!!d.multiple,null!=(p=d.value)?Kn(c,!!d.multiple,p,!1):null!=d.defaultValue&&Kn(c,!!d.multiple,d.defaultValue,!0);break;default:"function"===typeof c.onClick&&(p.onclick=hr)}(l=vr(a,l))&&ii(t),t.stateNode=o}null!==t.ref&&(t.effectTag|=128)}else null===t.stateNode&&i("166");break;case 6:o&&null!=t.stateNode?si(o,t,o.memoizedProps,l):("string"!==typeof l&&(null===t.stateNode&&i("166")),o=Au(bu.current),Au(yu.current),Do(t)?(a=(l=t).stateNode,o=l.memoizedProps,a[O]=l,(l=a.nodeValue!==o)&&ii(t)):(a=t,(l=(9===o.nodeType?o:o.ownerDocument).createTextNode(l))[O]=t,a.stateNode=l));break;case 11:break;case 13:if(l=t.memoizedState,0!==(64&t.effectTag)){t.expirationTime=a,ki=t;break e}l=null!==l,a=null!==o&&null!==o.memoizedState,null!==o&&!l&&a&&(null!==(o=o.child.sibling)&&(null!==(c=t.firstEffect)?(t.firstEffect=o,o.nextEffect=c):(t.firstEffect=t.lastEffect=o,o.nextEffect=null),o.effectTag=8)),(l||a)&&(t.effectTag|=4);break;case 7:case 8:case 12:break;case 4:Eu(),li(t);break;case 10:qo(t);break;case 9:case 14:break;case 17:Nr(t.type)&&Rr();break;case 18:break;default:i("156")}ki=null}if(t=e,1===Ti||1!==t.childExpirationTime){for(l=0,a=t.child;null!==a;)(o=a.expirationTime)>l&&(l=o),(c=a.childExpirationTime)>l&&(l=c),a=a.sibling;t.childExpirationTime=l}if(null!==ki)return ki;null!==n&&0===(1024&n.effectTag)&&(null===n.firstEffect&&(n.firstEffect=e.firstEffect),null!==e.lastEffect&&(null!==n.lastEffect&&(n.lastEffect.nextEffect=e.firstEffect),n.lastEffect=e.lastEffect),1<e.effectTag&&(null!==n.lastEffect?n.lastEffect.nextEffect=e:n.firstEffect=e,n.lastEffect=e))}else{if(null!==(e=Ei(e)))return e.effectTag&=1023,e;null!==n&&(n.firstEffect=n.lastEffect=null,n.effectTag|=1024)}if(null!==r)return r;if(null===n)break;e=n}return null}function Gi(e){var t=No(e.alternate,e,Ti);return e.memoizedProps=e.pendingProps,null===t&&(t=Wi(e)),wi.current=null,t}function $i(e,t){Bi&&i("243"),Hi(),Bi=!0;var n=Fi.current;Fi.current=lo;var r=e.nextExpirationTimeToWorkOn;r===Ti&&e===Si&&null!==ki||(ji(),Ti=r,ki=$r((Si=e).current,null),e.pendingCommitExpirationTime=0);for(var u=!1;;){try{if(t)for(;null!==ki&&!xa();)ki=Gi(ki);else for(;null!==ki;)ki=Gi(ki)}catch(t){if(Mo=Lo=Io=null,Ju(),null===ki)u=!0,Pa(t);else{null===ki&&i("271");var o=ki,a=o.return;if(null!==a){e:{var l=e,c=a,s=o,f=t;if(a=Ti,s.effectTag|=1024,s.firstEffect=s.lastEffect=null,null!==f&&"object"===typeof f&&"function"===typeof f.then){var d=f;f=c;var p=-1,h=-1;do{if(13===f.tag){var m=f.alternate;if(null!==m&&null!==(m=m.memoizedState)){h=10*(1073741822-m.timedOutAt);break}"number"===typeof(m=f.pendingProps.maxDuration)&&(0>=m?p=0:(-1===p||m<p)&&(p=m))}f=f.return}while(null!==f);f=c;do{if((m=13===f.tag)&&(m=void 0!==f.memoizedProps.fallback&&null===f.memoizedState),m){if(null===(c=f.updateQueue)?((c=new Set).add(d),f.updateQueue=c):c.add(d),0===(1&f.mode)){f.effectTag|=64,s.effectTag&=-1957,1===s.tag&&(null===s.alternate?s.tag=17:((a=Yo(1073741823)).tag=Wo,Xo(s,a))),s.expirationTime=1073741823;break e}c=a;var g=(s=l).pingCache;null===g?(g=s.pingCache=new bi,m=new Set,g.set(d,m)):void 0===(m=g.get(d))&&(m=new Set,g.set(d,m)),m.has(c)||(m.add(c),s=Yi.bind(null,s,d,c),d.then(s,s)),-1===p?l=1073741823:(-1===h&&(h=10*(1073741822-tu(l,a))-5e3),l=h+p),0<=l&&_i<l&&(_i=l),f.effectTag|=2048,f.expirationTime=a;break e}f=f.return}while(null!==f);f=Error((at(s.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display."+lt(s))}Pi=!0,f=oi(f,s),l=c;do{switch(l.tag){case 3:l.effectTag|=2048,l.expirationTime=a,Zo(l,a=Ai(l,f,a));break e;case 1:if(p=f,h=l.type,s=l.stateNode,0===(64&l.effectTag)&&("function"===typeof h.getDerivedStateFromError||null!==s&&"function"===typeof s.componentDidCatch&&(null===Mi||!Mi.has(s)))){l.effectTag|=2048,l.expirationTime=a,Zo(l,a=Ci(l,p,a));break e}}l=l.return}while(null!==l)}ki=Wi(o);continue}u=!0,Pa(t)}}break}if(Bi=!1,Fi.current=n,Mo=Lo=Io=null,Ju(),u)Si=null,e.finishedWork=null;else if(null!==ki)e.finishedWork=null;else{if(null===(n=e.current.alternate)&&i("281"),Si=null,Pi){if(u=e.latestPendingTime,o=e.latestSuspendedTime,a=e.latestPingedTime,0!==u&&u<r||0!==o&&o<r||0!==a&&a<r)return eu(e,r),void Aa(e,n,r,e.expirationTime,-1);if(!e.didError&&t)return e.didError=!0,r=e.nextExpirationTimeToWorkOn=r,t=e.expirationTime=1073741823,void Aa(e,n,r,t,-1)}t&&-1!==_i?(eu(e,r),(t=10*(1073741822-tu(e,r)))<_i&&(_i=t),t=10*(1073741822-Ca()),t=_i-t,Aa(e,n,r,e.expirationTime,0>t?0:t)):(e.pendingCommitExpirationTime=r,e.finishedWork=n)}}function Ki(e,t){for(var n=e.return;null!==n;){switch(n.tag){case 1:var r=n.stateNode;if("function"===typeof n.type.getDerivedStateFromError||"function"===typeof r.componentDidCatch&&(null===Mi||!Mi.has(r)))return Xo(n,e=Ci(n,e=oi(t,e),1073741823)),void Xi(n,1073741823);break;case 3:return Xo(n,e=Ai(n,e=oi(t,e),1073741823)),void Xi(n,1073741823)}n=n.return}3===e.tag&&(Xo(e,n=Ai(e,n=oi(t,e),1073741823)),Xi(e,1073741823))}function Qi(e,t){var n=o.unstable_getCurrentPriorityLevel(),r=void 0;if(0===(1&t.mode))r=1073741823;else if(Bi&&!Ni)r=Ti;else{switch(n){case o.unstable_ImmediatePriority:r=1073741823;break;case o.unstable_UserBlockingPriority:r=1073741822-10*(1+((1073741822-e+15)/10|0));break;case o.unstable_NormalPriority:r=1073741822-25*(1+((1073741822-e+500)/25|0));break;case o.unstable_LowPriority:case o.unstable_IdlePriority:r=1;break;default:i("313")}null!==Si&&r===Ti&&--r}return n===o.unstable_UserBlockingPriority&&(0===aa||r<aa)&&(aa=r),r}function Yi(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),null!==Si&&Ti===n?Si=null:(t=e.earliestSuspendedTime,r=e.latestSuspendedTime,0!==t&&n<=t&&n>=r&&(e.didError=!1,(0===(t=e.latestPingedTime)||t>n)&&(e.latestPingedTime=n),nu(n,e),0!==(n=e.expirationTime)&&Ea(e,n)))}function Ji(e,t){e.expirationTime<t&&(e.expirationTime=t);var n=e.alternate;null!==n&&n.expirationTime<t&&(n.expirationTime=t);var r=e.return,u=null;if(null===r&&3===e.tag)u=e.stateNode;else for(;null!==r;){if(n=r.alternate,r.childExpirationTime<t&&(r.childExpirationTime=t),null!==n&&n.childExpirationTime<t&&(n.childExpirationTime=t),null===r.return&&3===r.tag){u=r.stateNode;break}r=r.return}return u}function Xi(e,t){null!==(e=Ji(e,t))&&(!Bi&&0!==Ti&&t>Ti&&ji(),Zr(e,t),Bi&&!Ni&&Si===e||Ea(e,e.expirationTime),va>ga&&(va=0,i("185")))}function Zi(e,t,n,r,u){return o.unstable_runWithPriority(o.unstable_ImmediatePriority,function(){return e(t,n,r,u)})}var ea=null,ta=null,na=0,ra=void 0,ua=!1,oa=null,ia=0,aa=0,la=!1,ca=null,sa=!1,fa=!1,da=null,pa=o.unstable_now(),ha=1073741822-(pa/10|0),ma=ha,ga=50,va=0,ya=null;function Da(){ha=1073741822-((o.unstable_now()-pa)/10|0)}function ba(e,t){if(0!==na){if(t<na)return;null!==ra&&o.unstable_cancelCallback(ra)}na=t,e=o.unstable_now()-pa,ra=o.unstable_scheduleCallback(Ba,{timeout:10*(1073741822-t)-e})}function Aa(e,t,n,r,u){e.expirationTime=r,0!==u||xa()?0<u&&(e.timeoutHandle=Dr(function(e,t,n){e.pendingCommitExpirationTime=n,e.finishedWork=t,Da(),ma=ha,Sa(e,n)}.bind(null,e,t,n),u)):(e.pendingCommitExpirationTime=n,e.finishedWork=t)}function Ca(){return ua?ma:(Fa(),0!==ia&&1!==ia||(Da(),ma=ha),ma)}function Ea(e,t){null===e.nextScheduledRoot?(e.expirationTime=t,null===ta?(ea=ta=e,e.nextScheduledRoot=e):(ta=ta.nextScheduledRoot=e).nextScheduledRoot=ea):t>e.expirationTime&&(e.expirationTime=t),ua||(sa?fa&&(oa=e,ia=1073741823,Ta(e,1073741823,!1)):1073741823===t?ka(1073741823,!1):ba(e,t))}function Fa(){var e=0,t=null;if(null!==ta)for(var n=ta,r=ea;null!==r;){var u=r.expirationTime;if(0===u){if((null===n||null===ta)&&i("244"),r===r.nextScheduledRoot){ea=ta=r.nextScheduledRoot=null;break}if(r===ea)ea=u=r.nextScheduledRoot,ta.nextScheduledRoot=u,r.nextScheduledRoot=null;else{if(r===ta){(ta=n).nextScheduledRoot=ea,r.nextScheduledRoot=null;break}n.nextScheduledRoot=r.nextScheduledRoot,r.nextScheduledRoot=null}r=n.nextScheduledRoot}else{if(u>e&&(e=u,t=r),r===ta)break;if(1073741823===e)break;n=r,r=r.nextScheduledRoot}}oa=t,ia=e}var wa=!1;function xa(){return!!wa||!!o.unstable_shouldYield()&&(wa=!0)}function Ba(){try{if(!xa()&&null!==ea){Da();var e=ea;do{var t=e.expirationTime;0!==t&&ha<=t&&(e.nextExpirationTimeToWorkOn=ha),e=e.nextScheduledRoot}while(e!==ea)}ka(0,!0)}finally{wa=!1}}function ka(e,t){if(Fa(),t)for(Da(),ma=ha;null!==oa&&0!==ia&&e<=ia&&!(wa&&ha>ia);)Ta(oa,ia,ha>ia),Fa(),Da(),ma=ha;else for(;null!==oa&&0!==ia&&e<=ia;)Ta(oa,ia,!1),Fa();if(t&&(na=0,ra=null),0!==ia&&ba(oa,ia),va=0,ya=null,null!==da)for(e=da,da=null,t=0;t<e.length;t++){var n=e[t];try{n._onComplete()}catch(e){la||(la=!0,ca=e)}}if(la)throw e=ca,ca=null,la=!1,e}function Sa(e,t){ua&&i("253"),oa=e,ia=t,Ta(e,t,!1),ka(1073741823,!1)}function Ta(e,t,n){if(ua&&i("245"),ua=!0,n){var r=e.finishedWork;null!==r?_a(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),$i(e,n),null!==(r=e.finishedWork)&&(xa()?e.finishedWork=r:_a(e,r,t)))}else null!==(r=e.finishedWork)?_a(e,r,t):(e.finishedWork=null,-1!==(r=e.timeoutHandle)&&(e.timeoutHandle=-1,br(r)),$i(e,n),null!==(r=e.finishedWork)&&_a(e,r,t));ua=!1}function _a(e,t,n){var r=e.firstBatch;if(null!==r&&r._expirationTime>=n&&(null===da?da=[r]:da.push(r),r._defer))return e.finishedWork=t,void(e.expirationTime=0);e.finishedWork=null,e===ya?va++:(ya=e,va=0),o.unstable_runWithPriority(o.unstable_ImmediatePriority,function(){Vi(e,t)})}function Pa(e){null===oa&&i("246"),oa.expirationTime=0,la||(la=!0,ca=e)}function Oa(e,t){var n=sa;sa=!0;try{return e(t)}finally{(sa=n)||ua||ka(1073741823,!1)}}function Na(e,t){if(sa&&!fa){fa=!0;try{return e(t)}finally{fa=!1}}return e(t)}function Ra(e,t,n){sa||ua||0===aa||(ka(aa,!1),aa=0);var r=sa;sa=!0;try{return o.unstable_runWithPriority(o.unstable_UserBlockingPriority,function(){return e(t,n)})}finally{(sa=r)||ua||ka(1073741823,!1)}}function Ia(e,t,n,r,u){var o=t.current;e:if(n){t:{2===tn(n=n._reactInternalFiber)&&1===n.tag||i("170");var a=n;do{switch(a.tag){case 3:a=a.stateNode.context;break t;case 1:if(Nr(a.type)){a=a.stateNode.__reactInternalMemoizedMergedChildContext;break t}}a=a.return}while(null!==a);i("171"),a=void 0}if(1===n.tag){var l=n.type;if(Nr(l)){n=Mr(n,l,a);break e}}n=a}else n=Sr;return null===t.context?t.context=n:t.pendingContext=n,t=u,(u=Yo(r)).payload={element:e},null!==(t=void 0===t?null:t)&&(u.callback=t),Hi(),Xo(o,u),Xi(o,r),r}function La(e,t,n,r){var u=t.current;return Ia(e,t,n,u=Qi(Ca(),u),r)}function Ma(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function ja(e){var t=1073741822-25*(1+((1073741822-Ca()+500)/25|0));t>=xi&&(t=xi-1),this._expirationTime=xi=t,this._root=e,this._callbacks=this._next=null,this._hasChildren=this._didComplete=!1,this._children=null,this._defer=!0}function qa(){this._callbacks=null,this._didCommit=!1,this._onCommit=this._onCommit.bind(this)}function Ua(e,t,n){e={current:t=Wr(3,null,null,t?3:0),containerInfo:e,pendingChildren:null,pingCache:null,earliestPendingTime:0,latestPendingTime:0,earliestSuspendedTime:0,latestSuspendedTime:0,latestPingedTime:0,didError:!1,pendingCommitExpirationTime:0,finishedWork:null,timeoutHandle:-1,context:null,pendingContext:null,hydrate:n,nextExpirationTimeToWorkOn:0,expirationTime:0,firstBatch:null,nextScheduledRoot:null},this._internalRoot=t.stateNode=e}function za(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Ha(e,t,n,r,u){var o=n._reactRootContainer;if(o){if("function"===typeof u){var i=u;u=function(){var e=Ma(o._internalRoot);i.call(e)}}null!=e?o.legacy_renderSubtreeIntoContainer(e,t,u):o.render(t,u)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new Ua(e,!1,t)}(n,r),"function"===typeof u){var a=u;u=function(){var e=Ma(o._internalRoot);a.call(e)}}Na(function(){null!=e?o.legacy_renderSubtreeIntoContainer(e,t,u):o.render(t,u)})}return Ma(o._internalRoot)}function Va(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;return za(t)||i("200"),function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:Ke,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)}xe=function(e,t,n){switch(t){case"input":if(Ct(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+\'][type="radio"]\'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var u=M(r);u||i("90"),He(r),Ct(r,u)}}}break;case"textarea":Jn(e,n);break;case"select":null!=(t=n.value)&&Kn(e,!!n.multiple,t,!1)}},ja.prototype.render=function(e){this._defer||i("250"),this._hasChildren=!0,this._children=e;var t=this._root._internalRoot,n=this._expirationTime,r=new qa;return Ia(e,t,null,n,r._onCommit),r},ja.prototype.then=function(e){if(this._didComplete)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},ja.prototype.commit=function(){var e=this._root._internalRoot,t=e.firstBatch;if(this._defer&&null!==t||i("251"),this._hasChildren){var n=this._expirationTime;if(t!==this){this._hasChildren&&(n=this._expirationTime=t._expirationTime,this.render(this._children));for(var r=null,u=t;u!==this;)r=u,u=u._next;null===r&&i("251"),r._next=u._next,this._next=t,e.firstBatch=this}this._defer=!1,Sa(e,n),t=this._next,this._next=null,null!==(t=e.firstBatch=t)&&t._hasChildren&&t.render(t._children)}else this._next=null,this._defer=!1},ja.prototype._onComplete=function(){if(!this._didComplete){this._didComplete=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++)(0,e[t])()}},qa.prototype.then=function(e){if(this._didCommit)e();else{var t=this._callbacks;null===t&&(t=this._callbacks=[]),t.push(e)}},qa.prototype._onCommit=function(){if(!this._didCommit){this._didCommit=!0;var e=this._callbacks;if(null!==e)for(var t=0;t<e.length;t++){var n=e[t];"function"!==typeof n&&i("191",n),n()}}},Ua.prototype.render=function(e,t){var n=this._internalRoot,r=new qa;return null!==(t=void 0===t?null:t)&&r.then(t),La(e,n,null,r._onCommit),r},Ua.prototype.unmount=function(e){var t=this._internalRoot,n=new qa;return null!==(e=void 0===e?null:e)&&n.then(e),La(null,t,null,n._onCommit),n},Ua.prototype.legacy_renderSubtreeIntoContainer=function(e,t,n){var r=this._internalRoot,u=new qa;return null!==(n=void 0===n?null:n)&&u.then(n),La(t,r,e,u._onCommit),u},Ua.prototype.createBatch=function(){var e=new ja(this),t=e._expirationTime,n=this._internalRoot,r=n.firstBatch;if(null===r)n.firstBatch=e,e._next=null;else{for(n=null;null!==r&&r._expirationTime>=t;)n=r,r=r._next;e._next=r,null!==n&&(n._next=e)}return e},Pe=Oa,Oe=Ra,Ne=function(){ua||0===aa||(ka(aa,!1),aa=0)};var Wa={createPortal:Va,findDOMNode:function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternalFiber;return void 0===t&&("function"===typeof e.render?i("188"):i("268",Object.keys(e))),e=null===(e=rn(t))?null:e.stateNode},hydrate:function(e,t,n){return za(t)||i("200"),Ha(null,e,t,!0,n)},render:function(e,t,n){return za(t)||i("200"),Ha(null,e,t,!1,n)},unstable_renderSubtreeIntoContainer:function(e,t,n,r){return za(n)||i("200"),(null==e||void 0===e._reactInternalFiber)&&i("38"),Ha(e,t,n,!1,r)},unmountComponentAtNode:function(e){return za(e)||i("40"),!!e._reactRootContainer&&(Na(function(){Ha(null,null,e,!1,function(){e._reactRootContainer=null})}),!0)},unstable_createPortal:function(){return Va.apply(void 0,arguments)},unstable_batchedUpdates:Oa,unstable_interactiveUpdates:Ra,flushSync:function(e,t){ua&&i("187");var n=sa;sa=!0;try{return Zi(e,t)}finally{sa=n,ka(1073741823,!1)}},unstable_createRoot:function(e,t){return za(e)||i("299","unstable_createRoot"),new Ua(e,!0,null!=t&&!0===t.hydrate)},unstable_flushControlled:function(e){var t=sa;sa=!0;try{Zi(e)}finally{(sa=t)||ua||ka(1073741823,!1)}},__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED:{Events:[I,L,M,S.injectEventPluginsByName,y,V,function(e){x(e,H)},Te,_e,kn,_]}};!function(e){var t=e.findFiberByHostInstance;(function(e){if("undefined"===typeof{})return!1;var t={};if(t.isDisabled||!t.supportsFiber)return!0;try{var n=t.inject(e);Ur=Hr(function(e){return t.onCommitFiberRoot(n,e)}),zr=Hr(function(e){return t.onCommitFiberUnmount(n,e)})}catch(e){}})(u({},e,{overrideProps:null,currentDispatcherRef:Ve.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=rn(e))?null:e.stateNode},findFiberByHostInstance:function(e){return t?t(e):null}}))}({findFiberByHostInstance:R,bundleType:0,version:"16.8.6",rendererPackageName:"react-dom"});var Ga={default:Wa},$a=Ga&&Wa||Ga;e.exports=$a.default||$a},function(e,t,n){"use strict";e.exports=n(181)},function(e,t,n){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var n=null,r=!1,u=3,o=-1,i=-1,a=!1,l=!1;function c(){if(!a){var e=n.expirationTime;l?E():l=!0,C(d,e)}}function s(){var e=n,t=n.next;if(n===t)n=null;else{var r=n.previous;n=r.next=t,t.previous=r}e.next=e.previous=null,r=e.callback,t=e.expirationTime,e=e.priorityLevel;var o=u,a=i;u=e,i=t;try{var l=r()}finally{u=o,i=a}if("function"===typeof l)if(l={callback:l,priorityLevel:e,expirationTime:t,next:null,previous:null},null===n)n=l.next=l.previous=l;else{r=null,e=n;do{if(e.expirationTime>=t){r=e;break}e=e.next}while(e!==n);null===r?r=n:r===n&&(n=l,c()),(t=r.previous).next=r.previous=l,l.next=r,l.previous=t}}function f(){if(-1===o&&null!==n&&1===n.priorityLevel){a=!0;try{do{s()}while(null!==n&&1===n.priorityLevel)}finally{a=!1,null!==n?c():l=!1}}}function d(e){a=!0;var u=r;r=e;try{if(e)for(;null!==n;){var o=t.unstable_now();if(!(n.expirationTime<=o))break;do{s()}while(null!==n&&n.expirationTime<=o)}else if(null!==n)do{s()}while(null!==n&&!F())}finally{a=!1,r=u,null!==n?c():l=!1,f()}}var p,h,m=Date,g="function"===typeof setTimeout?setTimeout:void 0,v="function"===typeof clearTimeout?clearTimeout:void 0,y="function"===typeof requestAnimationFrame?requestAnimationFrame:void 0,D="function"===typeof cancelAnimationFrame?cancelAnimationFrame:void 0;function b(e){p=y(function(t){v(h),e(t)}),h=g(function(){D(p),e(t.unstable_now())},100)}if("object"===typeof performance&&"function"===typeof performance.now){var A=performance;t.unstable_now=function(){return A.now()}}else t.unstable_now=function(){return m.now()};var C,E,F,w=null;if("undefined"!==typeof window?w=window:"undefined"!==typeof e&&(w=e),w&&w._schedMock){var x=w._schedMock;C=x[0],E=x[1],F=x[2],t.unstable_now=x[3]}else if("undefined"===typeof window||"function"!==typeof MessageChannel){var B=null,k=function(e){if(null!==B)try{B(e)}finally{B=null}};C=function(e){null!==B?setTimeout(C,0,e):(B=e,setTimeout(k,0,!1))},E=function(){B=null},F=function(){return!1}}else{"undefined"!==typeof console&&("function"!==typeof y&&console.error("This browser doesn\'t support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"),"function"!==typeof D&&console.error("This browser doesn\'t support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"));var S=null,T=!1,_=-1,P=!1,O=!1,N=0,R=33,I=33;F=function(){return N<=t.unstable_now()};var L=new MessageChannel,M=L.port2;L.port1.onmessage=function(){T=!1;var e=S,n=_;S=null,_=-1;var r=t.unstable_now(),u=!1;if(0>=N-r){if(!(-1!==n&&n<=r))return P||(P=!0,b(j)),S=e,void(_=n);u=!0}if(null!==e){O=!0;try{e(u)}finally{O=!1}}};var j=function e(t){if(null!==S){b(e);var n=t-N+I;n<I&&R<I?(8>n&&(n=8),I=n<R?R:n):R=n,N=t+I,T||(T=!0,M.postMessage(void 0))}else P=!1};C=function(e,t){S=e,_=t,O||0>t?M.postMessage(void 0):P||(P=!0,b(j))},E=function(){S=null,T=!1,_=-1}}t.unstable_ImmediatePriority=1,t.unstable_UserBlockingPriority=2,t.unstable_NormalPriority=3,t.unstable_IdlePriority=5,t.unstable_LowPriority=4,t.unstable_runWithPriority=function(e,n){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var r=u,i=o;u=e,o=t.unstable_now();try{return n()}finally{u=r,o=i,f()}},t.unstable_next=function(e){switch(u){case 1:case 2:case 3:var n=3;break;default:n=u}var r=u,i=o;u=n,o=t.unstable_now();try{return e()}finally{u=r,o=i,f()}},t.unstable_scheduleCallback=function(e,r){var i=-1!==o?o:t.unstable_now();if("object"===typeof r&&null!==r&&"number"===typeof r.timeout)r=i+r.timeout;else switch(u){case 1:r=i+-1;break;case 2:r=i+250;break;case 5:r=i+1073741823;break;case 4:r=i+1e4;break;default:r=i+5e3}if(e={callback:e,priorityLevel:u,expirationTime:r,next:null,previous:null},null===n)n=e.next=e.previous=e,c();else{i=null;var a=n;do{if(a.expirationTime>r){i=a;break}a=a.next}while(a!==n);null===i?i=n:i===n&&(n=e,c()),(r=i.previous).next=i.previous=e,e.next=i,e.previous=r}return e},t.unstable_cancelCallback=function(e){var t=e.next;if(null!==t){if(t===e)n=null;else{e===n&&(n=t);var r=e.previous;r.next=t,t.previous=r}e.next=e.previous=null}},t.unstable_wrapCallback=function(e){var n=u;return function(){var r=u,i=o;u=n,o=t.unstable_now();try{return e.apply(this,arguments)}finally{u=r,o=i,f()}}},t.unstable_getCurrentPriorityLevel=function(){return u},t.unstable_shouldYield=function(){return!r&&(null!==n&&n.expirationTime<i||F())},t.unstable_continueExecution=function(){null!==n&&c()},t.unstable_pauseExecution=function(){},t.unstable_getFirstCallbackNode=function(){return n}}).call(this,n(49))},function(e,t){var n={"&lt":"<","&gt":">","&quot":\'"\',"&apos":"\'","&amp":"&","&lt;":"<","&gt;":">","&quot;":\'"\',"&apos;":"\'","&amp;":"&"},r={60:"lt",62:"gt",34:"quot",39:"apos",38:"amp"},u={"<":"&lt;",">":"&gt;",\'"\':"&quot;","\'":"&apos;","&":"&amp;"};function o(){}o.prototype.encode=function(e){return e&&e.length?e.replace(/<|>|"|\'|&/g,function(e){return u[e]}):""},o.encode=function(e){return(new o).encode(e)},o.prototype.decode=function(e){return e&&e.length?e.replace(/&#?[0-9a-zA-Z]+;?/g,function(e){if("#"===e.charAt(1)){var t="x"===e.charAt(2).toLowerCase()?parseInt(e.substr(3),16):parseInt(e.substr(2));return isNaN(t)||t<-32768||t>65535?"":String.fromCharCode(t)}return n[e]||e}):""},o.decode=function(e){return(new o).decode(e)},o.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",u=0;u<t;){var o=e.charCodeAt(u),i=r[o];i?(n+="&"+i+";",u++):(n+=o<32||o>126?"&#"+o+";":e.charAt(u),u++)}return n},o.encodeNonUTF=function(e){return(new o).encodeNonUTF(e)},o.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r);u<=255?n+=e[r++]:(n+="&#"+u+";",r++)}return n},o.encodeNonASCII=function(e){return(new o).encodeNonASCII(e)},e.exports=o},function(e,t){for(var n=["apos","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","copy","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","Agrave","Aacute","Acirc","Atilde","Auml","Aring","Aelig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","times","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","divide","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","quot","amp","lt","gt","OElig","oelig","Scaron","scaron","Yuml","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","permil","lsaquo","rsaquo","euro","fnof","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","bull","hellip","prime","Prime","oline","frasl","weierp","image","real","trade","alefsym","larr","uarr","rarr","darr","harr","crarr","lArr","uArr","rArr","dArr","hArr","forall","part","exist","empty","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","prop","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","le","ge","sub","sup","nsub","sube","supe","oplus","otimes","perp","sdot","lceil","rceil","lfloor","rfloor","lang","rang","loz","spades","clubs","hearts","diams"],r=[39,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,34,38,60,62,338,339,352,353,376,710,732,8194,8195,8201,8204,8205,8206,8207,8211,8212,8216,8217,8218,8220,8221,8222,8224,8225,8240,8249,8250,8364,402,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,977,978,982,8226,8230,8242,8243,8254,8260,8472,8465,8476,8482,8501,8592,8593,8594,8595,8596,8629,8656,8657,8658,8659,8660,8704,8706,8707,8709,8711,8712,8713,8715,8719,8721,8722,8727,8730,8733,8734,8736,8743,8744,8745,8746,8747,8756,8764,8773,8776,8800,8801,8804,8805,8834,8835,8836,8838,8839,8853,8855,8869,8901,8968,8969,8970,8971,9001,9002,9674,9824,9827,9829,9830],u={},o={},i=0,a=n.length;i<a;){var l=n[i],c=r[i];u[l]=String.fromCharCode(c),o[c]=l,i++}function s(){}s.prototype.decode=function(e){return e&&e.length?e.replace(/&(#?[\\w\\d]+);?/g,function(e,t){var n;if("#"===t.charAt(0)){var r="x"===t.charAt(1).toLowerCase()?parseInt(t.substr(2),16):parseInt(t.substr(1));isNaN(r)||r<-32768||r>65535||(n=String.fromCharCode(r))}else n=u[t];return n||e}):""},s.decode=function(e){return(new s).decode(e)},s.prototype.encode=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=o[e.charCodeAt(r)];n+=u?"&"+u+";":e.charAt(r),r++}return n},s.encode=function(e){return(new s).encode(e)},s.prototype.encodeNonUTF=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r),i=o[u];n+=i?"&"+i+";":u<32||u>126?"&#"+u+";":e.charAt(r),r++}return n},s.encodeNonUTF=function(e){return(new s).encodeNonUTF(e)},s.prototype.encodeNonASCII=function(e){if(!e||!e.length)return"";for(var t=e.length,n="",r=0;r<t;){var u=e.charCodeAt(r);u<=255?n+=e[r++]:(n+="&#"+u+";",r++)}return n},s.encodeNonASCII=function(e){return(new s).encodeNonASCII(e)},e.exports=s},function(e,t,n){"use strict";var r=n(185);function u(){var e=function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)if(Object.prototype.hasOwnProperty.call(e,n)){var r=Object.defineProperty&&Object.getOwnPropertyDescriptor?Object.getOwnPropertyDescriptor(e,n):{};r.get||r.set?Object.defineProperty(t,n,r):t[n]=e[n]}return t.default=e,t}(n(189));return u=function(){return e},e}function o(){var e=a(n(190));return o=function(){return e},e}function i(){var e=a(n(193));return i=function(){return e},e}function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.shouldHighlight=f,t.getChalk=d,t.default=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};if(f(t)){var n=d(t),i=function(e){return{keyword:e.cyan,capitalized:e.yellow,jsx_tag:e.yellow,punctuator:e.yellow,number:e.magenta,string:e.green,regex:e.magenta,comment:e.grey,invalid:e.white.bgRed.bold}}(n);return function(e,t){return t.replace(u().default,function(){for(var t=arguments.length,n=new Array(t),i=0;i<t;i++)n[i]=arguments[i];var a=function(e){var t=e.slice(-2),n=r(t,2),i=n[0],a=n[1],l=(0,u().matchToToken)(e);if("name"===l.type){if(o().default.keyword.isReservedWordES6(l.value))return"keyword";if(c.test(l.value)&&("<"===a[i-1]||"</"==a.substr(i-2,2)))return"jsx_tag";if(l.value[0]!==l.value[0].toLowerCase())return"capitalized"}if("punctuator"===l.type&&s.test(l.value))return"bracket";if("invalid"===l.type&&("@"===l.value||"#"===l.value))return"punctuator";return l.type}(n),f=e[a];return f?n[0].split(l).map(function(e){return f(e)}).join("\\n"):n[0]})}(i,e)}return e};var l=/\\r\\n|[\\n\\r\\u2028\\u2029]/,c=/^[a-z][\\w-]*$/i,s=/^[()[\\]{}]$/;function f(e){return i().default.supportsColor||e.forceColor}function d(e){var t=i().default;return e.forceColor&&(t=new(i().default.constructor)({enabled:!0,level:1})),t}},function(e,t,n){var r=n(186),u=n(187),o=n(188);e.exports=function(e,t){return r(e)||u(e,t)||o()}},function(e,t){e.exports=function(e){if(Array.isArray(e))return e}},function(e,t){e.exports=function(e,t){var n=[],r=!0,u=!1,o=void 0;try{for(var i,a=e[Symbol.iterator]();!(r=(i=a.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){u=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(u)throw o}}return n}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.default=/(([\'"])(?:(?!\\2|\\\\).|\\\\(?:\\r\\n|[\\s\\S]))*(\\2)?|`(?:[^`\\\\$]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{[^}]*\\}?)*\\}?)*(`)?)|(\\/\\/.*)|(\\/\\*(?:[^*]|\\*(?!\\/))*(\\*\\/)?)|(\\/(?!\\*)(?:\\[(?:(?![\\]\\\\]).|\\\\.)*\\]|(?![\\/\\]\\\\]).|\\\\.)+\\/(?:(?!\\s*(?:\\b|[\\u0080-\\uFFFF$\\\\\'"~({]|[+\\-!](?!=)|\\.?\\d))|[gmiyus]{1,6}\\b(?![\\u0080-\\uFFFF$\\\\]|\\s*(?:[+\\-*%&|^<>!=?({]|\\/(?![\\/*])))))|(0[xX][\\da-fA-F]+|0[oO][0-7]+|0[bB][01]+|(?:\\d*\\.\\d+|\\d+\\.?)(?:[eE][+-]?\\d+)?)|((?!\\d)(?:(?!\\s)[$\\w\\u0080-\\uFFFF]|\\\\u[\\da-fA-F]{4}|\\\\u\\{[\\da-fA-F]+\\})+)|(--|\\+\\+|&&|\\|\\||=>|\\.{3}|(?:[+\\-\\/%&|^]|\\*{1,2}|<{1,2}|>{1,3}|!=?|={1,2})=?|[?~.,:;[\\](){}])|(\\s+)|(^$|[\\s\\S])/g,t.matchToToken=function(e){var t={type:"invalid",value:e[0],closed:void 0};return e[1]?(t.type="string",t.closed=!(!e[3]&&!e[4])):e[5]?t.type="comment":e[6]?(t.type="comment",t.closed=!!e[7]):e[8]?t.type="regex":e[9]?t.type="number":e[10]?t.type="name":e[11]?t.type="punctuator":e[12]&&(t.type="whitespace"),t}},function(e,t,n){!function(){"use strict";t.ast=n(191),t.code=n(81),t.keyword=n(192)}()},function(e,t){!function(){"use strict";function t(e){if(null==e)return!1;switch(e.type){case"BlockStatement":case"BreakStatement":case"ContinueStatement":case"DebuggerStatement":case"DoWhileStatement":case"EmptyStatement":case"ExpressionStatement":case"ForInStatement":case"ForStatement":case"IfStatement":case"LabeledStatement":case"ReturnStatement":case"SwitchStatement":case"ThrowStatement":case"TryStatement":case"VariableDeclaration":case"WhileStatement":case"WithStatement":return!0}return!1}function n(e){switch(e.type){case"IfStatement":return null!=e.alternate?e.alternate:e.consequent;case"LabeledStatement":case"ForStatement":case"ForInStatement":case"WhileStatement":case"WithStatement":return e.body}return null}e.exports={isExpression:function(e){if(null==e)return!1;switch(e.type){case"ArrayExpression":case"AssignmentExpression":case"BinaryExpression":case"CallExpression":case"ConditionalExpression":case"FunctionExpression":case"Identifier":case"Literal":case"LogicalExpression":case"MemberExpression":case"NewExpression":case"ObjectExpression":case"SequenceExpression":case"ThisExpression":case"UnaryExpression":case"UpdateExpression":return!0}return!1},isStatement:t,isIterationStatement:function(e){if(null==e)return!1;switch(e.type){case"DoWhileStatement":case"ForInStatement":case"ForStatement":case"WhileStatement":return!0}return!1},isSourceElement:function(e){return t(e)||null!=e&&"FunctionDeclaration"===e.type},isProblematicIfStatement:function(e){var t;if("IfStatement"!==e.type)return!1;if(null==e.alternate)return!1;t=e.consequent;do{if("IfStatement"===t.type&&null==t.alternate)return!0;t=n(t)}while(t);return!1},trailingStatement:n}}()},function(e,t,n){!function(){"use strict";var t=n(81);function r(e,t){return!(!t&&"yield"===e)&&u(e,t)}function u(e,t){if(t&&function(e){switch(e){case"implements":case"interface":case"package":case"private":case"protected":case"public":case"static":case"let":return!0;default:return!1}}(e))return!0;switch(e.length){case 2:return"if"===e||"in"===e||"do"===e;case 3:return"var"===e||"for"===e||"new"===e||"try"===e;case 4:return"this"===e||"else"===e||"case"===e||"void"===e||"with"===e||"enum"===e;case 5:return"while"===e||"break"===e||"catch"===e||"throw"===e||"const"===e||"yield"===e||"class"===e||"super"===e;case 6:return"return"===e||"typeof"===e||"delete"===e||"switch"===e||"export"===e||"import"===e;case 7:return"default"===e||"finally"===e||"extends"===e;case 8:return"function"===e||"continue"===e||"debugger"===e;case 10:return"instanceof"===e;default:return!1}}function o(e,t){return"null"===e||"true"===e||"false"===e||r(e,t)}function i(e,t){return"null"===e||"true"===e||"false"===e||u(e,t)}function a(e){var n,r,u;if(0===e.length)return!1;if(u=e.charCodeAt(0),!t.isIdentifierStartES5(u))return!1;for(n=1,r=e.length;n<r;++n)if(u=e.charCodeAt(n),!t.isIdentifierPartES5(u))return!1;return!0}function l(e){var n,r,u,o,i;if(0===e.length)return!1;for(i=t.isIdentifierStartES6,n=0,r=e.length;n<r;++n){if(55296<=(u=e.charCodeAt(n))&&u<=56319){if(++n>=r)return!1;if(!(56320<=(o=e.charCodeAt(n))&&o<=57343))return!1;u=1024*(u-55296)+(o-56320)+65536}if(!i(u))return!1;i=t.isIdentifierPartES6}return!0}e.exports={isKeywordES5:r,isKeywordES6:u,isReservedWordES5:o,isReservedWordES6:i,isRestrictedWord:function(e){return"eval"===e||"arguments"===e},isIdentifierNameES5:a,isIdentifierNameES6:l,isIdentifierES5:function(e,t){return a(e)&&!o(e,t)},isIdentifierES6:function(e,t){return l(e)&&!i(e,t)}}}()},function(e,t,n){"use strict";(function(t){var r=n(194),u=n(195),o=n(200).stdout,i=n(201),a="win32"===t.platform&&!(Object({NODE_ENV:"production"}).TERM||"").toLowerCase().startsWith("xterm"),l=["ansi","ansi","ansi256","ansi16m"],c=new Set(["gray"]),s=Object.create(null);function f(e,t){t=t||{};var n=o?o.level:0;e.level=void 0===t.level?n:t.level,e.enabled="enabled"in t?t.enabled:e.level>0}function d(e){if(!this||!(this instanceof d)||this.template){var t={};return f(t,e),t.template=function(){var e=[].slice.call(arguments);return function(e,t){if(!Array.isArray(t))return[].slice.call(arguments,1).join(" ");for(var n=[].slice.call(arguments,2),r=[t.raw[0]],u=1;u<t.length;u++)r.push(String(n[u-1]).replace(/[{}\\\\]/g,"\\\\$&")),r.push(String(t.raw[u]));return i(e,r.join(""))}.apply(null,[t.template].concat(e))},Object.setPrototypeOf(t,d.prototype),Object.setPrototypeOf(t.template,t),t.template.constructor=d,t.template}f(this,e)}a&&(u.blue.open="[94m");for(var p=function(){var e=m[h];u[e].closeRe=new RegExp(r(u[e].close),"g"),s[e]={get:function(){var t=u[e];return E.call(this,this._styles?this._styles.concat(t):[t],this._empty,e)}}},h=0,m=Object.keys(u);h<m.length;h++)p();s.visible={get:function(){return E.call(this,this._styles||[],!0,"visible")}},u.color.closeRe=new RegExp(r(u.color.close),"g");for(var g=function(){var e=y[v];if(c.has(e))return"continue";s[e]={get:function(){var t=this.level;return function(){var n={open:u.color[l[t]][e].apply(null,arguments),close:u.color.close,closeRe:u.color.closeRe};return E.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},v=0,y=Object.keys(u.color.ansi);v<y.length;v++)g();u.bgColor.closeRe=new RegExp(r(u.bgColor.close),"g");for(var D=function(){var e=A[b];if(c.has(e))return"continue";var t="bg"+e[0].toUpperCase()+e.slice(1);s[t]={get:function(){var t=this.level;return function(){var n={open:u.bgColor[l[t]][e].apply(null,arguments),close:u.bgColor.close,closeRe:u.bgColor.closeRe};return E.call(this,this._styles?this._styles.concat(n):[n],this._empty,e)}}}},b=0,A=Object.keys(u.bgColor.ansi);b<A.length;b++)D();var C=Object.defineProperties(function(){},s);function E(e,t,n){var r=function e(){return function(){var e=arguments,t=e.length,n=String(arguments[0]);if(0===t)return"";if(t>1)for(var r=1;r<t;r++)n+=" "+e[r];if(!this.enabled||this.level<=0||!n)return this._empty?"":n;var o=u.dim.open;a&&this.hasGrey&&(u.dim.open="");var i=!0,l=!1,c=void 0;try{for(var s,f=this._styles.slice().reverse()[Symbol.iterator]();!(i=(s=f.next()).done);i=!0){var d=s.value;n=(n=d.open+n.replace(d.closeRe,d.open)+d.close).replace(/\\r?\\n/g,"".concat(d.close,"$&").concat(d.open))}}catch(e){l=!0,c=e}finally{try{i||null==f.return||f.return()}finally{if(l)throw c}}return u.dim.open=o,n}.apply(e,arguments)};r._styles=e,r._empty=t;var o=this;return Object.defineProperty(r,"level",{enumerable:!0,get:function(){return o.level},set:function(e){o.level=e}}),Object.defineProperty(r,"enabled",{enumerable:!0,get:function(){return o.enabled},set:function(e){o.enabled=e}}),r.hasGrey=this.hasGrey||"gray"===n||"grey"===n,r.__proto__=C,r}Object.defineProperties(d.prototype,s),e.exports=d(),e.exports.supportsColor=o,e.exports.default=e.exports}).call(this,n(51))},function(e,t,n){"use strict";var r=/[|\\\\{}()[\\]^$+*?.]/g;e.exports=function(e){if("string"!==typeof e)throw new TypeError("Expected a string");return e.replace(r,"\\\\$&")}},function(e,t,n){"use strict";(function(e){var t=n(197),r=function(e,n){return function(){var r=e.apply(t,arguments);return"[".concat(r+n,"m")}},u=function(e,n){return function(){var r=e.apply(t,arguments);return"[".concat(38+n,";5;").concat(r,"m")}},o=function(e,n){return function(){var r=e.apply(t,arguments);return"[".concat(38+n,";2;").concat(r[0],";").concat(r[1],";").concat(r[2],"m")}};Object.defineProperty(e,"exports",{enumerable:!0,get:function(){var e=new Map,n={modifier:{reset:[0,0],bold:[1,22],dim:[2,22],italic:[3,23],underline:[4,24],inverse:[7,27],hidden:[8,28],strikethrough:[9,29]},color:{black:[30,39],red:[31,39],green:[32,39],yellow:[33,39],blue:[34,39],magenta:[35,39],cyan:[36,39],white:[37,39],gray:[90,39],redBright:[91,39],greenBright:[92,39],yellowBright:[93,39],blueBright:[94,39],magentaBright:[95,39],cyanBright:[96,39],whiteBright:[97,39]},bgColor:{bgBlack:[40,49],bgRed:[41,49],bgGreen:[42,49],bgYellow:[43,49],bgBlue:[44,49],bgMagenta:[45,49],bgCyan:[46,49],bgWhite:[47,49],bgBlackBright:[100,49],bgRedBright:[101,49],bgGreenBright:[102,49],bgYellowBright:[103,49],bgBlueBright:[104,49],bgMagentaBright:[105,49],bgCyanBright:[106,49],bgWhiteBright:[107,49]}};n.color.grey=n.color.gray;for(var i=0,a=Object.keys(n);i<a.length;i++){for(var l=a[i],c=n[l],s=0,f=Object.keys(c);s<f.length;s++){var d=f[s],p=c[d];n[d]={open:"[".concat(p[0],"m"),close:"[".concat(p[1],"m")},c[d]=n[d],e.set(p[0],p[1])}Object.defineProperty(n,l,{value:c,enumerable:!1}),Object.defineProperty(n,"codes",{value:e,enumerable:!1})}var h=function(e){return e},m=function(e,t,n){return[e,t,n]};n.color.close="[39m",n.bgColor.close="[49m",n.color.ansi={ansi:r(h,0)},n.color.ansi256={ansi256:u(h,0)},n.color.ansi16m={rgb:o(m,0)},n.bgColor.ansi={ansi:r(h,10)},n.bgColor.ansi256={ansi256:u(h,10)},n.bgColor.ansi16m={rgb:o(m,10)};for(var g=0,v=Object.keys(t);g<v.length;g++){var y=v[g];if("object"===typeof t[y]){var D=t[y];"ansi16"===y&&(y="ansi"),"ansi16"in D&&(n.color.ansi[y]=r(D.ansi16,0),n.bgColor.ansi[y]=r(D.ansi16,10)),"ansi256"in D&&(n.color.ansi256[y]=u(D.ansi256,0),n.bgColor.ansi256[y]=u(D.ansi256,10)),"rgb"in D&&(n.color.ansi16m[y]=o(D.rgb,0),n.bgColor.ansi16m[y]=o(D.rgb,10))}}return n}})}).call(this,n(196)(e))},function(e,t){e.exports=function(e){return e.webpackPolyfill||(e.deprecate=function(){},e.paths=[],e.children||(e.children=[]),Object.defineProperty(e,"loaded",{enumerable:!0,get:function(){return e.l}}),Object.defineProperty(e,"id",{enumerable:!0,get:function(){return e.i}}),e.webpackPolyfill=1),e}},function(e,t,n){var r=n(82),u=n(199),o={};Object.keys(r).forEach(function(e){o[e]={},Object.defineProperty(o[e],"channels",{value:r[e].channels}),Object.defineProperty(o[e],"labels",{value:r[e].labels});var t=u(e);Object.keys(t).forEach(function(n){var r=t[n];o[e][n]=function(e){var t=function(t){if(void 0===t||null===t)return t;arguments.length>1&&(t=Array.prototype.slice.call(arguments));var n=e(t);if("object"===typeof n)for(var r=n.length,u=0;u<r;u++)n[u]=Math.round(n[u]);return n};return"conversion"in e&&(t.conversion=e.conversion),t}(r),o[e][n].raw=function(e){var t=function(t){return void 0===t||null===t?t:(arguments.length>1&&(t=Array.prototype.slice.call(arguments)),e(t))};return"conversion"in e&&(t.conversion=e.conversion),t}(r)})}),e.exports=o},function(e,t,n){"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},function(e,t,n){var r=n(82);function u(e){var t=function(){for(var e={},t=Object.keys(r),n=t.length,u=0;u<n;u++)e[t[u]]={distance:-1,parent:null};return e}(),n=[e];for(t[e].distance=0;n.length;)for(var u=n.pop(),o=Object.keys(r[u]),i=o.length,a=0;a<i;a++){var l=o[a],c=t[l];-1===c.distance&&(c.distance=t[u].distance+1,c.parent=u,n.unshift(l))}return t}function o(e,t){return function(n){return t(e(n))}}function i(e,t){for(var n=[t[e].parent,e],u=r[t[e].parent][e],i=t[e].parent;t[i].parent;)n.unshift(t[i].parent),u=o(r[t[i].parent][i],u),i=t[i].parent;return u.conversion=n,u}e.exports=function(e){for(var t=u(e),n={},r=Object.keys(t),o=r.length,a=0;a<o;a++){var l=r[a];null!==t[l].parent&&(n[l]=i(l,t))}return n}},function(e,t,n){"use strict";e.exports={stdout:!1,stderr:!1}},function(e,t,n){"use strict";var r=/(?:\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.))|(?:\\{(~)?(\\w+(?:\\([^)]*\\))?(?:\\.\\w+(?:\\([^)]*\\))?)*)(?:[ \\t]|(?=\\r?\\n)))|(\\})|((?:.|[\\r\\n\\f])+?)/gi,u=/(?:^|\\.)(\\w+)(?:\\(([^)]*)\\))?/g,o=/^([\'"])((?:\\\\.|(?!\\1)[^\\\\])*)\\1$/,i=/\\\\(u[a-f\\d]{4}|x[a-f\\d]{2}|.)|([^\\\\])/gi,a=new Map([["n","\\n"],["r","\\r"],["t","\\t"],["b","\\b"],["f","\\f"],["v","\\v"],["0","\\0"],["\\\\","\\\\"],["e",""],["a",""]]);function l(e){return"u"===e[0]&&5===e.length||"x"===e[0]&&3===e.length?String.fromCharCode(parseInt(e.slice(1),16)):a.get(e)||e}function c(e,t){var n,r=[],u=t.trim().split(/\\s*,\\s*/g),a=!0,c=!1,s=void 0;try{for(var f,d=u[Symbol.iterator]();!(a=(f=d.next()).done);a=!0){var p=f.value;if(isNaN(p)){if(!(n=p.match(o)))throw new Error("Invalid Chalk template style argument: ".concat(p," (in style \'").concat(e,"\')"));r.push(n[2].replace(i,function(e,t,n){return t?l(t):n}))}else r.push(Number(p))}}catch(e){c=!0,s=e}finally{try{a||null==d.return||d.return()}finally{if(c)throw s}}return r}function s(e){u.lastIndex=0;for(var t,n=[];null!==(t=u.exec(e));){var r=t[1];if(t[2]){var o=c(r,t[2]);n.push([r].concat(o))}else n.push([r])}return n}function f(e,t){var n={},r=!0,u=!1,o=void 0;try{for(var i,a=t[Symbol.iterator]();!(r=(i=a.next()).done);r=!0){var l=i.value,c=!0,s=!1,f=void 0;try{for(var d,p=l.styles[Symbol.iterator]();!(c=(d=p.next()).done);c=!0){var h=d.value;n[h[0]]=l.inverse?null:h.slice(1)}}catch(e){s=!0,f=e}finally{try{c||null==p.return||p.return()}finally{if(s)throw f}}}}catch(e){u=!0,o=e}finally{try{r||null==a.return||a.return()}finally{if(u)throw o}}for(var m=e,g=0,v=Object.keys(n);g<v.length;g++){var y=v[g];if(Array.isArray(n[y])){if(!(y in m))throw new Error("Unknown Chalk style: ".concat(y));m=n[y].length>0?m[y].apply(m,n[y]):m[y]}}return m}e.exports=function(e,t){var n=[],u=[],o=[];if(t.replace(r,function(t,r,i,a,c,d){if(r)o.push(l(r));else if(a){var p=o.join("");o=[],u.push(0===n.length?p:f(e,n)(p)),n.push({inverse:i,styles:s(a)})}else if(c){if(0===n.length)throw new Error("Found extraneous } in Chalk template literal");u.push(f(e,n)(o.join(""))),o=[],n.pop()}else o.push(d)}),u.push(o.join("")),n.length>0){var i="Chalk template literal is missing ".concat(n.length," closing bracket").concat(1===n.length?"":"s"," (`}`)");throw new Error(i)}return u.join("")}},function(e,t,n){"use strict";n.r(t);n(85);var r=n(0),u=n.n(r),o=n(52),i=n.n(o);function a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t&&l(e.prototype,t),n&&l(e,n),e}function s(e){return(s="function"===typeof Symbol&&"symbol"===typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function f(e){return(f="function"===typeof Symbol&&"symbol"===s(Symbol.iterator)?function(e){return s(e)}:function(e){return e&&"function"===typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":s(e)})(e)}function d(e,t){return!t||"object"!==f(t)&&"function"!==typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called");return e}(e):t}function p(e){return(p=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function h(e,t){return(h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function m(e,t){if("function"!==typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&h(e,t)}var g={width:"100%",height:"100%","box-sizing":"border-box","text-align":"center","background-color":"#ffffff"},v={"background-color":"#fccfcf"},y={"background-color":"#fbf5b4"},D={position:"relative",display:"inline-flex",flexDirection:"column",height:"100%",width:"1024px",maxWidth:"100%",overflowX:"hidden",overflowY:"auto",padding:"0.5rem",boxSizing:"border-box",textAlign:"left",fontFamily:"Consolas, Menlo, monospace",fontSize:"11px",whiteSpace:"pre-wrap",wordBreak:"break-word",lineHeight:1.5,color:"#293238"},b=function(e){function t(){var e,n;a(this,t);for(var r=arguments.length,u=new Array(r),o=0;o<r;o++)u[o]=arguments[o];return(n=d(this,(e=p(t)).call.apply(e,[this].concat(u)))).iframeWindow=null,n.getIframeWindow=function(e){if(e){var t=e.ownerDocument;n.iframeWindow=t.defaultView}},n.onKeyDown=function(e){var t=n.props.shortcutHandler;t&&t(e.key)},n}return m(t,r["Component"]),c(t,[{key:"componentDidMount",value:function(){window.addEventListener("keydown",this.onKeyDown),this.iframeWindow&&this.iframeWindow.addEventListener("keydown",this.onKeyDown)}},{key:"componentWillUnmount",value:function(){window.removeEventListener("keydown",this.onKeyDown),this.iframeWindow&&this.iframeWindow.removeEventListener("keydown",this.onKeyDown)}},{key:"render",value:function(){return u.a.createElement("div",{style:D,ref:this.getIframeWindow},this.props.children)}}]),t}(),A={fontFamily:"sans-serif",color:"#878e91",marginTop:"0.5rem",flex:"0 0 auto"};var C=function(e){return u.a.createElement("div",{style:A},e.line1,u.a.createElement("br",null),e.line2)},E={fontSize:"2em",fontFamily:"sans-serif",color:"#ce1126",whiteSpace:"pre-wrap",margin:"0 2rem 0.75rem 0",flex:"0 0 auto",maxHeight:"50%",overflow:"auto"};var F=function(e){return u.a.createElement("div",{style:E},e.headerText)};function w(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function x(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},r=Object.keys(n);"function"===typeof Object.getOwnPropertySymbols&&(r=r.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),r.forEach(function(t){w(e,t,n[t])})}return e}var B={position:"relative",display:"block",padding:"0.5em",marginTop:"0.5em",marginBottom:"0.5em",overflowX:"auto",whiteSpace:"pre-wrap",borderRadius:"0.25rem"},k=x({},B,{backgroundColor:"rgba(206, 17, 38, 0.05)"}),S=x({},B,{backgroundColor:"rgba(251, 245, 180, 0.3)"}),T={fontFamily:"Consolas, Menlo, monospace"};var _=function(e){var t=e.main?k:S,n={__html:e.codeHTML};return u.a.createElement("pre",{style:t},u.a.createElement("code",{style:T,dangerouslySetInnerHTML:n}))},P=n(33),O=n.n(P),N=new(n(83).AllHtmlEntities),R={reset:["333333","transparent"],black:"333333",red:"881280",green:"1155cc",yellow:"881280",blue:"994500",magenta:"994500",cyan:"c80000",gray:"6e6e6e",lightgrey:"f5f5f5",darkgrey:"6e6e6e"},I={"ansi-bright-black":"black","ansi-bright-yellow":"yellow","ansi-yellow":"yellow","ansi-bright-green":"green","ansi-green":"green","ansi-bright-cyan":"cyan","ansi-cyan":"cyan","ansi-bright-red":"red","ansi-red":"red","ansi-bright-magenta":"magenta","ansi-magenta":"magenta","ansi-white":"darkgrey"};var L=function(e){for(var t=(new O.a).ansiToJson(N.encode(e),{use_classes:!0}),n="",r=!1,u=0;u<t.length;++u)for(var o=t[u],i=o.content,a=o.fg,l=i.split("\\n"),c=0;c<l.length;++c){r||(n+=\'<span data-ansi-line="true">\',r=!0);var s=l[c].replace("\\r",""),f=R[I[a]];null!=f?n+=\'<span style="color: #\'+f+\';">\'+s+"</span>":(null!=a&&console.log("Missing color mapping: ",a),n+="<span>"+s+"</span>"),c<l.length-1&&(n+="</span>",r=!1,n+="<br/>")}return r&&(n+="</span>",r=!1),n},M=/^\\.(\\/[^\\/\\n ]+)+\\.[^\\/\\n ]+$/,j=[/^.*\\((\\d+):(\\d+)\\)$/,/^Line (\\d+):.+$/];var q=function(e){for(var t=e.split("\\n"),n="",r=0,u=0,o=0;o<t.length;o++){var i=O.a.ansiToText(t[o]).trim();if(i){!n&&i.match(M)&&(n=i);for(var a=0;a<j.length;){var l=i.match(j[a]);if(l){r=parseInt(l[1],10),u=parseInt(l[2],10)+1||1;break}a++}if(n&&r)break}}return n&&r?{fileName:n,lineNumber:r,colNumber:u}:null},U={cursor:"pointer"},z=function(e){function t(){return a(this,t),d(this,p(t).apply(this,arguments))}return m(t,r["PureComponent"]),c(t,[{key:"render",value:function(){var e=this.props,t=e.error,n=e.editorHandler,r=q(t),o=null!==r&&null!==n;return u.a.createElement(b,null,u.a.createElement(F,{headerText:"Failed to compile"}),u.a.createElement("div",{onClick:o&&r?function(){return n(r)}:null,style:o?U:null},u.a.createElement(_,{main:!0,codeHTML:L(t)})),u.a.createElement(C,{line1:"This error occurred during the build time and cannot be dismissed."}))}}]),t}(),H={color:"#293238",lineHeight:"1rem",fontSize:"1.5rem",padding:"1rem",cursor:"pointer",position:"absolute",right:0,top:0};var V=function(e){var t=e.close;return u.a.createElement("span",{title:"Click or press Escape to dismiss.",onClick:t,style:H},"×")},W={marginBottom:"0.5rem"},G={marginRight:"1em"},$={backgroundColor:"rgba(206, 17, 38, 0.05)",color:"#ce1126",border:"none",borderRadius:"4px",padding:"3px 6px",cursor:"pointer"},K=x({},$,{borderTopRightRadius:"0px",borderBottomRightRadius:"0px",marginRight:"1px"}),Q=x({},$,{borderTopLeftRadius:"0px",borderBottomLeftRadius:"0px"});var Y=function(e){var t=e.currentError,n=e.totalErrors,r=e.previous,o=e.next;return u.a.createElement("div",{style:W},u.a.createElement("span",{style:G},u.a.createElement("button",{onClick:r,style:K},"←"),u.a.createElement("button",{onClick:o,style:Q},"→")),"".concat(t," of ").concat(n," errors on the page"))};function J(e,t){for(var n in e.setAttribute("style",""),t)t.hasOwnProperty(n)&&(e.style[n]=t[n])}function X(e,t){for(;null!=t&&"br"!==t.tagName.toLowerCase();)t=t.nextElementSibling;null!=t&&e.removeChild(t)}var Z=n(84);var ee=function(e){var t=e.lines,n=e.lineNum,r=e.columnNum,o=e.contextSize,i=e.main,a=[],l=1/0;t.forEach(function(e){var t=e.content,n=t.match(/^\\s*/);""!==t&&(l=n&&n[0]?Math.min(l,n[0].length):0)}),t.forEach(function(e){var t=e.content,n=e.lineNumber;isFinite(l)&&(t=t.substring(l)),a[n-1]=t});var c=Object(Z.codeFrameColumns)(a.join("\\n"),{start:{line:n,column:null==r?0:r-(isFinite(l)?l:0)}},{forceColor:!0,linesAbove:o,linesBelow:o}),s=L(c),f=document.createElement("code");f.innerHTML=s,function(e){for(var t=e.childNodes,n=0;n<t.length;++n){var r=t[n];if("span"===r.tagName.toLowerCase()){var u=r.innerText;null!=u&&"|^"===u.replace(/\\s/g,"")&&(r.style.position="absolute",X(e,r))}}}(f);var d=f.childNodes;e:for(var p=0;p<d.length;++p)for(var h=d[p],m=h.childNodes,g=0;g<m.length;++g){var D=m[g].innerText;if(null!=D&&-1!==D.indexOf(" "+n+" |")){J(h,i?v:y);break e}}return u.a.createElement(_,{main:i,codeHTML:f.innerHTML})};function te(e,t,n,r,u,o,i){var a;if(!i&&e&&"number"===typeof t){var l=/^[\\/|\\\\].*?[\\/|\\\\]((src|node_modules)[\\/|\\\\].*)/.exec(e);a=l&&l[1]?l[1]:e,a+=":"+t,n&&(a+=":"+n)}else r&&"number"===typeof u?(a=r+":"+u,o&&(a+=":"+o)):a="unknown";return a.replace("webpack://",".")}var ne={fontSize:"0.9em",marginBottom:"0.9em"},re={textDecoration:"none",color:"#878e91",cursor:"pointer"},ue={cursor:"pointer"},oe={marginBottom:"1.5em",color:"#878e91",cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:"#fff",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},ie=function(e){function t(){var e,n;a(this,t);for(var r=arguments.length,u=new Array(r),o=0;o<r;o++)u[o]=arguments[o];return(n=d(this,(e=p(t)).call.apply(e,[this].concat(u)))).state={compiled:!1},n.toggleCompiled=function(){n.setState(function(e){return{compiled:!e.compiled}})},n.editorHandler=function(){var e=n.getErrorLocation();e&&n.props.editorHandler(e)},n.onKeyDown=function(e){"Enter"===e.key&&n.editorHandler()},n}return m(t,r["Component"]),c(t,[{key:"getErrorLocation",value:function(){var e=this.props.frame,t=e._originalFileName,n=e._originalLineNumber;return t?-1!==t.trim().indexOf(" ")?null:{fileName:t,lineNumber:n||1}:null}},{key:"render",value:function(){var e=this.props,t=e.frame,n=e.contextSize,r=e.critical,o=e.showCode,i=t.fileName,a=t.lineNumber,l=t.columnNumber,c=t._scriptCode,s=t._originalFileName,f=t._originalLineNumber,d=t._originalColumnNumber,p=t._originalScriptCode,h=t.getFunctionName(),m=this.state.compiled,g=te(s,f,d,i,a,l,m),v=null;o&&(m&&c&&0!==c.length&&null!=a?v={lines:c,lineNum:a,columnNum:l,contextSize:n,main:r}:!m&&p&&0!==p.length&&null!=f&&(v={lines:p,lineNum:f,columnNum:d,contextSize:n,main:r}));var y=null!==this.getErrorLocation()&&null!==this.props.editorHandler;return u.a.createElement("div",null,u.a.createElement("div",null,h),u.a.createElement("div",{style:ne},u.a.createElement("span",{style:y?re:null,onClick:y?this.editorHandler:null,onKeyDown:y?this.onKeyDown:null,tabIndex:y?"0":null},g)),v&&u.a.createElement("span",null,u.a.createElement("span",{onClick:y?this.editorHandler:null,style:y?ue:null},u.a.createElement(ee,v)),u.a.createElement("button",{style:oe,onClick:this.toggleCompiled},"View "+(m?"source":"compiled"))))}}]),t}(),ae={color:"#293238",cursor:"pointer",border:"none",display:"block",width:"100%",textAlign:"left",background:"#fff",fontFamily:"Consolas, Menlo, monospace",fontSize:"1em",padding:"0px",lineHeight:"1.5"},le=x({},ae,{marginBottom:"1.5em"}),ce=x({},ae,{marginBottom:"0.6em"}),se=function(e){function t(){var e,n;a(this,t);for(var r=arguments.length,u=new Array(r),o=0;o<r;o++)u[o]=arguments[o];return(n=d(this,(e=p(t)).call.apply(e,[this].concat(u)))).state={collapsed:!0},n.toggleCollapsed=function(){n.setState(function(e){return{collapsed:!e.collapsed}})},n}return m(t,r["Component"]),c(t,[{key:"render",value:function(){var e=this.props.children.length,t=this.state.collapsed;return u.a.createElement("div",null,u.a.createElement("button",{onClick:this.toggleCollapsed,style:t?le:ce},(t?"▶":"▼")+" ".concat(e," stack frames were ")+(t?"collapsed.":"expanded.")),u.a.createElement("div",{style:{display:t?"none":"block"}},this.props.children,u.a.createElement("button",{onClick:this.toggleCollapsed,style:ce},"▲ ".concat(e," stack frames were expanded."))))}}]),t}();function fe(e){switch(e){case"EvalError":case"InternalError":case"RangeError":case"ReferenceError":case"SyntaxError":case"TypeError":case"URIError":return!0;default:return!1}}var de={fontSize:"1em",flex:"0 1 auto",minHeight:"0px",overflow:"auto"},pe=function(e){function t(){return a(this,t),d(this,p(t).apply(this,arguments))}return m(t,r["Component"]),c(t,[{key:"renderFrames",value:function(){var e=this.props,t=e.stackFrames,n=e.errorName,r=e.contextSize,o=e.editorHandler,i=[],a=!1,l=[],c=0;return t.forEach(function(e,s){var f=e.fileName,d=function(e,t){return null==e||""===e||-1!==e.indexOf("/~/")||-1!==e.indexOf("/node_modules/")||-1!==e.trim().indexOf(" ")||null==t||""===t}(e._originalFileName,f),p=!fe(n),h=d&&(p||a);d||(a=!0);var m=u.a.createElement(ie,{key:"frame-"+s,frame:e,contextSize:r,critical:0===s,showCode:!h,editorHandler:o}),g=s===t.length-1;h&&l.push(m),h&&!g||(1===l.length?i.push(l[0]):l.length>1&&(c++,i.push(u.a.createElement(se,{key:"bundle-"+c},l))),l=[]),h||i.push(m)}),i}},{key:"render",value:function(){return u.a.createElement("div",{style:de},this.renderFrames())}}]),t}(),he={display:"flex",flexDirection:"column"};var me=function(e){var t=e.errorRecord,n=e.editorHandler,r=t.error,o=t.unhandledRejection,i=t.contextSize,a=t.stackFrames,l=o?"Unhandled Rejection ("+r.name+")":r.name,c=r.message,s=c.match(/^\\w*:/)||!l?c:l+": "+c;return s=s.replace(/^Invariant Violation:\\s*/,"").replace(/^Warning:\\s*/,"").replace(" Check the render method","\\n\\nCheck the render method").replace(" Check your code at","\\n\\nCheck your code at"),u.a.createElement("div",{style:he},u.a.createElement(F,{headerText:s}),u.a.createElement(pe,{stackFrames:a,errorName:l,contextSize:i,editorHandler:n}))},ge=function(e){function t(){var e,n;a(this,t);for(var r=arguments.length,u=new Array(r),o=0;o<r;o++)u[o]=arguments[o];return(n=d(this,(e=p(t)).call.apply(e,[this].concat(u)))).state={currentIndex:0},n.previous=function(){n.setState(function(e,t){return{currentIndex:e.currentIndex>0?e.currentIndex-1:t.errorRecords.length-1}})},n.next=function(){n.setState(function(e,t){return{currentIndex:e.currentIndex<t.errorRecords.length-1?e.currentIndex+1:0}})},n.shortcutHandler=function(e){"Escape"===e?n.props.close():"ArrowLeft"===e?n.previous():"ArrowRight"===e&&n.next()},n}return m(t,r["PureComponent"]),c(t,[{key:"render",value:function(){var e=this.props,t=e.errorRecords,n=e.close,r=t.length;return u.a.createElement(b,{shortcutHandler:this.shortcutHandler},u.a.createElement(V,{close:n}),r>1&&u.a.createElement(Y,{currentError:this.state.currentIndex+1,totalErrors:r,previous:this.previous,next:this.next}),u.a.createElement(me,{errorRecord:t[this.state.currentIndex],editorHandler:this.props.editorHandler}),u.a.createElement(C,{line1:"This screen is visible only in development. It will not appear if the app crashes in production.",line2:"Open your browser’s developer console to further inspect this error."}))}}]),t}(),ve=null;window.updateContent=function(e){var t,n,r,o,a,l=(n=(t=e).currentBuildError,r=t.currentRuntimeErrorRecords,o=t.dismissRuntimeErrors,a=t.editorHandler,n?u.a.createElement(z,{error:n,editorHandler:a}):r.length>0?u.a.createElement(ge,{errorRecords:r,close:o,editorHandler:a}):null);return null===l?(i.a.unmountComponentAtNode(ve),!1):(i.a.render(l,ve),!0)},document.body.style.margin="0",document.body.style["max-width"]="100vw",J(ve=document.createElement("div"),g),document.body.appendChild(ve),window.parent.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady()}]);';
  }, function (e, t, n) {
    var r = function (e) {
      "use strict";

      var t,
          n = Object.prototype,
          r = n.hasOwnProperty,
          u = "function" == typeof Symbol ? Symbol : {},
          o = u.iterator || "@@iterator",
          i = u.asyncIterator || "@@asyncIterator",
          a = u.toStringTag || "@@toStringTag";

      function l(e, t, n, r) {
        var u = t && t.prototype instanceof m ? t : m,
            o = Object.create(u.prototype),
            i = new B(r || []);
        return o._invoke = function (e, t, n) {
          var r = c;
          return function (u, o) {
            if (r === p) throw new Error("Generator is already running");

            if (r === d) {
              if ("throw" === u) throw o;
              return _();
            }

            for (n.method = u, n.arg = o;;) {
              var i = n.delegate;

              if (i) {
                var a = F(i, n);

                if (a) {
                  if (a === h) continue;
                  return a;
                }
              }

              if ("next" === n.method) n.sent = n._sent = n.arg;else if ("throw" === n.method) {
                if (r === c) throw r = d, n.arg;
                n.dispatchException(n.arg);
              } else "return" === n.method && n.abrupt("return", n.arg);
              r = p;
              var l = s(e, t, n);

              if ("normal" === l.type) {
                if (r = n.done ? d : f, l.arg === h) continue;
                return {
                  value: l.arg,
                  done: n.done
                };
              }

              "throw" === l.type && (r = d, n.method = "throw", n.arg = l.arg);
            }
          };
        }(e, n, i), o;
      }

      function s(e, t, n) {
        try {
          return {
            type: "normal",
            arg: e.call(t, n)
          };
        } catch (e) {
          return {
            type: "throw",
            arg: e
          };
        }
      }

      e.wrap = l;
      var c = "suspendedStart",
          f = "suspendedYield",
          p = "executing",
          d = "completed",
          h = {};

      function m() {}

      function g() {}

      function v() {}

      var y = {};

      y[o] = function () {
        return this;
      };

      var D = Object.getPrototypeOf,
          b = D && D(D(k([])));
      b && b !== n && r.call(b, o) && (y = b);
      var A = v.prototype = m.prototype = Object.create(y);

      function C(e) {
        ["next", "throw", "return"].forEach(function (t) {
          e[t] = function (e) {
            return this._invoke(t, e);
          };
        });
      }

      function E(e) {
        var t;

        this._invoke = function (n, u) {
          function o() {
            return new Promise(function (t, o) {
              !function t(n, u, o, i) {
                var a = s(e[n], e, u);

                if ("throw" !== a.type) {
                  var l = a.arg,
                      c = l.value;
                  return c && "object" == typeof c && r.call(c, "__await") ? Promise.resolve(c.__await).then(function (e) {
                    t("next", e, o, i);
                  }, function (e) {
                    t("throw", e, o, i);
                  }) : Promise.resolve(c).then(function (e) {
                    l.value = e, o(l);
                  }, function (e) {
                    return t("throw", e, o, i);
                  });
                }

                i(a.arg);
              }(n, u, t, o);
            });
          }

          return t = t ? t.then(o, o) : o();
        };
      }

      function F(e, n) {
        var r = e.iterator[n.method];

        if (r === t) {
          if (n.delegate = null, "throw" === n.method) {
            if (e.iterator.return && (n.method = "return", n.arg = t, F(e, n), "throw" === n.method)) return h;
            n.method = "throw", n.arg = new TypeError("The iterator does not provide a 'throw' method");
          }

          return h;
        }

        var u = s(r, e.iterator, n.arg);
        if ("throw" === u.type) return n.method = "throw", n.arg = u.arg, n.delegate = null, h;
        var o = u.arg;
        return o ? o.done ? (n[e.resultName] = o.value, n.next = e.nextLoc, "return" !== n.method && (n.method = "next", n.arg = t), n.delegate = null, h) : o : (n.method = "throw", n.arg = new TypeError("iterator result is not an object"), n.delegate = null, h);
      }

      function w(e) {
        var t = {
          tryLoc: e[0]
        };
        1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t);
      }

      function x(e) {
        var t = e.completion || {};
        t.type = "normal", delete t.arg, e.completion = t;
      }

      function B(e) {
        this.tryEntries = [{
          tryLoc: "root"
        }], e.forEach(w, this), this.reset(!0);
      }

      function k(e) {
        if (e) {
          var n = e[o];
          if (n) return n.call(e);
          if ("function" == typeof e.next) return e;

          if (!isNaN(e.length)) {
            var u = -1,
                i = function n() {
              for (; ++u < e.length;) if (r.call(e, u)) return n.value = e[u], n.done = !1, n;

              return n.value = t, n.done = !0, n;
            };

            return i.next = i;
          }
        }

        return {
          next: _
        };
      }

      function _() {
        return {
          value: t,
          done: !0
        };
      }

      return g.prototype = A.constructor = v, v.constructor = g, v[a] = g.displayName = "GeneratorFunction", e.isGeneratorFunction = function (e) {
        var t = "function" == typeof e && e.constructor;
        return !!t && (t === g || "GeneratorFunction" === (t.displayName || t.name));
      }, e.mark = function (e) {
        return Object.setPrototypeOf ? Object.setPrototypeOf(e, v) : (e.__proto__ = v, a in e || (e[a] = "GeneratorFunction")), e.prototype = Object.create(A), e;
      }, e.awrap = function (e) {
        return {
          __await: e
        };
      }, C(E.prototype), E.prototype[i] = function () {
        return this;
      }, e.AsyncIterator = E, e.async = function (t, n, r, u) {
        var o = new E(l(t, n, r, u));
        return e.isGeneratorFunction(n) ? o : o.next().then(function (e) {
          return e.done ? e.value : o.next();
        });
      }, C(A), A[a] = "Generator", A[o] = function () {
        return this;
      }, A.toString = function () {
        return "[object Generator]";
      }, e.keys = function (e) {
        var t = [];

        for (var n in e) t.push(n);

        return t.reverse(), function n() {
          for (; t.length;) {
            var r = t.pop();
            if (r in e) return n.value = r, n.done = !1, n;
          }

          return n.done = !0, n;
        };
      }, e.values = k, B.prototype = {
        constructor: B,
        reset: function (e) {
          if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = "next", this.arg = t, this.tryEntries.forEach(x), !e) for (var n in this) "t" === n.charAt(0) && r.call(this, n) && !isNaN(+n.slice(1)) && (this[n] = t);
        },
        stop: function () {
          this.done = !0;
          var e = this.tryEntries[0].completion;
          if ("throw" === e.type) throw e.arg;
          return this.rval;
        },
        dispatchException: function (e) {
          if (this.done) throw e;
          var n = this;

          function u(r, u) {
            return a.type = "throw", a.arg = e, n.next = r, u && (n.method = "next", n.arg = t), !!u;
          }

          for (var o = this.tryEntries.length - 1; o >= 0; --o) {
            var i = this.tryEntries[o],
                a = i.completion;
            if ("root" === i.tryLoc) return u("end");

            if (i.tryLoc <= this.prev) {
              var l = r.call(i, "catchLoc"),
                  s = r.call(i, "finallyLoc");

              if (l && s) {
                if (this.prev < i.catchLoc) return u(i.catchLoc, !0);
                if (this.prev < i.finallyLoc) return u(i.finallyLoc);
              } else if (l) {
                if (this.prev < i.catchLoc) return u(i.catchLoc, !0);
              } else {
                if (!s) throw new Error("try statement without catch or finally");
                if (this.prev < i.finallyLoc) return u(i.finallyLoc);
              }
            }
          }
        },
        abrupt: function (e, t) {
          for (var n = this.tryEntries.length - 1; n >= 0; --n) {
            var u = this.tryEntries[n];

            if (u.tryLoc <= this.prev && r.call(u, "finallyLoc") && this.prev < u.finallyLoc) {
              var o = u;
              break;
            }
          }

          o && ("break" === e || "continue" === e) && o.tryLoc <= t && t <= o.finallyLoc && (o = null);
          var i = o ? o.completion : {};
          return i.type = e, i.arg = t, o ? (this.method = "next", this.next = o.finallyLoc, h) : this.complete(i);
        },
        complete: function (e, t) {
          if ("throw" === e.type) throw e.arg;
          return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), h;
        },
        finish: function (e) {
          for (var t = this.tryEntries.length - 1; t >= 0; --t) {
            var n = this.tryEntries[t];
            if (n.finallyLoc === e) return this.complete(n.completion, n.afterLoc), x(n), h;
          }
        },
        catch: function (e) {
          for (var t = this.tryEntries.length - 1; t >= 0; --t) {
            var n = this.tryEntries[t];

            if (n.tryLoc === e) {
              var r = n.completion;

              if ("throw" === r.type) {
                var u = r.arg;
                x(n);
              }

              return u;
            }
          }

          throw new Error("illegal catch attempt");
        },
        delegateYield: function (e, n, r) {
          return this.delegate = {
            iterator: k(e),
            resultName: n,
            nextLoc: r
          }, "next" === this.method && (this.arg = t), h;
        }
      }, e;
    }(e.exports);

    try {
      regeneratorRuntime = r;
    } catch (e) {
      Function("r", "regeneratorRuntime = r")(r);
    }
  }, function (e, t) {
    var n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".split("");
    t.encode = function (e) {
      if (0 <= e && e < n.length) return n[e];
      throw new TypeError("Must be between 0 and 63: " + e);
    }, t.decode = function (e) {
      return 65 <= e && e <= 90 ? e - 65 : 97 <= e && e <= 122 ? e - 97 + 26 : 48 <= e && e <= 57 ? e - 48 + 52 : 43 == e ? 62 : 47 == e ? 63 : -1;
    };
  }, function (e, t, n) {
    var r = n(1);

    function u() {
      this._array = [], this._sorted = !0, this._last = {
        generatedLine: -1,
        generatedColumn: 0
      };
    }

    u.prototype.unsortedForEach = function (e, t) {
      this._array.forEach(e, t);
    }, u.prototype.add = function (e) {
      var t, n, u, o, i, a;
      t = this._last, n = e, u = t.generatedLine, o = n.generatedLine, i = t.generatedColumn, a = n.generatedColumn, o > u || o == u && a >= i || r.compareByGeneratedPositionsInflated(t, n) <= 0 ? (this._last = e, this._array.push(e)) : (this._sorted = !1, this._array.push(e));
    }, u.prototype.toArray = function () {
      return this._sorted || (this._array.sort(r.compareByGeneratedPositionsInflated), this._sorted = !0), this._array;
    }, t.MappingList = u;
  }, function (e, t, n) {
    var r = n(1),
        u = n(13),
        o = n(6).ArraySet,
        i = n(5),
        a = n(14).quickSort;

    function l(e) {
      var t = e;
      return "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, ""))), null != t.sections ? new f(t) : new s(t);
    }

    function s(e) {
      var t = e;
      "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
      var n = r.getArg(t, "version"),
          u = r.getArg(t, "sources"),
          i = r.getArg(t, "names", []),
          a = r.getArg(t, "sourceRoot", null),
          l = r.getArg(t, "sourcesContent", null),
          s = r.getArg(t, "mappings"),
          c = r.getArg(t, "file", null);
      if (n != this._version) throw new Error("Unsupported version: " + n);
      u = u.map(String).map(r.normalize).map(function (e) {
        return a && r.isAbsolute(a) && r.isAbsolute(e) ? r.relative(a, e) : e;
      }), this._names = o.fromArray(i.map(String), !0), this._sources = o.fromArray(u, !0), this.sourceRoot = a, this.sourcesContent = l, this._mappings = s, this.file = c;
    }

    function c() {
      this.generatedLine = 0, this.generatedColumn = 0, this.source = null, this.originalLine = null, this.originalColumn = null, this.name = null;
    }

    function f(e) {
      var t = e;
      "string" == typeof e && (t = JSON.parse(e.replace(/^\)\]\}'/, "")));
      var n = r.getArg(t, "version"),
          u = r.getArg(t, "sections");
      if (n != this._version) throw new Error("Unsupported version: " + n);
      this._sources = new o(), this._names = new o();
      var i = {
        line: -1,
        column: 0
      };
      this._sections = u.map(function (e) {
        if (e.url) throw new Error("Support for url field in sections not implemented.");
        var t = r.getArg(e, "offset"),
            n = r.getArg(t, "line"),
            u = r.getArg(t, "column");
        if (n < i.line || n === i.line && u < i.column) throw new Error("Section offsets must be ordered and non-overlapping.");
        return i = t, {
          generatedOffset: {
            generatedLine: n + 1,
            generatedColumn: u + 1
          },
          consumer: new l(r.getArg(e, "map"))
        };
      });
    }

    l.fromSourceMap = function (e) {
      return s.fromSourceMap(e);
    }, l.prototype._version = 3, l.prototype.__generatedMappings = null, Object.defineProperty(l.prototype, "_generatedMappings", {
      get: function () {
        return this.__generatedMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__generatedMappings;
      }
    }), l.prototype.__originalMappings = null, Object.defineProperty(l.prototype, "_originalMappings", {
      get: function () {
        return this.__originalMappings || this._parseMappings(this._mappings, this.sourceRoot), this.__originalMappings;
      }
    }), l.prototype._charIsMappingSeparator = function (e, t) {
      var n = e.charAt(t);
      return ";" === n || "," === n;
    }, l.prototype._parseMappings = function (e, t) {
      throw new Error("Subclasses must implement _parseMappings");
    }, l.GENERATED_ORDER = 1, l.ORIGINAL_ORDER = 2, l.GREATEST_LOWER_BOUND = 1, l.LEAST_UPPER_BOUND = 2, l.prototype.eachMapping = function (e, t, n) {
      var u,
          o = t || null;

      switch (n || l.GENERATED_ORDER) {
        case l.GENERATED_ORDER:
          u = this._generatedMappings;
          break;

        case l.ORIGINAL_ORDER:
          u = this._originalMappings;
          break;

        default:
          throw new Error("Unknown order of iteration.");
      }

      var i = this.sourceRoot;
      u.map(function (e) {
        var t = null === e.source ? null : this._sources.at(e.source);
        return null != t && null != i && (t = r.join(i, t)), {
          source: t,
          generatedLine: e.generatedLine,
          generatedColumn: e.generatedColumn,
          originalLine: e.originalLine,
          originalColumn: e.originalColumn,
          name: null === e.name ? null : this._names.at(e.name)
        };
      }, this).forEach(e, o);
    }, l.prototype.allGeneratedPositionsFor = function (e) {
      var t = r.getArg(e, "line"),
          n = {
        source: r.getArg(e, "source"),
        originalLine: t,
        originalColumn: r.getArg(e, "column", 0)
      };
      if (null != this.sourceRoot && (n.source = r.relative(this.sourceRoot, n.source)), !this._sources.has(n.source)) return [];
      n.source = this._sources.indexOf(n.source);

      var o = [],
          i = this._findMapping(n, this._originalMappings, "originalLine", "originalColumn", r.compareByOriginalPositions, u.LEAST_UPPER_BOUND);

      if (i >= 0) {
        var a = this._originalMappings[i];
        if (void 0 === e.column) for (var l = a.originalLine; a && a.originalLine === l;) o.push({
          line: r.getArg(a, "generatedLine", null),
          column: r.getArg(a, "generatedColumn", null),
          lastColumn: r.getArg(a, "lastGeneratedColumn", null)
        }), a = this._originalMappings[++i];else for (var s = a.originalColumn; a && a.originalLine === t && a.originalColumn == s;) o.push({
          line: r.getArg(a, "generatedLine", null),
          column: r.getArg(a, "generatedColumn", null),
          lastColumn: r.getArg(a, "lastGeneratedColumn", null)
        }), a = this._originalMappings[++i];
      }

      return o;
    }, t.SourceMapConsumer = l, s.prototype = Object.create(l.prototype), s.prototype.consumer = l, s.fromSourceMap = function (e) {
      var t = Object.create(s.prototype),
          n = t._names = o.fromArray(e._names.toArray(), !0),
          u = t._sources = o.fromArray(e._sources.toArray(), !0);
      t.sourceRoot = e._sourceRoot, t.sourcesContent = e._generateSourcesContent(t._sources.toArray(), t.sourceRoot), t.file = e._file;

      for (var i = e._mappings.toArray().slice(), l = t.__generatedMappings = [], f = t.__originalMappings = [], p = 0, d = i.length; p < d; p++) {
        var h = i[p],
            m = new c();
        m.generatedLine = h.generatedLine, m.generatedColumn = h.generatedColumn, h.source && (m.source = u.indexOf(h.source), m.originalLine = h.originalLine, m.originalColumn = h.originalColumn, h.name && (m.name = n.indexOf(h.name)), f.push(m)), l.push(m);
      }

      return a(t.__originalMappings, r.compareByOriginalPositions), t;
    }, s.prototype._version = 3, Object.defineProperty(s.prototype, "sources", {
      get: function () {
        return this._sources.toArray().map(function (e) {
          return null != this.sourceRoot ? r.join(this.sourceRoot, e) : e;
        }, this);
      }
    }), s.prototype._parseMappings = function (e, t) {
      for (var n, u, o, l, s, f = 1, p = 0, d = 0, h = 0, m = 0, g = 0, v = e.length, y = 0, D = {}, b = {}, A = [], C = []; y < v;) if (";" === e.charAt(y)) f++, y++, p = 0;else if ("," === e.charAt(y)) y++;else {
        for ((n = new c()).generatedLine = f, l = y; l < v && !this._charIsMappingSeparator(e, l); l++);

        if (o = D[u = e.slice(y, l)]) y += u.length;else {
          for (o = []; y < l;) i.decode(e, y, b), s = b.value, y = b.rest, o.push(s);

          if (2 === o.length) throw new Error("Found a source, but no line and column");
          if (3 === o.length) throw new Error("Found a source and line, but no column");
          D[u] = o;
        }
        n.generatedColumn = p + o[0], p = n.generatedColumn, o.length > 1 && (n.source = m + o[1], m += o[1], n.originalLine = d + o[2], d = n.originalLine, n.originalLine += 1, n.originalColumn = h + o[3], h = n.originalColumn, o.length > 4 && (n.name = g + o[4], g += o[4])), C.push(n), "number" == typeof n.originalLine && A.push(n);
      }

      a(C, r.compareByGeneratedPositionsDeflated), this.__generatedMappings = C, a(A, r.compareByOriginalPositions), this.__originalMappings = A;
    }, s.prototype._findMapping = function (e, t, n, r, o, i) {
      if (e[n] <= 0) throw new TypeError("Line must be greater than or equal to 1, got " + e[n]);
      if (e[r] < 0) throw new TypeError("Column must be greater than or equal to 0, got " + e[r]);
      return u.search(e, t, o, i);
    }, s.prototype.computeColumnSpans = function () {
      for (var e = 0; e < this._generatedMappings.length; ++e) {
        var t = this._generatedMappings[e];

        if (e + 1 < this._generatedMappings.length) {
          var n = this._generatedMappings[e + 1];

          if (t.generatedLine === n.generatedLine) {
            t.lastGeneratedColumn = n.generatedColumn - 1;
            continue;
          }
        }

        t.lastGeneratedColumn = 1 / 0;
      }
    }, s.prototype.originalPositionFor = function (e) {
      var t = {
        generatedLine: r.getArg(e, "line"),
        generatedColumn: r.getArg(e, "column")
      },
          n = this._findMapping(t, this._generatedMappings, "generatedLine", "generatedColumn", r.compareByGeneratedPositionsDeflated, r.getArg(e, "bias", l.GREATEST_LOWER_BOUND));

      if (n >= 0) {
        var u = this._generatedMappings[n];

        if (u.generatedLine === t.generatedLine) {
          var o = r.getArg(u, "source", null);
          null !== o && (o = this._sources.at(o), null != this.sourceRoot && (o = r.join(this.sourceRoot, o)));
          var i = r.getArg(u, "name", null);
          return null !== i && (i = this._names.at(i)), {
            source: o,
            line: r.getArg(u, "originalLine", null),
            column: r.getArg(u, "originalColumn", null),
            name: i
          };
        }
      }

      return {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }, s.prototype.hasContentsOfAllSources = function () {
      return !!this.sourcesContent && this.sourcesContent.length >= this._sources.size() && !this.sourcesContent.some(function (e) {
        return null == e;
      });
    }, s.prototype.sourceContentFor = function (e, t) {
      if (!this.sourcesContent) return null;
      if (null != this.sourceRoot && (e = r.relative(this.sourceRoot, e)), this._sources.has(e)) return this.sourcesContent[this._sources.indexOf(e)];
      var n;

      if (null != this.sourceRoot && (n = r.urlParse(this.sourceRoot))) {
        var u = e.replace(/^file:\/\//, "");
        if ("file" == n.scheme && this._sources.has(u)) return this.sourcesContent[this._sources.indexOf(u)];
        if ((!n.path || "/" == n.path) && this._sources.has("/" + e)) return this.sourcesContent[this._sources.indexOf("/" + e)];
      }

      if (t) return null;
      throw new Error('"' + e + '" is not in the SourceMap.');
    }, s.prototype.generatedPositionFor = function (e) {
      var t = r.getArg(e, "source");
      if (null != this.sourceRoot && (t = r.relative(this.sourceRoot, t)), !this._sources.has(t)) return {
        line: null,
        column: null,
        lastColumn: null
      };

      var n = {
        source: t = this._sources.indexOf(t),
        originalLine: r.getArg(e, "line"),
        originalColumn: r.getArg(e, "column")
      },
          u = this._findMapping(n, this._originalMappings, "originalLine", "originalColumn", r.compareByOriginalPositions, r.getArg(e, "bias", l.GREATEST_LOWER_BOUND));

      if (u >= 0) {
        var o = this._originalMappings[u];
        if (o.source === n.source) return {
          line: r.getArg(o, "generatedLine", null),
          column: r.getArg(o, "generatedColumn", null),
          lastColumn: r.getArg(o, "lastGeneratedColumn", null)
        };
      }

      return {
        line: null,
        column: null,
        lastColumn: null
      };
    }, t.BasicSourceMapConsumer = s, f.prototype = Object.create(l.prototype), f.prototype.constructor = l, f.prototype._version = 3, Object.defineProperty(f.prototype, "sources", {
      get: function () {
        for (var e = [], t = 0; t < this._sections.length; t++) for (var n = 0; n < this._sections[t].consumer.sources.length; n++) e.push(this._sections[t].consumer.sources[n]);

        return e;
      }
    }), f.prototype.originalPositionFor = function (e) {
      var t = {
        generatedLine: r.getArg(e, "line"),
        generatedColumn: r.getArg(e, "column")
      },
          n = u.search(t, this._sections, function (e, t) {
        var n = e.generatedLine - t.generatedOffset.generatedLine;
        return n || e.generatedColumn - t.generatedOffset.generatedColumn;
      }),
          o = this._sections[n];
      return o ? o.consumer.originalPositionFor({
        line: t.generatedLine - (o.generatedOffset.generatedLine - 1),
        column: t.generatedColumn - (o.generatedOffset.generatedLine === t.generatedLine ? o.generatedOffset.generatedColumn - 1 : 0),
        bias: e.bias
      }) : {
        source: null,
        line: null,
        column: null,
        name: null
      };
    }, f.prototype.hasContentsOfAllSources = function () {
      return this._sections.every(function (e) {
        return e.consumer.hasContentsOfAllSources();
      });
    }, f.prototype.sourceContentFor = function (e, t) {
      for (var n = 0; n < this._sections.length; n++) {
        var r = this._sections[n].consumer.sourceContentFor(e, !0);

        if (r) return r;
      }

      if (t) return null;
      throw new Error('"' + e + '" is not in the SourceMap.');
    }, f.prototype.generatedPositionFor = function (e) {
      for (var t = 0; t < this._sections.length; t++) {
        var n = this._sections[t];

        if (-1 !== n.consumer.sources.indexOf(r.getArg(e, "source"))) {
          var u = n.consumer.generatedPositionFor(e);
          if (u) return {
            line: u.line + (n.generatedOffset.generatedLine - 1),
            column: u.column + (n.generatedOffset.generatedLine === u.line ? n.generatedOffset.generatedColumn - 1 : 0)
          };
        }
      }

      return {
        line: null,
        column: null
      };
    }, f.prototype._parseMappings = function (e, t) {
      this.__generatedMappings = [], this.__originalMappings = [];

      for (var n = 0; n < this._sections.length; n++) for (var u = this._sections[n], o = u.consumer._generatedMappings, i = 0; i < o.length; i++) {
        var l = o[i],
            s = u.consumer._sources.at(l.source);

        null !== u.consumer.sourceRoot && (s = r.join(u.consumer.sourceRoot, s)), this._sources.add(s), s = this._sources.indexOf(s);

        var c = u.consumer._names.at(l.name);

        this._names.add(c), c = this._names.indexOf(c);
        var f = {
          source: s,
          generatedLine: l.generatedLine + (u.generatedOffset.generatedLine - 1),
          generatedColumn: l.generatedColumn + (u.generatedOffset.generatedLine === l.generatedLine ? u.generatedOffset.generatedColumn - 1 : 0),
          originalLine: l.originalLine,
          originalColumn: l.originalColumn,
          name: c
        };
        this.__generatedMappings.push(f), "number" == typeof f.originalLine && this.__originalMappings.push(f);
      }

      a(this.__generatedMappings, r.compareByGeneratedPositionsDeflated), a(this.__originalMappings, r.compareByOriginalPositions);
    }, t.IndexedSourceMapConsumer = f;
  }, function (e, t) {
    t.GREATEST_LOWER_BOUND = 1, t.LEAST_UPPER_BOUND = 2, t.search = function (e, n, r, u) {
      if (0 === n.length) return -1;

      var o = function e(n, r, u, o, i, a) {
        var l = Math.floor((r - n) / 2) + n,
            s = i(u, o[l], !0);
        return 0 === s ? l : s > 0 ? r - l > 1 ? e(l, r, u, o, i, a) : a == t.LEAST_UPPER_BOUND ? r < o.length ? r : -1 : l : l - n > 1 ? e(n, l, u, o, i, a) : a == t.LEAST_UPPER_BOUND ? l : n < 0 ? -1 : n;
      }(-1, n.length, e, n, r, u || t.GREATEST_LOWER_BOUND);

      if (o < 0) return -1;

      for (; o - 1 >= 0 && 0 === r(n[o], n[o - 1], !0);) --o;

      return o;
    };
  }, function (e, t) {
    function n(e, t, n) {
      var r = e[t];
      e[t] = e[n], e[n] = r;
    }

    function r(e, t, u, o) {
      if (u < o) {
        var i = u - 1;
        n(e, (c = u, f = o, Math.round(c + Math.random() * (f - c))), o);

        for (var a = e[o], l = u; l < o; l++) t(e[l], a) <= 0 && n(e, i += 1, l);

        n(e, i + 1, l);
        var s = i + 1;
        r(e, t, u, s - 1), r(e, t, s + 1, o);
      }

      var c, f;
    }

    t.quickSort = function (e, t) {
      r(e, t, 0, e.length - 1);
    };
  }, function (e, t, n) {
    var r = n(4).SourceMapGenerator,
        u = n(1),
        o = /(\r?\n)/,
        i = "$$$isSourceNode$$$";

    function a(e, t, n, r, u) {
      this.children = [], this.sourceContents = {}, this.line = null == e ? null : e, this.column = null == t ? null : t, this.source = null == n ? null : n, this.name = null == u ? null : u, this[i] = !0, null != r && this.add(r);
    }

    a.fromStringWithSourceMap = function (e, t, n) {
      var r = new a(),
          i = e.split(o),
          l = function () {
        return i.shift() + (i.shift() || "");
      },
          s = 1,
          c = 0,
          f = null;

      return t.eachMapping(function (e) {
        if (null !== f) {
          if (!(s < e.generatedLine)) {
            var t = (n = i[0]).substr(0, e.generatedColumn - c);
            return i[0] = n.substr(e.generatedColumn - c), c = e.generatedColumn, p(f, t), void (f = e);
          }

          p(f, l()), s++, c = 0;
        }

        for (; s < e.generatedLine;) r.add(l()), s++;

        if (c < e.generatedColumn) {
          var n = i[0];
          r.add(n.substr(0, e.generatedColumn)), i[0] = n.substr(e.generatedColumn), c = e.generatedColumn;
        }

        f = e;
      }, this), i.length > 0 && (f && p(f, l()), r.add(i.join(""))), t.sources.forEach(function (e) {
        var o = t.sourceContentFor(e);
        null != o && (null != n && (e = u.join(n, e)), r.setSourceContent(e, o));
      }), r;

      function p(e, t) {
        if (null === e || void 0 === e.source) r.add(t);else {
          var o = n ? u.join(n, e.source) : e.source;
          r.add(new a(e.originalLine, e.originalColumn, o, t, e.name));
        }
      }
    }, a.prototype.add = function (e) {
      if (Array.isArray(e)) e.forEach(function (e) {
        this.add(e);
      }, this);else {
        if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
        e && this.children.push(e);
      }
      return this;
    }, a.prototype.prepend = function (e) {
      if (Array.isArray(e)) for (var t = e.length - 1; t >= 0; t--) this.prepend(e[t]);else {
        if (!e[i] && "string" != typeof e) throw new TypeError("Expected a SourceNode, string, or an array of SourceNodes and strings. Got " + e);
        this.children.unshift(e);
      }
      return this;
    }, a.prototype.walk = function (e) {
      for (var t, n = 0, r = this.children.length; n < r; n++) (t = this.children[n])[i] ? t.walk(e) : "" !== t && e(t, {
        source: this.source,
        line: this.line,
        column: this.column,
        name: this.name
      });
    }, a.prototype.join = function (e) {
      var t,
          n,
          r = this.children.length;

      if (r > 0) {
        for (t = [], n = 0; n < r - 1; n++) t.push(this.children[n]), t.push(e);

        t.push(this.children[n]), this.children = t;
      }

      return this;
    }, a.prototype.replaceRight = function (e, t) {
      var n = this.children[this.children.length - 1];
      return n[i] ? n.replaceRight(e, t) : "string" == typeof n ? this.children[this.children.length - 1] = n.replace(e, t) : this.children.push("".replace(e, t)), this;
    }, a.prototype.setSourceContent = function (e, t) {
      this.sourceContents[u.toSetString(e)] = t;
    }, a.prototype.walkSourceContents = function (e) {
      for (var t = 0, n = this.children.length; t < n; t++) this.children[t][i] && this.children[t].walkSourceContents(e);

      var r = Object.keys(this.sourceContents);

      for (t = 0, n = r.length; t < n; t++) e(u.fromSetString(r[t]), this.sourceContents[r[t]]);
    }, a.prototype.toString = function () {
      var e = "";
      return this.walk(function (t) {
        e += t;
      }), e;
    }, a.prototype.toStringWithSourceMap = function (e) {
      var t = {
        code: "",
        line: 1,
        column: 0
      },
          n = new r(e),
          u = !1,
          o = null,
          i = null,
          a = null,
          l = null;
      return this.walk(function (e, r) {
        t.code += e, null !== r.source && null !== r.line && null !== r.column ? (o === r.source && i === r.line && a === r.column && l === r.name || n.addMapping({
          source: r.source,
          original: {
            line: r.line,
            column: r.column
          },
          generated: {
            line: t.line,
            column: t.column
          },
          name: r.name
        }), o = r.source, i = r.line, a = r.column, l = r.name, u = !0) : u && (n.addMapping({
          generated: {
            line: t.line,
            column: t.column
          }
        }), o = null, u = !1);

        for (var s = 0, c = e.length; s < c; s++) 10 === e.charCodeAt(s) ? (t.line++, t.column = 0, s + 1 === c ? (o = null, u = !1) : u && n.addMapping({
          source: r.source,
          original: {
            line: r.line,
            column: r.column
          },
          generated: {
            line: t.line,
            column: t.column
          },
          name: r.name
        })) : t.column++;
      }), this.walkSourceContents(function (e, t) {
        n.setSourceContent(e, t);
      }), {
        code: t.code,
        map: n
      };
    }, t.SourceNode = a;
  }, function (e, t, n) {
    "use strict";

    n.r(t);
    var r = null;

    function u(e, t) {
      null === r && (r = function (e, t) {
        if (t.error) {
          var n = t.error;
          n instanceof Error ? e(n) : e(new Error(n));
        }
      }.bind(void 0, t), e.addEventListener("error", r));
    }

    var o = null;

    function i(e, t) {
      null === o && (o = function (e, t) {
        if (null == t || null == t.reason) return e(new Error("Unknown"));
        var n = t.reason;
        return n instanceof Error ? e(n) : e(new Error(n));
      }.bind(void 0, t), e.addEventListener("unhandledrejection", o));
    }

    var a = !1,
        l = 10,
        s = 50;

    var c = [],
        f = function () {
      "undefined" != typeof console && (console.reactStack = function (e) {
        return c.push(e);
      }, console.reactStackEnd = function (e) {
        return c.pop();
      });
    },
        p = function () {
      "undefined" != typeof console && (console.reactStack = void 0, console.reactStackEnd = void 0);
    },
        d = function (e, t) {
      if ("undefined" != typeof console) {
        var n = console[e];
        "function" == typeof n && (console[e] = function () {
          try {
            var e = arguments[0];
            "string" == typeof e && c.length > 0 && t(e, c[c.length - 1]);
          } catch (e) {
            setTimeout(function () {
              throw e;
            });
          }

          return n.apply(this, arguments);
        });
      }
    };

    function h(e, t) {
      return (h = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    function m(e, t, n) {
      return (m = function () {
        if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
        if (Reflect.construct.sham) return !1;
        if ("function" == typeof Proxy) return !0;

        try {
          return Date.prototype.toString.call(Reflect.construct(Date, [], function () {})), !0;
        } catch (e) {
          return !1;
        }
      }() ? Reflect.construct : function (e, t, n) {
        var r = [null];
        r.push.apply(r, t);
        var u = new (Function.bind.apply(e, r))();
        return n && h(u, n.prototype), u;
      }).apply(null, arguments);
    }

    function g(e) {
      return function (e) {
        if (Array.isArray(e)) {
          for (var t = 0, n = new Array(e.length); t < e.length; t++) n[t] = e[t];

          return n;
        }
      }(e) || function (e) {
        if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e);
      }(e) || function () {
        throw new TypeError("Invalid attempt to spread non-iterable instance");
      }();
    }

    function v(e, t) {
      for (var n = 0; n < t.length; n++) {
        var r = t[n];
        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r);
      }
    }

    function y(e, t, n) {
      return t && v(e.prototype, t), n && v(e, n), e;
    }

    function D(e, t) {
      if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }

    var b = function e(t, n) {
      var r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
      D(this, e), this.lineNumber = t, this.content = n, this.highlight = r;
    },
        A = function () {
      function e() {
        var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
            n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
            r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
            u = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
            o = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : null,
            i = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : null,
            a = arguments.length > 6 && void 0 !== arguments[6] ? arguments[6] : null,
            l = arguments.length > 7 && void 0 !== arguments[7] ? arguments[7] : null,
            s = arguments.length > 8 && void 0 !== arguments[8] ? arguments[8] : null,
            c = arguments.length > 9 && void 0 !== arguments[9] ? arguments[9] : null;
        D(this, e), t && 0 === t.indexOf("Object.") && (t = t.slice("Object.".length)), "friendlySyntaxErrorLabel" !== t && "exports.__esModule" !== t && "<anonymous>" !== t && t || (t = null), this.functionName = t, this.fileName = n, this.lineNumber = r, this.columnNumber = u, this._originalFunctionName = i, this._originalFileName = a, this._originalLineNumber = l, this._originalColumnNumber = s, this._scriptCode = o, this._originalScriptCode = c;
      }

      return y(e, [{
        key: "getFunctionName",
        value: function () {
          return this.functionName || "(anonymous function)";
        }
      }, {
        key: "getSource",
        value: function () {
          var e = "";
          return null != this.fileName && (e += this.fileName + ":"), null != this.lineNumber && (e += this.lineNumber + ":"), null != this.columnNumber && (e += this.columnNumber + ":"), e.slice(0, -1);
        }
      }, {
        key: "toString",
        value: function () {
          var e = this.getFunctionName(),
              t = this.getSource();
          return "".concat(e).concat(t ? " (".concat(t, ")") : "");
        }
      }]), e;
    }(),
        C = /\(?(.+?)(?::(\d+))?(?::(\d+))?\)?$/;

    function E(e) {
      return C.exec(e).slice(1).map(function (e) {
        var t = Number(e);
        return isNaN(t) ? e : t;
      });
    }

    var F = /^\s*(at|in)\s.+(:\d+)/,
        w = /(^|@)\S+:\d+|.+line\s+\d+\s+>\s+(eval|Function).+/;

    function x(e) {
      return e.filter(function (e) {
        return F.test(e) || w.test(e);
      }).map(function (e) {
        if (w.test(e)) {
          var t = !1;
          / > (eval|Function)/.test(e) && (e = e.replace(/ line (\d+)(?: > eval line \d+)* > (eval|Function):\d+:\d+/g, ":$1"), t = !0);
          var n = e.split(/[@]/g),
              r = n.pop();
          return m(A, [n.join("@") || (t ? "eval" : null)].concat(g(E(r))));
        }

        -1 !== e.indexOf("(eval ") && (e = e.replace(/(\(eval at [^()]*)|(\),.*$)/g, "")), -1 !== e.indexOf("(at ") && (e = e.replace(/\(at /, "("));
        var u = e.trim().split(/\s+/g).slice(1),
            o = u.pop();
        return m(A, [u.join(" ") || null].concat(g(E(o))));
      });
    }

    function B(e) {
      if (null == e) throw new Error("You cannot pass a null object.");
      if ("string" == typeof e) return x(e.split("\n"));
      if (Array.isArray(e)) return x(e);
      if ("string" == typeof e.stack) return x(e.stack.split("\n"));
      throw new Error("The error you provided does not contain a stack trace.");
    }

    var k = n(0),
        _ = n.n(k);

    function S(e, t, n, r, u, o, i) {
      try {
        var a = e[o](i),
            l = a.value;
      } catch (e) {
        return void n(e);
      }

      a.done ? t(l) : Promise.resolve(l).then(r, u);
    }

    function T(e) {
      return function () {
        var t = this,
            n = arguments;
        return new Promise(function (r, u) {
          var o = e.apply(t, n);

          function i(e) {
            S(o, r, u, i, a, "next", e);
          }

          function a(e) {
            S(o, r, u, i, a, "throw", e);
          }

          i(void 0);
        });
      };
    }

    var O = n(3),
        P = function () {
      function e(t) {
        D(this, e), this.__source_map = t;
      }

      return y(e, [{
        key: "getOriginalPosition",
        value: function (e, t) {
          var n = this.__source_map.originalPositionFor({
            line: e,
            column: t
          });

          return {
            line: n.line,
            column: n.column,
            source: n.source
          };
        }
      }, {
        key: "getGeneratedPosition",
        value: function (e, t, n) {
          var r = this.__source_map.generatedPositionFor({
            source: e,
            line: t,
            column: n
          });

          return {
            line: r.line,
            column: r.column
          };
        }
      }, {
        key: "getSource",
        value: function (e) {
          return this.__source_map.sourceContentFor(e);
        }
      }, {
        key: "getSources",
        value: function () {
          return this.__source_map.sources;
        }
      }]), e;
    }();

    function L(e, t) {
      for (var n = /\/\/[#@] ?sourceMappingURL=([^\s'"]+)\s*$/gm, r = null;;) {
        var u = n.exec(t);
        if (null == u) break;
        r = u;
      }

      return r && r[1] ? Promise.resolve(r[1].toString()) : Promise.reject("Cannot find a source map directive for ".concat(e, "."));
    }

    function N(e, t) {
      return R.apply(this, arguments);
    }

    function R() {
      return (R = T(_.a.mark(function e(t, n) {
        var r, u, o, i, a, l;
        return _.a.wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return e.next = 2, L(t, n);

            case 2:
              if (0 !== (r = e.sent).indexOf("data:")) {
                e.next = 14;
                break;
              }

              if (u = /^data:application\/json;([\w=:"-]+;)*base64,/, o = r.match(u)) {
                e.next = 8;
                break;
              }

              throw new Error("Sorry, non-base64 inline source-map encoding is not supported.");

            case 8:
              return r = r.substring(o[0].length), r = window.atob(r), r = JSON.parse(r), e.abrupt("return", new P(new O.SourceMapConsumer(r)));

            case 14:
              return i = t.lastIndexOf("/"), a = t.substring(0, i + 1) + r, e.next = 18, fetch(a).then(function (e) {
                return e.json();
              });

            case 18:
              return l = e.sent, e.abrupt("return", new P(new O.SourceMapConsumer(l)));

            case 20:
            case "end":
              return e.stop();
          }
        }, e);
      }))).apply(this, arguments);
    }

    function M(e, t, n) {
      "string" == typeof n && (n = n.split("\n"));

      for (var r = [], u = Math.max(0, e - 1 - t); u <= Math.min(n.length - 1, e - 1 + t); ++u) r.push(new b(u + 1, n[u], u === e - 1));

      return r;
    }

    var j = n(7);

    function I(e) {
      return q.apply(this, arguments);
    }

    function q() {
      return (q = T(_.a.mark(function e(t) {
        var n,
            r,
            u,
            o = arguments;
        return _.a.wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              return n = o.length > 1 && void 0 !== o[1] ? o[1] : 3, r = {}, u = [], t.forEach(function (e) {
                var t = e.fileName;
                null != t && -1 === u.indexOf(t) && u.push(t);
              }), e.next = 6, Object(j.settle)(u.map(function () {
                var e = T(_.a.mark(function e(t) {
                  var n, u, o;
                  return _.a.wrap(function (e) {
                    for (;;) switch (e.prev = e.next) {
                      case 0:
                        return n = 0 === t.indexOf("webpack-internal:") ? "/__get-internal-source?fileName=".concat(encodeURIComponent(t)) : t, e.next = 3, fetch(n).then(function (e) {
                          return e.text();
                        });

                      case 3:
                        return u = e.sent, e.next = 6, N(t, u);

                      case 6:
                        o = e.sent, r[t] = {
                          fileSource: u,
                          map: o
                        };

                      case 8:
                      case "end":
                        return e.stop();
                    }
                  }, e);
                }));
                return function (t) {
                  return e.apply(this, arguments);
                };
              }()));

            case 6:
              return e.abrupt("return", t.map(function (e) {
                var t = e.functionName,
                    u = e.fileName,
                    o = e.lineNumber,
                    i = e.columnNumber,
                    a = r[u] || {},
                    l = a.map,
                    s = a.fileSource;
                if (null == l || null == o) return e;
                var c = l.getOriginalPosition(o, i),
                    f = c.source,
                    p = c.line,
                    d = c.column,
                    h = null == f ? [] : l.getSource(f);
                return new A(t, u, o, i, M(o, n, s), t, f, p, d, M(p, n, h));
              }));

            case 7:
            case "end":
              return e.stop();
          }
        }, e);
      }))).apply(this, arguments);
    }

    var U = n(2),
        z = n.n(U);

    function H(e, t) {
      var n = -1,
          r = -1;

      do {
        ++n, r = t.indexOf(e, r + 1);
      } while (-1 !== r);

      return n;
    }

    function V(e, t) {
      return W.apply(this, arguments);
    }

    function W() {
      return (W = T(_.a.mark(function e(t, n) {
        var r,
            u,
            o,
            i,
            a = arguments;
        return _.a.wrap(function (e) {
          for (;;) switch (e.prev = e.next) {
            case 0:
              if (r = a.length > 2 && void 0 !== a[2] ? a[2] : 3, u = "object" == typeof t ? t.contents : null, o = "object" == typeof t ? t.uri : t, null != u) {
                e.next = 7;
                break;
              }

              return e.next = 6, fetch(o).then(function (e) {
                return e.text();
              });

            case 6:
              u = e.sent;

            case 7:
              return e.next = 9, N(o, u);

            case 9:
              return i = e.sent, e.abrupt("return", n.map(function (e) {
                var t = e.functionName,
                    n = e.lineNumber,
                    a = e.columnNumber;
                if (null != e._originalLineNumber) return e;
                var l = e.fileName;
                if (l && (l = z.a.normalize(l.replace(/[\\]+/g, "/"))), null == l) return e;
                var s = l,
                    c = i.getSources().map(function (e) {
                  return e.replace(/[\\]+/g, "/");
                }).filter(function (e) {
                  var t = (e = z.a.normalize(e)).lastIndexOf(s);
                  return -1 !== t && t === e.length - s.length;
                }).map(function (e) {
                  return {
                    token: e,
                    seps: H(z.a.sep, z.a.normalize(e)),
                    penalties: H("node_modules", e) + H("~", e)
                  };
                }).sort(function (e, t) {
                  var n = Math.sign(e.seps - t.seps);
                  return 0 !== n ? n : Math.sign(e.penalties - t.penalties);
                });
                if (c.length < 1 || null == n) return new A(null, null, null, null, null, t, s, n, a, null);
                var f = c[0].token,
                    p = i.getGeneratedPosition(f, n, a),
                    d = p.line,
                    h = p.column,
                    m = i.getSource(f);
                return new A(t, o, d, h || null, M(d, r, u || []), t, s, n, a, M(n, r, m));
              }));

            case 11:
            case "end":
              return e.stop();
          }
        }, e);
      }))).apply(this, arguments);
    }

    var G = function (e) {
      arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
      var t = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 3,
          n = B(e);
      return (e.__unmap_source ? V(e.__unmap_source, n, t) : I(n, t)).then(function (e) {
        return 0 === e.map(function (e) {
          return e._originalFileName;
        }).filter(function (e) {
          return null != e && -1 === e.indexOf("node_modules");
        }).length ? null : e.filter(function (e) {
          var t = e.functionName;
          return null == t || -1 === t.indexOf("__stack_frame_overlay_proxy_console__");
        });
      });
    },
        $ = function (e) {
      return function (t) {
        var n = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
        G(t, n, 3).then(function (r) {
          null != r && e({
            error: t,
            unhandledRejection: n,
            contextSize: 3,
            stackFrames: r
          });
        }).catch(function (e) {
          console.log("Could not get the stack frames of error:", e);
        });
      };
    };

    function K(e) {
      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "/static/js/bundle.js",
          n = $(e);
      return u(window, function (e) {
        return n(e, !1);
      }), i(window, function (e) {
        return n(e, !0);
      }), function () {
        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : s;
        if (!a) try {
          l = Error.stackTraceLimit, Error.stackTraceLimit = e, a = !0;
        } catch (e) {}
      }(), f(), d("error", function (e, r) {
        var u = function (e, t) {
          for (var n, r, u = function (e) {
            return e.split("\n").filter(function (e) {
              return !e.match(/^\s*in/);
            }).join("\n");
          }(e), o = "", i = 0; i < t.length; ++i) {
            var a = t[i],
                l = a.fileName,
                s = a.lineNumber;

            if (null != l && null != s && !(l === n && "number" == typeof s && "number" == typeof r && Math.abs(s - r) < 3)) {
              n = l, r = s;
              var c = t[i].name;
              o += "in ".concat(c = c || "(anonymous function)", " (at ").concat(l, ":").concat(s, ")\n");
            }
          }

          return {
            message: u,
            stack: o
          };
        }(e, r);

        n({
          message: u.message,
          stack: u.stack,
          __unmap_source: t
        }, !1);
      }), function () {
        var e;
        !function () {
          if (a) try {
            Error.stackTraceLimit = l, a = !1;
          } catch (e) {}
        }(), e = window, null !== o && (e.removeEventListener("unhandledrejection", o), o = null), function (e) {
          null !== r && (e.removeEventListener("error", r), r = null);
        }(window), p();
      };
    }

    var Q = {
      position: "fixed",
      top: "0",
      left: "0",
      width: "100%",
      height: "100%",
      border: "none",
      "z-index": 2147483647
    };
    var Y = n(8),
        X = n.n(Y);
    n.d(t, "setEditorHandler", function () {
      return ie;
    }), n.d(t, "reportBuildError", function () {
      return ae;
    }), n.d(t, "reportRuntimeError", function () {
      return le;
    }), n.d(t, "dismissBuildError", function () {
      return se;
    }), n.d(t, "startReportingRuntimeErrors", function () {
      return ce;
    }), n.d(t, "dismissRuntimeErrors", function () {
      return pe;
    }), n.d(t, "stopReportingRuntimeErrors", function () {
      return de;
    });
    var J = null,
        Z = !1,
        ee = !1,
        te = null,
        ne = null,
        re = [],
        ue = null,
        oe = null;

    function ie(e) {
      te = e, J && he();
    }

    function ae(e) {
      ne = e, he();
    }

    function le(e) {
      var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
      ue = t, $(fe(t))(e);
    }

    function se() {
      ne = null, he();
    }

    function ce(e) {
      if (null !== oe) throw new Error("Already listening");
      e.launchEditorEndpoint && console.warn("Warning: `startReportingRuntimeErrors` doesn’t accept `launchEditorEndpoint` argument anymore. Use `listenToOpenInEditor` instead with your own implementation to open errors in editor "), ue = e, oe = K(fe(e), e.filename);
    }

    var fe = function (e) {
      return function (t) {
        try {
          "function" == typeof e.onError && e.onError.call(null);
        } finally {
          if (re.some(function (e) {
            return e.error === t.error;
          })) return;
          re = re.concat([t]), he();
        }
      };
    };

    function pe() {
      re = [], he();
    }

    function de() {
      if (null === oe) throw new Error("Not currently listening");
      ue = null;

      try {
        oe();
      } finally {
        oe = null;
      }
    }

    function he() {
      if (!Z) if (ee) me();else {
        Z = !0;
        var e = window.document.createElement("iframe");
        !function (e, t) {
          for (var n in e.setAttribute("style", ""), t) t.hasOwnProperty(n) && (e.style[n] = t[n]);
        }(e, Q), e.onload = function () {
          var t = e.contentDocument;

          if (null != t && null != t.body) {
            J = e;
            var n = e.contentWindow.document.createElement("script");
            n.type = "text/javascript", n.innerHTML = X.a, t.body.appendChild(n);
          }
        }, window.document.body.appendChild(e);
      }
    }

    function me() {
      if (!ue) throw new Error("Expected options to be injected.");
      if (!J) throw new Error("Iframe has not been created yet.");
      J.contentWindow.updateContent({
        currentBuildError: ne,
        currentRuntimeErrorRecords: re,
        dismissRuntimeErrors: pe,
        editorHandler: te
      }) || (window.document.body.removeChild(J), J = null, ee = !1);
    }

    window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ = window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__ || {}, window.__REACT_ERROR_OVERLAY_GLOBAL_HOOK__.iframeReady = function () {
      ee = !0, Z = !1, me();
    },  false && false;
  }]);
});
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/react-mathjax/lib/Node.js":
/*!************************************************!*\
  !*** ./node_modules/react-mathjax/lib/Node.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var React = _interopRequireWildcard(_react);

var _context = __webpack_require__(/*! ./context */ "./node_modules/react-mathjax/lib/context.js");

var _context2 = _interopRequireDefault(_context);

var _process = __webpack_require__(/*! ./process */ "./node_modules/react-mathjax/lib/process.js");

var _process2 = _interopRequireDefault(_process);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

function _objectWithoutProperties(obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* global document */


var NodeWithMathJax = function (_React$Component) {
  _inherits(NodeWithMathJax, _React$Component);

  function NodeWithMathJax() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, NodeWithMathJax);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NodeWithMathJax.__proto__ || Object.getPrototypeOf(NodeWithMathJax)).call.apply(_ref, [this].concat(args))), _this), _this.container = React.createRef(), _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(NodeWithMathJax, [{
    key: 'componentDidMount',

    /*
     * Render the math once the node is mounted
     */
    value: function componentDidMount() {
      this.typeset();
    }
    /*
     * Update the jax, force update if the display mode changed.
     */

  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var forceUpdate = prevProps.inline != this.props.inline;
      this.typeset(forceUpdate);
    }
    /*
     * Clear the math when unmounting the node
     */

  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.clear();
    }
  }, {
    key: 'clear',

    /*
     * Clear the jax
     */
    value: function clear() {
      var MathJax = this.props.MathJax;

      if (!this.script || !MathJax) {
        return;
      }

      var jax = MathJax.Hub.getJaxFor(this.script);

      if (jax) {
        jax.Remove();
      }
    }
    /*
     * Update math in the node.
     */

  }, {
    key: 'typeset',
    value: function typeset(forceUpdate) {
      var _this2 = this;

      var _props = this.props,
          MathJax = _props.MathJax,
          formula = _props.formula,
          onRender = _props.onRender;

      if (!MathJax) {
        return;
      }

      if (forceUpdate) {
        this.clear();
      }

      if (!forceUpdate && this.script) {
        MathJax.Hub.Queue(function () {
          var jax = MathJax.Hub.getJaxFor(_this2.script);
          if (jax) jax.Text(formula, onRender);else {
            var script = _this2.setScriptText(formula);

            (0, _process2.default)(MathJax, script, onRender);
          }
        });
      } else {
        var script = this.setScriptText(formula);
        (0, _process2.default)(MathJax, script, onRender);
      }
    }
    /*
     * Create a script.
     */

  }, {
    key: 'setScriptText',
    value: function setScriptText(text) {
      var inline = this.props.inline;

      if (!this.script) {
        this.script = document.createElement('script');
        this.script.type = 'math/tex; ' + (inline ? '' : 'mode=display');
        this.container.current.appendChild(this.script);
      }

      if ('text' in this.script) {
        // IE8, etc
        this.script.text = text;
      } else {
        this.script.textContent = text;
      }

      return this.script;
    }
  }, {
    key: 'render',
    value: function render() {
      // eslint-disable-next-line no-unused-vars
      var _props2 = this.props,
          MathJax = _props2.MathJax,
          formula = _props2.formula,
          inline = _props2.inline,
          onRender = _props2.onRender,
          rest = _objectWithoutProperties(_props2, ['MathJax', 'formula', 'inline', 'onRender']);

      if (this.props.inline) {
        return React.createElement('span', _extends({
          ref: this.container
        }, rest));
      }

      return React.createElement('div', _extends({
        ref: this.container
      }, rest));
    }
  }]);

  return NodeWithMathJax;
}(React.Component);

NodeWithMathJax.defaultProps = {
  inline: false,
  onRender: function onRender() {}
};

var MathJaxNode = function (_React$PureComponent) {
  _inherits(MathJaxNode, _React$PureComponent);

  function MathJaxNode() {
    _classCallCheck(this, MathJaxNode);

    return _possibleConstructorReturn(this, (MathJaxNode.__proto__ || Object.getPrototypeOf(MathJaxNode)).apply(this, arguments));
  }

  _createClass(MathJaxNode, [{
    key: 'render',
    value: function render() {
      var _this4 = this;

      return React.createElement(_context2.default.Consumer, null, function (_ref2) {
        var MathJax = _ref2.MathJax,
            registerNode = _ref2.registerNode;
        registerNode();

        if (!MathJax) {
          return null;
        }

        return React.createElement(NodeWithMathJax, _extends({}, _this4.props, {
          MathJax: MathJax
        }));
      });
    }
  }]);

  return MathJaxNode;
}(React.PureComponent);

exports.default = MathJaxNode;

/***/ }),

/***/ "./node_modules/react-mathjax/lib/Provider.js":
/*!****************************************************!*\
  !*** ./node_modules/react-mathjax/lib/Provider.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var React = _interopRequireWildcard(_react);

var _loadScript = __webpack_require__(/*! load-script */ "./node_modules/load-script/index.js");

var _loadScript2 = _interopRequireDefault(_loadScript);

var _context = __webpack_require__(/*! ./context */ "./node_modules/react-mathjax/lib/context.js");

var _context2 = _interopRequireDefault(_context);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _possibleConstructorReturn(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && (typeof call === "object" || typeof call === "function") ? call : self;
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
/* global MathJax */


var MathJaxProvider = function (_React$Component) {
  _inherits(MathJaxProvider, _React$Component);

  function MathJaxProvider(props) {
    _classCallCheck(this, MathJaxProvider);

    var _this = _possibleConstructorReturn(this, (MathJaxProvider.__proto__ || Object.getPrototypeOf(MathJaxProvider)).call(this, props));

    _this.hasNodes = false;
    _this.loaded = false;

    _this.registerNode = function () {
      _this.hasNodes = true;
    };

    _this.load = function () {
      var script = _this.props.script;

      if (_this.loaded || !_this.hasNodes) {
        return;
      }

      _this.loaded = true;

      if (!script) {
        _this.onLoad(null);

        return;
      }

      (0, _loadScript2.default)(script, _this.onLoad);
    };

    _this.onLoad = function (err) {
      var options = _this.props.options;
      MathJax.Hub.Config(options);

      _this.setState({
        MathJax: MathJax
      });
    };

    _this.state = {
      MathJax: null,
      registerNode: _this.registerNode
    };
    return _this;
  }

  _createClass(MathJaxProvider, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.load();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      this.load();
    } // Is there any math nodes to typeset ?
    // Have we already loaded MathJax ?

    /*
     * Signal that there is at least one node to typeset.
     * It will trigger the mathjax loading.
     */

    /*
     * Load the MathJax library
     */

  }, {
    key: 'render',
    value: function render() {
      var children = this.props.children;
      return React.createElement(_context2.default.Provider, {
        value: this.state
      }, children);
    }
  }]);

  return MathJaxProvider;
}(React.Component);

MathJaxProvider.defaultProps = {
  script: 'https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.4/MathJax.js?config=TeX-MML-AM_CHTML',
  options: {
    tex2jax: {
      inlineMath: []
    },
    showMathMenu: false,
    showMathMenuMSIE: false
  }
};
exports.default = MathJaxProvider;

/***/ }),

/***/ "./node_modules/react-mathjax/lib/context.js":
/*!***************************************************!*\
  !*** ./node_modules/react-mathjax/lib/context.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(/*! react */ "./node_modules/react/index.js");

var React = _interopRequireWildcard(_react);

function _interopRequireWildcard(obj) {
  if (obj && obj.__esModule) {
    return obj;
  } else {
    var newObj = {};

    if (obj != null) {
      for (var key in obj) {
        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];
      }
    }

    newObj.default = obj;
    return newObj;
  }
}

var MathJaxContext = React.createContext({
  MathJax: null,
  registerNode: function registerNode() {}
});
exports.default = MathJaxContext;

/***/ }),

/***/ "./node_modules/react-mathjax/lib/index.js":
/*!*************************************************!*\
  !*** ./node_modules/react-mathjax/lib/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Provider = __webpack_require__(/*! ./Provider */ "./node_modules/react-mathjax/lib/Provider.js");

var _Provider2 = _interopRequireDefault(_Provider);

var _Node = __webpack_require__(/*! ./Node */ "./node_modules/react-mathjax/lib/Node.js");

var _Node2 = _interopRequireDefault(_Node);

function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}

var MathJax = {
  Provider: _Provider2.default,
  Node: _Node2.default
};
exports.default = MathJax;

/***/ }),

/***/ "./node_modules/react-mathjax/lib/process.js":
/*!***************************************************!*\
  !*** ./node_modules/react-mathjax/lib/process.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var pendingScripts = [];
var pendingCallbacks = [];
var needsProcess = false;
/*
 * Process math in a script node using MathJax.
 */

function process(MathJax, script, callback) {
  pendingScripts.push(script);
  pendingCallbacks.push(callback);

  if (!needsProcess) {
    needsProcess = true;
    setTimeout(function () {
      return doProcess(MathJax);
    }, 0);
  }
}

function doProcess(MathJax) {
  MathJax.Hub.Queue(function () {
    var oldElementScripts = MathJax.Hub.elementScripts;

    MathJax.Hub.elementScripts = function (element) {
      return pendingScripts;
    };

    try {
      return MathJax.Hub.Process(null, function () {
        // Trigger all of the pending callbacks before clearing them
        // out.
        pendingCallbacks.forEach(function (callback) {
          callback();
        });
        pendingScripts = [];
        pendingCallbacks = [];
        needsProcess = false;
      });
    } catch (e) {
      // IE8 requires `catch` in order to use `finally`
      throw e;
    } finally {
      MathJax.Hub.elementScripts = oldElementScripts;
    }
  });
}

exports.default = process;

/***/ }),

/***/ "./node_modules/react-p5/build/index.js":
/*!**********************************************!*\
  !*** ./node_modules/react-p5/build/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

!function (e, t) {
   true ? module.exports = t(__webpack_require__(/*! react */ "./node_modules/react/index.js")) : undefined;
}(this, function (e) {
  return function (e) {
    var t = {};

    function n(a) {
      if (t[a]) return t[a].exports;
      var o = t[a] = {
        i: a,
        l: !1,
        exports: {}
      };
      return e[a].call(o.exports, o, o.exports, n), o.l = !0, o.exports;
    }

    return n.m = e, n.c = t, n.d = function (e, t, a) {
      n.o(e, t) || Object.defineProperty(e, t, {
        enumerable: !0,
        get: a
      });
    }, n.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, n.t = function (e, t) {
      if (1 & t && (e = n(e)), 8 & t) return e;
      if (4 & t && "object" == typeof e && e && e.__esModule) return e;
      var a = Object.create(null);
      if (n.r(a), Object.defineProperty(a, "default", {
        enumerable: !0,
        value: e
      }), 2 & t && "string" != typeof e) for (var o in e) n.d(a, o, function (t) {
        return e[t];
      }.bind(null, o));
      return a;
    }, n.n = function (e) {
      var t = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return n.d(t, "a", t), t;
    }, n.o = function (e, t) {
      return Object.prototype.hasOwnProperty.call(e, t);
    }, n.p = "", n(n.s = 2);
  }([function (t, n) {
    t.exports = e;
  }, function (e, t, n) {
    (function (t) {
      var n;

      e.exports = function e(t, a, o) {
        function i(s, l) {
          if (!a[s]) {
            if (!t[s]) {
              if (!l && "function" == typeof n && n) return n(s, !0);
              if (r) return r(s, !0);
              var p = new Error("Cannot find module '" + s + "'");
              throw p.code = "MODULE_NOT_FOUND", p;
            }

            var d = a[s] = {
              exports: {}
            };
            t[s][0].call(d.exports, function (e) {
              return i(t[s][1][e] || e);
            }, d, d.exports, e, t, a, o);
          }

          return a[s].exports;
        }

        for (var r = "function" == typeof n && n, s = 0; s < o.length; s++) i(o[s]);

        return i;
      }({
        1: [function (e, t, n) {
          t.exports = {
            project: {
              name: "p5",
              description: "[![Build Status](https://travis-ci.org/processing/p5.js.svg?branch=master)](https://travis-ci.org/processing/p5.js) [![npm version](https://badge.fury.io/js/p5.svg)](https://www.npmjs.com/package/p5)",
              version: "0.7.3",
              url: "https://github.com/processing/p5.js#readme"
            },
            files: {
              "src/color/color_conversion.js": {
                name: "src/color/color_conversion.js",
                modules: {
                  "Color Conversion": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/color/creating_reading.js": {
                name: "src/color/creating_reading.js",
                modules: {
                  "Creating & Reading": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/color/p5.Color.js": {
                name: "src/color/p5.Color.js",
                modules: {},
                classes: {
                  "p5.Color": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/color/setting.js": {
                name: "src/color/setting.js",
                modules: {
                  Setting: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/shape/2d_primitives.js": {
                name: "src/core/shape/2d_primitives.js",
                modules: {
                  "2D Primitives": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/shape/attributes.js": {
                name: "src/core/shape/attributes.js",
                modules: {
                  Attributes: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/shape/curves.js": {
                name: "src/core/shape/curves.js",
                modules: {
                  Curves: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/shape/vertex.js": {
                name: "src/core/shape/vertex.js",
                modules: {
                  Vertex: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/constants.js": {
                name: "src/core/constants.js",
                modules: {
                  Constants: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/environment.js": {
                name: "src/core/environment.js",
                modules: {
                  Environment: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/error_helpers.js": {
                name: "src/core/error_helpers.js",
                modules: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/helpers.js": {
                name: "src/core/helpers.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              },
              "src/core/init.js": {
                name: "src/core/init.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              },
              "src/core/legacy.js": {
                name: "src/core/legacy.js",
                modules: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/main.js": {
                name: "src/core/main.js",
                modules: {
                  Structure: 1
                },
                classes: {
                  p5: 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/p5.Element.js": {
                name: "src/core/p5.Element.js",
                modules: {
                  DOM: 1
                },
                classes: {
                  "p5.Element": 1
                },
                fors: {
                  "p5.Element": 1
                },
                namespaces: {}
              },
              "src/core/p5.Graphics.js": {
                name: "src/core/p5.Graphics.js",
                modules: {
                  Rendering: 1
                },
                classes: {
                  "p5.Graphics": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/p5.Renderer.js": {
                name: "src/core/p5.Renderer.js",
                modules: {},
                classes: {
                  "p5.Renderer": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/p5.Renderer2D.js": {
                name: "src/core/p5.Renderer2D.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              },
              "src/core/rendering.js": {
                name: "src/core/rendering.js",
                modules: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/shim.js": {
                name: "src/core/shim.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              },
              "src/core/structure.js": {
                name: "src/core/structure.js",
                modules: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/core/transform.js": {
                name: "src/core/transform.js",
                modules: {
                  Transform: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/data/p5.TypedDict.js": {
                name: "src/data/p5.TypedDict.js",
                modules: {
                  Dictionary: 1
                },
                classes: {
                  "p5.TypedDict": 1,
                  "p5.StringDict": 1,
                  "p5.NumberDict": 1
                },
                fors: {
                  "p5.TypedDict": 1,
                  p5: 1
                },
                namespaces: {}
              },
              "src/events/acceleration.js": {
                name: "src/events/acceleration.js",
                modules: {
                  Acceleration: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/events/keyboard.js": {
                name: "src/events/keyboard.js",
                modules: {
                  Keyboard: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/events/mouse.js": {
                name: "src/events/mouse.js",
                modules: {
                  Mouse: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/events/touch.js": {
                name: "src/events/touch.js",
                modules: {
                  Touch: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/image/filters.js": {
                name: "src/image/filters.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              },
              "src/image/image.js": {
                name: "src/image/image.js",
                modules: {
                  Image: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/image/loading_displaying.js": {
                name: "src/image/loading_displaying.js",
                modules: {
                  "Loading & Displaying": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/image/p5.Image.js": {
                name: "src/image/p5.Image.js",
                modules: {},
                classes: {
                  "p5.Image": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/image/pixels.js": {
                name: "src/image/pixels.js",
                modules: {
                  Pixels: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/io/files.js": {
                name: "src/io/files.js",
                modules: {
                  Input: 1,
                  Output: 1
                },
                classes: {
                  "p5.PrintWriter": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/io/p5.Table.js": {
                name: "src/io/p5.Table.js",
                modules: {
                  Table: 1
                },
                classes: {
                  "p5.Table": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/io/p5.TableRow.js": {
                name: "src/io/p5.TableRow.js",
                modules: {},
                classes: {
                  "p5.TableRow": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/io/p5.XML.js": {
                name: "src/io/p5.XML.js",
                modules: {
                  XML: 1
                },
                classes: {
                  "p5.XML": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/math/calculation.js": {
                name: "src/math/calculation.js",
                modules: {
                  Calculation: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/math/math.js": {
                name: "src/math/math.js",
                modules: {
                  Math: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/math/noise.js": {
                name: "src/math/noise.js",
                modules: {
                  Noise: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/math/p5.Vector.js": {
                name: "src/math/p5.Vector.js",
                modules: {},
                classes: {
                  "p5.Vector": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/math/random.js": {
                name: "src/math/random.js",
                modules: {
                  Random: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/math/trigonometry.js": {
                name: "src/math/trigonometry.js",
                modules: {
                  Trigonometry: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/typography/attributes.js": {
                name: "src/typography/attributes.js",
                modules: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/typography/loading_displaying.js": {
                name: "src/typography/loading_displaying.js",
                modules: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/typography/p5.Font.js": {
                name: "src/typography/p5.Font.js",
                modules: {
                  Font: 1
                },
                classes: {
                  "p5.Font": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/utilities/array_functions.js": {
                name: "src/utilities/array_functions.js",
                modules: {
                  "Array Functions": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/utilities/conversion.js": {
                name: "src/utilities/conversion.js",
                modules: {
                  Conversion: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/utilities/string_functions.js": {
                name: "src/utilities/string_functions.js",
                modules: {
                  "String Functions": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/utilities/time_date.js": {
                name: "src/utilities/time_date.js",
                modules: {
                  "Time & Date": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/3d_primitives.js": {
                name: "src/webgl/3d_primitives.js",
                modules: {
                  "3D Primitives": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/interaction.js": {
                name: "src/webgl/interaction.js",
                modules: {
                  Interaction: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/light.js": {
                name: "src/webgl/light.js",
                modules: {
                  Lights: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/loading.js": {
                name: "src/webgl/loading.js",
                modules: {
                  "3D Models": 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/material.js": {
                name: "src/webgl/material.js",
                modules: {
                  Material: 1
                },
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/p5.Camera.js": {
                name: "src/webgl/p5.Camera.js",
                modules: {
                  Camera: 1
                },
                classes: {
                  "p5.Camera": 1
                },
                fors: {
                  p5: 1,
                  "p5.Camera": 1
                },
                namespaces: {}
              },
              "src/webgl/p5.Geometry.js": {
                name: "src/webgl/p5.Geometry.js",
                modules: {},
                classes: {
                  "p5.Geometry": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/webgl/p5.Matrix.js": {
                name: "src/webgl/p5.Matrix.js",
                modules: {},
                classes: {
                  "p5.Matrix": 1
                },
                fors: {},
                namespaces: {}
              },
              "src/webgl/p5.RendererGL.Immediate.js": {
                name: "src/webgl/p5.RendererGL.Immediate.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              },
              "src/webgl/p5.RendererGL.Retained.js": {
                name: "src/webgl/p5.RendererGL.Retained.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              },
              "src/webgl/p5.RendererGL.js": {
                name: "src/webgl/p5.RendererGL.js",
                modules: {},
                classes: {
                  "p5.RendererGL": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/p5.Shader.js": {
                name: "src/webgl/p5.Shader.js",
                modules: {
                  Shaders: 1
                },
                classes: {
                  "p5.Shader": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/p5.Texture.js": {
                name: "src/webgl/p5.Texture.js",
                modules: {},
                classes: {
                  "p5.Texture": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "src/webgl/text.js": {
                name: "src/webgl/text.js",
                modules: {},
                classes: {
                  ImageInfos: 1,
                  FontInfo: 1,
                  Cubic: 1
                },
                fors: {},
                namespaces: {}
              },
              "lib/addons/p5.dom.js": {
                name: "lib/addons/p5.dom.js",
                modules: {
                  "p5.dom": 1
                },
                classes: {
                  "p5.MediaElement": 1,
                  "p5.File": 1
                },
                fors: {
                  p5: 1,
                  "p5.Element": 1
                },
                namespaces: {}
              },
              "lib/addons/p5.sound.js": {
                name: "lib/addons/p5.sound.js",
                modules: {
                  "p5.sound": 1
                },
                classes: {
                  "p5.SoundFile": 1,
                  "p5.Amplitude": 1,
                  "p5.FFT": 1,
                  "p5.Signal": 1,
                  "p5.Oscillator": 1,
                  "p5.SinOsc": 1,
                  "p5.TriOsc": 1,
                  "p5.SawOsc": 1,
                  "p5.SqrOsc": 1,
                  "p5.Envelope": 1,
                  "p5.Pulse": 1,
                  "p5.Noise": 1,
                  "p5.AudioIn": 1,
                  "p5.Effect": 1,
                  "p5.Filter": 1,
                  "p5.LowPass": 1,
                  "p5.HighPass": 1,
                  "p5.BandPass": 1,
                  "p5.EQ": 1,
                  "p5.Panner3D": 1,
                  "p5.Delay": 1,
                  "p5.Reverb": 1,
                  "p5.Convolver": 1,
                  "p5.Phrase": 1,
                  "p5.Part": 1,
                  "p5.Score": 1,
                  "p5.SoundLoop": 1,
                  "p5.Compressor": 1,
                  "p5.SoundRecorder": 1,
                  "p5.PeakDetect": 1,
                  "p5.Gain": 1,
                  "p5.AudioVoice": 1,
                  "p5.MonoSynth": 1,
                  "p5.PolySynth": 1,
                  "p5.Distortion": 1
                },
                fors: {
                  "p5.sound": 1,
                  p5: 1
                },
                namespaces: {}
              },
              "lib/addons/p5.sound.min.js": {
                name: "lib/addons/p5.sound.min.js",
                modules: {},
                classes: {},
                fors: {},
                namespaces: {}
              }
            },
            modules: {
              Color: {
                name: "Color",
                submodules: {
                  "Color Conversion": 1,
                  "Creating & Reading": 1,
                  Setting: 1
                },
                elements: {},
                classes: {
                  "p5.Color": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {},
                file: "src/color/p5.Color.js",
                line: 16
              },
              "Color Conversion": {
                name: "Color Conversion",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Color",
                namespace: "",
                file: "src/color/color_conversion.js",
                line: 1,
                requires: ["core"]
              },
              "Creating & Reading": {
                name: "Creating & Reading",
                submodules: {},
                elements: {},
                classes: {
                  "p5.Color": 1
                },
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Color",
                namespace: "",
                file: "src/color/p5.Color.js",
                line: 16,
                requires: ["core", "constants"],
                description: '<p>Each color stores the color mode and level maxes that applied at the\ntime of its construction. These are used to interpret the input arguments\n(at construction and later for that instance of color) and to format the\noutput e.g. when <a href="#/p5/saturation">saturation()</a> is requested.</p>\n<p>Internally we store an array representing the ideal RGBA values in floating\npoint form, normalized from 0 to 1. From this we calculate the closest\nscreen color (RGBA levels from 0 to 255) and expose this to the renderer.</p>\n<p>We also cache normalized, floating point components of the color in various\nrepresentations as they are calculated. This is done to prevent repeating a\nconversion that has already been performed.</p>\n'
              },
              Setting: {
                name: "Setting",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Color",
                namespace: "",
                file: "src/color/setting.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Shape: {
                name: "Shape",
                submodules: {
                  "2D Primitives": 1,
                  Curves: 1,
                  Vertex: 1,
                  "3D Primitives": 1,
                  "3D Models": 1
                },
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              "2D Primitives": {
                name: "2D Primitives",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Shape",
                namespace: "",
                file: "src/core/shape/2d_primitives.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Attributes: {
                name: "Attributes",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Typography",
                namespace: "",
                file: "src/core/shape/attributes.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Curves: {
                name: "Curves",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Shape",
                namespace: "",
                file: "src/core/shape/curves.js",
                line: 1,
                requires: ["core"]
              },
              Vertex: {
                name: "Vertex",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Shape",
                namespace: "",
                file: "src/core/shape/vertex.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Constants: {
                name: "Constants",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {},
                module: "Constants",
                file: "src/core/constants.js",
                line: 1
              },
              Environment: {
                name: "Environment",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {},
                module: "Environment",
                file: "src/core/environment.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Structure: {
                name: "Structure",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {},
                module: "IO",
                file: "src/core/main.js",
                line: 1,
                requires: ["constants"]
              },
              DOM: {
                name: "DOM",
                submodules: {},
                elements: {},
                classes: {
                  "p5.Element": 1
                },
                fors: {
                  "p5.Element": 1
                },
                namespaces: {},
                module: "DOM",
                file: "src/core/p5.Element.js",
                line: 11,
                description: '<p>Base class for all elements added to a sketch, including canvas,\ngraphics buffers, and other HTML elements. Methods in blue are\nincluded in the core functionality, methods in brown are added\nwith the <a href="http://p5js.org/reference/#/libraries/p5.dom">p5.dom\nlibrary</a>.\nIt is not called directly, but <a href="#/p5.Element">p5.Element</a>\nobjects are created by calling <a href="#/p5/createCanvas">createCanvas</a>, <a href="#/p5/createGraphics">createGraphics</a>,\nor in the p5.dom library, <a href="#/p5/createDiv">createDiv</a>, <a href="#/p5/createImg">createImg</a>, <a href="#/p5/createInput">createInput</a>, etc.</p>\n'
              },
              Rendering: {
                name: "Rendering",
                submodules: {
                  undefined: 1
                },
                elements: {},
                classes: {
                  "p5.RendererGL": 1,
                  "p5.Graphics": 1,
                  "p5.Renderer": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {},
                module: "Rendering",
                file: "src/webgl/p5.RendererGL.js",
                line: 428,
                description: "<p>Thin wrapper around a renderer, to be used for creating a\ngraphics buffer object. Use this class if you need\nto draw into an off-screen graphics buffer. The two parameters define the\nwidth and height in pixels. The fields and methods for this class are\nextensive, but mirror the normal drawing API for p5.</p>\n"
              },
              Transform: {
                name: "Transform",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {},
                module: "Transform",
                file: "src/core/transform.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Data: {
                name: "Data",
                submodules: {
                  Dictionary: 1,
                  "Array Functions": 1,
                  Conversion: 1,
                  "String Functions": 1
                },
                elements: {},
                classes: {
                  "p5.TypedDict": 1,
                  "p5.StringDict": 1,
                  "p5.NumberDict": 1
                },
                fors: {
                  "p5.TypedDict": 1,
                  p5: 1
                },
                namespaces: {},
                file: "src/data/p5.TypedDict.js",
                line: 422
              },
              Dictionary: {
                name: "Dictionary",
                submodules: {},
                elements: {},
                classes: {
                  "p5.TypedDict": 1,
                  "p5.StringDict": 1,
                  "p5.NumberDict": 1
                },
                fors: {
                  "p5.TypedDict": 1,
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Data",
                namespace: "",
                file: "src/data/p5.TypedDict.js",
                line: 422,
                requires: ["core\n\nThis module defines the p5 methods for the p5 Dictionary classes.\nThe classes StringDict and NumberDict are for storing and working\nwith key-value pairs."],
                description: "<p>Base class for all p5.Dictionary types. Specifically\n typed Dictionary classes inherit from this class.</p>\n"
              },
              Events: {
                name: "Events",
                submodules: {
                  Acceleration: 1,
                  Keyboard: 1,
                  Mouse: 1,
                  Touch: 1
                },
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                namespaces: {}
              },
              Acceleration: {
                name: "Acceleration",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Events",
                namespace: "",
                file: "src/events/acceleration.js",
                line: 1,
                requires: ["core"]
              },
              Keyboard: {
                name: "Keyboard",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Events",
                namespace: "",
                file: "src/events/keyboard.js",
                line: 1,
                requires: ["core"]
              },
              Mouse: {
                name: "Mouse",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Events",
                namespace: "",
                file: "src/events/mouse.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Touch: {
                name: "Touch",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Events",
                namespace: "",
                file: "src/events/touch.js",
                line: 1,
                requires: ["core"]
              },
              Image: {
                name: "Image",
                submodules: {
                  Pixels: 1
                },
                elements: {},
                classes: {
                  "p5.Image": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {},
                module: "Image",
                file: "src/image/p5.Image.js",
                line: 23,
                requires: ["core"],
                description: '<p>Creates a new <a href="#/p5.Image">p5.Image</a>. A <a href="#/p5.Image">p5.Image</a> is a canvas backed representation of an\nimage.\n<br><br>\np5 can display .gif, .jpg and .png images. Images may be displayed\nin 2D and 3D space. Before an image is used, it must be loaded with the\n<a href="#/p5/loadImage">loadImage()</a> function. The <a href="#/p5.Image">p5.Image</a> class contains fields for the width and\nheight of the image, as well as an array called <a href="#/p5.Image/pixels">pixels[]</a> that contains the\nvalues for every pixel in the image.\n<br><br>\nThe methods described below allow easy access to the image&#39;s pixels and\nalpha channel and simplify the process of compositing.\n<br><br>\nBefore using the <a href="#/p5.Image/pixels">pixels[]</a> array, be sure to use the <a href="#/p5.Image/loadPixels">loadPixels()</a> method on\nthe image to make sure that the pixel data is properly loaded.</p>\n'
              },
              "Loading & Displaying": {
                name: "Loading & Displaying",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Typography",
                namespace: "",
                file: "src/image/loading_displaying.js",
                line: 1,
                requires: ["core"]
              },
              Pixels: {
                name: "Pixels",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Image",
                namespace: "",
                file: "src/image/pixels.js",
                line: 1,
                requires: ["core"]
              },
              IO: {
                name: "IO",
                submodules: {
                  Structure: 1,
                  Input: 1,
                  Output: 1,
                  Table: 1,
                  XML: 1,
                  "Time & Date": 1
                },
                elements: {},
                classes: {
                  p5: 1,
                  "p5.PrintWriter": 1,
                  "p5.Table": 1,
                  "p5.TableRow": 1,
                  "p5.XML": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {},
                file: "src/io/p5.XML.js",
                line: 11
              },
              Input: {
                name: "Input",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "IO",
                namespace: "",
                file: "src/io/files.js",
                line: 1,
                requires: ["core"]
              },
              Output: {
                name: "Output",
                submodules: {},
                elements: {},
                classes: {
                  p5: 1,
                  "p5.PrintWriter": 1
                },
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "IO",
                namespace: "",
                file: "src/io/files.js",
                line: 1228,
                description: '<p>This is the p5 instance constructor.</p>\n<p>A p5 instance holds all the properties and methods related to\na p5 sketch.  It expects an incoming sketch closure and it can also\ntake an optional node parameter for attaching the generated p5 canvas\nto a node.  The sketch closure takes the newly created p5 instance as\nits sole argument and may optionally set <a href="#/p5/preload">preload()</a>, <a href="#/p5/setup">setup()</a>, and/or\n<a href="#/p5/draw">draw()</a> properties on it for running a sketch.</p>\n<p>A p5 sketch can run in &quot;global&quot; or &quot;instance&quot; mode:\n&quot;global&quot;   - all properties and methods are attached to the window\n&quot;instance&quot; - all properties and methods are bound to this p5 object</p>\n'
              },
              Table: {
                name: "Table",
                submodules: {},
                elements: {},
                classes: {
                  "p5.Table": 1,
                  "p5.TableRow": 1
                },
                fors: {},
                is_submodule: 1,
                namespaces: {},
                module: "IO",
                namespace: "",
                file: "src/io/p5.TableRow.js",
                line: 11,
                requires: ["core"],
                description: '<p><a href="#/p5.Table">Table</a> objects store data with multiple rows and columns, much\nlike in a traditional spreadsheet. Tables can be generated from\nscratch, dynamically, or using data from an existing file.</p>\n'
              },
              XML: {
                name: "XML",
                submodules: {},
                elements: {},
                classes: {
                  "p5.XML": 1
                },
                fors: {},
                is_submodule: 1,
                namespaces: {},
                module: "IO",
                namespace: "",
                file: "src/io/p5.XML.js",
                line: 11,
                requires: ["core"],
                description: '<p>XML is a representation of an XML object, able to parse XML code. Use\n<a href="#/p5/loadXML">loadXML()</a> to load external XML files and create XML objects.</p>\n'
              },
              Math: {
                name: "Math",
                submodules: {
                  Calculation: 1,
                  Noise: 1,
                  Random: 1,
                  Trigonometry: 1
                },
                elements: {},
                classes: {
                  "p5.Vector": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {},
                module: "Math",
                file: "src/math/p5.Vector.js",
                line: 12,
                requires: ["core"],
                description: '<p>A class to describe a two or three dimensional vector, specifically\na Euclidean (also known as geometric) vector. A vector is an entity\nthat has both magnitude and direction. The datatype, however, stores\nthe components of the vector (x, y for 2D, and x, y, z for 3D). The magnitude\nand direction can be accessed via the methods <a href="#/p5/mag">mag()</a> and <a href="#/p5/heading">heading()</a>.\n<br><br>\nIn many of the p5.js examples, you will see <a href="#/p5.Vector">p5.Vector</a> used to describe a\nposition, velocity, or acceleration. For example, if you consider a rectangle\nmoving across the screen, at any given instant it has a position (a vector\nthat points from the origin to its location), a velocity (the rate at which\nthe object&#39;s position changes per time unit, expressed as a vector), and\nacceleration (the rate at which the object&#39;s velocity changes per time\nunit, expressed as a vector).\n<br><br>\nSince vectors represent groupings of values, we cannot simply use\ntraditional addition/multiplication/etc. Instead, we&#39;ll need to do some\n&quot;vector&quot; math, which is made easy by the methods inside the <a href="#/p5.Vector">p5.Vector</a> class.</p>\n'
              },
              Calculation: {
                name: "Calculation",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Math",
                namespace: "",
                file: "src/math/calculation.js",
                line: 1,
                requires: ["core"]
              },
              Noise: {
                name: "Noise",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Math",
                namespace: "",
                file: "src/math/noise.js",
                line: 14,
                requires: ["core"]
              },
              Random: {
                name: "Random",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Math",
                namespace: "",
                file: "src/math/random.js",
                line: 1,
                requires: ["core"]
              },
              Trigonometry: {
                name: "Trigonometry",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Math",
                namespace: "",
                file: "src/math/trigonometry.js",
                line: 1,
                requires: ["core", "constants"]
              },
              Typography: {
                name: "Typography",
                submodules: {
                  Attributes: 1,
                  "Loading & Displaying": 1,
                  Font: 1
                },
                elements: {},
                classes: {
                  "p5.Font": 1
                },
                fors: {
                  p5: 1
                },
                namespaces: {},
                file: "src/typography/p5.Font.js",
                line: 15
              },
              Font: {
                name: "Font",
                submodules: {},
                elements: {},
                classes: {
                  "p5.Font": 1
                },
                fors: {},
                is_submodule: 1,
                namespaces: {},
                module: "Typography",
                namespace: "",
                file: "src/typography/p5.Font.js",
                line: 15,
                description: '<p>This module defines the <a href="#/p5.Font">p5.Font</a> class and functions for\ndrawing text to the display canvas.</p>\n',
                requires: ["core", "constants"]
              },
              "Array Functions": {
                name: "Array Functions",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Data",
                namespace: "",
                file: "src/utilities/array_functions.js",
                line: 1,
                requires: ["core"]
              },
              Conversion: {
                name: "Conversion",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Data",
                namespace: "",
                file: "src/utilities/conversion.js",
                line: 1,
                requires: ["core"]
              },
              "String Functions": {
                name: "String Functions",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Data",
                namespace: "",
                file: "src/utilities/string_functions.js",
                line: 1,
                requires: ["core"]
              },
              "Time & Date": {
                name: "Time & Date",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "IO",
                namespace: "",
                file: "src/utilities/time_date.js",
                line: 1,
                requires: ["core"]
              },
              "3D Primitives": {
                name: "3D Primitives",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Shape",
                namespace: "",
                file: "src/webgl/3d_primitives.js",
                line: 1,
                requires: ["core", "p5.Geometry"]
              },
              "Lights, Camera": {
                name: "Lights, Camera",
                submodules: {
                  Interaction: 1,
                  Lights: 1,
                  Material: 1,
                  Camera: 1,
                  Shaders: 1
                },
                elements: {},
                classes: {
                  "p5.Camera": 1,
                  "p5.Geometry": 1,
                  "p5.Matrix": 1,
                  "p5.Shader": 1,
                  "p5.Texture": 1,
                  ImageInfos: 1,
                  FontInfo: 1,
                  Cubic: 1
                },
                fors: {
                  p5: 1,
                  "p5.Camera": 1
                },
                namespaces: {},
                file: "src/webgl/text.js",
                line: 259
              },
              Interaction: {
                name: "Interaction",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Lights, Camera",
                namespace: "",
                file: "src/webgl/interaction.js",
                line: 1,
                requires: ["core"]
              },
              Lights: {
                name: "Lights",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Lights, Camera",
                namespace: "",
                file: "src/webgl/light.js",
                line: 1,
                requires: ["core"]
              },
              "3D Models": {
                name: "3D Models",
                submodules: {},
                elements: {},
                classes: {},
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Shape",
                namespace: "",
                file: "src/webgl/loading.js",
                line: 1,
                requires: ["core", "p5.Geometry"]
              },
              Material: {
                name: "Material",
                submodules: {},
                elements: {},
                classes: {
                  "p5.Texture": 1
                },
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Lights, Camera",
                namespace: "",
                file: "src/webgl/p5.Texture.js",
                line: 14,
                requires: ["core"],
                description: "<p>This module defines the p5.Texture class</p>\n"
              },
              Camera: {
                name: "Camera",
                submodules: {},
                elements: {},
                classes: {
                  "p5.Camera": 1
                },
                fors: {
                  p5: 1,
                  "p5.Camera": 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Lights, Camera",
                namespace: "",
                file: "src/webgl/p5.Camera.js",
                line: 209,
                requires: ["core"],
                description: '<p>This class describes a camera for use in p5&#39;s\n<a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5">\nWebGL mode</a>. It contains camera position, orientation, and projection\ninformation necessary for rendering a 3D scene.</p>\n<p>New p5.Camera objects can be made through the\n<a href="#/p5/createCamera">createCamera()</a> function and controlled through\nthe methods described below. A camera created in this way will use a default\nposition in the scene and a default perspective projection until these\nproperties are changed through the various methods available. It is possible\nto create multiple cameras, in which case the current camera\ncan be set through the <a href="#/p5/setCamera">setCamera()</a> method.</p>\n<p>Note:\nThe methods below operate in two coordinate systems: the &#39;world&#39; coordinate\nsystem describe positions in terms of their relationship to the origin along\nthe X, Y and Z axes whereas the camera&#39;s &#39;local&#39; coordinate system\ndescribes positions from the camera&#39;s point of view: left-right, up-down,\nand forward-backward. The <a href="#/p5.Camera/move">move()</a> method,\nfor instance, moves the camera along its own axes, whereas the\n<a href="#/p5.Camera/setPosition">setPosition()</a>\nmethod sets the camera&#39;s position in world-space.</p>\n'
              },
              Shaders: {
                name: "Shaders",
                submodules: {},
                elements: {},
                classes: {
                  "p5.Shader": 1
                },
                fors: {
                  p5: 1
                },
                is_submodule: 1,
                namespaces: {},
                module: "Lights, Camera",
                namespace: "",
                file: "src/webgl/p5.Shader.js",
                line: 13,
                description: "<p>This module defines the p5.Shader class</p>\n",
                requires: ["core"]
              },
              "p5.dom": {
                name: "p5.dom",
                submodules: {},
                elements: {},
                classes: {
                  "p5.MediaElement": 1,
                  "p5.File": 1
                },
                fors: {
                  p5: 1,
                  "p5.Element": 1
                },
                namespaces: {},
                module: "p5.dom",
                file: "lib/addons/p5.dom.js",
                line: 3170,
                description: "<p><p>The web is much more than just canvas and p5.dom makes it easy to interact\nwith other HTML5 objects, including text, hyperlink, image, input, video,\naudio, and webcam.</p></p>\n<p><p>There is a set of creation methods, DOM manipulation methods, and\nan extended <a href=\"#/p5.Element\">p5.Element</a> that supports a range of HTML elements. See the\n<a href='https://github.com/processing/p5.js/wiki/Beyond-the-canvas'>\nbeyond the canvas tutorial</a> for a full overview of how this addon works.</p>\n<p><p>Methods and properties shown in black are part of the p5.js core, items in\nblue are part of the p5.dom library. You will need to include an extra file\nin order to access the blue functions. See the\n<a href='http://p5js.org/libraries/#using-a-library'>using a library</a>\nsection for information on how to include this library. p5.dom comes with\n<a href='http://p5js.org/download'>p5 complete</a> or you can download the single file\n<a href='https://raw.githubusercontent.com/lmccart/p5.js/master/lib/addons/p5.dom.js'>\nhere</a>.</p></p>\n<p><p>See <a href='https://github.com/processing/p5.js/wiki/Beyond-the-canvas'>tutorial: beyond the canvas</a>\nfor more info on how to use this library.</a></p>\n",
                tag: "main",
                itemtype: "main"
              },
              "p5.sound": {
                name: "p5.sound",
                submodules: {},
                elements: {},
                classes: {
                  "p5.sound": 1,
                  "p5.SoundFile": 1,
                  "p5.Amplitude": 1,
                  "p5.FFT": 1,
                  "p5.Signal": 1,
                  "p5.Oscillator": 1,
                  "p5.SinOsc": 1,
                  "p5.TriOsc": 1,
                  "p5.SawOsc": 1,
                  "p5.SqrOsc": 1,
                  "p5.Envelope": 1,
                  "p5.Pulse": 1,
                  "p5.Noise": 1,
                  "p5.AudioIn": 1,
                  "p5.Effect": 1,
                  "p5.Filter": 1,
                  "p5.LowPass": 1,
                  "p5.HighPass": 1,
                  "p5.BandPass": 1,
                  "p5.EQ": 1,
                  "p5.Panner3D": 1,
                  "p5.Delay": 1,
                  "p5.Reverb": 1,
                  "p5.Convolver": 1,
                  "p5.Phrase": 1,
                  "p5.Part": 1,
                  "p5.Score": 1,
                  "p5.SoundLoop": 1,
                  "p5.Compressor": 1,
                  "p5.SoundRecorder": 1,
                  "p5.PeakDetect": 1,
                  "p5.Gain": 1,
                  "p5.AudioVoice": 1,
                  "p5.MonoSynth": 1,
                  "p5.PolySynth": 1,
                  "p5.Distortion": 1
                },
                fors: {
                  "p5.sound": 1,
                  p5: 1
                },
                namespaces: {},
                module: "p5.sound",
                file: "lib/addons/p5.sound.js",
                line: 12761,
                description: '<p>p5.sound extends p5 with <a href="http://caniuse.com/audio-api"\ntarget="_blank">Web Audio</a> functionality including audio input,\nplayback, analysis and synthesis.\n<br/><br/>\n<a href="#/p5.SoundFile"><b>p5.SoundFile</b></a>: Load and play sound files.<br/>\n<a href="#/p5.Amplitude"><b>p5.Amplitude</b></a>: Get the current volume of a sound.<br/>\n<a href="#/p5.AudioIn"><b>p5.AudioIn</b></a>: Get sound from an input source, typically\n  a computer microphone.<br/>\n<a href="#/p5.FFT"><b>p5.FFT</b></a>: Analyze the frequency of sound. Returns\n  results from the frequency spectrum or time domain (waveform).<br/>\n<a href="#/p5.Oscillator"><b>p5.Oscillator</b></a>: Generate Sine,\n  Triangle, Square and Sawtooth waveforms. Base class of\n  <a href="#/p5.Noise">p5.Noise</a> and <a href="#/p5.Pulse">p5.Pulse</a>.\n  <br/>\n<a href="#/p5.Envelope"><b>p5.Envelope</b></a>: An Envelope is a series\n  of fades over time. Often used to control an object&#39;s\n  output gain level as an &quot;ADSR Envelope&quot; (Attack, Decay,\n  Sustain, Release). Can also modulate other parameters.<br/>\n<a href="#/p5.Delay"><b>p5.Delay</b></a>: A delay effect with\n  parameters for feedback, delayTime, and lowpass filter.<br/>\n<a href="#/p5.Filter"><b>p5.Filter</b></a>: Filter the frequency range of a\n  sound.\n<br/>\n<a href="#/p5.Reverb"><b>p5.Reverb</b></a>: Add reverb to a sound by specifying\n  duration and decay. <br/>\n<b><a href="#/p5.Convolver">p5.Convolver</a>:</b> Extends\n<a href="#/p5.Reverb">p5.Reverb</a> to simulate the sound of real\n  physical spaces through convolution.<br/>\n<b><a href="#/p5.SoundRecorder">p5.SoundRecorder</a></b>: Record sound for playback\n  / save the .wav file.\n<b><a href="#/p5.Phrase">p5.Phrase</a></b>, <b><a href="#/p5.Part">p5.Part</a></b> and\n<b><a href="#/p5.Score">p5.Score</a></b>: Compose musical sequences.\n<br/><br/>\np5.sound is on <a href="https://github.com/therewasaguy/p5.sound/">GitHub</a>.\nDownload the latest version\n<a href="https://github.com/therewasaguy/p5.sound/blob/master/lib/p5.sound.js">here</a>.</p>\n',
                tag: "main",
                itemtype: "main"
              }
            },
            classes: {
              p5: {
                name: "p5",
                shortname: "p5",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "IO",
                submodule: "Output",
                namespace: "",
                file: "src/core/main.js",
                line: 15,
                description: '<p>This is the p5 instance constructor.</p>\n<p>A p5 instance holds all the properties and methods related to\na p5 sketch.  It expects an incoming sketch closure and it can also\ntake an optional node parameter for attaching the generated p5 canvas\nto a node.  The sketch closure takes the newly created p5 instance as\nits sole argument and may optionally set <a href="#/p5/preload">preload()</a>, <a href="#/p5/setup">setup()</a>, and/or\n<a href="#/p5/draw">draw()</a> properties on it for running a sketch.</p>\n<p>A p5 sketch can run in &quot;global&quot; or &quot;instance&quot; mode:\n&quot;global&quot;   - all properties and methods are attached to the window\n&quot;instance&quot; - all properties and methods are bound to this p5 object</p>\n',
                is_constructor: 1,
                params: [{
                  name: "sketch",
                  description: '<p>a closure that can set optional <a href="#/p5/preload">preload()</a>,\n                             <a href="#/p5/setup">setup()</a>, and/or <a href="#/p5/draw">draw()</a> properties on the\n                             given p5 instance</p>\n',
                  type: "Function"
                }, {
                  name: "node",
                  description: "<p>element to attach canvas to, if a\n                                     boolean is passed in use it as sync</p>\n",
                  type: "HTMLElement|Boolean",
                  optional: !0
                }, {
                  name: "sync",
                  description: "<p>start synchronously (optional)</p>\n",
                  type: "Boolean",
                  optional: !0
                }],
                return: {
                  description: "a p5 instance",
                  type: "P5"
                }
              },
              "p5.Color": {
                name: "p5.Color",
                shortname: "p5.Color",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Color",
                submodule: "Creating & Reading",
                namespace: "",
                file: "src/color/p5.Color.js",
                line: 16,
                description: '<p>Each color stores the color mode and level maxes that applied at the\ntime of its construction. These are used to interpret the input arguments\n(at construction and later for that instance of color) and to format the\noutput e.g. when <a href="#/p5/saturation">saturation()</a> is requested.</p>\n<p>Internally we store an array representing the ideal RGBA values in floating\npoint form, normalized from 0 to 1. From this we calculate the closest\nscreen color (RGBA levels from 0 to 255) and expose this to the renderer.</p>\n<p>We also cache normalized, floating point components of the color in various\nrepresentations as they are calculated. This is done to prevent repeating a\nconversion that has already been performed.</p>\n'
              },
              "p5.Element": {
                name: "p5.Element",
                shortname: "p5.Element",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "DOM",
                submodule: "DOM",
                namespace: "",
                file: "src/core/p5.Element.js",
                line: 11,
                description: '<p>Base class for all elements added to a sketch, including canvas,\ngraphics buffers, and other HTML elements. Methods in blue are\nincluded in the core functionality, methods in brown are added\nwith the <a href="http://p5js.org/reference/#/libraries/p5.dom">p5.dom\nlibrary</a>.\nIt is not called directly, but <a href="#/p5.Element">p5.Element</a>\nobjects are created by calling <a href="#/p5/createCanvas">createCanvas</a>, <a href="#/p5/createGraphics">createGraphics</a>,\nor in the p5.dom library, <a href="#/p5/createDiv">createDiv</a>, <a href="#/p5/createImg">createImg</a>, <a href="#/p5/createInput">createInput</a>, etc.</p>\n',
                params: [{
                  name: "elt",
                  description: "<p>DOM node that is wrapped</p>\n",
                  type: "String"
                }, {
                  name: "pInst",
                  description: "<p>pointer to p5 instance</p>\n",
                  type: "P5",
                  optional: !0
                }]
              },
              "p5.Graphics": {
                name: "p5.Graphics",
                shortname: "p5.Graphics",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Rendering",
                submodule: "Rendering",
                namespace: "",
                file: "src/core/p5.Graphics.js",
                line: 12,
                description: "<p>Thin wrapper around a renderer, to be used for creating a\ngraphics buffer object. Use this class if you need\nto draw into an off-screen graphics buffer. The two parameters define the\nwidth and height in pixels. The fields and methods for this class are\nextensive, but mirror the normal drawing API for p5.</p>\n",
                extends: "p5.Element",
                params: [{
                  name: "w",
                  description: "<p>width</p>\n",
                  type: "Number"
                }, {
                  name: "h",
                  description: "<p>height</p>\n",
                  type: "Number"
                }, {
                  name: "renderer",
                  description: "<p>the renderer to use, either P2D or WEBGL</p>\n",
                  type: "Constant"
                }, {
                  name: "pInst",
                  description: "<p>pointer to p5 instance</p>\n",
                  type: "P5",
                  optional: !0
                }]
              },
              "p5.Renderer": {
                name: "p5.Renderer",
                shortname: "p5.Renderer",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Rendering",
                submodule: "Rendering",
                namespace: "",
                file: "src/core/p5.Renderer.js",
                line: 12,
                description: "<p>Main graphics and rendering context, as well as the base API\nimplementation for p5.js &quot;core&quot;. To be used as the superclass for\nRenderer2D and Renderer3D classes, respecitvely.</p>\n",
                is_constructor: 1,
                extends: "p5.Element",
                params: [{
                  name: "elt",
                  description: "<p>DOM node that is wrapped</p>\n",
                  type: "String"
                }, {
                  name: "pInst",
                  description: "<p>pointer to p5 instance</p>\n",
                  type: "P5",
                  optional: !0
                }, {
                  name: "isMainCanvas",
                  description: "<p>whether we&#39;re using it as main canvas</p>\n",
                  type: "Boolean",
                  optional: !0
                }]
              },
              "p5.TypedDict": {
                name: "p5.TypedDict",
                shortname: "p5.TypedDict",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Data",
                submodule: "Dictionary",
                namespace: "",
                file: "src/data/p5.TypedDict.js",
                line: 84,
                description: "<p>Base class for all p5.Dictionary types. Specifically\n typed Dictionary classes inherit from this class.</p>\n"
              },
              "p5.StringDict": {
                name: "p5.StringDict",
                shortname: "p5.StringDict",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Data",
                submodule: "Dictionary",
                namespace: "",
                file: "src/data/p5.TypedDict.js",
                line: 403,
                description: "<p>A simple Dictionary class for Strings.</p>\n",
                extends: "p5.TypedDict"
              },
              "p5.NumberDict": {
                name: "p5.NumberDict",
                shortname: "p5.NumberDict",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Data",
                submodule: "Dictionary",
                namespace: "",
                file: "src/data/p5.TypedDict.js",
                line: 422,
                description: "<p>A simple Dictionary class for Numbers.</p>\n",
                extends: "p5.TypedDict"
              },
              "p5.Image": {
                name: "p5.Image",
                shortname: "p5.Image",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Image",
                submodule: "Image",
                namespace: "",
                file: "src/image/p5.Image.js",
                line: 23,
                description: '<p>Creates a new <a href="#/p5.Image">p5.Image</a>. A <a href="#/p5.Image">p5.Image</a> is a canvas backed representation of an\nimage.\n<br><br>\np5 can display .gif, .jpg and .png images. Images may be displayed\nin 2D and 3D space. Before an image is used, it must be loaded with the\n<a href="#/p5/loadImage">loadImage()</a> function. The <a href="#/p5.Image">p5.Image</a> class contains fields for the width and\nheight of the image, as well as an array called <a href="#/p5.Image/pixels">pixels[]</a> that contains the\nvalues for every pixel in the image.\n<br><br>\nThe methods described below allow easy access to the image&#39;s pixels and\nalpha channel and simplify the process of compositing.\n<br><br>\nBefore using the <a href="#/p5.Image/pixels">pixels[]</a> array, be sure to use the <a href="#/p5.Image/loadPixels">loadPixels()</a> method on\nthe image to make sure that the pixel data is properly loaded.</p>\n',
                example: ["\n<div><code>\nfunction setup() {\n  let img = createImage(100, 100); // same as new p5.Image(100, 100);\n  img.loadPixels();\n  createCanvas(100, 100);\n  background(0);\n\n  // helper for writing color to array\n  function writeColor(image, x, y, red, green, blue, alpha) {\n    let index = (x + y * width) * 4;\n    image.pixels[index] = red;\n    image.pixels[index + 1] = green;\n    image.pixels[index + 2] = blue;\n    image.pixels[index + 3] = alpha;\n  }\n\n  let x, y;\n  // fill with random colors\n  for (y = 0; y < img.height; y++) {\n    for (x = 0; x < img.width; x++) {\n      let red = random(255);\n      let green = random(255);\n      let blue = random(255);\n      let alpha = 255;\n      writeColor(img, x, y, red, green, blue, alpha);\n    }\n  }\n\n  // draw a red line\n  y = 0;\n  for (x = 0; x < img.width; x++) {\n    writeColor(img, x, y, 255, 0, 0, 255);\n  }\n\n  // draw a green line\n  y = img.height - 1;\n  for (x = 0; x < img.width; x++) {\n    writeColor(img, x, y, 0, 255, 0, 255);\n  }\n\n  img.updatePixels();\n  image(img, 0, 0);\n}\n</code></div>"],
                params: [{
                  name: "width",
                  description: "",
                  type: "Number"
                }, {
                  name: "height",
                  description: "",
                  type: "Number"
                }]
              },
              "p5.PrintWriter": {
                name: "p5.PrintWriter",
                shortname: "p5.PrintWriter",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "IO",
                submodule: "Output",
                namespace: "",
                file: "src/io/files.js",
                line: 1228,
                params: [{
                  name: "filename",
                  description: "",
                  type: "String"
                }, {
                  name: "extension",
                  description: "",
                  type: "String",
                  optional: !0
                }]
              },
              "p5.Table": {
                name: "p5.Table",
                shortname: "p5.Table",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "IO",
                submodule: "Table",
                namespace: "",
                file: "src/io/p5.Table.js",
                line: 35,
                description: '<p><a href="#/p5.Table">Table</a> objects store data with multiple rows and columns, much\nlike in a traditional spreadsheet. Tables can be generated from\nscratch, dynamically, or using data from an existing file.</p>\n',
                is_constructor: 1,
                params: [{
                  name: "rows",
                  description: "<p>An array of p5.TableRow objects</p>\n",
                  type: "p5.TableRow[]",
                  optional: !0
                }]
              },
              "p5.TableRow": {
                name: "p5.TableRow",
                shortname: "p5.TableRow",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "IO",
                submodule: "Table",
                namespace: "",
                file: "src/io/p5.TableRow.js",
                line: 11,
                description: "<p>A TableRow object represents a single row of data values,\nstored in columns, from a table.</p>\n<p>A Table Row contains both an ordered array, and an unordered\nJSON object.</p>\n",
                is_constructor: 1,
                params: [{
                  name: "str",
                  description: "<p>optional: populate the row with a\n                            string of values, separated by the\n                            separator</p>\n",
                  type: "String",
                  optional: !0
                }, {
                  name: "separator",
                  description: "<p>comma separated values (csv) by default</p>\n",
                  type: "String",
                  optional: !0
                }]
              },
              "p5.XML": {
                name: "p5.XML",
                shortname: "p5.XML",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "IO",
                submodule: "XML",
                namespace: "",
                file: "src/io/p5.XML.js",
                line: 11,
                description: '<p>XML is a representation of an XML object, able to parse XML code. Use\n<a href="#/p5/loadXML">loadXML()</a> to load external XML files and create XML objects.</p>\n',
                is_constructor: 1,
                example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let children = xml.getChildren(\'animal\');\n\n  for (let i = 0; i < children.length; i++) {\n    let id = children[i].getNum(\'id\');\n    let coloring = children[i].getString(\'species\');\n    let name = children[i].getContent();\n    print(id + \', \' + coloring + \', \' + name);\n  }\n}\n\n// Sketch prints:\n// 0, Capra hircus, Goat\n// 1, Panthera pardus, Leopard\n// 2, Equus zebra, Zebra\n</code></div>'],
                alt: "no image displayed"
              },
              "p5.Vector": {
                name: "p5.Vector",
                shortname: "p5.Vector",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Math",
                submodule: "Math",
                namespace: "",
                file: "src/math/p5.Vector.js",
                line: 12,
                description: '<p>A class to describe a two or three dimensional vector, specifically\na Euclidean (also known as geometric) vector. A vector is an entity\nthat has both magnitude and direction. The datatype, however, stores\nthe components of the vector (x, y for 2D, and x, y, z for 3D). The magnitude\nand direction can be accessed via the methods <a href="#/p5/mag">mag()</a> and <a href="#/p5/heading">heading()</a>.\n<br><br>\nIn many of the p5.js examples, you will see <a href="#/p5.Vector">p5.Vector</a> used to describe a\nposition, velocity, or acceleration. For example, if you consider a rectangle\nmoving across the screen, at any given instant it has a position (a vector\nthat points from the origin to its location), a velocity (the rate at which\nthe object&#39;s position changes per time unit, expressed as a vector), and\nacceleration (the rate at which the object&#39;s velocity changes per time\nunit, expressed as a vector).\n<br><br>\nSince vectors represent groupings of values, we cannot simply use\ntraditional addition/multiplication/etc. Instead, we&#39;ll need to do some\n&quot;vector&quot; math, which is made easy by the methods inside the <a href="#/p5.Vector">p5.Vector</a> class.</p>\n',
                params: [{
                  name: "x",
                  description: "<p>x component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "y",
                  description: "<p>y component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "z",
                  description: "<p>z component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }],
                example: ["\n<div>\n<code>\nlet v1 = createVector(40, 50);\nlet v2 = createVector(40, 50);\n\nellipse(v1.x, v1.y, 50, 50);\nellipse(v2.x, v2.y, 50, 50);\nv1.add(v2);\nellipse(v1.x, v1.y, 50, 50);\n</code>\n</div>"],
                alt: "2 white ellipses. One center-left the other bottom right and off canvas"
              },
              "p5.Font": {
                name: "p5.Font",
                shortname: "p5.Font",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Typography",
                submodule: "Font",
                namespace: "",
                file: "src/typography/p5.Font.js",
                line: 15,
                description: "<p>Base class for font handling</p>\n",
                params: [{
                  name: "pInst",
                  description: "<p>pointer to p5 instance</p>\n",
                  type: "P5",
                  optional: !0
                }]
              },
              "p5.Camera": {
                name: "p5.Camera",
                shortname: "p5.Camera",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Lights, Camera",
                submodule: "Camera",
                namespace: "",
                file: "src/webgl/p5.Camera.js",
                line: 209,
                description: '<p>This class describes a camera for use in p5&#39;s\n<a href="https://github.com/processing/p5.js/wiki/Getting-started-with-WebGL-in-p5">\nWebGL mode</a>. It contains camera position, orientation, and projection\ninformation necessary for rendering a 3D scene.</p>\n<p>New p5.Camera objects can be made through the\n<a href="#/p5/createCamera">createCamera()</a> function and controlled through\nthe methods described below. A camera created in this way will use a default\nposition in the scene and a default perspective projection until these\nproperties are changed through the various methods available. It is possible\nto create multiple cameras, in which case the current camera\ncan be set through the <a href="#/p5/setCamera">setCamera()</a> method.</p>\n<p>Note:\nThe methods below operate in two coordinate systems: the &#39;world&#39; coordinate\nsystem describe positions in terms of their relationship to the origin along\nthe X, Y and Z axes whereas the camera&#39;s &#39;local&#39; coordinate system\ndescribes positions from the camera&#39;s point of view: left-right, up-down,\nand forward-backward. The <a href="#/p5.Camera/move">move()</a> method,\nfor instance, moves the camera along its own axes, whereas the\n<a href="#/p5.Camera/setPosition">setPosition()</a>\nmethod sets the camera&#39;s position in world-space.</p>\n',
                params: [{
                  name: "rendererGL",
                  description: "<p>instance of WebGL renderer</p>\n",
                  type: "RendererGL"
                }],
                example: ["\n<div>\n<code>\nlet cam;\nlet delta = 0.01;\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n  cam = createCamera();\n  // set initial pan angle\n  cam.pan(-0.8);\n}\n\nfunction draw() {\n  background(200);\n\n  // pan camera according to angle 'delta'\n  cam.pan(delta);\n\n  // every 160 frames, switch direction\n  if (frameCount % 160 === 0) {\n    delta *= -1;\n  }\n\n  rotateX(frameCount * 0.01);\n  translate(-100, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n}\n</code>\n</div>"],
                alt: "camera view pans left and right across a series of rotating 3D boxes."
              },
              "p5.Geometry": {
                name: "p5.Geometry",
                shortname: "p5.Geometry",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Lights, Camera",
                namespace: "",
                file: "src/webgl/p5.Geometry.js",
                line: 6,
                description: "<p>p5 Geometry class</p>\n",
                is_constructor: 1,
                params: [{
                  name: "detailX",
                  description: "<p>number of vertices on horizontal surface</p>\n",
                  type: "Integer",
                  optional: !0
                }, {
                  name: "detailY",
                  description: "<p>number of vertices on horizontal surface</p>\n",
                  type: "Integer",
                  optional: !0
                }, {
                  name: "callback",
                  description: "<p>function to call upon object instantiation.</p>\n",
                  type: "Function",
                  optional: !0
                }]
              },
              "p5.Shader": {
                name: "p5.Shader",
                shortname: "p5.Shader",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "Lights, Camera",
                submodule: "Shaders",
                namespace: "",
                file: "src/webgl/p5.Shader.js",
                line: 13,
                description: "<p>Shader class for WEBGL Mode</p>\n",
                params: [{
                  name: "renderer",
                  description: "<p>an instance of p5.RendererGL that\nwill provide the GL context for this new p5.Shader</p>\n",
                  type: "p5.RendererGL"
                }, {
                  name: "vertSrc",
                  description: "<p>source code for the vertex shader (as a string)</p>\n",
                  type: "String"
                }, {
                  name: "fragSrc",
                  description: "<p>source code for the fragment shader (as a string)</p>\n",
                  type: "String"
                }]
              },
              "p5.MediaElement": {
                name: "p5.MediaElement",
                shortname: "p5.MediaElement",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.dom",
                submodule: "p5.dom",
                namespace: "",
                file: "lib/addons/p5.dom.js",
                line: 2062,
                description: '<p>Extends <a href="#/p5.Element">p5.Element</a> to handle audio and video. In addition to the methods\nof <a href="#/p5.Element">p5.Element</a>, it also contains methods for controlling media. It is not\ncalled directly, but <a href="#/p5.MediaElement">p5.MediaElement</a>s are created by calling <a href="#/p5/createVideo">createVideo</a>,\n<a href="#/p5/createAudio">createAudio</a>, and <a href="#/p5/createCapture">createCapture</a>.</p>\n',
                is_constructor: 1,
                params: [{
                  name: "elt",
                  description: "<p>DOM node that is wrapped</p>\n",
                  type: "String"
                }]
              },
              "p5.File": {
                name: "p5.File",
                shortname: "p5.File",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.dom",
                submodule: "p5.dom",
                namespace: "",
                file: "lib/addons/p5.dom.js",
                line: 3170,
                description: "<p>Base class for a file\nUsing this for createFileInput</p>\n",
                is_constructor: 1,
                params: [{
                  name: "file",
                  description: "<p>File that is wrapped</p>\n",
                  type: "File"
                }]
              },
              "p5.sound": {
                name: "p5.sound",
                shortname: "p5.sound",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: ""
              },
              "p5.SoundFile": {
                name: "p5.SoundFile",
                shortname: "p5.SoundFile",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 1005,
                description: "<p>SoundFile object with a path to a file.</p>\n\n<p>The p5.SoundFile may not be available immediately because\nit loads the file information asynchronously.</p>\n\n<p>To do something with the sound as soon as it loads\npass the name of a function as the second parameter.</p>\n\n<p>Only one file path is required. However, audio file formats\n(i.e. mp3, ogg, wav and m4a/aac) are not supported by all\nweb browsers. If you want to ensure compatability, instead of a single\nfile path, you may include an Array of filepaths, and the browser will\nchoose a format that works.</p>",
                is_constructor: 1,
                params: [{
                  name: "path",
                  description: "<p>path to a sound file (String). Optionally,\n                             you may include multiple file formats in\n                             an array. Alternately, accepts an object\n                             from the HTML5 File API, or a p5.File.</p>\n",
                  type: "String|Array"
                }, {
                  name: "successCallback",
                  description: "<p>Name of a function to call once file loads</p>\n",
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "<p>Name of a function to call if file fails to\n                                    load. This function will receive an error or\n                                   XMLHttpRequest object with information\n                                   about what went wrong.</p>\n",
                  type: "Function",
                  optional: !0
                }, {
                  name: "whileLoadingCallback",
                  description: "<p>Name of a function to call while file\n                                           is loading. That function will\n                                           receive progress of the request to\n                                           load the sound file\n                                           (between 0 and 1) as its first\n                                           parameter. This progress\n                                           does not account for the additional\n                                           time needed to decode the audio data.</p>\n",
                  type: "Function",
                  optional: !0
                }],
                example: ["\n<div><code>\n\nfunction preload() {\n  soundFormats('mp3', 'ogg');\n  mySound = loadSound('assets/doorbell.mp3');\n}\n\nfunction setup() {\n  mySound.setVolume(0.1);\n  mySound.play();\n}\n\n </code></div>"]
              },
              "p5.Amplitude": {
                name: "p5.Amplitude",
                shortname: "p5.Amplitude",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 2533,
                description: "<p>Amplitude measures volume between 0.0 and 1.0.\nListens to all p5sound by default, or use setInput()\nto listen to a specific sound source. Accepts an optional\nsmoothing value, which defaults to 0.</p>\n",
                is_constructor: 1,
                params: [{
                  name: "smoothing",
                  description: "<p>between 0.0 and .999 to smooth\n                           amplitude readings (defaults to 0)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar sound, amplitude, cnv;\n\nfunction preload(){\n  sound = loadSound('assets/beat.mp3');\n}\nfunction setup() {\n  cnv = createCanvas(100,100);\n  amplitude = new p5.Amplitude();\n\n  // start / stop the sound when canvas is clicked\n  cnv.mouseClicked(function() {\n    if (sound.isPlaying() ){\n      sound.stop();\n    } else {\n      sound.play();\n    }\n  });\n}\nfunction draw() {\n  background(0);\n  fill(255);\n  var level = amplitude.getLevel();\n  var size = map(level, 0, 1, 0, 200);\n  ellipse(width/2, height/2, size, size);\n}\n\n</code></div>"]
              },
              "p5.FFT": {
                name: "p5.FFT",
                shortname: "p5.FFT",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 2812,
                description: '<p>FFT (Fast Fourier Transform) is an analysis algorithm that\nisolates individual\n<a href="https://en.wikipedia.org/wiki/Audio_frequency">\naudio frequencies</a> within a waveform.</p>\n\n<p>Once instantiated, a p5.FFT object can return an array based on\ntwo types of analyses: <br> • <code>FFT.waveform()</code> computes\namplitude values along the time domain. The array indices correspond\nto samples across a brief moment in time. Each value represents\namplitude of the waveform at that sample of time.<br>\n• <code>FFT.analyze() </code> computes amplitude values along the\nfrequency domain. The array indices correspond to frequencies (i.e.\npitches), from the lowest to the highest that humans can hear. Each\nvalue represents amplitude at that slice of the frequency spectrum.\nUse with <code>getEnergy()</code> to measure amplitude at specific\nfrequencies, or within a range of frequencies. </p>\n\n<p>FFT analyzes a very short snapshot of sound called a sample\nbuffer. It returns an array of amplitude measurements, referred\nto as <code>bins</code>. The array is 1024 bins long by default.\nYou can change the bin array length, but it must be a power of 2\nbetween 16 and 1024 in order for the FFT algorithm to function\ncorrectly. The actual size of the FFT buffer is twice the\nnumber of bins, so given a standard sample rate, the buffer is\n2048/44100 seconds long.</p>',
                is_constructor: 1,
                params: [{
                  name: "smoothing",
                  description: "<p>Smooth results of Freq Spectrum.\n                              0.0 &lt; smoothing &lt; 1.0.\n                              Defaults to 0.8.</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "bins",
                  description: "<p>Length of resulting array.\n                          Must be a power of two between\n                          16 and 1024. Defaults to 1024.</p>\n",
                  type: "Number",
                  optional: !0
                }],
                example: ["\n<div><code>\nfunction preload(){\n  sound = loadSound('assets/Damscray_DancingTiger.mp3');\n}\n\nfunction setup(){\n  var cnv = createCanvas(100,100);\n  cnv.mouseClicked(togglePlay);\n  fft = new p5.FFT();\n  sound.amp(0.2);\n}\n\nfunction draw(){\n  background(0);\n\n  var spectrum = fft.analyze();\n  noStroke();\n  fill(0,255,0); // spectrum is green\n  for (var i = 0; i< spectrum.length; i++){\n    var x = map(i, 0, spectrum.length, 0, width);\n    var h = -height + map(spectrum[i], 0, 255, height, 0);\n    rect(x, height, width / spectrum.length, h )\n  }\n\n  var waveform = fft.waveform();\n  noFill();\n  beginShape();\n  stroke(255,0,0); // waveform is red\n  strokeWeight(1);\n  for (var i = 0; i< waveform.length; i++){\n    var x = map(i, 0, waveform.length, 0, width);\n    var y = map( waveform[i], -1, 1, 0, height);\n    vertex(x,y);\n  }\n  endShape();\n\n  text('click to play/pause', 4, 10);\n}\n\n// fade sound if mouse is over canvas\nfunction togglePlay() {\n  if (sound.isPlaying()) {\n    sound.pause();\n  } else {\n    sound.loop();\n  }\n}\n</code></div>"]
              },
              "p5.Signal": {
                name: "p5.Signal",
                shortname: "p5.Signal",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 5215,
                description: "<p>p5.Signal is a constant audio-rate signal used by p5.Oscillator\nand p5.Envelope for modulation math.</p>\n\n<p>This is necessary because Web Audio is processed on a seprate clock.\nFor example, the p5 draw loop runs about 60 times per second. But\nthe audio clock must process samples 44100 times per second. If we\nwant to add a value to each of those samples, we can&#39;t do it in the\ndraw loop, but we can do it by adding a constant-rate audio signal.&lt;/p.\n\n<p>This class mostly functions behind the scenes in p5.sound, and returns\na Tone.Signal from the Tone.js library by Yotam Mann.\nIf you want to work directly with audio signals for modular\nsynthesis, check out\n<a href='http://bit.ly/1oIoEng' target=_'blank'>tone.js.</a></p>",
                is_constructor: 1,
                return: {
                  description: "A Signal object from the Tone.js library",
                  type: "Tone.Signal"
                },
                example: ["\n<div><code>\nfunction setup() {\n  carrier = new p5.Oscillator('sine');\n  carrier.amp(1); // set amplitude\n  carrier.freq(220); // set frequency\n  carrier.start(); // start oscillating\n\n  modulator = new p5.Oscillator('sawtooth');\n  modulator.disconnect();\n  modulator.amp(1);\n  modulator.freq(4);\n  modulator.start();\n\n  // Modulator's default amplitude range is -1 to 1.\n  // Multiply it by -200, so the range is -200 to 200\n  // then add 220 so the range is 20 to 420\n  carrier.freq( modulator.mult(-200).add(220) );\n}\n</code></div>"]
              },
              "p5.Oscillator": {
                name: "p5.Oscillator",
                shortname: "p5.Oscillator",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 5361,
                description: '<p>Creates a signal that oscillates between -1.0 and 1.0.\nBy default, the oscillation takes the form of a sinusoidal\nshape (&#39;sine&#39;). Additional types include &#39;triangle&#39;,\n&#39;sawtooth&#39; and &#39;square&#39;. The frequency defaults to\n440 oscillations per second (440Hz, equal to the pitch of an\n&#39;A&#39; note).</p>\n\n<p>Set the type of oscillation with setType(), or by instantiating a\nspecific oscillator: <a href="/reference/#/p5.SinOsc">p5.SinOsc</a>, <a\nhref="/reference/#/p5.TriOsc">p5.TriOsc</a>, <a\nhref="/reference/#/p5.SqrOsc">p5.SqrOsc</a>, or <a\nhref="/reference/#/p5.SawOsc">p5.SawOsc</a>.\n</p>',
                is_constructor: 1,
                params: [{
                  name: "freq",
                  description: "<p>frequency defaults to 440Hz</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "type",
                  description: "<p>type of oscillator. Options:\n                       &#39;sine&#39; (default), &#39;triangle&#39;,\n                       &#39;sawtooth&#39;, &#39;square&#39;</p>\n",
                  type: "String",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar osc;\nvar playing = false;\n\nfunction setup() {\n  backgroundColor = color(255,0,255);\n  textAlign(CENTER);\n\n  osc = new p5.Oscillator();\n  osc.setType('sine');\n  osc.freq(240);\n  osc.amp(0);\n  osc.start();\n}\n\nfunction draw() {\n  background(backgroundColor)\n  text('click to play', width/2, height/2);\n}\n\nfunction mouseClicked() {\n  if (mouseX > 0 && mouseX < width && mouseY < height && mouseY > 0) {\n    if (!playing) {\n      // ramp amplitude to 0.5 over 0.05 seconds\n      osc.amp(0.5, 0.05);\n      playing = true;\n      backgroundColor = color(0,255,255);\n    } else {\n      // ramp amplitude to 0 over 0.5 seconds\n      osc.amp(0, 0.5);\n      playing = false;\n      backgroundColor = color(255,0,255);\n    }\n  }\n}\n</code> </div>"]
              },
              "p5.SinOsc": {
                name: "p5.SinOsc",
                shortname: "p5.SinOsc",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 5802,
                description: "<p>Constructor: <code>new p5.SinOsc()</code>.\nThis creates a Sine Wave Oscillator and is\nequivalent to <code> new p5.Oscillator(&#39;sine&#39;)\n</code> or creating a p5.Oscillator and then calling\nits method <code>setType(&#39;sine&#39;)</code>.\nSee p5.Oscillator for methods.</p>\n",
                is_constructor: 1,
                extends: "p5.Oscillator",
                params: [{
                  name: "freq",
                  description: "<p>Set the frequency</p>\n",
                  type: "Number",
                  optional: !0
                }]
              },
              "p5.TriOsc": {
                name: "p5.TriOsc",
                shortname: "p5.TriOsc",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 5819,
                description: "<p>Constructor: <code>new p5.TriOsc()</code>.\nThis creates a Triangle Wave Oscillator and is\nequivalent to <code>new p5.Oscillator(&#39;triangle&#39;)\n</code> or creating a p5.Oscillator and then calling\nits method <code>setType(&#39;triangle&#39;)</code>.\nSee p5.Oscillator for methods.</p>\n",
                is_constructor: 1,
                extends: "p5.Oscillator",
                params: [{
                  name: "freq",
                  description: "<p>Set the frequency</p>\n",
                  type: "Number",
                  optional: !0
                }]
              },
              "p5.SawOsc": {
                name: "p5.SawOsc",
                shortname: "p5.SawOsc",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 5836,
                description: "<p>Constructor: <code>new p5.SawOsc()</code>.\nThis creates a SawTooth Wave Oscillator and is\nequivalent to <code> new p5.Oscillator(&#39;sawtooth&#39;)\n</code> or creating a p5.Oscillator and then calling\nits method <code>setType(&#39;sawtooth&#39;)</code>.\nSee p5.Oscillator for methods.</p>\n",
                is_constructor: 1,
                extends: "p5.Oscillator",
                params: [{
                  name: "freq",
                  description: "<p>Set the frequency</p>\n",
                  type: "Number",
                  optional: !0
                }]
              },
              "p5.SqrOsc": {
                name: "p5.SqrOsc",
                shortname: "p5.SqrOsc",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 5853,
                description: "<p>Constructor: <code>new p5.SqrOsc()</code>.\nThis creates a Square Wave Oscillator and is\nequivalent to <code> new p5.Oscillator(&#39;square&#39;)\n</code> or creating a p5.Oscillator and then calling\nits method <code>setType(&#39;square&#39;)</code>.\nSee p5.Oscillator for methods.</p>\n",
                is_constructor: 1,
                extends: "p5.Oscillator",
                params: [{
                  name: "freq",
                  description: "<p>Set the frequency</p>\n",
                  type: "Number",
                  optional: !0
                }]
              },
              "p5.Envelope": {
                name: "p5.Envelope",
                shortname: "p5.Envelope",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 6310,
                description: '<p>Envelopes are pre-defined amplitude distribution over time.\nTypically, envelopes are used to control the output volume\nof an object, a series of fades referred to as Attack, Decay,\nSustain and Release (\n<a href="https://upload.wikimedia.org/wikipedia/commons/e/ea/ADSR_parameter.svg">ADSR</a>\n). Envelopes can also control other Web Audio Parameters—for example, a p5.Envelope can\ncontrol an Oscillator&#39;s frequency like this: <code>osc.freq(env)</code>.</p>\n<p>Use <code><a href="#/p5.Envelope/setRange">setRange</a></code> to change the attack/release level.\nUse <code><a href="#/p5.Envelope/setADSR">setADSR</a></code> to change attackTime, decayTime, sustainPercent and releaseTime.</p>\n<p>Use the <code><a href="#/p5.Envelope/play">play</a></code> method to play the entire envelope,\nthe <code><a href="#/p5.Envelope/ramp">ramp</a></code> method for a pingable trigger,\nor <code><a href="#/p5.Envelope/triggerAttack">triggerAttack</a></code>/\n<code><a href="#/p5.Envelope/triggerRelease">triggerRelease</a></code> to trigger noteOn/noteOff.</p>',
                is_constructor: 1,
                example: ["\n<div><code>\nvar attackLevel = 1.0;\nvar releaseLevel = 0;\n\nvar attackTime = 0.001;\nvar decayTime = 0.2;\nvar susPercent = 0.2;\nvar releaseTime = 0.5;\n\nvar env, triOsc;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  env = new p5.Envelope();\n  env.setADSR(attackTime, decayTime, susPercent, releaseTime);\n  env.setRange(attackLevel, releaseLevel);\n\n  triOsc = new p5.Oscillator('triangle');\n  triOsc.amp(env);\n  triOsc.start();\n  triOsc.freq(220);\n\n  cnv.mousePressed(playEnv);\n}\n\nfunction playEnv()  {\n  env.play();\n}\n</code></div>"]
              },
              "p5.Pulse": {
                name: "p5.Pulse",
                shortname: "p5.Pulse",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 7108,
                description: '<p>Creates a Pulse object, an oscillator that implements\nPulse Width Modulation.\nThe pulse is created with two oscillators.\nAccepts a parameter for frequency, and to set the\nwidth between the pulses. See <a href="\nhttp://p5js.org/reference/#/p5.Oscillator">\n<code>p5.Oscillator</code> for a full list of methods.</p>\n',
                extends: "p5.Oscillator",
                is_constructor: 1,
                params: [{
                  name: "freq",
                  description: "<p>Frequency in oscillations per second (Hz)</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "w",
                  description: "<p>Width between the pulses (0 to 1.0,\n                       defaults to 0)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar pulse;\nfunction setup() {\n  background(0);\n\n  // Create and start the pulse wave oscillator\n  pulse = new p5.Pulse();\n  pulse.amp(0.5);\n  pulse.freq(220);\n  pulse.start();\n}\n\nfunction draw() {\n  var w = map(mouseX, 0, width, 0, 1);\n  w = constrain(w, 0, 1);\n  pulse.width(w)\n}\n</code></div>"]
              },
              "p5.Noise": {
                name: "p5.Noise",
                shortname: "p5.Noise",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 7287,
                description: "<p>Noise is a type of oscillator that generates a buffer with random values.</p>\n",
                extends: "p5.Oscillator",
                is_constructor: 1,
                params: [{
                  name: "type",
                  description: "<p>Type of noise can be &#39;white&#39; (default),\n                     &#39;brown&#39; or &#39;pink&#39;.</p>\n",
                  type: "String"
                }]
              },
              "p5.AudioIn": {
                name: "p5.AudioIn",
                shortname: "p5.AudioIn",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 7435,
                description: '<p>Get audio from an input, i.e. your computer&#39;s microphone.</p>\n\n<p>Turn the mic on/off with the start() and stop() methods. When the mic\nis on, its volume can be measured with getLevel or by connecting an\nFFT object.</p>\n\n<p>If you want to hear the AudioIn, use the .connect() method.\nAudioIn does not connect to p5.sound output by default to prevent\nfeedback.</p>\n\n<p><em>Note: This uses the <a href="http://caniuse.com/stream">getUserMedia/\nStream</a> API, which is not supported by certain browsers. Access in Chrome browser\nis limited to localhost and https, but access over http may be limited.</em></p>',
                is_constructor: 1,
                params: [{
                  name: "errorCallback",
                  description: "<p>A function to call if there is an error\n                                  accessing the AudioIn. For example,\n                                  Safari and iOS devices do not\n                                  currently allow microphone access.</p>\n",
                  type: "Function",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar mic;\nfunction setup(){\n  mic = new p5.AudioIn()\n  mic.start();\n}\nfunction draw(){\n  background(0);\n  micLevel = mic.getLevel();\n  ellipse(width/2, constrain(height-micLevel*height*5, 0, height), 10, 10);\n}\n</code></div>"]
              },
              "p5.Effect": {
                name: "p5.Effect",
                shortname: "p5.Effect",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 8351,
                description: '<p>Effect is a base class for audio effects in p5. <br>\nThis module handles the nodes and methods that are \ncommon and useful for current and future effects.</p>\n<p>This class is extended by <a href="/reference/#/p5.Distortion">p5.Distortion</a>, \n<a href="/reference/#/p5.Compressor">p5.Compressor</a>,\n<a href="/reference/#/p5.Delay">p5.Delay</a>, \n<a href="/reference/#/p5.Filter">p5.Filter</a>, \n<a href="/reference/#/p5.Reverb">p5.Reverb</a>.</p>\n',
                is_constructor: 1,
                params: [{
                  name: "ac",
                  description: "<p>Reference to the audio context of the p5 object</p>\n",
                  type: "Object",
                  optional: !0
                }, {
                  name: "input",
                  description: "<p>Gain Node effect wrapper</p>\n",
                  type: "AudioNode",
                  optional: !0
                }, {
                  name: "output",
                  description: "<p>Gain Node effect wrapper</p>\n",
                  type: "AudioNode",
                  optional: !0
                }, {
                  name: "_drywet",
                  description: "<p>Tone.JS CrossFade node (defaults to value: 1)</p>\n",
                  type: "Object",
                  optional: !0
                }, {
                  name: "wet",
                  description: "<p>Effects that extend this class should connect\n                             to the wet signal to this gain node, so that dry and wet \n                             signals are mixed properly.</p>\n",
                  type: "AudioNode",
                  optional: !0
                }]
              },
              "p5.Filter": {
                name: "p5.Filter",
                shortname: "p5.Filter",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 8493,
                description: '<p><p>A p5.Filter uses a Web Audio Biquad Filter to filter\nthe frequency response of an input source. Subclasses\ninclude:</p></p>\n<ul>\n<li><a href="/reference/#/p5.LowPass"><code>p5.LowPass</code></a>:\nAllows frequencies below the cutoff frequency to pass through,\nand attenuates frequencies above the cutoff.<br/></li>\n<li><a href="/reference/#/p5.HighPass"><code>p5.HighPass</code></a>:\nThe opposite of a lowpass filter. <br/></li>\n<li><a href="/reference/#/p5.BandPass"><code>p5.BandPass</code></a>:\nAllows a range of frequencies to pass through and attenuates\nthe frequencies below and above this frequency range.<br/></li>\n</ul>\n<p>The <code>.res()</code> method controls either width of the\nbandpass, or resonance of the low/highpass cutoff frequency.</p>\n<p>This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.<br>Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>, \n<a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and \n<a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.</p>\n',
                extends: "p5.Effect",
                is_constructor: 1,
                params: [{
                  name: "type",
                  description: "<p>&#39;lowpass&#39; (default), &#39;highpass&#39;, &#39;bandpass&#39;</p>\n",
                  type: "String",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar fft, noise, filter;\n\nfunction setup() {\n  fill(255, 40, 255);\n\n  filter = new p5.BandPass();\n\n  noise = new p5.Noise();\n  // disconnect unfiltered noise,\n  // and connect to filter\n  noise.disconnect();\n  noise.connect(filter);\n  noise.start();\n\n  fft = new p5.FFT();\n}\n\nfunction draw() {\n  background(30);\n\n  // set the BandPass frequency based on mouseX\n  var freq = map(mouseX, 0, width, 20, 10000);\n  filter.freq(freq);\n  // give the filter a narrow band (lower res = wider bandpass)\n  filter.res(50);\n\n  // draw filtered spectrum\n  var spectrum = fft.analyze();\n  noStroke();\n  for (var i = 0; i < spectrum.length; i++) {\n    var x = map(i, 0, spectrum.length, 0, width);\n    var h = -height + map(spectrum[i], 0, 255, height, 0);\n    rect(x, height, width/spectrum.length, h);\n  }\n\n  isMouseOverCanvas();\n}\n\nfunction isMouseOverCanvas() {\n  var mX = mouseX, mY = mouseY;\n  if (mX > 0 && mX < width && mY < height && mY > 0) {\n    noise.amp(0.5, 0.2);\n  } else {\n    noise.amp(0, 0.2);\n  }\n}\n</code></div>"]
              },
              "p5.LowPass": {
                name: "p5.LowPass",
                shortname: "p5.LowPass",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 8724,
                description: "<p>Constructor: <code>new p5.LowPass()</code> Filter.\nThis is the same as creating a p5.Filter and then calling\nits method <code>setType(&#39;lowpass&#39;)</code>.\nSee p5.Filter for methods.</p>\n",
                is_constructor: 1,
                extends: "p5.Filter"
              },
              "p5.HighPass": {
                name: "p5.HighPass",
                shortname: "p5.HighPass",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 8738,
                description: "<p>Constructor: <code>new p5.HighPass()</code> Filter.\nThis is the same as creating a p5.Filter and then calling\nits method <code>setType(&#39;highpass&#39;)</code>.\nSee p5.Filter for methods.</p>\n",
                is_constructor: 1,
                extends: "p5.Filter"
              },
              "p5.BandPass": {
                name: "p5.BandPass",
                shortname: "p5.BandPass",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 8752,
                description: "<p>Constructor: <code>new p5.BandPass()</code> Filter.\nThis is the same as creating a p5.Filter and then calling\nits method <code>setType(&#39;bandpass&#39;)</code>.\nSee p5.Filter for methods.</p>\n",
                is_constructor: 1,
                extends: "p5.Filter"
              },
              "p5.EQ": {
                name: "p5.EQ",
                shortname: "p5.EQ",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 8823,
                description: '<p>p5.EQ is an audio effect that performs the function of a multiband\naudio equalizer. Equalization is used to adjust the balance of\nfrequency compoenents of an audio signal. This process is commonly used\nin sound production and recording to change the waveform before it reaches\na sound output device. EQ can also be used as an audio effect to create\ninteresting distortions by filtering out parts of the spectrum. p5.EQ is\nbuilt using a chain of Web Audio Biquad Filter Nodes and can be\ninstantiated with 3 or 8 bands. Bands can be added or removed from\nthe EQ by directly modifying p5.EQ.bands (the array that stores filters).</p>\n<p>This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.\nMethods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,\n<a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and\n<a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.</p>\n',
                is_constructor: 1,
                extends: "p5.Effect",
                params: [{
                  name: "_eqsize",
                  description: "<p>Constructor will accept 3 or 8, defaults to 3</p>\n",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "p5.EQ object",
                  type: "Object"
                },
                example: ["\n<div><code>\nvar eq;\nvar band_names;\nvar band_index;\n\nvar soundFile, play;\n\nfunction preload() {\n  soundFormats('mp3', 'ogg');\n  soundFile = loadSound('assets/beat');\n}\n\nfunction setup() {\n  eq = new p5.EQ(3);\n  soundFile.disconnect();\n  eq.process(soundFile);\n\n  band_names = ['lows','mids','highs'];\n  band_index = 0;\n  play = false;\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  background(30);\n  noStroke();\n  fill(255);\n  text('click to kill',50,25);\n\n  fill(255, 40, 255);\n  textSize(26);\n  text(band_names[band_index],50,55);\n\n  fill(255);\n  textSize(9);\n  text('space = play/pause',50,80);\n}\n\n//If mouse is over canvas, cycle to the next band and kill the frequency\nfunction mouseClicked() {\n  for (var i = 0; i < eq.bands.length; i++) {\n    eq.bands[i].gain(0);\n  }\n  eq.bands[band_index].gain(-40);\n  if (mouseX > 0 && mouseX < width && mouseY < height && mouseY > 0) {\n    band_index === 2 ? band_index = 0 : band_index++;\n  }\n}\n\n//use space bar to trigger play / pause\nfunction keyPressed() {\n  if (key===' ') {\n    play = !play\n    play ? soundFile.loop() : soundFile.pause();\n  }\n}\n</code></div>"]
              },
              "p5.Panner3D": {
                name: "p5.Panner3D",
                shortname: "p5.Panner3D",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 9015,
                description: '<p>Panner3D is based on the <a title="Web Audio Panner docs"  href=\n"https://developer.mozilla.org/en-US/docs/Web/API/PannerNode">\nWeb Audio Spatial Panner Node</a>.\nThis panner is a spatial processing node that allows audio to be positioned\nand oriented in 3D space.</p>\n<p>The position is relative to an <a title="Web Audio Listener docs" href=\n"https://developer.mozilla.org/en-US/docs/Web/API/AudioListener">\nAudio Context Listener</a>, which can be accessed\nby <code>p5.soundOut.audiocontext.listener</code></p>\n',
                is_constructor: 1
              },
              "p5.Delay": {
                name: "p5.Delay",
                shortname: "p5.Delay",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 9466,
                description: '<p>Delay is an echo effect. It processes an existing sound source,\nand outputs a delayed version of that sound. The p5.Delay can\nproduce different effects depending on the delayTime, feedback,\nfilter, and type. In the example below, a feedback of 0.5 (the\ndefaul value) will produce a looping delay that decreases in\nvolume by 50% each repeat. A filter will cut out the high\nfrequencies so that the delay does not sound as piercing as the\noriginal source.</p>\n<p>This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.<br>Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>, \n<a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and \n<a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.</p>\n',
                extends: "p5.Effect",
                is_constructor: 1,
                example: ["\n<div><code>\nvar noise, env, delay;\n\nfunction setup() {\n  background(0);\n  noStroke();\n  fill(255);\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  noise = new p5.Noise('brown');\n  noise.amp(0);\n  noise.start();\n\n  delay = new p5.Delay();\n\n  // delay.process() accepts 4 parameters:\n  // source, delayTime, feedback, filter frequency\n  // play with these numbers!!\n  delay.process(noise, .12, .7, 2300);\n\n  // play the noise with an envelope,\n  // a series of fades ( time / value pairs )\n  env = new p5.Envelope(.01, 0.2, .2, .1);\n}\n\n// mouseClick triggers envelope\nfunction mouseClicked() {\n  // is mouse over canvas?\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    env.play(noise);\n  }\n}\n</code></div>"]
              },
              "p5.Reverb": {
                name: "p5.Reverb",
                shortname: "p5.Reverb",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 9743,
                description: '<p>Reverb adds depth to a sound through a large number of decaying\nechoes. It creates the perception that sound is occurring in a\nphysical space. The p5.Reverb has paramters for Time (how long does the\nreverb last) and decayRate (how much the sound decays with each echo)\nthat can be set with the .set() or .process() methods. The p5.Convolver\nextends p5.Reverb allowing you to recreate the sound of actual physical\nspaces through convolution.</p>\n<p>This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.\nMethods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>,\n<a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and\n<a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.</p>\n',
                extends: "p5.Effect",
                is_constructor: 1,
                example: ["\n<div><code>\nvar soundFile, reverb;\nfunction preload() {\n  soundFile = loadSound('assets/Damscray_DancingTiger.mp3');\n}\n\nfunction setup() {\n  reverb = new p5.Reverb();\n  soundFile.disconnect(); // so we'll only hear reverb...\n\n  // connect soundFile to reverb, process w/\n  // 3 second reverbTime, decayRate of 2%\n  reverb.process(soundFile, 3, 2);\n  soundFile.play();\n}\n</code></div>"]
              },
              "p5.Convolver": {
                name: "p5.Convolver",
                shortname: "p5.Convolver",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 9914,
                description: '<p>p5.Convolver extends p5.Reverb. It can emulate the sound of real\nphysical spaces through a process called <a href="\nhttps://en.wikipedia.org/wiki/Convolution_reverb#Real_space_simulation">\nconvolution</a>.</p>\n\n<p>Convolution multiplies any audio input by an &quot;impulse response&quot;\nto simulate the dispersion of sound over time. The impulse response is\ngenerated from an audio file that you provide. One way to\ngenerate an impulse response is to pop a balloon in a reverberant space\nand record the echo. Convolution can also be used to experiment with\nsound.</p>\n\n<p>Use the method <code>createConvolution(path)</code> to instantiate a\np5.Convolver with a path to your impulse response audio file.</p>',
                extends: "p5.Effect",
                is_constructor: 1,
                params: [{
                  name: "path",
                  description: "<p>path to a sound file</p>\n",
                  type: "String"
                }, {
                  name: "callback",
                  description: "<p>function to call when loading succeeds</p>\n",
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "<p>function to call if loading fails.\n                                   This function will receive an error or\n                                   XMLHttpRequest object with information\n                                   about what went wrong.</p>\n",
                  type: "Function",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar cVerb, sound;\nfunction preload() {\n  // We have both MP3 and OGG versions of all sound assets\n  soundFormats('ogg', 'mp3');\n\n  // Try replacing 'bx-spring' with other soundfiles like\n  // 'concrete-tunnel' 'small-plate' 'drum' 'beatbox'\n  cVerb = createConvolver('assets/bx-spring.mp3');\n\n  // Try replacing 'Damscray_DancingTiger' with\n  // 'beat', 'doorbell', lucky_dragons_-_power_melody'\n  sound = loadSound('assets/Damscray_DancingTiger.mp3');\n}\n\nfunction setup() {\n  // disconnect from master output...\n  sound.disconnect();\n\n  // ...and process with cVerb\n  // so that we only hear the convolution\n  cVerb.process(sound);\n\n  sound.play();\n}\n</code></div>"]
              },
              "p5.Phrase": {
                name: "p5.Phrase",
                shortname: "p5.Phrase",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 10470,
                description: "<p>A phrase is a pattern of musical events over time, i.e.\na series of notes and rests.</p>\n\n<p>Phrases must be added to a p5.Part for playback, and\neach part can play multiple phrases at the same time.\nFor example, one Phrase might be a kick drum, another\ncould be a snare, and another could be the bassline.</p>\n\n<p>The first parameter is a name so that the phrase can be\nmodified or deleted later. The callback is a a function that\nthis phrase will call at every step—for example it might be\ncalled <code>playNote(value){}</code>. The array determines\nwhich value is passed into the callback at each step of the\nphrase. It can be numbers, an object with multiple numbers,\nor a zero (0) indicates a rest so the callback won&#39;t be called).</p>",
                is_constructor: 1,
                params: [{
                  name: "name",
                  description: "<p>Name so that you can access the Phrase.</p>\n",
                  type: "String"
                }, {
                  name: "callback",
                  description: "<p>The name of a function that this phrase\n                           will call. Typically it will play a sound,\n                           and accept two parameters: a time at which\n                           to play the sound (in seconds from now),\n                           and a value from the sequence array. The\n                           time should be passed into the play() or\n                           start() method to ensure precision.</p>\n",
                  type: "Function"
                }, {
                  name: "sequence",
                  description: "<p>Array of values to pass into the callback\n                          at each step of the phrase.</p>\n",
                  type: "Array"
                }],
                example: ["\n<div><code>\nvar mySound, myPhrase, myPart;\nvar pattern = [1,0,0,2,0,2,0,0];\nvar msg = 'click to play';\n\nfunction preload() {\n  mySound = loadSound('assets/beatbox.mp3');\n}\n\nfunction setup() {\n  noStroke();\n  fill(255);\n  textAlign(CENTER);\n  masterVolume(0.1);\n\n  myPhrase = new p5.Phrase('bbox', makeSound, pattern);\n  myPart = new p5.Part();\n  myPart.addPhrase(myPhrase);\n  myPart.setBPM(60);\n}\n\nfunction draw() {\n  background(0);\n  text(msg, width/2, height/2);\n}\n\nfunction makeSound(time, playbackRate) {\n  mySound.rate(playbackRate);\n  mySound.play(time);\n}\n\nfunction mouseClicked() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    myPart.start();\n    msg = 'playing pattern';\n  }\n}\n\n</code></div>"]
              },
              "p5.Part": {
                name: "p5.Part",
                shortname: "p5.Part",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 10555,
                description: "<p>A p5.Part plays back one or more p5.Phrases. Instantiate a part\nwith steps and tatums. By default, each step represents a 1/16th note.</p>\n\n<p>See p5.Phrase for more about musical timing.</p>",
                is_constructor: 1,
                params: [{
                  name: "steps",
                  description: "<p>Steps in the part</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "tatums",
                  description: "<p>Divisions of a beat, e.g. use 1/4, or 0.25 for a quater note (default is 1/16, a sixteenth note)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar box, drum, myPart;\nvar boxPat = [1,0,0,2,0,2,0,0];\nvar drumPat = [0,1,1,0,2,0,1,0];\nvar msg = 'click to play';\n\nfunction preload() {\n  box = loadSound('assets/beatbox.mp3');\n  drum = loadSound('assets/drum.mp3');\n}\n\nfunction setup() {\n  noStroke();\n  fill(255);\n  textAlign(CENTER);\n  masterVolume(0.1);\n\n  var boxPhrase = new p5.Phrase('box', playBox, boxPat);\n  var drumPhrase = new p5.Phrase('drum', playDrum, drumPat);\n  myPart = new p5.Part();\n  myPart.addPhrase(boxPhrase);\n  myPart.addPhrase(drumPhrase);\n  myPart.setBPM(60);\n  masterVolume(0.1);\n}\n\nfunction draw() {\n  background(0);\n  text(msg, width/2, height/2);\n}\n\nfunction playBox(time, playbackRate) {\n  box.rate(playbackRate);\n  box.play(time);\n}\n\nfunction playDrum(time, playbackRate) {\n  drum.rate(playbackRate);\n  drum.play(time);\n}\n\nfunction mouseClicked() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    myPart.start();\n    msg = 'playing part';\n  }\n}\n</code></div>"]
              },
              "p5.Score": {
                name: "p5.Score",
                shortname: "p5.Score",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 10808,
                description: "<p>A Score consists of a series of Parts. The parts will\nbe played back in order. For example, you could have an\nA part, a B part, and a C part, and play them back in this order\n<code>new p5.Score(a, a, b, a, c)</code></p>\n",
                is_constructor: 1,
                params: [{
                  name: "parts",
                  description: "<p>One or multiple parts, to be played in sequence.</p>\n",
                  type: "p5.Part",
                  optional: !0,
                  multiple: !0
                }]
              },
              "p5.SoundLoop": {
                name: "p5.SoundLoop",
                shortname: "p5.SoundLoop",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 10939,
                description: "<p>SoundLoop</p>\n",
                is_constructor: 1,
                params: [{
                  name: "callback",
                  description: "<p>this function will be called on each iteration of theloop</p>\n",
                  type: "Function"
                }, {
                  name: "interval",
                  description: "<p>amount of time or beats for each iteration of the loop\n                                      defaults to 1</p>\n",
                  type: "Number|String",
                  optional: !0
                }],
                example: ["\n<div><code>\nvar click;\nvar looper1;\n\nfunction preload() {\n  click = loadSound('assets/drum.mp3');\n}\n\nfunction setup() {\n  //the looper's callback is passed the timeFromNow\n  //this value should be used as a reference point from \n  //which to schedule sounds \n  looper1 = new p5.SoundLoop(function(timeFromNow){\n    click.play(timeFromNow);\n    background(255 * (looper1.iterations % 2));\n    }, 2);\n\n  //stop after 10 iteratios;\n  looper1.maxIterations = 10;\n  //start the loop\n  looper1.start();\n}\n</code></div>"]
              },
              "p5.Compressor": {
                name: "p5.Compressor",
                shortname: "p5.Compressor",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 11199,
                description: '<p>Compressor is an audio effect class that performs dynamics compression\non an audio input source. This is a very commonly used technique in music\nand sound production. Compression creates an overall louder, richer, \nand fuller sound by lowering the volume of louds and raising that of softs.\nCompression can be used to avoid clipping (sound distortion due to \npeaks in volume) and is especially useful when many sounds are played \nat once. Compression can be used on indivudal sound sources in addition\nto the master output.  </p>\n<p>This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.<br>Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>, \n<a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and \n<a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.</p>\n',
                is_constructor: 1,
                extends: "p5.Effect"
              },
              "p5.SoundRecorder": {
                name: "p5.SoundRecorder",
                shortname: "p5.SoundRecorder",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 11411,
                description: "<p>Record sounds for playback and/or to save as a .wav file.\nThe p5.SoundRecorder records all sound output from your sketch,\nor can be assigned a specific source with setInput().</p>\n<p>The record() method accepts a p5.SoundFile as a parameter.\nWhen playback is stopped (either after the given amount of time,\nor with the stop() method), the p5.SoundRecorder will send its\nrecording to that p5.SoundFile for playback.</p>",
                is_constructor: 1,
                example: ["\n<div><code>\nvar mic, recorder, soundFile;\nvar state = 0;\n\nfunction setup() {\n  background(200);\n  // create an audio in\n  mic = new p5.AudioIn();\n\n  // prompts user to enable their browser mic\n  mic.start();\n\n  // create a sound recorder\n  recorder = new p5.SoundRecorder();\n\n  // connect the mic to the recorder\n  recorder.setInput(mic);\n\n  // this sound file will be used to\n  // playback & save the recording\n  soundFile = new p5.SoundFile();\n\n  text('keyPress to record', 20, 20);\n}\n\nfunction keyPressed() {\n  // make sure user enabled the mic\n  if (state === 0 && mic.enabled) {\n\n    // record to our p5.SoundFile\n    recorder.record(soundFile);\n\n    background(255,0,0);\n    text('Recording!', 20, 20);\n    state++;\n  }\n  else if (state === 1) {\n    background(0,255,0);\n\n    // stop recorder and\n    // send result to soundFile\n    recorder.stop();\n\n    text('Stopped', 20, 20);\n    state++;\n  }\n\n  else if (state === 2) {\n    soundFile.play(); // play the result!\n    save(soundFile, 'mySound.wav');\n    state++;\n  }\n}\n</div></code>"]
              },
              "p5.PeakDetect": {
                name: "p5.PeakDetect",
                shortname: "p5.PeakDetect",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 11649,
                description: '<p>PeakDetect works in conjunction with p5.FFT to\nlook for onsets in some or all of the frequency spectrum.\n</p>\n<p>\nTo use p5.PeakDetect, call <code>update</code> in the draw loop\nand pass in a p5.FFT object.\n</p>\n<p>\nYou can listen for a specific part of the frequency spectrum by\nsetting the range between <code>freq1</code> and <code>freq2</code>.\n</p>\n\n<p><code>threshold</code> is the threshold for detecting a peak,\nscaled between 0 and 1. It is logarithmic, so 0.1 is half as loud\nas 1.0.</p>\n\n<p>\nThe update method is meant to be run in the draw loop, and\n<b>frames</b> determines how many loops must pass before\nanother peak can be detected.\nFor example, if the frameRate() = 60, you could detect the beat of a\n120 beat-per-minute song with this equation:\n<code> framesPerPeak = 60 / (estimatedBPM / 60 );</code>\n</p>\n\n<p>\nBased on example contribtued by @b2renger, and a simple beat detection\nexplanation by <a href="a\nhref=&quot;http://www.airtightinteractive.com/2013/10/making-audio-reactive-visuals/&quot;\ntarget=&quot;_blank&quot;">a\nhref=&quot;http://www.airtightinteractive.com/2013/10/making-audio-reactive-visuals/&quot;\ntarget=&quot;_blank&quot;</a>Felix Turner</a>.\n</p>',
                is_constructor: 1,
                params: [{
                  name: "freq1",
                  description: "<p>lowFrequency - defaults to 20Hz</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "freq2",
                  description: "<p>highFrequency - defaults to 20000 Hz</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "threshold",
                  description: "<p>Threshold for detecting a beat between 0 and 1\n                          scaled logarithmically where 0.1 is 1/2 the loudness\n                          of 1.0. Defaults to 0.35.</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "framesPerPeak",
                  description: "<p>Defaults to 20.</p>\n",
                  type: "Number",
                  optional: !0
                }],
                example: ["\n<div><code>\n\nvar cnv, soundFile, fft, peakDetect;\nvar ellipseWidth = 10;\n\nfunction preload() {\n  soundFile = loadSound('assets/beat.mp3');\n}\n\nfunction setup() {\n  background(0);\n  noStroke();\n  fill(255);\n  textAlign(CENTER);\n\n  // p5.PeakDetect requires a p5.FFT\n  fft = new p5.FFT();\n  peakDetect = new p5.PeakDetect();\n}\n\nfunction draw() {\n  background(0);\n  text('click to play/pause', width/2, height/2);\n\n  // peakDetect accepts an fft post-analysis\n  fft.analyze();\n  peakDetect.update(fft);\n\n  if ( peakDetect.isDetected ) {\n    ellipseWidth = 50;\n  } else {\n    ellipseWidth *= 0.95;\n  }\n\n  ellipse(width/2, height/2, ellipseWidth, ellipseWidth);\n}\n\n// toggle play/stop when canvas is clicked\nfunction mouseClicked() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    if (soundFile.isPlaying() ) {\n      soundFile.stop();\n    } else {\n      soundFile.play();\n    }\n  }\n}\n</code></div>"]
              },
              "p5.Gain": {
                name: "p5.Gain",
                shortname: "p5.Gain",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 11873,
                description: "<p>A gain node is usefull to set the relative volume of sound.\nIt&#39;s typically used to build mixers.</p>\n",
                is_constructor: 1,
                example: ["\n<div><code>\n\n // load two soundfile and crossfade beetween them\n var sound1,sound2;\n var gain1, gain2, gain3;\n\n function preload(){\n soundFormats('ogg', 'mp3');\n sound1 = loadSound('assets/Damscray_-_Dancing_Tiger_01');\n sound2 = loadSound('assets/beat.mp3');\n }\n\n function setup() {\n createCanvas(400,200);\n\n // create a 'master' gain to which we will connect both soundfiles\n gain3 = new p5.Gain();\n gain3.connect();\n\n // setup first sound for playing\n sound1.rate(1);\n sound1.loop();\n sound1.disconnect(); // diconnect from p5 output\n\n gain1 = new p5.Gain(); // setup a gain node\n gain1.setInput(sound1); // connect the first sound to its input\n gain1.connect(gain3); // connect its output to the 'master'\n\n sound2.rate(1);\n sound2.disconnect();\n sound2.loop();\n\n gain2 = new p5.Gain();\n gain2.setInput(sound2);\n gain2.connect(gain3);\n\n }\n\n function draw(){\n background(180);\n\n // calculate the horizontal distance beetween the mouse and the right of the screen\n var d = dist(mouseX,0,width,0);\n\n // map the horizontal position of the mouse to values useable for volume control of sound1\n var vol1 = map(mouseX,0,width,0,1);\n var vol2 = 1-vol1; // when sound1 is loud, sound2 is quiet and vice versa\n\n gain1.amp(vol1,0.5,0);\n gain2.amp(vol2,0.5,0);\n\n // map the vertical position of the mouse to values useable for 'master volume control'\n var vol3 = map(mouseY,0,height,0,1);\n gain3.amp(vol3,0.5,0);\n }\n</code></div>\n"]
              },
              "p5.AudioVoice": {
                name: "p5.AudioVoice",
                shortname: "p5.AudioVoice",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 12014,
                description: "<p>Base class for monophonic synthesizers. Any extensions of this class\nshould follow the API and implement the methods below in order to \nremain compatible with p5.PolySynth();</p>\n",
                is_constructor: 1
              },
              "p5.MonoSynth": {
                name: "p5.MonoSynth",
                shortname: "p5.MonoSynth",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 12067,
                description: "<p>A MonoSynth is used as a single voice for sound synthesis.\nThis is a class to be used in conjunction with the PolySynth\nclass. Custom synthetisers should be built inheriting from\nthis class.</p>\n",
                is_constructor: 1,
                example: ["\n<div><code>\nvar monoSynth;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n  cnv.mousePressed(playSynth);\n\n  monoSynth = new p5.MonoSynth();\n\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n}\n\nfunction playSynth() {\n  // time from now (in seconds)\n  var time = 0;\n  // note duration (in seconds)\n  var dur = 0.25;\n  // velocity (volume, from 0 to 1)\n  var v = 0.2;\n\n  monoSynth.play(\"G3\", v, time, dur);\n  monoSynth.play(\"C4\", v, time += dur, dur);\n\n  background(random(255), random(255), 255);\n  text('click to play', width/2, height/2);\n}\n</code></div>"]
              },
              "p5.PolySynth": {
                name: "p5.PolySynth",
                shortname: "p5.PolySynth",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 12356,
                description: "<p>An AudioVoice is used as a single voice for sound synthesis.\nThe PolySynth class holds an array of AudioVoice, and deals\nwith voices allocations, with setting notes to be played, and\nparameters to be set.</p>\n",
                is_constructor: 1,
                params: [{
                  name: "synthVoice",
                  description: "<p>A monophonic synth voice inheriting\n                               the AudioVoice class. Defaults to p5.MonoSynth</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "maxVoices",
                  description: "<p>Number of voices, defaults to 8;</p>\n",
                  type: "Number",
                  optional: !0
                }],
                example: ['\n<div><code>\nvar polySynth;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n  cnv.mousePressed(playSynth);\n\n  polySynth = new p5.PolySynth();\n\n  textAlign(CENTER);\n  text(\'click to play\', width/2, height/2);\n}\n\nfunction playSynth() {\n  // note duration (in seconds)\n  var dur = 1.5;\n\n  // time from now (in seconds)\n  var time = 0;\n\n  // velocity (volume, from 0 to 1)\n  var vel = 0.1;\n\n  // notes can overlap with each other\n  polySynth.play("G2", vel, 0, dur);\n  polySynth.play("C3", vel, time += 1/3, dur);\n  polySynth.play("G3", vel, time += 1/3, dur);\n\n  background(random(255), random(255), 255);\n  text(\'click to play\', width/2, height/2);\n}\n</code></div>']
              },
              "p5.Distortion": {
                name: "p5.Distortion",
                shortname: "p5.Distortion",
                classitems: [],
                plugins: [],
                extensions: [],
                plugin_for: [],
                extension_for: [],
                module: "p5.sound",
                submodule: "p5.sound",
                namespace: "",
                file: "lib/addons/p5.sound.js",
                line: 12761,
                description: '<p>A Distortion effect created with a Waveshaper Node,\nwith an approach adapted from\n<a href="http://stackoverflow.com/questions/22312841/waveshaper-node-in-webaudio-how-to-emulate-distortion">Kevin Ennis</a></p>\n<p>This class extends <a href = "/reference/#/p5.Effect">p5.Effect</a>.<br>Methods <a href = "/reference/#/p5.Effect/amp">amp()</a>, <a href = "/reference/#/p5.Effect/chain">chain()</a>, \n<a href = "/reference/#/p5.Effect/drywet">drywet()</a>, <a href = "/reference/#/p5.Effect/connect">connect()</a>, and \n<a href = "/reference/#/p5.Effect/disconnect">disconnect()</a> are available.</p>\n',
                extends: "p5.Effect",
                is_constructor: 1,
                params: [{
                  name: "amount",
                  description: "<p>Unbounded distortion amount.\n                               Normal values range from 0-1.</p>\n",
                  type: "Number",
                  optional: !0,
                  optdefault: "0.25"
                }, {
                  name: "oversample",
                  description: "<p>&#39;none&#39;, &#39;2x&#39;, or &#39;4x&#39;.</p>\n",
                  type: "String",
                  optional: !0,
                  optdefault: "'none'"
                }]
              }
            },
            elements: {},
            classitems: [{
              file: "src/color/color_conversion.js",
              line: 10,
              description: '<p>Conversions adapted from <a href="http://www.easyrgb.com/en/math.php">http://www.easyrgb.com/en/math.php</a>.</p>\n<p>In these functions, hue is always in the range [0, 1], just like all other\ncomponents are in the range [0, 1]. &#39;Brightness&#39; and &#39;value&#39; are used\ninterchangeably.</p>\n',
              class: "p5",
              module: "Color",
              submodule: "Color Conversion"
            }, {
              file: "src/color/color_conversion.js",
              line: 21,
              description: "<p>Convert an HSBA array to HSLA.</p>\n",
              class: "p5",
              module: "Color",
              submodule: "Color Conversion"
            }, {
              file: "src/color/color_conversion.js",
              line: 47,
              description: "<p>Convert an HSBA array to RGBA.</p>\n",
              class: "p5",
              module: "Color",
              submodule: "Color Conversion"
            }, {
              file: "src/color/color_conversion.js",
              line: 102,
              description: "<p>Convert an HSLA array to HSBA.</p>\n",
              class: "p5",
              module: "Color",
              submodule: "Color Conversion"
            }, {
              file: "src/color/color_conversion.js",
              line: 125,
              description: "<p>Convert an HSLA array to RGBA.</p>\n<p>We need to change basis from HSLA to something that can be more easily be\nprojected onto RGBA. We will choose hue and brightness as our first two\ncomponents, and pick a convenient third one (&#39;zest&#39;) so that we don&#39;t need\nto calculate formal HSBA saturation.</p>\n",
              class: "p5",
              module: "Color",
              submodule: "Color Conversion"
            }, {
              file: "src/color/color_conversion.js",
              line: 189,
              description: "<p>Convert an RGBA array to HSBA.</p>\n",
              class: "p5",
              module: "Color",
              submodule: "Color Conversion"
            }, {
              file: "src/color/color_conversion.js",
              line: 228,
              description: "<p>Convert an RGBA array to HSLA.</p>\n",
              class: "p5",
              module: "Color",
              submodule: "Color Conversion"
            }, {
              file: "src/color/creating_reading.js",
              line: 16,
              description: "<p>Extracts the alpha value from a color or pixel array.</p>\n",
              itemtype: "method",
              name: "alpha",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the alpha value",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoStroke();\nlet c = color(0, 126, 255, 102);\nfill(c);\nrect(15, 15, 35, 70);\nlet value = alpha(c); // Sets 'value' to 102\nfill(value);\nrect(50, 15, 35, 70);\n</code>\n</div>"],
              alt: "Left half of canvas light blue and right half light charcoal grey.\nLeft half of canvas light purple and right half a royal blue.\nLeft half of canvas salmon pink and the right half white.\nYellow rect in middle right of canvas, with 55 pixel width and height.\nYellow ellipse in top left canvas, black ellipse in bottom right,both 80x80.\nBright fuschia rect in middle of canvas, 60 pixel width and height.\nTwo bright green rects on opposite sides of the canvas, both 45x80.\nFour blue rects in each corner of the canvas, each are 35x35.\nBright sea green rect on left and darker rect on right of canvas, both 45x80.\nDark green rect on left and light green rect on right of canvas, both 45x80.\nDark blue rect on left and light teal rect on right of canvas, both 45x80.\nblue rect on left and green on right, both with black outlines & 35x60.\nsalmon pink rect on left and black on right, both 35x60.\n4 rects, tan, brown, brownish purple and purple, with white outlines & 20x60.\nlight pastel green rect on left and dark grey rect on right, both 35x60.\nyellow rect on left and red rect on right, both with black outlines & 35x60.\ngrey canvas\ndeep pink rect on left and grey rect on right, both 35x60.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 61,
              description: "<p>Extracts the blue value from a color or pixel array.</p>\n",
              itemtype: "method",
              name: "blue",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the blue value",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet c = color(175, 100, 220); // Define color 'c'\nfill(c); // Use color variable 'c' as fill color\nrect(15, 20, 35, 60); // Draw left rectangle\n\nlet blueValue = blue(c); // Get blue in 'c'\nprint(blueValue); // Prints \"220.0\"\nfill(0, 0, blueValue); // Use 'blueValue' in new fill\nrect(50, 20, 35, 60); // Draw right rectangle\n</code>\n</div>"],
              alt: "Left half of canvas light purple and right half a royal blue.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 91,
              description: "<p>Extracts the HSB brightness value from a color or pixel array.</p>\n",
              itemtype: "method",
              name: "brightness",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the brightness value",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoStroke();\ncolorMode(HSB, 255);\nlet c = color(0, 126, 255);\nfill(c);\nrect(15, 20, 35, 60);\nlet value = brightness(c); // Sets 'value' to 255\nfill(value);\nrect(50, 20, 35, 60);\n</code>\n</div>"],
              alt: "Left half of canvas salmon pink and the right half white.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 121,
              description: '<p>Creates colors for storing in variables of the color datatype. The\nparameters are interpreted as RGB or HSB values depending on the\ncurrent <a href="#/p5/colorMode">colorMode()</a>. The default mode is RGB values from 0 to 255\nand, therefore, the function call color(255, 204, 0) will return a\nbright yellow color.\n<br><br>\nNote that if only one value is provided to <a href="#/p5/color">color()</a>, it will be interpreted\nas a grayscale value. Add a second value, and it will be used for alpha\ntransparency. When three values are specified, they are interpreted as\neither RGB or HSB values. Adding a fourth value applies alpha\ntransparency.\n<br><br>\nIf a single string argument is provided, RGB, RGBA and Hex CSS color\nstrings and all named color strings are supported. In this case, an alpha\nnumber value as a second argument is not supported, the RGBA form should be\nused.</p>\n',
              itemtype: "method",
              name: "color",
              return: {
                description: "resulting color",
                type: "p5.Color"
              },
              example: ["\n<div>\n<code>\nlet c = color(255, 204, 0); // Define color 'c'\nfill(c); // Use color variable 'c' as fill color\nnoStroke(); // Don't draw a stroke around shapes\nrect(30, 20, 55, 55); // Draw rectangle\n</code>\n</div>\n\n<div>\n<code>\nlet c = color(255, 204, 0); // Define color 'c'\nfill(c); // Use color variable 'c' as fill color\nnoStroke(); // Don't draw a stroke around shapes\nellipse(25, 25, 80, 80); // Draw left circle\n\n// Using only one value with color()\n// generates a grayscale value.\nc = color(65); // Update 'c' with grayscale value\nfill(c); // Use updated 'c' as fill color\nellipse(75, 75, 80, 80); // Draw right circle\n</code>\n</div>\n\n<div>\n<code>\n// Named SVG & CSS colors may be used,\nlet c = color('magenta');\nfill(c); // Use 'c' as fill color\nnoStroke(); // Don't draw a stroke around shapes\nrect(20, 20, 60, 60); // Draw rectangle\n</code>\n</div>\n\n<div>\n<code>\n// as can hex color codes:\nnoStroke(); // Don't draw a stroke around shapes\nlet c = color('#0f0');\nfill(c); // Use 'c' as fill color\nrect(0, 10, 45, 80); // Draw rectangle\n\nc = color('#00ff00');\nfill(c); // Use updated 'c' as fill color\nrect(55, 10, 45, 80); // Draw rectangle\n</code>\n</div>\n\n<div>\n<code>\n// RGB and RGBA color strings are also supported:\n// these all set to the same color (solid blue)\nlet c;\nnoStroke(); // Don't draw a stroke around shapes\nc = color('rgb(0,0,255)');\nfill(c); // Use 'c' as fill color\nrect(10, 10, 35, 35); // Draw rectangle\n\nc = color('rgb(0%, 0%, 100%)');\nfill(c); // Use updated 'c' as fill color\nrect(55, 10, 35, 35); // Draw rectangle\n\nc = color('rgba(0, 0, 255, 1)');\nfill(c); // Use updated 'c' as fill color\nrect(10, 55, 35, 35); // Draw rectangle\n\nc = color('rgba(0%, 0%, 100%, 1)');\nfill(c); // Use updated 'c' as fill color\nrect(55, 55, 35, 35); // Draw rectangle\n</code>\n</div>\n\n<div>\n<code>\n// HSL color is also supported and can be specified\n// by value\nlet c;\nnoStroke(); // Don't draw a stroke around shapes\nc = color('hsl(160, 100%, 50%)');\nfill(c); // Use 'c' as fill color\nrect(0, 10, 45, 80); // Draw rectangle\n\nc = color('hsla(160, 100%, 50%, 0.5)');\nfill(c); // Use updated 'c' as fill color\nrect(55, 10, 45, 80); // Draw rectangle\n</code>\n</div>\n\n<div>\n<code>\n// HSB color is also supported and can be specified\n// by value\nlet c;\nnoStroke(); // Don't draw a stroke around shapes\nc = color('hsb(160, 100%, 50%)');\nfill(c); // Use 'c' as fill color\nrect(0, 10, 45, 80); // Draw rectangle\n\nc = color('hsba(160, 100%, 50%, 0.5)');\nfill(c); // Use updated 'c' as fill color\nrect(55, 10, 45, 80); // Draw rectangle\n</code>\n</div>\n\n<div>\n<code>\nlet c; // Declare color 'c'\nnoStroke(); // Don't draw a stroke around shapes\n\n// If no colorMode is specified, then the\n// default of RGB with scale of 0-255 is used.\nc = color(50, 55, 100); // Create a color for 'c'\nfill(c); // Use color variable 'c' as fill color\nrect(0, 10, 45, 80); // Draw left rect\n\ncolorMode(HSB, 100); // Use HSB with scale of 0-100\nc = color(50, 55, 100); // Update 'c' with new color\nfill(c); // Use updated 'c' as fill color\nrect(55, 10, 45, 80); // Draw right rect\n</code>\n</div>"],
              alt: "Yellow rect in middle right of canvas, with 55 pixel width and height.\nYellow ellipse in top left of canvas, black ellipse in bottom right,both 80x80.\nBright fuschia rect in middle of canvas, 60 pixel width and height.\nTwo bright green rects on opposite sides of the canvas, both 45x80.\nFour blue rects in each corner of the canvas, each are 35x35.\nBright sea green rect on left and darker rect on right of canvas, both 45x80.\nDark green rect on left and lighter green rect on right of canvas, both 45x80.\nDark blue rect on left and light teal rect on right of canvas, both 45x80.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading",
              overloads: [{
                line: 121,
                params: [{
                  name: "gray",
                  description: "<p>number specifying value between white\n                                and black.</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "<p>alpha value relative to current color range\n                                (default is 0-255)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "resulting color",
                  type: "p5.Color"
                }
              }, {
                line: 280,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value relative to\n                                the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "p5.Color"
                }
              }, {
                line: 292,
                params: [{
                  name: "value",
                  description: "<p>a color string</p>\n",
                  type: "String"
                }],
                return: {
                  description: "",
                  type: "p5.Color"
                }
              }, {
                line: 297,
                params: [{
                  name: "values",
                  description: "<p>an array containing the red,green,blue &amp;\n                                and alpha components of the color</p>\n",
                  type: "Number[]"
                }],
                return: {
                  description: "",
                  type: "p5.Color"
                }
              }, {
                line: 303,
                params: [{
                  name: "color",
                  description: "",
                  type: "p5.Color"
                }],
                return: {
                  description: "",
                  type: "p5.Color"
                }
              }]
            }, {
              file: "src/color/creating_reading.js",
              line: 319,
              description: "<p>Extracts the green value from a color or pixel array.</p>\n",
              itemtype: "method",
              name: "green",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the green value",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet c = color(20, 75, 200); // Define color 'c'\nfill(c); // Use color variable 'c' as fill color\nrect(15, 20, 35, 60); // Draw left rectangle\n\nlet greenValue = green(c); // Get green in 'c'\nprint(greenValue); // Print \"75.0\"\nfill(0, greenValue, 0); // Use 'greenValue' in new fill\nrect(50, 20, 35, 60); // Draw right rectangle\n</code>\n</div>"],
              alt: "blue rect on left and green on right, both with black outlines & 35x60.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 350,
              description: "<p>Extracts the hue value from a color or pixel array.</p>\n<p>Hue exists in both HSB and HSL. This function will return the\nHSB-normalized hue when supplied with an HSB color object (or when supplied\nwith a pixel array while the color mode is HSB), but will default to the\nHSL-normalized hue otherwise. (The values will only be different if the\nmaximum hue setting for each system is different.)</p>\n",
              itemtype: "method",
              name: "hue",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the hue",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoStroke();\ncolorMode(HSB, 255);\nlet c = color(0, 126, 255);\nfill(c);\nrect(15, 20, 35, 60);\nlet value = hue(c); // Sets 'value' to \"0\"\nfill(value);\nrect(50, 20, 35, 60);\n</code>\n</div>"],
              alt: "salmon pink rect on left and black on right, both 35x60.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 387,
              description: '<p>Blends two colors to find a third color somewhere between them. The amt\nparameter is the amount to interpolate between the two values where 0.0\nequal to the first color, 0.1 is very near the first color, 0.5 is halfway\nin between, etc. An amount below 0 will be treated as 0. Likewise, amounts\nabove 1 will be capped at 1. This is different from the behavior of <a href="#/p5/lerp">lerp()</a>,\nbut necessary because otherwise numbers outside the range will produce\nstrange and unexpected colors.\n<br><br>\nThe way that colours are interpolated depends on the current color mode.</p>\n',
              itemtype: "method",
              name: "lerpColor",
              params: [{
                name: "c1",
                description: "<p>interpolate from this color</p>\n",
                type: "p5.Color"
              }, {
                name: "c2",
                description: "<p>interpolate to this color</p>\n",
                type: "p5.Color"
              }, {
                name: "amt",
                description: "<p>number between 0 and 1</p>\n",
                type: "Number"
              }],
              return: {
                description: "interpolated color",
                type: "p5.Color"
              },
              example: ["\n<div>\n<code>\ncolorMode(RGB);\nstroke(255);\nbackground(51);\nlet from = color(218, 165, 32);\nlet to = color(72, 61, 139);\ncolorMode(RGB); // Try changing to HSB.\nlet interA = lerpColor(from, to, 0.33);\nlet interB = lerpColor(from, to, 0.66);\nfill(from);\nrect(10, 20, 20, 60);\nfill(interA);\nrect(30, 20, 20, 60);\nfill(interB);\nrect(50, 20, 20, 60);\nfill(to);\nrect(70, 20, 20, 60);\n</code>\n</div>"],
              alt: "4 rects one tan, brown, brownish purple, purple, with white outlines & 20x60",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 484,
              description: "<p>Extracts the HSL lightness value from a color or pixel array.</p>\n",
              itemtype: "method",
              name: "lightness",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the lightness",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoStroke();\ncolorMode(HSL);\nlet c = color(156, 100, 50, 1);\nfill(c);\nrect(15, 20, 35, 60);\nlet value = lightness(c); // Sets 'value' to 50\nfill(value);\nrect(50, 20, 35, 60);\n</code>\n</div>"],
              alt: "light pastel green rect on left and dark grey rect on right, both 35x60.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 514,
              description: "<p>Extracts the red value from a color or pixel array.</p>\n",
              itemtype: "method",
              name: "red",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the red value",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet c = color(255, 204, 0); // Define color 'c'\nfill(c); // Use color variable 'c' as fill color\nrect(15, 20, 35, 60); // Draw left rectangle\n\nlet redValue = red(c); // Get red in 'c'\nprint(redValue); // Print \"255.0\"\nfill(redValue, 0, 0); // Use 'redValue' in new fill\nrect(50, 20, 35, 60); // Draw right rectangle\n</code>\n</div>\n\n<div>\n<code>\ncolorMode(RGB, 255);\nlet c = color(127, 255, 0);\ncolorMode(RGB, 1);\nlet myColor = red(c);\nprint(myColor);\n</code>\n</div>"],
              alt: "yellow rect on left and red rect on right, both with black outlines and 35x60.\ngrey canvas",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/creating_reading.js",
              line: 554,
              description: "<p>Extracts the saturation value from a color or pixel array.</p>\n<p>Saturation is scaled differently in HSB and HSL. This function will return\nthe HSB saturation when supplied with an HSB color object (or when supplied\nwith a pixel array while the color mode is HSB), but will default to the\nHSL saturation otherwise.</p>\n",
              itemtype: "method",
              name: "saturation",
              params: [{
                name: "color",
                description: '<p><a href="#/p5.Color">p5.Color</a> object, color components,\n                                        or CSS color</p>\n',
                type: "p5.Color|Number[]|String"
              }],
              return: {
                description: "the saturation value",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoStroke();\ncolorMode(HSB, 255);\nlet c = color(0, 126, 255);\nfill(c);\nrect(15, 20, 35, 60);\nlet value = saturation(c); // Sets 'value' to 126\nfill(value);\nrect(50, 20, 35, 60);\n</code>\n</div>"],
              alt: "deep pink rect on left and grey rect on right, both 35x60.",
              class: "p5",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 52,
              description: "<p>This function returns the color formatted as a string. This can be useful\nfor debugging, or for using p5.js with other libraries.</p>\n",
              itemtype: "method",
              name: "toString",
              params: [{
                name: "format",
                description: "<p>How the color string will be formatted.\nLeaving this empty formats the string as rgba(r, g, b, a).\n&#39;#rgb&#39; &#39;#rgba&#39; &#39;#rrggbb&#39; and &#39;#rrggbbaa&#39; format as hexadecimal color codes.\n&#39;rgb&#39; &#39;hsb&#39; and &#39;hsl&#39; return the color formatted in the specified color mode.\n&#39;rgba&#39; &#39;hsba&#39; and &#39;hsla&#39; are the same as above but with alpha channels.\n&#39;rgb%&#39; &#39;hsb%&#39; &#39;hsl%&#39; &#39;rgba%&#39; &#39;hsba%&#39; and &#39;hsla%&#39; format as percentages.</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: "the formatted string",
                type: "String"
              },
              example: ["\n<div>\n<code>\nlet myColor;\nfunction setup() {\n  createCanvas(200, 200);\n  stroke(255);\n  myColor = color(100, 100, 250);\n  fill(myColor);\n}\n\nfunction draw() {\n  rotate(HALF_PI);\n  text(myColor.toString(), 0, -5);\n  text(myColor.toString('#rrggbb'), 0, -30);\n  text(myColor.toString('rgba%'), 0, -55);\n}\n</code>\n</div>"],
              alt: "canvas with text representation of color",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 248,
              itemtype: "method",
              name: "setRed",
              params: [{
                name: "red",
                description: "<p>the new red value</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nlet backgroundColor;\n\nfunction setup() {\n  backgroundColor = color(100, 50, 150);\n}\n\nfunction draw() {\n  backgroundColor.setRed(128 + 128 * sin(millis() / 1000));\n  background(backgroundColor);\n}\n</code>\n</div>"],
              alt: "canvas with gradually changing background color",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 275,
              itemtype: "method",
              name: "setGreen",
              params: [{
                name: "green",
                description: "<p>the new green value</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nlet backgroundColor;\n\nfunction setup() {\n  backgroundColor = color(100, 50, 150);\n}\n\nfunction draw() {\n  backgroundColor.setGreen(128 + 128 * sin(millis() / 1000));\n  background(backgroundColor);\n}\n</code>\n</div>"],
              alt: "canvas with gradually changing background color",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 302,
              itemtype: "method",
              name: "setBlue",
              params: [{
                name: "blue",
                description: "<p>the new blue value</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nlet backgroundColor;\n\nfunction setup() {\n  backgroundColor = color(100, 50, 150);\n}\n\nfunction draw() {\n  backgroundColor.setBlue(128 + 128 * sin(millis() / 1000));\n  background(backgroundColor);\n}\n</code>\n</div>"],
              alt: "canvas with gradually changing background color",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 329,
              itemtype: "method",
              name: "setAlpha",
              params: [{
                name: "alpha",
                description: "<p>the new alpha value</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nlet squareColor;\n\nfunction setup() {\n  ellipseMode(CORNERS);\n  strokeWeight(4);\n  squareColor = color(100, 50, 150);\n}\n\nfunction draw() {\n  background(255);\n\n  noFill();\n  stroke(0);\n  ellipse(10, 10, width - 10, height - 10);\n\n  squareColor.setAlpha(128 + 128 * sin(millis() / 1000));\n  fill(squareColor);\n  noStroke();\n  rect(13, 13, width - 26, height - 26);\n}\n</code>\n</div>"],
              alt: "circle behind a square with gradually changing opacity",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 410,
              description: "<p>Hue is the same in HSB and HSL, but the maximum value may be different.\nThis function will return the HSB-normalized saturation when supplied with\nan HSB color object, but will default to the HSL-normalized saturation\notherwise.</p>\n",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 441,
              description: "<p>Saturation is scaled differently in HSB and HSL. This function will return\nthe HSB saturation when supplied with an HSB color object, but will default\nto the HSL saturation otherwise.</p>\n",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 460,
              description: "<p>CSS named colors.</p>\n",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 613,
              description: "<p>These regular expressions are used to build up the patterns for matching\nviable CSS color strings: fragmenting the regexes in this way increases the\nlegibility and comprehensibility of the code.</p>\n<p>Note that RGB values of .9 are not parsed by IE, but are supported here for\ncolor string consistency.</p>\n",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 626,
              description: "<p>Full color string patterns. The capture groups are necessary.</p>\n",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/p5.Color.js",
              line: 989,
              description: "<p>For HSB and HSL, interpret the gray level as a brightness/lightness\nvalue (they are equivalent when chroma is zero). For RGB, normalize the\ngray level according to the blue maximum.</p>\n",
              class: "p5.Color",
              module: "Color",
              submodule: "Creating & Reading"
            }, {
              file: "src/color/setting.js",
              line: 15,
              description: '<p>The <a href="#/p5/background">background()</a> function sets the color used for the background of the\np5.js canvas. The default background is transparent. This function is\ntypically used within <a href="#/p5/draw">draw()</a> to clear the display window at the beginning\nof each frame, but it can be used inside <a href="#/p5/setup">setup()</a> to set the background on\nthe first frame of animation or if the background need only be set once.\n<br><br>\nThe color is either specified in terms of the RGB, HSB, or HSL color\ndepending on the current <a href="#/p5/colorMode">colorMode</a>. (The default color space is RGB, with\neach value in the range from 0 to 255). The alpha range by default is also 0 to 255.\n<br><br>\nIf a single string argument is provided, RGB, RGBA and Hex CSS color strings\nand all named color strings are supported. In this case, an alpha number\nvalue as a second argument is not supported, the RGBA form should be used.\n<br><br>\nA <a href="#/p5.Color">p5.Color</a> object can also be provided to set the background color.\n<br><br>\nA <a href="#/p5.Image">p5.Image</a> can also be provided to set the background image.</p>\n',
              itemtype: "method",
              name: "background",
              chainable: 1,
              example: ["\n<div>\n<code>\n// Grayscale integer value\nbackground(51);\n</code>\n</div>\n\n<div>\n<code>\n// R, G & B integer values\nbackground(255, 204, 0);\n</code>\n</div>\n\n<div>\n<code>\n// H, S & B integer values\ncolorMode(HSB);\nbackground(255, 204, 100);\n</code>\n</div>\n\n<div>\n<code>\n// Named SVG/CSS color string\nbackground('red');\n</code>\n</div>\n\n<div>\n<code>\n// three-digit hexadecimal RGB notation\nbackground('#fae');\n</code>\n</div>\n\n<div>\n<code>\n// six-digit hexadecimal RGB notation\nbackground('#222222');\n</code>\n</div>\n\n<div>\n<code>\n// integer RGB notation\nbackground('rgb(0,255,0)');\n</code>\n</div>\n\n<div>\n<code>\n// integer RGBA notation\nbackground('rgba(0,255,0, 0.25)');\n</code>\n</div>\n\n<div>\n<code>\n// percentage RGB notation\nbackground('rgb(100%,0%,10%)');\n</code>\n</div>\n\n<div>\n<code>\n// percentage RGBA notation\nbackground('rgba(100%,0%,100%,0.5)');\n</code>\n</div>\n\n<div>\n<code>\n// p5 Color object\nbackground(color(0, 0, 255));\n</code>\n</div>"],
              alt: "canvas with darkest charcoal grey background.\ncanvas with yellow background.\ncanvas with royal blue background.\ncanvas with red background.\ncanvas with pink background.\ncanvas with black background.\ncanvas with bright green background.\ncanvas with soft green background.\ncanvas with red background.\ncanvas with light purple background.\ncanvas with blue background.",
              class: "p5",
              module: "Color",
              submodule: "Setting",
              overloads: [{
                line: 15,
                params: [{
                  name: "color",
                  description: '<p>any value created by the <a href="#/p5/color">color()</a> function</p>\n',
                  type: "p5.Color"
                }],
                chainable: 1
              }, {
                line: 131,
                params: [{
                  name: "colorstring",
                  description: "<p>color string, possible formats include: integer\n                        rgb() or rgba(), percentage rgb() or rgba(),\n                        3-digit hex, 6-digit hex</p>\n",
                  type: "String"
                }, {
                  name: "a",
                  description: "<p>opacity of the background relative to current\n                            color range (default is 0-255)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 141,
                params: [{
                  name: "gray",
                  description: "<p>specifies a value between white and black</p>\n",
                  type: "Number"
                }, {
                  name: "a",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 148,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value (depending on the current color\n                       mode)</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value (depending on the current\n                       color mode)</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value (depending on the current\n                       color mode)</p>\n",
                  type: "Number"
                }, {
                  name: "a",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 160,
                params: [{
                  name: "values",
                  description: "<p>an array containing the red,green,blue &amp;\n                                and alpha components of the color</p>\n",
                  type: "Number[]"
                }],
                chainable: 1
              }, {
                line: 167,
                params: [{
                  name: "image",
                  description: '<p>image created with <a href="#/p5/loadImage">loadImage()</a> or <a href="#/p5/createImage">createImage()</a>,\n                            to set as background\n                            (must be same size as the sketch window)</p>\n',
                  type: "p5.Image"
                }, {
                  name: "a",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "src/color/setting.js",
              line: 185,
              description: '<p>Clears the pixels within a buffer. This function only works on p5.Canvas\nobjects created with the <a href="#/p5/createCanvas">createCanvas()</a> function; it won&#39;t work with the\nmain display window. Unlike the main graphics context, pixels in\nadditional graphics areas created with <a href="#/p5/createGraphics">createGraphics()</a> can be entirely\nor partially transparent. This function clears everything to make all of\nthe pixels 100% transparent.</p>\n',
              itemtype: "method",
              name: "clear",
              chainable: 1,
              example: ["\n<div>\n<code>\n// Clear the screen on mouse press.\nfunction setup() {\n  createCanvas(100, 100);\n}\n\nfunction draw() {\n  ellipse(mouseX, mouseY, 20, 20);\n}\n\nfunction mousePressed() {\n  clear();\n}\n</code>\n</div>"],
              alt: "20x20 white ellipses are continually drawn at mouse x and y coordinates.",
              class: "p5",
              module: "Color",
              submodule: "Setting"
            }, {
              file: "src/color/setting.js",
              line: 223,
              description: '<p><a href="#/p5/colorMode">colorMode()</a> changes the way p5.js interprets color data. By default, the\nparameters for <a href="#/p5/fill">fill()</a>, <a href="#/p5/stroke">stroke()</a>, <a href="#/p5/background">background()</a>, and <a href="#/p5/color">color()</a> are defined by\nvalues between 0 and 255 using the RGB color model. This is equivalent to\nsetting colorMode(RGB, 255). Setting colorMode(HSB) lets you use the HSB\nsystem instead. By default, this is colorMode(HSB, 360, 100, 100, 1). You\ncan also use HSL.\n<br><br>\nNote: existing color objects remember the mode that they were created in,\nso you can change modes as you like without affecting their appearance.</p>\n',
              itemtype: "method",
              name: "colorMode",
              chainable: 1,
              example: ["\n<div>\n<code>\nnoStroke();\ncolorMode(RGB, 100);\nfor (let i = 0; i < 100; i++) {\n  for (let j = 0; j < 100; j++) {\n    stroke(i, j, 0);\n    point(i, j);\n  }\n}\n</code>\n</div>\n\n<div>\n<code>\nnoStroke();\ncolorMode(HSB, 100);\nfor (let i = 0; i < 100; i++) {\n  for (let j = 0; j < 100; j++) {\n    stroke(i, j, 100);\n    point(i, j);\n  }\n}\n</code>\n</div>\n\n<div>\n<code>\ncolorMode(RGB, 255);\nlet c = color(127, 255, 0);\n\ncolorMode(RGB, 1);\nlet myColor = c._getRed();\ntext(myColor, 10, 10, 80, 80);\n</code>\n</div>\n\n<div>\n<code>\nnoFill();\ncolorMode(RGB, 255, 255, 255, 1);\nbackground(255);\n\nstrokeWeight(4);\nstroke(255, 0, 10, 0.3);\nellipse(40, 40, 50, 50);\nellipse(50, 50, 40, 40);\n</code>\n</div>"],
              alt: "Green to red gradient from bottom L to top R. shading originates from top left.\nRainbow gradient from left to right. Brightness increasing to white at top.\nunknown image.\n50x50 ellipse at middle L & 40x40 ellipse at center. Transluscent pink outlines.",
              class: "p5",
              module: "Color",
              submodule: "Setting",
              overloads: [{
                line: 223,
                params: [{
                  name: "mode",
                  description: "<p>either RGB, HSB or HSL, corresponding to\n                         Red/Green/Blue and Hue/Saturation/Brightness\n                         (or Lightness)</p>\n",
                  type: "Constant"
                }, {
                  name: "max",
                  description: "<p>range for all values</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 300,
                params: [{
                  name: "mode",
                  description: "",
                  type: "Constant"
                }, {
                  name: "max1",
                  description: "<p>range for the red or hue depending on the\n                             current color mode</p>\n",
                  type: "Number"
                }, {
                  name: "max2",
                  description: "<p>range for the green or saturation depending\n                             on the current color mode</p>\n",
                  type: "Number"
                }, {
                  name: "max3",
                  description: "<p>range for the blue or brightness/lighntess\n                             depending on the current color mode</p>\n",
                  type: "Number"
                }, {
                  name: "maxA",
                  description: "<p>range for the alpha</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "src/color/setting.js",
              line: 344,
              description: '<p>Sets the color used to fill shapes. For example, if you run\nfill(204, 102, 0), all subsequent shapes will be filled with orange. This\ncolor is either specified in terms of the RGB or HSB color depending on\nthe current <a href="#/p5/colorMode">colorMode()</a>. (The default color space is RGB, with each value\nin the range from 0 to 255). The alpha range by default is also 0 to 255.\n<br><br>\nIf a single string argument is provided, RGB, RGBA and Hex CSS color strings\nand all named color strings are supported. In this case, an alpha number\nvalue as a second argument is not supported, the RGBA form should be used.\n<br><br>\nA p5 <a href="#/p5.Color">Color</a> object can also be provided to set the fill color.</p>\n',
              itemtype: "method",
              name: "fill",
              chainable: 1,
              example: ["\n<div>\n<code>\n// Grayscale integer value\nfill(51);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// R, G & B integer values\nfill(255, 204, 0);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// H, S & B integer values\ncolorMode(HSB);\nfill(255, 204, 100);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// Named SVG/CSS color string\nfill('red');\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// three-digit hexadecimal RGB notation\nfill('#fae');\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// six-digit hexadecimal RGB notation\nfill('#222222');\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// integer RGB notation\nfill('rgb(0,255,0)');\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// integer RGBA notation\nfill('rgba(0,255,0, 0.25)');\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// percentage RGB notation\nfill('rgb(100%,0%,10%)');\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// percentage RGBA notation\nfill('rgba(100%,0%,100%,0.5)');\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// p5 Color object\nfill(color(0, 0, 255));\nrect(20, 20, 60, 60);\n</code>\n</div>"],
              alt: "60x60 dark charcoal grey rect with black outline in center of canvas.\n60x60 yellow rect with black outline in center of canvas.\n60x60 royal blue rect with black outline in center of canvas.\n60x60 red rect with black outline in center of canvas.\n60x60 pink rect with black outline in center of canvas.\n60x60 black rect with black outline in center of canvas.\n60x60 light green rect with black outline in center of canvas.\n60x60 soft green rect with black outline in center of canvas.\n60x60 red rect with black outline in center of canvas.\n60x60 dark fushcia rect with black outline in center of canvas.\n60x60 blue rect with black outline in center of canvas.",
              class: "p5",
              module: "Color",
              submodule: "Setting",
              overloads: [{
                line: 344,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value relative to\n                                the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 469,
                params: [{
                  name: "value",
                  description: "<p>a color string</p>\n",
                  type: "String"
                }],
                chainable: 1
              }, {
                line: 475,
                params: [{
                  name: "gray",
                  description: "<p>a gray value</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 482,
                params: [{
                  name: "values",
                  description: "<p>an array containing the red,green,blue &amp;\n                                and alpha components of the color</p>\n",
                  type: "Number[]"
                }],
                chainable: 1
              }, {
                line: 489,
                params: [{
                  name: "color",
                  description: "<p>the fill color</p>\n",
                  type: "p5.Color"
                }],
                chainable: 1
              }]
            }, {
              file: "src/color/setting.js",
              line: 501,
              description: '<p>Disables filling geometry. If both <a href="#/p5/noStroke">noStroke()</a> and <a href="#/p5/noFill">noFill()</a> are called,\nnothing will be drawn to the screen.</p>\n',
              itemtype: "method",
              name: "noFill",
              chainable: 1,
              example: ["\n<div>\n<code>\nrect(15, 10, 55, 55);\nnoFill();\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(0);\n  noFill();\n  stroke(100, 100, 240);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  box(45, 45, 45);\n}\n</code>\n</div>"],
              alt: "white rect top middle and noFill rect center. Both 60x60 with black outlines.\nblack canvas with purple cube wireframe spinning",
              class: "p5",
              module: "Color",
              submodule: "Setting"
            }, {
              file: "src/color/setting.js",
              line: 542,
              description: '<p>Disables drawing the stroke (outline). If both <a href="#/p5/noStroke">noStroke()</a> and <a href="#/p5/noFill">noFill()</a>\nare called, nothing will be drawn to the screen.</p>\n',
              itemtype: "method",
              name: "noStroke",
              chainable: 1,
              example: ["\n<div>\n<code>\nnoStroke();\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(0);\n  noStroke();\n  fill(240, 150, 150);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  box(45, 45, 45);\n}\n</code>\n</div>"],
              alt: "60x60 white rect at center. no outline.\nblack canvas with pink cube spinning",
              class: "p5",
              module: "Color",
              submodule: "Setting"
            }, {
              file: "src/color/setting.js",
              line: 582,
              description: '<p>Sets the color used to draw lines and borders around shapes. This color\nis either specified in terms of the RGB or HSB color depending on the\ncurrent <a href="#/p5/colorMode">colorMode()</a> (the default color space is RGB, with each value in\nthe range from 0 to 255). The alpha range by default is also 0 to 255.\n<br><br>\nIf a single string argument is provided, RGB, RGBA and Hex CSS color\nstrings and all named color strings are supported. In this case, an alpha\nnumber value as a second argument is not supported, the RGBA form should be\nused.\n<br><br>\nA p5 <a href="#/p5.Color">Color</a> object can also be provided to set the stroke color.</p>\n',
              itemtype: "method",
              name: "stroke",
              chainable: 1,
              example: ["\n<div>\n<code>\n// Grayscale integer value\nstrokeWeight(4);\nstroke(51);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// R, G & B integer values\nstroke(255, 204, 0);\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// H, S & B integer values\ncolorMode(HSB);\nstrokeWeight(4);\nstroke(255, 204, 100);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// Named SVG/CSS color string\nstroke('red');\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// three-digit hexadecimal RGB notation\nstroke('#fae');\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// six-digit hexadecimal RGB notation\nstroke('#222222');\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// integer RGB notation\nstroke('rgb(0,255,0)');\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// integer RGBA notation\nstroke('rgba(0,255,0,0.25)');\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// percentage RGB notation\nstroke('rgb(100%,0%,10%)');\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// percentage RGBA notation\nstroke('rgba(100%,0%,100%,0.5)');\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>\n\n<div>\n<code>\n// p5 Color object\nstroke(color(0, 0, 255));\nstrokeWeight(4);\nrect(20, 20, 60, 60);\n</code>\n</div>"],
              alt: "60x60 white rect at center. Dark charcoal grey outline.\n60x60 white rect at center. Yellow outline.\n60x60 white rect at center. Royal blue outline.\n60x60 white rect at center. Red outline.\n60x60 white rect at center. Pink outline.\n60x60 white rect at center. Black outline.\n60x60 white rect at center. Bright green outline.\n60x60 white rect at center. Soft green outline.\n60x60 white rect at center. Red outline.\n60x60 white rect at center. Dark fushcia outline.\n60x60 white rect at center. Blue outline.",
              class: "p5",
              module: "Color",
              submodule: "Setting",
              overloads: [{
                line: 582,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value relative to\n                                the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 721,
                params: [{
                  name: "value",
                  description: "<p>a color string</p>\n",
                  type: "String"
                }],
                chainable: 1
              }, {
                line: 727,
                params: [{
                  name: "gray",
                  description: "<p>a gray value</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 734,
                params: [{
                  name: "values",
                  description: "<p>an array containing the red,green,blue &amp;\n                                and alpha components of the color</p>\n",
                  type: "Number[]"
                }],
                chainable: 1
              }, {
                line: 741,
                params: [{
                  name: "color",
                  description: "<p>the stroke color</p>\n",
                  type: "p5.Color"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 16,
              description: '<p>Draw an arc to the screen. If called with only x, y, w, h, start, and\nstop, the arc will be drawn and filled as an open pie segment. If a mode parameter is provided, the arc\nwill be filled like an open semi-circle (OPEN) , a closed semi-circle (CHORD), or as a closed pie segment (PIE). The\norigin may be changed with the <a href="#/p5/ellipseMode">ellipseMode()</a> function.<br><br>\nNote that drawing a full circle (ex: 0 to TWO_PI) will appear blank\nbecause 0 and TWO_PI are the same position on the unit circle. The\nbest way to handle this is by using the <a href="#/p5/ellipse">ellipse()</a> function instead\nto create a closed ellipse, and to use the <a href="#/p5/arc">arc()</a> function\nonly to draw parts of an ellipse.</p>\n',
              itemtype: "method",
              name: "arc",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the arc&#39;s ellipse</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-coordinate of the arc&#39;s ellipse</p>\n",
                type: "Number"
              }, {
                name: "w",
                description: "<p>width of the arc&#39;s ellipse by default</p>\n",
                type: "Number"
              }, {
                name: "h",
                description: "<p>height of the arc&#39;s ellipse by default</p>\n",
                type: "Number"
              }, {
                name: "start",
                description: "<p>angle to start the arc, specified in radians</p>\n",
                type: "Number"
              }, {
                name: "stop",
                description: "<p>angle to stop the arc, specified in radians</p>\n",
                type: "Number"
              }, {
                name: "mode",
                description: "<p>optional parameter to determine the way of drawing\n                        the arc. either CHORD, PIE or OPEN</p>\n",
                type: "Constant",
                optional: !0
              }, {
                name: "detail",
                description: "<p>optional parameter for WebGL mode only. This is to\n                        specify the number of vertices that makes up the\n                        perimeter of the arc. Default value is 25.</p>\n",
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\narc(50, 55, 50, 50, 0, HALF_PI);\nnoFill();\narc(50, 55, 60, 60, HALF_PI, PI);\narc(50, 55, 70, 70, PI, PI + QUARTER_PI);\narc(50, 55, 80, 80, PI + QUARTER_PI, TWO_PI);\n</code>\n</div>\n\n<div>\n<code>\narc(50, 50, 80, 80, 0, PI + QUARTER_PI);\n</code>\n</div>\n\n<div>\n<code>\narc(50, 50, 80, 80, 0, PI + QUARTER_PI, OPEN);\n</code>\n</div>\n\n<div>\n<code>\narc(50, 50, 80, 80, 0, PI + QUARTER_PI, CHORD);\n</code>\n</div>\n\n<div>\n<code>\narc(50, 50, 80, 80, 0, PI + QUARTER_PI, PIE);\n</code>\n</div>"],
              alt: "shattered outline of an ellipse with a quarter of a white circle bottom-right.\nwhite ellipse with top right quarter missing.\nwhite ellipse with black outline with top right missing.\nwhite ellipse with top right missing with black outline around shape.\nwhite ellipse with top right quarter missing with black outline around the shape.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives"
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 149,
              description: '<p>Draws an ellipse (oval) to the screen. An ellipse with equal width and\nheight is a circle. By default, the first two parameters set the location,\nand the third and fourth parameters set the shape&#39;s width and height. If\nno height is specified, the value of width is used for both the width and\nheight. If a negative height or width is specified, the absolute value is taken.\nThe origin may be changed with the <a href="#/p5/ellipseMode">ellipseMode()</a> function.</p>\n',
              itemtype: "method",
              name: "ellipse",
              chainable: 1,
              example: ["\n<div>\n<code>\nellipse(56, 46, 55, 55);\n</code>\n</div>"],
              alt: "white ellipse with black outline in middle-right of canvas that is 55x55.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives",
              overloads: [{
                line: 149,
                params: [{
                  name: "x",
                  description: "<p>x-coordinate of the ellipse.</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>y-coordinate of the ellipse.</p>\n",
                  type: "Number"
                }, {
                  name: "w",
                  description: "<p>width of the ellipse.</p>\n",
                  type: "Number"
                }, {
                  name: "h",
                  description: "<p>height of the ellipse.</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 174,
                params: [{
                  name: "x",
                  description: "",
                  type: "Number"
                }, {
                  name: "y",
                  description: "",
                  type: "Number"
                }, {
                  name: "w",
                  description: "",
                  type: "Number"
                }, {
                  name: "h",
                  description: "",
                  type: "Number"
                }, {
                  name: "detail",
                  description: "<p>number of radial sectors to draw (for WebGL mode)</p>\n",
                  type: "Integer"
                }]
              }]
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 209,
              description: "<p>Draws a circle to the screen. A circle is a simple closed shape.\nIt is the set of all points in a plane that are at a given distance from a given point, the centre.\nThis function is a special case of the ellipse() function, where the width and height of the ellipse are the same.\nHeight and width of the ellipse is equal to twice the radius of the circle..\nBy default, the first two parameters set the location of the centre of the circle, the third sets the radius of the circle.</p>\n",
              itemtype: "method",
              name: "circle",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the centre of the circle.</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-coordinate of the centre of the circle.</p>\n",
                type: "Number"
              }, {
                name: "r",
                description: "<p>radius of the circle.</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n// Draw a circle at location (30, 30) with a radius of 20.\ncircle(30, 30, 20);\n</code>\n</div>"],
              alt: "white circle with black outline in mid of canvas that is 55x55.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives"
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 239,
              description: '<p>Draws a line (a direct path between two points) to the screen. The version\nof <a href="#/p5/line">line()</a> with four parameters draws the line in 2D. To color a line, use\nthe <a href="#/p5/stroke">stroke()</a> function. A line cannot be filled, therefore the <a href="#/p5/fill">fill()</a>\nfunction will not affect the color of a line. 2D lines are drawn with a\nwidth of one pixel by default, but this can be changed with the\n<a href="#/p5/strokeWeight">strokeWeight()</a> function.</p>\n',
              itemtype: "method",
              name: "line",
              chainable: 1,
              example: ["\n<div>\n<code>\nline(30, 20, 85, 75);\n</code>\n</div>\n\n<div>\n<code>\nline(30, 20, 85, 20);\nstroke(126);\nline(85, 20, 85, 75);\nstroke(255);\nline(85, 75, 30, 75);\n</code>\n</div>"],
              alt: "line 78 pixels long running from mid-top to bottom-right of canvas.\n3 lines of various stroke sizes. Form top, bottom and right sides of a square.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives",
              overloads: [{
                line: 239,
                params: [{
                  name: "x1",
                  description: "<p>the x-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "<p>the y-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "<p>the x-coordinate of the second point</p>\n",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "<p>the y-coordinate of the second point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 275,
                params: [{
                  name: "x1",
                  description: "",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "",
                  type: "Number"
                }, {
                  name: "z1",
                  description: "<p>the z-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "",
                  type: "Number"
                }, {
                  name: "z2",
                  description: "<p>the z-coordinate of the second point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 295,
              description: "<p>Draws a point, a coordinate in space at the dimension of one pixel.\nThe first parameter is the horizontal value for the point, the second\nvalue is the vertical value for the point. The color of the point is\ndetermined by the current stroke.</p>\n",
              itemtype: "method",
              name: "point",
              params: [{
                name: "x",
                description: "<p>the x-coordinate</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>the y-coordinate</p>\n",
                type: "Number"
              }, {
                name: "z",
                description: "<p>the z-coordinate (for WebGL mode)</p>\n",
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\npoint(30, 20);\npoint(85, 20);\npoint(85, 75);\npoint(30, 75);\n</code>\n</div>"],
              alt: "4 points centered in the middle-right of the canvas.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives"
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 330,
              description: "<p>Draw a quad. A quad is a quadrilateral, a four sided polygon. It is\nsimilar to a rectangle, but the angles between its edges are not\nconstrained to ninety degrees. The first pair of parameters (x1,y1)\nsets the first vertex and the subsequent pairs should proceed\nclockwise or counter-clockwise around the defined shape.</p>\n",
              itemtype: "method",
              name: "quad",
              chainable: 1,
              example: ["\n<div>\n<code>\nquad(38, 31, 86, 20, 69, 63, 30, 76);\n</code>\n</div>"],
              alt: "irregular white quadrilateral shape with black outline mid-right of canvas.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives",
              overloads: [{
                line: 330,
                params: [{
                  name: "x1",
                  description: "<p>the x-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "<p>the y-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "<p>the x-coordinate of the second point</p>\n",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "<p>the y-coordinate of the second point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "<p>the x-coordinate of the third point</p>\n",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "<p>the y-coordinate of the third point</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "<p>the x-coordinate of the fourth point</p>\n",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "<p>the y-coordinate of the fourth point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 358,
                params: [{
                  name: "x1",
                  description: "",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "",
                  type: "Number"
                }, {
                  name: "z1",
                  description: "<p>the z-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "",
                  type: "Number"
                }, {
                  name: "z2",
                  description: "<p>the z-coordinate of the second point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "",
                  type: "Number"
                }, {
                  name: "z3",
                  description: "<p>the z-coordinate of the third point</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "",
                  type: "Number"
                }, {
                  name: "z4",
                  description: "<p>the z-coordinate of the fourth point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 384,
              description: '<p>Draws a rectangle to the screen. A rectangle is a four-sided shape with\nevery angle at ninety degrees. By default, the first two parameters set\nthe location of the upper-left corner, the third sets the width, and the\nfourth sets the height. The way these parameters are interpreted, however,\nmay be changed with the <a href="#/p5/rectMode">rectMode()</a> function.\n<br><br>\nThe fifth, sixth, seventh and eighth parameters, if specified,\ndetermine corner radius for the top-left, top-right, lower-right and\nlower-left corners, respectively. An omitted corner radius parameter is set\nto the value of the previously specified radius value in the parameter list.</p>\n',
              itemtype: "method",
              name: "rect",
              chainable: 1,
              example: ["\n<div>\n<code>\n// Draw a rectangle at location (30, 20) with a width and height of 55.\nrect(30, 20, 55, 55);\n</code>\n</div>\n\n<div>\n<code>\n// Draw a rectangle with rounded corners, each having a radius of 20.\nrect(30, 20, 55, 55, 20);\n</code>\n</div>\n\n<div>\n<code>\n// Draw a rectangle with rounded corners having the following radii:\n// top-left = 20, top-right = 15, bottom-right = 10, bottom-left = 5.\nrect(30, 20, 55, 55, 20, 15, 10, 5);\n</code>\n</div>"],
              alt: "55x55 white rect with black outline in mid-right of canvas.\n55x55 white rect with black outline and rounded edges in mid-right of canvas.\n55x55 white rect with black outline and rounded edges of different radii.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives",
              overloads: [{
                line: 384,
                params: [{
                  name: "x",
                  description: "<p>x-coordinate of the rectangle.</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>y-coordinate of the rectangle.</p>\n",
                  type: "Number"
                }, {
                  name: "w",
                  description: "<p>width of the rectangle.</p>\n",
                  type: "Number"
                }, {
                  name: "h",
                  description: "<p>height of the rectangle.</p>\n",
                  type: "Number"
                }, {
                  name: "tl",
                  description: "<p>optional radius of top-left corner.</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "tr",
                  description: "<p>optional radius of top-right corner.</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "br",
                  description: "<p>optional radius of bottom-right corner.</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "bl",
                  description: "<p>optional radius of bottom-left corner.</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 434,
                params: [{
                  name: "x",
                  description: "",
                  type: "Number"
                }, {
                  name: "y",
                  description: "",
                  type: "Number"
                }, {
                  name: "w",
                  description: "",
                  type: "Number"
                }, {
                  name: "h",
                  description: "",
                  type: "Number"
                }, {
                  name: "detailX",
                  description: "<p>number of segments in the x-direction (for WebGL mode)</p>\n",
                  type: "Integer",
                  optional: !0
                }, {
                  name: "detailY",
                  description: "<p>number of segments in the y-direction (for WebGL mode)</p>\n",
                  type: "Integer",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 467,
              description: '<p>Draws a square to the screen. A square is a four-sided shape with\nevery angle at ninety degrees, and equal side size.\nThis function is a special case of the rect() function, where the width and height are the same, and the parameter is called &quot;s&quot; for side size.\nBy default, the first two parameters set the location of the upper-left corner, the third sets the side size of the square.\nThe way these parameters are interpreted, however,\nmay be changed with the <a href="#/p5/rectMode">rectMode()</a> function.\n<br><br>\nThe fourth, fifth, sixth and seventh parameters, if specified,\ndetermine corner radius for the top-left, top-right, lower-right and\nlower-left corners, respectively. An omitted corner radius parameter is set\nto the value of the previously specified radius value in the parameter list.</p>\n',
              itemtype: "method",
              name: "square",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the square.</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-coordinate of the square.</p>\n",
                type: "Number"
              }, {
                name: "s",
                description: "<p>side size of the square.</p>\n",
                type: "Number"
              }, {
                name: "tl",
                description: "<p>optional radius of top-left corner.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "tr",
                description: "<p>optional radius of top-right corner.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "br",
                description: "<p>optional radius of bottom-right corner.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "bl",
                description: "<p>optional radius of bottom-left corner.</p>\n",
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n// Draw a square at location (30, 20) with a side size of 55.\nsquare(30, 20, 55);\n</code>\n</div>\n\n<div>\n<code>\n// Draw a square with rounded corners, each having a radius of 20.\nsquare(30, 20, 55, 20);\n</code>\n</div>\n\n<div>\n<code>\n// Draw a square with rounded corners having the following radii:\n// top-left = 20, top-right = 15, bottom-right = 10, bottom-left = 5.\nsquare(30, 20, 55, 20, 15, 10, 5);\n</code>\n</div>"],
              alt: "55x55 white square with black outline in mid-right of canvas.\n55x55 white square with black outline and rounded edges in mid-right of canvas.\n55x55 white square with black outline and rounded edges of different radii.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives"
            }, {
              file: "src/core/shape/2d_primitives.js",
              line: 524,
              description: "<p>A triangle is a plane created by connecting three points. The first two\narguments specify the first point, the middle two arguments specify the\nsecond point, and the last two arguments specify the third point.</p>\n",
              itemtype: "method",
              name: "triangle",
              params: [{
                name: "x1",
                description: "<p>x-coordinate of the first point</p>\n",
                type: "Number"
              }, {
                name: "y1",
                description: "<p>y-coordinate of the first point</p>\n",
                type: "Number"
              }, {
                name: "x2",
                description: "<p>x-coordinate of the second point</p>\n",
                type: "Number"
              }, {
                name: "y2",
                description: "<p>y-coordinate of the second point</p>\n",
                type: "Number"
              }, {
                name: "x3",
                description: "<p>x-coordinate of the third point</p>\n",
                type: "Number"
              }, {
                name: "y3",
                description: "<p>y-coordinate of the third point</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\ntriangle(30, 75, 58, 20, 86, 75);\n</code>\n</div>"],
              alt: "white triangle with black outline in mid-right of canvas.",
              class: "p5",
              module: "Shape",
              submodule: "2D Primitives"
            }, {
              file: "src/core/shape/attributes.js",
              line: 14,
              description: '<p>Modifies the location from which ellipses are drawn by changing the way\nin which parameters given to <a href="#/p5/ellipse">ellipse()</a> are interpreted.\n<br><br>\nThe default mode is ellipseMode(CENTER), which interprets the first two\nparameters of <a href="#/p5/ellipse">ellipse()</a> as the shape&#39;s center point, while the third and\nfourth parameters are its width and height.\n<br><br>\nellipseMode(RADIUS) also uses the first two parameters of <a href="#/p5/ellipse">ellipse()</a> as\nthe shape&#39;s center point, but uses the third and fourth parameters to\nspecify half of the shapes&#39;s width and height.\n<br><br>\nellipseMode(CORNER) interprets the first two parameters of <a href="#/p5/ellipse">ellipse()</a> as\nthe upper-left corner of the shape, while the third and fourth parameters\nare its width and height.\n<br><br>\nellipseMode(CORNERS) interprets the first two parameters of <a href="#/p5/ellipse">ellipse()</a> as\nthe location of one corner of the ellipse&#39;s bounding box, and the third\nand fourth parameters as the location of the opposite corner.\n<br><br>\nThe parameter must be written in ALL CAPS because Javascript is a\ncase-sensitive language.</p>\n',
              itemtype: "method",
              name: "ellipseMode",
              params: [{
                name: "mode",
                description: "<p>either CENTER, RADIUS, CORNER, or CORNERS</p>\n",
                type: "Constant"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nellipseMode(RADIUS); // Set ellipseMode to RADIUS\nfill(255); // Set fill to white\nellipse(50, 50, 30, 30); // Draw white ellipse using RADIUS mode\n\nellipseMode(CENTER); // Set ellipseMode to CENTER\nfill(100); // Set fill to gray\nellipse(50, 50, 30, 30); // Draw gray ellipse using CENTER mode\n</code>\n</div>\n\n<div>\n<code>\nellipseMode(CORNER); // Set ellipseMode is CORNER\nfill(255); // Set fill to white\nellipse(25, 25, 50, 50); // Draw white ellipse using CORNER mode\n\nellipseMode(CORNERS); // Set ellipseMode to CORNERS\nfill(100); // Set fill to gray\nellipse(25, 25, 50, 50); // Draw gray ellipse using CORNERS mode\n</code>\n</div>"],
              alt: "60x60 white ellipse and 30x30 grey ellipse with black outlines at center.\n60x60 white ellipse @center and 30x30 grey ellipse top-right, black outlines.",
              class: "p5",
              module: "Shape",
              submodule: "Attributes"
            }, {
              file: "src/core/shape/attributes.js",
              line: 83,
              description: '<p>Draws all geometry with jagged (aliased) edges. Note that <a href="#/p5/smooth">smooth()</a> is\nactive by default in 2D mode, so it is necessary to call <a href="#/p5/noSmooth">noSmooth()</a> to disable\nsmoothing of geometry, images, and fonts. In 3D mode, <a href="#/p5/noSmooth">noSmooth()</a> is enabled\nby default, so it is necessary to call <a href="#/p5/smooth">smooth()</a> if you would like\nsmooth (antialiased) edges on your geometry.</p>\n',
              itemtype: "method",
              name: "noSmooth",
              chainable: 1,
              example: ["\n<div>\n<code>\nbackground(0);\nnoStroke();\nsmooth();\nellipse(30, 48, 36, 36);\nnoSmooth();\nellipse(70, 48, 36, 36);\n</code>\n</div>"],
              alt: "2 pixelated 36x36 white ellipses to left & right of center, black background",
              class: "p5",
              module: "Shape",
              submodule: "Attributes"
            }, {
              file: "src/core/shape/attributes.js",
              line: 113,
              description: '<p>Modifies the location from which rectangles are drawn by changing the way\nin which parameters given to <a href="#/p5/rect">rect()</a> are interpreted.\n<br><br>\nThe default mode is rectMode(CORNER), which interprets the first two\nparameters of <a href="#/p5/rect">rect()</a> as the upper-left corner of the shape, while the\nthird and fourth parameters are its width and height.\n<br><br>\nrectMode(CORNERS) interprets the first two parameters of <a href="#/p5/rect">rect()</a> as the\nlocation of one corner, and the third and fourth parameters as the\nlocation of the opposite corner.\n<br><br>\nrectMode(CENTER) interprets the first two parameters of <a href="#/p5/rect">rect()</a> as the\nshape&#39;s center point, while the third and fourth parameters are its\nwidth and height.\n<br><br>\nrectMode(RADIUS) also uses the first two parameters of <a href="#/p5/rect">rect()</a> as the\nshape&#39;s center point, but uses the third and fourth parameters to specify\nhalf of the shapes&#39;s width and height.\n<br><br>\nThe parameter must be written in ALL CAPS because Javascript is a\ncase-sensitive language.</p>\n',
              itemtype: "method",
              name: "rectMode",
              params: [{
                name: "mode",
                description: "<p>either CORNER, CORNERS, CENTER, or RADIUS</p>\n",
                type: "Constant"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nrectMode(CORNER); // Default rectMode is CORNER\nfill(255); // Set fill to white\nrect(25, 25, 50, 50); // Draw white rect using CORNER mode\n\nrectMode(CORNERS); // Set rectMode to CORNERS\nfill(100); // Set fill to gray\nrect(25, 25, 50, 50); // Draw gray rect using CORNERS mode\n</code>\n</div>\n\n<div>\n<code>\nrectMode(RADIUS); // Set rectMode to RADIUS\nfill(255); // Set fill to white\nrect(50, 50, 30, 30); // Draw white rect using RADIUS mode\n\nrectMode(CENTER); // Set rectMode to CENTER\nfill(100); // Set fill to gray\nrect(50, 50, 30, 30); // Draw gray rect using CENTER mode\n</code>\n</div>"],
              alt: "50x50 white rect at center and 25x25 grey rect in the top left of the other.\n50x50 white rect at center and 25x25 grey rect in the center of the other.",
              class: "p5",
              module: "Shape",
              submodule: "Attributes"
            }, {
              file: "src/core/shape/attributes.js",
              line: 182,
              description: '<p>Draws all geometry with smooth (anti-aliased) edges. <a href="#/p5/smooth">smooth()</a> will also\nimprove image quality of resized images. Note that <a href="#/p5/smooth">smooth()</a> is active by\ndefault in 2D mode; <a href="#/p5/noSmooth">noSmooth()</a> can be used to disable smoothing of geometry,\nimages, and fonts. In 3D mode, <a href="#/p5/noSmooth">noSmooth()</a> is enabled\nby default, so it is necessary to call <a href="#/p5/smooth">smooth()</a> if you would like\nsmooth (antialiased) edges on your geometry.</p>\n',
              itemtype: "method",
              name: "smooth",
              chainable: 1,
              example: ["\n<div>\n<code>\nbackground(0);\nnoStroke();\nsmooth();\nellipse(30, 48, 36, 36);\nnoSmooth();\nellipse(70, 48, 36, 36);\n</code>\n</div>"],
              alt: "2 pixelated 36x36 white ellipses one left one right of center. On black.",
              class: "p5",
              module: "Shape",
              submodule: "Attributes"
            }, {
              file: "src/core/shape/attributes.js",
              line: 213,
              description: "<p>Sets the style for rendering line endings. These ends are either squared,\nextended, or rounded, each of which specified with the corresponding\nparameters: SQUARE, PROJECT, and ROUND. The default cap is ROUND.</p>\n",
              itemtype: "method",
              name: "strokeCap",
              params: [{
                name: "cap",
                description: "<p>either SQUARE, PROJECT, or ROUND</p>\n",
                type: "Constant"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nstrokeWeight(12.0);\nstrokeCap(ROUND);\nline(20, 30, 80, 30);\nstrokeCap(SQUARE);\nline(20, 50, 80, 50);\nstrokeCap(PROJECT);\nline(20, 70, 80, 70);\n</code>\n</div>"],
              alt: "3 lines. Top line: rounded ends, mid: squared, bottom:longer squared ends.",
              class: "p5",
              module: "Shape",
              submodule: "Attributes"
            }, {
              file: "src/core/shape/attributes.js",
              line: 250,
              description: "<p>Sets the style of the joints which connect line segments. These joints\nare either mitered, beveled, or rounded and specified with the\ncorresponding parameters MITER, BEVEL, and ROUND. The default joint is\nMITER.</p>\n",
              itemtype: "method",
              name: "strokeJoin",
              params: [{
                name: "join",
                description: "<p>either MITER, BEVEL, ROUND</p>\n",
                type: "Constant"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nnoFill();\nstrokeWeight(10.0);\nstrokeJoin(MITER);\nbeginShape();\nvertex(35, 20);\nvertex(65, 50);\nvertex(35, 80);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nnoFill();\nstrokeWeight(10.0);\nstrokeJoin(BEVEL);\nbeginShape();\nvertex(35, 20);\nvertex(65, 50);\nvertex(35, 80);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nnoFill();\nstrokeWeight(10.0);\nstrokeJoin(ROUND);\nbeginShape();\nvertex(35, 20);\nvertex(65, 50);\nvertex(35, 80);\nendShape();\n</code>\n</div>"],
              alt: "Right-facing arrowhead shape with pointed tip in center of canvas.\nRight-facing arrowhead shape with flat tip in center of canvas.\nRight-facing arrowhead shape with rounded tip in center of canvas.",
              class: "p5",
              module: "Shape",
              submodule: "Attributes"
            }, {
              file: "src/core/shape/attributes.js",
              line: 317,
              description: "<p>Sets the width of the stroke used for lines, points, and the border\naround shapes. All widths are set in units of pixels.</p>\n",
              itemtype: "method",
              name: "strokeWeight",
              params: [{
                name: "weight",
                description: "<p>the weight (in pixels) of the stroke</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nstrokeWeight(1); // Default\nline(20, 20, 80, 20);\nstrokeWeight(4); // Thicker\nline(20, 40, 80, 40);\nstrokeWeight(10); // Beastly\nline(20, 70, 80, 70);\n</code>\n</div>"],
              alt: "3 horizontal black lines. Top line: thin, mid: medium, bottom:thick.",
              class: "p5",
              module: "Shape",
              submodule: "Attributes"
            }, {
              file: "src/core/shape/curves.js",
              line: 13,
              description: '<p>Draws a cubic Bezier curve on the screen. These curves are defined by a\nseries of anchor and control points. The first two parameters specify\nthe first anchor point and the last two parameters specify the other\nanchor point, which become the first and last points on the curve. The\nmiddle parameters specify the two control points which define the shape\nof the curve. Approximately speaking, control points &quot;pull&quot; the curve\ntowards them.<br /><br />Bezier curves were developed by French\nautomotive engineer Pierre Bezier, and are commonly used in computer\ngraphics to define gently sloping curves. See also <a href="#/p5/curve">curve()</a>.</p>\n',
              itemtype: "method",
              name: "bezier",
              chainable: 1,
              example: ["\n<div>\n<code>\nnoFill();\nstroke(255, 102, 0);\nline(85, 20, 10, 10);\nline(90, 90, 15, 80);\nstroke(0, 0, 0);\nbezier(85, 20, 10, 10, 90, 90, 15, 80);\n</code>\n</div>\n\n<div>\n<code>\nbackground(0, 0, 0);\nnoFill();\nstroke(255);\nbezier(250, 250, 0, 100, 100, 0, 100, 0, 0, 0, 100, 0);\n</code>\n</div>"],
              alt: "stretched black s-shape in center with orange lines extending from end points.\nstretched black s-shape with 10 5x5 white ellipses along the shape.\nstretched black s-shape with 7 5x5 ellipses and orange lines along the shape.\nstretched black s-shape with 17 small orange lines extending from under shape.\nhorseshoe shape with orange ends facing left and black curved center.\nhorseshoe shape with orange ends facing left and black curved center.\nLine shaped like right-facing arrow,points move with mouse-x and warp shape.\nhorizontal line that hooks downward on the right and 13 5x5 ellipses along it.\nright curving line mid-right of canvas with 7 short lines radiating from it.",
              class: "p5",
              module: "Shape",
              submodule: "Curves",
              overloads: [{
                line: 13,
                params: [{
                  name: "x1",
                  description: "<p>x-coordinate for the first anchor point</p>\n",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "<p>y-coordinate for the first anchor point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "<p>x-coordinate for the first control point</p>\n",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "<p>y-coordinate for the first control point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "<p>x-coordinate for the second control point</p>\n",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "<p>y-coordinate for the second control point</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "<p>x-coordinate for the second anchor point</p>\n",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "<p>y-coordinate for the second anchor point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 66,
                params: [{
                  name: "x1",
                  description: "",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "",
                  type: "Number"
                }, {
                  name: "z1",
                  description: "<p>z-coordinate for the first anchor point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "",
                  type: "Number"
                }, {
                  name: "z2",
                  description: "<p>z-coordinate for the first control point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "",
                  type: "Number"
                }, {
                  name: "z3",
                  description: "<p>z-coordinate for the second control point</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "",
                  type: "Number"
                }, {
                  name: "z4",
                  description: "<p>z-coordinate for the second anchor point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/curves.js",
              line: 96,
              description: "<p>Sets the resolution at which Beziers display.</p>\n<p>The default value is 20.</p>\n<p>This function is only useful when using the WEBGL renderer\nas the default canvas renderer does not use this information.</p>\n",
              itemtype: "method",
              name: "bezierDetail",
              params: [{
                name: "detail",
                description: "<p>resolution of the curves</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  noFill();\n\n  bezierDetail(5);\n}\n\nfunction draw() {\n  background(200);\n\n  // prettier-ignore\n  bezier(-40, -40, 0,\n          90, -40, 0,\n         -90,  40, 0,\n          40,  40, 0);\n}\n</code>\n</div>"],
              alt: "stretched black s-shape with a low level of bezier detail",
              class: "p5",
              module: "Shape",
              submodule: "Curves"
            }, {
              file: "src/core/shape/curves.js",
              line: 139,
              description: "<p>Evaluates the Bezier at position t for points a, b, c, d.\nThe parameters a and d are the first and last points\non the curve, and b and c are the control points.\nThe final parameter t varies between 0 and 1.\nThis can be done once with the x coordinates and a second time\nwith the y coordinates to get the location of a bezier curve at t.</p>\n",
              itemtype: "method",
              name: "bezierPoint",
              params: [{
                name: "a",
                description: "<p>coordinate of first point on the curve</p>\n",
                type: "Number"
              }, {
                name: "b",
                description: "<p>coordinate of first control point</p>\n",
                type: "Number"
              }, {
                name: "c",
                description: "<p>coordinate of second control point</p>\n",
                type: "Number"
              }, {
                name: "d",
                description: "<p>coordinate of second point on the curve</p>\n",
                type: "Number"
              }, {
                name: "t",
                description: "<p>value between 0 and 1</p>\n",
                type: "Number"
              }],
              return: {
                description: "the value of the Bezier at position t",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoFill();\nlet x1 = 85,\n x2 = 10,\n x3 = 90,\n x4 = 15;\nlet y1 = 20,\n y2 = 10,\n y3 = 90,\n y4 = 80;\nbezier(x1, y1, x2, y2, x3, y3, x4, y4);\nfill(255);\nlet steps = 10;\nfor (let i = 0; i <= steps; i++) {\n  let t = i / steps;\n  let x = bezierPoint(x1, x2, x3, x4, t);\n  let y = bezierPoint(y1, y2, y3, y4, t);\n  ellipse(x, y, 5, 5);\n}\n</code>\n</div>"],
              alt: "stretched black s-shape with 17 small orange lines extending from under shape.",
              class: "p5",
              module: "Shape",
              submodule: "Curves"
            }, {
              file: "src/core/shape/curves.js",
              line: 194,
              description: "<p>Evaluates the tangent to the Bezier at position t for points a, b, c, d.\nThe parameters a and d are the first and last points\non the curve, and b and c are the control points.\nThe final parameter t varies between 0 and 1.</p>\n",
              itemtype: "method",
              name: "bezierTangent",
              params: [{
                name: "a",
                description: "<p>coordinate of first point on the curve</p>\n",
                type: "Number"
              }, {
                name: "b",
                description: "<p>coordinate of first control point</p>\n",
                type: "Number"
              }, {
                name: "c",
                description: "<p>coordinate of second control point</p>\n",
                type: "Number"
              }, {
                name: "d",
                description: "<p>coordinate of second point on the curve</p>\n",
                type: "Number"
              }, {
                name: "t",
                description: "<p>value between 0 and 1</p>\n",
                type: "Number"
              }],
              return: {
                description: "the tangent at position t",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoFill();\nbezier(85, 20, 10, 10, 90, 90, 15, 80);\nlet steps = 6;\nfill(255);\nfor (let i = 0; i <= steps; i++) {\n  let t = i / steps;\n  // Get the location of the point\n  let x = bezierPoint(85, 10, 90, 15, t);\n  let y = bezierPoint(20, 10, 90, 80, t);\n  // Get the tangent points\n  let tx = bezierTangent(85, 10, 90, 15, t);\n  let ty = bezierTangent(20, 10, 90, 80, t);\n  // Calculate an angle from the tangent points\n  let a = atan2(ty, tx);\n  a += PI;\n  stroke(255, 102, 0);\n  line(x, y, cos(a) * 30 + x, sin(a) * 30 + y);\n  // The following line of code makes a line\n  // inverse of the above line\n  //line(x, y, cos(a)*-30 + x, sin(a)*-30 + y);\n  stroke(0);\n  ellipse(x, y, 5, 5);\n}\n</code>\n</div>\n\n<div>\n<code>\nnoFill();\nbezier(85, 20, 10, 10, 90, 90, 15, 80);\nstroke(255, 102, 0);\nlet steps = 16;\nfor (let i = 0; i <= steps; i++) {\n  let t = i / steps;\n  let x = bezierPoint(85, 10, 90, 15, t);\n  let y = bezierPoint(20, 10, 90, 80, t);\n  let tx = bezierTangent(85, 10, 90, 15, t);\n  let ty = bezierTangent(20, 10, 90, 80, t);\n  let a = atan2(ty, tx);\n  a -= HALF_PI;\n  line(x, y, cos(a) * 8 + x, sin(a) * 8 + y);\n}\n</code>\n</div>"],
              alt: "s-shaped line with 17 short orange lines extending from underside of shape",
              class: "p5",
              module: "Shape",
              submodule: "Curves"
            }, {
              file: "src/core/shape/curves.js",
              line: 273,
              description: '<p>Draws a curved line on the screen between two points, given as the\nmiddle four parameters. The first two parameters are a control point, as\nif the curve came from this point even though it&#39;s not drawn. The last\ntwo parameters similarly describe the other control point. <br /><br />\nLonger curves can be created by putting a series of <a href="#/p5/curve">curve()</a> functions\ntogether or using <a href="#/p5/curveVertex">curveVertex()</a>. An additional function called\n<a href="#/p5/curveTightness">curveTightness()</a> provides control for the visual quality of the curve.\nThe <a href="#/p5/curve">curve()</a> function is an implementation of Catmull-Rom splines.</p>\n',
              itemtype: "method",
              name: "curve",
              chainable: 1,
              example: ["\n<div>\n<code>\nnoFill();\nstroke(255, 102, 0);\ncurve(5, 26, 5, 26, 73, 24, 73, 61);\nstroke(0);\ncurve(5, 26, 73, 24, 73, 61, 15, 65);\nstroke(255, 102, 0);\ncurve(73, 24, 73, 61, 15, 65, 15, 65);\n</code>\n</div>\n<div>\n<code>\n// Define the curve points as JavaScript objects\nlet p1 = { x: 5, y: 26 },\n p2 = { x: 73, y: 24 };\nlet p3 = { x: 73, y: 61 },\n p4 = { x: 15, y: 65 };\nnoFill();\nstroke(255, 102, 0);\ncurve(p1.x, p1.y, p1.x, p1.y, p2.x, p2.y, p3.x, p3.y);\nstroke(0);\ncurve(p1.x, p1.y, p2.x, p2.y, p3.x, p3.y, p4.x, p4.y);\nstroke(255, 102, 0);\ncurve(p2.x, p2.y, p3.x, p3.y, p4.x, p4.y, p4.x, p4.y);\n</code>\n</div>\n<div>\n<code>\nnoFill();\nstroke(255, 102, 0);\ncurve(5, 26, 0, 5, 26, 0, 73, 24, 0, 73, 61, 0);\nstroke(0);\ncurve(5, 26, 0, 73, 24, 0, 73, 61, 0, 15, 65, 0);\nstroke(255, 102, 0);\ncurve(73, 24, 0, 73, 61, 0, 15, 65, 0, 15, 65, 0);\n</code>\n</div>"],
              alt: "horseshoe shape with orange ends facing left and black curved center.\nhorseshoe shape with orange ends facing left and black curved center.\ncurving black and orange lines.",
              class: "p5",
              module: "Shape",
              submodule: "Curves",
              overloads: [{
                line: 273,
                params: [{
                  name: "x1",
                  description: "<p>x-coordinate for the beginning control point</p>\n",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "<p>y-coordinate for the beginning control point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "<p>x-coordinate for the first point</p>\n",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "<p>y-coordinate for the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "<p>x-coordinate for the second point</p>\n",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "<p>y-coordinate for the second point</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "<p>x-coordinate for the ending control point</p>\n",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "<p>y-coordinate for the ending control point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 338,
                params: [{
                  name: "x1",
                  description: "",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "",
                  type: "Number"
                }, {
                  name: "z1",
                  description: "<p>z-coordinate for the beginning control point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "",
                  type: "Number"
                }, {
                  name: "z2",
                  description: "<p>z-coordinate for the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "",
                  type: "Number"
                }, {
                  name: "z3",
                  description: "<p>z-coordinate for the second point</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "",
                  type: "Number"
                }, {
                  name: "z4",
                  description: "<p>z-coordinate for the ending control point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/curves.js",
              line: 364,
              description: "<p>Sets the resolution at which curves display.</p>\n<p>The default value is 20 while the minimum value is 3.</p>\n<p>This function is only useful when using the WEBGL renderer\nas the default canvas renderer does not use this\ninformation.</p>\n",
              itemtype: "method",
              name: "curveDetail",
              params: [{
                name: "resolution",
                description: "<p>resolution of the curves</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n\n  curveDetail(5);\n}\nfunction draw() {\n  background(200);\n\n  curve(250, 600, 0, -30, 40, 0, 30, 30, 0, -250, 600, 0);\n}\n</code>\n</div>"],
              alt: "white arch shape with a low level of curve detail.",
              class: "p5",
              module: "Shape",
              submodule: "Curves"
            }, {
              file: "src/core/shape/curves.js",
              line: 406,
              description: '<p>Modifies the quality of forms created with <a href="#/p5/curve">curve()</a> and <a href="#/p5/curveVertex">curveVertex()</a>.\nThe parameter tightness determines how the curve fits to the vertex\npoints. The value 0.0 is the default value for tightness (this value\ndefines the curves to be Catmull-Rom splines) and the value 1.0 connects\nall the points with straight lines. Values within the range -5.0 and 5.0\nwill deform the curves but will leave them recognizable and as values\nincrease in magnitude, they will continue to deform.</p>\n',
              itemtype: "method",
              name: "curveTightness",
              params: [{
                name: "amount",
                description: "<p>amount of deformation from the original vertices</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n// Move the mouse left and right to see the curve change\n\nfunction setup() {\n  createCanvas(100, 100);\n  noFill();\n}\n\nfunction draw() {\n  background(204);\n  let t = map(mouseX, 0, width, -5, 5);\n  curveTightness(t);\n  beginShape();\n  curveVertex(10, 26);\n  curveVertex(10, 26);\n  curveVertex(83, 24);\n  curveVertex(83, 61);\n  curveVertex(25, 65);\n  curveVertex(25, 65);\n  endShape();\n}\n</code>\n</div>"],
              alt: "Line shaped like right-facing arrow,points move with mouse-x and warp shape.",
              class: "p5",
              module: "Shape",
              submodule: "Curves"
            }, {
              file: "src/core/shape/curves.js",
              line: 453,
              description: "<p>Evaluates the curve at position t for points a, b, c, d.\nThe parameter t varies between 0 and 1, a and d are control points\nof the curve, and b and c are the start and end points of the curve.\nThis can be done once with the x coordinates and a second time\nwith the y coordinates to get the location of a curve at t.</p>\n",
              itemtype: "method",
              name: "curvePoint",
              params: [{
                name: "a",
                description: "<p>coordinate of first control point of the curve</p>\n",
                type: "Number"
              }, {
                name: "b",
                description: "<p>coordinate of first point</p>\n",
                type: "Number"
              }, {
                name: "c",
                description: "<p>coordinate of second point</p>\n",
                type: "Number"
              }, {
                name: "d",
                description: "<p>coordinate of second control point</p>\n",
                type: "Number"
              }, {
                name: "t",
                description: "<p>value between 0 and 1</p>\n",
                type: "Number"
              }],
              return: {
                description: "bezier value at position t",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoFill();\ncurve(5, 26, 5, 26, 73, 24, 73, 61);\ncurve(5, 26, 73, 24, 73, 61, 15, 65);\nfill(255);\nellipseMode(CENTER);\nlet steps = 6;\nfor (let i = 0; i <= steps; i++) {\n  let t = i / steps;\n  let x = curvePoint(5, 5, 73, 73, t);\n  let y = curvePoint(26, 26, 24, 61, t);\n  ellipse(x, y, 5, 5);\n  x = curvePoint(5, 73, 73, 15, t);\n  y = curvePoint(26, 24, 61, 65, t);\n  ellipse(x, y, 5, 5);\n}\n</code>\n</div>\n\nline hooking down to right-bottom with 13 5x5 white ellipse points"],
              class: "p5",
              module: "Shape",
              submodule: "Curves"
            }, {
              file: "src/core/shape/curves.js",
              line: 502,
              description: "<p>Evaluates the tangent to the curve at position t for points a, b, c, d.\nThe parameter t varies between 0 and 1, a and d are points on the curve,\nand b and c are the control points.</p>\n",
              itemtype: "method",
              name: "curveTangent",
              params: [{
                name: "a",
                description: "<p>coordinate of first point on the curve</p>\n",
                type: "Number"
              }, {
                name: "b",
                description: "<p>coordinate of first control point</p>\n",
                type: "Number"
              }, {
                name: "c",
                description: "<p>coordinate of second control point</p>\n",
                type: "Number"
              }, {
                name: "d",
                description: "<p>coordinate of second point on the curve</p>\n",
                type: "Number"
              }, {
                name: "t",
                description: "<p>value between 0 and 1</p>\n",
                type: "Number"
              }],
              return: {
                description: "the tangent at position t",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nnoFill();\ncurve(5, 26, 73, 24, 73, 61, 15, 65);\nlet steps = 6;\nfor (let i = 0; i <= steps; i++) {\n  let t = i / steps;\n  let x = curvePoint(5, 73, 73, 15, t);\n  let y = curvePoint(26, 24, 61, 65, t);\n  //ellipse(x, y, 5, 5);\n  let tx = curveTangent(5, 73, 73, 15, t);\n  let ty = curveTangent(26, 24, 61, 65, t);\n  let a = atan2(ty, tx);\n  a -= PI / 2.0;\n  line(x, y, cos(a) * 8 + x, sin(a) * 8 + y);\n}\n</code>\n</div>"],
              alt: "right curving line mid-right of canvas with 7 short lines radiating from it.",
              class: "p5",
              module: "Shape",
              submodule: "Curves"
            }, {
              file: "src/core/shape/vertex.js",
              line: 22,
              description: '<p>Use the <a href="#/p5/beginContour">beginContour()</a> and <a href="#/p5/endContour">endContour()</a> functions to create negative\nshapes within shapes such as the center of the letter &#39;O&#39;. <a href="#/p5/beginContour">beginContour()</a>\nbegins recording vertices for the shape and <a href="#/p5/endContour">endContour()</a> stops recording.\nThe vertices that define a negative shape must &quot;wind&quot; in the opposite\ndirection from the exterior shape. First draw vertices for the exterior\nclockwise order, then for internal shapes, draw vertices\nshape in counter-clockwise.\n<br><br>\nThese functions can only be used within a <a href="#/p5/beginShape">beginShape()</a>/<a href="#/p5/endShape">endShape()</a> pair and\ntransformations such as <a href="#/p5/translate">translate()</a>, <a href="#/p5/rotate">rotate()</a>, and <a href="#/p5/scale">scale()</a> do not work\nwithin a <a href="#/p5/beginContour">beginContour()</a>/<a href="#/p5/endContour">endContour()</a> pair. It is also not possible to use\nother shapes, such as <a href="#/p5/ellipse">ellipse()</a> or <a href="#/p5/rect">rect()</a> within.</p>\n',
              itemtype: "method",
              name: "beginContour",
              chainable: 1,
              example: ["\n<div>\n<code>\ntranslate(50, 50);\nstroke(255, 0, 0);\nbeginShape();\n// Exterior part of shape, clockwise winding\nvertex(-40, -40);\nvertex(40, -40);\nvertex(40, 40);\nvertex(-40, 40);\n// Interior part of shape, counter-clockwise winding\nbeginContour();\nvertex(-20, -20);\nvertex(-20, 20);\nvertex(20, 20);\nvertex(20, -20);\nendContour();\nendShape(CLOSE);\n</code>\n</div>"],
              alt: "white rect and smaller grey rect with red outlines in center of canvas.",
              class: "p5",
              module: "Shape",
              submodule: "Vertex"
            }, {
              file: "src/core/shape/vertex.js",
              line: 70,
              description: '<p>Using the <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a> functions allow creating more\ncomplex forms. <a href="#/p5/beginShape">beginShape()</a> begins recording vertices for a shape and\n<a href="#/p5/endShape">endShape()</a> stops recording. The value of the kind parameter tells it which\ntypes of shapes to create from the provided vertices. With no mode\nspecified, the shape can be any irregular polygon.\n<br><br>\nThe parameters available for <a href="#/p5/beginShape">beginShape()</a> are POINTS, LINES, TRIANGLES,\nTRIANGLE_FAN, TRIANGLE_STRIP, QUADS, and QUAD_STRIP. After calling the\n<a href="#/p5/beginShape">beginShape()</a> function, a series of <a href="#/p5/vertex">vertex()</a> commands must follow. To stop\ndrawing the shape, call <a href="#/p5/endShape">endShape()</a>. Each shape will be outlined with the\ncurrent stroke color and filled with the fill color.\n<br><br>\nTransformations such as <a href="#/p5/translate">translate()</a>, <a href="#/p5/rotate">rotate()</a>, and <a href="#/p5/scale">scale()</a> do not work\nwithin <a href="#/p5/beginShape">beginShape()</a>. It is also not possible to use other shapes, such as\n<a href="#/p5/ellipse">ellipse()</a> or <a href="#/p5/rect">rect()</a> within <a href="#/p5/beginShape">beginShape()</a>.</p>\n',
              itemtype: "method",
              name: "beginShape",
              params: [{
                name: "kind",
                description: "<p>either POINTS, LINES, TRIANGLES, TRIANGLE_FAN\n                               TRIANGLE_STRIP, QUADS, or QUAD_STRIP</p>\n",
                type: "Constant",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nbeginShape();\nvertex(30, 20);\nvertex(85, 20);\nvertex(85, 75);\nvertex(30, 75);\nendShape(CLOSE);\n</code>\n</div>\n\n<div>\n<code>\nbeginShape(POINTS);\nvertex(30, 20);\nvertex(85, 20);\nvertex(85, 75);\nvertex(30, 75);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nbeginShape(LINES);\nvertex(30, 20);\nvertex(85, 20);\nvertex(85, 75);\nvertex(30, 75);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nnoFill();\nbeginShape();\nvertex(30, 20);\nvertex(85, 20);\nvertex(85, 75);\nvertex(30, 75);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nnoFill();\nbeginShape();\nvertex(30, 20);\nvertex(85, 20);\nvertex(85, 75);\nvertex(30, 75);\nendShape(CLOSE);\n</code>\n</div>\n\n<div>\n<code>\nbeginShape(TRIANGLES);\nvertex(30, 75);\nvertex(40, 20);\nvertex(50, 75);\nvertex(60, 20);\nvertex(70, 75);\nvertex(80, 20);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nbeginShape(TRIANGLE_STRIP);\nvertex(30, 75);\nvertex(40, 20);\nvertex(50, 75);\nvertex(60, 20);\nvertex(70, 75);\nvertex(80, 20);\nvertex(90, 75);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nbeginShape(TRIANGLE_FAN);\nvertex(57.5, 50);\nvertex(57.5, 15);\nvertex(92, 50);\nvertex(57.5, 85);\nvertex(22, 50);\nvertex(57.5, 15);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nbeginShape(QUADS);\nvertex(30, 20);\nvertex(30, 75);\nvertex(50, 75);\nvertex(50, 20);\nvertex(65, 20);\nvertex(65, 75);\nvertex(85, 75);\nvertex(85, 20);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nbeginShape(QUAD_STRIP);\nvertex(30, 20);\nvertex(30, 75);\nvertex(50, 20);\nvertex(50, 75);\nvertex(65, 20);\nvertex(65, 75);\nvertex(85, 20);\nvertex(85, 75);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nbeginShape();\nvertex(20, 20);\nvertex(40, 20);\nvertex(40, 40);\nvertex(60, 40);\nvertex(60, 60);\nvertex(20, 60);\nendShape(CLOSE);\n</code>\n</div>"],
              alt: "white square-shape with black outline in middle-right of canvas.\n4 black points in a square shape in middle-right of canvas.\n2 horizontal black lines. In the top-right and bottom-right of canvas.\n3 line shape with horizontal on top, vertical in middle and horizontal bottom.\nsquare line shape in middle-right of canvas.\n2 white triangle shapes mid-right canvas. left one pointing up and right down.\n5 horizontal interlocking and alternating white triangles in mid-right canvas.\n4 interlocking white triangles in 45 degree rotated square-shape.\n2 white rectangle shapes in mid-right canvas. Both 20x55.\n3 side-by-side white rectangles center rect is smaller in mid-right canvas.\nThick white l-shape with black outline mid-top-left of canvas.",
              class: "p5",
              module: "Shape",
              submodule: "Vertex"
            }, {
              file: "src/core/shape/vertex.js",
              line: 270,
              description: '<p>Specifies vertex coordinates for Bezier curves. Each call to\nbezierVertex() defines the position of two control points and\none anchor point of a Bezier curve, adding a new segment to a\nline or shape. For WebGL mode bezierVertex() can be used in 2D\nas well as 3D mode. 2D mode expects 6 parameters, while 3D mode\nexpects 9 parameters (including z coordinates).\n<br><br>\nThe first time bezierVertex() is used within a <a href="#/p5/beginShape">beginShape()</a>\ncall, it must be prefaced with a call to <a href="#/p5/vertex">vertex()</a> to set the first anchor\npoint. This function must be used between <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a>\nand only when there is no MODE or POINTS parameter specified to\n<a href="#/p5/beginShape">beginShape()</a>.</p>\n',
              itemtype: "method",
              name: "bezierVertex",
              chainable: 1,
              example: ["\n<div>\n<code>\nnoFill();\nbeginShape();\nvertex(30, 20);\nbezierVertex(80, 0, 80, 75, 30, 75);\nendShape();\n</code>\n</div>", "\n<div>\n<code>\nbeginShape();\nvertex(30, 20);\nbezierVertex(80, 0, 80, 75, 30, 75);\nbezierVertex(50, 80, 60, 25, 30, 20);\nendShape();\n</code>\n</div>", "\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  setAttributes('antialias', true);\n}\nfunction draw() {\n  orbitControl();\n  background(50);\n  strokeWeight(4);\n  stroke(255);\n  point(-25, 30);\n  point(25, 30);\n  point(25, -30);\n  point(-25, -30);\n\n  strokeWeight(1);\n  noFill();\n\n  beginShape();\n  vertex(-25, 30);\n  bezierVertex(25, 30, 25, -30, -25, -30);\n  endShape();\n\n  beginShape();\n  vertex(-25, 30, 20);\n  bezierVertex(25, 30, 20, 25, -30, 20, -25, -30, 20);\n  endShape();\n}\n</code>\n</div>"],
              alt: "crescent shape in middle of canvas with another crescent shape on positive z-axis.",
              class: "p5",
              module: "Shape",
              submodule: "Vertex",
              overloads: [{
                line: 270,
                params: [{
                  name: "x2",
                  description: "<p>x-coordinate for the first control point</p>\n",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "<p>y-coordinate for the first control point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "<p>x-coordinate for the second control point</p>\n",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "<p>y-coordinate for the second control point</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "<p>x-coordinate for the anchor point</p>\n",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "<p>y-coordinate for the anchor point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 358,
                params: [{
                  name: "x2",
                  description: "",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "",
                  type: "Number"
                }, {
                  name: "z2",
                  description: "<p>z-coordinate for the first control point (for WebGL mode)</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "",
                  type: "Number"
                }, {
                  name: "z3",
                  description: "<p>z-coordinate for the second control point (for WebGL mode)</p>\n",
                  type: "Number"
                }, {
                  name: "x4",
                  description: "",
                  type: "Number"
                }, {
                  name: "y4",
                  description: "",
                  type: "Number"
                }, {
                  name: "z4",
                  description: "<p>z-coordinate for the anchor point (for WebGL mode)</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/vertex.js",
              line: 398,
              description: '<p>Specifies vertex coordinates for curves. This function may only\nbe used between <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a> and only when there\nis no MODE parameter specified to <a href="#/p5/beginShape">beginShape()</a>.\nFor WebGL mode curveVertex() can be used in 2D as well as 3D mode.\n2D mode expects 2 parameters, while 3D mode expects 3 parameters.\n<br><br>\nThe first and last points in a series of curveVertex() lines will be used to\nguide the beginning and end of a the curve. A minimum of four\npoints is required to draw a tiny curve between the second and\nthird points. Adding a fifth point with curveVertex() will draw\nthe curve between the second, third, and fourth points. The\ncurveVertex() function is an implementation of Catmull-Rom\nsplines.</p>\n',
              itemtype: "method",
              name: "curveVertex",
              chainable: 1,
              example: ["\n<div>\n<code>\nstrokeWeight(5);\npoint(84, 91);\npoint(68, 19);\npoint(21, 17);\npoint(32, 91);\nstrokeWeight(1);\n\nnoFill();\nbeginShape();\ncurveVertex(84, 91);\ncurveVertex(84, 91);\ncurveVertex(68, 19);\ncurveVertex(21, 17);\ncurveVertex(32, 91);\ncurveVertex(32, 91);\nendShape();\n</code>\n</div>"],
              alt: "Upside-down u-shape line, mid canvas. left point extends beyond canvas view.",
              class: "p5",
              module: "Shape",
              submodule: "Vertex",
              overloads: [{
                line: 398,
                params: [{
                  name: "x",
                  description: "<p>x-coordinate of the vertex</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>y-coordinate of the vertex</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 443,
                params: [{
                  name: "x",
                  description: "",
                  type: "Number"
                }, {
                  name: "y",
                  description: "",
                  type: "Number"
                }, {
                  name: "z",
                  description: "<p>z-coordinate of the vertex (for WebGL mode)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/vertex.js",
              line: 508,
              description: '<p>Use the <a href="#/p5/beginContour">beginContour()</a> and <a href="#/p5/endContour">endContour()</a> functions to create negative\nshapes within shapes such as the center of the letter &#39;O&#39;. <a href="#/p5/beginContour">beginContour()</a>\nbegins recording vertices for the shape and <a href="#/p5/endContour">endContour()</a> stops recording.\nThe vertices that define a negative shape must &quot;wind&quot; in the opposite\ndirection from the exterior shape. First draw vertices for the exterior\nclockwise order, then for internal shapes, draw vertices\nshape in counter-clockwise.\n<br><br>\nThese functions can only be used within a <a href="#/p5/beginShape">beginShape()</a>/<a href="#/p5/endShape">endShape()</a> pair and\ntransformations such as <a href="#/p5/translate">translate()</a>, <a href="#/p5/rotate">rotate()</a>, and <a href="#/p5/scale">scale()</a> do not work\nwithin a <a href="#/p5/beginContour">beginContour()</a>/<a href="#/p5/endContour">endContour()</a> pair. It is also not possible to use\nother shapes, such as <a href="#/p5/ellipse">ellipse()</a> or <a href="#/p5/rect">rect()</a> within.</p>\n',
              itemtype: "method",
              name: "endContour",
              chainable: 1,
              example: ["\n<div>\n<code>\ntranslate(50, 50);\nstroke(255, 0, 0);\nbeginShape();\n// Exterior part of shape, clockwise winding\nvertex(-40, -40);\nvertex(40, -40);\nvertex(40, 40);\nvertex(-40, 40);\n// Interior part of shape, counter-clockwise winding\nbeginContour();\nvertex(-20, -20);\nvertex(-20, 20);\nvertex(20, 20);\nvertex(20, -20);\nendContour();\nendShape(CLOSE);\n</code>\n</div>"],
              alt: "white rect and smaller grey rect with red outlines in center of canvas.",
              class: "p5",
              module: "Shape",
              submodule: "Vertex"
            }, {
              file: "src/core/shape/vertex.js",
              line: 568,
              description: '<p>The <a href="#/p5/endShape">endShape()</a> function is the companion to <a href="#/p5/beginShape">beginShape()</a> and may only be\ncalled after <a href="#/p5/beginShape">beginShape()</a>. When <a href="#/p5/endshape">endshape()</a> is called, all of image data\ndefined since the previous call to <a href="#/p5/beginShape">beginShape()</a> is written into the image\nbuffer. The constant CLOSE as the value for the MODE parameter to close\nthe shape (to connect the beginning and the end).</p>\n',
              itemtype: "method",
              name: "endShape",
              params: [{
                name: "mode",
                description: "<p>use CLOSE to close the shape</p>\n",
                type: "Constant",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nnoFill();\n\nbeginShape();\nvertex(20, 20);\nvertex(45, 20);\nvertex(45, 80);\nendShape(CLOSE);\n\nbeginShape();\nvertex(50, 20);\nvertex(75, 20);\nvertex(75, 80);\nendShape();\n</code>\n</div>"],
              alt: "Triangle line shape with smallest interior angle on bottom and upside-down L.",
              class: "p5",
              module: "Shape",
              submodule: "Vertex"
            }, {
              file: "src/core/shape/vertex.js",
              line: 654,
              description: '<p>Specifies vertex coordinates for quadratic Bezier curves. Each call to\nquadraticVertex() defines the position of one control points and one\nanchor point of a Bezier curve, adding a new segment to a line or shape.\nThe first time quadraticVertex() is used within a <a href="#/p5/beginShape">beginShape()</a> call, it\nmust be prefaced with a call to <a href="#/p5/vertex">vertex()</a> to set the first anchor point.\nFor WebGL mode quadraticVertex() can be used in 2D as well as 3D mode.\n2D mode expects 4 parameters, while 3D mode expects 6 parameters\n(including z coordinates).\n<br><br>\nThis function must be used between <a href="#/p5/beginShape">beginShape()</a> and <a href="#/p5/endShape">endShape()</a>\nand only when there is no MODE or POINTS parameter specified to\n<a href="#/p5/beginShape">beginShape()</a>.</p>\n',
              itemtype: "method",
              name: "quadraticVertex",
              chainable: 1,
              example: ["\n<div>\n<code>\nstrokeWeight(5);\npoint(20, 20);\npoint(80, 20);\npoint(50, 50);\n\nnoFill();\nstrokeWeight(1);\nbeginShape();\nvertex(20, 20);\nquadraticVertex(80, 20, 50, 50);\nendShape();\n</code>\n</div>\n\n<div>\n<code>\nstrokeWeight(5);\npoint(20, 20);\npoint(80, 20);\npoint(50, 50);\n\npoint(20, 80);\npoint(80, 80);\npoint(80, 60);\n\nnoFill();\nstrokeWeight(1);\nbeginShape();\nvertex(20, 20);\nquadraticVertex(80, 20, 50, 50);\nquadraticVertex(20, 80, 80, 80);\nvertex(80, 60);\nendShape();\n</code>\n</div>"],
              alt: "arched-shaped black line with 4 pixel thick stroke weight.\nbackwards s-shaped black line with 4 pixel thick stroke weight.",
              class: "p5",
              module: "Shape",
              submodule: "Vertex",
              overloads: [{
                line: 654,
                params: [{
                  name: "cx",
                  description: "<p>x-coordinate for the control point</p>\n",
                  type: "Number"
                }, {
                  name: "cy",
                  description: "<p>y-coordinate for the control point</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "<p>x-coordinate for the anchor point</p>\n",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "<p>y-coordinate for the anchor point</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 720,
                params: [{
                  name: "cx",
                  description: "",
                  type: "Number"
                }, {
                  name: "cy",
                  description: "",
                  type: "Number"
                }, {
                  name: "cz",
                  description: "<p>z-coordinate for the control point (for WebGL mode)</p>\n",
                  type: "Number"
                }, {
                  name: "x3",
                  description: "",
                  type: "Number"
                }, {
                  name: "y3",
                  description: "",
                  type: "Number"
                }, {
                  name: "z3",
                  description: "<p>z-coordinate for the anchor point (for WebGL mode)</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/shape/vertex.js",
              line: 813,
              description: '<p>All shapes are constructed by connecting a series of vertices. <a href="#/p5/vertex">vertex()</a>\nis used to specify the vertex coordinates for points, lines, triangles,\nquads, and polygons. It is used exclusively within the <a href="#/p5/beginShape">beginShape()</a> and\n<a href="#/p5/endShape">endShape()</a> functions.</p>\n',
              itemtype: "method",
              name: "vertex",
              chainable: 1,
              example: ["\n<div>\n<code>\nstrokeWeight(3);\nbeginShape(POINTS);\nvertex(30, 20);\nvertex(85, 20);\nvertex(85, 75);\nvertex(30, 75);\nendShape();\n</code>\n</div>"],
              alt: "8 points making 4 lines",
              class: "p5",
              module: "Shape",
              submodule: "Vertex",
              overloads: [{
                line: 813,
                params: [{
                  name: "x",
                  description: "<p>x-coordinate of the vertex</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>y-coordinate of the vertex</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 900,
                params: [{
                  name: "x",
                  description: "",
                  type: "Number"
                }, {
                  name: "y",
                  description: "",
                  type: "Number"
                }, {
                  name: "z",
                  description: "<p>z-coordinate of the vertex</p>\n",
                  type: "Number"
                }, {
                  name: "u",
                  description: "<p>the vertex&#39;s texture u-coordinate</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "v",
                  description: "<p>the vertex&#39;s texture v-coordinate</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/constants.js",
              line: 13,
              itemtype: "property",
              name: "P2D",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 18,
              itemtype: "property",
              name: "WEBGL",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 25,
              itemtype: "property",
              name: "ARROW",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 30,
              itemtype: "property",
              name: "CROSS",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 35,
              itemtype: "property",
              name: "HAND",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 40,
              itemtype: "property",
              name: "MOVE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 45,
              itemtype: "property",
              name: "TEXT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 50,
              itemtype: "property",
              name: "WAIT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 58,
              description: '<p>HALF_PI is a mathematical constant with the value\n1.57079632679489661923. It is half the ratio of the\ncircumference of a circle to its diameter. It is useful in\ncombination with the trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.</p>\n',
              itemtype: "property",
              name: "HALF_PI",
              type: "Number",
              final: 1,
              example: ["\n<div><code>\narc(50, 50, 80, 80, 0, HALF_PI);\n</code></div>"],
              alt: "80x80 white quarter-circle with curve toward bottom right of canvas.",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 77,
              description: '<p>PI is a mathematical constant with the value\n3.14159265358979323846. It is the ratio of the circumference\nof a circle to its diameter. It is useful in combination with\nthe trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.</p>\n',
              itemtype: "property",
              name: "PI",
              type: "Number",
              final: 1,
              example: ["\n<div><code>\narc(50, 50, 80, 80, 0, PI);\n</code></div>"],
              alt: "white half-circle with curve toward bottom of canvas.",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 96,
              description: '<p>QUARTER_PI is a mathematical constant with the value 0.7853982.\nIt is one quarter the ratio of the circumference of a circle to\nits diameter. It is useful in combination with the trigonometric\nfunctions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.</p>\n',
              itemtype: "property",
              name: "QUARTER_PI",
              type: "Number",
              final: 1,
              example: ["\n<div><code>\narc(50, 50, 80, 80, 0, QUARTER_PI);\n</code></div>"],
              alt: "white eighth-circle rotated about 40 degrees with curve bottom right canvas.",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 115,
              description: '<p>TAU is an alias for TWO_PI, a mathematical constant with the\nvalue 6.28318530717958647693. It is twice the ratio of the\ncircumference of a circle to its diameter. It is useful in\ncombination with the trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.</p>\n',
              itemtype: "property",
              name: "TAU",
              type: "Number",
              final: 1,
              example: ["\n<div><code>\narc(50, 50, 80, 80, 0, TAU);\n</code></div>"],
              alt: "80x80 white ellipse shape in center of canvas.",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 134,
              description: '<p>TWO_PI is a mathematical constant with the value\n6.28318530717958647693. It is twice the ratio of the\ncircumference of a circle to its diameter. It is useful in\ncombination with the trigonometric functions <a href="#/p5/sin">sin()</a> and <a href="#/p5/cos">cos()</a>.</p>\n',
              itemtype: "property",
              name: "TWO_PI",
              type: "Number",
              final: 1,
              example: ["\n<div><code>\narc(50, 50, 80, 80, 0, TWO_PI);\n</code></div>"],
              alt: "80x80 white ellipse shape in center of canvas.",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 153,
              description: '<p>Constant to be used with <a href="#/p5/angleMode">angleMode()</a> function, to set the mode which\np5.js interprates and calculates angles (either DEGREES or RADIANS).</p>\n',
              itemtype: "property",
              name: "DEGREES",
              type: "String",
              final: 1,
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  angleMode(DEGREES);\n}\n</code></div>"],
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 167,
              description: '<p>Constant to be used with <a href="#/p5/angleMode">angleMode()</a> function, to set the mode which\np5.js interprates and calculates angles (either RADIANS or DEGREES).</p>\n',
              itemtype: "property",
              name: "RADIANS",
              type: "String",
              final: 1,
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  angleMode(RADIANS);\n}\n</code></div>"],
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 185,
              itemtype: "property",
              name: "CORNER",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 190,
              itemtype: "property",
              name: "CORNERS",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 195,
              itemtype: "property",
              name: "RADIUS",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 200,
              itemtype: "property",
              name: "RIGHT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 205,
              itemtype: "property",
              name: "LEFT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 210,
              itemtype: "property",
              name: "CENTER",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 215,
              itemtype: "property",
              name: "TOP",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 220,
              itemtype: "property",
              name: "BOTTOM",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 225,
              itemtype: "property",
              name: "BASELINE",
              type: "String",
              final: 1,
              default: "alphabetic",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 231,
              itemtype: "property",
              name: "POINTS",
              type: "Number",
              final: 1,
              default: "0x0000",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 237,
              itemtype: "property",
              name: "LINES",
              type: "Number",
              final: 1,
              default: "0x0001",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 243,
              itemtype: "property",
              name: "LINE_STRIP",
              type: "Number",
              final: 1,
              default: "0x0003",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 249,
              itemtype: "property",
              name: "LINE_LOOP",
              type: "Number",
              final: 1,
              default: "0x0002",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 255,
              itemtype: "property",
              name: "TRIANGLES",
              type: "Number",
              final: 1,
              default: "0x0004",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 261,
              itemtype: "property",
              name: "TRIANGLE_FAN",
              type: "Number",
              final: 1,
              default: "0x0006",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 267,
              itemtype: "property",
              name: "TRIANGLE_STRIP",
              type: "Number",
              final: 1,
              default: "0x0005",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 273,
              itemtype: "property",
              name: "QUADS",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 278,
              itemtype: "property",
              name: "QUAD_STRIP",
              type: "String",
              final: 1,
              default: "quad_strip",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 284,
              itemtype: "property",
              name: "CLOSE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 289,
              itemtype: "property",
              name: "OPEN",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 294,
              itemtype: "property",
              name: "CHORD",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 299,
              itemtype: "property",
              name: "PIE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 304,
              itemtype: "property",
              name: "PROJECT",
              type: "String",
              final: 1,
              default: "square",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 310,
              itemtype: "property",
              name: "SQUARE",
              type: "String",
              final: 1,
              default: "butt",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 316,
              itemtype: "property",
              name: "ROUND",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 321,
              itemtype: "property",
              name: "BEVEL",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 326,
              itemtype: "property",
              name: "MITER",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 333,
              itemtype: "property",
              name: "RGB",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 338,
              itemtype: "property",
              name: "HSB",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 343,
              itemtype: "property",
              name: "HSL",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 350,
              itemtype: "property",
              name: "AUTO",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 373,
              itemtype: "property",
              name: "BLEND",
              type: "String",
              final: 1,
              default: "source-over",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 379,
              itemtype: "property",
              name: "ADD",
              type: "String",
              final: 1,
              default: "lighter",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 387,
              itemtype: "property",
              name: "DARKEST",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 392,
              itemtype: "property",
              name: "LIGHTEST",
              type: "String",
              final: 1,
              default: "lighten",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 398,
              itemtype: "property",
              name: "DIFFERENCE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 403,
              itemtype: "property",
              name: "EXCLUSION",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 408,
              itemtype: "property",
              name: "MULTIPLY",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 413,
              itemtype: "property",
              name: "SCREEN",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 418,
              itemtype: "property",
              name: "REPLACE",
              type: "String",
              final: 1,
              default: "copy",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 424,
              itemtype: "property",
              name: "OVERLAY",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 429,
              itemtype: "property",
              name: "HARD_LIGHT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 434,
              itemtype: "property",
              name: "SOFT_LIGHT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 439,
              itemtype: "property",
              name: "DODGE",
              type: "String",
              final: 1,
              default: "color-dodge",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 445,
              itemtype: "property",
              name: "BURN",
              type: "String",
              final: 1,
              default: "color-burn",
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 453,
              itemtype: "property",
              name: "THRESHOLD",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 458,
              itemtype: "property",
              name: "GRAY",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 463,
              itemtype: "property",
              name: "OPAQUE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 468,
              itemtype: "property",
              name: "INVERT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 473,
              itemtype: "property",
              name: "POSTERIZE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 478,
              itemtype: "property",
              name: "DILATE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 483,
              itemtype: "property",
              name: "ERODE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 488,
              itemtype: "property",
              name: "BLUR",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 495,
              itemtype: "property",
              name: "NORMAL",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 500,
              itemtype: "property",
              name: "ITALIC",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 505,
              itemtype: "property",
              name: "BOLD",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 510,
              itemtype: "property",
              name: "BOLDITALIC",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 545,
              itemtype: "property",
              name: "LANDSCAPE",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 550,
              itemtype: "property",
              name: "PORTRAIT",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 560,
              itemtype: "property",
              name: "GRID",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/constants.js",
              line: 566,
              itemtype: "property",
              name: "AXES",
              type: "String",
              final: 1,
              class: "p5",
              module: "Constants",
              submodule: "Constants"
            }, {
              file: "src/core/environment.js",
              line: 22,
              description: '<p>The <a href="#/p5/print">print()</a> function writes to the console area of your browser.\nThis function is often helpful for looking at the data a program is\nproducing. This function creates a new line of text for each call to\nthe function. Individual elements can be\nseparated with quotes (&quot;&quot;) and joined with the addition operator (+).</p>\n<p>Note that calling print() without any arguments invokes the window.print()\nfunction which opens the browser&#39;s print dialog. To print a blank line\nto console you can write print(&#39;\\n&#39;).</p>\n',
              itemtype: "method",
              name: "print",
              params: [{
                name: "contents",
                description: "<p>any combination of Number, String, Object, Boolean,\n                      Array to print</p>\n",
                type: "Any"
              }],
              example: ["\n<div><code class='norender'>\nlet x = 10;\nprint('The value of x is ' + x);\n// prints \"The value of x is 10\"\n</code></div>"],
              alt: "default grey canvas",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 53,
              description: '<p>The system variable <a href="#/p5/frameCount">frameCount</a> contains the number of frames that have\nbeen displayed since the program started. Inside <a href="#/p5/setup">setup()</a> the value is 0,\nafter the first iteration of draw it is 1, etc.</p>\n',
              itemtype: "property",
              name: "frameCount",
              type: "Integer",
              readonly: "",
              example: ["\n  <div><code>\nfunction setup() {\n  frameRate(30);\n  textSize(30);\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  background(200);\n  text(frameCount, width / 2, height / 2);\n}\n</code></div>"],
              alt: "numbers rapidly counting upward with frame count set to 30.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 80,
              description: "<p>Confirms if the window a p5.js program is in is &quot;focused,&quot; meaning that\nthe sketch will accept mouse or keyboard input. This variable is\n&quot;true&quot; if the window is focused and &quot;false&quot; if not.</p>\n",
              itemtype: "property",
              name: "focused",
              type: "Boolean",
              readonly: "",
              example: ['\n<div><code>\n// To demonstrate, put two windows side by side.\n// Click on the window that the p5 sketch isn\'t in!\nfunction draw() {\n  background(200);\n  noStroke();\n  fill(0, 200, 0);\n  ellipse(25, 25, 50, 50);\n\n  if (!focused) {\n   // or "if (focused === false)"\n    stroke(200, 0, 0);\n    line(0, 0, 100, 100);\n    line(100, 0, 0, 100);\n  }\n}\n</code></div>'],
              alt: "green 50x50 ellipse at top left. Red X covers canvas when page focus changes",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 112,
              description: "<p>Sets the cursor to a predefined symbol or an image, or makes it visible\nif already hidden. If you are trying to set an image as the cursor, the\nrecommended size is 16x16 or 32x32 pixels. The values for parameters x and y\nmust be less than the dimensions of the image.</p>\n",
              itemtype: "method",
              name: "cursor",
              params: [{
                name: "type",
                description: '<p>Built-In: either ARROW, CROSS, HAND, MOVE, TEXT and WAIT\n                              Native CSS properties: &#39;grab&#39;, &#39;progress&#39;, &#39;cell&#39; etc.\n                              External: path for cursor&#39;s images\n                              (Allowed File extensions: .cur, .gif, .jpg, .jpeg, .png)\n                              For more information on Native CSS cursors and url visit:\n                              <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/cursor">https://developer.mozilla.org/en-US/docs/Web/CSS/cursor</a></p>\n',
                type: "String|Constant"
              }, {
                name: "x",
                description: "<p>the horizontal active spot of the cursor (must be less than 32)</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "y",
                description: "<p>the vertical active spot of the cursor (must be less than 32)</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\n// Move the mouse across the quadrants\n// to see the cursor change\nfunction draw() {\n  line(width / 2, 0, width / 2, height);\n  line(0, height / 2, width, height / 2);\n  if (mouseX < 50 && mouseY < 50) {\n    cursor(CROSS);\n  } else if (mouseX > 50 && mouseY < 50) {\n    cursor('progress');\n  } else if (mouseX > 50 && mouseY > 50) {\n    cursor('https://s3.amazonaws.com/mupublicdata/cursor.cur');\n  } else {\n    cursor('grab');\n  }\n}\n</code></div>"],
              alt: "canvas is divided into four quadrants. cursor on first is a cross, second is a progress,\nthird is a custom cursor using path to the cursor and fourth is a grab.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 181,
              description: '<p>Specifies the number of frames to be displayed every second. For example,\nthe function call frameRate(30) will attempt to refresh 30 times a second.\nIf the processor is not fast enough to maintain the specified rate, the\nframe rate will not be achieved. Setting the frame rate within <a href="#/p5/setup">setup()</a> is\nrecommended. The default frame rate is based on the frame rate of the display\n(here also called &quot;refresh rate&quot;), which is set to 60 frames per second on most\ncomputers. A frame rate of 24 frames per second (usual for movies) or above\nwill be enough for smooth animations\nThis is the same as setFrameRate(val).\n<br><br>\nCalling <a href="#/p5/frameRate">frameRate()</a> with no arguments returns the current framerate. The\ndraw function must run at least once before it will return a value. This\nis the same as <a href="#/p5/getFrameRate">getFrameRate()</a>.\n<br><br>\nCalling <a href="#/p5/frameRate">frameRate()</a> with arguments that are not of the type numbers\nor are non positive also returns current framerate.</p>\n',
              itemtype: "method",
              name: "frameRate",
              chainable: 1,
              example: ["\n\n<div><code>\nlet rectX = 0;\nlet fr = 30; //starting FPS\nlet clr;\n\nfunction setup() {\n  background(200);\n  frameRate(fr); // Attempt to refresh at starting FPS\n  clr = color(255, 0, 0);\n}\n\nfunction draw() {\n  background(200);\n  rectX = rectX += 1; // Move Rectangle\n\n  if (rectX >= width) {\n   // If you go off screen.\n    if (fr === 30) {\n      clr = color(0, 0, 255);\n      fr = 10;\n      frameRate(fr); // make frameRate 10 FPS\n    } else {\n      clr = color(255, 0, 0);\n      fr = 30;\n      frameRate(fr); // make frameRate 30 FPS\n    }\n    rectX = 0;\n  }\n  fill(clr);\n  rect(rectX, 40, 20, 20);\n}\n</code></div>"],
              alt: "blue rect moves left to right, followed by red rect moving faster. Loops.",
              class: "p5",
              module: "Environment",
              submodule: "Environment",
              overloads: [{
                line: 181,
                params: [{
                  name: "fps",
                  description: "<p>number of frames to be displayed every second</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 242,
                params: [],
                return: {
                  description: "current frameRate",
                  type: "Number"
                }
              }]
            }, {
              file: "src/core/environment.js",
              line: 281,
              description: "<p>Hides the cursor from view.</p>\n",
              itemtype: "method",
              name: "noCursor",
              example: ["\n<div><code>\nfunction setup() {\n  noCursor();\n}\n\nfunction draw() {\n  background(200);\n  ellipse(mouseX, mouseY, 10, 10);\n}\n</code></div>"],
              alt: "cursor becomes 10x 10 white ellipse the moves with mouse x and y.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 306,
              description: '<p>System variable that stores the width of the screen display according to The\ndefault <a href="#/p5/pixelDensity">pixelDensity</a>. This is used to run a\nfull-screen program on any display size. To return actual screen size,\nmultiply this by pixelDensity.</p>\n',
              itemtype: "property",
              name: "displayWidth",
              type: "Number",
              readonly: "",
              example: ['\n<div class="norender"><code>\ncreateCanvas(displayWidth, displayHeight);\n</code></div>'],
              alt: "cursor becomes 10x 10 white ellipse the moves with mouse x and y.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 325,
              description: '<p>System variable that stores the height of the screen display according to The\ndefault <a href="#/p5/pixelDensity">pixelDensity</a>. This is used to run a\nfull-screen program on any display size. To return actual screen size,\nmultiply this by pixelDensity.</p>\n',
              itemtype: "property",
              name: "displayHeight",
              type: "Number",
              readonly: "",
              example: ['\n<div class="norender"><code>\ncreateCanvas(displayWidth, displayHeight);\n</code></div>'],
              alt: "no display.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 344,
              description: "<p>System variable that stores the width of the inner window, it maps to\nwindow.innerWidth.</p>\n",
              itemtype: "property",
              name: "windowWidth",
              type: "Number",
              readonly: "",
              example: ['\n<div class="norender"><code>\ncreateCanvas(windowWidth, windowHeight);\n</code></div>'],
              alt: "no display.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 360,
              description: "<p>System variable that stores the height of the inner window, it maps to\nwindow.innerHeight.</p>\n",
              itemtype: "property",
              name: "windowHeight",
              type: "Number",
              readonly: "",
              example: ['\n<div class="norender"><code>\ncreateCanvas(windowWidth, windowHeight);\n</code></div>'],
              alt: "no display.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 376,
              description: '<p>The <a href="#/p5/windowResized">windowResized()</a> function is called once every time the browser window\nis resized. This is a good place to resize the canvas or do any other\nadjustments to accommodate the new window size.</p>\n',
              itemtype: "method",
              name: "windowResized",
              example: ['\n<div class="norender"><code>\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  background(0, 100, 200);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n</code></div>'],
              alt: "no display.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 430,
              description: '<p>System variable that stores the width of the drawing canvas. This value\nis set by the first parameter of the <a href="#/p5/createCanvas">createCanvas()</a> function.\nFor example, the function call createCanvas(320, 240) sets the width\nvariable to the value 320. The value of width defaults to 100 if\n<a href="#/p5/createCanvas">createCanvas()</a> is not used in a program.</p>\n',
              itemtype: "property",
              name: "width",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 442,
              description: '<p>System variable that stores the height of the drawing canvas. This value\nis set by the second parameter of the <a href="#/p5/createCanvas">createCanvas()</a> function. For\nexample, the function call createCanvas(320, 240) sets the height\nvariable to the value 240. The value of height defaults to 100 if\n<a href="#/p5/createCanvas">createCanvas()</a> is not used in a program.</p>\n',
              itemtype: "property",
              name: "height",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 454,
              description: "<p>If argument is given, sets the sketch to fullscreen or not based on the\nvalue of the argument. If no argument is given, returns the current\nfullscreen state. Note that due to browser restrictions this can only\nbe called on user input, for example, on mouse press like the example\nbelow.</p>\n",
              itemtype: "method",
              name: "fullscreen",
              params: [{
                name: "val",
                description: "<p>whether the sketch should be in fullscreen mode\nor not</p>\n",
                type: "Boolean",
                optional: !0
              }],
              return: {
                description: "current fullscreen state",
                type: "Boolean"
              },
              example: ["\n<div>\n<code>\n// Clicking in the box toggles fullscreen on and off.\nfunction setup() {\n  background(200);\n}\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < 100 && mouseY > 0 && mouseY < 100) {\n    let fs = fullscreen();\n    fullscreen(!fs);\n  }\n}\n</code>\n</div>"],
              alt: "no display.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 505,
              description: '<p>Sets the pixel scaling for high pixel density displays. By default\npixel density is set to match display density, call pixelDensity(1)\nto turn this off. Calling <a href="#/p5/pixelDensity">pixelDensity()</a> with no arguments returns\nthe current pixel density of the sketch.</p>\n',
              itemtype: "method",
              name: "pixelDensity",
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  pixelDensity(1);\n  createCanvas(100, 100);\n  background(200);\n  ellipse(width / 2, height / 2, 50, 50);\n}\n</code>\n</div>\n<div>\n<code>\nfunction setup() {\n  pixelDensity(3.0);\n  createCanvas(100, 100);\n  background(200);\n  ellipse(width / 2, height / 2, 50, 50);\n}\n</code>\n</div>"],
              alt: "fuzzy 50x50 white ellipse with black outline in center of canvas.\nsharp 50x50 white ellipse with black outline in center of canvas.",
              class: "p5",
              module: "Environment",
              submodule: "Environment",
              overloads: [{
                line: 505,
                params: [{
                  name: "val",
                  description: "<p>whether or how much the sketch should scale</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 540,
                params: [],
                return: {
                  description: "current pixel density of the sketch",
                  type: "Number"
                }
              }]
            }, {
              file: "src/core/environment.js",
              line: 560,
              description: "<p>Returns the pixel density of the current display the sketch is running on.</p>\n",
              itemtype: "method",
              name: "displayDensity",
              return: {
                description: "current pixel density of the display",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nfunction setup() {\n  let density = displayDensity();\n  pixelDensity(density);\n  createCanvas(100, 100);\n  background(200);\n  ellipse(width / 2, height / 2, 50, 50);\n}\n</code>\n</div>"],
              alt: "50x50 white ellipse with black outline in center of canvas.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 617,
              description: "<p>Gets the current URL.</p>\n",
              itemtype: "method",
              name: "getURL",
              return: {
                description: "url",
                type: "String"
              },
              example: ["\n<div>\n<code>\nlet url;\nlet x = 100;\n\nfunction setup() {\n  fill(0);\n  noStroke();\n  url = getURL();\n}\n\nfunction draw() {\n  background(200);\n  text(url, x, height / 2);\n  x--;\n}\n</code>\n</div>"],
              alt: "current url (http://p5js.org/reference/#/p5/getURL) moves right to left.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 648,
              description: "<p>Gets the current URL path as an array.</p>\n",
              itemtype: "method",
              name: "getURLPath",
              return: {
                description: "path components",
                type: "String[]"
              },
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  let urlPath = getURLPath();\n  for (let i = 0; i < urlPath.length; i++) {\n    text(urlPath[i], 10, i * 20 + 20);\n  }\n}\n</code></div>"],
              alt: "no display",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/environment.js",
              line: 671,
              description: "<p>Gets the current URL params as an Object.</p>\n",
              itemtype: "method",
              name: "getURLParams",
              return: {
                description: "URL params",
                type: "Object"
              },
              example: ["\n<div class='norender notest'>\n<code>\n// Example: http://p5js.org?year=2014&month=May&day=15\n\nfunction setup() {\n  let params = getURLParams();\n  text(params.day, 10, 20);\n  text(params.month, 10, 40);\n  text(params.year, 10, 60);\n}\n</code>\n</div>"],
              alt: "no display.",
              class: "p5",
              module: "Environment",
              submodule: "Environment"
            }, {
              file: "src/core/error_helpers.js",
              line: 1,
              requires: ["core"],
              class: "p5",
              module: "Environment"
            }, {
              file: "src/core/error_helpers.js",
              line: 584,
              description: "<p>Validates parameters\nparam  {String}               func    the name of the function\nparam  {Array}                args    user input arguments</p>\n<p>example:\n var a;\n ellipse(10,10,a,5);\nconsole ouput:\n &quot;It looks like ellipse received an empty variable in spot #2.&quot;</p>\n<p>example:\n ellipse(10,&quot;foo&quot;,5,5);\nconsole output:\n &quot;ellipse was expecting a number for parameter #1,\n          received &quot;foo&quot; instead.&quot;</p>\n",
              class: "p5",
              module: "Environment"
            }, {
              file: "src/core/error_helpers.js",
              line: 645,
              description: "<p>Prints out all the colors in the color pallete with white text.\nFor color blindness testing.</p>\n",
              class: "p5",
              module: "Environment"
            }, {
              file: "src/core/helpers.js",
              line: 1,
              requires: ["constants"],
              class: "p5",
              module: "Environment"
            }, {
              file: "src/core/legacy.js",
              line: 1,
              requires: ["core\nThese are functions that are part of the Processing API but are not part of\nthe p5.js API. In some cases they have a new name", "in others", "they are\nremoved completely. Not all unsupported Processing functions are listed here\nbut we try to include ones that a user coming from Processing might likely\ncall."],
              class: "p5",
              module: "Environment"
            }, {
              file: "src/core/main.js",
              line: 49,
              description: '<p>Called directly before <a href="#/p5/setup">setup()</a>, the <a href="#/p5/preload">preload()</a> function is used to handle\nasynchronous loading of external files in a blocking way. If a preload\nfunction is defined, <a href="#/p5/setup">setup()</a> will wait until any load calls within have\nfinished. Nothing besides load calls (<a href="#/p5/loadImage">loadImage</a>, <a href="#/p5/loadJSON">loadJSON</a>, <a href="#/p5/loadFont">loadFont</a>,\n<a href="#/p5/loadStrings">loadStrings</a>, etc.) should be inside the preload function. If asynchronous\nloading is preferred, the load methods can instead be called in <a href="#/p5/setup">setup()</a>\nor anywhere else with the use of a callback parameter.\n<br><br>\nBy default the text &quot;loading...&quot; will be displayed. To make your own\nloading page, include an HTML element with id &quot;p5_loading&quot; in your\npage. More information <a href="http://bit.ly/2kQ6Nio">here</a>.</p>\n',
              itemtype: "method",
              name: "preload",
              example: ["\n<div><code>\nlet img;\nlet c;\nfunction preload() {\n  // preload() runs once\n  img = loadImage('assets/laDefense.jpg');\n}\n\nfunction setup() {\n  // setup() waits until preload() is done\n  img.loadPixels();\n  // get color of middle pixel\n  c = img.get(img.width / 2, img.height / 2);\n}\n\nfunction draw() {\n  background(c);\n  image(img, 25, 25, 50, 50);\n}\n</code></div>"],
              alt: "nothing displayed",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/main.js",
              line: 90,
              description: '<p>The <a href="#/p5/setup">setup()</a> function is called once when the program starts. It&#39;s used to\ndefine initial environment properties such as screen size and background\ncolor and to load media such as images and fonts as the program starts.\nThere can only be one <a href="#/p5/setup">setup()</a> function for each program and it shouldn&#39;t\nbe called again after its initial execution.\n<br><br>\nNote: Variables declared within <a href="#/p5/setup">setup()</a> are not accessible within other\nfunctions, including <a href="#/p5/draw">draw()</a>.</p>\n',
              itemtype: "method",
              name: "setup",
              example: ["\n<div><code>\nlet a = 0;\n\nfunction setup() {\n  background(0);\n  noStroke();\n  fill(102);\n}\n\nfunction draw() {\n  rect(a++ % width, 10, 2, 80);\n}\n</code></div>"],
              alt: "nothing displayed",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/main.js",
              line: 121,
              description: '<p>Called directly after <a href="#/p5/setup">setup()</a>, the <a href="#/p5/draw">draw()</a> function continuously executes\nthe lines of code contained inside its block until the program is stopped\nor <a href="#/p5/noLoop">noLoop()</a> is called. Note if <a href="#/p5/noLoop">noLoop()</a> is called in <a href="#/p5/setup">setup()</a>, <a href="#/p5/draw">draw()</a> will\nstill be executed once before stopping. <a href="#/p5/draw">draw()</a> is called automatically and\nshould never be called explicitly.\n<br><br>\nIt should always be controlled with <a href="#/p5/noLoop">noLoop()</a>, <a href="#/p5/redraw">redraw()</a> and <a href="#/p5/loop">loop()</a>. After\n<a href="#/p5/noLoop">noLoop()</a> stops the code in <a href="#/p5/draw">draw()</a> from executing, <a href="#/p5/redraw">redraw()</a> causes the\ncode inside <a href="#/p5/draw">draw()</a> to execute once, and <a href="#/p5/loop">loop()</a> will cause the code\ninside <a href="#/p5/draw">draw()</a> to resume executing continuously.\n<br><br>\nThe number of times <a href="#/p5/draw">draw()</a> executes in each second may be controlled with\nthe <a href="#/p5/frameRate">frameRate()</a> function.\n<br><br>\nThere can only be one <a href="#/p5/draw">draw()</a> function for each sketch, and <a href="#/p5/draw">draw()</a> must\nexist if you want the code to run continuously, or to process events such\nas <a href="#/p5/mousePressed">mousePressed()</a>. Sometimes, you might have an empty call to <a href="#/p5/draw">draw()</a> in\nyour program, as shown in the above example.\n<br><br>\nIt is important to note that the drawing coordinate system will be reset\nat the beginning of each <a href="#/p5/draw">draw()</a> call. If any transformations are performed\nwithin <a href="#/p5/draw">draw()</a> (ex: scale, rotate, translate), their effects will be\nundone at the beginning of <a href="#/p5/draw">draw()</a>, so transformations will not accumulate\nover time. On the other hand, styling applied (ex: fill, stroke, etc) will\nremain in effect.</p>\n',
              itemtype: "method",
              name: "draw",
              example: ["\n<div><code>\nlet yPos = 0;\nfunction setup() {\n  // setup() runs once\n  frameRate(30);\n}\nfunction draw() {\n  // draw() loops forever, until stopped\n  background(204);\n  yPos = yPos - 1;\n  if (yPos < 0) {\n    yPos = height;\n  }\n  line(0, yPos, width, yPos);\n}\n</code></div>"],
              alt: "nothing displayed",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/main.js",
              line: 400,
              description: "<p>Removes the entire p5 sketch. This will remove the canvas and any\nelements created by p5.js. It will also stop the draw loop and unbind\nany properties or methods from the window global scope. It will\nleave a variable p5 in case you wanted to create a new p5 sketch.\nIf you like, you can set p5 = null to erase it. While all functions and\nvariables and objects created by the p5 library will be removed, any\nother global variables created by your code will remain.</p>\n",
              itemtype: "method",
              name: "remove",
              example: ["\n<div class='norender'><code>\nfunction draw() {\n  ellipse(50, 50, 10, 10);\n}\n\nfunction mousePressed() {\n  remove(); // remove whole sketch on mouse press\n}\n</code></div>"],
              alt: "nothing displayed",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/p5.Element.js",
              line: 26,
              description: "<p>Underlying HTML element. All normal HTML methods can be called on this.</p>\n",
              example: ["\n<div>\n<code>\nfunction setup() {\n  var c = createCanvas(50, 50);\n  c.elt.style.border = '5px solid red';\n}\n\nfunction draw() {\n  background(220);\n}\n</code>\n</div>"],
              itemtype: "property",
              name: "elt",
              readonly: "",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 52,
              description: "<p>Attaches the element to the parent specified. A way of setting\n the container for the element. Accepts either a string ID, DOM\n node, or <a href=\"#/p5.Element\">p5.Element</a>. If no arguments given, parent node is returned.\n For more ways to position the canvas, see the\n <a href='https://github.com/processing/p5.js/wiki/Positioning-your-canvas'>\n positioning the canvas</a> wiki page.\nAll above examples except for the first one require the inclusion of\n the p5.dom library in your index.html. See the\n <a href='http://p5js.org/libraries/#using-a-library'>using a library</a>\n section for information on how to include this library.</p>\n",
              itemtype: "method",
              name: "parent",
              chainable: 1,
              example: ["\n <div class=\"norender notest\"><code>\n // in the html file:\n // &lt;div id=\"myContainer\">&lt;/div>\n// in the js file:\n var cnv = createCanvas(100, 100);\n cnv.parent('myContainer');\n </code></div>\n <div class='norender'><code>\n var div0 = createDiv('this is the parent');\n var div1 = createDiv('this is the child');\n div1.parent(div0); // use p5.Element\n </code></div>\n <div class='norender'><code>\n var div0 = createDiv('this is the parent');\n div0.id('apples');\n var div1 = createDiv('this is the child');\n div1.parent('apples'); // use id\n </code></div>\n <div class='norender notest'><code>\n var elt = document.getElementById('myParentDiv');\n var div1 = createDiv('this is the child');\n div1.parent(elt); // use element from page\n </code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM",
              overloads: [{
                line: 52,
                params: [{
                  name: "parent",
                  description: '<p>the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>\n                         of desired parent element</p>\n',
                  type: "String|p5.Element|Object"
                }],
                chainable: 1
              }, {
                line: 100,
                params: [],
                return: {
                  description: "",
                  type: "p5.Element"
                }
              }]
            }, {
              file: "src/core/p5.Element.js",
              line: 122,
              description: "<p>Sets the ID of the element. If no ID argument is passed in, it instead\n returns the current ID of the element.</p>\n",
              itemtype: "method",
              name: "id",
              chainable: 1,
              example: ["\n <div class='norender'><code>\n function setup() {\n   var cnv = createCanvas(100, 100);\n   // Assigns a CSS selector ID to\n   // the canvas element.\n   cnv.id('mycanvas');\n }\n </code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM",
              overloads: [{
                line: 122,
                params: [{
                  name: "id",
                  description: "<p>ID of the element</p>\n",
                  type: "String"
                }],
                chainable: 1
              }, {
                line: 144,
                params: [],
                return: {
                  description: "the id of the element",
                  type: "String"
                }
              }]
            }, {
              file: "src/core/p5.Element.js",
              line: 159,
              description: "<p>Adds given class to the element. If no class argument is passed in, it\n instead returns a string containing the current class(es) of the element.</p>\n",
              itemtype: "method",
              name: "class",
              chainable: 1,
              example: ["\n <div class='norender'><code>\n function setup() {\n   var cnv = createCanvas(100, 100);\n   // Assigns a CSS selector class 'small'\n   // to the canvas element.\n   cnv.class('small');\n }\n </code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM",
              overloads: [{
                line: 159,
                params: [{
                  name: "class",
                  description: "<p>class to add</p>\n",
                  type: "String"
                }],
                chainable: 1
              }, {
                line: 181,
                params: [],
                return: {
                  description: "the class of the element",
                  type: "String"
                }
              }]
            }, {
              file: "src/core/p5.Element.js",
              line: 194,
              description: '<p>The .<a href="#/p5.Element/mousePressed">mousePressed()</a> function is called once after every time a\nmouse button is pressed over the element.\nSome mobile browsers may also trigger this event on a touch screen,\nif the user performs a quick tap.\nThis can be used to attach element specific event listeners.</p>\n',
              itemtype: "method",
              name: "mousePressed",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when mouse is\n                               pressed over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.mousePressed(changeGray); // attach listener for\n  // canvas click only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires with any click anywhere\nfunction mousePressed() {\n  d = d + 10;\n}\n\n// this function fires only when cnv is clicked\nfunction changeGray() {\n  g = random(0, 255);\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 255,
              description: '<p>The .<a href="#/p5.Element/doubleClicked">doubleClicked()</a> function is called once after every time a\nmouse button is pressed twice over the element. This can be used to\nattach element and action specific event listeners.</p>\n',
              itemtype: "method",
              name: "doubleClicked",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when mouse is\n                               double clicked over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              return: {
                description: "",
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.doubleClicked(changeGray); // attach listener for\n  // canvas double click only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires with any double click anywhere\nfunction doubleClicked() {\n  d = d + 10;\n}\n\n// this function fires only when cnv is double clicked\nfunction changeGray() {\n  g = random(0, 255);\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 304,
              description: '<p>The .<a href="#/p5.Element/mouseWheel">mouseWheel()</a> function is called once after every time a\nmouse wheel is scrolled over the element. This can be used to\nattach element specific event listeners.\n<br><br>\nThe function accepts a callback function as argument which will be executed\nwhen the <code>wheel</code> event is triggered on the element, the callback function is\npassed one argument <code>event</code>. The <code>event.deltaY</code> property returns negative\nvalues if the mouse wheel is rotated up or away from the user and positive\nin the other direction. The <code>event.deltaX</code> does the same as <code>event.deltaY</code>\nexcept it reads the horizontal wheel scroll of the mouse wheel.\n<br><br>\nOn OS X with &quot;natural&quot; scrolling enabled, the <code>event.deltaY</code> values are\nreversed.</p>\n',
              itemtype: "method",
              name: "mouseWheel",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when mouse is\n                               scrolled over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.mouseWheel(changeSize); // attach listener for\n  // activity on canvas only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires with mousewheel movement\n// anywhere on screen\nfunction mouseWheel() {\n  g = g + 10;\n}\n\n// this function fires with mousewheel movement\n// over canvas only\nfunction changeSize(event) {\n  if (event.deltaY > 0) {\n    d = d + 10;\n  } else {\n    d = d - 10;\n  }\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 370,
              description: '<p>The .<a href="#/p5.Element/mouseReleased">mouseReleased()</a> function is called once after every time a\nmouse button is released over the element.\nSome mobile browsers may also trigger this event on a touch screen,\nif the user performs a quick tap.\nThis can be used to attach element specific event listeners.</p>\n',
              itemtype: "method",
              name: "mouseReleased",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when mouse is\n                               released over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.mouseReleased(changeGray); // attach listener for\n  // activity on canvas only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires after the mouse has been\n// released\nfunction mouseReleased() {\n  d = d + 10;\n}\n\n// this function fires after the mouse has been\n// released while on canvas\nfunction changeGray() {\n  g = random(0, 255);\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 424,
              description: '<p>The .<a href="#/p5.Element/mouseClicked">mouseClicked()</a> function is called once after a mouse button is\npressed and released over the element.\nSome mobile browsers may also trigger this event on a touch screen,\nif the user performs a quick tap.\nThis can be used to attach element specific event listeners.</p>\n',
              itemtype: "method",
              name: "mouseClicked",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when mouse is\n                               clicked over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ['\n<div class="norender">\n<code>\nvar cnv;\nvar d;\nvar g;\n\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.mouseClicked(changeGray); // attach listener for\n  // activity on canvas only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires after the mouse has been\n// clicked anywhere\nfunction mouseClicked() {\n  d = d + 10;\n}\n\n// this function fires after the mouse has been\n// clicked on canvas\nfunction changeGray() {\n  g = random(0, 255);\n}\n</code>\n</div>'],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 480,
              description: '<p>The .<a href="#/p5.Element/mouseMoved">mouseMoved()</a> function is called once every time a\nmouse moves over the element. This can be used to attach an\nelement specific event listener.</p>\n',
              itemtype: "method",
              name: "mouseMoved",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a mouse moves\n                               over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d = 30;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.mouseMoved(changeSize); // attach listener for\n  // activity on canvas only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  fill(200);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires when mouse moves anywhere on\n// page\nfunction mouseMoved() {\n  g = g + 5;\n  if (g > 255) {\n    g = 0;\n  }\n}\n\n// this function fires when mouse moves over canvas\nfunction changeSize() {\n  d = d + 2;\n  if (d > 100) {\n    d = 0;\n  }\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 538,
              description: '<p>The .<a href="#/p5.Element/mouseOver">mouseOver()</a> function is called once after every time a\nmouse moves onto the element. This can be used to attach an\nelement specific event listener.</p>\n',
              itemtype: "method",
              name: "mouseOver",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a mouse moves\n                               onto the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.mouseOver(changeGray);\n  d = 10;\n}\n\nfunction draw() {\n  ellipse(width / 2, height / 2, d, d);\n}\n\nfunction changeGray() {\n  d = d + 10;\n  if (d > 100) {\n    d = 0;\n  }\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 581,
              description: '<p>The .<a href="#/p5.Element/mouseOut">mouseOut()</a> function is called once after every time a\nmouse moves off the element. This can be used to attach an\nelement specific event listener.</p>\n',
              itemtype: "method",
              name: "mouseOut",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a mouse\n                               moves off of an element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.mouseOut(changeGray);\n  d = 10;\n}\n\nfunction draw() {\n  ellipse(width / 2, height / 2, d, d);\n}\n\nfunction changeGray() {\n  d = d + 10;\n  if (d > 100) {\n    d = 0;\n  }\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 623,
              description: '<p>The .<a href="#/p5.Element/touchStarted">touchStarted()</a> function is called once after every time a touch is\nregistered. This can be used to attach element specific event listeners.</p>\n',
              itemtype: "method",
              name: "touchStarted",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a touch\n                               starts over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.touchStarted(changeGray); // attach listener for\n  // canvas click only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires with any touch anywhere\nfunction touchStarted() {\n  d = d + 10;\n}\n\n// this function fires only when cnv is clicked\nfunction changeGray() {\n  g = random(0, 255);\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 671,
              description: '<p>The .<a href="#/p5.Element/touchMoved">touchMoved()</a> function is called once after every time a touch move is\nregistered. This can be used to attach element specific event listeners.</p>\n',
              itemtype: "method",
              name: "touchMoved",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a touch moves over\n                               the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.touchMoved(changeGray); // attach listener for\n  // canvas click only\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n}\n\n// this function fires only when cnv is clicked\nfunction changeGray() {\n  g = random(0, 255);\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 711,
              description: '<p>The .<a href="#/p5.Element/touchEnded">touchEnded()</a> function is called once after every time a touch is\nregistered. This can be used to attach element specific event listeners.</p>\n',
              itemtype: "method",
              name: "touchEnded",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a touch ends\n                               over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar cnv;\nvar d;\nvar g;\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  cnv.touchEnded(changeGray); // attach listener for\n  // canvas click only\n  d = 10;\n  g = 100;\n}\n\nfunction draw() {\n  background(g);\n  ellipse(width / 2, height / 2, d, d);\n}\n\n// this function fires with any touch anywhere\nfunction touchEnded() {\n  d = d + 10;\n}\n\n// this function fires only when cnv is clicked\nfunction changeGray() {\n  g = random(0, 255);\n}\n</code></div>"],
              alt: "no display.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 760,
              description: '<p>The .<a href="#/p5.Element/dragOver">dragOver()</a> function is called once after every time a\nfile is dragged over the element. This can be used to attach an\nelement specific event listener.</p>\n',
              itemtype: "method",
              name: "dragOver",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a file is\n                               dragged over the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div><code>\n// To test this sketch, simply drag a\n// file over the canvas\nfunction setup() {\n  var c = createCanvas(100, 100);\n  background(200);\n  textAlign(CENTER);\n  text('Drag file', width / 2, height / 2);\n  c.dragOver(dragOverCallback);\n}\n\n// This function will be called whenever\n// a file is dragged over the canvas\nfunction dragOverCallback() {\n  background(240);\n  text('Dragged over', width / 2, height / 2);\n}\n</code></div>"],
              alt: "nothing displayed",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 798,
              description: "<p>The .dragLeave() function is called once after every time a\ndragged file leaves the element area. This can be used to attach an\nelement specific event listener.</p>\n",
              itemtype: "method",
              name: "dragLeave",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when a file is\n                               dragged off the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div><code>\n// To test this sketch, simply drag a file\n// over and then out of the canvas area\nfunction setup() {\n  var c = createCanvas(100, 100);\n  background(200);\n  textAlign(CENTER);\n  text('Drag file', width / 2, height / 2);\n  c.dragLeave(dragLeaveCallback);\n}\n\n// This function will be called whenever\n// a file is dragged out of the canvas\nfunction dragLeaveCallback() {\n  background(240);\n  text('Dragged off', width / 2, height / 2);\n}\n</code></div>"],
              alt: "nothing displayed",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 836,
              description: '<p>Registers a callback that gets called every time a file that is\ndropped on the element has been loaded.\np5 will load every dropped file into memory and pass it as a p5.File object to the callback.\nMultiple files dropped at the same time will result in multiple calls to the callback.</p>\n<p>You can optionally pass a second callback which will be registered to the raw\n<a href="https://developer.mozilla.org/en-US/docs/Web/Events/drop">drop</a> event.\nThe callback will thus be provided the original\n<a href="https://developer.mozilla.org/en-US/docs/Web/API/DragEvent">DragEvent</a>.\nDropping multiple files at the same time will trigger the second callback once per drop,\nwhereas the first callback will trigger for each loaded file.</p>\n',
              itemtype: "method",
              name: "drop",
              params: [{
                name: "callback",
                description: "<p>callback to receive loaded file.</p>\n",
                type: "Function"
              }, {
                name: "fxn",
                description: "<p>callback triggered when files are dropped.</p>\n",
                type: "Function",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div><code>\nfunction setup() {\n  var c = createCanvas(100, 100);\n  background(200);\n  textAlign(CENTER);\n  text('drop file', width / 2, height / 2);\n  c.drop(gotFile);\n}\n\nfunction gotFile(file) {\n  background(200);\n  text('received file:', width / 2, height / 2);\n  text(file.name, width / 2, height / 2 + 50);\n}\n</code></div>\n\n<div><code>\nvar img;\n\nfunction setup() {\n  var c = createCanvas(100, 100);\n  background(200);\n  textAlign(CENTER);\n  text('drop image', width / 2, height / 2);\n  c.drop(gotFile);\n}\n\nfunction draw() {\n  if (img) {\n    image(img, 0, 0, width, height);\n  }\n}\n\nfunction gotFile(file) {\n  img = createImg(file.data).hide();\n}\n</code></div>"],
              alt: "Canvas turns into whatever image is dragged/dropped onto it.",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Element.js",
              line: 969,
              description: "<p>Helper fxn for sharing pixel methods</p>\n",
              class: "p5.Element",
              module: "DOM",
              submodule: "DOM"
            }, {
              file: "src/core/p5.Graphics.js",
              line: 65,
              description: "<p>Removes a Graphics object from the page and frees any resources\nassociated with it.</p>\n",
              itemtype: "method",
              name: "remove",
              example: ["\n<div class='norender'><code>\nlet bg;\nfunction setup() {\n  bg = createCanvas(100, 100);\n  bg.background(0);\n  image(bg, 0, 0);\n  bg.remove();\n}\n</code></div>\n\n<div><code>\nlet bg;\nfunction setup() {\n  pixelDensity(1);\n  createCanvas(100, 100);\n  stroke(255);\n  fill(0);\n\n  // create and draw the background image\n  bg = createGraphics(100, 100);\n  bg.background(200);\n  bg.ellipse(50, 50, 80, 80);\n}\nfunction draw() {\n  let t = millis() / 1000;\n  // draw the background\n  if (bg) {\n    image(bg, frameCount % 100, 0);\n    image(bg, frameCount % 100 - 100, 0);\n  }\n  // draw the foreground\n  let p = p5.Vector.fromAngle(t, 35).add(50, 50);\n  ellipse(p.x, p.y, 30);\n}\nfunction mouseClicked() {\n  // remove the background\n  if (bg) {\n    bg.remove();\n    bg = null;\n  }\n}\n</code></div>"],
              alt: "no image\na multi-colored circle moving back and forth over a scrolling background.",
              class: "p5.Graphics",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/p5.Renderer.js",
              line: 96,
              description: "<p>Resize our canvas element.</p>\n",
              class: "p5.Renderer",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/p5.Renderer.js",
              line: 301,
              description: "<p>Helper fxn to check font type (system or otf)</p>\n",
              class: "p5.Renderer",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/p5.Renderer.js",
              line: 354,
              description: '<p>Helper fxn to measure ascent and descent.\nAdapted from <a href="http://stackoverflow.com/a/25355178">http://stackoverflow.com/a/25355178</a></p>\n',
              class: "p5.Renderer",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/p5.Renderer2D.js",
              line: 9,
              description: "<p>p5.Renderer2D\nThe 2D graphics canvas renderer class.\nextends p5.Renderer</p>\n",
              class: "p5",
              module: "Rendering"
            }, {
              file: "src/core/p5.Renderer2D.js",
              line: 392,
              description: "<p>Generate a cubic Bezier representing an arc on the unit circle of total\nangle <code>size</code> radians, beginning <code>start</code> radians above the x-axis. Up to\nfour of these curves are combined to make a full arc.</p>\n<p>See www.joecridge.me/bezier.pdf for an explanation of the method.</p>\n",
              class: "p5",
              module: "Rendering"
            }, {
              file: "src/core/rendering.js",
              line: 17,
              description: '<p>Creates a canvas element in the document, and sets the dimensions of it\nin pixels. This method should be called only once at the start of setup.\nCalling <a href="#/p5/createCanvas">createCanvas</a> more than once in a sketch will result in very\nunpredictable behavior. If you want more than one drawing canvas\nyou could use <a href="#/p5/createGraphics">createGraphics</a> (hidden by default but it can be shown).\n<br><br>\nThe system variables width and height are set by the parameters passed\nto this function. If <a href="#/p5/createCanvas">createCanvas()</a> is not used, the window will be\ngiven a default size of 100x100 pixels.\n<br><br>\nFor more ways to position the canvas, see the\n<a href=\'https://github.com/processing/p5.js/wiki/Positioning-your-canvas\'>\npositioning the canvas</a> wiki page.</p>\n',
              itemtype: "method",
              name: "createCanvas",
              params: [{
                name: "w",
                description: "<p>width of the canvas</p>\n",
                type: "Number"
              }, {
                name: "h",
                description: "<p>height of the canvas</p>\n",
                type: "Number"
              }, {
                name: "renderer",
                description: "<p>either P2D or WEBGL</p>\n",
                type: "Constant",
                optional: !0
              }],
              return: {
                description: "",
                type: "p5.Renderer"
              },
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 50);\n  background(153);\n  line(0, 0, width, height);\n}\n</code>\n</div>"],
              alt: "Black line extending from top-left of canvas to bottom right.",
              class: "p5",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/rendering.js",
              line: 119,
              description: "<p>Resizes the canvas to given width and height. The canvas will be cleared\nand draw will be called immediately, allowing the sketch to re-render itself\nin the resized canvas.</p>\n",
              itemtype: "method",
              name: "resizeCanvas",
              params: [{
                name: "w",
                description: "<p>width of the canvas</p>\n",
                type: "Number"
              }, {
                name: "h",
                description: "<p>height of the canvas</p>\n",
                type: "Number"
              }, {
                name: "noRedraw",
                description: "<p>don&#39;t redraw the canvas immediately</p>\n",
                type: "Boolean",
                optional: !0
              }],
              example: ['\n<div class="norender"><code>\nfunction setup() {\n  createCanvas(windowWidth, windowHeight);\n}\n\nfunction draw() {\n  background(0, 100, 200);\n}\n\nfunction windowResized() {\n  resizeCanvas(windowWidth, windowHeight);\n}\n</code></div>'],
              alt: "No image displayed.",
              class: "p5",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/rendering.js",
              line: 174,
              description: "<p>Removes the default canvas for a p5 sketch that doesn&#39;t\nrequire a canvas</p>\n",
              itemtype: "method",
              name: "noCanvas",
              example: ["\n<div>\n<code>\nfunction setup() {\n  noCanvas();\n}\n</code>\n</div>"],
              alt: "no image displayed",
              class: "p5",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/rendering.js",
              line: 197,
              description: "<p>Creates and returns a new p5.Renderer object. Use this class if you need\nto draw into an off-screen graphics buffer. The two parameters define the\nwidth and height in pixels.</p>\n",
              itemtype: "method",
              name: "createGraphics",
              params: [{
                name: "w",
                description: "<p>width of the offscreen graphics buffer</p>\n",
                type: "Number"
              }, {
                name: "h",
                description: "<p>height of the offscreen graphics buffer</p>\n",
                type: "Number"
              }, {
                name: "renderer",
                description: "<p>either P2D or WEBGL\nundefined defaults to p2d</p>\n",
                type: "Constant",
                optional: !0
              }],
              return: {
                description: "offscreen graphics buffer",
                type: "p5.Graphics"
              },
              example: ["\n<div>\n<code>\nlet pg;\nfunction setup() {\n  createCanvas(100, 100);\n  pg = createGraphics(100, 100);\n}\nfunction draw() {\n  background(200);\n  pg.background(100);\n  pg.noStroke();\n  pg.ellipse(pg.width / 2, pg.height / 2, 50, 50);\n  image(pg, 50, 50);\n  image(pg, 0, 0, 50, 50);\n}\n</code>\n</div>"],
              alt: "4 grey squares alternating light and dark grey. White quarter circle mid-left.",
              class: "p5",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/rendering.js",
              line: 236,
              description: "<p>Blends the pixels in the display window according to the defined mode.\nThere is a choice of the following modes to blend the source pixels (A)\nwith the ones of pixels already in the display window (B):</p>\n<ul>\n<li><code>BLEND</code> - linear interpolation of colours: C =\nA*factor + B. This is the default blending mode.</li>\n<li><code>ADD</code> - sum of A and B</li>\n<li><code>DARKEST</code> - only the darkest colour succeeds: C =\nmin(A*factor, B).</li>\n<li><code>LIGHTEST</code> - only the lightest colour succeeds: C =\nmax(A*factor, B).</li>\n<li><code>DIFFERENCE</code> - subtract colors from underlying image.</li>\n<li><code>EXCLUSION</code> - similar to <code>DIFFERENCE</code>, but less\nextreme.</li>\n<li><code>MULTIPLY</code> - multiply the colors, result will always be\ndarker.</li>\n<li><code>SCREEN</code> - opposite multiply, uses inverse values of the\ncolors.</li>\n<li><code>REPLACE</code> - the pixels entirely replace the others and\ndon&#39;t utilize alpha (transparency) values.</li>\n<li><code>OVERLAY</code> - mix of <code>MULTIPLY</code> and <code>SCREEN\n</code>. Multiplies dark values, and screens light values.</li>\n<li><code>HARD_LIGHT</code> - <code>SCREEN</code> when greater than 50%\ngray, <code>MULTIPLY</code> when lower.</li>\n<li><code>SOFT_LIGHT</code> - mix of <code>DARKEST</code> and\n<code>LIGHTEST</code>. Works like <code>OVERLAY</code>, but not as harsh.\n</li>\n<li><code>DODGE</code> - lightens light tones and increases contrast,\nignores darks.</li>\n<li><code>BURN</code> - darker areas are applied, increasing contrast,\nignores lights.</li>\n</ul>",
              itemtype: "method",
              name: "blendMode",
              params: [{
                name: "mode",
                description: "<p>blend mode to set for canvas.\n               either BLEND, DARKEST, LIGHTEST, DIFFERENCE, MULTIPLY,\n               EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n               SOFT_LIGHT, DODGE, BURN, ADD or NORMAL</p>\n",
                type: "Constant"
              }],
              example: ["\n<div>\n<code>\nblendMode(LIGHTEST);\nstrokeWeight(30);\nstroke(80, 150, 255);\nline(25, 25, 75, 75);\nstroke(255, 50, 50);\nline(75, 25, 25, 75);\n</code>\n</div>\n<div>\n<code>\nblendMode(MULTIPLY);\nstrokeWeight(30);\nstroke(80, 150, 255);\nline(25, 25, 75, 75);\nstroke(255, 50, 50);\nline(75, 25, 25, 75);\n</code>\n</div>"],
              alt: "translucent image thick red & blue diagonal rounded lines intersecting center\nThick red & blue diagonal rounded lines intersecting center. dark at overlap",
              class: "p5",
              module: "Rendering",
              submodule: "Rendering"
            }, {
              file: "src/core/shim.js",
              line: 23,
              description: '<p>shim for Uint8ClampedArray.slice\n(allows arrayCopy to work with pixels[])\nwith thanks to <a href="http://halfpapstudios.com/blog/tag/html5-canvas/">http://halfpapstudios.com/blog/tag/html5-canvas/</a>\nEnumerable set to false to protect for...in from\nUint8ClampedArray.prototype pollution.</p>\n',
              class: "p5",
              module: "Rendering"
            }, {
              file: "src/core/shim.js",
              line: 45,
              description: '<p>this is implementation of Object.assign() which is unavailable in\nIE11 and (non-Chrome) Android browsers.\nThe assign() method is used to copy the values of all enumerable\nown properties from one or more source objects to a target object.\nIt will return the target object.\nModified from <a href="https://github.com/ljharb/object.assign">https://github.com/ljharb/object.assign</a></p>\n',
              class: "p5",
              module: "Rendering"
            }, {
              file: "src/core/structure.js",
              line: 12,
              description: '<p>Stops p5.js from continuously executing the code within <a href="#/p5/draw">draw()</a>.\nIf <a href="#/p5/loop">loop()</a> is called, the code in <a href="#/p5/draw">draw()</a> begins to run continuously again.\nIf using <a href="#/p5/noLoop">noLoop()</a> in <a href="#/p5/setup">setup()</a>, it should be the last line inside the block.\n<br><br>\nWhen <a href="#/p5/noLoop">noLoop()</a> is used, it&#39;s not possible to manipulate or access the\nscreen inside event handling functions such as <a href="#/p5/mousePressed">mousePressed()</a> or\n<a href="#/p5/keyPressed">keyPressed()</a>. Instead, use those functions to call <a href="#/p5/redraw">redraw()</a> or <a href="#/p5/loop">loop()</a>,\nwhich will run <a href="#/p5/draw">draw()</a>, which can update the screen properly. This means\nthat when <a href="#/p5/noLoop">noLoop()</a> has been called, no drawing can happen, and functions\nlike <a href="#/p5/saveFrame">saveFrame()</a> or <a href="#/p5/loadPixels">loadPixels()</a> may not be used.\n<br><br>\nNote that if the sketch is resized, <a href="#/p5/redraw">redraw()</a> will be called to update\nthe sketch, even after <a href="#/p5/noLoop">noLoop()</a> has been specified. Otherwise, the sketch\nwould enter an odd state until <a href="#/p5/loop">loop()</a> was called.</p>\n',
              itemtype: "method",
              name: "noLoop",
              example: ["\n<div><code>\nfunction setup() {\n  createCanvas(100, 100);\n  background(200);\n  noLoop();\n}\n\nfunction draw() {\n  line(10, 10, 90, 90);\n}\n</code></div>\n\n<div><code>\nlet x = 0;\nfunction setup() {\n  createCanvas(100, 100);\n}\n\nfunction draw() {\n  background(204);\n  x = x + 0.1;\n  if (x > width) {\n    x = 0;\n  }\n  line(x, 0, x, height);\n}\n\nfunction mousePressed() {\n  noLoop();\n}\n\nfunction mouseReleased() {\n  loop();\n}\n</code></div>"],
              alt: "113 pixel long line extending from top-left to bottom right of canvas.\nhorizontal line moves slowly from left. Loops but stops on mouse press.",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/structure.js",
              line: 74,
              description: '<p>By default, p5.js loops through draw() continuously, executing the code\nwithin it. However, the <a href="#/p5/draw">draw()</a> loop may be stopped by calling <a href="#/p5/noLoop">noLoop()</a>.\nIn that case, the <a href="#/p5/draw">draw()</a> loop can be resumed with loop().</p>\n',
              itemtype: "method",
              name: "loop",
              example: ["\n<div><code>\nlet x = 0;\nfunction setup() {\n  createCanvas(100, 100);\n  noLoop();\n}\n\nfunction draw() {\n  background(204);\n  x = x + 0.1;\n  if (x > width) {\n    x = 0;\n  }\n  line(x, 0, x, height);\n}\n\nfunction mousePressed() {\n  loop();\n}\n\nfunction mouseReleased() {\n  noLoop();\n}\n</code></div>"],
              alt: "horizontal line moves slowly from left. Loops but stops on mouse press.",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/structure.js",
              line: 116,
              description: '<p>The <a href="#/p5/push">push()</a> function saves the current drawing style settings and\ntransformations, while <a href="#/p5/pop">pop()</a> restores these settings. Note that these\nfunctions are always used together. They allow you to change the style\nand transformation settings and later return to what you had. When a new\nstate is started with <a href="#/p5/push">push()</a>, it builds on the current style and transform\ninformation. The <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a> functions can be embedded to provide\nmore control. (See the second example for a demonstration.)\n<br><br>\n<a href="#/p5/push">push()</a> stores information related to the current transformation state\nand style settings controlled by the following functions: <a href="#/p5/fill">fill()</a>,\n<a href="#/p5/stroke">stroke()</a>, <a href="#/p5/tint">tint()</a>, <a href="#/p5/strokeWeight">strokeWeight()</a>, <a href="#/p5/strokeCap">strokeCap()</a>, <a href="#/p5/strokeJoin">strokeJoin()</a>,\n<a href="#/p5/imageMode">imageMode()</a>, <a href="#/p5/rectMode">rectMode()</a>, <a href="#/p5/ellipseMode">ellipseMode()</a>, <a href="#/p5/colorMode">colorMode()</a>, <a href="#/p5/textAlign">textAlign()</a>,\n<a href="#/p5/textFont">textFont()</a>, <a href="#/p5/textMode">textMode()</a>, <a href="#/p5/textSize">textSize()</a>, <a href="#/p5/textLeading">textLeading()</a>.</p>\n',
              itemtype: "method",
              name: "push",
              example: ["\n<div>\n<code>\nellipse(0, 50, 33, 33); // Left circle\n\npush(); // Start a new drawing state\nstrokeWeight(10);\nfill(204, 153, 0);\ntranslate(50, 0);\nellipse(0, 50, 33, 33); // Middle circle\npop(); // Restore original state\n\nellipse(100, 50, 33, 33); // Right circle\n</code>\n</div>\n<div>\n<code>\nellipse(0, 50, 33, 33); // Left circle\n\npush(); // Start a new drawing state\nstrokeWeight(10);\nfill(204, 153, 0);\nellipse(33, 50, 33, 33); // Left-middle circle\n\npush(); // Start another new drawing state\nstroke(0, 102, 153);\nellipse(66, 50, 33, 33); // Right-middle circle\npop(); // Restore previous state\n\npop(); // Restore original state\n\nellipse(100, 50, 33, 33); // Right circle\n</code>\n</div>"],
              alt: "Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/structure.js",
              line: 181,
              description: '<p>The <a href="#/p5/push">push()</a> function saves the current drawing style settings and\ntransformations, while <a href="#/p5/pop">pop()</a> restores these settings. Note that these\nfunctions are always used together. They allow you to change the style\nand transformation settings and later return to what you had. When a new\nstate is started with <a href="#/p5/push">push()</a>, it builds on the current style and transform\ninformation. The <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a> functions can be embedded to provide\nmore control. (See the second example for a demonstration.)\n<br><br>\n<a href="#/p5/push">push()</a> stores information related to the current transformation state\nand style settings controlled by the following functions: <a href="#/p5/fill">fill()</a>,\n<a href="#/p5/stroke">stroke()</a>, <a href="#/p5/tint">tint()</a>, <a href="#/p5/strokeWeight">strokeWeight()</a>, <a href="#/p5/strokeCap">strokeCap()</a>, <a href="#/p5/strokeJoin">strokeJoin()</a>,\n<a href="#/p5/imageMode">imageMode()</a>, <a href="#/p5/rectMode">rectMode()</a>, <a href="#/p5/ellipseMode">ellipseMode()</a>, <a href="#/p5/colorMode">colorMode()</a>, <a href="#/p5/textAlign">textAlign()</a>,\n<a href="#/p5/textFont">textFont()</a>, <a href="#/p5/textMode">textMode()</a>, <a href="#/p5/textSize">textSize()</a>, <a href="#/p5/textLeading">textLeading()</a>.</p>\n',
              itemtype: "method",
              name: "pop",
              example: ["\n<div>\n<code>\nellipse(0, 50, 33, 33); // Left circle\n\npush(); // Start a new drawing state\ntranslate(50, 0);\nstrokeWeight(10);\nfill(204, 153, 0);\nellipse(0, 50, 33, 33); // Middle circle\npop(); // Restore original state\n\nellipse(100, 50, 33, 33); // Right circle\n</code>\n</div>\n<div>\n<code>\nellipse(0, 50, 33, 33); // Left circle\n\npush(); // Start a new drawing state\nstrokeWeight(10);\nfill(204, 153, 0);\nellipse(33, 50, 33, 33); // Left-middle circle\n\npush(); // Start another new drawing state\nstroke(0, 102, 153);\nellipse(66, 50, 33, 33); // Right-middle circle\npop(); // Restore previous state\n\npop(); // Restore original state\n\nellipse(100, 50, 33, 33); // Right circle\n</code>\n</div>"],
              alt: "Gold ellipse + thick black outline @center 2 white ellipses on left and right.\n2 Gold ellipses left black right blue stroke. 2 white ellipses on left+right.",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/structure.js",
              line: 247,
              description: '<p>Executes the code within <a href="#/p5/draw">draw()</a> one time. This functions allows the\n program to update the display window only when necessary, for example\n when an event registered by <a href="#/p5/mousePressed">mousePressed()</a> or <a href="#/p5/keyPressed">keyPressed()</a> occurs.\n <br><br>\n In structuring a program, it only makes sense to call <a href="#/p5/redraw">redraw()</a> within\n events such as <a href="#/p5/mousePressed">mousePressed()</a>. This is because <a href="#/p5/redraw">redraw()</a> does not run\n <a href="#/p5/draw">draw()</a> immediately (it only sets a flag that indicates an update is\n needed).\n <br><br>\n The <a href="#/p5/redraw">redraw()</a> function does not work properly when called inside <a href="#/p5/draw">draw()</a>.\n To enable/disable animations, use <a href="#/p5/loop">loop()</a> and <a href="#/p5/noLoop">noLoop()</a>.\n <br><br>\n In addition you can set the number of redraws per method call. Just\n add an integer as single parameter for the number of redraws.</p>\n',
              itemtype: "method",
              name: "redraw",
              params: [{
                name: "n",
                description: "<p>Redraw for n-times. The default value is 1.</p>\n",
                type: "Integer",
                optional: !0
              }],
              example: ["\n <div><code>\n let x = 0;\nfunction setup() {\n   createCanvas(100, 100);\n   noLoop();\n }\nfunction draw() {\n   background(204);\n   line(x, 0, x, height);\n }\nfunction mousePressed() {\n   x += 1;\n   redraw();\n }\n </code></div>\n<div class='norender'><code>\n let x = 0;\nfunction setup() {\n   createCanvas(100, 100);\n   noLoop();\n }\nfunction draw() {\n   background(204);\n   x += 1;\n   line(x, 0, x, height);\n }\nfunction mousePressed() {\n   redraw(5);\n }\n </code></div>"],
              alt: "black line on far left of canvas\n black line on far left of canvas",
              class: "p5",
              module: "Structure",
              submodule: "Structure"
            }, {
              file: "src/core/transform.js",
              line: 13,
              description: '<p>Multiplies the current matrix by the one specified through the parameters.\nThis is a powerful operation that can perform the equivalent of translate,\nscale, shear and rotate all at once. You can learn more about transformation\nmatrices on <a href="https://en.wikipedia.org/wiki/Transformation_matrix">\nWikipedia</a>.</p>\n<p>The naming of the arguments here follows the naming of the <a href=\n"https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-transform">\nWHATWG specification</a> and corresponds to a\ntransformation matrix of the\nform:</p>\n<blockquote>\n<p><img style="max-width: 150px" src="assets/transformation-matrix.png"\nalt="The transformation matrix used when applyMatrix is called"/></p>\n</blockquote>\n',
              itemtype: "method",
              name: "applyMatrix",
              params: [{
                name: "a",
                description: "<p>numbers which define the 2x3 matrix to be multiplied</p>\n",
                type: "Number"
              }, {
                name: "b",
                description: "<p>numbers which define the 2x3 matrix to be multiplied</p>\n",
                type: "Number"
              }, {
                name: "c",
                description: "<p>numbers which define the 2x3 matrix to be multiplied</p>\n",
                type: "Number"
              }, {
                name: "d",
                description: "<p>numbers which define the 2x3 matrix to be multiplied</p>\n",
                type: "Number"
              }, {
                name: "e",
                description: "<p>numbers which define the 2x3 matrix to be multiplied</p>\n",
                type: "Number"
              }, {
                name: "f",
                description: "<p>numbers which define the 2x3 matrix to be multiplied</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  frameRate(10);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  var step = frameCount % 20;\n  background(200);\n  // Equivalent to translate(x, y);\n  applyMatrix(1, 0, 0, 1, 40 + step, 50);\n  rect(0, 0, 50, 50);\n}\n</code>\n</div>\n<div>\n<code>\nfunction setup() {\n  frameRate(10);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  var step = frameCount % 20;\n  background(200);\n  translate(50, 50);\n  // Equivalent to scale(x, y);\n  applyMatrix(1 / step, 0, 0, 1 / step, 0, 0);\n  rect(0, 0, 50, 50);\n}\n</code>\n</div>\n<div>\n<code>\nfunction setup() {\n  frameRate(10);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  var step = frameCount % 20;\n  var angle = map(step, 0, 20, 0, TWO_PI);\n  var cos_a = cos(angle);\n  var sin_a = sin(angle);\n  background(200);\n  translate(50, 50);\n  // Equivalent to rotate(angle);\n  applyMatrix(cos_a, sin_a, -sin_a, cos_a, 0, 0);\n  rect(0, 0, 50, 50);\n}\n</code>\n</div>\n<div>\n<code>\nfunction setup() {\n  frameRate(10);\n  rectMode(CENTER);\n}\n\nfunction draw() {\n  var step = frameCount % 20;\n  var angle = map(step, 0, 20, -PI / 4, PI / 4);\n  background(200);\n  translate(50, 50);\n  // equivalent to shearX(angle);\n  var shear_factor = 1 / tan(PI / 2 - angle);\n  applyMatrix(1, 0, shear_factor, 1, 0, 0);\n  rect(0, 0, 50, 50);\n}\n</code>\n</div>"],
              alt: "A rectangle translating to the right\nA rectangle shrinking to the center\nA rectangle rotating clockwise about the center\nA rectangle shearing",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 135,
              description: "<p>Replaces the current matrix with the identity matrix.</p>\n",
              itemtype: "method",
              name: "resetMatrix",
              chainable: 1,
              example: ["\n<div>\n<code>\ntranslate(50, 50);\napplyMatrix(0.5, 0.5, -0.5, 0.5, 0, 0);\nrect(0, 0, 20, 20);\n// Note that the translate is also reset.\nresetMatrix();\nrect(0, 0, 20, 20);\n</code>\n</div>"],
              alt: "A rotated retangle in the center with another at the top left corner",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 161,
              description: '<p>Rotates a shape the amount specified by the angle parameter. This\nfunction accounts for <a href="#/p5/angleMode">angleMode</a>, so angles can be entered in either\nRADIANS or DEGREES.\n<br><br>\nObjects are always rotated around their relative position to the\norigin and positive numbers rotate objects in a clockwise direction.\nTransformations apply to everything that happens after and subsequent\ncalls to the function accumulates the effect. For example, calling\nrotate(HALF_PI) and then rotate(HALF_PI) is the same as rotate(PI).\nAll tranformations are reset when <a href="#/p5/draw">draw()</a> begins again.\n<br><br>\nTechnically, <a href="#/p5/rotate">rotate()</a> multiplies the current transformation matrix\nby a rotation matrix. This function can be further controlled by\nthe <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a>.</p>\n',
              itemtype: "method",
              name: "rotate",
              params: [{
                name: "angle",
                description: "<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",
                type: "Number"
              }, {
                name: "axis",
                description: "<p>(in 3d) the axis to rotate around</p>\n",
                type: "p5.Vector|Number[]",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\ntranslate(width / 2, height / 2);\nrotate(PI / 3.0);\nrect(-26, -26, 52, 52);\n</code>\n</div>"],
              alt: "white 52x52 rect with black outline at center rotated counter 45 degrees",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 201,
              description: "<p>Rotates around X axis.</p>\n",
              itemtype: "method",
              name: "rotateX",
              params: [{
                name: "angle",
                description: "<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(255);\n  rotateX(millis() / 1000);\n  box();\n}\n</code>\n</div>"],
              alt: "3d box rotating around the x axis.",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 231,
              description: "<p>Rotates around Y axis.</p>\n",
              itemtype: "method",
              name: "rotateY",
              params: [{
                name: "angle",
                description: "<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(255);\n  rotateY(millis() / 1000);\n  box();\n}\n</code>\n</div>"],
              alt: "3d box rotating around the y axis.",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 261,
              description: "<p>Rotates around Z axis. Webgl mode only.</p>\n",
              itemtype: "method",
              name: "rotateZ",
              params: [{
                name: "angle",
                description: "<p>the angle of rotation, specified in radians\n                       or degrees, depending on current angleMode</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(255);\n  rotateZ(millis() / 1000);\n  box();\n}\n</code>\n</div>"],
              alt: "3d box rotating around the z axis.",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 291,
              description: '<p>Increases or decreases the size of a shape by expanding and contracting\nvertices. Objects always scale from their relative origin to the\ncoordinate system. Scale values are specified as decimal percentages.\nFor example, the function call scale(2.0) increases the dimension of a\nshape by 200%.\n<br><br>\nTransformations apply to everything that happens after and subsequent\ncalls to the function multiply the effect. For example, calling scale(2.0)\nand then scale(1.5) is the same as scale(3.0). If <a href="#/p5/scale">scale()</a> is called\nwithin <a href="#/p5/draw">draw()</a>, the transformation is reset when the loop begins again.\n<br><br>\nUsing this function with the z parameter is only available in WEBGL mode.\nThis function can be further controlled with <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a>.</p>\n',
              itemtype: "method",
              name: "scale",
              chainable: 1,
              example: ["\n<div>\n<code>\nrect(30, 20, 50, 50);\nscale(0.5);\nrect(30, 20, 50, 50);\n</code>\n</div>\n\n<div>\n<code>\nrect(30, 20, 50, 50);\nscale(0.5, 1.3);\nrect(30, 20, 50, 50);\n</code>\n</div>"],
              alt: "white 52x52 rect with black outline at center rotated counter 45 degrees\n2 white rects with black outline- 1 50x50 at center. other 25x65 bottom left",
              class: "p5",
              module: "Transform",
              submodule: "Transform",
              overloads: [{
                line: 291,
                params: [{
                  name: "s",
                  description: "<p>percent to scale the object, or percentage to\n                     scale the object in the x-axis if multiple arguments\n                     are given</p>\n",
                  type: "Number|p5.Vector|Number[]"
                }, {
                  name: "y",
                  description: "<p>percent to scale the object in the y-axis</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "z",
                  description: "<p>percent to scale the object in the z-axis (webgl only)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 336,
                params: [{
                  name: "scales",
                  description: "<p>per-axis percents to scale the object</p>\n",
                  type: "p5.Vector|Number[]"
                }],
                chainable: 1
              }]
            }, {
              file: "src/core/transform.js",
              line: 366,
              description: '<p>Shears a shape around the x-axis the amount specified by the angle\nparameter. Angles should be specified in the current angleMode.\nObjects are always sheared around their relative position to the origin\nand positive numbers shear objects in a clockwise direction.\n<br><br>\nTransformations apply to everything that happens after and subsequent\ncalls to the function accumulates the effect. For example, calling\nshearX(PI/2) and then shearX(PI/2) is the same as shearX(PI).\nIf <a href="#/p5/shearX">shearX()</a> is called within the <a href="#/p5/draw">draw()</a>, the transformation is reset when\nthe loop begins again.\n<br><br>\nTechnically, <a href="#/p5/shearX">shearX()</a> multiplies the current transformation matrix by a\nrotation matrix. This function can be further controlled by the\n<a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a> functions.</p>\n',
              itemtype: "method",
              name: "shearX",
              params: [{
                name: "angle",
                description: "<p>angle of shear specified in radians or degrees,\n                       depending on current angleMode</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\ntranslate(width / 4, height / 4);\nshearX(PI / 4.0);\nrect(0, 0, 30, 30);\n</code>\n</div>"],
              alt: "white irregular quadrilateral with black outline at top middle.",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 405,
              description: '<p>Shears a shape around the y-axis the amount specified by the angle\nparameter. Angles should be specified in the current angleMode. Objects\nare always sheared around their relative position to the origin and\npositive numbers shear objects in a clockwise direction.\n<br><br>\nTransformations apply to everything that happens after and subsequent\ncalls to the function accumulates the effect. For example, calling\nshearY(PI/2) and then shearY(PI/2) is the same as shearY(PI). If\n<a href="#/p5/shearY">shearY()</a> is called within the <a href="#/p5/draw">draw()</a>, the transformation is reset when\nthe loop begins again.\n<br><br>\nTechnically, <a href="#/p5/shearY">shearY()</a> multiplies the current transformation matrix by a\nrotation matrix. This function can be further controlled by the\n<a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a> functions.</p>\n',
              itemtype: "method",
              name: "shearY",
              params: [{
                name: "angle",
                description: "<p>angle of shear specified in radians or degrees,\n                       depending on current angleMode</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\ntranslate(width / 4, height / 4);\nshearY(PI / 4.0);\nrect(0, 0, 30, 30);\n</code>\n</div>"],
              alt: "white irregular quadrilateral with black outline at middle bottom.",
              class: "p5",
              module: "Transform",
              submodule: "Transform"
            }, {
              file: "src/core/transform.js",
              line: 444,
              description: '<p>Specifies an amount to displace objects within the display window.\nThe x parameter specifies left/right translation, the y parameter\nspecifies up/down translation.\n<br><br>\nTransformations are cumulative and apply to everything that happens after\nand subsequent calls to the function accumulates the effect. For example,\ncalling translate(50, 0) and then translate(20, 0) is the same as\ntranslate(70, 0). If <a href="#/p5/translate">translate()</a> is called within <a href="#/p5/draw">draw()</a>, the\ntransformation is reset when the loop begins again. This function can be\nfurther controlled by using <a href="#/p5/push">push()</a> and <a href="#/p5/pop">pop()</a>.</p>\n',
              itemtype: "method",
              name: "translate",
              chainable: 1,
              example: ["\n<div>\n<code>\ntranslate(30, 20);\nrect(0, 0, 55, 55);\n</code>\n</div>\n\n<div>\n<code>\nrect(0, 0, 55, 55); // Draw rect at original 0,0\ntranslate(30, 20);\nrect(0, 0, 55, 55); // Draw rect at new 0,0\ntranslate(14, 14);\nrect(0, 0, 55, 55); // Draw rect at new 0,0\n</code>\n</div>\n\n\n<div>\n<code>\nfunction draw() {\n  background(200);\n  rectMode(CENTER);\n  translate(width / 2, height / 2);\n  translate(p5.Vector.fromAngle(millis() / 1000, 40));\n  rect(0, 0, 20, 20);\n}\n</code>\n</div>"],
              alt: "white 55x55 rect with black outline at center right.\n3 white 55x55 rects with black outlines at top-l, center-r and bottom-r.\na 20x20 white rect moving in a circle around the canvas",
              class: "p5",
              module: "Transform",
              submodule: "Transform",
              overloads: [{
                line: 444,
                params: [{
                  name: "x",
                  description: "<p>left/right translation</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>up/down translation</p>\n",
                  type: "Number"
                }, {
                  name: "z",
                  description: "<p>forward/backward translation (webgl only)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 498,
                params: [{
                  name: "vector",
                  description: "<p>the vector to translate by</p>\n",
                  type: "p5.Vector"
                }],
                chainable: 1
              }]
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 16,
              description: "<p>Creates a new instance of p5.StringDict using the key-value pair\n or the object you provide.</p>\n",
              itemtype: "method",
              name: "createStringDict",
              return: {
                description: "",
                type: "p5.StringDict"
              },
              example: ["\n <div class=\"norender\">\n <code>\n function setup() {\n   var myDictionary = createStringDict('p5', 'js');\n   print(myDictionary.hasKey('p5')); // logs true to console\n  var anotherDictionary = createStringDict({ happy: 'coding' });\n   print(anotherDictionary.hasKey('happy')); // logs true to console\n }\n </code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Dictionary",
              overloads: [{
                line: 16,
                params: [{
                  name: "key",
                  description: "",
                  type: "String"
                }, {
                  name: "value",
                  description: "",
                  type: "String"
                }],
                return: {
                  description: "",
                  type: "p5.StringDict"
                }
              }, {
                line: 39,
                params: [{
                  name: "object",
                  description: "<p>object</p>\n",
                  type: "Object"
                }],
                return: {
                  description: "",
                  type: "p5.StringDict"
                }
              }]
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 50,
              description: '<p>Creates a new instance of <a href="#/p5.NumberDict">p5.NumberDict</a> using the key-value pair\n or object you provide.</p>\n',
              itemtype: "method",
              name: "createNumberDict",
              return: {
                description: "",
                type: "p5.NumberDict"
              },
              example: ['\n <div class="norender">\n <code>\n function setup() {\n   var myDictionary = createNumberDict(100, 42);\n   print(myDictionary.hasKey(100)); // logs true to console\n  var anotherDictionary = createNumberDict({ 200: 84 });\n   print(anotherDictionary.hasKey(200)); // logs true to console\n }\n </code></div>'],
              class: "p5",
              module: "Data",
              submodule: "Dictionary",
              overloads: [{
                line: 50,
                params: [{
                  name: "key",
                  description: "",
                  type: "Number"
                }, {
                  name: "value",
                  description: "",
                  type: "Number"
                }],
                return: {
                  description: "",
                  type: "p5.NumberDict"
                }
              }, {
                line: 73,
                params: [{
                  name: "object",
                  description: "<p>object</p>\n",
                  type: "Object"
                }],
                return: {
                  description: "",
                  type: "p5.NumberDict"
                }
              }]
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 103,
              description: "<p>Returns the number of key-value pairs currently stored in the Dictionary.</p>\n",
              itemtype: "method",
              name: "size",
              return: {
                description: "the number of key-value pairs in the Dictionary",
                type: "Integer"
              },
              example: ['\n<div class="norender">\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict(1, 10);\n  myDictionary.create(2, 20);\n  myDictionary.create(3, 30);\n  print(myDictionary.size()); // logs 3 to the console\n}\n</code></div>\n'],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 125,
              description: "<p>Returns true if the given key exists in the Dictionary,\notherwise returns false.</p>\n",
              itemtype: "method",
              name: "hasKey",
              params: [{
                name: "key",
                description: "<p>that you want to look up</p>\n",
                type: "Number|String"
              }],
              return: {
                description: "whether that key exists in Dictionary",
                type: "Boolean"
              },
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  var myDictionary = createStringDict('p5', 'js');\n  print(myDictionary.hasKey('p5')); // logs true to console\n}\n</code></div>\n"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 148,
              description: "<p>Returns the value stored at the given key.</p>\n",
              itemtype: "method",
              name: "get",
              params: [{
                name: "the",
                description: "<p>key you want to access</p>\n",
                type: "Number|String"
              }],
              return: {
                description: "the value stored at that key",
                type: "Number|String"
              },
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  var myDictionary = createStringDict('p5', 'js');\n  var myValue = myDictionary.get('p5');\n  print(myValue === 'js'); // logs true to console\n}\n</code></div>\n"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 175,
              description: "<p>Updates the value associated with the given key in case it already exists\nin the Dictionary. Otherwise a new key-value pair is added.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "key",
                description: "",
                type: "Number|String"
              }, {
                name: "value",
                description: "",
                type: "Number|String"
              }],
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  var myDictionary = createStringDict('p5', 'js');\n  myDictionary.set('p5', 'JS');\n  myDictionary.print(); // logs \"key: p5 - value: JS\" to console\n}\n</code></div>\n"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 203,
              description: "<p>private helper function to handle the user passing in objects\nduring construction or calls to create()</p>\n",
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 214,
              description: "<p>Creates a new key-value pair in the Dictionary.</p>\n",
              itemtype: "method",
              name: "create",
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  var myDictionary = createStringDict('p5', 'js');\n  myDictionary.create('happy', 'coding');\n  myDictionary.print();\n  // above logs \"key: p5 - value: js, key: happy - value: coding\" to console\n}\n</code></div>"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary",
              overloads: [{
                line: 214,
                params: [{
                  name: "key",
                  description: "",
                  type: "Number|String"
                }, {
                  name: "value",
                  description: "",
                  type: "Number|String"
                }]
              }, {
                line: 232,
                params: [{
                  name: "obj",
                  description: "<p>key/value pair</p>\n",
                  type: "Object"
                }]
              }]
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 250,
              description: "<p>Removes all previously stored key-value pairs from the Dictionary.</p>\n",
              itemtype: "method",
              name: "clear",
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  var myDictionary = createStringDict('p5', 'js');\n  print(myDictionary.hasKey('p5')); // prints 'true'\n  myDictionary.clear();\n  print(myDictionary.hasKey('p5')); // prints 'false'\n}\n</code>\n</div>"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 271,
              description: "<p>Removes the key-value pair stored at the given key from the Dictionary.</p>\n",
              itemtype: "method",
              name: "remove",
              params: [{
                name: "key",
                description: "<p>for the pair to remove</p>\n",
                type: "Number|String"
              }],
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  var myDictionary = createStringDict('p5', 'js');\n  myDictionary.create('happy', 'coding');\n  myDictionary.print();\n  // above logs \"key: p5 - value: js, key: happy - value: coding\" to console\n  myDictionary.remove('p5');\n  myDictionary.print();\n  // above logs \"key: happy value: coding\" to console\n}\n</code></div>\n"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 301,
              description: "<p>Logs the set of items currently stored in the Dictionary to the console.</p>\n",
              itemtype: "method",
              name: "print",
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  var myDictionary = createStringDict('p5', 'js');\n  myDictionary.create('happy', 'coding');\n  myDictionary.print();\n  // above logs \"key: p5 - value: js, key: happy - value: coding\" to console\n}\n</code>\n</div>"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 325,
              description: "<p>Converts the Dictionary into a CSV file for local download.</p>\n",
              itemtype: "method",
              name: "saveTable",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100);\n  background(200);\n  text('click here to save', 10, 10, 70, 80);\n}\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    createStringDict({\n      john: 1940,\n      paul: 1942,\n      george: 1943,\n      ringo: 1940\n    }).saveTable('beatles');\n  }\n}\n</code>\n</div>"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 363,
              description: "<p>Converts the Dictionary into a JSON file for local download.</p>\n",
              itemtype: "method",
              name: "saveJSON",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100);\n  background(200);\n  text('click here to save', 10, 10, 70, 80);\n}\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    createStringDict({\n      john: 1940,\n      paul: 1942,\n      george: 1943,\n      ringo: 1940\n    }).saveJSON('beatles');\n  }\n}\n</code>\n</div>"],
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 394,
              description: "<p>private helper function to ensure that the user passed in valid\nvalues for the Dictionary type</p>\n",
              class: "p5.TypedDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 437,
              description: "<p>private helper function to ensure that the user passed in valid\nvalues for the Dictionary type</p>\n",
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 446,
              description: "<p>Add the given number to the value currently stored at the given key.\nThe sum then replaces the value previously stored in the Dictionary.</p>\n",
              itemtype: "method",
              name: "add",
              params: [{
                name: "Key",
                description: "<p>for the value you wish to add to</p>\n",
                type: "Number"
              }, {
                name: "Number",
                description: "<p>to add to the value</p>\n",
                type: "Number"
              }],
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict(2, 5);\n  myDictionary.add(2, 2);\n  print(myDictionary.get(2)); // logs 7 to console.\n}\n</code></div>\n\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 474,
              description: "<p>Subtract the given number from the value currently stored at the given key.\nThe difference then replaces the value previously stored in the Dictionary.</p>\n",
              itemtype: "method",
              name: "sub",
              params: [{
                name: "Key",
                description: "<p>for the value you wish to subtract from</p>\n",
                type: "Number"
              }, {
                name: "Number",
                description: "<p>to subtract from the value</p>\n",
                type: "Number"
              }],
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict(2, 5);\n  myDictionary.sub(2, 2);\n  print(myDictionary.get(2)); // logs 3 to console.\n}\n</code></div>\n\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 498,
              description: "<p>Multiply the given number with the value currently stored at the given key.\nThe product then replaces the value previously stored in the Dictionary.</p>\n",
              itemtype: "method",
              name: "mult",
              params: [{
                name: "Key",
                description: "<p>for value you wish to multiply</p>\n",
                type: "Number"
              }, {
                name: "Amount",
                description: "<p>to multiply the value by</p>\n",
                type: "Number"
              }],
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict(2, 4);\n  myDictionary.mult(2, 2);\n  print(myDictionary.get(2)); // logs 8 to console.\n}\n</code></div>\n\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 526,
              description: "<p>Divide the given number with the value currently stored at the given key.\nThe quotient then replaces the value previously stored in the Dictionary.</p>\n",
              itemtype: "method",
              name: "div",
              params: [{
                name: "Key",
                description: "<p>for value you wish to divide</p>\n",
                type: "Number"
              }, {
                name: "Amount",
                description: "<p>to divide the value by</p>\n",
                type: "Number"
              }],
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict(2, 8);\n  myDictionary.div(2, 2);\n  print(myDictionary.get(2)); // logs 4 to console.\n}\n</code></div>\n\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 554,
              description: "<p>private helper function for finding lowest or highest value\nthe argument &#39;flip&#39; is used to flip the comparison arrow\nfrom &#39;less than&#39; to &#39;greater than&#39;</p>\n",
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 579,
              description: "<p>Return the lowest number currently stored in the Dictionary.</p>\n",
              itemtype: "method",
              name: "minValue",
              return: {
                description: "",
                type: "Number"
              },
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict({ 2: -10, 4: 0.65, 1.2: 3 });\n  var lowestValue = myDictionary.minValue(); // value is -10\n  print(lowestValue);\n}\n</code></div>\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 600,
              description: "<p>Return the highest number currently stored in the Dictionary.</p>\n",
              itemtype: "method",
              name: "maxValue",
              return: {
                description: "",
                type: "Number"
              },
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict({ 2: -10, 4: 0.65, 1.2: 3 });\n  var highestValue = myDictionary.maxValue(); // value is 3\n  print(highestValue);\n}\n</code></div>\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 621,
              description: "<p>private helper function for finding lowest or highest key\nthe argument &#39;flip&#39; is used to flip the comparison arrow\nfrom &#39;less than&#39; to &#39;greater than&#39;</p>\n",
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 644,
              description: "<p>Return the lowest key currently used in the Dictionary.</p>\n",
              itemtype: "method",
              name: "minKey",
              return: {
                description: "",
                type: "Number"
              },
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict({ 2: 4, 4: 6, 1.2: 3 });\n  var lowestKey = myDictionary.minKey(); // value is 1.2\n  print(lowestKey);\n}\n</code></div>\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/data/p5.TypedDict.js",
              line: 665,
              description: "<p>Return the highest key currently used in the Dictionary.</p>\n",
              itemtype: "method",
              name: "maxKey",
              return: {
                description: "",
                type: "Number"
              },
              example: ["\n<div class='norender'>\n<code>\nfunction setup() {\n  var myDictionary = createNumberDict({ 2: 4, 4: 6, 1.2: 3 });\n  var highestKey = myDictionary.maxKey(); // value is 4\n  print(highestKey);\n}\n</code></div>\n"],
              class: "p5.NumberDict",
              module: "Data",
              submodule: "Dictionary"
            }, {
              file: "src/events/acceleration.js",
              line: 12,
              description: "<p>The system variable deviceOrientation always contains the orientation of\nthe device. The value of this variable will either be set &#39;landscape&#39;\nor &#39;portrait&#39;. If no data is available it will be set to &#39;undefined&#39;.\neither LANDSCAPE or PORTRAIT.</p>\n",
              itemtype: "property",
              name: "deviceOrientation",
              type: "Constant",
              readonly: "",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 23,
              description: "<p>The system variable accelerationX always contains the acceleration of the\ndevice along the x axis. Value is represented as meters per second squared.</p>\n",
              itemtype: "property",
              name: "accelerationX",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\n// Move a touchscreen device to register\n// acceleration changes.\nfunction draw() {\n  background(220, 50);\n  fill('magenta');\n  ellipse(width / 2, height / 2, accelerationX);\n}\n</code>\n</div>"],
              alt: "Magnitude of device acceleration is displayed as ellipse size",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 46,
              description: "<p>The system variable accelerationY always contains the acceleration of the\ndevice along the y axis. Value is represented as meters per second squared.</p>\n",
              itemtype: "property",
              name: "accelerationY",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\n// Move a touchscreen device to register\n// acceleration changes.\nfunction draw() {\n  background(220, 50);\n  fill('magenta');\n  ellipse(width / 2, height / 2, accelerationY);\n}\n</code>\n</div>"],
              alt: "Magnitude of device acceleration is displayed as ellipse size",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 69,
              description: "<p>The system variable accelerationZ always contains the acceleration of the\ndevice along the z axis. Value is represented as meters per second squared.</p>\n",
              itemtype: "property",
              name: "accelerationZ",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\n// Move a touchscreen device to register\n// acceleration changes.\nfunction draw() {\n  background(220, 50);\n  fill('magenta');\n  ellipse(width / 2, height / 2, accelerationZ);\n}\n</code>\n</div>"],
              alt: "Magnitude of device acceleration is displayed as ellipse size",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 94,
              description: "<p>The system variable pAccelerationX always contains the acceleration of the\ndevice along the x axis in the frame previous to the current frame. Value\nis represented as meters per second squared.</p>\n",
              itemtype: "property",
              name: "pAccelerationX",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 104,
              description: "<p>The system variable pAccelerationY always contains the acceleration of the\ndevice along the y axis in the frame previous to the current frame. Value\nis represented as meters per second squared.</p>\n",
              itemtype: "property",
              name: "pAccelerationY",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 114,
              description: "<p>The system variable pAccelerationZ always contains the acceleration of the\ndevice along the z axis in the frame previous to the current frame. Value\nis represented as meters per second squared.</p>\n",
              itemtype: "property",
              name: "pAccelerationZ",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 135,
              description: "<p>The system variable rotationX always contains the rotation of the\ndevice along the x axis. Value is represented as 0 to +/-180 degrees.\n<br><br>\nNote: The order the rotations are called is important, ie. if used\ntogether, it must be called in the order Z-X-Y or there might be\nunexpected behaviour.</p>\n",
              itemtype: "property",
              name: "rotationX",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  //rotateZ(radians(rotationZ));\n  rotateX(radians(rotationX));\n  //rotateY(radians(rotationY));\n  box(200, 200, 200);\n}\n</code>\n</div>"],
              alt: "red horizontal line right, green vertical line bottom. black background.",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 166,
              description: "<p>The system variable rotationY always contains the rotation of the\ndevice along the y axis. Value is represented as 0 to +/-90 degrees.\n<br><br>\nNote: The order the rotations are called is important, ie. if used\ntogether, it must be called in the order Z-X-Y or there might be\nunexpected behaviour.</p>\n",
              itemtype: "property",
              name: "rotationY",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  //rotateZ(radians(rotationZ));\n  //rotateX(radians(rotationX));\n  rotateY(radians(rotationY));\n  box(200, 200, 200);\n}\n</code>\n</div>"],
              alt: "red horizontal line right, green vertical line bottom. black background.",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 197,
              description: "<p>The system variable rotationZ always contains the rotation of the\ndevice along the z axis. Value is represented as 0 to 359 degrees.\n<br><br>\nUnlike rotationX and rotationY, this variable is available for devices\nwith a built-in compass only.\n<br><br>\nNote: The order the rotations are called is important, ie. if used\ntogether, it must be called in the order Z-X-Y or there might be\nunexpected behaviour.</p>\n",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  rotateZ(radians(rotationZ));\n  //rotateX(radians(rotationX));\n  //rotateY(radians(rotationY));\n  box(200, 200, 200);\n}\n</code>\n</div>"],
              itemtype: "property",
              name: "rotationZ",
              type: "Number",
              readonly: "",
              alt: "red horizontal line right, green vertical line bottom. black background.",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 233,
              description: "<p>The system variable pRotationX always contains the rotation of the\ndevice along the x axis in the frame previous to the current frame. Value\nis represented as 0 to +/-180 degrees.\n<br><br>\npRotationX can also be used with rotationX to determine the rotate\ndirection of the device along the X-axis.</p>\n",
              example: ["\n<div class='norender'>\n<code>\n// A simple if statement looking at whether\n// rotationX - pRotationX < 0 is true or not will be\n// sufficient for determining the rotate direction\n// in most cases.\n\n// Some extra logic is needed to account for cases where\n// the angles wrap around.\nlet rotateDirection = 'clockwise';\n\n// Simple range conversion to make things simpler.\n// This is not absolutely necessary but the logic\n// will be different in that case.\n\nlet rX = rotationX + 180;\nlet pRX = pRotationX + 180;\n\nif ((rX - pRX > 0 && rX - pRX < 270) || rX - pRX < -270) {\n  rotateDirection = 'clockwise';\n} else if (rX - pRX < 0 || rX - pRX > 270) {\n  rotateDirection = 'counter-clockwise';\n}\n\nprint(rotateDirection);\n</code>\n</div>"],
              alt: "no image to display.",
              itemtype: "property",
              name: "pRotationX",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 278,
              description: "<p>The system variable pRotationY always contains the rotation of the\ndevice along the y axis in the frame previous to the current frame. Value\nis represented as 0 to +/-90 degrees.\n<br><br>\npRotationY can also be used with rotationY to determine the rotate\ndirection of the device along the Y-axis.</p>\n",
              example: ["\n<div class='norender'>\n<code>\n// A simple if statement looking at whether\n// rotationY - pRotationY < 0 is true or not will be\n// sufficient for determining the rotate direction\n// in most cases.\n\n// Some extra logic is needed to account for cases where\n// the angles wrap around.\nlet rotateDirection = 'clockwise';\n\n// Simple range conversion to make things simpler.\n// This is not absolutely necessary but the logic\n// will be different in that case.\n\nlet rY = rotationY + 180;\nlet pRY = pRotationY + 180;\n\nif ((rY - pRY > 0 && rY - pRY < 270) || rY - pRY < -270) {\n  rotateDirection = 'clockwise';\n} else if (rY - pRY < 0 || rY - pRY > 270) {\n  rotateDirection = 'counter-clockwise';\n}\nprint(rotateDirection);\n</code>\n</div>"],
              alt: "no image to display.",
              itemtype: "property",
              name: "pRotationY",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 322,
              description: "<p>The system variable pRotationZ always contains the rotation of the\ndevice along the z axis in the frame previous to the current frame. Value\nis represented as 0 to 359 degrees.\n<br><br>\npRotationZ can also be used with rotationZ to determine the rotate\ndirection of the device along the Z-axis.</p>\n",
              example: ["\n<div class='norender'>\n<code>\n// A simple if statement looking at whether\n// rotationZ - pRotationZ < 0 is true or not will be\n// sufficient for determining the rotate direction\n// in most cases.\n\n// Some extra logic is needed to account for cases where\n// the angles wrap around.\nlet rotateDirection = 'clockwise';\n\nif (\n  (rotationZ - pRotationZ > 0 && rotationZ - pRotationZ < 270) ||\n  rotationZ - pRotationZ < -270\n) {\n  rotateDirection = 'clockwise';\n} else if (rotationZ - pRotationZ < 0 || rotationZ - pRotationZ > 270) {\n  rotateDirection = 'counter-clockwise';\n}\nprint(rotateDirection);\n</code>\n</div>"],
              alt: "no image to display.",
              itemtype: "property",
              name: "pRotationZ",
              type: "Number",
              readonly: "",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 380,
              description: '<p>When a device is rotated, the axis that triggers the <a href="#/p5/deviceTurned">deviceTurned()</a>\nmethod is stored in the turnAxis variable. The turnAxis variable is only defined within\nthe scope of deviceTurned().</p>\n',
              itemtype: "property",
              name: "turnAxis",
              type: "String",
              readonly: "",
              example: ["\n<div>\n<code>\n// Run this example on a mobile device\n// Rotate the device by 90 degrees in the\n// X-axis to change the value.\n\nvar value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction deviceTurned() {\n  if (turnAxis === 'X') {\n    if (value === 0) {\n      value = 255;\n    } else if (value === 255) {\n      value = 0;\n    }\n  }\n}\n</code>\n</div>"],
              alt: "50x50 black rect in center of canvas. turns white on mobile when device turns\n50x50 black rect in center of canvas. turns white on mobile when x-axis turns",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 419,
              description: '<p>The <a href="#/p5/setMoveThreshold">setMoveThreshold()</a> function is used to set the movement threshold for\nthe <a href="#/p5/deviceMoved">deviceMoved()</a> function. The default threshold is set to 0.5.</p>\n',
              itemtype: "method",
              name: "setMoveThreshold",
              params: [{
                name: "value",
                description: "<p>The threshold value</p>\n",
                type: "Number"
              }],
              example: ['\n<div class="norender">\n<code>\n// Run this example on a mobile device\n// You will need to move the device incrementally further\n// the closer the square\'s color gets to white in order to change the value.\n\nlet value = 0;\nlet threshold = 0.5;\nfunction setup() {\n  setMoveThreshold(threshold);\n}\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction deviceMoved() {\n  value = value + 5;\n  threshold = threshold + 0.1;\n  if (value > 255) {\n    value = 0;\n    threshold = 30;\n  }\n  setMoveThreshold(threshold);\n}\n</code>\n</div>'],
              alt: "50x50 black rect in center of canvas. turns white on mobile when device moves",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 462,
              description: '<p>The <a href="#/p5/setShakeThreshold">setShakeThreshold()</a> function is used to set the movement threshold for\nthe <a href="#/p5/deviceShaken">deviceShaken()</a> function. The default threshold is set to 30.</p>\n',
              itemtype: "method",
              name: "setShakeThreshold",
              params: [{
                name: "value",
                description: "<p>The threshold value</p>\n",
                type: "Number"
              }],
              example: ['\n<div class="norender">\n<code>\n// Run this example on a mobile device\n// You will need to shake the device more firmly\n// the closer the box\'s fill gets to white in order to change the value.\n\nlet value = 0;\nlet threshold = 30;\nfunction setup() {\n  setShakeThreshold(threshold);\n}\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction deviceMoved() {\n  value = value + 5;\n  threshold = threshold + 5;\n  if (value > 255) {\n    value = 0;\n    threshold = 30;\n  }\n  setShakeThreshold(threshold);\n}\n</code>\n</div>'],
              alt: "50x50 black rect in center of canvas. turns white on mobile when device\nis being shaked",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 506,
              description: '<p>The <a href="#/p5/deviceMoved">deviceMoved()</a> function is called when the device is moved by more than\nthe threshold value along X, Y or Z axis. The default threshold is set to 0.5.\nThe threshold value can be changed using <a href="https://p5js.org/reference/#/p5/setMoveThreshold">setMoveThreshold()</a>.</p>\n',
              itemtype: "method",
              name: "deviceMoved",
              example: ['\n<div class="norender">\n<code>\n// Run this example on a mobile device\n// Move the device around\n// to change the value.\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction deviceMoved() {\n  value = value + 5;\n  if (value > 255) {\n    value = 0;\n  }\n}\n</code>\n</div>'],
              alt: "50x50 black rect in center of canvas. turns white on mobile when device moves",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 538,
              description: '<p>The <a href="#/p5/deviceTurned">deviceTurned()</a> function is called when the device rotates by\nmore than 90 degrees continuously.\n<br><br>\nThe axis that triggers the <a href="#/p5/deviceTurned">deviceTurned()</a> method is stored in the turnAxis\nvariable. The <a href="#/p5/deviceTurned">deviceTurned()</a> method can be locked to trigger on any axis:\nX, Y or Z by comparing the turnAxis variable to &#39;X&#39;, &#39;Y&#39; or &#39;Z&#39;.</p>\n',
              itemtype: "method",
              name: "deviceTurned",
              example: ["\n<div class=\"norender\">\n<code>\n// Run this example on a mobile device\n// Rotate the device by 90 degrees\n// to change the value.\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction deviceTurned() {\n  if (value === 0) {\n    value = 255;\n  } else if (value === 255) {\n    value = 0;\n  }\n}\n</code>\n</div>\n<div>\n<code>\n// Run this example on a mobile device\n// Rotate the device by 90 degrees in the\n// X-axis to change the value.\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction deviceTurned() {\n  if (turnAxis === 'X') {\n    if (value === 0) {\n      value = 255;\n    } else if (value === 255) {\n      value = 0;\n    }\n  }\n}\n</code>\n</div>"],
              alt: "50x50 black rect in center of canvas. turns white on mobile when device turns\n50x50 black rect in center of canvas. turns white on mobile when x-axis turns",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/acceleration.js",
              line: 597,
              description: '<p>The <a href="#/p5/deviceShaken">deviceShaken()</a> function is called when the device total acceleration\nchanges of accelerationX and accelerationY values is more than\nthe threshold value. The default threshold is set to 30.\nThe threshold value can be changed using <a href="https://p5js.org/reference/#/p5/setShakeThreshold">setShakeThreshold()</a>.</p>\n',
              itemtype: "method",
              name: "deviceShaken",
              example: ['\n<div class="norender">\n<code>\n// Run this example on a mobile device\n// Shake the device to change the value.\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction deviceShaken() {\n  value = value + 5;\n  if (value > 255) {\n    value = 0;\n  }\n}\n</code>\n</div>'],
              alt: "50x50 black rect in center of canvas. turns white on mobile when device shakes",
              class: "p5",
              module: "Events",
              submodule: "Acceleration"
            }, {
              file: "src/events/keyboard.js",
              line: 18,
              description: '<p>The boolean system variable <a href="#/p5/keyIsPressed">keyIsPressed</a> is true if any key is pressed\nand false if no keys are pressed.</p>\n',
              itemtype: "property",
              name: "keyIsPressed",
              type: "Boolean",
              readonly: "",
              example: ["\n<div>\n<code>\nfunction draw() {\n  if (keyIsPressed === true) {\n    fill(0);\n  } else {\n    fill(255);\n  }\n  rect(25, 25, 50, 50);\n}\n</code>\n</div>"],
              alt: "50x50 white rect that turns black on keypress.",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/keyboard.js",
              line: 45,
              description: '<p>The system variable key always contains the value of the most recent\nkey on the keyboard that was typed. To get the proper capitalization, it\nis best to use it within <a href="#/p5/keyTyped">keyTyped()</a>. For non-ASCII keys, use the <a href="#/p5/keyCode">keyCode</a>\nvariable.</p>\n',
              itemtype: "property",
              name: "key",
              type: "String",
              readonly: "",
              example: ["\n<div><code>\n// Click any key to display it!\n// (Not Guaranteed to be Case Sensitive)\nfunction setup() {\n  fill(245, 123, 158);\n  textSize(50);\n}\n\nfunction draw() {\n  background(200);\n  text(key, 33, 65); // Display last key pressed.\n}\n</code></div>"],
              alt: "canvas displays any key value that is pressed in pink font.",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/keyboard.js",
              line: 74,
              description: '<p>The variable keyCode is used to detect special keys such as BACKSPACE,\nDELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL, OPTION, ALT, UP_ARROW,\nDOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\nYou can also check for custom keys by looking up the keyCode of any key\non a site like this: <a href="http://keycode.info/">keycode.info</a>.</p>\n',
              itemtype: "property",
              name: "keyCode",
              type: "Integer",
              readonly: "",
              example: ["\n<div><code>\nlet fillVal = 126;\nfunction draw() {\n  fill(fillVal);\n  rect(25, 25, 50, 50);\n}\n\nfunction keyPressed() {\n  if (keyCode === UP_ARROW) {\n    fillVal = 255;\n  } else if (keyCode === DOWN_ARROW) {\n    fillVal = 0;\n  }\n  return false; // prevent default\n}\n</code></div>"],
              alt: "Grey rect center. turns white when up arrow pressed and black when down",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/keyboard.js",
              line: 107,
              description: '<p>The <a href="#/p5/keyPressed">keyPressed()</a> function is called once every time a key is pressed. The\nkeyCode for the key that was pressed is stored in the <a href="#/p5/keyCode">keyCode</a> variable.\n<br><br>\nFor non-ASCII keys, use the keyCode variable. You can check if the keyCode\nequals BACKSPACE, DELETE, ENTER, RETURN, TAB, ESCAPE, SHIFT, CONTROL,\nOPTION, ALT, UP_ARROW, DOWN_ARROW, LEFT_ARROW, RIGHT_ARROW.\n<br><br>\nFor ASCII keys, the key that was pressed is stored in the key variable. However, it\ndoes not distinguish between uppercase and lowercase. For this reason, it\nis recommended to use <a href="#/p5/keyTyped">keyTyped()</a> to read the key variable, in which the\ncase of the variable will be distinguished.\n<br><br>\nBecause of how operating systems handle key repeats, holding down a key\nmay cause multiple calls to <a href="#/p5/keyTyped">keyTyped()</a> (and <a href="#/p5/keyReleased">keyReleased()</a> as well). The\nrate of repeat is set by the operating system and how each computer is\nconfigured.<br><br>\nBrowsers may have different default\nbehaviors attached to various key events. To prevent any default\nbehavior for this event, add &quot;return false&quot; to the end of the method.</p>\n',
              itemtype: "method",
              name: "keyPressed",
              example: ['\n<div>\n<code>\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction keyPressed() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n}\n</code>\n</div>\n<div>\n<code>\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction keyPressed() {\n  if (keyCode === LEFT_ARROW) {\n    value = 255;\n  } else if (keyCode === RIGHT_ARROW) {\n    value = 0;\n  }\n}\n</code>\n</div>\n<div class="norender">\n<code>\nfunction keyPressed() {\n  // Do something\n  return false; // prevent any default behaviour\n}\n</code>\n</div>'],
              alt: "black rect center. turns white when key pressed and black when released\nblack rect center. turns white when left arrow pressed and black when right.",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/keyboard.js",
              line: 194,
              description: '<p>The <a href="#/p5/keyReleased">keyReleased()</a> function is called once every time a key is released.\nSee <a href="#/p5/key">key</a> and <a href="#/p5/keyCode">keyCode</a> for more information.<br><br>\nBrowsers may have different default\nbehaviors attached to various key events. To prevent any default\nbehavior for this event, add &quot;return false&quot; to the end of the method.</p>\n',
              itemtype: "method",
              name: "keyReleased",
              example: ["\n<div>\n<code>\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction keyReleased() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n  return false; // prevent any default behavior\n}\n</code>\n</div>"],
              alt: "black rect center. turns white when key pressed and black when pressed again",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/keyboard.js",
              line: 246,
              description: '<p>The <a href="#/p5/keyTyped">keyTyped()</a> function is called once every time a key is pressed, but\naction keys such as Ctrl, Shift, and Alt are ignored. The most recent\nkey pressed will be stored in the key variable.\n<br><br>\nBecause of how operating systems handle key repeats, holding down a key\nwill cause multiple calls to <a href="#/p5/keyTyped">keyTyped()</a> (and <a href="#/p5/keyReleased">keyReleased()</a> as well). The\nrate of repeat is set by the operating system and how each computer is\nconfigured.<br><br>\nBrowsers may have different default behaviors attached to various key\nevents. To prevent any default behavior for this event, add &quot;return false&quot;\nto the end of the method.</p>\n',
              itemtype: "method",
              name: "keyTyped",
              example: ["\n<div>\n<code>\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction keyTyped() {\n  if (key === 'a') {\n    value = 255;\n  } else if (key === 'b') {\n    value = 0;\n  }\n  // uncomment to prevent any default behavior\n  // return false;\n}\n</code>\n</div>"],
              alt: "black rect center. turns white when 'a' key typed and black when 'b' pressed",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/keyboard.js",
              line: 300,
              description: "<p>The onblur function is called when the user is no longer focused\non the p5 element. Because the keyup events will not fire if the user is\nnot focused on the element we must assume all keys currently down have\nbeen released.</p>\n",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/keyboard.js",
              line: 310,
              description: '<p>The <a href="#/p5/keyIsDown">keyIsDown()</a> function checks if the key is currently down, i.e. pressed.\nIt can be used if you have an object that moves, and you want several keys\nto be able to affect its behaviour simultaneously, such as moving a\nsprite diagonally. You can put in any number representing the keyCode of\nthe key, or use any of the variable <a href="#/p5/keyCode">keyCode</a> names listed\n<a href="http://p5js.org/reference/#p5/keyCode">here</a>.</p>\n',
              itemtype: "method",
              name: "keyIsDown",
              params: [{
                name: "code",
                description: "<p>The key to check for.</p>\n",
                type: "Number"
              }],
              return: {
                description: "whether key is down or not",
                type: "Boolean"
              },
              example: ['\n<div><code>\nlet x = 100;\nlet y = 100;\n\nfunction setup() {\n  createCanvas(512, 512);\n}\n\nfunction draw() {\n  if (keyIsDown(LEFT_ARROW)) {\n    x -= 5;\n  }\n\n  if (keyIsDown(RIGHT_ARROW)) {\n    x += 5;\n  }\n\n  if (keyIsDown(UP_ARROW)) {\n    y -= 5;\n  }\n\n  if (keyIsDown(DOWN_ARROW)) {\n    y += 5;\n  }\n\n  clear();\n  fill(255, 0, 0);\n  ellipse(x, y, 50, 50);\n}\n</code></div>\n\n<div><code>\nlet diameter = 50;\n\nfunction setup() {\n  createCanvas(512, 512);\n}\n\nfunction draw() {\n  // 107 and 187 are keyCodes for "+"\n  if (keyIsDown(107) || keyIsDown(187)) {\n    diameter += 1;\n  }\n\n  // 109 and 189 are keyCodes for "-"\n  if (keyIsDown(109) || keyIsDown(189)) {\n    diameter -= 1;\n  }\n\n  clear();\n  fill(255, 0, 0);\n  ellipse(50, 50, diameter, diameter);\n}\n</code></div>'],
              alt: "50x50 red ellipse moves left, right, up and down with arrow presses.\n50x50 red ellipse gets bigger or smaller when + or - are pressed.",
              class: "p5",
              module: "Events",
              submodule: "Keyboard"
            }, {
              file: "src/events/mouse.js",
              line: 22,
              description: "<p>The system variable mouseX always contains the current horizontal\nposition of the mouse, relative to (0, 0) of the canvas. If touch is\nused instead of mouse input, mouseX will hold the x value of the most\nrecent touch point.</p>\n",
              itemtype: "property",
              name: "mouseX",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\n// Move the mouse across the canvas\nfunction draw() {\n  background(244, 248, 252);\n  line(mouseX, 0, mouseX, 100);\n}\n</code>\n</div>"],
              alt: "horizontal black line moves left and right with mouse x-position",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 48,
              description: "<p>The system variable mouseY always contains the current vertical position\nof the mouse, relative to (0, 0) of the canvas. If touch is\nused instead of mouse input, mouseY will hold the y value of the most\nrecent touch point.</p>\n",
              itemtype: "property",
              name: "mouseY",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\n// Move the mouse across the canvas\nfunction draw() {\n  background(244, 248, 252);\n  line(0, mouseY, 100, mouseY);\n}\n</code>\n</div>"],
              alt: "vertical black line moves up and down with mouse y-position",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 74,
              description: "<p>The system variable pmouseX always contains the horizontal position of\nthe mouse or finger in the frame previous to the current frame, relative to\n(0, 0) of the canvas. Note: pmouseX will be reset to the current mouseX\nvalue at the start of each touch event.</p>\n",
              itemtype: "property",
              name: "pmouseX",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\n// Move the mouse across the canvas to leave a trail\nfunction setup() {\n  //slow down the frameRate to make it more visible\n  frameRate(10);\n}\n\nfunction draw() {\n  background(244, 248, 252);\n  line(mouseX, mouseY, pmouseX, pmouseY);\n  print(pmouseX + ' -> ' + mouseX);\n}\n</code>\n</div>"],
              alt: "line trail is created from cursor movements. faster movement make longer line.",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 106,
              description: "<p>The system variable pmouseY always contains the vertical position of the\nmouse or finger in the frame previous to the current frame, relative to\n(0, 0) of the canvas. Note: pmouseY will be reset to the current mouseY\nvalue at the start of each touch event.</p>\n",
              itemtype: "property",
              name: "pmouseY",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\nfunction draw() {\n  background(237, 34, 93);\n  fill(0);\n  //draw a square only if the mouse is not moving\n  if (mouseY === pmouseY && mouseX === pmouseX) {\n    rect(20, 20, 60, 60);\n  }\n\n  print(pmouseY + ' -> ' + mouseY);\n}\n</code>\n</div>"],
              alt: "60x60 black rect center, fuschia background. rect flickers on mouse movement",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 137,
              description: "<p>The system variable winMouseX always contains the current horizontal\nposition of the mouse, relative to (0, 0) of the window.</p>\n",
              itemtype: "property",
              name: "winMouseX",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\nlet myCanvas;\n\nfunction setup() {\n  //use a variable to store a pointer to the canvas\n  myCanvas = createCanvas(100, 100);\n}\n\nfunction draw() {\n  background(237, 34, 93);\n  fill(0);\n\n  //move the canvas to the horizontal mouse position\n  //rela                    tive to the window\n  myCanvas.position(winMouseX + 1, windowHeight / 2);\n\n  //the y of the square is relative to the canvas\n  rect(20, mouseY, 60, 60);\n}\n</code>\n</div>"],
              alt: "60x60 black rect y moves with mouse y and fuschia canvas moves with mouse x",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 174,
              description: "<p>The system variable winMouseY always contains the current vertical\nposition of the mouse, relative to (0, 0) of the window.</p>\n",
              itemtype: "property",
              name: "winMouseY",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\nlet myCanvas;\n\nfunction setup() {\n  //use a variable to store a pointer to the canvas\n  myCanvas = createCanvas(100, 100);\n}\n\nfunction draw() {\n  background(237, 34, 93);\n  fill(0);\n\n  //move the canvas to the vertical mouse position\n  //rel                    ative to the window\n  myCanvas.position(windowWidth / 2, winMouseY + 1);\n\n  //the x of the square is relative to the canvas\n  rect(mouseX, 20, 60, 60);\n}\n</code>\n</div>"],
              alt: "60x60 black rect x moves with mouse x and fuschia canvas y moves with mouse y",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 211,
              description: "<p>The system variable pwinMouseX always contains the horizontal position\nof the mouse in the frame previous to the current frame, relative to\n(0, 0) of the window. Note: pwinMouseX will be reset to the current winMouseX\nvalue at the start of each touch event.</p>\n",
              itemtype: "property",
              name: "pwinMouseX",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\nlet myCanvas;\n\nfunction setup() {\n  //use a variable to store a pointer to the canvas\n  myCanvas = createCanvas(100, 100);\n  noStroke();\n  fill(237, 34, 93);\n}\n\nfunction draw() {\n  clear();\n  //the difference between previous and\n  //current x position is the horizontal mouse speed\n  let speed = abs(winMouseX - pwinMouseX);\n  //change the size of the circle\n  //according to the horizontal speed\n  ellipse(50, 50, 10 + speed * 5, 10 + speed * 5);\n  //move the canvas to the mouse position\n  myCanvas.position(winMouseX + 1, winMouseY + 1);\n}\n</code>\n</div>"],
              alt: "fuschia ellipse moves with mouse x and y. Grows and shrinks with mouse speed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 252,
              description: "<p>The system variable pwinMouseY always contains the vertical position of\nthe mouse in the frame previous to the current frame, relative to (0, 0)\nof the window. Note: pwinMouseY will be reset to the current winMouseY\nvalue at the start of each touch event.</p>\n",
              itemtype: "property",
              name: "pwinMouseY",
              type: "Number",
              readonly: "",
              example: ["\n<div>\n<code>\nlet myCanvas;\n\nfunction setup() {\n  //use a variable to store a pointer to the canvas\n  myCanvas = createCanvas(100, 100);\n  noStroke();\n  fill(237, 34, 93);\n}\n\nfunction draw() {\n  clear();\n  //the difference between previous and\n  //current y position is the vertical mouse speed\n  let speed = abs(winMouseY - pwinMouseY);\n  //change the size of the circle\n  //according to the vertical speed\n  ellipse(50, 50, 10 + speed * 5, 10 + speed * 5);\n  //move the canvas to the mouse position\n  myCanvas.position(winMouseX + 1, winMouseY + 1);\n}\n</code>\n</div>"],
              alt: "fuschia ellipse moves with mouse x and y. Grows and shrinks with mouse speed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 294,
              description: "<p>Processing automatically tracks if the mouse button is pressed and which\nbutton is pressed. The value of the system variable mouseButton is either\nLEFT, RIGHT, or CENTER depending on which button was pressed last.\nWarning: different browsers may track mouseButton differently.</p>\n",
              itemtype: "property",
              name: "mouseButton",
              type: "Constant",
              readonly: "",
              example: ["\n<div>\n<code>\nfunction draw() {\n  background(237, 34, 93);\n  fill(0);\n\n  if (mouseIsPressed) {\n    if (mouseButton === LEFT) {\n      ellipse(50, 50, 50, 50);\n    }\n    if (mouseButton === RIGHT) {\n      rect(25, 25, 50, 50);\n    }\n    if (mouseButton === CENTER) {\n      triangle(23, 75, 50, 20, 78, 75);\n    }\n  }\n\n  print(mouseButton);\n}\n</code>\n</div>"],
              alt: "50x50 black ellipse appears on center of fuschia canvas on mouse click/press.",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 333,
              description: "<p>The boolean system variable mouseIsPressed is true if the mouse is pressed\nand false if not.</p>\n",
              itemtype: "property",
              name: "mouseIsPressed",
              type: "Boolean",
              readonly: "",
              example: ["\n<div>\n<code>\nfunction draw() {\n  background(237, 34, 93);\n  fill(0);\n\n  if (mouseIsPressed) {\n    ellipse(50, 50, 50, 50);\n  } else {\n    rect(25, 25, 50, 50);\n  }\n\n  print(mouseIsPressed);\n}\n</code>\n</div>"],
              alt: "black 50x50 rect becomes ellipse with mouse click/press. fuschia background.",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 424,
              description: '<p>The <a href="#/p5/mouseMoved">mouseMoved()</a> function is called every time the mouse moves and a mouse\nbutton is not pressed.<br><br>\nBrowsers may have different default\nbehaviors attached to various mouse events. To prevent any default\nbehavior for this event, add &quot;return false&quot; to the end of the method.</p>\n',
              itemtype: "method",
              name: "mouseMoved",
              params: [{
                name: "event",
                description: "<p>optional MouseEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Move the mouse across the page\n// to change its value\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction mouseMoved() {\n  value = value + 5;\n  if (value > 255) {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction mouseMoved() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a MouseEvent object\n// as a callback argument\nfunction mouseMoved(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "black 50x50 rect becomes lighter with mouse movements until white then resets\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 479,
              description: '<p>The <a href="#/p5/mouseDragged">mouseDragged()</a> function is called once every time the mouse moves and\na mouse button is pressed. If no <a href="#/p5/mouseDragged">mouseDragged()</a> function is defined, the\n<a href="#/p5/touchMoved">touchMoved()</a> function will be called instead if it is defined.<br><br>\nBrowsers may have different default\nbehaviors attached to various mouse events. To prevent any default\nbehavior for this event, add &quot;return false&quot; to the end of the method.</p>\n',
              itemtype: "method",
              name: "mouseDragged",
              params: [{
                name: "event",
                description: "<p>optional MouseEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Drag the mouse across the page\n// to change its value\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction mouseDragged() {\n  value = value + 5;\n  if (value > 255) {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction mouseDragged() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a MouseEvent object\n// as a callback argument\nfunction mouseDragged(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "black 50x50 rect turns lighter with mouse click and drag until white, resets\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 560,
              description: '<p>The <a href="#/p5/mousePressed">mousePressed()</a> function is called once after every time a mouse button\nis pressed. The mouseButton variable (see the related reference entry)\ncan be used to determine which button has been pressed. If no\n<a href="#/p5/mousePressed">mousePressed()</a> function is defined, the <a href="#/p5/touchStarted">touchStarted()</a> function will be\ncalled instead if it is defined.<br><br>\nBrowsers may have different default\nbehaviors attached to various mouse events. To prevent any default\nbehavior for this event, add &quot;return false&quot; to the end of the method.</p>\n',
              itemtype: "method",
              name: "mousePressed",
              params: [{
                name: "event",
                description: "<p>optional MouseEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Click within the image to change\n// the value of the rectangle\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction mousePressed() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction mousePressed() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a MouseEvent object\n// as a callback argument\nfunction mousePressed(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "black 50x50 rect turns white with mouse click/press.\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 637,
              description: '<p>The <a href="#/p5/mouseReleased">mouseReleased()</a> function is called every time a mouse button is\nreleased. If no <a href="#/p5/mouseReleased">mouseReleased()</a> function is defined, the <a href="#/p5/touchEnded">touchEnded()</a>\nfunction will be called instead if it is defined.<br><br>\nBrowsers may have different default\nbehaviors attached to various mouse events. To prevent any default\nbehavior for this event, add &quot;return false&quot; to the end of the method.</p>\n',
              itemtype: "method",
              name: "mouseReleased",
              params: [{
                name: "event",
                description: "<p>optional MouseEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Click within the image to change\n// the value of the rectangle\n// after the mouse has been clicked\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction mouseReleased() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction mouseReleased() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a MouseEvent object\n// as a callback argument\nfunction mouseReleased(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "black 50x50 rect turns white with mouse click/press.\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 715,
              description: '<p>The <a href="#/p5/mouseClicked">mouseClicked()</a> function is called once after a mouse button has been\npressed and then released.<br><br>\nBrowsers handle clicks differently, so this function is only guaranteed to be\nrun when the left mouse button is clicked. To handle other mouse buttons\nbeing pressed or released, see <a href="#/p5/mousePressed">mousePressed()</a> or <a href="#/p5/mouseReleased">mouseReleased()</a>.<br><br>\nBrowsers may have different default\nbehaviors attached to various mouse events. To prevent any default\nbehavior for this event, add &quot;return false&quot; to the end of the method.</p>\n',
              itemtype: "method",
              name: "mouseClicked",
              params: [{
                name: "event",
                description: "<p>optional MouseEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Click within the image to change\n// the value of the rectangle\n// after the mouse has been clicked\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\n\nfunction mouseClicked() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction mouseClicked() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a MouseEvent object\n// as a callback argument\nfunction mouseClicked(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "black 50x50 rect turns white with mouse click/press.\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 785,
              description: '<p>The <a href="#/p5/doubleClicked">doubleClicked()</a> function is executed every time a event\nlistener has detected a dblclick event which is a part of the\nDOM L3 specification. The doubleClicked event is fired when a\npointing device button (usually a mouse&#39;s primary button)\nis clicked twice on a single element. For more info on the\ndblclick event refer to mozilla&#39;s documentation here:\n<a href="https://developer.mozilla.org/en-US/docs/Web/Events/dblclick">https://developer.mozilla.org/en-US/docs/Web/Events/dblclick</a></p>\n',
              itemtype: "method",
              name: "doubleClicked",
              params: [{
                name: "event",
                description: "<p>optional MouseEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Click within the image to change\n// the value of the rectangle\n// after the mouse has been double clicked\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\n\nfunction doubleClicked() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction doubleClicked() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a MouseEvent object\n// as a callback argument\nfunction doubleClicked(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "black 50x50 rect turns white with mouse doubleClick/press.\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/mouse.js",
              line: 870,
              description: '<p>The function <a href="#/p5/mouseWheel">mouseWheel()</a> is executed every time a vertical mouse wheel\nevent is detected either triggered by an actual mouse wheel or by a\ntouchpad.<br><br>\nThe event.delta property returns the amount the mouse wheel\nhave scrolled. The values can be positive or negative depending on the\nscroll direction (on OS X with &quot;natural&quot; scrolling enabled, the signs\nare inverted).<br><br>\nBrowsers may have different default behaviors attached to various\nmouse events. To prevent any default behavior for this event, add\n&quot;return false&quot; to the end of the method.<br><br>\nDue to the current support of the &quot;wheel&quot; event on Safari, the function\nmay only work as expected if &quot;return false&quot; is included while using Safari.</p>\n',
              itemtype: "method",
              name: "mouseWheel",
              params: [{
                name: "event",
                description: "<p>optional WheelEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ["\n<div>\n<code>\nlet pos = 25;\n\nfunction draw() {\n  background(237, 34, 93);\n  fill(0);\n  rect(25, pos, 50, 50);\n}\n\nfunction mouseWheel(event) {\n  print(event.delta);\n  //move the square according to the vertical scroll amount\n  pos += event.delta;\n  //uncomment to block page scrolling\n  //return false;\n}\n</code>\n</div>"],
              alt: "black 50x50 rect moves up and down with vertical scroll. fuschia background",
              class: "p5",
              module: "Events",
              submodule: "Mouse"
            }, {
              file: "src/events/touch.js",
              line: 12,
              description: "<p>The system variable touches[] contains an array of the positions of all\ncurrent touch points, relative to (0, 0) of the canvas, and IDs identifying a\nunique touch as it moves. Each element in the array is an object with x, y,\nand id properties.</p>\n<p>The touches[] array is not supported on Safari and IE on touch-based\ndesktops (laptops).</p>\n",
              itemtype: "property",
              name: "touches",
              type: "Object[]",
              readonly: "",
              example: ["\n<div>\n<code>\n// On a touchscreen device, touch\n// the canvas using one or more fingers\n// at the same time\nfunction draw() {\n  clear();\n  let display = touches.length + ' touches';\n  text(display, 5, 10);\n}\n</code>\n</div>"],
              alt: "Number of touches currently registered are displayed on the canvas",
              class: "p5",
              module: "Events",
              submodule: "Touch"
            }, {
              file: "src/events/touch.js",
              line: 74,
              description: '<p>The touchStarted() function is called once after every time a touch is\nregistered. If no <a href="#/p5/touchStarted">touchStarted()</a> function is defined, the <a href="#/p5/mousePressed">mousePressed()</a>\nfunction will be called instead if it is defined.<br><br>\nBrowsers may have different default behaviors attached to various touch\nevents. To prevent any default behavior for this event, add &quot;return false&quot;\nto the end of the method.</p>\n',
              itemtype: "method",
              name: "touchStarted",
              params: [{
                name: "event",
                description: "<p>optional TouchEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Touch within the image to change\n// the value of the rectangle\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction touchStarted() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction touchStarted() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a TouchEvent object\n// as a callback argument\nfunction touchStarted(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "50x50 black rect turns white with touch event.\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Touch"
            }, {
              file: "src/events/touch.js",
              line: 149,
              description: '<p>The <a href="#/p5/touchMoved">touchMoved()</a> function is called every time a touch move is registered.\nIf no <a href="#/p5/touchMoved">touchMoved()</a> function is defined, the <a href="#/p5/mouseDragged">mouseDragged()</a> function will\nbe called instead if it is defined.<br><br>\nBrowsers may have different default behaviors attached to various touch\nevents. To prevent any default behavior for this event, add &quot;return false&quot;\nto the end of the method.</p>\n',
              itemtype: "method",
              name: "touchMoved",
              params: [{
                name: "event",
                description: "<p>optional TouchEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Move your finger across the page\n// to change its value\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction touchMoved() {\n  value = value + 5;\n  if (value > 255) {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction touchMoved() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a TouchEvent object\n// as a callback argument\nfunction touchMoved(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "50x50 black rect turns lighter with touch until white. resets\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Touch"
            }, {
              file: "src/events/touch.js",
              line: 222,
              description: '<p>The <a href="#/p5/touchEnded">touchEnded()</a> function is called every time a touch ends. If no\n<a href="#/p5/touchEnded">touchEnded()</a> function is defined, the <a href="#/p5/mouseReleased">mouseReleased()</a> function will be\ncalled instead if it is defined.<br><br>\nBrowsers may have different default behaviors attached to various touch\nevents. To prevent any default behavior for this event, add &quot;return false&quot;\nto the end of the method.</p>\n',
              itemtype: "method",
              name: "touchEnded",
              params: [{
                name: "event",
                description: "<p>optional TouchEvent callback argument.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ['\n<div>\n<code>\n// Release touch within the image to\n// change the value of the rectangle\n\nlet value = 0;\nfunction draw() {\n  fill(value);\n  rect(25, 25, 50, 50);\n}\nfunction touchEnded() {\n  if (value === 0) {\n    value = 255;\n  } else {\n    value = 0;\n  }\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nfunction touchEnded() {\n  ellipse(mouseX, mouseY, 5, 5);\n  // prevent default\n  return false;\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\n// returns a TouchEvent object\n// as a callback argument\nfunction touchEnded(event) {\n  console.log(event);\n}\n</code>\n</div>'],
              alt: "50x50 black rect turns white with touch.\nno image displayed",
              class: "p5",
              module: "Events",
              submodule: "Touch"
            }, {
              file: "src/image/filters.js",
              line: 3,
              description: '<p>This module defines the filters for use with image buffers.</p>\n<p>This module is basically a collection of functions stored in an object\nas opposed to modules. The functions are destructive, modifying\nthe passed in canvas rather than creating a copy.</p>\n<p>Generally speaking users of this module will use the Filters.apply method\non a canvas to create an effect.</p>\n<p>A number of functions are borrowed/adapted from\n<a href="http://www.html5rocks.com/en/tutorials/canvas/imagefilters/">http://www.html5rocks.com/en/tutorials/canvas/imagefilters/</a>\nor the java processing implementation.</p>\n',
              class: "p5",
              module: "Events"
            }, {
              file: "src/image/image.js",
              line: 8,
              description: '<p>This module defines the p5 methods for the <a href="#/p5.Image">p5.Image</a> class\nfor drawing images to the main display canvas.</p>\n',
              class: "p5",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/image.js",
              line: 22,
              description: '<p>Creates a new <a href="#/p5.Image">p5.Image</a> (the datatype for storing images). This provides a\nfresh buffer of pixels to play with. Set the size of the buffer with the\nwidth and height parameters.\n<br><br>\n.<a href="#/p5.Image/pixels">pixels</a> gives access to an array containing the values for all the pixels\nin the display window.\nThese values are numbers. This array is the size (including an appropriate\nfactor for the <a href="#/p5/pixelDensity">pixelDensity</a>) of the display window x4,\nrepresenting the R, G, B, A values in order for each pixel, moving from\nleft to right across each row, then down each column. See .<a href="#/p5.Image/pixels">pixels</a> for\nmore info. It may also be simpler to use <a href="#/p5.Image/set">set()</a> or <a href="#/p5.Image/get">get()</a>.\n<br><br>\nBefore accessing the pixels of an image, the data must loaded with the\n<a href="#/p5.Image/loadPixels">loadPixels()</a> function. After the array data has been modified, the\n<a href="#/p5.Image/updatePixels">updatePixels()</a> function must be run to update the changes.</p>\n',
              itemtype: "method",
              name: "createImage",
              params: [{
                name: "width",
                description: "<p>width in pixels</p>\n",
                type: "Integer"
              }, {
                name: "height",
                description: "<p>height in pixels</p>\n",
                type: "Integer"
              }],
              return: {
                description: 'the <a href="#/p5.Image">p5.Image</a> object',
                type: "p5.Image"
              },
              example: ["\n<div>\n<code>\nlet img = createImage(66, 66);\nimg.loadPixels();\nfor (let i = 0; i < img.width; i++) {\n  for (let j = 0; j < img.height; j++) {\n    img.set(i, j, color(0, 90, 102));\n  }\n}\nimg.updatePixels();\nimage(img, 17, 17);\n</code>\n</div>\n\n<div>\n<code>\nlet img = createImage(66, 66);\nimg.loadPixels();\nfor (let i = 0; i < img.width; i++) {\n  for (let j = 0; j < img.height; j++) {\n    img.set(i, j, color(0, 90, 102, (i % img.width) * 2));\n  }\n}\nimg.updatePixels();\nimage(img, 17, 17);\nimage(img, 34, 34);\n</code>\n</div>\n\n<div>\n<code>\nlet pink = color(255, 102, 204);\nlet img = createImage(66, 66);\nimg.loadPixels();\nlet d = pixelDensity();\nlet halfImage = 4 * (img.width * d) * (img.height / 2 * d);\nfor (let i = 0; i < halfImage; i += 4) {\n  img.pixels[i] = red(pink);\n  img.pixels[i + 1] = green(pink);\n  img.pixels[i + 2] = blue(pink);\n  img.pixels[i + 3] = alpha(pink);\n}\nimg.updatePixels();\nimage(img, 17, 17);\n</code>\n</div>"],
              alt: "66x66 dark turquoise rect in center of canvas.\n2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas\nno image displayed",
              class: "p5",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/image.js",
              line: 102,
              description: "<p>Save the current canvas as an image. The browser will either save the\nfile immediately, or prompt the user with a dialogue window.</p>\n",
              itemtype: "method",
              name: "saveCanvas",
              example: ["\n <div class='norender notest'><code>\n function setup() {\n let c = createCanvas(100, 100);\n background(255, 0, 0);\n saveCanvas(c, 'myCanvas', 'jpg');\n }\n </code></div>\n <div class='norender notest'><code>\n // note that this example has the same result as above\n // if no canvas is specified, defaults to main canvas\n function setup() {\n let c = createCanvas(100, 100);\n background(255, 0, 0);\n saveCanvas('myCanvas', 'jpg');\n\n // all of the following are valid\n saveCanvas(c, 'myCanvas', 'jpg');\n saveCanvas(c, 'myCanvas.jpg');\n saveCanvas(c, 'myCanvas');\n saveCanvas(c);\n saveCanvas('myCanvas', 'png');\n saveCanvas('myCanvas');\n saveCanvas();\n }\n </code></div>"],
              alt: "no image displayed\n no image displayed\n no image displayed",
              class: "p5",
              module: "Image",
              submodule: "Image",
              overloads: [{
                line: 102,
                params: [{
                  name: "selectedCanvas",
                  description: "<p>a variable\n                                representing a specific html5 canvas (optional)</p>\n",
                  type: "p5.Element|HTMLCanvasElement"
                }, {
                  name: "filename",
                  description: "",
                  type: "String",
                  optional: !0
                }, {
                  name: "extension",
                  description: "<p>&#39;jpg&#39; or &#39;png&#39;</p>\n",
                  type: "String",
                  optional: !0
                }]
              }, {
                line: 144,
                params: [{
                  name: "filename",
                  description: "",
                  type: "String",
                  optional: !0
                }, {
                  name: "extension",
                  description: "",
                  type: "String",
                  optional: !0
                }]
              }]
            }, {
              file: "src/image/image.js",
              line: 195,
              description: '<p>Capture a sequence of frames that can be used to create a movie.\nAccepts a callback. For example, you may wish to send the frames\nto a server where they can be stored or converted into a movie.\nIf no callback is provided, the browser will pop up save dialogues in an\nattempt to download all of the images that have just been created. With the\ncallback provided the image data isn&#39;t saved by default but instead passed\nas an argument to the callback function as an array of objects, with the\nsize of array equal to the total number of frames.</p>\n<p>Note that <a href="#/p5.Image/saveFrames">saveFrames()</a> will only save the first 15 frames of an animation.\nTo export longer animations, you might look into a library like\n<a href="https://github.com/spite/ccapture.js/">ccapture.js</a>.</p>\n',
              itemtype: "method",
              name: "saveFrames",
              params: [{
                name: "filename",
                description: "",
                type: "String"
              }, {
                name: "extension",
                description: "<p>&#39;jpg&#39; or &#39;png&#39;</p>\n",
                type: "String"
              }, {
                name: "duration",
                description: "<p>Duration in seconds to save the frames for.</p>\n",
                type: "Number"
              }, {
                name: "framerate",
                description: "<p>Framerate to save the frames in.</p>\n",
                type: "Number"
              }, {
                name: "callback",
                description: "<p>A callback function that will be executed\n                                to handle the image data. This function\n                                should accept an array as argument. The\n                                array will contain the specified number of\n                                frames of objects. Each object has three\n                                properties: imageData - an\n                                image/octet-stream, filename and extension.</p>\n",
                type: "Function(Array)",
                optional: !0
              }],
              example: ["\n<div><code>\n function draw() {\n background(mouseX);\n }\n\n function mousePressed() {\n saveFrames('out', 'png', 1, 25, data => {\n   print(data);\n });\n }\n</code></div>"],
              alt: "canvas background goes from light to dark with mouse x.",
              class: "p5",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/loading_displaying.js",
              line: 17,
              description: '<p>Loads an image from a path and creates a <a href="#/p5.Image">p5.Image</a> from it.\n<br><br>\nThe image may not be immediately available for rendering\nIf you want to ensure that the image is ready before doing\nanything with it, place the <a href="#/p5/loadImage">loadImage()</a> call in <a href="#/p5/preload">preload()</a>.\nYou may also supply a callback function to handle the image when it&#39;s ready.\n<br><br>\nThe path to the image should be relative to the HTML file\nthat links in your sketch. Loading an image from a URL or other\nremote location may be blocked due to your browser&#39;s built-in\nsecurity.</p>\n',
              itemtype: "method",
              name: "loadImage",
              params: [{
                name: "path",
                description: "<p>Path of the image to be loaded</p>\n",
                type: "String"
              }, {
                name: "successCallback",
                description: '<p>Function to be called once\n                               the image is loaded. Will be passed the\n                               <a href="#/p5.Image">p5.Image</a>.</p>\n',
                type: "function(p5.Image)",
                optional: !0
              }, {
                name: "failureCallback",
                description: "<p>called with event error if\n                               the image fails to load.</p>\n",
                type: "Function(Event)",
                optional: !0
              }],
              return: {
                description: 'the <a href="#/p5.Image">p5.Image</a> object',
                type: "p5.Image"
              },
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n}\n</code>\n</div>\n<div>\n<code>\nfunction setup() {\n  // here we use a callback to display the image after loading\n  loadImage('assets/laDefense.jpg', img => {\n    image(img, 0, 0);\n  });\n}\n</code>\n</div>"],
              alt: "image of the underside of a white umbrella and grided ceililng above\nimage of the underside of a white umbrella and grided ceililng above",
              class: "p5",
              module: "Image",
              submodule: "Loading & Displaying"
            }, {
              file: "src/image/loading_displaying.js",
              line: 127,
              description: '<p>Draw an image to the p5.js canvas.</p>\n<p>This function can be used with different numbers of parameters. The\nsimplest use requires only three parameters: img, x, and y—where (x, y) is\nthe position of the image. Two more parameters can optionally be added to\nspecify the width and height of the image.</p>\n<p>This function can also be used with all eight Number parameters. To\ndifferentiate between all these parameters, p5.js uses the language of\n&quot;destination rectangle&quot; (which corresponds to &quot;dx&quot;, &quot;dy&quot;, etc.) and &quot;source\nimage&quot; (which corresponds to &quot;sx&quot;, &quot;sy&quot;, etc.) below. Specifying the\n&quot;source image&quot; dimensions can be useful when you want to display a\nsubsection of the source image instead of the whole thing. Here&#39;s a diagram\nto explain further:\n<img src="assets/drawImage.png"></img></p>\n',
              itemtype: "method",
              name: "image",
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\nfunction setup() {\n  // Top-left corner of the img is at (0, 0)\n  // Width and height are the img's original width and height\n  image(img, 0, 0);\n}\n</code>\n</div>\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\nfunction setup() {\n  background(50);\n  // Top-left corner of the img is at (10, 10)\n  // Width and height are 50 x 50\n  image(img, 10, 10, 50, 50);\n}\n</code>\n</div>\n<div>\n<code>\nfunction setup() {\n  // Here, we use a callback to display the image after loading\n  loadImage('assets/laDefense.jpg', img => {\n    image(img, 0, 0);\n  });\n}\n</code>\n</div>\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/gradient.png');\n}\nfunction setup() {\n  // 1. Background image\n  // Top-left corner of the img is at (0, 0)\n  // Width and height are the img's original width and height, 100 x 100\n  image(img, 0, 0);\n  // 2. Top right image\n  // Top-left corner of destination rectangle is at (50, 0)\n  // Destination rectangle width and height are 40 x 20\n  // The next parameters are relative to the source image:\n  // - Starting at position (50, 50) on the source image, capture a 50 x 50\n  // subsection\n  // - Draw this subsection to fill the dimensions of the destination rectangle\n  image(img, 50, 0, 40, 20, 50, 50, 50, 50);\n}\n</code>\n</div>"],
              alt: "image of the underside of a white umbrella and gridded ceiling above\nimage of the underside of a white umbrella and gridded ceiling above",
              class: "p5",
              module: "Image",
              submodule: "Loading & Displaying",
              overloads: [{
                line: 127,
                params: [{
                  name: "img",
                  description: "<p>the image to display</p>\n",
                  type: "p5.Image|p5.Element"
                }, {
                  name: "x",
                  description: "<p>the x-coordinate of the top-left corner of the image</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>the y-coordinate of the top-left corner of the image</p>\n",
                  type: "Number"
                }, {
                  name: "width",
                  description: "<p>the width to draw the image</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "height",
                  description: "<p>the height to draw the image</p>\n",
                  type: "Number",
                  optional: !0
                }]
              }, {
                line: 215,
                params: [{
                  name: "img",
                  description: "",
                  type: "p5.Image|p5.Element"
                }, {
                  name: "dx",
                  description: "<p>the x-coordinate of the destination\n                          rectangle in which to draw the source image</p>\n",
                  type: "Number"
                }, {
                  name: "dy",
                  description: "<p>the y-coordinate of the destination\n                          rectangle in which to draw the source image</p>\n",
                  type: "Number"
                }, {
                  name: "dWidth",
                  description: "<p>the width of the destination rectangle</p>\n",
                  type: "Number"
                }, {
                  name: "dHeight",
                  description: "<p>the height of the destination rectangle</p>\n",
                  type: "Number"
                }, {
                  name: "sx",
                  description: "<p>the x-coordinate of the subsection of the source\nimage to draw into the destination rectangle</p>\n",
                  type: "Number"
                }, {
                  name: "sy",
                  description: "<p>the y-coordinate of the subsection of the source\nimage to draw into the destination rectangle</p>\n",
                  type: "Number"
                }, {
                  name: "sWidth",
                  description: "<p>the width of the subsection of the\n                          source image to draw into the destination\n                          rectangle</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "sHeight",
                  description: "<p>the height of the subsection of the\n                           source image to draw into the destination rectangle</p>\n",
                  type: "Number",
                  optional: !0
                }]
              }]
            }, {
              file: "src/image/loading_displaying.js",
              line: 298,
              description: '<p>Sets the fill value for displaying images. Images can be tinted to\nspecified colors or made transparent by including an alpha value.\n<br><br>\nTo apply transparency to an image without affecting its color, use\nwhite as the tint color and specify an alpha value. For instance,\ntint(255, 128) will make an image 50% transparent (assuming the default\nalpha range of 0-255, which can be changed with <a href="#/p5/colorMode">colorMode()</a>).\n<br><br>\nThe value for the gray parameter must be less than or equal to the current\nmaximum value as specified by <a href="#/p5/colorMode">colorMode()</a>. The default maximum value is\n255.</p>\n',
              itemtype: "method",
              name: "tint",
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  tint(0, 153, 204); // Tint blue\n  image(img, 50, 0);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  tint(0, 153, 204, 126); // Tint blue and set transparency\n  image(img, 50, 0);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  tint(255, 126); // Apply transparency without changing color\n  image(img, 50, 0);\n}\n</code>\n</div>"],
              alt: "2 side by side images of umbrella and ceiling, one image with blue tint\nImages of umbrella and ceiling, one half of image with blue tint\n2 side by side images of umbrella and ceiling, one image translucent",
              class: "p5",
              module: "Image",
              submodule: "Loading & Displaying",
              overloads: [{
                line: 298,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value relative to\n                                the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }]
              }, {
                line: 371,
                params: [{
                  name: "value",
                  description: "<p>a color string</p>\n",
                  type: "String"
                }]
              }, {
                line: 376,
                params: [{
                  name: "gray",
                  description: "<p>a gray value</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }]
              }, {
                line: 382,
                params: [{
                  name: "values",
                  description: "<p>an array containing the red,green,blue &amp;\n                                and alpha components of the color</p>\n",
                  type: "Number[]"
                }]
              }, {
                line: 388,
                params: [{
                  name: "color",
                  description: "<p>the tint color</p>\n",
                  type: "p5.Color"
                }]
              }]
            }, {
              file: "src/image/loading_displaying.js",
              line: 398,
              description: "<p>Removes the current fill value for displaying images and reverts to\ndisplaying images with their original hues.</p>\n",
              itemtype: "method",
              name: "noTint",
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  tint(0, 153, 204); // Tint blue\n  image(img, 0, 0);\n  noTint(); // Disable tint\n  image(img, 50, 0);\n}\n</code>\n</div>"],
              alt: "2 side by side images of bricks, left image with blue tint",
              class: "p5",
              module: "Image",
              submodule: "Loading & Displaying"
            }, {
              file: "src/image/loading_displaying.js",
              line: 464,
              description: '<p>Set image mode. Modifies the location from which images are drawn by\nchanging the way in which parameters given to <a href="#/p5/image">image()</a> are interpreted.\nThe default mode is imageMode(CORNER), which interprets the second and\nthird parameters of <a href="#/p5/image">image()</a> as the upper-left corner of the image. If\ntwo additional parameters are specified, they are used to set the image&#39;s\nwidth and height.\n<br><br>\nimageMode(CORNERS) interprets the second and third parameters of <a href="#/p5/image">image()</a>\nas the location of one corner, and the fourth and fifth parameters as the\nopposite corner.\n<br><br>\nimageMode(CENTER) interprets the second and third parameters of <a href="#/p5/image">image()</a>\nas the image&#39;s center point. If two additional parameters are specified,\nthey are used to set the image&#39;s width and height.</p>\n',
              itemtype: "method",
              name: "imageMode",
              params: [{
                name: "mode",
                description: "<p>either CORNER, CORNERS, or CENTER</p>\n",
                type: "Constant"
              }],
              example: ["\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  imageMode(CORNER);\n  image(img, 10, 10, 50, 50);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  imageMode(CORNERS);\n  image(img, 10, 10, 90, 40);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  imageMode(CENTER);\n  image(img, 50, 50, 80, 80);\n}\n</code>\n</div>"],
              alt: "small square image of bricks\nhorizontal rectangle image of bricks\nlarge square image of bricks",
              class: "p5",
              module: "Image",
              submodule: "Loading & Displaying"
            }, {
              file: "src/image/p5.Image.js",
              line: 9,
              description: '<p>This module defines the <a href="#/p5.Image">p5.Image</a> class and P5 methods for\ndrawing images to the main display canvas.</p>\n',
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 90,
              description: "<p>Image width.</p>\n",
              itemtype: "property",
              name: "width",
              type: "Number",
              readonly: "",
              example: ["\n<div><code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  createCanvas(100, 100);\n  image(img, 0, 0);\n  for (let i = 0; i < img.width; i++) {\n    let c = img.get(i, img.height / 2);\n    stroke(c);\n    line(i, height / 2, i, height);\n  }\n}\n</code></div>"],
              alt: "rocky mountains in top and horizontal lines in corresponding colors in bottom.",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 117,
              description: "<p>Image height.</p>\n",
              itemtype: "property",
              name: "height",
              type: "Number",
              readonly: "",
              example: ["\n<div><code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  createCanvas(100, 100);\n  image(img, 0, 0);\n  for (let i = 0; i < img.height; i++) {\n    let c = img.get(img.width / 2, i);\n    stroke(c);\n    line(0, i, width / 2, i);\n  }\n}\n</code></div>"],
              alt: "rocky mountains on right and vertical lines in corresponding colors on left.",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 152,
              description: '<p>Array containing the values for all the pixels in the display window.\nThese values are numbers. This array is the size (include an appropriate\nfactor for pixelDensity) of the display window x4,\nrepresenting the R, G, B, A values in order for each pixel, moving from\nleft to right across each row, then down each column. Retina and other\nhigh denisty displays may have more pixels (by a factor of\npixelDensity^2).\nFor example, if the image is 100x100 pixels, there will be 40,000. With\npixelDensity = 2, there will be 160,000. The first four values\n(indices 0-3) in the array will be the R, G, B, A values of the pixel at\n(0, 0). The second four values (indices 4-7) will contain the R, G, B, A\nvalues of the pixel at (1, 0). More generally, to set values for a pixel\nat (x, y):</p>\n<pre><code class="lang-javascript">let d = pixelDensity();\nfor (let i = 0; i &lt; d; i++) {\n  for (let j = 0; j &lt; d; j++) {\n    // loop over\n    index = 4 * ((y * d + j) * width * d + (x * d + i));\n    pixels[index] = r;\n    pixels[index+1] = g;\n    pixels[index+2] = b;\n    pixels[index+3] = a;\n  }\n}\n</code></pre>\n<p><br><br>\nBefore accessing this array, the data must loaded with the <a href="#/p5.Image/loadPixels">loadPixels()</a>\nfunction. After the array data has been modified, the <a href="#/p5.Image/updatePixels">updatePixels()</a>\nfunction must be run to update the changes.</p>\n',
              itemtype: "property",
              name: "pixels",
              type: "Number[]",
              example: ["\n<div>\n<code>\nlet img = createImage(66, 66);\nimg.loadPixels();\nfor (let i = 0; i < img.width; i++) {\n  for (let j = 0; j < img.height; j++) {\n    img.set(i, j, color(0, 90, 102));\n  }\n}\nimg.updatePixels();\nimage(img, 17, 17);\n</code>\n</div>\n<div>\n<code>\nlet pink = color(255, 102, 204);\nlet img = createImage(66, 66);\nimg.loadPixels();\nfor (let i = 0; i < 4 * (width * height / 2); i += 4) {\n  img.pixels[i] = red(pink);\n  img.pixels[i + 1] = green(pink);\n  img.pixels[i + 2] = blue(pink);\n  img.pixels[i + 3] = alpha(pink);\n}\nimg.updatePixels();\nimage(img, 17, 17);\n</code>\n</div>"],
              alt: "66x66 turquoise rect in center of canvas\n66x66 pink rect in center of canvas",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 222,
              description: "<p>Helper fxn for sharing pixel methods</p>\n",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 231,
              description: "<p>Loads the pixels data for this image into the [pixels] attribute.</p>\n",
              itemtype: "method",
              name: "loadPixels",
              example: ["\n<div><code>\nlet myImage;\nlet halfImage;\n\nfunction preload() {\n  myImage = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  myImage.loadPixels();\n  halfImage = 4 * width * height / 2;\n  for (let i = 0; i < halfImage; i++) {\n    myImage.pixels[i + halfImage] = myImage.pixels[i];\n  }\n  myImage.updatePixels();\n}\n\nfunction draw() {\n  image(myImage, 0, 0);\n}\n</code></div>"],
              alt: "2 images of rocky mountains vertically stacked",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 267,
              description: "<p>Updates the backing canvas for this image with the contents of\nthe [pixels] array.</p>\n",
              itemtype: "method",
              name: "updatePixels",
              example: ["\n<div><code>\nlet myImage;\nlet halfImage;\n\nfunction preload() {\n  myImage = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  myImage.loadPixels();\n  halfImage = 4 * width * height / 2;\n  for (let i = 0; i < halfImage; i++) {\n    myImage.pixels[i + halfImage] = myImage.pixels[i];\n  }\n  myImage.updatePixels();\n}\n\nfunction draw() {\n  image(myImage, 0, 0);\n}\n</code></div>"],
              alt: "2 images of rocky mountains vertically stacked",
              class: "p5.Image",
              module: "Image",
              submodule: "Image",
              overloads: [{
                line: 267,
                params: [{
                  name: "x",
                  description: "<p>x-offset of the target update area for the\n                             underlying canvas</p>\n",
                  type: "Integer"
                }, {
                  name: "y",
                  description: "<p>y-offset of the target update area for the\n                             underlying canvas</p>\n",
                  type: "Integer"
                }, {
                  name: "w",
                  description: "<p>height of the target update area for the\n                             underlying canvas</p>\n",
                  type: "Integer"
                }, {
                  name: "h",
                  description: "<p>height of the target update area for the\n                             underlying canvas</p>\n",
                  type: "Integer"
                }]
              }, {
                line: 307,
                params: []
              }]
            }, {
              file: "src/image/p5.Image.js",
              line: 315,
              description: '<p>Get a region of pixels from an image.</p>\n<p>If no params are passed, those whole image is returned,\nif x and y are the only params passed a single pixel is extracted\nif all params are passed a rectangle region is extracted and a <a href="#/p5.Image">p5.Image</a>\nis returned.</p>\n<p>Returns undefined if the region is outside the bounds of the image</p>\n',
              itemtype: "method",
              name: "get",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the pixel</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "y",
                description: "<p>y-coordinate of the pixel</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "w",
                description: "<p>width</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "h",
                description: "<p>height</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: 'color of pixel at x,y in array format\n                                   [R, G, B, A] or <a href="#/p5.Image">p5.Image</a>',
                type: "Number[]|Color|p5.Image"
              },
              example: ["\n<div><code>\nlet myImage;\nlet c;\n\nfunction preload() {\n  myImage = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  background(myImage);\n  noStroke();\n  c = myImage.get(60, 90);\n  fill(c);\n  rect(25, 25, 50, 50);\n}\n\n//get() returns color here\n</code></div>"],
              alt: "image of rocky mountains with 50x50 green rect in front",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 360,
              description: '<p>Set the color of a single pixel or write an image into\nthis <a href="#/p5.Image">p5.Image</a>.</p>\n<p>Note that for a large number of pixels this will\nbe slower than directly manipulating the pixels array\nand then calling <a href="#/p5.Image/updatePixels">updatePixels()</a>.</p>\n',
              itemtype: "method",
              name: "set",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the pixel</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-coordinate of the pixel</p>\n",
                type: "Number"
              }, {
                name: "a",
                description: '<p>grayscale value | pixel array |\n                               a <a href="#/p5.Color">p5.Color</a> | image to copy</p>\n',
                type: "Number|Number[]|Object"
              }],
              example: ["\n<div>\n<code>\nlet img = createImage(66, 66);\nimg.loadPixels();\nfor (let i = 0; i < img.width; i++) {\n  for (let j = 0; j < img.height; j++) {\n    img.set(i, j, color(0, 90, 102, (i % img.width) * 2));\n  }\n}\nimg.updatePixels();\nimage(img, 17, 17);\nimage(img, 34, 34);\n</code>\n</div>"],
              alt: "2 gradated dark turquoise rects fade left. 1 center 1 bottom right of canvas",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 398,
              description: "<p>Resize the image to a new width and height. To make the image scale\nproportionally, use 0 as the value for the wide or high parameter.\nFor instance, to make the width of an image 150 pixels, and change\nthe height using the same proportion, use resize(150, 0).</p>\n",
              itemtype: "method",
              name: "resize",
              params: [{
                name: "width",
                description: "<p>the resized image width</p>\n",
                type: "Number"
              }, {
                name: "height",
                description: "<p>the resized image height</p>\n",
                type: "Number"
              }],
              example: ["\n<div><code>\nlet img;\n\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\n\nfunction draw() {\n  image(img, 0, 0);\n}\n\nfunction mousePressed() {\n  img.resize(50, 100);\n}\n</code></div>"],
              alt: "image of rocky mountains. zoomed in",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 483,
              description: "<p>Copies a region of pixels from one image to another. If no\nsrcImage is specified this is used as the source. If the source\nand destination regions aren&#39;t the same size, it will\nautomatically resize source pixels to fit the specified\ntarget region.</p>\n",
              itemtype: "method",
              name: "copy",
              example: ["\n<div><code>\nlet photo;\nlet bricks;\nlet x;\nlet y;\n\nfunction preload() {\n  photo = loadImage('assets/rockies.jpg');\n  bricks = loadImage('assets/bricks.jpg');\n}\n\nfunction setup() {\n  x = bricks.width / 2;\n  y = bricks.height / 2;\n  photo.copy(bricks, 0, 0, x, y, 0, 0, x, y);\n  image(photo, 0, 0);\n}\n</code></div>"],
              alt: "image of rocky mountains and smaller image on top of bricks at top left",
              class: "p5.Image",
              module: "Image",
              submodule: "Image",
              overloads: [{
                line: 483,
                params: [{
                  name: "srcImage",
                  description: "<p>source image</p>\n",
                  type: "p5.Image|p5.Element"
                }, {
                  name: "sx",
                  description: "<p>X coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "<p>Y coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "<p>source image width</p>\n",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "<p>source image height</p>\n",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "<p>X coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "<p>Y coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "<p>destination image width</p>\n",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "<p>destination image height</p>\n",
                  type: "Integer"
                }]
              }, {
                line: 524,
                params: [{
                  name: "sx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "",
                  type: "Integer"
                }]
              }]
            }, {
              file: "src/image/p5.Image.js",
              line: 564,
              description: "<p>Masks part of an image from displaying by loading another\nimage and using it&#39;s alpha channel as an alpha channel for\nthis image.</p>\n",
              itemtype: "method",
              name: "mask",
              params: [{
                name: "srcImage",
                description: "<p>source image</p>\n",
                type: "p5.Image"
              }],
              example: ["\n<div><code>\nlet photo, maskImage;\nfunction preload() {\n  photo = loadImage('assets/rockies.jpg');\n  maskImage = loadImage('assets/mask2.png');\n}\n\nfunction setup() {\n  createCanvas(100, 100);\n  photo.mask(maskImage);\n  image(photo, 0, 0);\n}\n</code></div>"],
              alt: "image of rocky mountains with white at right\n\n\nhttp://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 627,
              description: '<p>Applies an image filter to a <a href="#/p5.Image">p5.Image</a></p>\n',
              itemtype: "method",
              name: "filter",
              params: [{
                name: "filterType",
                description: "<p>either THRESHOLD, GRAY, OPAQUE, INVERT,\n                               POSTERIZE, BLUR, ERODE, DILATE or BLUR.\n                               See Filters.js for docs on\n                               each available filter</p>\n",
                type: "Constant"
              }, {
                name: "filterParam",
                description: "<p>an optional parameter unique\n                               to each filter, see above</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\nlet photo1;\nlet photo2;\n\nfunction preload() {\n  photo1 = loadImage('assets/rockies.jpg');\n  photo2 = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  photo2.filter('gray');\n  image(photo1, 0, 0);\n  image(photo2, width / 2, 0);\n}\n</code></div>"],
              alt: "2 images of rocky mountains left one in color, right in black and white",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/p5.Image.js",
              line: 663,
              description: "<p>Copies a region of pixels from one image to another, using a specified\nblend mode to do the operation.</p>\n",
              itemtype: "method",
              name: "blend",
              example: ["\n<div><code>\nlet mountains;\nlet bricks;\n\nfunction preload() {\n  mountains = loadImage('assets/rockies.jpg');\n  bricks = loadImage('assets/bricks_third.jpg');\n}\n\nfunction setup() {\n  mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n  image(mountains, 0, 0);\n  image(bricks, 0, 0);\n}\n</code></div>\n<div><code>\nlet mountains;\nlet bricks;\n\nfunction preload() {\n  mountains = loadImage('assets/rockies.jpg');\n  bricks = loadImage('assets/bricks_third.jpg');\n}\n\nfunction setup() {\n  mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n  image(mountains, 0, 0);\n  image(bricks, 0, 0);\n}\n</code></div>\n<div><code>\nlet mountains;\nlet bricks;\n\nfunction preload() {\n  mountains = loadImage('assets/rockies.jpg');\n  bricks = loadImage('assets/bricks_third.jpg');\n}\n\nfunction setup() {\n  mountains.blend(bricks, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n  image(mountains, 0, 0);\n  image(bricks, 0, 0);\n}\n</code></div>"],
              alt: "image of rocky mountains. Brick images on left and right. Right overexposed\nimage of rockies. Brickwall images on left and right. Right mortar transparent\nimage of rockies. Brickwall images on left and right. Right translucent",
              class: "p5.Image",
              module: "Image",
              submodule: "Image",
              overloads: [{
                line: 663,
                params: [{
                  name: "srcImage",
                  description: "<p>source image</p>\n",
                  type: "p5.Image"
                }, {
                  name: "sx",
                  description: "<p>X coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "<p>Y coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "<p>source image width</p>\n",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "<p>source image height</p>\n",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "<p>X coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "<p>Y coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "<p>destination image width</p>\n",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "<p>destination image height</p>\n",
                  type: "Integer"
                }, {
                  name: "blendMode",
                  description: '<p>the blend mode. either\n    BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n    MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n    SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.</p>\n<p>Available blend modes are: normal | multiply | screen | overlay |\n           darken | lighten | color-dodge | color-burn | hard-light |\n           soft-light | difference | exclusion | hue | saturation |\n           color | luminosity</p>\n<p><a href="http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/">http://blogs.adobe.com/webplatform/2013/01/28/blending-features-in-canvas/</a></p>\n',
                  type: "Constant"
                }]
              }, {
                line: 742,
                params: [{
                  name: "sx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "",
                  type: "Integer"
                }, {
                  name: "blendMode",
                  description: "",
                  type: "Constant"
                }]
              }]
            }, {
              file: "src/image/p5.Image.js",
              line: 785,
              description: "<p>Saves the image to a file and force the browser to download it.\nAccepts two strings for filename and file extension\nSupports png (default) and jpg.</p>\n",
              itemtype: "method",
              name: "save",
              params: [{
                name: "filename",
                description: "<p>give your file a name</p>\n",
                type: "String"
              }, {
                name: "extension",
                description: "<p>&#39;png&#39; or &#39;jpg&#39;</p>\n",
                type: "String"
              }],
              example: ["\n<div><code>\nlet photo;\n\nfunction preload() {\n  photo = loadImage('assets/rockies.jpg');\n}\n\nfunction draw() {\n  image(photo, 0, 0);\n}\n\nfunction keyTyped() {\n  if (key === 's') {\n    photo.save('photo', 'png');\n  }\n}\n</code></div>"],
              alt: "image of rocky mountains.",
              class: "p5.Image",
              module: "Image",
              submodule: "Image"
            }, {
              file: "src/image/pixels.js",
              line: 14,
              description: '<p><a href=\'https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference\n/Global_Objects/Uint8ClampedArray\' target=\'_blank\'>Uint8ClampedArray</a>\ncontaining the values for all the pixels in the display window.\nThese values are numbers. This array is the size (include an appropriate\nfactor for <a href="#/p5/pixelDensity">pixelDensity</a>) of the display window x4,\nrepresenting the R, G, B, A values in order for each pixel, moving from\nleft to right across each row, then down each column. Retina and other\nhigh density displays will have more pixels[] (by a factor of\npixelDensity^2).\nFor example, if the image is 100x100 pixels, there will be 40,000. On a\nretina display, there will be 160,000.\n<br><br>\nThe first four values (indices 0-3) in the array will be the R, G, B, A\nvalues of the pixel at (0, 0). The second four values (indices 4-7) will\ncontain the R, G, B, A values of the pixel at (1, 0). More generally, to\nset values for a pixel at (x, y):</p>\n<pre><code class="lang-javascript">let d = pixelDensity();\nfor (let i = 0; i &lt; d; i++) {\n  for (let j = 0; j &lt; d; j++) {\n    // loop over\n    index = 4 * ((y * d + j) * width * d + (x * d + i));\n    pixels[index] = r;\n    pixels[index+1] = g;\n    pixels[index+2] = b;\n    pixels[index+3] = a;\n  }\n}\n</code></pre>\n<p>While the above method is complex, it is flexible enough to work with\nany pixelDensity. Note that <a href="#/p5/set">set()</a> will automatically take care of\nsetting all the appropriate values in <a href="#/p5/pixels">pixels[]</a> for a given (x, y) at\nany pixelDensity, but the performance may not be as fast when lots of\nmodifications are made to the pixel array.\n<br><br>\nBefore accessing this array, the data must loaded with the <a href="#/p5/loadPixels">loadPixels()</a>\nfunction. After the array data has been modified, the <a href="#/p5/updatePixels">updatePixels()</a>\nfunction must be run to update the changes.\n<br><br>\nNote that this is not a standard javascript array.  This means that\nstandard javascript functions such as <a href="#/p5/slice">slice()</a> or\n<a href="#/p5/arrayCopy">arrayCopy()</a> do not\nwork.</p>',
              itemtype: "property",
              name: "pixels",
              type: "Number[]",
              example: ["\n<div>\n<code>\nlet pink = color(255, 102, 204);\nloadPixels();\nlet d = pixelDensity();\nlet halfImage = 4 * (width * d) * (height / 2 * d);\nfor (let i = 0; i < halfImage; i += 4) {\n  pixels[i] = red(pink);\n  pixels[i + 1] = green(pink);\n  pixels[i + 2] = blue(pink);\n  pixels[i + 3] = alpha(pink);\n}\nupdatePixels();\n</code>\n</div>"],
              alt: "top half of canvas pink, bottom grey",
              class: "p5",
              module: "Image",
              submodule: "Pixels"
            }, {
              file: "src/image/pixels.js",
              line: 83,
              description: "<p>Copies a region of pixels from one image to another, using a specified\nblend mode to do the operation.</p>\n",
              itemtype: "method",
              name: "blend",
              example: ["\n<div><code>\nlet img0;\nlet img1;\n\nfunction preload() {\n  img0 = loadImage('assets/rockies.jpg');\n  img1 = loadImage('assets/bricks_third.jpg');\n}\n\nfunction setup() {\n  background(img0);\n  image(img1, 0, 0);\n  blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, LIGHTEST);\n}\n</code></div>\n<div><code>\nlet img0;\nlet img1;\n\nfunction preload() {\n  img0 = loadImage('assets/rockies.jpg');\n  img1 = loadImage('assets/bricks_third.jpg');\n}\n\nfunction setup() {\n  background(img0);\n  image(img1, 0, 0);\n  blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, DARKEST);\n}\n</code></div>\n<div><code>\nlet img0;\nlet img1;\n\nfunction preload() {\n  img0 = loadImage('assets/rockies.jpg');\n  img1 = loadImage('assets/bricks_third.jpg');\n}\n\nfunction setup() {\n  background(img0);\n  image(img1, 0, 0);\n  blend(img1, 0, 0, 33, 100, 67, 0, 33, 100, ADD);\n}\n</code></div>"],
              alt: "image of rocky mountains. Brick images on left and right. Right overexposed\nimage of rockies. Brickwall images on left and right. Right mortar transparent\nimage of rockies. Brickwall images on left and right. Right translucent",
              class: "p5",
              module: "Image",
              submodule: "Pixels",
              overloads: [{
                line: 83,
                params: [{
                  name: "srcImage",
                  description: "<p>source image</p>\n",
                  type: "p5.Image"
                }, {
                  name: "sx",
                  description: "<p>X coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "<p>Y coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "<p>source image width</p>\n",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "<p>source image height</p>\n",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "<p>X coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "<p>Y coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "<p>destination image width</p>\n",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "<p>destination image height</p>\n",
                  type: "Integer"
                }, {
                  name: "blendMode",
                  description: "<p>the blend mode. either\n    BLEND, DARKEST, LIGHTEST, DIFFERENCE,\n    MULTIPLY, EXCLUSION, SCREEN, REPLACE, OVERLAY, HARD_LIGHT,\n    SOFT_LIGHT, DODGE, BURN, ADD or NORMAL.</p>\n",
                  type: "Constant"
                }]
              }, {
                line: 156,
                params: [{
                  name: "sx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "",
                  type: "Integer"
                }, {
                  name: "blendMode",
                  description: "",
                  type: "Constant"
                }]
              }]
            }, {
              file: "src/image/pixels.js",
              line: 177,
              description: "<p>Copies a region of the canvas to another region of the canvas\nand copies a region of pixels from an image used as the srcImg parameter\ninto the canvas srcImage is specified this is used as the source. If\nthe source and destination regions aren&#39;t the same size, it will\nautomatically resize source pixels to fit the specified\ntarget region.</p>\n",
              itemtype: "method",
              name: "copy",
              example: ["\n<div><code>\nlet img;\n\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  background(img);\n  copy(img, 7, 22, 10, 10, 35, 25, 50, 50);\n  stroke(255);\n  noFill();\n  // Rectangle shows area being copied\n  rect(7, 22, 10, 10);\n}\n</code></div>"],
              alt: "image of rocky mountains. Brick images on left and right. Right overexposed\nimage of rockies. Brickwall images on left and right. Right mortar transparent\nimage of rockies. Brickwall images on left and right. Right translucent",
              class: "p5",
              module: "Image",
              submodule: "Pixels",
              overloads: [{
                line: 177,
                params: [{
                  name: "srcImage",
                  description: "<p>source image</p>\n",
                  type: "p5.Image|p5.Element"
                }, {
                  name: "sx",
                  description: "<p>X coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "<p>Y coordinate of the source&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "<p>source image width</p>\n",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "<p>source image height</p>\n",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "<p>X coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "<p>Y coordinate of the destination&#39;s upper left corner</p>\n",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "<p>destination image width</p>\n",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "<p>destination image height</p>\n",
                  type: "Integer"
                }]
              }, {
                line: 220,
                params: [{
                  name: "sx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "sh",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dx",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dy",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dw",
                  description: "",
                  type: "Integer"
                }, {
                  name: "dh",
                  description: "",
                  type: "Integer"
                }]
              }]
            }, {
              file: "src/image/pixels.js",
              line: 236,
              description: "<p>Applies a filter to the canvas.\n<br><br></p>\n<p>The presets options are:\n<br><br></p>\n<p>THRESHOLD\nConverts the image to black and white pixels depending if they are above or\nbelow the threshold defined by the level parameter. The parameter must be\nbetween 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n<br><br></p>\n<p>GRAY\nConverts any colors in the image to grayscale equivalents. No parameter\nis used.\n<br><br></p>\n<p>OPAQUE\nSets the alpha channel to entirely opaque. No parameter is used.\n<br><br></p>\n<p>INVERT\nSets each pixel to its inverse value. No parameter is used.\n<br><br></p>\n<p>POSTERIZE\nLimits each channel of the image to the number of colors specified as the\nparameter. The parameter can be set to values between 2 and 255, but\nresults are most noticeable in the lower ranges.\n<br><br></p>\n<p>BLUR\nExecutes a Gaussian blur with the level parameter specifying the extent\nof the blurring. If no parameter is used, the blur is equivalent to\nGaussian blur of radius 1. Larger values increase the blur.\n<br><br></p>\n<p>ERODE\nReduces the light areas. No parameter is used.\n<br><br></p>\n<p>DILATE\nIncreases the light areas. No parameter is used.</p>\n",
              itemtype: "method",
              name: "filter",
              params: [{
                name: "filterType",
                description: "<p>either THRESHOLD, GRAY, OPAQUE, INVERT,\n                               POSTERIZE, BLUR, ERODE, DILATE or BLUR.\n                               See Filters.js for docs on\n                               each available filter</p>\n",
                type: "Constant"
              }, {
                name: "filterParam",
                description: "<p>an optional parameter unique\n                               to each filter, see above</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(THRESHOLD);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(GRAY);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(OPAQUE);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(INVERT);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(POSTERIZE, 3);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(DILATE);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(BLUR, 3);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/bricks.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  filter(ERODE);\n}\n</code>\n</div>"],
              alt: "black and white image of a brick wall.\ngreyscale image of a brickwall\nimage of a brickwall\njade colored image of a brickwall\nred and pink image of a brickwall\nimage of a brickwall\nblurry image of a brickwall\nimage of a brickwall\nimage of a brickwall with less detail",
              class: "p5",
              module: "Image",
              submodule: "Pixels"
            }, {
              file: "src/image/pixels.js",
              line: 415,
              description: '<p>Returns an array of [R,G,B,A] values for any pixel or grabs a section of\nan image. If no parameters are specified, the entire image is returned.\nUse the x and y parameters to get the value of one pixel. Get a section of\nthe display window by specifying additional w and h parameters. When\ngetting an image, the x and y parameters define the coordinates for the\nupper-left corner of the image, regardless of the current <a href="#/p5/imageMode">imageMode()</a>.\n<br><br>\nIf the pixel requested is outside of the image window, [0,0,0,255] is\nreturned. To get the numbers scaled according to the current color ranges\nand taking into account <a href="#/p5/colorMode">colorMode</a>, use <a href="#/p5/getColor">getColor</a> instead of get.\n<br><br>\nGetting the color of a single pixel with get(x, y) is easy, but not as fast\nas grabbing the data directly from <a href="#/p5/pixels">pixels[]</a>. The equivalent statement to\nget(x, y) using <a href="#/p5/pixels">pixels[]</a> with pixel density d is</p>\n<pre><code class="lang-javascript">let x, y, d; // set these to the coordinates\nlet off = (y * width + x) * d * 4;\nlet components = [\n  pixels[off],\n  pixels[off + 1],\n  pixels[off + 2],\n  pixels[off + 3]\n];\nprint(components);\n</code></pre>\n<p><br><br>\nSee the reference for <a href="#/p5/pixels">pixels[]</a> for more information.</p>\n<p>If you want to extract an array of colors or a subimage from an p5.Image object,\ntake a look at <a href="#/p5.Image/get">p5.Image.get()</a></p>\n',
              itemtype: "method",
              name: "get",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the pixel</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "y",
                description: "<p>y-coordinate of the pixel</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "w",
                description: "<p>width</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "h",
                description: "<p>height</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: 'values of pixel at x,y in array format\n                             [R, G, B, A] or <a href="#/p5.Image">p5.Image</a>',
                type: "Number[]|p5.Image"
              },
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  let c = get();\n  image(c, width / 2, 0);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\nfunction setup() {\n  image(img, 0, 0);\n  let c = get(50, 90);\n  fill(c);\n  noStroke();\n  rect(25, 25, 50, 50);\n}\n</code>\n</div>"],
              alt: "2 images of the rocky mountains, side-by-side\nImage of the rocky mountains with 50x50 green rect in center of canvas",
              class: "p5",
              module: "Image",
              submodule: "Pixels"
            }, {
              file: "src/image/pixels.js",
              line: 520,
              description: '<p>Loads the pixel data for the display window into the <a href="#/p5/pixels">pixels[]</a> array. This\nfunction must always be called before reading from or writing to <a href="#/p5/pixels">pixels[]</a>.\nNote that only changes made with <a href="#/p5/set">set()</a> or direct manipulation of <a href="#/p5/pixels">pixels[]</a>\nwill occur.</p>\n',
              itemtype: "method",
              name: "loadPixels",
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  image(img, 0, 0);\n  let d = pixelDensity();\n  let halfImage = 4 * (img.width * d) * (img.height * d / 2);\n  loadPixels();\n  for (let i = 0; i < halfImage; i++) {\n    pixels[i + halfImage] = pixels[i];\n  }\n  updatePixels();\n}\n</code>\n</div>"],
              alt: "two images of the rocky mountains. one on top, one on bottom of canvas.",
              class: "p5",
              module: "Image",
              submodule: "Pixels"
            }, {
              file: "src/image/pixels.js",
              line: 557,
              description: '<p>Changes the color of any pixel, or writes an image directly to the\ndisplay window.</p>\n<p>The x and y parameters specify the pixel to change and the c parameter\nspecifies the color value. This can be a <a href="#/p5.Color">p5.Color</a> object, or [R, G, B, A]\npixel array. It can also be a single grayscale value.\nWhen setting an image, the x and y parameters define the coordinates for\nthe upper-left corner of the image, regardless of the current <a href="#/p5/imageMode">imageMode()</a>.\n</p>\n<p>\nAfter using <a href="#/p5/set">set()</a>, you must call <a href="#/p5/updatePixels">updatePixels()</a> for your changes to appear.\nThis should be called once all pixels have been set, and must be called before\ncalling .<a href="#/p5/get">get()</a> or drawing the image.\n</p>\n<p>Setting the color of a single pixel with set(x, y) is easy, but not as\nfast as putting the data directly into <a href="#/p5/pixels">pixels[]</a>. Setting the <a href="#/p5/pixels">pixels[]</a>\nvalues directly may be complicated when working with a retina display,\nbut will perform better when lots of pixels need to be set directly on\nevery loop.</p>\n<p>See the reference for <a href="#/p5/pixels">pixels[]</a> for more information.</p>',
              itemtype: "method",
              name: "set",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the pixel</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-coordinate of the pixel</p>\n",
                type: "Number"
              }, {
                name: "c",
                description: '<p>insert a grayscale value | a pixel array |\n                               a <a href="#/p5.Color">p5.Color</a> object | a <a href="#/p5.Image">p5.Image</a> to copy</p>\n',
                type: "Number|Number[]|Object"
              }],
              example: ["\n<div>\n<code>\nlet black = color(0);\nset(30, 20, black);\nset(85, 20, black);\nset(85, 75, black);\nset(30, 75, black);\nupdatePixels();\n</code>\n</div>\n\n<div>\n<code>\nfor (let i = 30; i < width - 15; i++) {\n  for (let j = 20; j < height - 25; j++) {\n    let c = color(204 - j, 153 - i, 0);\n    set(i, j, c);\n  }\n}\nupdatePixels();\n</code>\n</div>\n\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  set(0, 0, img);\n  updatePixels();\n  line(0, 0, width, height);\n  line(0, height, width, 0);\n}\n</code>\n</div>"],
              alt: "4 black points in the shape of a square middle-right of canvas.\nsquare with orangey-brown gradient lightening at bottom right.\nimage of the rocky mountains. with lines like an 'x' through the center.",
              class: "p5",
              module: "Image",
              submodule: "Pixels"
            }, {
              file: "src/image/pixels.js",
              line: 631,
              description: '<p>Updates the display window with the data in the <a href="#/p5/pixels">pixels[]</a> array.\nUse in conjunction with <a href="#/p5/loadPixels">loadPixels()</a>. If you&#39;re only reading pixels from\nthe array, there&#39;s no need to call <a href="#/p5/updatePixels">updatePixels()</a> — updating is only\nnecessary to apply changes. <a href="#/p5/updatePixels">updatePixels()</a> should be called anytime the\npixels array is manipulated or <a href="#/p5/set">set()</a> is called, and only changes made with\n<a href="#/p5/set">set()</a> or direct changes to <a href="#/p5/pixels">pixels[]</a> will occur.</p>\n',
              itemtype: "method",
              name: "updatePixels",
              params: [{
                name: "x",
                description: "<p>x-coordinate of the upper-left corner of region\n                        to update</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "y",
                description: "<p>y-coordinate of the upper-left corner of region\n                        to update</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "w",
                description: "<p>width of region to update</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "h",
                description: "<p>height of region to update</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/rockies.jpg');\n}\n\nfunction setup() {\n  image(img, 0, 0);\n  let d = pixelDensity();\n  let halfImage = 4 * (img.width * d) * (img.height * d / 2);\n  loadPixels();\n  for (let i = 0; i < halfImage; i++) {\n    pixels[i + halfImage] = pixels[i];\n  }\n  updatePixels();\n}\n</code>\n</div>"],
              alt: "two images of the rocky mountains. one on top, one on bottom of canvas.",
              class: "p5",
              module: "Image",
              submodule: "Pixels"
            }, {
              file: "src/io/files.js",
              line: 19,
              description: '<p>Loads a JSON file from a file or a URL, and returns an Object.\nNote that even if the JSON file contains an Array, an Object will be\nreturned with index numbers as keys.</p>\n<p>This method is asynchronous, meaning it may not finish before the next\nline in your sketch is executed. JSONP is supported via a polyfill and you\ncan pass in as the second argument an object with definitions of the json\ncallback following the syntax specified <a href="https://github.com/camsong/\nfetch-jsonp">here</a>.</p>\n<p>This method is suitable for fetching files up to size of 64MB.</p>\n',
              itemtype: "method",
              name: "loadJSON",
              return: {
                description: "JSON data",
                type: "Object|Array"
              },
              example: ["\n\n<p>Calling <a href=\"#/p5/loadJSON\">loadJSON()</a> inside <a href=\"#/p5/preload\">preload()</a> guarantees to complete the\noperation before <a href=\"#/p5/setup\">setup()</a> and <a href=\"#/p5/draw\">draw()</a> are called.</p>\n\n<div><code>\n// Examples use USGS Earthquake API:\n//   https://earthquake.usgs.gov/fdsnws/event/1/#methods\nlet earthquakes;\nfunction preload() {\n  // Get the most recent earthquake in the database\n  let url =\n   'https://earthquake.usgs.gov/earthquakes/feed/v1.0/' +\n    'summary/all_day.geojson';\n  earthquakes = loadJSON(url);\n}\n\nfunction setup() {\n  noLoop();\n}\n\nfunction draw() {\n  background(200);\n  // Get the magnitude and name of the earthquake out of the loaded JSON\n  let earthquakeMag = earthquakes.features[0].properties.mag;\n  let earthquakeName = earthquakes.features[0].properties.place;\n  ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);\n  textAlign(CENTER);\n  text(earthquakeName, 0, height - 30, width, 30);\n}\n</code></div>\n\n\n<p>Outside of preload(), you may supply a callback function to handle the\nobject:</p>\n<div><code>\nfunction setup() {\n  noLoop();\n  let url =\n   'https://earthquake.usgs.gov/earthquakes/feed/v1.0/' +\n    'summary/all_day.geojson';\n  loadJSON(url, drawEarthquake);\n}\n\nfunction draw() {\n  background(200);\n}\n\nfunction drawEarthquake(earthquakes) {\n  // Get the magnitude and name of the earthquake out of the loaded JSON\n  let earthquakeMag = earthquakes.features[0].properties.mag;\n  let earthquakeName = earthquakes.features[0].properties.place;\n  ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);\n  textAlign(CENTER);\n  text(earthquakeName, 0, height - 30, width, 30);\n}\n</code></div>"],
              alt: "50x50 ellipse that changes from black to white depending on the current humidity\n50x50 ellipse that changes from black to white depending on the current humidity",
              class: "p5",
              module: "IO",
              submodule: "Input",
              overloads: [{
                line: 19,
                params: [{
                  name: "path",
                  description: "<p>name of the file or url to load</p>\n",
                  type: "String"
                }, {
                  name: "jsonpOptions",
                  description: "<p>options object for jsonp related settings</p>\n",
                  type: "Object",
                  optional: !0
                }, {
                  name: "datatype",
                  description: "<p>&quot;json&quot; or &quot;jsonp&quot;</p>\n",
                  type: "String",
                  optional: !0
                }, {
                  name: "callback",
                  description: '<p>function to be executed after\n                                   <a href="#/p5/loadJSON">loadJSON()</a> completes, data is passed\n                                   in as first argument</p>\n',
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "JSON data",
                  type: "Object|Array"
                }
              }, {
                line: 105,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "datatype",
                  description: "",
                  type: "String"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Object|Array"
                }
              }, {
                line: 113,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function"
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Object|Array"
                }
              }]
            }, {
              file: "src/io/files.js",
              line: 180,
              description: "<p>Reads the contents of a file and creates a String array of its individual\nlines. If the name of the file is used as the parameter, as in the above\nexample, the file must be located in the sketch directory/folder.\n<br><br>\nAlternatively, the file maybe be loaded from anywhere on the local\ncomputer using an absolute path (something that starts with / on Unix and\nLinux, or a drive letter on Windows), or the filename parameter can be a\nURL for a file found on a network.\n<br><br>\nThis method is asynchronous, meaning it may not finish before the next\nline in your sketch is executed.</p>\n<p>This method is suitable for fetching files up to size of 64MB.</p>\n",
              itemtype: "method",
              name: "loadStrings",
              params: [{
                name: "filename",
                description: "<p>name of the file or url to load</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: '<p>function to be executed after <a href="#/p5/loadStrings">loadStrings()</a>\n                              completes, Array is passed in as first\n                              argument</p>\n',
                type: "Function",
                optional: !0
              }, {
                name: "errorCallback",
                description: "<p>function to be executed if\n                              there is an error, response is passed\n                              in as first argument</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: "Array of Strings",
                type: "String[]"
              },
              example: ['\n\n<p>Calling loadStrings() inside <a href="#/p5/preload">preload()</a> guarantees to complete the\noperation before <a href="#/p5/setup">setup()</a> and <a href="#/p5/draw">draw()</a> are called.</p>\n\n<div><code>\nlet result;\nfunction preload() {\n  result = loadStrings(\'assets/test.txt\');\n}\n\nfunction setup() {\n  background(200);\n  let ind = floor(random(result.length));\n  text(result[ind], 10, 10, 80, 80);\n}\n</code></div>\n\n<p>Outside of preload(), you may supply a callback function to handle the\nobject:</p>\n\n<div><code>\nfunction setup() {\n  loadStrings(\'assets/test.txt\', pickString);\n}\n\nfunction pickString(result) {\n  background(200);\n  let ind = floor(random(result.length));\n  text(result[ind], 10, 10, 80, 80);\n}\n</code></div>'],
              alt: 'randomly generated text from a file, for example "i smell like butter"\nrandomly generated text from a file, for example "i have three feet"',
              class: "p5",
              module: "IO",
              submodule: "Input"
            }, {
              file: "src/io/files.js",
              line: 293,
              description: '<p>Reads the contents of a file or URL and creates a <a href="#/p5.Table">p5.Table</a> object with\nits values. If a file is specified, it must be located in the sketch&#39;s\n&quot;data&quot; folder. The filename parameter can also be a URL to a file found\nonline. By default, the file is assumed to be comma-separated (in CSV\nformat). Table only looks for a header row if the &#39;header&#39; option is\nincluded.</p>\n\n<p>Possible options include:\n<ul>\n<li>csv - parse the table as comma-separated values</li>\n<li>tsv - parse the table as tab-separated values</li>\n<li>header - this table has a header (title) row</li>\n</ul>\n</p>\n\n<p>When passing in multiple options, pass them in as separate parameters,\nseperated by commas. For example:\n<br><br>\n<code>\nloadTable(&#39;my_csv_file.csv&#39;, &#39;csv&#39;, &#39;header&#39;);\n</code>\n</p>\n\n<p> All files loaded and saved use UTF-8 encoding.</p>\n\n<p>This method is asynchronous, meaning it may not finish before the next\nline in your sketch is executed. Calling <a href="#/p5/loadTable">loadTable()</a> inside <a href="#/p5/preload">preload()</a>\nguarantees to complete the operation before <a href="#/p5/setup">setup()</a> and <a href="#/p5/draw">draw()</a> are called.\n<p>Outside of <a href="#/p5/preload">preload()</a>, you may supply a callback function to handle the\nobject:</p>\n</p>\n\n<p>This method is suitable for fetching files up to size of 64MB.</p>\n',
              itemtype: "method",
              name: "loadTable",
              return: {
                description: '<a href="#/p5.Table">Table</a> object containing data',
                type: "Object"
              },
              example: ['\n<div class=\'norender\'>\n<code>\n// Given the following CSV file called "mammals.csv"\n// located in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value "csv"\n  //and has a header specifying the columns labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n  //the file can be remote\n  //table = loadTable("http://p5js.org/reference/assets/mammals.csv",\n  //                  "csv", "header");\n}\n\nfunction setup() {\n  //count the columns\n  print(table.getRowCount() + \' total rows in table\');\n  print(table.getColumnCount() + \' total columns in table\');\n\n  print(table.getColumn(\'name\'));\n  //["Goat", "Leopard", "Zebra"]\n\n  //cycle through the table\n  for (let r = 0; r < table.getRowCount(); r++)\n    for (let c = 0; c < table.getColumnCount(); c++) {\n      print(table.getString(r, c));\n    }\n}\n</code>\n</div>'],
              alt: 'randomly generated text from a file, for example "i smell like butter"\nrandomly generated text from a file, for example "i have three feet"',
              class: "p5",
              module: "IO",
              submodule: "Input",
              overloads: [{
                line: 293,
                params: [{
                  name: "filename",
                  description: "<p>name of the file or URL to load</p>\n",
                  type: "String"
                }, {
                  name: "options",
                  description: "<p>&quot;header&quot; &quot;csv&quot; &quot;tsv&quot;</p>\n",
                  type: "String"
                }, {
                  name: "callback",
                  description: '<p>function to be executed after\n                                    <a href="#/p5/loadTable">loadTable()</a> completes. On success, the\n                                    <a href="#/p5.Table">Table</a> object is passed in as the\n                                    first argument.</p>\n',
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "<p>function to be executed if\n                                    there is an error, response is passed\n                                    in as first argument</p>\n",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: '<a href="#/p5.Table">Table</a> object containing data',
                  type: "Object"
                }
              }, {
                line: 383,
                params: [{
                  name: "filename",
                  description: "",
                  type: "String"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Object"
                }
              }]
            }, {
              file: "src/io/files.js",
              line: 603,
              description: '<p>Reads the contents of a file and creates an XML object with its values.\nIf the name of the file is used as the parameter, as in the above example,\nthe file must be located in the sketch directory/folder.</p>\n<p>Alternatively, the file maybe be loaded from anywhere on the local\ncomputer using an absolute path (something that starts with / on Unix and\nLinux, or a drive letter on Windows), or the filename parameter can be a\nURL for a file found on a network.</p>\n<p>This method is asynchronous, meaning it may not finish before the next\nline in your sketch is executed. Calling <a href="#/p5/loadXML">loadXML()</a> inside <a href="#/p5/preload">preload()</a>\nguarantees to complete the operation before <a href="#/p5/setup">setup()</a> and <a href="#/p5/draw">draw()</a> are called.</p>\n<p>Outside of <a href="#/p5/preload">preload()</a>, you may supply a callback function to handle the\nobject.</p>\n<p>This method is suitable for fetching files up to size of 64MB.</p>\n',
              itemtype: "method",
              name: "loadXML",
              params: [{
                name: "filename",
                description: "<p>name of the file or URL to load</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: '<p>function to be executed after <a href="#/p5/loadXML">loadXML()</a>\n                              completes, XML object is passed in as\n                              first argument</p>\n',
                type: "Function",
                optional: !0
              }, {
                name: "errorCallback",
                description: "<p>function to be executed if\n                              there is an error, response is passed\n                              in as first argument</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: "XML object containing data",
                type: "Object"
              },
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let children = xml.getChildren(\'animal\');\n\n  for (let i = 0; i < children.length; i++) {\n    let id = children[i].getNum(\'id\');\n    let coloring = children[i].getString(\'species\');\n    let name = children[i].getContent();\n    print(id + \', \' + coloring + \', \' + name);\n  }\n}\n\n// Sketch prints:\n// 0, Capra hircus, Goat\n// 1, Panthera pardus, Leopard\n// 2, Equus zebra, Zebra\n</code></div>'],
              alt: "no image displayed",
              class: "p5",
              module: "IO",
              submodule: "Input"
            }, {
              file: "src/io/files.js",
              line: 714,
              description: "<p>This method is suitable for fetching files up to size of 64MB.</p>\n",
              itemtype: "method",
              name: "loadBytes",
              params: [{
                name: "file",
                description: "<p>name of the file or URL to load</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: '<p>function to be executed after <a href="#/p5/loadBytes">loadBytes()</a>\n                                   completes</p>\n',
                type: "Function",
                optional: !0
              }, {
                name: "errorCallback",
                description: "<p>function to be executed if there\n                                   is an error</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: "an object whose 'bytes' property will be the loaded buffer",
                type: "Object"
              },
              example: ["\n<div class='norender'><code>\nlet data;\n\nfunction preload() {\n  data = loadBytes('assets/mammals.xml');\n}\n\nfunction setup() {\n  for (let i = 0; i < 5; i++) {\n    console.log(data.bytes[i].toString(16));\n  }\n}\n</code></div>"],
              alt: "no image displayed",
              class: "p5",
              module: "IO",
              submodule: "Input"
            }, {
              file: "src/io/files.js",
              line: 774,
              description: "<p>Method for executing an HTTP GET request. If data type is not specified,\np5 will try to guess based on the URL, defaulting to text. This is equivalent to\ncalling <code>httpDo(path, &#39;GET&#39;)</code>. The &#39;binary&#39; datatype will return\na Blob object, and the &#39;arrayBuffer&#39; datatype will return an ArrayBuffer\nwhich can be used to initialize typed arrays (such as Uint8Array).</p>\n",
              itemtype: "method",
              name: "httpGet",
              return: {
                description: "A promise that resolves with the data when the operation\n                  completes successfully or rejects with the error after\n                  one occurs.",
                type: "Promise"
              },
              example: ["\n<div class='norender'><code>\n// Examples use USGS Earthquake API:\n//   https://earthquake.usgs.gov/fdsnws/event/1/#methods\nlet earthquakes;\nfunction preload() {\n  // Get the most recent earthquake in the database\n  let url =\n   'https://earthquake.usgs.gov/fdsnws/event/1/query?' +\n    'format=geojson&limit=1&orderby=time';\n  httpGet(url, 'jsonp', false, function(response) {\n    // when the HTTP request completes, populate the variable that holds the\n    // earthquake data used in the visualization.\n    earthquakes = response;\n  });\n}\n\nfunction draw() {\n  if (!earthquakes) {\n    // Wait until the earthquake data has loaded before drawing.\n    return;\n  }\n  background(200);\n  // Get the magnitude and name of the earthquake out of the loaded JSON\n  let earthquakeMag = earthquakes.features[0].properties.mag;\n  let earthquakeName = earthquakes.features[0].properties.place;\n  ellipse(width / 2, height / 2, earthquakeMag * 10, earthquakeMag * 10);\n  textAlign(CENTER);\n  text(earthquakeName, 0, height - 30, width, 30);\n  noLoop();\n}\n</code></div>"],
              class: "p5",
              module: "IO",
              submodule: "Input",
              overloads: [{
                line: 774,
                params: [{
                  name: "path",
                  description: "<p>name of the file or url to load</p>\n",
                  type: "String"
                }, {
                  name: "datatype",
                  description: "<p>&quot;json&quot;, &quot;jsonp&quot;, &quot;binary&quot;, &quot;arrayBuffer&quot;,\n                                   &quot;xml&quot;, or &quot;text&quot;</p>\n",
                  type: "String",
                  optional: !0
                }, {
                  name: "data",
                  description: "<p>param data passed sent with request</p>\n",
                  type: "Object|Boolean",
                  optional: !0
                }, {
                  name: "callback",
                  description: '<p>function to be executed after\n                                   <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in\n                                   as first argument</p>\n',
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "A promise that resolves with the data when the operation\n                  completes successfully or rejects with the error after\n                  one occurs.",
                  type: "Promise"
                }
              }, {
                line: 828,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "data",
                  description: "",
                  type: "Object|Boolean"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Promise"
                }
              }, {
                line: 836,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function"
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Promise"
                }
              }]
            }, {
              file: "src/io/files.js",
              line: 851,
              description: "<p>Method for executing an HTTP POST request. If data type is not specified,\np5 will try to guess based on the URL, defaulting to text. This is equivalent to\ncalling <code>httpDo(path, &#39;POST&#39;)</code>.</p>\n",
              itemtype: "method",
              name: "httpPost",
              return: {
                description: "A promise that resolves with the data when the operation\n                  completes successfully or rejects with the error after\n                  one occurs.",
                type: "Promise"
              },
              example: ["\n<div>\n<code>\n// Examples use jsonplaceholder.typicode.com for a Mock Data API\n\nlet url = 'https://jsonplaceholder.typicode.com/posts';\nlet postData = { userId: 1, title: 'p5 Clicked!', body: 'p5.js is way cool.' };\n\nfunction setup() {\n  createCanvas(800, 800);\n}\n\nfunction mousePressed() {\n  // Pick new random color values\n  let r = random(255);\n  let g = random(255);\n  let b = random(255);\n\n  httpPost(url, 'json', postData, function(result) {\n    strokeWeight(2);\n    stroke(r, g, b);\n    fill(r, g, b, 127);\n    ellipse(mouseX, mouseY, 200, 200);\n    text(result.body, mouseX, mouseY);\n  });\n}\n</code>\n</div>\n\n\n<div><code>\nlet url = 'https://invalidURL'; // A bad URL that will cause errors\nlet postData = { title: 'p5 Clicked!', body: 'p5.js is way cool.' };\n\nfunction setup() {\n  createCanvas(800, 800);\n}\n\nfunction mousePressed() {\n  // Pick new random color values\n  let r = random(255);\n  let g = random(255);\n  let b = random(255);\n\n  httpPost(\n    url,\n    'json',\n    postData,\n    function(result) {\n      // ... won't be called\n    },\n    function(error) {\n      strokeWeight(2);\n      stroke(r, g, b);\n      fill(r, g, b, 127);\n      text(error.toString(), mouseX, mouseY);\n    }\n  );\n}\n</code></div>\n"],
              class: "p5",
              module: "IO",
              submodule: "Input",
              overloads: [{
                line: 851,
                params: [{
                  name: "path",
                  description: "<p>name of the file or url to load</p>\n",
                  type: "String"
                }, {
                  name: "datatype",
                  description: '<p>&quot;json&quot;, &quot;jsonp&quot;, &quot;xml&quot;, or &quot;text&quot;.\n                                   If omitted, <a href="#/p5/httpPost">httpPost()</a> will guess.</p>\n',
                  type: "String",
                  optional: !0
                }, {
                  name: "data",
                  description: "<p>param data passed sent with request</p>\n",
                  type: "Object|Boolean",
                  optional: !0
                }, {
                  name: "callback",
                  description: '<p>function to be executed after\n                                   <a href="#/p5/httpPost">httpPost()</a> completes, data is passed in\n                                   as first argument</p>\n',
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "A promise that resolves with the data when the operation\n                  completes successfully or rejects with the error after\n                  one occurs.",
                  type: "Promise"
                }
              }, {
                line: 933,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "data",
                  description: "",
                  type: "Object|Boolean"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Promise"
                }
              }, {
                line: 941,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function"
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Promise"
                }
              }]
            }, {
              file: "src/io/files.js",
              line: 956,
              description: "<p>Method for executing an HTTP request. If data type is not specified,\np5 will try to guess based on the URL, defaulting to text.<br><br>\nFor more advanced use, you may also pass in the path as the first argument\nand a object as the second argument, the signature follows the one specified\nin the Fetch API specification.\nThis method is suitable for fetching files up to size of 64MB when &quot;GET&quot; is used.</p>\n",
              itemtype: "method",
              name: "httpDo",
              return: {
                description: "A promise that resolves with the data when the operation\n                  completes successfully or rejects with the error after\n                  one occurs.",
                type: "Promise"
              },
              example: ["\n<div>\n<code>\n// Examples use USGS Earthquake API:\n// https://earthquake.usgs.gov/fdsnws/event/1/#methods\n\n// displays an animation of all USGS earthquakes\nlet earthquakes;\nlet eqFeatureIndex = 0;\n\nfunction preload() {\n  let url = 'https://earthquake.usgs.gov/fdsnws/event/1/query?format=geojson';\n  httpDo(\n    url,\n    {\n      method: 'GET',\n      // Other Request options, like special headers for apis\n      headers: { authorization: 'Bearer secretKey' }\n    },\n    function(res) {\n      earthquakes = res;\n    }\n  );\n}\n\nfunction draw() {\n  // wait until the data is loaded\n  if (!earthquakes || !earthquakes.features[eqFeatureIndex]) {\n    return;\n  }\n  clear();\n\n  let feature = earthquakes.features[eqFeatureIndex];\n  let mag = feature.properties.mag;\n  let rad = mag / 11 * ((width + height) / 2);\n  fill(255, 0, 0, 100);\n  ellipse(width / 2 + random(-2, 2), height / 2 + random(-2, 2), rad, rad);\n\n  if (eqFeatureIndex >= earthquakes.features.length) {\n    eqFeatureIndex = 0;\n  } else {\n    eqFeatureIndex += 1;\n  }\n}\n</code>\n</div>"],
              class: "p5",
              module: "IO",
              submodule: "Input",
              overloads: [{
                line: 956,
                params: [{
                  name: "path",
                  description: "<p>name of the file or url to load</p>\n",
                  type: "String"
                }, {
                  name: "method",
                  description: "<p>either &quot;GET&quot;, &quot;POST&quot;, or &quot;PUT&quot;,\n                                   defaults to &quot;GET&quot;</p>\n",
                  type: "String",
                  optional: !0
                }, {
                  name: "datatype",
                  description: "<p>&quot;json&quot;, &quot;jsonp&quot;, &quot;xml&quot;, or &quot;text&quot;</p>\n",
                  type: "String",
                  optional: !0
                }, {
                  name: "data",
                  description: "<p>param data passed sent with request</p>\n",
                  type: "Object",
                  optional: !0
                }, {
                  name: "callback",
                  description: '<p>function to be executed after\n                                   <a href="#/p5/httpGet">httpGet()</a> completes, data is passed in\n                                   as first argument</p>\n',
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "<p>function to be executed if\n                                   there is an error, response is passed\n                                   in as first argument</p>\n",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "A promise that resolves with the data when the operation\n                  completes successfully or rejects with the error after\n                  one occurs.",
                  type: "Promise"
                }
              }, {
                line: 1027,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "options",
                  description: '<p>Request object options as documented in the\n                                   &quot;fetch&quot; API\n<a href="https://developer.mozilla.org/en/docs/Web/API/Fetch_API">reference</a></p>\n',
                  type: "Object"
                }, {
                  name: "callback",
                  description: "",
                  type: "Function",
                  optional: !0
                }, {
                  name: "errorCallback",
                  description: "",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "Promise"
                }
              }]
            }, {
              file: "src/io/files.js",
              line: 1183,
              itemtype: "method",
              name: "createWriter",
              params: [{
                name: "name",
                description: "<p>name of the file to be created</p>\n",
                type: "String"
              }, {
                name: "extension",
                description: "",
                type: "String",
                optional: !0
              }],
              return: {
                description: "",
                type: "p5.PrintWriter"
              },
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100);\n  background(200);\n  text('click here to save', 10, 10, 70, 80);\n}\n\nfunction mousePressed() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    var writer = createWriter('squares.txt');\n    for (let i = 0; i < 10; i++) {\n      writer.print(i * i);\n    }\n    writer.close();\n    writer.clear();\n  }\n}\n</code>\n</div>"],
              class: "p5",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1238,
              description: "<p>Writes data to the PrintWriter stream</p>\n",
              itemtype: "method",
              name: "write",
              params: [{
                name: "data",
                description: "<p>all data to be written by the PrintWriter</p>\n",
                type: "Array"
              }],
              example: ["\n<div class=\"norender notest\">\n<code>\n// creates a file called 'newFile.txt'\nlet writer = createWriter('newFile.txt');\n// write 'Hello world!'' to the file\nwriter.write(['Hello world!']);\n// close the PrintWriter and save the file\nwriter.close();\n</code>\n</div>\n<div class='norender notest'>\n<code>\n// creates a file called 'newFile2.txt'\nlet writer = createWriter('newFile2.txt');\n// write 'apples,bananas,123' to the file\nwriter.write(['apples', 'bananas', 123]);\n// close the PrintWriter and save the file\nwriter.close();\n</code>\n</div>\n<div class='norender notest'>\n<code>\n// creates a file called 'newFile3.txt'\nlet writer = createWriter('newFile3.txt');\n// write 'My name is: Teddy' to the file\nwriter.write('My name is:');\nwriter.write(' Teddy');\n// close the PrintWriter and save the file\nwriter.close();\n</code>\n</div>"],
              class: "p5.PrintWriter",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1278,
              description: "<p>Writes data to the PrintWriter stream, and adds a new line at the end</p>\n",
              itemtype: "method",
              name: "print",
              params: [{
                name: "data",
                description: "<p>all data to be printed by the PrintWriter</p>\n",
                type: "Array"
              }],
              example: ["\n<div class='norender notest'>\n<code>\n// creates a file called 'newFile.txt'\nlet writer = createWriter('newFile.txt');\n// creates a file containing\n//  My name is:\n//  Teddy\nwriter.print('My name is:');\nwriter.print('Teddy');\n// close the PrintWriter and save the file\nwriter.close();\n</code>\n</div>\n<div class='norender notest'>\n<code>\nlet writer;\n\nfunction setup() {\n  createCanvas(400, 400);\n  // create a PrintWriter\n  writer = createWriter('newFile.txt');\n}\n\nfunction draw() {\n  // print all mouseX and mouseY coordinates to the stream\n  writer.print([mouseX, mouseY]);\n}\n\nfunction mouseClicked() {\n  // close the PrintWriter and save the file\n  writer.close();\n}\n</code>\n</div>"],
              class: "p5.PrintWriter",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1321,
              description: "<p>Clears the data already written to the PrintWriter object</p>\n",
              itemtype: "method",
              name: "clear",
              example: ["\n<div class =\"norender notest\"><code>\n// create writer object\nlet writer = createWriter('newFile.txt');\nwriter.write(['clear me']);\n// clear writer object here\nwriter.clear();\n// close writer\nwriter.close();\n</code></div>\n"],
              class: "p5.PrintWriter",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1339,
              description: "<p>Closes the PrintWriter</p>\n",
              itemtype: "method",
              name: "close",
              example: ["\n<div class=\"norender notest\">\n<code>\n// create a file called 'newFile.txt'\nlet writer = createWriter('newFile.txt');\n// close the PrintWriter and save the file\nwriter.close();\n</code>\n</div>\n<div class='norender notest'>\n<code>\n// create a file called 'newFile2.txt'\nlet writer = createWriter('newFile2.txt');\n// write some data to the file\nwriter.write([100, 101, 102]);\n// close the PrintWriter and save the file\nwriter.close();\n</code>\n</div>"],
              class: "p5.PrintWriter",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1388,
              description: "<p>Save an image, text, json, csv, wav, or html. Prompts download to\nthe client&#39;s computer. <b>Note that it is not recommended to call <a href=\"#/p5/save\">save()</a>\nwithin draw if it&#39;s looping, as the <a href=\"#/p5/save\">save()</a> function will open a new save\ndialog every frame.</b></p>\n<p>The default behavior is to save the canvas as an image. You can\noptionally specify a filename.\nFor example:</p>\n <pre class='language-javascript'><code>\n save();\n save(&#39;myCanvas.jpg&#39;); // save a specific canvas with a filename\n </code></pre>\n\n<p>Alternately, the first parameter can be a pointer to a canvas\n<a href=\"#/p5.Element\">p5.Element</a>, an Array of Strings,\nan Array of JSON, a JSON object, a <a href=\"#/p5.Table\">p5.Table</a>, a <a href=\"#/p5.Image\">p5.Image</a>, or a\np5.SoundFile (requires p5.sound). The second parameter is a filename\n(including extension). The third parameter is for options specific\nto this type of object. This method will save a file that fits the\ngiven parameters. For example:</p>\n\n <pre class='language-javascript'><code>\n // Saves canvas as an image\n save('myCanvas.jpg');\n\n // Saves pImage as a png image\n let img = createImage(10, 10);\n save(img, 'my.png');\n\n // Saves canvas as an image\n let cnv = createCanvas(100, 100);\n save(cnv, 'myCanvas.jpg');\n\n // Saves p5.Renderer object as an image\n let gb = createGraphics(100, 100);\n save(gb, 'myGraphics.jpg');\n\n let myTable = new p5.Table();\n\n // Saves table as html file\n save(myTable, 'myTable.html');\n\n // Comma Separated Values\n save(myTable, 'myTable.csv');\n\n // Tab Separated Values\n save(myTable, 'myTable.tsv');\n\n let myJSON = { a: 1, b: true };\n\n // Saves pretty JSON\n save(myJSON, 'my.json');\n\n // Optimizes JSON filesize\n save(myJSON, 'my.json', true);\n\n // Saves array of strings to a text file with line breaks after each item\n let arrayOfStrings = ['a', 'b'];\n save(arrayOfStrings, 'my.txt');\n </code></pre>",
              itemtype: "method",
              name: "save",
              params: [{
                name: "objectOrFilename",
                description: "<p>If filename is provided, will\n                                           save canvas as an image with\n                                           either png or jpg extension\n                                           depending on the filename.\n                                           If object is provided, will\n                                           save depending on the object\n                                           and filename (see examples\n                                           above).</p>\n",
                type: "Object|String",
                optional: !0
              }, {
                name: "filename",
                description: "<p>If an object is provided as the first\n                             parameter, then the second parameter\n                             indicates the filename,\n                             and should include an appropriate\n                             file extension (see examples above).</p>\n",
                type: "String",
                optional: !0
              }, {
                name: "options",
                description: "<p>Additional options depend on\n                          filetype. For example, when saving JSON,\n                          <code>true</code> indicates that the\n                          output will be optimized for filesize,\n                          rather than readability.</p>\n",
                type: "Boolean|String",
                optional: !0
              }],
              class: "p5",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1516,
              description: "<p>Writes the contents of an Array or a JSON object to a .json file.\nThe file saving process and location of the saved file will\nvary between web browsers.</p>\n",
              itemtype: "method",
              name: "saveJSON",
              params: [{
                name: "json",
                description: "",
                type: "Array|Object"
              }, {
                name: "filename",
                description: "",
                type: "String"
              }, {
                name: "optimize",
                description: "<p>If true, removes line breaks\n                               and spaces from the output\n                               file to optimize filesize\n                               (but not readability).</p>\n",
                type: "Boolean",
                optional: !0
              }],
              example: ['\n <div><code>\n let json = {}; // new  JSON Object\n\n json.id = 0;\n json.species = \'Panthera leo\';\n json.name = \'Lion\';\n\n function setup() {\n createCanvas(100, 100);\n background(200);\n text(\'click here to save\', 10, 10, 70, 80);\n }\n\n function mousePressed() {\n if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n   saveJSON(json, \'lion.json\');\n }\n }\n\n // saves the following to a file called "lion.json":\n // {\n //   "id": 0,\n //   "species": "Panthera leo",\n //   "name": "Lion"\n // }\n </code></div>'],
              alt: "no image displayed",
              class: "p5",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1574,
              description: "<p>Writes an array of Strings to a text file, one line per String.\nThe file saving process and location of the saved file will\nvary between web browsers.</p>\n",
              itemtype: "method",
              name: "saveStrings",
              params: [{
                name: "list",
                description: "<p>string array to be written</p>\n",
                type: "String[]"
              }, {
                name: "filename",
                description: "<p>filename for output</p>\n",
                type: "String"
              }, {
                name: "extension",
                description: "<p>the filename&#39;s extension</p>\n",
                type: "String",
                optional: !0
              }],
              example: ["\n <div><code>\n let words = 'apple bear cat dog';\n\n // .split() outputs an Array\n let list = split(words, ' ');\n\n function setup() {\n createCanvas(100, 100);\n background(200);\n text('click here to save', 10, 10, 70, 80);\n }\n\n function mousePressed() {\n if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n   saveStrings(list, 'nouns.txt');\n }\n }\n\n // Saves the following to a file called 'nouns.txt':\n //\n // apple\n // bear\n // cat\n // dog\n </code></div>"],
              alt: "no image displayed",
              class: "p5",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/files.js",
              line: 1642,
              description: '<p>Writes the contents of a <a href="#/p5.Table">Table</a> object to a file. Defaults to a\ntext file with comma-separated-values (&#39;csv&#39;) but can also\nuse tab separation (&#39;tsv&#39;), or generate an HTML table (&#39;html&#39;).\nThe file saving process and location of the saved file will\nvary between web browsers.</p>\n',
              itemtype: "method",
              name: "saveTable",
              params: [{
                name: "Table",
                description: '<p>the <a href="#/p5.Table">Table</a> object to save to a file</p>\n',
                type: "p5.Table"
              }, {
                name: "filename",
                description: "<p>the filename to which the Table should be saved</p>\n",
                type: "String"
              }, {
                name: "options",
                description: "<p>can be one of &quot;tsv&quot;, &quot;csv&quot;, or &quot;html&quot;</p>\n",
                type: "String",
                optional: !0
              }],
              example: ["\n<div><code>\n let table;\n\n function setup() {\n table = new p5.Table();\n\n table.addColumn('id');\n table.addColumn('species');\n table.addColumn('name');\n\n let newRow = table.addRow();\n newRow.setNum('id', table.getRowCount() - 1);\n newRow.setString('species', 'Panthera leo');\n newRow.setString('name', 'Lion');\n\n // To save, un-comment next line then click 'run'\n // saveTable(table, 'new.csv');\n }\n\n // Saves the following to a file called 'new.csv':\n // id,species,name\n // 0,Panthera leo,Lion\n </code></div>"],
              alt: "no image displayed",
              class: "p5",
              module: "IO",
              submodule: "Output"
            }, {
              file: "src/io/p5.Table.js",
              line: 11,
              description: '<p>Table Options</p>\n<p>Generic class for handling tabular data, typically from a\nCSV, TSV, or other sort of spreadsheet file.</p>\n<p>CSV files are\n<a href="http://en.wikipedia.org/wiki/Comma-separated_values">\ncomma separated values</a>, often with the data in quotes. TSV\nfiles use tabs as separators, and usually don&#39;t bother with the\nquotes.</p>\n<p>File names should end with .csv if they&#39;re comma separated.</p>\n<p>A rough &quot;spec&quot; for CSV can be found\n<a href="http://tools.ietf.org/html/rfc4180">here</a>.</p>\n<p>To load files, use the <a href="#/p5/loadTable">loadTable</a> method.</p>\n<p>To save tables to your computer, use the <a href="#/p5/save">save</a> method\n or the <a href="#/p5/saveTable">saveTable</a> method.</p>\n\n<p>Possible options include:</p>\n<ul>\n<li>csv - parse the table as comma-separated values\n<li>tsv - parse the table as tab-separated values\n<li>header - this table has a header (title) row\n</ul>',
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 45,
              itemtype: "property",
              name: "columns",
              type: "String[]",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 50,
              itemtype: "property",
              name: "rows",
              type: "p5.TableRow[]",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 56,
              description: '<p>Use <a href="#/p5/addRow">addRow()</a> to add a new row of data to a <a href="#/p5.Table">p5.Table</a> object. By default,\nan empty row is created. Typically, you would store a reference to\nthe new row in a TableRow object (see newRow in the example above),\nand then set individual values using <a href="#/p5/set">set()</a>.</p>\n<p>If a <a href="#/p5.TableRow">p5.TableRow</a> object is included as a parameter, then that row is\nduplicated and added to the table.</p>\n',
              itemtype: "method",
              name: "addRow",
              params: [{
                name: "row",
                description: "<p>row to be added to the table</p>\n",
                type: "p5.TableRow",
                optional: !0
              }],
              return: {
                description: "the row that was added",
                type: "p5.TableRow"
              },
              example: ["\n <div class=\"norender\">\n <code>\n // Given the CSV file \"mammals.csv\"\n // in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n //add a row\n let newRow = table.addRow();\n newRow.setString('id', table.getRowCount() - 1);\n newRow.setString('species', 'Canis Lupus');\n newRow.setString('name', 'Wolf');\n\n //print the results\n for (let r = 0; r < table.getRowCount(); r++)\n   for (let c = 0; c < table.getColumnCount(); c++)\n     print(table.getString(r, c));\n }\n </code>\n </div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 120,
              description: "<p>Removes a row from the table object.</p>\n",
              itemtype: "method",
              name: "removeRow",
              params: [{
                name: "id",
                description: "<p>ID number of the row to remove</p>\n",
                type: "Integer"
              }],
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value "csv"\n  //and has a header specifying the columns labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  //remove the first row\n  table.removeRow(0);\n\n  //print the results\n  for (let r = 0; r < table.getRowCount(); r++)\n    for (let c = 0; c < table.getColumnCount(); c++)\n      print(table.getString(r, c));\n}\n</code>\n</div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 168,
              description: '<p>Returns a reference to the specified <a href="#/p5.TableRow">p5.TableRow</a>. The reference\ncan then be used to get and set values of the selected row.</p>\n',
              itemtype: "method",
              name: "getRow",
              params: [{
                name: "rowID",
                description: "<p>ID number of the row to get</p>\n",
                type: "Integer"
              }],
              return: {
                description: '<a href="#/p5.TableRow">p5.TableRow</a> object',
                type: "p5.TableRow"
              },
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value "csv"\n  //and has a header specifying the columns labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  let row = table.getRow(1);\n  //print it column by column\n  //note: a row is an object, not an array\n  for (let c = 0; c < table.getColumnCount(); c++) {\n    print(row.getString(c));\n  }\n}\n</code>\n</div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 214,
              description: '<p>Gets all rows from the table. Returns an array of <a href="#/p5.TableRow">p5.TableRow</a>s.</p>\n',
              itemtype: "method",
              name: "getRows",
              return: {
                description: 'Array of <a href="#/p5.TableRow">p5.TableRow</a>s',
                type: "p5.TableRow[]"
              },
              example: ["\n <div class=\"norender\">\n <code>\n // Given the CSV file \"mammals.csv\"\n // in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n let rows = table.getRows();\n\n //warning: rows is an array of objects\n for (let r = 0; r < rows.length; r++) {\n   rows[r].set('name', 'Unicorn');\n }\n\n //print the results\n for (let r = 0; r < table.getRowCount(); r++)\n   for (let c = 0; c < table.getColumnCount(); c++)\n     print(table.getString(r, c));\n }\n </code>\n </div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 263,
              description: "<p>Finds the first row in the Table that contains the value\nprovided, and returns a reference to that row. Even if\nmultiple rows are possible matches, only the first matching\nrow is returned. The column to search may be specified by\neither its ID or title.</p>\n",
              itemtype: "method",
              name: "findRow",
              params: [{
                name: "value",
                description: "<p>The value to match</p>\n",
                type: "String"
              }, {
                name: "column",
                description: "<p>ID number or title of the\n                               column to search</p>\n",
                type: "Integer|String"
              }],
              return: {
                description: "",
                type: "p5.TableRow"
              },
              example: ["\n <div class=\"norender\">\n <code>\n // Given the CSV file \"mammals.csv\"\n // in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n //find the animal named zebra\n let row = table.findRow('Zebra', 'name');\n //find the corresponding species\n print(row.getString('species'));\n }\n </code>\n </div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 328,
              description: "<p>Finds the rows in the Table that contain the value\nprovided, and returns references to those rows. Returns an\nArray, so for must be used to iterate through all the rows,\nas shown in the example above. The column to search may be\nspecified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "findRows",
              params: [{
                name: "value",
                description: "<p>The value to match</p>\n",
                type: "String"
              }, {
                name: "column",
                description: "<p>ID number or title of the\n                               column to search</p>\n",
                type: "Integer|String"
              }],
              return: {
                description: "An Array of TableRow objects",
                type: "p5.TableRow[]"
              },
              example: ["\n <div class=\"norender\">\n <code>\n // Given the CSV file \"mammals.csv\"\n // in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n //add another goat\n let newRow = table.addRow();\n newRow.setString('id', table.getRowCount() - 1);\n newRow.setString('species', 'Scape Goat');\n newRow.setString('name', 'Goat');\n\n //find the rows containing animals named Goat\n let rows = table.findRows('Goat', 'name');\n print(rows.length + ' Goats found');\n }\n </code>\n </div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 397,
              description: "<p>Finds the first row in the Table that matches the regular\nexpression provided, and returns a reference to that row.\nEven if multiple rows are possible matches, only the first\nmatching row is returned. The column to search may be\nspecified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "matchRow",
              params: [{
                name: "regexp",
                description: "<p>The regular expression to match</p>\n",
                type: "String|RegExp"
              }, {
                name: "column",
                description: "<p>The column ID (number) or\n                                 title (string)</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "TableRow object",
                type: "p5.TableRow"
              },
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value "csv"\n  //and has a header specifying the columns labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  //Search using specified regex on a given column, return TableRow object\n  let mammal = table.matchRow(new RegExp(\'ant\'), 1);\n  print(mammal.getString(1));\n  //Output "Panthera pardus"\n}\n</code>\n</div>\n'],
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 456,
              description: "<p>Finds the rows in the Table that match the regular expression provided,\nand returns references to those rows. Returns an array, so for must be\nused to iterate through all the rows, as shown in the example. The\ncolumn to search may be specified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "matchRows",
              params: [{
                name: "regexp",
                description: "<p>The regular expression to match</p>\n",
                type: "String"
              }, {
                name: "column",
                description: "<p>The column ID (number) or\n                                 title (string)</p>\n",
                type: "String|Integer",
                optional: !0
              }],
              return: {
                description: "An Array of TableRow objects",
                type: "p5.TableRow[]"
              },
              example: ["\n<div class=\"norender\">\n<code>\nlet table;\n\nfunction setup() {\n  table = new p5.Table();\n\n  table.addColumn('name');\n  table.addColumn('type');\n\n  let newRow = table.addRow();\n  newRow.setString('name', 'Lion');\n  newRow.setString('type', 'Mammal');\n\n  newRow = table.addRow();\n  newRow.setString('name', 'Snake');\n  newRow.setString('type', 'Reptile');\n\n  newRow = table.addRow();\n  newRow.setString('name', 'Mosquito');\n  newRow.setString('type', 'Insect');\n\n  newRow = table.addRow();\n  newRow.setString('name', 'Lizard');\n  newRow.setString('type', 'Reptile');\n\n  let rows = table.matchRows('R.*', 'type');\n  for (let i = 0; i < rows.length; i++) {\n    print(rows[i].getString('name') + ': ' + rows[i].getString('type'));\n  }\n}\n// Sketch prints:\n// Snake: Reptile\n// Lizard: Reptile\n</code>\n</div>"],
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 523,
              description: "<p>Retrieves all values in the specified column, and returns them\nas an array. The column may be specified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "getColumn",
              params: [{
                name: "column",
                description: "<p>String or Number of the column to return</p>\n",
                type: "String|Number"
              }],
              return: {
                description: "Array of column values",
                type: "Array"
              },
              example: ['\n <div class="norender">\n <code>\n // Given the CSV file "mammals.csv"\n // in the project\'s "assets" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value "csv"\n //and has a header specifying the columns labels\n table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n }\n\n function setup() {\n //getColumn returns an array that can be printed directly\n print(table.getColumn(\'species\'));\n //outputs ["Capra hircus", "Panthera pardus", "Equus zebra"]\n }\n </code>\n </div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 576,
              description: "<p>Removes all rows from a Table. While all rows are removed,\ncolumns and column titles are maintained.</p>\n",
              itemtype: "method",
              name: "clearRows",
              example: ["\n <div class=\"norender\">\n <code>\n // Given the CSV file \"mammals.csv\"\n // in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n table.clearRows();\n print(table.getRowCount() + ' total rows in table');\n print(table.getColumnCount() + ' total columns in table');\n }\n </code>\n </div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 618,
              description: '<p>Use <a href="#/p5/addColumn">addColumn()</a> to add a new column to a <a href="#/p5.Table">Table</a> object.\nTypically, you will want to specify a title, so the column\nmay be easily referenced later by name. (If no title is\nspecified, the new column&#39;s title will be null.)</p>\n',
              itemtype: "method",
              name: "addColumn",
              params: [{
                name: "title",
                description: "<p>title of the given column</p>\n",
                type: "String",
                optional: !0
              }],
              example: ["\n <div class=\"norender\">\n <code>\n // Given the CSV file \"mammals.csv\"\n // in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n table.addColumn('carnivore');\n table.set(0, 'carnivore', 'no');\n table.set(1, 'carnivore', 'yes');\n table.set(2, 'carnivore', 'no');\n\n //print the results\n for (let r = 0; r < table.getRowCount(); r++)\n   for (let c = 0; c < table.getColumnCount(); c++)\n     print(table.getString(r, c));\n }\n </code>\n </div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 669,
              description: "<p>Returns the total number of columns in a Table.</p>\n",
              itemtype: "method",
              name: "getColumnCount",
              return: {
                description: "Number of columns in this table",
                type: "Integer"
              },
              example: ["\n <div>\n <code>\n // given the cvs file \"blobs.csv\" in /assets directory\n // ID, Name, Flavor, Shape, Color\n // Blob1, Blobby, Sweet, Blob, Pink\n // Blob2, Saddy, Savory, Blob, Blue\n\n let table;\n\n function preload() {\n table = loadTable('assets/blobs.csv');\n }\n\n function setup() {\n createCanvas(200, 100);\n textAlign(CENTER);\n background(255);\n }\n\n function draw() {\n let numOfColumn = table.getColumnCount();\n text('There are ' + numOfColumn + ' columns in the table.', 100, 50);\n }\n </code>\n </div>"],
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 705,
              description: "<p>Returns the total number of rows in a Table.</p>\n",
              itemtype: "method",
              name: "getRowCount",
              return: {
                description: "Number of rows in this table",
                type: "Integer"
              },
              example: ["\n <div>\n <code>\n // given the cvs file \"blobs.csv\" in /assets directory\n //\n // ID, Name, Flavor, Shape, Color\n // Blob1, Blobby, Sweet, Blob, Pink\n // Blob2, Saddy, Savory, Blob, Blue\n\n let table;\n\n function preload() {\n table = loadTable('assets/blobs.csv');\n }\n\n function setup() {\n createCanvas(200, 100);\n textAlign(CENTER);\n background(255);\n }\n\n function draw() {\n text('There are ' + table.getRowCount() + ' rows in the table.', 100, 50);\n }\n </code>\n </div>"],
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 741,
              description: "<p>Removes any of the specified characters (or &quot;tokens&quot;).</p>\n\n<p>If no column is specified, then the values in all columns and\nrows are processed. A specific column may be referenced by\neither its ID or title.</p>",
              itemtype: "method",
              name: "removeTokens",
              params: [{
                name: "chars",
                description: "<p>String listing characters to be removed</p>\n",
                type: "String"
              }, {
                name: "column",
                description: "<p>Column ID (number)\n                                 or name (string)</p>\n",
                type: "String|Integer",
                optional: !0
              }],
              example: ["\n <div class=\"norender\"><code>\n function setup() {\n let table = new p5.Table();\n\n table.addColumn('name');\n table.addColumn('type');\n\n let newRow = table.addRow();\n newRow.setString('name', '   $Lion  ,');\n newRow.setString('type', ',,,Mammal');\n\n newRow = table.addRow();\n newRow.setString('name', '$Snake  ');\n newRow.setString('type', ',,,Reptile');\n\n table.removeTokens(',$ ');\n print(table.getArray());\n }\n\n // prints:\n //  0  \"Lion\"   \"Mamal\"\n //  1  \"Snake\"  \"Reptile\"\n </code></div>"],
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 815,
              description: "<p>Trims leading and trailing whitespace, such as spaces and tabs,\nfrom String table values. If no column is specified, then the\nvalues in all columns and rows are trimmed. A specific column\nmay be referenced by either its ID or title.</p>\n",
              itemtype: "method",
              name: "trim",
              params: [{
                name: "column",
                description: "<p>Column ID (number)\n                                 or name (string)</p>\n",
                type: "String|Integer",
                optional: !0
              }],
              example: ["\n <div class=\"norender\"><code>\n function setup() {\n let table = new p5.Table();\n\n table.addColumn('name');\n table.addColumn('type');\n\n let newRow = table.addRow();\n newRow.setString('name', '   Lion  ,');\n newRow.setString('type', ' Mammal  ');\n\n newRow = table.addRow();\n newRow.setString('name', '  Snake  ');\n newRow.setString('type', '  Reptile  ');\n\n table.trim();\n print(table.getArray());\n }\n\n // prints:\n //  0  \"Lion\"   \"Mamal\"\n //  1  \"Snake\"  \"Reptile\"\n </code></div>"],
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 879,
              description: '<p>Use <a href="#/p5/removeColumn">removeColumn()</a> to remove an existing column from a Table\nobject. The column to be removed may be identified by either\nits title (a String) or its index value (an int).\nremoveColumn(0) would remove the first column, removeColumn(1)\nwould remove the second column, and so on.</p>\n',
              itemtype: "method",
              name: "removeColumn",
              params: [{
                name: "column",
                description: "<p>columnName (string) or ID (number)</p>\n",
                type: "String|Integer"
              }],
              example: ["\n <div class=\"norender\">\n <code>\n // Given the CSV file \"mammals.csv\"\n // in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n table.removeColumn('id');\n print(table.getColumnCount());\n }\n </code>\n </div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 944,
              description: "<p>Stores a value in the Table&#39;s specified row and column.\nThe row is specified by its ID, while the column may be specified\nby either its ID or title.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "row",
                description: "<p>row ID</p>\n",
                type: "Integer"
              }, {
                name: "column",
                description: "<p>column ID (Number)\n                              or title (String)</p>\n",
                type: "String|Integer"
              }, {
                name: "value",
                description: "<p>value to assign</p>\n",
                type: "String|Number"
              }],
              example: ["\n<div class=\"norender\">\n<code>\n// Given the CSV file \"mammals.csv\"\n// in the project's \"assets\" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value \"csv\"\n  //and has a header specifying the columns labels\n  table = loadTable('assets/mammals.csv', 'csv', 'header');\n}\n\nfunction setup() {\n  table.set(0, 'species', 'Canis Lupus');\n  table.set(0, 'name', 'Wolf');\n\n  //print the results\n  for (let r = 0; r < table.getRowCount(); r++)\n    for (let c = 0; c < table.getColumnCount(); c++)\n      print(table.getString(r, c));\n}\n</code>\n</div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 994,
              description: "<p>Stores a Float value in the Table&#39;s specified row and column.\nThe row is specified by its ID, while the column may be specified\nby either its ID or title.</p>\n",
              itemtype: "method",
              name: "setNum",
              params: [{
                name: "row",
                description: "<p>row ID</p>\n",
                type: "Integer"
              }, {
                name: "column",
                description: "<p>column ID (Number)\n                              or title (String)</p>\n",
                type: "String|Integer"
              }, {
                name: "value",
                description: "<p>value to assign</p>\n",
                type: "Number"
              }],
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value "csv"\n  //and has a header specifying the columns labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  table.setNum(1, \'id\', 1);\n\n  print(table.getColumn(0));\n  //["0", 1, "2"]\n}\n</code>\n</div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 1040,
              description: "<p>Stores a String value in the Table&#39;s specified row and column.\nThe row is specified by its ID, while the column may be specified\nby either its ID or title.</p>\n",
              itemtype: "method",
              name: "setString",
              params: [{
                name: "row",
                description: "<p>row ID</p>\n",
                type: "Integer"
              }, {
                name: "column",
                description: "<p>column ID (Number)\n                              or title (String)</p>\n",
                type: "String|Integer"
              }, {
                name: "value",
                description: "<p>value to assign</p>\n",
                type: "String"
              }],
              example: ["\n<div class=\"norender\"><code>\n// Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value \"csv\"\n  //and has a header specifying the columns labels\n  table = loadTable('assets/mammals.csv', 'csv', 'header');\n}\n\nfunction setup() {\n  //add a row\n  let newRow = table.addRow();\n  newRow.setString('id', table.getRowCount() - 1);\n  newRow.setString('species', 'Canis Lupus');\n  newRow.setString('name', 'Wolf');\n\n  print(table.getArray());\n}\n</code></div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 1085,
              description: "<p>Retrieves a value from the Table&#39;s specified row and column.\nThe row is specified by its ID, while the column may be specified by\neither its ID or title.</p>\n",
              itemtype: "method",
              name: "get",
              params: [{
                name: "row",
                description: "<p>row ID</p>\n",
                type: "Integer"
              }, {
                name: "column",
                description: "<p>columnName (string) or\n                                  ID (number)</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "",
                type: "String|Number"
              },
              example: ["\n<div class=\"norender\">\n<code>\n// Given the CSV file \"mammals.csv\"\n// in the project's \"assets\" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value \"csv\"\n  //and has a header specifying the columns labels\n  table = loadTable('assets/mammals.csv', 'csv', 'header');\n}\n\nfunction setup() {\n  print(table.get(0, 1));\n  //Capra hircus\n  print(table.get(0, 'species'));\n  //Capra hircus\n}\n</code>\n</div>"],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 1132,
              description: "<p>Retrieves a Float value from the Table&#39;s specified row and column.\nThe row is specified by its ID, while the column may be specified by\neither its ID or title.</p>\n",
              itemtype: "method",
              name: "getNum",
              params: [{
                name: "row",
                description: "<p>row ID</p>\n",
                type: "Integer"
              }, {
                name: "column",
                description: "<p>columnName (string) or\n                                  ID (number)</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "",
                type: "Number"
              },
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value "csv"\n  //and has a header specifying the columns labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  print(table.getNum(1, 0) + 100);\n  //id 1 + 100 = 101\n}\n</code>\n</div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 1177,
              description: "<p>Retrieves a String value from the Table&#39;s specified row and column.\nThe row is specified by its ID, while the column may be specified by\neither its ID or title.</p>\n",
              itemtype: "method",
              name: "getString",
              params: [{
                name: "row",
                description: "<p>row ID</p>\n",
                type: "Integer"
              }, {
                name: "column",
                description: "<p>columnName (string) or\n                                  ID (number)</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "",
                type: "String"
              },
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  // table is comma separated value "CSV"\n  // and has specifiying header for column labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  print(table.getString(0, 0)); // 0\n  print(table.getString(0, 1)); // Capra hircus\n  print(table.getString(0, 2)); // Goat\n  print(table.getString(1, 0)); // 1\n  print(table.getString(1, 1)); // Panthera pardus\n  print(table.getString(1, 2)); // Leopard\n  print(table.getString(2, 0)); // 2\n  print(table.getString(2, 1)); // Equus zebra\n  print(table.getString(2, 2)); // Zebra\n}\n</code>\n</div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 1230,
              description: "<p>Retrieves all table data and returns as an object. If a column name is\npassed in, each row object will be stored with that attribute as its\ntitle.</p>\n",
              itemtype: "method",
              name: "getObject",
              params: [{
                name: "headerColumn",
                description: "<p>Name of the column which should be used to\n                             title each row object (optional)</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: "",
                type: "Object"
              },
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder:\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leopard\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  //my table is comma separated value "csv"\n  //and has a header specifying the columns labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  let tableObject = table.getObject();\n\n  print(tableObject);\n  //outputs an object\n}\n</code>\n</div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.Table.js",
              line: 1296,
              description: "<p>Retrieves all table data and returns it as a multidimensional array.</p>\n",
              itemtype: "method",
              name: "getArray",
              return: {
                description: "",
                type: "Array"
              },
              example: ['\n<div class="norender">\n<code>\n// Given the CSV file "mammals.csv"\n// in the project\'s "assets" folder\n//\n// id,species,name\n// 0,Capra hircus,Goat\n// 1,Panthera pardus,Leoperd\n// 2,Equus zebra,Zebra\n\nlet table;\n\nfunction preload() {\n  // table is comma separated value "CSV"\n  // and has specifiying header for column labels\n  table = loadTable(\'assets/mammals.csv\', \'csv\', \'header\');\n}\n\nfunction setup() {\n  let tableArray = table.getArray();\n  for (let i = 0; i < tableArray.length; i++) {\n    print(tableArray[i]);\n  }\n}\n</code>\n</div>'],
              alt: "no image displayed",
              class: "p5.Table",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.TableRow.js",
              line: 42,
              description: "<p>Stores a value in the TableRow&#39;s specified column.\nThe column may be specified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "column",
                description: "<p>Column ID (Number)\n                              or Title (String)</p>\n",
                type: "String|Integer"
              }, {
                name: "value",
                description: "<p>The value to be stored</p>\n",
                type: "String|Number"
              }],
              example: ["\n <div class=\"norender\"><code>\n // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n let rows = table.getRows();\n for (let r = 0; r < rows.length; r++) {\n   rows[r].set('name', 'Unicorn');\n }\n\n //print the results\n print(table.getArray());\n }\n </code></div>"],
              alt: "no image displayed",
              class: "p5.TableRow",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.TableRow.js",
              line: 106,
              description: "<p>Stores a Float value in the TableRow&#39;s specified column.\nThe column may be specified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "setNum",
              params: [{
                name: "column",
                description: "<p>Column ID (Number)\n                              or Title (String)</p>\n",
                type: "String|Integer"
              }, {
                name: "value",
                description: "<p>The value to be stored\n                              as a Float</p>\n",
                type: "Number|String"
              }],
              example: ["\n <div class=\"norender\"><code>\n // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n let rows = table.getRows();\n for (let r = 0; r < rows.length; r++) {\n   rows[r].setNum('id', r + 10);\n }\n\n print(table.getArray());\n }\n </code></div>"],
              alt: "no image displayed",
              class: "p5.TableRow",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.TableRow.js",
              line: 150,
              description: "<p>Stores a String value in the TableRow&#39;s specified column.\nThe column may be specified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "setString",
              params: [{
                name: "column",
                description: "<p>Column ID (Number)\n                              or Title (String)</p>\n",
                type: "String|Integer"
              }, {
                name: "value",
                description: "<p>The value to be stored\n                              as a String</p>\n",
                type: "String|Number|Boolean|Object"
              }],
              example: ["\n <div class=\"norender\"><code>\n // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n let rows = table.getRows();\n for (let r = 0; r < rows.length; r++) {\n   let name = rows[r].getString('name');\n   rows[r].setString('name', 'A ' + name + ' named George');\n }\n\n print(table.getArray());\n }\n </code></div>"],
              alt: "no image displayed",
              class: "p5.TableRow",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.TableRow.js",
              line: 195,
              description: "<p>Retrieves a value from the TableRow&#39;s specified column.\nThe column may be specified by either its ID or title.</p>\n",
              itemtype: "method",
              name: "get",
              params: [{
                name: "column",
                description: "<p>columnName (string) or\n                                 ID (number)</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "",
                type: "String|Number"
              },
              example: ["\n <div class=\"norender\"><code>\n // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n let names = [];\n let rows = table.getRows();\n for (let r = 0; r < rows.length; r++) {\n   names.push(rows[r].get('name'));\n }\n\n print(names);\n }\n </code></div>"],
              alt: "no image displayed",
              class: "p5.TableRow",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.TableRow.js",
              line: 243,
              description: "<p>Retrieves a Float value from the TableRow&#39;s specified\ncolumn. The column may be specified by either its ID or\ntitle.</p>\n",
              itemtype: "method",
              name: "getNum",
              params: [{
                name: "column",
                description: "<p>columnName (string) or\n                                 ID (number)</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "Float Floating point number",
                type: "Number"
              },
              example: ["\n <div class=\"norender\"><code>\n // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n let rows = table.getRows();\n let minId = Infinity;\n let maxId = -Infinity;\n for (let r = 0; r < rows.length; r++) {\n   let id = rows[r].getNum('id');\n   minId = min(minId, id);\n   maxId = min(maxId, id);\n }\n print('minimum id = ' + minId + ', maximum id = ' + maxId);\n }\n </code></div>"],
              alt: "no image displayed",
              class: "p5.TableRow",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.TableRow.js",
              line: 299,
              description: "<p>Retrieves an String value from the TableRow&#39;s specified\ncolumn. The column may be specified by either its ID or\ntitle.</p>\n",
              itemtype: "method",
              name: "getString",
              params: [{
                name: "column",
                description: "<p>columnName (string) or\n                                 ID (number)</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "String",
                type: "String"
              },
              example: ["\n <div class=\"norender\"><code>\n // Given the CSV file \"mammals.csv\" in the project's \"assets\" folder:\n //\n // id,species,name\n // 0,Capra hircus,Goat\n // 1,Panthera pardus,Leopard\n // 2,Equus zebra,Zebra\n\n let table;\n\n function preload() {\n //my table is comma separated value \"csv\"\n //and has a header specifying the columns labels\n table = loadTable('assets/mammals.csv', 'csv', 'header');\n }\n\n function setup() {\n let rows = table.getRows();\n let longest = '';\n for (let r = 0; r < rows.length; r++) {\n   let species = rows[r].getString('species');\n   if (longest.length < species.length) {\n     longest = species;\n   }\n }\n\n print('longest: ' + longest);\n }\n </code></div>"],
              alt: "no image displayed",
              class: "p5.TableRow",
              module: "IO",
              submodule: "Table"
            }, {
              file: "src/io/p5.XML.js",
              line: 65,
              description: '<p>Gets a copy of the element&#39;s parent. Returns the parent as another\n<a href="#/p5.XML">p5.XML</a> object.</p>\n',
              itemtype: "method",
              name: "getParent",
              return: {
                description: "element parent",
                type: "p5.XML"
              },
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let children = xml.getChildren(\'animal\');\n  let parent = children[1].getParent();\n  print(parent.getName());\n}\n\n// Sketch prints:\n// mammals\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 103,
              description: "<p>Gets the element&#39;s full name, which is returned as a String.</p>\n",
              itemtype: "method",
              name: "getName",
              return: {
                description: "the name of the node",
                type: "String"
              },
              example: ['&lt;animal\n <div class=\'norender\'><code>\n // The following short XML file called "mammals.xml" is parsed\n // in the code below.\n //\n // <?xml version="1.0"?>\n // &lt;mammals&gt;\n //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n // &lt;/mammals&gt;\n\n let xml;\n\n function preload() {\n xml = loadXML(\'assets/mammals.xml\');\n }\n\n function setup() {\n print(xml.getName());\n }\n\n // Sketch prints:\n // mammals\n </code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 138,
              description: "<p>Sets the element&#39;s name, which is specified as a String.</p>\n",
              itemtype: "method",
              name: "setName",
              params: [{
                name: "the",
                description: "<p>new name of the node</p>\n",
                type: "String"
              }],
              example: ['&lt;animal\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  print(xml.getName());\n  xml.setName(\'fish\');\n  print(xml.getName());\n}\n\n// Sketch prints:\n// mammals\n// fish\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 184,
              description: "<p>Checks whether or not the element has any children, and returns the result\nas a boolean.</p>\n",
              itemtype: "method",
              name: "hasChildren",
              return: {
                description: "",
                type: "Boolean"
              },
              example: ['&lt;animal\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  print(xml.hasChildren());\n}\n\n// Sketch prints:\n// true\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 220,
              description: '<p>Get the names of all of the element&#39;s children, and returns the names as an\narray of Strings. This is the same as looping through and calling <a href="#/p5.XML/getName">getName()</a>\non each child element individually.</p>\n',
              itemtype: "method",
              name: "listChildren",
              return: {
                description: "names of the children of the element",
                type: "String[]"
              },
              example: ['&lt;animal\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  print(xml.listChildren());\n}\n\n// Sketch prints:\n// ["animal", "animal", "animal"]\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 261,
              description: '<p>Returns all of the element&#39;s children as an array of <a href="#/p5.XML">p5.XML</a> objects. When\nthe name parameter is specified, then it will return all children that match\nthat name.</p>\n',
              itemtype: "method",
              name: "getChildren",
              params: [{
                name: "name",
                description: "<p>element name</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: "children of the element",
                type: "p5.XML[]"
              },
              example: ['&lt;animal\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let animals = xml.getChildren(\'animal\');\n\n  for (let i = 0; i < animals.length; i++) {\n    print(animals[i].getContent());\n  }\n}\n\n// Sketch prints:\n// "Goat"\n// "Leopard"\n// "Zebra"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 317,
              description: "<p>Returns the first of the element&#39;s children that matches the name parameter\nor the child of the given index.It returns undefined if no matching\nchild is found.</p>\n",
              itemtype: "method",
              name: "getChild",
              params: [{
                name: "name",
                description: "<p>element name or index</p>\n",
                type: "String|Integer"
              }],
              return: {
                description: "",
                type: "p5.XML"
              },
              example: ['&lt;animal\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.getContent());\n}\n\n// Sketch prints:\n// "Goat"\n</code></div>\n<div class=\'norender\'><code>\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let secondChild = xml.getChild(1);\n  print(secondChild.getContent());\n}\n\n// Sketch prints:\n// "Leopard"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 378,
              description: '<p>Appends a new child to the element. The child can be specified with\neither a String, which will be used as the new tag&#39;s name, or as a\nreference to an existing <a href="#/p5.XML">p5.XML</a> object.\nA reference to the newly created child is returned as an <a href="#/p5.XML">p5.XML</a> object.</p>\n',
              itemtype: "method",
              name: "addChild",
              params: [{
                name: "node",
                description: '<p>a <a href="#/p5.XML">p5.XML</a> Object which will be the child to be added</p>\n',
                type: "p5.XML"
              }],
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let child = new p5.XML();\n  child.setName(\'animal\');\n  child.setAttribute(\'id\', \'3\');\n  child.setAttribute(\'species\', \'Ornithorhynchus anatinus\');\n  child.setContent(\'Platypus\');\n  xml.addChild(child);\n\n  let animals = xml.getChildren(\'animal\');\n  print(animals[animals.length - 1].getContent());\n}\n\n// Sketch prints:\n// "Goat"\n// "Leopard"\n// "Zebra"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 430,
              description: "<p>Removes the element specified by name or index.</p>\n",
              itemtype: "method",
              name: "removeChild",
              params: [{
                name: "name",
                description: "<p>element name or index</p>\n",
                type: "String|Integer"
              }],
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  xml.removeChild(\'animal\');\n  let children = xml.getChildren();\n  for (let i = 0; i < children.length; i++) {\n    print(children[i].getContent());\n  }\n}\n\n// Sketch prints:\n// "Leopard"\n// "Zebra"\n</code></div>\n<div class=\'norender\'><code>\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  xml.removeChild(1);\n  let children = xml.getChildren();\n  for (let i = 0; i < children.length; i++) {\n    print(children[i].getContent());\n  }\n}\n\n// Sketch prints:\n// "Goat"\n// "Zebra"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 502,
              description: "<p>Counts the specified element&#39;s number of attributes, returned as an Number.</p>\n",
              itemtype: "method",
              name: "getAttributeCount",
              return: {
                description: "",
                type: "Integer"
              },
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.getAttributeCount());\n}\n\n// Sketch prints:\n// 2\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 538,
              description: "<p>Gets all of the specified element&#39;s attributes, and returns them as an\narray of Strings.</p>\n",
              itemtype: "method",
              name: "listAttributes",
              return: {
                description: "an array of strings containing the names of attributes",
                type: "String[]"
              },
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.listAttributes());\n}\n\n// Sketch prints:\n// ["id", "species"]\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 580,
              description: "<p>Checks whether or not an element has the specified attribute.</p>\n",
              itemtype: "method",
              name: "hasAttribute",
              params: [{
                name: "the",
                description: "<p>attribute to be checked</p>\n",
                type: "String"
              }],
              return: {
                description: "true if attribute found else false",
                type: "Boolean"
              },
              example: ['\n <div class=\'norender\'><code>\n // The following short XML file called "mammals.xml" is parsed\n // in the code below.\n //\n // <?xml version="1.0"?>\n // &lt;mammals&gt;\n //   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n //   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n //   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n // &lt;/mammals&gt;\n\n let xml;\n\n function preload() {\n xml = loadXML(\'assets/mammals.xml\');\n }\n\n function setup() {\n let firstChild = xml.getChild(\'animal\');\n print(firstChild.hasAttribute(\'species\'));\n print(firstChild.hasAttribute(\'color\'));\n }\n\n // Sketch prints:\n // true\n // false\n </code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 624,
              description: "<p>Returns an attribute value of the element as an Number. If the defaultValue\nparameter is specified and the attribute doesn&#39;t exist, then defaultValue\nis returned. If no defaultValue is specified and the attribute doesn&#39;t\nexist, the value 0 is returned.</p>\n",
              itemtype: "method",
              name: "getNum",
              params: [{
                name: "name",
                description: "<p>the non-null full name of the attribute</p>\n",
                type: "String"
              }, {
                name: "defaultValue",
                description: "<p>the default value of the attribute</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "",
                type: "Number"
              },
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.getNum(\'id\'));\n}\n\n// Sketch prints:\n// 0\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 670,
              description: "<p>Returns an attribute value of the element as an String. If the defaultValue\nparameter is specified and the attribute doesn&#39;t exist, then defaultValue\nis returned. If no defaultValue is specified and the attribute doesn&#39;t\nexist, null is returned.</p>\n",
              itemtype: "method",
              name: "getString",
              params: [{
                name: "name",
                description: "<p>the non-null full name of the attribute</p>\n",
                type: "String"
              }, {
                name: "defaultValue",
                description: "<p>the default value of the attribute</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "",
                type: "String"
              },
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.getString(\'species\'));\n}\n\n// Sketch prints:\n// "Capra hircus"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 716,
              description: "<p>Sets the content of an element&#39;s attribute. The first parameter specifies\nthe attribute name, while the second specifies the new content.</p>\n",
              itemtype: "method",
              name: "setAttribute",
              params: [{
                name: "name",
                description: "<p>the full name of the attribute</p>\n",
                type: "String"
              }, {
                name: "value",
                description: "<p>the value of the attribute</p>\n",
                type: "Number|String|Boolean"
              }],
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.getString(\'species\'));\n  firstChild.setAttribute(\'species\', \'Jamides zebra\');\n  print(firstChild.getString(\'species\'));\n}\n\n// Sketch prints:\n// "Capra hircus"\n// "Jamides zebra"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 757,
              description: "<p>Returns the content of an element. If there is no such content,\ndefaultValue is returned if specified, otherwise null is returned.</p>\n",
              itemtype: "method",
              name: "getContent",
              params: [{
                name: "defaultValue",
                description: "<p>value returned if no content is found</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: "",
                type: "String"
              },
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.getContent());\n}\n\n// Sketch prints:\n// "Goat"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 798,
              description: "<p>Sets the element&#39;s content.</p>\n",
              itemtype: "method",
              name: "setContent",
              params: [{
                name: "text",
                description: "<p>the new content</p>\n",
                type: "String"
              }],
              example: ['\n<div class=\'norender\'><code>\n// The following short XML file called "mammals.xml" is parsed\n// in the code below.\n//\n// <?xml version="1.0"?>\n// &lt;mammals&gt;\n//   &lt;animal id="0" species="Capra hircus">Goat&lt;/animal&gt;\n//   &lt;animal id="1" species="Panthera pardus">Leopard&lt;/animal&gt;\n//   &lt;animal id="2" species="Equus zebra">Zebra&lt;/animal&gt;\n// &lt;/mammals&gt;\n\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  let firstChild = xml.getChild(\'animal\');\n  print(firstChild.getContent());\n  firstChild.setContent(\'Mountain Goat\');\n  print(firstChild.getContent());\n}\n\n// Sketch prints:\n// "Goat"\n// "Mountain Goat"\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/io/p5.XML.js",
              line: 839,
              description: "<p>Serializes the element into a string. This function is useful for preparing\nthe content to be sent over a http request or saved to file.</p>\n",
              itemtype: "method",
              name: "serialize",
              return: {
                description: "Serialized string of the element",
                type: "String"
              },
              example: ['\n<div class=\'norender\'><code>\nlet xml;\n\nfunction preload() {\n  xml = loadXML(\'assets/mammals.xml\');\n}\n\nfunction setup() {\n  print(xml.serialize());\n}\n\n// Sketch prints:\n// <mammals>\n//   <animal id="0" species="Capra hircus">Goat</animal>\n//   <animal id="1" species="Panthera pardus">Leopard</animal>\n//   <animal id="2" species="Equus zebra">Zebra</animal>\n// </mammals>\n</code></div>'],
              class: "p5.XML",
              module: "IO",
              submodule: "XML"
            }, {
              file: "src/math/calculation.js",
              line: 12,
              description: "<p>Calculates the absolute value (magnitude) of a number. Maps to Math.abs().\nThe absolute value of a number is always positive.</p>\n",
              itemtype: "method",
              name: "abs",
              params: [{
                name: "n",
                description: "<p>number to compute</p>\n",
                type: "Number"
              }],
              return: {
                description: "absolute value of given number",
                type: "Number"
              },
              example: ['\n<div class = "norender"><code>\nfunction setup() {\n  let x = -3;\n  let y = abs(x);\n\n  print(x); // -3\n  print(y); // 3\n}\n</code></div>'],
              alt: "no image displayed",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 36,
              description: "<p>Calculates the closest int value that is greater than or equal to the\nvalue of the parameter. Maps to Math.ceil(). For example, ceil(9.03)\nreturns the value 10.</p>\n",
              itemtype: "method",
              name: "ceil",
              params: [{
                name: "n",
                description: "<p>number to round up</p>\n",
                type: "Number"
              }],
              return: {
                description: "rounded up number",
                type: "Integer"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n  // map, mouseX between 0 and 5.\n  let ax = map(mouseX, 0, 100, 0, 5);\n  let ay = 66;\n\n  //Get the ceiling of the mapped number.\n  let bx = ceil(map(mouseX, 0, 100, 0, 5));\n  let by = 33;\n\n  // Multiply the mapped numbers by 20 to more easily\n  // see the changes.\n  stroke(0);\n  fill(0);\n  line(0, ay, ax * 20, ay);\n  line(0, by, bx * 20, by);\n\n  // Reformat the float returned by map and draw it.\n  noStroke();\n  text(nfc(ax, 2), ax, ay - 5);\n  text(nfc(bx, 1), bx, by - 5);\n}\n</code></div>"],
              alt: "2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 76,
              description: "<p>Constrains a value between a minimum and maximum value.</p>\n",
              itemtype: "method",
              name: "constrain",
              params: [{
                name: "n",
                description: "<p>number to constrain</p>\n",
                type: "Number"
              }, {
                name: "low",
                description: "<p>minimum limit</p>\n",
                type: "Number"
              }, {
                name: "high",
                description: "<p>maximum limit</p>\n",
                type: "Number"
              }],
              return: {
                description: "constrained number",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n\n  let leftWall = 25;\n  let rightWall = 75;\n\n  // xm is just the mouseX, while\n  // xc is the mouseX, but constrained\n  // between the leftWall and rightWall!\n  let xm = mouseX;\n  let xc = constrain(mouseX, leftWall, rightWall);\n\n  // Draw the walls.\n  stroke(150);\n  line(leftWall, 0, leftWall, height);\n  line(rightWall, 0, rightWall, height);\n\n  // Draw xm and xc as circles.\n  noStroke();\n  fill(150);\n  ellipse(xm, 33, 9, 9); // Not Constrained\n  fill(0);\n  ellipse(xc, 66, 9, 9); // Constrained\n}\n</code></div>"],
              alt: "2 vertical lines. 2 ellipses move with mouse X 1 does not move passed lines",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 121,
              description: "<p>Calculates the distance between two points.</p>\n",
              itemtype: "method",
              name: "dist",
              return: {
                description: "distance between the two points",
                type: "Number"
              },
              example: ["\n<div><code>\n// Move your mouse inside the canvas to see the\n// change in distance between two points!\nfunction draw() {\n  background(200);\n  fill(0);\n\n  let x1 = 10;\n  let y1 = 90;\n  let x2 = mouseX;\n  let y2 = mouseY;\n\n  line(x1, y1, x2, y2);\n  ellipse(x1, y1, 7, 7);\n  ellipse(x2, y2, 7, 7);\n\n  // d is the length of the line\n  // the distance from point 1 to point 2.\n  let d = int(dist(x1, y1, x2, y2));\n\n  // Let's write d along the line we are drawing!\n  push();\n  translate((x1 + x2) / 2, (y1 + y2) / 2);\n  rotate(atan2(y2 - y1, x2 - x1));\n  text(nfc(d, 1), 0, -5);\n  pop();\n  // Fancy!\n}\n</code></div>"],
              alt: "2 ellipses joined by line. 1 ellipse moves with mouse X&Y. Distance displayed.",
              class: "p5",
              module: "Math",
              submodule: "Calculation",
              overloads: [{
                line: 121,
                params: [{
                  name: "x1",
                  description: "<p>x-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "<p>y-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "<p>x-coordinate of the second point</p>\n",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "<p>y-coordinate of the second point</p>\n",
                  type: "Number"
                }],
                return: {
                  description: "distance between the two points",
                  type: "Number"
                }
              }, {
                line: 165,
                params: [{
                  name: "x1",
                  description: "",
                  type: "Number"
                }, {
                  name: "y1",
                  description: "",
                  type: "Number"
                }, {
                  name: "z1",
                  description: "<p>z-coordinate of the first point</p>\n",
                  type: "Number"
                }, {
                  name: "x2",
                  description: "",
                  type: "Number"
                }, {
                  name: "y2",
                  description: "",
                  type: "Number"
                }, {
                  name: "z2",
                  description: "<p>z-coordinate of the second point</p>\n",
                  type: "Number"
                }],
                return: {
                  description: "distance between the two points",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/calculation.js",
              line: 190,
              description: "<p>Returns Euler&#39;s number e (2.71828...) raised to the power of the n\nparameter. Maps to Math.exp().</p>\n",
              itemtype: "method",
              name: "exp",
              params: [{
                name: "n",
                description: "<p>exponent to raise</p>\n",
                type: "Number"
              }],
              return: {
                description: "e^n",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n\n  // Compute the exp() function with a value between 0 and 2\n  let xValue = map(mouseX, 0, width, 0, 2);\n  let yValue = exp(xValue);\n\n  let y = map(yValue, 0, 8, height, 0);\n\n  let legend = 'exp (' + nfc(xValue, 3) + ')\\n= ' + nf(yValue, 1, 4);\n  stroke(150);\n  line(mouseX, y, mouseX, height);\n  fill(0);\n  text(legend, 5, 15);\n  noStroke();\n  ellipse(mouseX, y, 7, 7);\n\n  // Draw the exp(x) curve,\n  // over the domain of x from 0 to 2\n  noFill();\n  stroke(0);\n  beginShape();\n  for (let x = 0; x < width; x++) {\n    xValue = map(x, 0, width, 0, 2);\n    yValue = exp(xValue);\n    y = map(yValue, 0, 8, height, 0);\n    vertex(x, y);\n  }\n\n  endShape();\n  line(0, 0, 0, height);\n  line(0, height - 1, width, height - 1);\n}\n</code></div>"],
              alt: "ellipse moves along a curve with mouse x. e^n displayed.",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 240,
              description: "<p>Calculates the closest int value that is less than or equal to the\nvalue of the parameter. Maps to Math.floor().</p>\n",
              itemtype: "method",
              name: "floor",
              params: [{
                name: "n",
                description: "<p>number to round down</p>\n",
                type: "Number"
              }],
              return: {
                description: "rounded down number",
                type: "Integer"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n  //map, mouseX between 0 and 5.\n  let ax = map(mouseX, 0, 100, 0, 5);\n  let ay = 66;\n\n  //Get the floor of the mapped number.\n  let bx = floor(map(mouseX, 0, 100, 0, 5));\n  let by = 33;\n\n  // Multiply the mapped numbers by 20 to more easily\n  // see the changes.\n  stroke(0);\n  fill(0);\n  line(0, ay, ax * 20, ay);\n  line(0, by, bx * 20, by);\n\n  // Reformat the float returned by map and draw it.\n  noStroke();\n  text(nfc(ax, 2), ax, ay - 5);\n  text(nfc(bx, 1), bx, by - 5);\n}\n</code></div>"],
              alt: "2 horizontal lines & number sets. increase with mouse x. bottom to 2 decimals",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 279,
              description: "<p>Calculates a number between two numbers at a specific increment. The amt\nparameter is the amount to interpolate between the two values where 0.0\nequal to the first point, 0.1 is very near the first point, 0.5 is\nhalf-way in between, and 1.0 is equal to the second point. If the\nvalue of amt is more than 1.0 or less than 0.0, the number will be\ncalculated accordingly in the ratio of the two given numbers. The lerp\nfunction is convenient for creating motion along a straight\npath and for drawing dotted lines.</p>\n",
              itemtype: "method",
              name: "lerp",
              params: [{
                name: "start",
                description: "<p>first value</p>\n",
                type: "Number"
              }, {
                name: "stop",
                description: "<p>second value</p>\n",
                type: "Number"
              }, {
                name: "amt",
                description: "<p>number</p>\n",
                type: "Number"
              }],
              return: {
                description: "lerped value",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction setup() {\n  background(200);\n  let a = 20;\n  let b = 80;\n  let c = lerp(a, b, 0.2);\n  let d = lerp(a, b, 0.5);\n  let e = lerp(a, b, 0.8);\n\n  let y = 50;\n\n  strokeWeight(5);\n  stroke(0); // Draw the original points in black\n  point(a, y);\n  point(b, y);\n\n  stroke(100); // Draw the lerp points in gray\n  point(c, y);\n  point(d, y);\n  point(e, y);\n}\n</code></div>"],
              alt: "5 points horizontally staggered mid-canvas. mid 3 are grey, outer black",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 327,
              description: "<p>Calculates the natural logarithm (the base-e logarithm) of a number. This\nfunction expects the n parameter to be a value greater than 0.0. Maps to\nMath.log().</p>\n",
              itemtype: "method",
              name: "log",
              params: [{
                name: "n",
                description: "<p>number greater than 0</p>\n",
                type: "Number"
              }],
              return: {
                description: "natural logarithm of n",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n  let maxX = 2.8;\n  let maxY = 1.5;\n\n  // Compute the natural log of a value between 0 and maxX\n  let xValue = map(mouseX, 0, width, 0, maxX);\n  let yValue, y;\n  if (xValue > 0) {\n   // Cannot take the log of a negative number.\n    yValue = log(xValue);\n    y = map(yValue, -maxY, maxY, height, 0);\n\n    // Display the calculation occurring.\n    let legend = 'log(' + nf(xValue, 1, 2) + ')\\n= ' + nf(yValue, 1, 3);\n    stroke(150);\n    line(mouseX, y, mouseX, height);\n    fill(0);\n    text(legend, 5, 15);\n    noStroke();\n    ellipse(mouseX, y, 7, 7);\n  }\n\n  // Draw the log(x) curve,\n  // over the domain of x from 0 to maxX\n  noFill();\n  stroke(0);\n  beginShape();\n  for (let x = 0; x < width; x++) {\n    xValue = map(x, 0, width, 0, maxX);\n    yValue = log(xValue);\n    y = map(yValue, -maxY, maxY, height, 0);\n    vertex(x, y);\n  }\n  endShape();\n  line(0, 0, 0, height);\n  line(0, height / 2, width, height / 2);\n}\n</code></div>"],
              alt: "ellipse moves along a curve with mouse x. natural logarithm of n displayed.",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 383,
              description: '<p>Calculates the magnitude (or length) of a vector. A vector is a direction\nin space commonly used in computer graphics and linear algebra. Because it\nhas no &quot;start&quot; position, the magnitude of a vector can be thought of as\nthe distance from the coordinate 0,0 to its x,y value. Therefore, <a href="#/p5/mag">mag()</a> is\na shortcut for writing dist(0, 0, x, y).</p>\n',
              itemtype: "method",
              name: "mag",
              params: [{
                name: "a",
                description: "<p>first value</p>\n",
                type: "Number"
              }, {
                name: "b",
                description: "<p>second value</p>\n",
                type: "Number"
              }],
              return: {
                description: "magnitude of vector from (0,0) to (a,b)",
                type: "Number"
              },
              example: ['\n<div><code>\nfunction setup() {\n  let x1 = 20;\n  let x2 = 80;\n  let y1 = 30;\n  let y2 = 70;\n\n  line(0, 0, x1, y1);\n  print(mag(x1, y1)); // Prints "36.05551275463989"\n  line(0, 0, x2, y1);\n  print(mag(x2, y1)); // Prints "85.44003745317531"\n  line(0, 0, x1, y2);\n  print(mag(x1, y2)); // Prints "72.80109889280519"\n  line(0, 0, x2, y2);\n  print(mag(x2, y2)); // Prints "106.3014581273465"\n}\n</code></div>'],
              alt: "4 lines of different length radiate from top left of canvas.",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 422,
              description: "<p>Re-maps a number from one range to another.\n<br><br>\nIn the first example above, the number 25 is converted from a value in the\nrange of 0 to 100 into a value that ranges from the left edge of the\nwindow (0) to the right edge (width).</p>\n",
              itemtype: "method",
              name: "map",
              params: [{
                name: "value",
                description: "<p>the incoming value to be converted</p>\n",
                type: "Number"
              }, {
                name: "start1",
                description: "<p>lower bound of the value&#39;s current range</p>\n",
                type: "Number"
              }, {
                name: "stop1",
                description: "<p>upper bound of the value&#39;s current range</p>\n",
                type: "Number"
              }, {
                name: "start2",
                description: "<p>lower bound of the value&#39;s target range</p>\n",
                type: "Number"
              }, {
                name: "stop2",
                description: "<p>upper bound of the value&#39;s target range</p>\n",
                type: "Number"
              }, {
                name: "withinBounds",
                description: "<p>constrain the value to the newly mapped range</p>\n",
                type: "Boolean",
                optional: !0
              }],
              return: {
                description: "remapped number",
                type: "Number"
              },
              example: ["\n  <div><code>\nlet value = 25;\nlet m = map(value, 0, 100, 0, width);\nellipse(m, 50, 10, 10);\n</code></div>\n\n  <div><code>\nfunction setup() {\n  noStroke();\n}\n\nfunction draw() {\n  background(204);\n  let x1 = map(mouseX, 0, width, 25, 75);\n  ellipse(x1, 25, 25, 25);\n  //This ellipse is constrained to the 0-100 range\n  //after setting withinBounds to true\n  let x2 = map(mouseX, 0, width, 0, 100, true);\n  ellipse(x2, 75, 25, 25);\n}\n</code></div>"],
              alt: "10 by 10 white ellipse with in mid left canvas\n2 25 by 25 white ellipses move with mouse x. Bottom has more range from X",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 478,
              description: '<p>Determines the largest value in a sequence of numbers, and then returns\nthat value. <a href="#/p5/max">max()</a> accepts any number of Number parameters, or an Array\nof any length.</p>\n',
              itemtype: "method",
              name: "max",
              return: {
                description: "maximum Number",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction setup() {\n  // Change the elements in the array and run the sketch\n  // to show how max() works!\n  let numArray = [2, 1, 5, 4, 8, 9];\n  fill(0);\n  noStroke();\n  text('Array Elements', 0, 10);\n  // Draw all numbers in the array\n  let spacing = 15;\n  let elemsY = 25;\n  for (let i = 0; i < numArray.length; i++) {\n    text(numArray[i], i * spacing, elemsY);\n  }\n  let maxX = 33;\n  let maxY = 80;\n  // Draw the Maximum value in the array.\n  textSize(32);\n  text(max(numArray), maxX, maxY);\n}\n</code></div>"],
              alt: "Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 9",
              class: "p5",
              module: "Math",
              submodule: "Calculation",
              overloads: [{
                line: 478,
                params: [{
                  name: "n0",
                  description: "<p>Number to compare</p>\n",
                  type: "Number"
                }, {
                  name: "n1",
                  description: "<p>Number to compare</p>\n",
                  type: "Number"
                }],
                return: {
                  description: "maximum Number",
                  type: "Number"
                }
              }, {
                line: 514,
                params: [{
                  name: "nums",
                  description: "<p>Numbers to compare</p>\n",
                  type: "Number[]"
                }],
                return: {
                  description: "",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/calculation.js",
              line: 528,
              description: '<p>Determines the smallest value in a sequence of numbers, and then returns\nthat value. <a href="#/p5/min">min()</a> accepts any number of Number parameters, or an Array\nof any length.</p>\n',
              itemtype: "method",
              name: "min",
              return: {
                description: "minimum Number",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction setup() {\n  // Change the elements in the array and run the sketch\n  // to show how min() works!\n  let numArray = [2, 1, 5, 4, 8, 9];\n  fill(0);\n  noStroke();\n  text('Array Elements', 0, 10);\n  // Draw all numbers in the array\n  let spacing = 15;\n  let elemsY = 25;\n  for (let i = 0; i < numArray.length; i++) {\n    text(numArray[i], i * spacing, elemsY);\n  }\n  let maxX = 33;\n  let maxY = 80;\n  // Draw the Minimum value in the array.\n  textSize(32);\n  text(min(numArray), maxX, maxY);\n}\n</code></div>"],
              alt: "Small text at top reads: Array Elements 2 1 5 4 8 9. Large text at center: 1",
              class: "p5",
              module: "Math",
              submodule: "Calculation",
              overloads: [{
                line: 528,
                params: [{
                  name: "n0",
                  description: "<p>Number to compare</p>\n",
                  type: "Number"
                }, {
                  name: "n1",
                  description: "<p>Number to compare</p>\n",
                  type: "Number"
                }],
                return: {
                  description: "minimum Number",
                  type: "Number"
                }
              }, {
                line: 564,
                params: [{
                  name: "nums",
                  description: "<p>Numbers to compare</p>\n",
                  type: "Number[]"
                }],
                return: {
                  description: "",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/calculation.js",
              line: 578,
              description: "<p>Normalizes a number from another range into a value between 0 and 1.\nIdentical to map(value, low, high, 0, 1).\nNumbers outside of the range are not clamped to 0 and 1, because\nout-of-range values are often intentional and useful. (See the second\nexample above.)</p>\n",
              itemtype: "method",
              name: "norm",
              params: [{
                name: "value",
                description: "<p>incoming value to be normalized</p>\n",
                type: "Number"
              }, {
                name: "start",
                description: "<p>lower bound of the value&#39;s current range</p>\n",
                type: "Number"
              }, {
                name: "stop",
                description: "<p>upper bound of the value&#39;s current range</p>\n",
                type: "Number"
              }],
              return: {
                description: "normalized number",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n  let currentNum = mouseX;\n  let lowerBound = 0;\n  let upperBound = width; //100;\n  let normalized = norm(currentNum, lowerBound, upperBound);\n  let lineY = 70;\n  line(0, lineY, width, lineY);\n  //Draw an ellipse mapped to the non-normalized value.\n  noStroke();\n  fill(50);\n  let s = 7; // ellipse size\n  ellipse(currentNum, lineY, s, s);\n\n  // Draw the guide\n  let guideY = lineY + 15;\n  text('0', 0, guideY);\n  textAlign(RIGHT);\n  text('100', width, guideY);\n\n  // Draw the normalized value\n  textAlign(LEFT);\n  fill(0);\n  textSize(32);\n  let normalY = 40;\n  let normalX = 20;\n  text(normalized, normalX, normalY);\n}\n</code></div>"],
              alt: "ellipse moves with mouse. 0 shown left & 100 right and updating values center",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 631,
              description: '<p>Facilitates exponential expressions. The <a href="#/p5/pow">pow()</a> function is an efficient\nway of multiplying numbers by themselves (or their reciprocals) in large\nquantities. For example, pow(3, 5) is equivalent to the expression\n3<em>3</em>3<em>3</em>3 and pow(3, -5) is equivalent to 1 / 3<em>3</em>3<em>3</em>3. Maps to\nMath.pow().</p>\n',
              itemtype: "method",
              name: "pow",
              params: [{
                name: "n",
                description: "<p>base of the exponential expression</p>\n",
                type: "Number"
              }, {
                name: "e",
                description: "<p>power by which to raise the base</p>\n",
                type: "Number"
              }],
              return: {
                description: "n^e",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction setup() {\n  //Exponentially increase the size of an ellipse.\n  let eSize = 3; // Original Size\n  let eLoc = 10; // Original Location\n\n  ellipse(eLoc, eLoc, eSize, eSize);\n\n  ellipse(eLoc * 2, eLoc * 2, pow(eSize, 2), pow(eSize, 2));\n\n  ellipse(eLoc * 4, eLoc * 4, pow(eSize, 3), pow(eSize, 3));\n\n  ellipse(eLoc * 8, eLoc * 8, pow(eSize, 4), pow(eSize, 4));\n}\n</code></div>"],
              alt: "small to large ellipses radiating from top left of canvas",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 665,
              description: "<p>Calculates the integer closest to the n parameter. For example,\nround(133.8) returns the value 134. Maps to Math.round().</p>\n",
              itemtype: "method",
              name: "round",
              params: [{
                name: "n",
                description: "<p>number to round</p>\n",
                type: "Number"
              }],
              return: {
                description: "rounded number",
                type: "Integer"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n  //map, mouseX between 0 and 5.\n  let ax = map(mouseX, 0, 100, 0, 5);\n  let ay = 66;\n\n  // Round the mapped number.\n  let bx = round(map(mouseX, 0, 100, 0, 5));\n  let by = 33;\n\n  // Multiply the mapped numbers by 20 to more easily\n  // see the changes.\n  stroke(0);\n  fill(0);\n  line(0, ay, ax * 20, ay);\n  line(0, by, bx * 20, by);\n\n  // Reformat the float returned by map and draw it.\n  noStroke();\n  text(nfc(ax, 2), ax, ay - 5);\n  text(nfc(bx, 1), bx, by - 5);\n}\n</code></div>"],
              alt: "horizontal center line squared values displayed on top and regular on bottom.",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 704,
              description: "<p>Squares a number (multiplies a number by itself). The result is always a\npositive number, as multiplying two negative numbers always yields a\npositive result. For example, -1 * -1 = 1.</p>\n",
              itemtype: "method",
              name: "sq",
              params: [{
                name: "n",
                description: "<p>number to square</p>\n",
                type: "Number"
              }],
              return: {
                description: "squared number",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n  let eSize = 7;\n  let x1 = map(mouseX, 0, width, 0, 10);\n  let y1 = 80;\n  let x2 = sq(x1);\n  let y2 = 20;\n\n  // Draw the non-squared.\n  line(0, y1, width, y1);\n  ellipse(x1, y1, eSize, eSize);\n\n  // Draw the squared.\n  line(0, y2, width, y2);\n  ellipse(x2, y2, eSize, eSize);\n\n  // Draw dividing line.\n  stroke(100);\n  line(0, height / 2, width, height / 2);\n\n  // Draw text.\n  let spacing = 15;\n  noStroke();\n  fill(0);\n  text('x = ' + x1, 0, y1 + spacing);\n  text('sq(x) = ' + x2, 0, y2 + spacing);\n}\n</code></div>"],
              alt: "horizontal center line squared values displayed on top and regular on bottom.",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/calculation.js",
              line: 751,
              description: "<p>Calculates the square root of a number. The square root of a number is\nalways positive, even though there may be a valid negative root. The\nsquare root s of number a is such that s*s = a. It is the opposite of\nsquaring. Maps to Math.sqrt().</p>\n",
              itemtype: "method",
              name: "sqrt",
              params: [{
                name: "n",
                description: "<p>non-negative number to square root</p>\n",
                type: "Number"
              }],
              return: {
                description: "square root of number",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction draw() {\n  background(200);\n  let eSize = 7;\n  let x1 = mouseX;\n  let y1 = 80;\n  let x2 = sqrt(x1);\n  let y2 = 20;\n\n  // Draw the non-squared.\n  line(0, y1, width, y1);\n  ellipse(x1, y1, eSize, eSize);\n\n  // Draw the squared.\n  line(0, y2, width, y2);\n  ellipse(x2, y2, eSize, eSize);\n\n  // Draw dividing line.\n  stroke(100);\n  line(0, height / 2, width, height / 2);\n\n  // Draw text.\n  noStroke();\n  fill(0);\n  let spacing = 15;\n  text('x = ' + x1, 0, y1 + spacing);\n  text('sqrt(x) = ' + x2, 0, y2 + spacing);\n}\n</code></div>"],
              alt: "horizontal center line squareroot values displayed on top and regular on bottom.",
              class: "p5",
              module: "Math",
              submodule: "Calculation"
            }, {
              file: "src/math/math.js",
              line: 12,
              description: '<p>Creates a new <a href="#/p5.Vector">p5.Vector</a> (the datatype for storing vectors). This provides a\ntwo or three dimensional vector, specifically a Euclidean (also known as\ngeometric) vector. A vector is an entity that has both magnitude and\ndirection.</p>\n',
              itemtype: "method",
              name: "createVector",
              params: [{
                name: "x",
                description: "<p>x component of the vector</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "y",
                description: "<p>y component of the vector</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "z",
                description: "<p>z component of the vector</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "",
                type: "p5.Vector"
              },
              example: ["\n<div modernizr='webgl'><code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  noStroke();\n  fill(255, 102, 204);\n}\n\nfunction draw() {\n  background(255);\n  pointLight(color(255), createVector(sin(millis() / 1000) * 20, -40, -10));\n  scale(0.75);\n  sphere();\n}\n</code></div>"],
              alt: "a purple sphere lit by a point light oscillating horizontally",
              class: "p5",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/noise.js",
              line: 40,
              description: '<p>Returns the Perlin noise value at specified coordinates. Perlin noise is\na random sequence generator producing a more natural ordered, harmonic\nsuccession of numbers compared to the standard <b>random()</b> function.\nIt was invented by Ken Perlin in the 1980s and been used since in\ngraphical applications to produce procedural textures, natural motion,\nshapes, terrains etc.<br /><br /> The main difference to the\n<b>random()</b> function is that Perlin noise is defined in an infinite\nn-dimensional space where each pair of coordinates corresponds to a\nfixed semi-random value (fixed only for the lifespan of the program; see\nthe <a href="#/p5/noiseSeed">noiseSeed()</a> function). p5.js can compute 1D, 2D and 3D noise,\ndepending on the number of coordinates given. The resulting value will\nalways be between 0.0 and 1.0. The noise value can be animated by moving\nthrough the noise space as demonstrated in the example above. The 2nd\nand 3rd dimension can also be interpreted as time.<br /><br />The actual\nnoise is structured similar to an audio signal, in respect to the\nfunction&#39;s use of frequencies. Similar to the concept of harmonics in\nphysics, perlin noise is computed over several octaves which are added\ntogether for the final result. <br /><br />Another way to adjust the\ncharacter of the resulting sequence is the scale of the input\ncoordinates. As the function works within an infinite space the value of\nthe coordinates doesn&#39;t matter as such, only the distance between\nsuccessive coordinates does (eg. when using <b>noise()</b> within a\nloop). As a general rule the smaller the difference between coordinates,\nthe smoother the resulting noise sequence will be. Steps of 0.005-0.03\nwork best for most applications, but this will differ depending on use.</p>\n',
              itemtype: "method",
              name: "noise",
              params: [{
                name: "x",
                description: "<p>x-coordinate in noise space</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-coordinate in noise space</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "z",
                description: "<p>z-coordinate in noise space</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "Perlin noise value (between 0 and 1) at specified\n                     coordinates",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet xoff = 0.0;\n\nfunction draw() {\n  background(204);\n  xoff = xoff + 0.01;\n  let n = noise(xoff) * width;\n  line(n, 0, n, height);\n}\n</code>\n</div>\n<div>\n<code>let noiseScale=0.02;\n\nfunction draw() {\n  background(0);\n  for (let x=0; x < width; x++) {\n    let noiseVal = noise((mouseX+x)*noiseScale, mouseY*noiseScale);\n    stroke(noiseVal*255);\n    line(x, mouseY+noiseVal*80, x, height);\n  }\n}\n</code>\n</div>"],
              alt: "vertical line moves left to right with updating noise values.\nhorizontal wave pattern effected by mouse x-position & updating noise values.",
              class: "p5",
              module: "Math",
              submodule: "Noise"
            }, {
              file: "src/math/noise.js",
              line: 187,
              description: "<p>Adjusts the character and level of detail produced by the Perlin noise\n function. Similar to harmonics in physics, noise is computed over\n several octaves. Lower octaves contribute more to the output signal and\n as such define the overall intensity of the noise, whereas higher octaves\n create finer grained details in the noise sequence.\n <br><br>\n By default, noise is computed over 4 octaves with each octave contributing\n exactly half than its predecessor, starting at 50% strength for the 1st\n octave. This falloff amount can be changed by adding an additional function\n parameter. Eg. a falloff factor of 0.75 means each octave will now have\n 75% impact (25% less) of the previous lower octave. Any value between\n 0.0 and 1.0 is valid, however note that values greater than 0.5 might\n result in greater than 1.0 values returned by <b>noise()</b>.\n <br><br>\n By changing these parameters, the signal created by the <b>noise()</b>\n function can be adapted to fit very specific needs and characteristics.</p>\n",
              itemtype: "method",
              name: "noiseDetail",
              params: [{
                name: "lod",
                description: "<p>number of octaves to be used by the noise</p>\n",
                type: "Number"
              }, {
                name: "falloff",
                description: "<p>falloff factor for each octave</p>\n",
                type: "Number"
              }],
              example: ["\n <div>\n <code>\n let noiseVal;\n let noiseScale = 0.02;\nfunction setup() {\n   createCanvas(100, 100);\n }\nfunction draw() {\n   background(0);\n   for (let y = 0; y < height; y++) {\n     for (let x = 0; x < width / 2; x++) {\n       noiseDetail(2, 0.2);\n       noiseVal = noise((mouseX + x) * noiseScale, (mouseY + y) * noiseScale);\n       stroke(noiseVal * 255);\n       point(x, y);\n       noiseDetail(8, 0.65);\n       noiseVal = noise(\n         (mouseX + x + width / 2) * noiseScale,\n         (mouseY + y) * noiseScale\n       );\n       stroke(noiseVal * 255);\n       point(x + width / 2, y);\n     }\n   }\n }\n </code>\n </div>"],
              alt: "2 vertical grey smokey patterns affected my mouse x-position and noise.",
              class: "p5",
              module: "Math",
              submodule: "Noise"
            }, {
              file: "src/math/noise.js",
              line: 253,
              description: "<p>Sets the seed value for <b>noise()</b>. By default, <b>noise()</b>\nproduces different results each time the program is run. Set the\n<b>value</b> parameter to a constant to return the same pseudo-random\nnumbers each time the software is run.</p>\n",
              itemtype: "method",
              name: "noiseSeed",
              params: [{
                name: "seed",
                description: "<p>the seed value</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>let xoff = 0.0;\n\nfunction setup() {\n  noiseSeed(99);\n  stroke(0, 10);\n}\n\nfunction draw() {\n  xoff = xoff + .01;\n  let n = noise(xoff) * width;\n  line(n, 0, n, height);\n}\n</code>\n</div>"],
              alt: "vertical grey lines drawing in pattern affected by noise.",
              class: "p5",
              module: "Math",
              submodule: "Noise"
            }, {
              file: "src/math/p5.Vector.js",
              line: 67,
              description: "<p>The x component of the vector</p>\n",
              itemtype: "property",
              name: "x",
              type: "Number",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 72,
              description: "<p>The y component of the vector</p>\n",
              itemtype: "property",
              name: "y",
              type: "Number",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 77,
              description: "<p>The z component of the vector</p>\n",
              itemtype: "property",
              name: "z",
              type: "Number",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 84,
              description: "<p>Returns a string representation of a vector v by calling String(v)\nor v.toString(). This method is useful for logging vectors in the\nconsole.</p>\n",
              itemtype: "method",
              name: "toString",
              return: {
                description: "",
                type: "String"
              },
              example: ['\n<div class = "norender">\n<code>\nfunction setup() {\n  let v = createVector(20, 30);\n  print(String(v)); // prints "p5.Vector Object : [20, 30, 0]"\n}\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 0);\n  let v1 = createVector(mouseX, mouseY);\n  drawArrow(v0, v1, \'black\');\n\n  noStroke();\n  text(v1.toString(), 10, 25, 90, 75);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>'],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 134,
              description: '<p>Sets the x, y, and z component of the vector using two or three separate\nvariables, the data from a <a href="#/p5.Vector">p5.Vector</a>, or the values from a float array.</p>\n',
              itemtype: "method",
              name: "set",
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nfunction setup() {\n  let v = createVector(1, 2, 3);\n  v.set(4, 5, 6); // Sets vector to [4, 5, 6]\n\n  let v1 = createVector(0, 0, 0);\n  let arr = [1, 2, 3];\n  v1.set(arr); // Sets vector to [1, 2, 3]\n}\n</code>\n</div>\n\n<div>\n<code>\nlet v0, v1;\nfunction setup() {\n  createCanvas(100, 100);\n\n  v0 = createVector(0, 0);\n  v1 = createVector(50, 50);\n}\n\nfunction draw() {\n  background(240);\n\n  drawArrow(v0, v1, 'black');\n  v1.set(v1.x + random(-1, 1), v1.y + random(-1, 1));\n\n  noStroke();\n  text('x: ' + round(v1.x) + ' y: ' + round(v1.y), 20, 90);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 134,
                params: [{
                  name: "x",
                  description: "<p>the x component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "y",
                  description: "<p>the y component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "z",
                  description: "<p>the z component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 193,
                params: [{
                  name: "value",
                  description: "<p>the vector to set</p>\n",
                  type: "p5.Vector|Number[]"
                }],
                chainable: 1
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 217,
              description: '<p>Gets a copy of the vector, returns a <a href="#/p5.Vector">p5.Vector</a> object.</p>\n',
              itemtype: "method",
              name: "copy",
              return: {
                description: 'the copy of the <a href="#/p5.Vector">p5.Vector</a> object',
                type: "p5.Vector"
              },
              example: ['\n<div class="norender">\n<code>\nlet v1 = createVector(1, 2, 3);\nlet v2 = v1.copy();\nprint(v1.x === v2.x && v1.y === v2.y && v1.z === v2.z);\n// Prints "true"\n</code>\n</div>'],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 240,
              description: '<p>Adds x, y, and z components to a vector, adds one vector to another, or\nadds two independent vectors together. The version of the method that adds\ntwo vectors together is a static method and returns a <a href="#/p5.Vector">p5.Vector</a>, the others\nacts directly on the vector. See the examples for more context.</p>\n',
              itemtype: "method",
              name: "add",
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(1, 2, 3);\nv.add(4, 5, 6);\n// v's components are set to [5, 7, 9]\n</code>\n</div>\n\n<div class=\"norender\">\n<code>\n// Static method\nlet v1 = createVector(1, 2, 3);\nlet v2 = createVector(2, 3, 4);\n\nlet v3 = p5.Vector.add(v1, v2);\n// v3 has components [3, 5, 7]\nprint(v3);\n</code>\n</div>\n\n<div>\n<code>\n// red vector + blue vector = purple vector\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 0);\n  let v1 = createVector(mouseX, mouseY);\n  drawArrow(v0, v1, 'red');\n\n  let v2 = createVector(-30, 20);\n  drawArrow(v1, v2, 'blue');\n\n  let v3 = p5.Vector.add(v1, v2);\n  drawArrow(v0, v3, 'purple');\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 240,
                params: [{
                  name: "x",
                  description: "<p>the x component of the vector to be added</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>the y component of the vector to be added</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "z",
                  description: "<p>the z component of the vector to be added</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 306,
                params: [{
                  name: "value",
                  description: "<p>the vector to add</p>\n",
                  type: "p5.Vector|Number[]"
                }],
                chainable: 1
              }, {
                line: 1556,
                params: [{
                  name: "v1",
                  description: '<p>a <a href="#/p5.Vector">p5.Vector</a> to add</p>\n',
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: '<p>a <a href="#/p5.Vector">p5.Vector</a> to add</p>\n',
                  type: "p5.Vector"
                }, {
                  name: "target",
                  description: "<p>the vector to receive the result</p>\n",
                  type: "p5.Vector"
                }],
                static: 1
              }, {
                line: 1563,
                params: [{
                  name: "v1",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: "",
                  type: "p5.Vector"
                }],
                static: 1,
                return: {
                  description: 'the resulting <a href="#/p5.Vector">p5.Vector</a>',
                  type: "p5.Vector"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 330,
              description: '<p>Subtracts x, y, and z components from a vector, subtracts one vector from\nanother, or subtracts two independent vectors. The version of the method\nthat subtracts two vectors is a static method and returns a <a href="#/p5.Vector">p5.Vector</a>, the\nother acts directly on the vector. See the examples for more context.</p>\n',
              itemtype: "method",
              name: "sub",
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(4, 5, 6);\nv.sub(1, 1, 1);\n// v's components are set to [3, 4, 5]\n</code>\n</div>\n\n<div class=\"norender\">\n<code>\n// Static method\nlet v1 = createVector(2, 3, 4);\nlet v2 = createVector(1, 2, 3);\n\nlet v3 = p5.Vector.sub(v1, v2);\n// v3 has components [1, 1, 1]\nprint(v3);\n</code>\n</div>\n\n<div>\n<code>\n// red vector - blue vector = purple vector\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 0);\n  let v1 = createVector(70, 50);\n  drawArrow(v0, v1, 'red');\n\n  let v2 = createVector(mouseX, mouseY);\n  drawArrow(v0, v2, 'blue');\n\n  let v3 = p5.Vector.sub(v1, v2);\n  drawArrow(v2, v3, 'purple');\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 330,
                params: [{
                  name: "x",
                  description: "<p>the x component of the vector to subtract</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>the y component of the vector to subtract</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "z",
                  description: "<p>the z component of the vector to subtract</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 396,
                params: [{
                  name: "value",
                  description: "<p>the vector to subtract</p>\n",
                  type: "p5.Vector|Number[]"
                }],
                chainable: 1
              }, {
                line: 1586,
                params: [{
                  name: "v1",
                  description: '<p>a <a href="#/p5.Vector">p5.Vector</a> to subtract from</p>\n',
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: '<p>a <a href="#/p5.Vector">p5.Vector</a> to subtract</p>\n',
                  type: "p5.Vector"
                }, {
                  name: "target",
                  description: "<p>if undefined a new vector will be created</p>\n",
                  type: "p5.Vector"
                }],
                static: 1
              }, {
                line: 1593,
                params: [{
                  name: "v1",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: "",
                  type: "p5.Vector"
                }],
                static: 1,
                return: {
                  description: 'the resulting <a href="#/p5.Vector">p5.Vector</a>',
                  type: "p5.Vector"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 420,
              description: '<p>Multiply the vector by a scalar. The static version of this method\ncreates a new <a href="#/p5.Vector">p5.Vector</a> while the non static version acts on the vector\ndirectly. See the examples for more context.</p>\n',
              itemtype: "method",
              name: "mult",
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(1, 2, 3);\nv.mult(2);\n// v's components are set to [2, 4, 6]\n</code>\n</div>\n\n<div class=\"norender\">\n<code>\n// Static method\nlet v1 = createVector(1, 2, 3);\nlet v2 = p5.Vector.mult(v1, 2);\n// v2 has components [2, 4, 6]\nprint(v2);\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(50, 50);\n  let v1 = createVector(25, -25);\n  drawArrow(v0, v1, 'red');\n\n  let num = map(mouseX, 0, width, -2, 2, true);\n  let v2 = p5.Vector.mult(v1, num);\n  drawArrow(v0, v2, 'blue');\n\n  noStroke();\n  text('multiplied by ' + num.toFixed(2), 5, 90);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 420,
                params: [{
                  name: "n",
                  description: "<p>the number to multiply with the vector</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 1614,
                params: [{
                  name: "v",
                  description: "<p>the vector to multiply</p>\n",
                  type: "p5.Vector"
                }, {
                  name: "n",
                  description: "",
                  type: "Number"
                }, {
                  name: "target",
                  description: "<p>if undefined a new vector will be created</p>\n",
                  type: "p5.Vector"
                }],
                static: 1
              }, {
                line: 1621,
                params: [{
                  name: "v",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "n",
                  description: "",
                  type: "Number"
                }],
                static: 1,
                return: {
                  description: 'the resulting new <a href="#/p5.Vector">p5.Vector</a>',
                  type: "p5.Vector"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 495,
              description: '<p>Divide the vector by a scalar. The static version of this method creates a\nnew <a href="#/p5.Vector">p5.Vector</a> while the non static version acts on the vector directly.\nSee the examples for more context.</p>\n',
              itemtype: "method",
              name: "div",
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(6, 4, 2);\nv.div(2); //v's components are set to [3, 2, 1]\n</code>\n</div>\n\n<div class=\"norender\">\n<code>\n// Static method\nlet v1 = createVector(6, 4, 2);\nlet v2 = p5.Vector.div(v1, 2);\n// v2 has components [3, 2, 1]\nprint(v2);\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 100);\n  let v1 = createVector(50, -50);\n  drawArrow(v0, v1, 'red');\n\n  let num = map(mouseX, 0, width, 10, 0.5, true);\n  let v2 = p5.Vector.div(v1, num);\n  drawArrow(v0, v2, 'blue');\n\n  noStroke();\n  text('divided by ' + num.toFixed(2), 10, 90);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 495,
                params: [{
                  name: "n",
                  description: "<p>the number to divide the vector by</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 1641,
                params: [{
                  name: "v",
                  description: "<p>the vector to divide</p>\n",
                  type: "p5.Vector"
                }, {
                  name: "n",
                  description: "",
                  type: "Number"
                }, {
                  name: "target",
                  description: "<p>if undefined a new vector will be created</p>\n",
                  type: "p5.Vector"
                }],
                static: 1
              }, {
                line: 1648,
                params: [{
                  name: "v",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "n",
                  description: "",
                  type: "Number"
                }],
                static: 1,
                return: {
                  description: 'the resulting new <a href="#/p5.Vector">p5.Vector</a>',
                  type: "p5.Vector"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 573,
              description: "<p>Calculates the magnitude (length) of the vector and returns the result as\na float (this is simply the equation sqrt(x<em>x + y</em>y + z*z).)</p>\n",
              itemtype: "method",
              name: "mag",
              return: {
                description: "magnitude of the vector",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 0);\n  let v1 = createVector(mouseX, mouseY);\n  drawArrow(v0, v1, 'black');\n\n  noStroke();\n  text('vector length: ' + v1.mag().toFixed(2), 10, 70, 90, 30);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>\n<div class=\"norender\">\n<code>\nlet v = createVector(20.0, 30.0, 40.0);\nlet m = v.mag();\nprint(m); // Prints \"53.85164807134504\"\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 573,
                params: [],
                return: {
                  description: "magnitude of the vector",
                  type: "Number"
                }
              }, {
                line: 1738,
                params: [{
                  name: "vecT",
                  description: "<p>the vector to return the magnitude of</p>\n",
                  type: "p5.Vector"
                }],
                static: 1,
                return: {
                  description: "the magnitude of vecT",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 621,
              description: "<p>Calculates the squared magnitude of the vector and returns the result\nas a float (this is simply the equation <em>(x<em>x + y</em>y + z*z)</em>.)\nFaster if the real length is not required in the\ncase of comparing vectors, etc.</p>\n",
              itemtype: "method",
              name: "magSq",
              return: {
                description: "squared magnitude of the vector",
                type: "Number"
              },
              example: ["\n<div class=\"norender\">\n<code>\n// Static method\nlet v1 = createVector(6, 4, 2);\nprint(v1.magSq()); // Prints \"56\"\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 0);\n  let v1 = createVector(mouseX, mouseY);\n  drawArrow(v0, v1, 'black');\n\n  noStroke();\n  text('vector length squared: ' + v1.magSq().toFixed(2), 10, 45, 90, 55);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 675,
              description: "<p>Calculates the dot product of two vectors. The version of the method\nthat computes the dot product of two independent vectors is a static\nmethod. See the examples for more context.</p>\n",
              itemtype: "method",
              name: "dot",
              return: {
                description: "the dot product",
                type: "Number"
              },
              example: ['\n<div class="norender">\n<code>\nlet v1 = createVector(1, 2, 3);\nlet v2 = createVector(2, 3, 4);\n\nprint(v1.dot(v2)); // Prints "20"\n</code>\n</div>\n\n<div class="norender">\n<code>\n//Static method\nlet v1 = createVector(1, 2, 3);\nlet v2 = createVector(3, 2, 1);\nprint(p5.Vector.dot(v1, v2)); // Prints "10"\n</code>\n</div>'],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 675,
                params: [{
                  name: "x",
                  description: "<p>x component of the vector</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>y component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "z",
                  description: "<p>z component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "the dot product",
                  type: "Number"
                }
              }, {
                line: 706,
                params: [{
                  name: "value",
                  description: '<p>value component of the vector or a <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }],
                return: {
                  description: "",
                  type: "Number"
                }
              }, {
                line: 1668,
                params: [{
                  name: "v1",
                  description: '<p>the first <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: '<p>the second <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }],
                static: 1,
                return: {
                  description: "the dot product",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 718,
              description: '<p>Calculates and returns a vector composed of the cross product between\ntwo vectors. Both the static and non static methods return a new <a href="#/p5.Vector">p5.Vector</a>.\nSee the examples for more context.</p>\n',
              itemtype: "method",
              name: "cross",
              return: {
                description: '<a href="#/p5.Vector">p5.Vector</a> composed of cross product',
                type: "p5.Vector"
              },
              example: ['\n<div class="norender">\n<code>\nlet v1 = createVector(1, 2, 3);\nlet v2 = createVector(1, 2, 3);\n\nv1.cross(v2); // v\'s components are [0, 0, 0]\n</code>\n</div>\n\n<div class="norender">\n<code>\n// Static method\nlet v1 = createVector(1, 0, 0);\nlet v2 = createVector(0, 1, 0);\n\nlet crossProduct = p5.Vector.cross(v1, v2);\n// crossProduct has components [0, 0, 1]\nprint(crossProduct);\n</code>\n</div>'],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 718,
                params: [{
                  name: "v",
                  description: '<p><a href="#/p5.Vector">p5.Vector</a> to be crossed</p>\n',
                  type: "p5.Vector"
                }],
                return: {
                  description: '<a href="#/p5.Vector">p5.Vector</a> composed of cross product',
                  type: "p5.Vector"
                }
              }, {
                line: 1682,
                params: [{
                  name: "v1",
                  description: '<p>the first <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: '<p>the second <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }],
                static: 1,
                return: {
                  description: "the cross product",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 759,
              description: "<p>Calculates the Euclidean distance between two points (considering a\npoint as a vector object).</p>\n",
              itemtype: "method",
              name: "dist",
              return: {
                description: "the distance",
                type: "Number"
              },
              example: ["\n<div class=\"norender\">\n<code>\nlet v1 = createVector(1, 0, 0);\nlet v2 = createVector(0, 1, 0);\n\nlet distance = v1.dist(v2); // distance is 1.4142...\nprint(distance);\n</code>\n</div>\n\n<div class=\"norender\">\n<code>\n// Static method\nlet v1 = createVector(1, 0, 0);\nlet v2 = createVector(0, 1, 0);\n\nlet distance = p5.Vector.dist(v1, v2);\n// distance is 1.4142...\nprint(distance);\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 0);\n\n  let v1 = createVector(70, 50);\n  drawArrow(v0, v1, 'red');\n\n  let v2 = createVector(mouseX, mouseY);\n  drawArrow(v0, v2, 'blue');\n\n  noStroke();\n  text('distance between vectors: ' + v2.dist(v1).toFixed(2), 5, 50, 95, 50);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 759,
                params: [{
                  name: "v",
                  description: '<p>the x, y, and z coordinates of a <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }],
                return: {
                  description: "the distance",
                  type: "Number"
                }
              }, {
                line: 1697,
                params: [{
                  name: "v1",
                  description: '<p>the first <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: '<p>the second <a href="#/p5.Vector">p5.Vector</a></p>\n',
                  type: "p5.Vector"
                }],
                static: 1,
                return: {
                  description: "the distance",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 830,
              description: "<p>Normalize the vector to length 1 (make it a unit vector).</p>\n",
              itemtype: "method",
              name: "normalize",
              return: {
                description: 'normalized <a href="#/p5.Vector">p5.Vector</a>',
                type: "p5.Vector"
              },
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(10, 20, 2);\n// v has components [10.0, 20.0, 2.0]\nv.normalize();\n// v's components are set to\n// [0.4454354, 0.8908708, 0.089087084]\n</code>\n</div>\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(50, 50);\n  let v1 = createVector(mouseX - 50, mouseY - 50);\n\n  drawArrow(v0, v1, 'red');\n  v1.normalize();\n  drawArrow(v0, v1.mult(35), 'blue');\n\n  noFill();\n  ellipse(50, 50, 35 * 2);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 886,
              description: "<p>Limit the magnitude of this vector to the value used for the <b>max</b>\nparameter.</p>\n",
              itemtype: "method",
              name: "limit",
              params: [{
                name: "max",
                description: "<p>the maximum magnitude for the vector</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(10, 20, 2);\n// v has components [10.0, 20.0, 2.0]\nv.limit(5);\n// v's components are set to\n// [2.2271771, 4.4543543, 0.4454354]\n</code>\n</div>\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(50, 50);\n  let v1 = createVector(mouseX - 50, mouseY - 50);\n\n  drawArrow(v0, v1, 'red');\n  drawArrow(v0, v1.limit(35), 'blue');\n\n  noFill();\n  ellipse(50, 50, 35 * 2);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 944,
              description: "<p>Set the magnitude of this vector to the value used for the <b>len</b>\nparameter.</p>\n",
              itemtype: "method",
              name: "setMag",
              params: [{
                name: "len",
                description: "<p>the new length for this vector</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(10, 20, 2);\n// v has components [10.0, 20.0, 2.0]\nv.setMag(10);\n// v's components are set to [6.0, 8.0, 0.0]\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(0, 0);\n  let v1 = createVector(50, 50);\n\n  drawArrow(v0, v1, 'red');\n\n  let length = map(mouseX, 0, width, 0, 141, true);\n  v1.setMag(length);\n  drawArrow(v0, v1, 'blue');\n\n  noStroke();\n  text('magnitude set to: ' + length.toFixed(2), 10, 70, 90, 30);\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1e3,
              description: "<p>Calculate the angle of rotation for this vector (only 2D vectors)</p>\n",
              itemtype: "method",
              name: "heading",
              return: {
                description: "the angle of rotation",
                type: "Number"
              },
              example: ["\n<div class = \"norender\">\n<code>\nfunction setup() {\n  let v1 = createVector(30, 50);\n  print(v1.heading()); // 1.0303768265243125\n\n  v1 = createVector(40, 50);\n  print(v1.heading()); // 0.8960553845713439\n\n  v1 = createVector(30, 70);\n  print(v1.heading()); // 1.1659045405098132\n}\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(50, 50);\n  let v1 = createVector(mouseX - 50, mouseY - 50);\n\n  drawArrow(v0, v1, 'black');\n\n  let myHeading = v1.heading();\n  noStroke();\n  text(\n    'vector heading: ' +\n      myHeading.toFixed(2) +\n      ' radians or ' +\n      degrees(myHeading).toFixed(2) +\n      ' degrees',\n    10,\n    50,\n    90,\n    50\n  );\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1069,
              description: "<p>Rotate the vector by an angle (only 2D vectors), magnitude remains the\nsame</p>\n",
              itemtype: "method",
              name: "rotate",
              params: [{
                name: "angle",
                description: "<p>the angle of rotation</p>\n",
                type: "Number"
              }],
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(10.0, 20.0);\n// v has components [10.0, 20.0, 0.0]\nv.rotate(HALF_PI);\n// v's components are set to [-20.0, 9.999999, 0.0]\n</code>\n</div>\n\n<div>\n<code>\nlet angle = 0;\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(50, 50);\n  let v1 = createVector(50, 0);\n\n  drawArrow(v0, v1.rotate(angle), 'black');\n  angle += 0.01;\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1125,
              description: "<p>Calculates and returns the angle (in radians) between two vectors.</p>\n",
              itemtype: "method",
              name: "angleBetween",
              params: [{
                name: "the",
                description: '<p>x, y, and z components of a <a href="#/p5.Vector">p5.Vector</a></p>\n',
                type: "p5.Vector"
              }],
              return: {
                description: "the angle between (in radians)",
                type: "Number"
              },
              example: ["\n<div class=\"norender\">\n<code>\nlet v1 = createVector(1, 0, 0);\nlet v2 = createVector(0, 1, 0);\n\nlet angle = v1.angleBetween(v2);\n// angle is PI/2\nprint(angle);\n</code>\n</div>\n\n<div>\n<code>\nfunction draw() {\n  background(240);\n  let v0 = createVector(50, 50);\n\n  let v1 = createVector(50, 0);\n  drawArrow(v0, v1, 'red');\n\n  let v2 = createVector(mouseX - 50, mouseY - 50);\n  drawArrow(v0, v2, 'blue');\n\n  let angleBetween = v1.angleBetween(v2);\n  noStroke();\n  text(\n    'angle between: ' +\n      angleBetween.toFixed(2) +\n      ' radians or ' +\n      degrees(angleBetween).toFixed(2) +\n      ' degrees',\n    10,\n    50,\n    90,\n    50\n  );\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1198,
              description: "<p>Linear interpolate the vector to another vector</p>\n",
              itemtype: "method",
              name: "lerp",
              chainable: 1,
              example: ["\n<div class=\"norender\">\n<code>\nlet v = createVector(1, 1, 0);\n\nv.lerp(3, 3, 0, 0.5); // v now has components [2,2,0]\n</code>\n</div>\n\n<div class=\"norender\">\n<code>\nlet v1 = createVector(0, 0, 0);\nlet v2 = createVector(100, 100, 0);\n\nlet v3 = p5.Vector.lerp(v1, v2, 0.5);\n// v3 has components [50,50,0]\nprint(v3);\n</code>\n</div>\n\n<div>\n<code>\nlet step = 0.01;\nlet amount = 0;\n\nfunction draw() {\n  background(240);\n  let v0 = createVector(0, 0);\n\n  let v1 = createVector(mouseX, mouseY);\n  drawArrow(v0, v1, 'red');\n\n  let v2 = createVector(90, 90);\n  drawArrow(v0, v2, 'blue');\n\n  if (amount > 1 || amount < 0) {\n    step *= -1;\n  }\n  amount += step;\n  let v3 = p5.Vector.lerp(v1, v2, amount);\n\n  drawArrow(v0, v3, 'purple');\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 1198,
                params: [{
                  name: "x",
                  description: "<p>the x component</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>the y component</p>\n",
                  type: "Number"
                }, {
                  name: "z",
                  description: "<p>the z component</p>\n",
                  type: "Number"
                }, {
                  name: "amt",
                  description: "<p>the amount of interpolation; some value between 0.0\n                        (old vector) and 1.0 (new vector). 0.9 is very near\n                        the new vector. 0.5 is halfway in between.</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 1271,
                params: [{
                  name: "v",
                  description: '<p>the <a href="#/p5.Vector">p5.Vector</a> to lerp to</p>\n',
                  type: "p5.Vector"
                }, {
                  name: "amt",
                  description: "",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 1712,
                params: [{
                  name: "v1",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "amt",
                  description: "",
                  type: "Number"
                }, {
                  name: "target",
                  description: "<p>if undefined a new vector will be created</p>\n",
                  type: "p5.Vector"
                }],
                static: 1
              }, {
                line: 1720,
                params: [{
                  name: "v1",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "v2",
                  description: "",
                  type: "p5.Vector"
                }, {
                  name: "amt",
                  description: "",
                  type: "Number"
                }],
                static: 1,
                return: {
                  description: "the lerped value",
                  type: "Number"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 1287,
              description: '<p>Return a representation of this vector as a float array. This is only\nfor temporary use. If used in any other fashion, the contents should be\ncopied by using the <b>p5.Vector.<a href="#/p5.Vector/copy">copy()</a></b> method to copy into your own\narray.</p>\n',
              itemtype: "method",
              name: "array",
              return: {
                description: "an Array with the 3 values",
                type: "Number[]"
              },
              example: ['\n<div class = "norender">\n<code>\nfunction setup() {\n  let v = createVector(20, 30);\n  print(v.array()); // Prints : Array [20, 30, 0]\n}\n</code>\n</div>\n\n<div class="norender">\n<code>\nlet v = createVector(10.0, 20.0, 30.0);\nlet f = v.array();\nprint(f[0]); // Prints "10.0"\nprint(f[1]); // Prints "20.0"\nprint(f[2]); // Prints "30.0"\n</code>\n</div>'],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1319,
              description: '<p>Equality check against a <a href="#/p5.Vector">p5.Vector</a></p>\n',
              itemtype: "method",
              name: "equals",
              return: {
                description: "whether the vectors are equals",
                type: "Boolean"
              },
              example: ['\n<div class = "norender">\n<code>\nlet v1 = createVector(5, 10, 20);\nlet v2 = createVector(5, 10, 20);\nlet v3 = createVector(13, 10, 19);\n\nprint(v1.equals(v2.x, v2.y, v2.z)); // true\nprint(v1.equals(v3.x, v3.y, v3.z)); // false\n</code>\n</div>\n\n<div class="norender">\n<code>\nlet v1 = createVector(10.0, 20.0, 30.0);\nlet v2 = createVector(10.0, 20.0, 30.0);\nlet v3 = createVector(0.0, 0.0, 0.0);\nprint(v1.equals(v2)); // true\nprint(v1.equals(v3)); // false\n</code>\n</div>'],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math",
              overloads: [{
                line: 1319,
                params: [{
                  name: "x",
                  description: "<p>the x component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "y",
                  description: "<p>the y component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "z",
                  description: "<p>the z component of the vector</p>\n",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "whether the vectors are equals",
                  type: "Boolean"
                }
              }, {
                line: 1349,
                params: [{
                  name: "value",
                  description: "<p>the vector to compare</p>\n",
                  type: "p5.Vector|Array"
                }],
                return: {
                  description: "",
                  type: "Boolean"
                }
              }]
            }, {
              file: "src/math/p5.Vector.js",
              line: 1374,
              description: "<p>Make a new 2D vector from an angle</p>\n",
              itemtype: "method",
              name: "fromAngle",
              static: 1,
              params: [{
                name: "angle",
                description: "<p>the desired angle, in radians</p>\n",
                type: "Number"
              }, {
                name: "length",
                description: "<p>the length of the new vector (defaults to 1)</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: 'the new <a href="#/p5.Vector">p5.Vector</a> object',
                type: "p5.Vector"
              },
              example: ["\n<div>\n<code>\nfunction draw() {\n  background(200);\n\n  // Create a variable, proportional to the mouseX,\n  // varying from 0-360, to represent an angle in degrees.\n  angleMode(DEGREES);\n  let myDegrees = map(mouseX, 0, width, 0, 360);\n\n  // Display that variable in an onscreen text.\n  // (Note the nfc() function to truncate additional decimal places,\n  // and the \"\\xB0\" character for the degree symbol.)\n  let readout = 'angle = ' + nfc(myDegrees, 1) + '\\xB0';\n  noStroke();\n  fill(0);\n  text(readout, 5, 15);\n\n  // Create a p5.Vector using the fromAngle function,\n  // and extract its x and y components.\n  let v = p5.Vector.fromAngle(radians(myDegrees), 30);\n  let vx = v.x;\n  let vy = v.y;\n\n  push();\n  translate(width / 2, height / 2);\n  noFill();\n  stroke(150);\n  line(0, 0, 30, 0);\n  stroke(0);\n  line(0, 0, vx, vy);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1426,
              description: "<p>Make a new 3D vector from a pair of ISO spherical angles</p>\n",
              itemtype: "method",
              name: "fromAngles",
              static: 1,
              params: [{
                name: "theta",
                description: "<p>the polar angle, in radians (zero is up)</p>\n",
                type: "Number"
              }, {
                name: "phi",
                description: "<p>the azimuthal angle, in radians\n                              (zero is out of the screen)</p>\n",
                type: "Number"
              }, {
                name: "length",
                description: "<p>the length of the new vector (defaults to 1)</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: 'the new <a href="#/p5.Vector">p5.Vector</a> object',
                type: "p5.Vector"
              },
              example: ["\n<div modernizr='webgl'>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  fill(255);\n  noStroke();\n}\nfunction draw() {\n  background(255);\n\n  let t = millis() / 1000;\n\n  // add three point lights\n  pointLight(color('#f00'), p5.Vector.fromAngles(t * 1.0, t * 1.3, 100));\n  pointLight(color('#0f0'), p5.Vector.fromAngles(t * 1.1, t * 1.2, 100));\n  pointLight(color('#00f'), p5.Vector.fromAngles(t * 1.2, t * 1.1, 100));\n\n  sphere(35);\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1475,
              description: "<p>Make a new 2D unit vector from a random angle</p>\n",
              itemtype: "method",
              name: "random2D",
              static: 1,
              return: {
                description: 'the new <a href="#/p5.Vector">p5.Vector</a> object',
                type: "p5.Vector"
              },
              example: ["\n<div class=\"norender\">\n<code>\nlet v = p5.Vector.random2D();\n// May make v's attributes something like:\n// [0.61554617, -0.51195765, 0.0] or\n// [-0.4695841, -0.14366731, 0.0] or\n// [0.6091097, -0.22805278, 0.0]\nprint(v);\n</code>\n</div>\n\n<div>\n<code>\nfunction setup() {\n  frameRate(1);\n}\n\nfunction draw() {\n  background(240);\n\n  let v0 = createVector(50, 50);\n  let v1 = p5.Vector.random2D();\n  drawArrow(v0, v1.mult(50), 'black');\n}\n\n// draw an arrow for a vector at a given base position\nfunction drawArrow(base, vec, myColor) {\n  push();\n  stroke(myColor);\n  strokeWeight(3);\n  fill(myColor);\n  translate(base.x, base.y);\n  line(0, 0, vec.x, vec.y);\n  rotate(vec.heading());\n  let arrowSize = 7;\n  translate(vec.mag() - arrowSize, 0);\n  triangle(0, arrowSize / 2, 0, -arrowSize / 2, arrowSize, 0);\n  pop();\n}\n</code>\n</div>"],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1528,
              description: "<p>Make a new random 3D unit vector.</p>\n",
              itemtype: "method",
              name: "random3D",
              static: 1,
              return: {
                description: 'the new <a href="#/p5.Vector">p5.Vector</a> object',
                type: "p5.Vector"
              },
              example: ['\n<div class="norender">\n<code>\nlet v = p5.Vector.random3D();\n// May make v\'s attributes something like:\n// [0.61554617, -0.51195765, 0.599168] or\n// [-0.4695841, -0.14366731, -0.8711202] or\n// [0.6091097, -0.22805278, -0.7595902]\nprint(v);\n</code>\n</div>'],
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1611,
              description: "<p>Multiplies a vector by a scalar and returns a new vector.</p>\n",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1638,
              description: "<p>Divides a vector by a scalar and returns a new vector.</p>\n",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1665,
              description: "<p>Calculates the dot product of two vectors.</p>\n",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1679,
              description: "<p>Calculates the cross product of two vectors.</p>\n",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1693,
              description: "<p>Calculates the Euclidean distance between two points (considering a\npoint as a vector object).</p>\n",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/p5.Vector.js",
              line: 1708,
              description: "<p>Linear interpolate a vector to another vector and return the result as a\nnew vector.</p>\n",
              class: "p5.Vector",
              module: "Math",
              submodule: "Math"
            }, {
              file: "src/math/random.js",
              line: 48,
              description: '<p>Sets the seed value for <a href="#/p5/random">random()</a>.</p>\n<p>By default, <a href="#/p5/random">random()</a> produces different results each time the program\nis run. Set the seed parameter to a constant to return the same\npseudo-random numbers each time the software is run.</p>\n',
              itemtype: "method",
              name: "randomSeed",
              params: [{
                name: "seed",
                description: "<p>the seed value</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nrandomSeed(99);\nfor (let i = 0; i < 100; i++) {\n  let r = random(0, 255);\n  stroke(r);\n  line(i, 0, i, 100);\n}\n</code>\n</div>"],
              alt: "many vertical lines drawn in white, black or grey.",
              class: "p5",
              module: "Math",
              submodule: "Random"
            }, {
              file: "src/math/random.js",
              line: 79,
              description: "<p>Return a random floating-point number.</p>\n<p>Takes either 0, 1 or 2 arguments.</p>\n<p>If no argument is given, returns a random number from 0\nup to (but not including) 1.</p>\n<p>If one argument is given and it is a number, returns a random number from 0\nup to (but not including) the number.</p>\n<p>If one argument is given and it is an array, returns a random element from\nthat array.</p>\n<p>If two arguments are given, returns a random number from the\nfirst argument up to (but not including) the second argument.</p>\n",
              itemtype: "method",
              name: "random",
              return: {
                description: "the random number",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nfor (let i = 0; i < 100; i++) {\n  let r = random(50);\n  stroke(r * 5);\n  line(50, i, 50 + r, i);\n}\n</code>\n</div>\n<div>\n<code>\nfor (let i = 0; i < 100; i++) {\n  let r = random(-50, 50);\n  line(50, i, 50 + r, i);\n}\n</code>\n</div>\n<div>\n<code>\n// Get a random element from an array using the random(Array) syntax\nlet words = ['apple', 'bear', 'cat', 'dog'];\nlet word = random(words); // select random word\ntext(word, 10, 50); // draw the word\n</code>\n</div>"],
              alt: "100 horizontal lines from center canvas to right. size+fill change each time\n100 horizontal lines from center of canvas. height & side change each render\nword displayed at random. Either apple, bear, cat, or dog",
              class: "p5",
              module: "Math",
              submodule: "Random",
              overloads: [{
                line: 79,
                params: [{
                  name: "min",
                  description: "<p>the lower bound (inclusive)</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "max",
                  description: "<p>the upper bound (exclusive)</p>\n",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "the random number",
                  type: "Number"
                }
              }, {
                line: 133,
                params: [{
                  name: "choices",
                  description: "<p>the array to choose from</p>\n",
                  type: "Array"
                }],
                return: {
                  description: "the random element from the array",
                  type: "*"
                }
              }]
            }, {
              file: "src/math/random.js",
              line: 166,
              description: '<p>Returns a random number fitting a Gaussian, or\n normal, distribution. There is theoretically no minimum or maximum\n value that <a href="#/p5/randomGaussian">randomGaussian()</a> might return. Rather, there is\n just a very low probability that values far from the mean will be\n returned; and a higher probability that numbers near the mean will\n be returned.\n <br><br>\n Takes either 0, 1 or 2 arguments.<br>\n If no args, returns a mean of 0 and standard deviation of 1.<br>\n If one arg, that arg is the mean (standard deviation is 1).<br>\n If two args, first is mean, second is standard deviation.</p>\n',
              itemtype: "method",
              name: "randomGaussian",
              params: [{
                name: "mean",
                description: "<p>the mean</p>\n",
                type: "Number"
              }, {
                name: "sd",
                description: "<p>the standard deviation</p>\n",
                type: "Number"
              }],
              return: {
                description: "the random number",
                type: "Number"
              },
              example: ["\n <div>\n <code>\n for (let y = 0; y < 100; y++) {\n   let x = randomGaussian(50, 15);\n   line(50, y, x, y);\n }\n </code>\n </div>\n <div>\n <code>\n let distribution = new Array(360);\nfunction setup() {\n   createCanvas(100, 100);\n   for (let i = 0; i < distribution.length; i++) {\n     distribution[i] = floor(randomGaussian(0, 15));\n   }\n }\nfunction draw() {\n   background(204);\n  translate(width / 2, width / 2);\n  for (let i = 0; i < distribution.length; i++) {\n     rotate(TWO_PI / distribution.length);\n     stroke(0);\n     let dist = abs(distribution[i]);\n     line(0, 0, dist, 0);\n   }\n }\n </code>\n </div>"],
              alt: "100 horizontal lines from center of canvas. height & side change each render\n black lines radiate from center of canvas. size determined each render",
              class: "p5",
              module: "Math",
              submodule: "Random"
            }, {
              file: "src/math/trigonometry.js",
              line: 20,
              description: '<p>The inverse of <a href="#/p5/cos">cos()</a>, returns the arc cosine of a value. This function\nexpects the values in the range of -1 to 1 and values are returned in\nthe range 0 to PI (3.1415927).</p>\n',
              itemtype: "method",
              name: "acos",
              params: [{
                name: "value",
                description: "<p>the value whose arc cosine is to be returned</p>\n",
                type: "Number"
              }],
              return: {
                description: "the arc cosine of the given value",
                type: "Number"
              },
              example: ["\n<div class= “norender\">\n<code>\nlet a = PI;\nlet c = cos(a);\nlet ac = acos(c);\n// Prints: \"3.1415927 : -1.0 : 3.1415927\"\nprint(a + ' : ' + c + ' : ' + ac);\n</code>\n</div>\n\n<div class= “norender\">\n<code>\nlet a = PI + PI / 4.0;\nlet c = cos(a);\nlet ac = acos(c);\n// Prints: \"3.926991 : -0.70710665 : 2.3561943\"\nprint(a + ' : ' + c + ' : ' + ac);\n</code>\n</div>"],
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 54,
              description: '<p>The inverse of <a href="#/p5/sin">sin()</a>, returns the arc sine of a value. This function\nexpects the values in the range of -1 to 1 and values are returned\nin the range -PI/2 to PI/2.</p>\n',
              itemtype: "method",
              name: "asin",
              params: [{
                name: "value",
                description: "<p>the value whose arc sine is to be returned</p>\n",
                type: "Number"
              }],
              return: {
                description: "the arc sine of the given value",
                type: "Number"
              },
              example: ["\n<div class= “norender\">\n<code>\nlet a = PI + PI / 3;\nlet s = sin(a);\nlet as = asin(s);\n// Prints: \"1.0471976 : 0.86602545 : 1.0471976\"\nprint(a + ' : ' + s + ' : ' + as);\n</code>\n</div>\n\n<div class= “norender\">\n<code>\nlet a = PI + PI / 3.0;\nlet s = sin(a);\nlet as = asin(s);\n// Prints: \"4.1887903 : -0.86602545 : -1.0471976\"\nprint(a + ' : ' + s + ' : ' + as);\n</code>\n</div>\n"],
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 89,
              description: '<p>The inverse of <a href="#/p5/tan">tan()</a>, returns the arc tangent of a value. This function\nexpects the values in the range of -Infinity to Infinity (exclusive) and\nvalues are returned in the range -PI/2 to PI/2.</p>\n',
              itemtype: "method",
              name: "atan",
              params: [{
                name: "value",
                description: "<p>the value whose arc tangent is to be returned</p>\n",
                type: "Number"
              }],
              return: {
                description: "the arc tangent of the given value",
                type: "Number"
              },
              example: ["\n<div class= “norender\">\n<code>\nlet a = PI + PI / 3;\nlet t = tan(a);\nlet at = atan(t);\n// Prints: \"1.0471976 : 1.7320509 : 1.0471976\"\nprint(a + ' : ' + t + ' : ' + at);\n</code>\n</div>\n\n<div class= “norender\">\n<code>\nlet a = PI + PI / 3.0;\nlet t = tan(a);\nlet at = atan(t);\n// Prints: \"4.1887903 : 1.7320513 : 1.0471977\"\nprint(a + ' : ' + t + ' : ' + at);\n</code>\n</div>\n"],
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 124,
              description: '<p>Calculates the angle (in radians) from a specified point to the coordinate\norigin as measured from the positive x-axis. Values are returned as a\nfloat in the range from PI to -PI. The atan2<a href="#/p5/">()</a> function is most often used\nfor orienting geometry to the position of the cursor.\n<br><br>\nNote: The y-coordinate of the point is the first parameter, and the\nx-coordinate is the second parameter, due the the structure of calculating\nthe tangent.</p>\n',
              itemtype: "method",
              name: "atan2",
              params: [{
                name: "y",
                description: "<p>y-coordinate of the point</p>\n",
                type: "Number"
              }, {
                name: "x",
                description: "<p>x-coordinate of the point</p>\n",
                type: "Number"
              }],
              return: {
                description: "the arc tangent of the given point",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nfunction draw() {\n  background(204);\n  translate(width / 2, height / 2);\n  let a = atan2(mouseY - height / 2, mouseX - width / 2);\n  rotate(a);\n  rect(-30, -5, 60, 10);\n}\n</code>\n</div>"],
              alt: "60 by 10 rect at center of canvas rotates with mouse movements",
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 160,
              description: '<p>Calculates the cosine of an angle. This function takes into account the\ncurrent <a href="#/p5/angleMode">angleMode</a>. Values are returned in the range -1 to 1.</p>\n',
              itemtype: "method",
              name: "cos",
              params: [{
                name: "angle",
                description: "<p>the angle</p>\n",
                type: "Number"
              }],
              return: {
                description: "the cosine of the angle",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet a = 0.0;\nlet inc = TWO_PI / 25.0;\nfor (let i = 0; i < 25; i++) {\n  line(i * 4, 50, i * 4, 50 + cos(a) * 40.0);\n  a = a + inc;\n}\n</code>\n</div>"],
              alt: "vertical black lines form wave patterns, extend-down on left and right side",
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 188,
              description: '<p>Calculates the sine of an angle. This function takes into account the\ncurrent <a href="#/p5/angleMode">angleMode</a>. Values are returned in the range -1 to 1.</p>\n',
              itemtype: "method",
              name: "sin",
              params: [{
                name: "angle",
                description: "<p>the angle</p>\n",
                type: "Number"
              }],
              return: {
                description: "the sine of the angle",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet a = 0.0;\nlet inc = TWO_PI / 25.0;\nfor (let i = 0; i < 25; i++) {\n  line(i * 4, 50, i * 4, 50 + sin(a) * 40.0);\n  a = a + inc;\n}\n</code>\n</div>"],
              alt: "vertical black lines extend down and up from center to form wave pattern",
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 216,
              description: '<p>Calculates the tangent of an angle. This function takes into account\nthe current <a href="#/p5/angleMode">angleMode</a>. Values are returned in the range -1 to 1.</p>\n',
              itemtype: "method",
              name: "tan",
              params: [{
                name: "angle",
                description: "<p>the angle</p>\n",
                type: "Number"
              }],
              return: {
                description: "the tangent of the angle",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet a = 0.0;\nlet inc = TWO_PI / 50.0;\nfor (let i = 0; i < 100; i = i + 2) {\n  line(i, 50, i, 50 + tan(a) * 2.0);\n  a = a + inc;\n}\n</code>"],
              alt: "vertical black lines end down and up from center to form spike pattern",
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 244,
              description: '<p>Converts a radian measurement to its corresponding value in degrees.\nRadians and degrees are two ways of measuring the same thing. There are\n360 degrees in a circle and 2*PI radians in a circle. For example,\n90° = PI/2 = 1.5707964. This function does not take into account the\ncurrent <a href="#/p5/angleMode">angleMode</a>.</p>\n',
              itemtype: "method",
              name: "degrees",
              params: [{
                name: "radians",
                description: "<p>the radians value to convert to degrees</p>\n",
                type: "Number"
              }],
              return: {
                description: "the converted angle",
                type: "Number"
              },
              example: ["\n<div class= “norender\">\n<code>\nlet rad = PI / 4;\nlet deg = degrees(rad);\nprint(rad + ' radians is ' + deg + ' degrees');\n// Prints: 0.7853981633974483 radians is 45 degrees\n</code>\n</div>\n"],
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 271,
              description: '<p>Converts a degree measurement to its corresponding value in radians.\nRadians and degrees are two ways of measuring the same thing. There are\n360 degrees in a circle and 2*PI radians in a circle. For example,\n90° = PI/2 = 1.5707964. This function does not take into account the\ncurrent <a href="#/p5/angleMode">angleMode</a>.</p>\n',
              itemtype: "method",
              name: "radians",
              params: [{
                name: "degrees",
                description: "<p>the degree value to convert to radians</p>\n",
                type: "Number"
              }],
              return: {
                description: "the converted angle",
                type: "Number"
              },
              example: ["\n<div class= “norender\">\n<code>\nlet deg = 45.0;\nlet rad = radians(deg);\nprint(deg + ' degrees is ' + rad + ' radians');\n// Prints: 45 degrees is 0.7853981633974483 radians\n</code>\n</div>"],
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/math/trigonometry.js",
              line: 296,
              description: "<p>Sets the current mode of p5 to given mode. Default mode is RADIANS.</p>\n",
              itemtype: "method",
              name: "angleMode",
              params: [{
                name: "mode",
                description: "<p>either RADIANS or DEGREES</p>\n",
                type: "Constant"
              }],
              example: ["\n<div>\n<code>\nfunction draw() {\n  background(204);\n  angleMode(DEGREES); // Change the mode to DEGREES\n  let a = atan2(mouseY - height / 2, mouseX - width / 2);\n  translate(width / 2, height / 2);\n  push();\n  rotate(a);\n  rect(-20, -5, 40, 10); // Larger rectangle is rotating in degrees\n  pop();\n  angleMode(RADIANS); // Change the mode to RADIANS\n  rotate(a); // variable a stays the same\n  rect(-40, -5, 20, 10); // Smaller rectangle is rotating in radians\n}\n</code>\n</div>"],
              alt: "40 by 10 rect in center rotates with mouse moves. 20 by 10 rect moves faster.",
              class: "p5",
              module: "Math",
              submodule: "Trigonometry"
            }, {
              file: "src/typography/attributes.js",
              line: 13,
              description: '<p>Sets the current alignment for drawing text. Accepts two\narguments: horizAlign (LEFT, CENTER, or RIGHT) and\nvertAlign (TOP, BOTTOM, CENTER, or BASELINE).</p>\n<p>The horizAlign parameter is in reference to the x value\nof the <a href="#/p5/text">text()</a> function, while the vertAlign parameter is\nin reference to the y value.</p>\n<p>So if you write textAlign(LEFT), you are aligning the left\nedge of your text to the x value you give in <a href="#/p5/text">text()</a>. If you\nwrite textAlign(RIGHT, TOP), you are aligning the right edge\nof your text to the x value and the top of edge of the text\nto the y value.</p>\n',
              itemtype: "method",
              name: "textAlign",
              chainable: 1,
              example: ["\n<div>\n<code>\ntextSize(16);\ntextAlign(RIGHT);\ntext('ABCD', 50, 30);\ntextAlign(CENTER);\ntext('EFGH', 50, 50);\ntextAlign(LEFT);\ntext('IJKL', 50, 70);\n</code>\n</div>\n\n<div>\n<code>\ntextSize(16);\nstrokeWeight(0.5);\n\nline(0, 12, width, 12);\ntextAlign(CENTER, TOP);\ntext('TOP', 0, 12, width);\n\nline(0, 37, width, 37);\ntextAlign(CENTER, CENTER);\ntext('CENTER', 0, 37, width);\n\nline(0, 62, width, 62);\ntextAlign(CENTER, BASELINE);\ntext('BASELINE', 0, 62, width);\n\nline(0, 87, width, 87);\ntextAlign(CENTER, BOTTOM);\ntext('BOTTOM', 0, 87, width);\n</code>\n</div>"],
              alt: "Letters ABCD displayed at top right, EFGH at center and IJKL at bottom left.\nThe names of the four vertical alignments rendered each showing that alignment's placement relative to a horizontal line.",
              class: "p5",
              module: "Typography",
              submodule: "Attributes",
              overloads: [{
                line: 13,
                params: [{
                  name: "horizAlign",
                  description: "<p>horizontal alignment, either LEFT,\n                           CENTER, or RIGHT</p>\n",
                  type: "Constant"
                }, {
                  name: "vertAlign",
                  description: "<p>vertical alignment, either TOP,\n                           BOTTOM, CENTER, or BASELINE</p>\n",
                  type: "Constant",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 75,
                params: [],
                return: {
                  description: "",
                  type: "Object"
                }
              }]
            }, {
              file: "src/typography/attributes.js",
              line: 84,
              description: '<p>Sets/gets the spacing, in pixels, between lines of text. This\nsetting will be used in all subsequent calls to the <a href="#/p5/text">text()</a> function.</p>\n',
              itemtype: "method",
              name: "textLeading",
              chainable: 1,
              example: ['\n<div>\n<code>\n// Text to display. The "\\n" is a "new line" character\nlet lines = \'L1\\nL2\\nL3\';\ntextSize(12);\n\ntextLeading(10); // Set leading to 10\ntext(lines, 10, 25);\n\ntextLeading(20); // Set leading to 20\ntext(lines, 40, 25);\n\ntextLeading(30); // Set leading to 30\ntext(lines, 70, 25);\n</code>\n</div>'],
              alt: "set L1 L2 & L3 displayed vertically 3 times. spacing increases for each set",
              class: "p5",
              module: "Typography",
              submodule: "Attributes",
              overloads: [{
                line: 84,
                params: [{
                  name: "leading",
                  description: "<p>the size in pixels for spacing between lines</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 113,
                params: [],
                return: {
                  description: "",
                  type: "Number"
                }
              }]
            }, {
              file: "src/typography/attributes.js",
              line: 122,
              description: '<p>Sets/gets the current font size. This size will be used in all subsequent\ncalls to the <a href="#/p5/text">text()</a> function. Font size is measured in pixels.</p>\n',
              itemtype: "method",
              name: "textSize",
              chainable: 1,
              example: ["\n<div>\n<code>\ntextSize(12);\ntext('Font Size 12', 10, 30);\ntextSize(14);\ntext('Font Size 14', 10, 60);\ntextSize(16);\ntext('Font Size 16', 10, 90);\n</code>\n</div>"],
              alt: "Font Size 12 displayed small, Font Size 14 medium & Font Size 16 large",
              class: "p5",
              module: "Typography",
              submodule: "Attributes",
              overloads: [{
                line: 122,
                params: [{
                  name: "theSize",
                  description: "<p>the size of the letters in units of pixels</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 145,
                params: [],
                return: {
                  description: "",
                  type: "Number"
                }
              }]
            }, {
              file: "src/typography/attributes.js",
              line: 154,
              description: "<p>Sets/gets the style of the text for system fonts to NORMAL, ITALIC, BOLD or BOLDITALIC.\nNote: this may be is overridden by CSS styling. For non-system fonts\n(opentype, truetype, etc.) please load styled fonts instead.</p>\n",
              itemtype: "method",
              name: "textStyle",
              chainable: 1,
              example: ["\n<div>\n<code>\nstrokeWeight(0);\ntextSize(12);\ntextStyle(NORMAL);\ntext('Font Style Normal', 10, 15);\ntextStyle(ITALIC);\ntext('Font Style Italic', 10, 40);\ntextStyle(BOLD);\ntext('Font Style Bold', 10, 65);\ntextStyle(BOLDITALIC);\ntext('Font Style Bold Italic', 10, 90);\n</code>\n</div>"],
              alt: "words Font Style Normal displayed normally, Italic in italic, bold in bold and bold italic in bold italics.",
              class: "p5",
              module: "Typography",
              submodule: "Attributes",
              overloads: [{
                line: 154,
                params: [{
                  name: "theStyle",
                  description: "<p>styling for text, either NORMAL,\n                           ITALIC, BOLD or BOLDITALIC</p>\n",
                  type: "Constant"
                }],
                chainable: 1
              }, {
                line: 182,
                params: [],
                return: {
                  description: "",
                  type: "String"
                }
              }]
            }, {
              file: "src/typography/attributes.js",
              line: 191,
              description: "<p>Calculates and returns the width of any character or text string.</p>\n",
              itemtype: "method",
              name: "textWidth",
              params: [{
                name: "theText",
                description: "<p>the String of characters to measure</p>\n",
                type: "String"
              }],
              return: {
                description: "",
                type: "Number"
              },
              example: ["\n<div>\n<code>\ntextSize(28);\n\nlet aChar = 'P';\nlet cWidth = textWidth(aChar);\ntext(aChar, 0, 40);\nline(cWidth, 0, cWidth, 50);\n\nlet aString = 'p5.js';\nlet sWidth = textWidth(aString);\ntext(aString, 0, 85);\nline(sWidth, 50, sWidth, 100);\n</code>\n</div>"],
              alt: "Letter P and p5.js are displayed with vertical lines at end. P is wide",
              class: "p5",
              module: "Typography",
              submodule: "Attributes"
            }, {
              file: "src/typography/attributes.js",
              line: 226,
              description: "<p>Returns the ascent of the current font at its current size. The ascent\nrepresents the distance, in pixels, of the tallest character above\nthe baseline.</p>\n",
              itemtype: "method",
              name: "textAscent",
              return: {
                description: "",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet base = height * 0.75;\nlet scalar = 0.8; // Different for each font\n\ntextSize(32); // Set initial text size\nlet asc = textAscent() * scalar; // Calc ascent\nline(0, base - asc, width, base - asc);\ntext('dp', 0, base); // Draw text on baseline\n\ntextSize(64); // Increase text size\nasc = textAscent() * scalar; // Recalc ascent\nline(40, base - asc, width, base - asc);\ntext('dp', 40, base); // Draw text on baseline\n</code>\n</div>"],
              class: "p5",
              module: "Typography",
              submodule: "Attributes"
            }, {
              file: "src/typography/attributes.js",
              line: 255,
              description: "<p>Returns the descent of the current font at its current size. The descent\nrepresents the distance, in pixels, of the character with the longest\ndescender below the baseline.</p>\n",
              itemtype: "method",
              name: "textDescent",
              return: {
                description: "",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nlet base = height * 0.75;\nlet scalar = 0.8; // Different for each font\n\ntextSize(32); // Set initial text size\nlet desc = textDescent() * scalar; // Calc ascent\nline(0, base + desc, width, base + desc);\ntext('dp', 0, base); // Draw text on baseline\n\ntextSize(64); // Increase text size\ndesc = textDescent() * scalar; // Recalc ascent\nline(40, base + desc, width, base + desc);\ntext('dp', 40, base); // Draw text on baseline\n</code>\n</div>"],
              class: "p5",
              module: "Typography",
              submodule: "Attributes"
            }, {
              file: "src/typography/attributes.js",
              line: 284,
              description: "<p>Helper function to measure ascent and descent.</p>\n",
              class: "p5",
              module: "Typography",
              submodule: "Attributes"
            }, {
              file: "src/typography/loading_displaying.js",
              line: 16,
              description: "<p>Loads an opentype font file (.otf, .ttf) from a file or a URL,\nand returns a PFont Object. This method is asynchronous,\nmeaning it may not finish before the next line in your sketch\nis executed.\n<br><br>\nThe path to the font should be relative to the HTML file\nthat links in your sketch. Loading fonts from a URL or other\nremote location may be blocked due to your browser&#39;s built-in\nsecurity.</p>\n",
              itemtype: "method",
              name: "loadFont",
              params: [{
                name: "path",
                description: "<p>name of the file or url to load</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: '<p>function to be executed after\n                                   <a href="#/p5/loadFont">loadFont()</a> completes</p>\n',
                type: "Function",
                optional: !0
              }, {
                name: "onError",
                description: "<p>function to be executed if\n                                   an error occurs</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: '<a href="#/p5.Font">p5.Font</a> object',
                type: "p5.Font"
              },
              example: ["\n\n<p>Calling loadFont() inside <a href=\"#/p5/preload\">preload()</a> guarantees that the load\noperation will have completed before <a href=\"#/p5/setup\">setup()</a> and <a href=\"#/p5/draw\">draw()</a> are called.</p>\n\n<div><code>\nlet myFont;\nfunction preload() {\n  myFont = loadFont('assets/AvenirNextLTPro-Demi.otf');\n}\n\nfunction setup() {\n  fill('#ED225D');\n  textFont(myFont);\n  textSize(36);\n  text('p5*js', 10, 50);\n}\n</code></div>\n\nOutside of <a href=\"#/p5/preload\">preload()</a>, you may supply a callback function to handle the\nobject:\n\n<div><code>\nfunction setup() {\n  loadFont('assets/AvenirNextLTPro-Demi.otf', drawText);\n}\n\nfunction drawText(font) {\n  fill('#ED225D');\n  textFont(font, 36);\n  text('p5*js', 10, 50);\n}\n</code></div>\n\n<p>You can also use the font filename string (without the file extension) to style other HTML\nelements.</p>\n\n<div><code>\nfunction preload() {\n  loadFont('assets/Avenir.otf');\n}\n\nfunction setup() {\n  let myDiv = createDiv('hello there');\n  myDiv.style('font-family', 'Avenir');\n}\n</code></div>"],
              alt: "p5*js in p5's theme dark pink\np5*js in p5's theme dark pink",
              class: "p5",
              module: "Typography",
              submodule: "Loading & Displaying"
            }, {
              file: "src/typography/loading_displaying.js",
              line: 143,
              description: '<p>Draws text to the screen. Displays the information specified in the first\nparameter on the screen in the position specified by the additional\nparameters. A default font will be used unless a font is set with the\n<a href="#/p5/textFont">textFont()</a> function and a default size will be used unless a font is set\nwith <a href="#/p5/textSize">textSize()</a>. Change the color of the text with the <a href="#/p5/fill">fill()</a> function.\nChange the outline of the text with the <a href="#/p5/stroke">stroke()</a> and <a href="#/p5/strokeWeight">strokeWeight()</a>\nfunctions.\n<br><br>\nThe text displays in relation to the <a href="#/p5/textAlign">textAlign()</a> function, which gives the\noption to draw to the left, right, and center of the coordinates.\n<br><br>\nThe x2 and y2 parameters define a rectangular area to display within and\nmay only be used with string data. When these parameters are specified,\nthey are interpreted based on the current <a href="#/p5/rectMode">rectMode()</a> setting. Text that\ndoes not fit completely within the rectangle specified will not be drawn\nto the screen. If x2 and y2 are not specified, the baseline alignment is the\ndefault, which means that the text will be drawn upwards from x and y.\n<br><br>\n<b>WEBGL</b>: Only opentype/truetype fonts are supported. You must load a font using the\n<a href="#/p5/loadFont">loadFont()</a> method (see the example above).\n<a href="#/p5/stroke">stroke()</a> currently has no effect in webgl mode.</p>\n',
              itemtype: "method",
              name: "text",
              params: [{
                name: "str",
                description: "<p>the alphanumeric\n                                            symbols to be displayed</p>\n",
                type: "String|Object|Array|Number|Boolean"
              }, {
                name: "x",
                description: "<p>x-coordinate of text</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-coordinate of text</p>\n",
                type: "Number"
              }, {
                name: "x2",
                description: '<p>by default, the width of the text box,\n                    see <a href="#/p5/rectMode">rectMode()</a> for more info</p>\n',
                type: "Number",
                optional: !0
              }, {
                name: "y2",
                description: '<p>by default, the height of the text box,\n                    see <a href="#/p5/rectMode">rectMode()</a> for more info</p>\n',
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\ntextSize(32);\ntext('word', 10, 30);\nfill(0, 102, 153);\ntext('word', 10, 60);\nfill(0, 102, 153, 51);\ntext('word', 10, 90);\n</code>\n</div>\n<div>\n<code>\nlet s = 'The quick brown fox jumped over the lazy dog.';\nfill(50);\ntext(s, 10, 10, 70, 80); // Text wraps within text box\n</code>\n</div>\n\n<div modernizr='webgl'>\n<code>\nlet avenir;\nfunction preload() {\n  avenir = loadFont('assets/Avenir.otf');\n}\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  textFont(avenir);\n  textSize(width / 3);\n  textAlign(CENTER, CENTER);\n}\nfunction draw() {\n  background(0);\n  let time = millis();\n  rotateX(time / 1000);\n  rotateZ(time / 1234);\n  text('p5.js', 0, 0);\n}\n</code>\n</div>"],
              alt: "'word' displayed 3 times going from black, blue to translucent blue\nThe quick brown fox jumped over the lazy dog.\nthe text 'p5.js' spinning in 3d",
              class: "p5",
              module: "Typography",
              submodule: "Loading & Displaying"
            }, {
              file: "src/typography/loading_displaying.js",
              line: 230,
              description: '<p>Sets the current font that will be drawn with the <a href="#/p5/text">text()</a> function.\n<br><br>\n<b>WEBGL</b>: Only fonts loaded via <a href="#/p5/loadFont">loadFont()</a> are supported.</p>\n',
              itemtype: "method",
              name: "textFont",
              return: {
                description: "the current font",
                type: "Object"
              },
              example: ["\n<div>\n<code>\nfill(0);\ntextSize(12);\ntextFont('Georgia');\ntext('Georgia', 12, 30);\ntextFont('Helvetica');\ntext('Helvetica', 12, 60);\n</code>\n</div>\n<div>\n<code>\nlet fontRegular, fontItalic, fontBold;\nfunction preload() {\n  fontRegular = loadFont('assets/Regular.otf');\n  fontItalic = loadFont('assets/Italic.ttf');\n  fontBold = loadFont('assets/Bold.ttf');\n}\nfunction setup() {\n  background(210);\n  fill(0)\n   .strokeWeight(0)\n   .textSize(10);\n  textFont(fontRegular);\n  text('Font Style Normal', 10, 30);\n  textFont(fontItalic);\n  text('Font Style Italic', 10, 50);\n  textFont(fontBold);\n  text('Font Style Bold', 10, 70);\n}\n</code>\n</div>"],
              alt: "words Font Style Normal displayed normally, Italic in italic and bold in bold",
              class: "p5",
              module: "Typography",
              submodule: "Loading & Displaying",
              overloads: [{
                line: 230,
                params: [],
                return: {
                  description: "the current font",
                  type: "Object"
                }
              }, {
                line: 275,
                params: [{
                  name: "font",
                  description: '<p>a font loaded via <a href="#/p5/loadFont">loadFont()</a>, or a String\nrepresenting a <a href="https://mzl.la/2dOw8WD">web safe font</a> (a font\nthat is generally available across all systems)</p>\n',
                  type: "Object|String"
                }, {
                  name: "size",
                  description: "<p>the font size to use</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "src/typography/p5.Font.js",
              line: 25,
              description: "<p>Underlying opentype font implementation</p>\n",
              itemtype: "property",
              name: "font",
              class: "p5.Font",
              module: "Typography",
              submodule: "Font"
            }, {
              file: "src/typography/p5.Font.js",
              line: 32,
              description: "<p>Returns a tight bounding box for the given text string using this\nfont (currently only supports single lines)</p>\n",
              itemtype: "method",
              name: "textBounds",
              params: [{
                name: "line",
                description: "<p>a line of text</p>\n",
                type: "String"
              }, {
                name: "x",
                description: "<p>x-position</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-position</p>\n",
                type: "Number"
              }, {
                name: "fontSize",
                description: "<p>font size to use (optional) Default is 12.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "options",
                description: "<p>opentype options (optional)\n                           opentype fonts contains alignment and baseline options.\n                           Default is &#39;LEFT&#39; and &#39;alphabetic&#39;</p>\n",
                type: "Object",
                optional: !0
              }],
              return: {
                description: "a rectangle object with properties: x, y, w, h",
                type: "Object"
              },
              example: ["\n<div>\n<code>\nlet font;\nlet textString = 'Lorem ipsum dolor sit amet.';\nfunction preload() {\n  font = loadFont('./assets/Regular.otf');\n}\nfunction setup() {\n  background(210);\n\n  let bbox = font.textBounds(textString, 10, 30, 12);\n  fill(255);\n  stroke(0);\n  rect(bbox.x, bbox.y, bbox.w, bbox.h);\n  fill(0);\n  noStroke();\n\n  textFont(font);\n  textSize(12);\n  text(textString, 10, 30);\n}\n</code>\n</div>"],
              alt: "words Lorem ipsum dol go off canvas and contained by white bounding box",
              class: "p5.Font",
              module: "Typography",
              submodule: "Font"
            }, {
              file: "src/typography/p5.Font.js",
              line: 156,
              description: "<p>Computes an array of points following the path for specified text</p>\n",
              itemtype: "method",
              name: "textToPoints",
              params: [{
                name: "txt",
                description: "<p>a line of text</p>\n",
                type: "String"
              }, {
                name: "x",
                description: "<p>x-position</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y-position</p>\n",
                type: "Number"
              }, {
                name: "fontSize",
                description: "<p>font size to use (optional)</p>\n",
                type: "Number"
              }, {
                name: "options",
                description: "<p>an (optional) object that can contain:</p>\n<p><br>sampleFactor - the ratio of path-length to number of samples\n(default=.25); higher values yield more points and are therefore\nmore precise</p>\n<p><br>simplifyThreshold - if set to a non-zero value, collinear points will be\nbe removed from the polygon; the value represents the threshold angle to use\nwhen determining whether two edges are collinear</p>\n",
                type: "Object",
                optional: !0
              }],
              return: {
                description: "an array of points, each with x, y, alpha (the path angle)",
                type: "Array"
              },
              example: ["\n<div>\n<code>\nlet font;\nfunction preload() {\n  font = loadFont('./assets/Avenir.otf');\n}\n\nlet points;\nlet bounds;\nfunction setup() {\n  createCanvas(100, 100);\n  stroke(0);\n  fill(255, 104, 204);\n\n  points = font.textToPoints('p5', 0, 0, 10, {\n    sampleFactor: 5,\n    simplifyThreshold: 0\n  });\n  bounds = font.textBounds(' p5 ', 0, 0, 10);\n}\n\nfunction draw() {\n  background(255);\n  beginShape();\n  translate(-bounds.x * width / bounds.w, -bounds.y * height / bounds.h);\n  for (let i = 0; i < points.length; i++) {\n    let p = points[i];\n    vertex(\n      p.x * width / bounds.w +\n        sin(20 * p.y / bounds.h + millis() / 1000) * width / 30,\n      p.y * height / bounds.h\n    );\n  }\n  endShape(CLOSE);\n}\n</code>\n</div>\n"],
              class: "p5.Font",
              module: "Typography",
              submodule: "Font"
            }, {
              file: "src/utilities/array_functions.js",
              line: 12,
              description: "<p>Adds a value to the end of an array. Extends the length of\nthe array by one. Maps to Array.push().</p>\n",
              itemtype: "method",
              name: "append",
              deprecated: !0,
              deprecationMessage: 'Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/push">array.push(value)</a> instead.',
              params: [{
                name: "array",
                description: "<p>Array to append</p>\n",
                type: "Array"
              }, {
                name: "value",
                description: "<p>to be added to the Array</p>\n",
                type: "Any"
              }],
              return: {
                description: "the array that was appended to",
                type: "Array"
              },
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  var myArray = ['Mango', 'Apple', 'Papaya'];\n  print(myArray); // ['Mango', 'Apple', 'Papaya']\n\n  append(myArray, 'Peach');\n  print(myArray); // ['Mango', 'Apple', 'Papaya', 'Peach']\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/array_functions.js",
              line: 37,
              description: '<p>Copies an array (or part of an array) to another array. The src array is\ncopied to the dst array, beginning at the position specified by\nsrcPosition and into the position specified by dstPosition. The number of\nelements to copy is determined by length. Note that copying values\noverwrites existing values in the destination array. To append values\ninstead of overwriting them, use <a href="#/p5/concat">concat()</a>.\n<br><br>\nThe simplified version with only two arguments, arrayCopy(src, dst),\ncopies an entire array to another of the same size. It is equivalent to\narrayCopy(src, 0, dst, 0, src.length).\n<br><br>\nUsing this function is far more efficient for copying array data than\niterating through a for() loop and copying each element individually.</p>\n',
              itemtype: "method",
              name: "arrayCopy",
              deprecated: !0,
              example: ["\n<div class='norender'><code>\nvar src = ['A', 'B', 'C'];\nvar dst = [1, 2, 3];\nvar srcPosition = 1;\nvar dstPosition = 0;\nvar length = 2;\n\nprint(src); // ['A', 'B', 'C']\nprint(dst); // [ 1 ,  2 ,  3 ]\n\narrayCopy(src, srcPosition, dst, dstPosition, length);\nprint(dst); // ['B', 'C', 3]\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions",
              overloads: [{
                line: 37,
                params: [{
                  name: "src",
                  description: "<p>the source Array</p>\n",
                  type: "Array"
                }, {
                  name: "srcPosition",
                  description: "<p>starting position in the source Array</p>\n",
                  type: "Integer"
                }, {
                  name: "dst",
                  description: "<p>the destination Array</p>\n",
                  type: "Array"
                }, {
                  name: "dstPosition",
                  description: "<p>starting position in the destination Array</p>\n",
                  type: "Integer"
                }, {
                  name: "length",
                  description: "<p>number of Array elements to be copied</p>\n",
                  type: "Integer"
                }]
              }, {
                line: 75,
                params: [{
                  name: "src",
                  description: "",
                  type: "Array"
                }, {
                  name: "dst",
                  description: "",
                  type: "Array"
                }, {
                  name: "length",
                  description: "",
                  type: "Integer",
                  optional: !0
                }]
              }]
            }, {
              file: "src/utilities/array_functions.js",
              line: 114,
              description: "<p>Concatenates two arrays, maps to Array.concat(). Does not modify the\ninput arrays.</p>\n",
              itemtype: "method",
              name: "concat",
              deprecated: !0,
              deprecationMessage: 'Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/concat">arr1.concat(arr2)</a> instead.',
              params: [{
                name: "a",
                description: "<p>first Array to concatenate</p>\n",
                type: "Array"
              }, {
                name: "b",
                description: "<p>second Array to concatenate</p>\n",
                type: "Array"
              }],
              return: {
                description: "concatenated array",
                type: "Array"
              },
              example: ["\n<div class = 'norender'><code>\nfunction setup() {\n  var arr1 = ['A', 'B', 'C'];\n  var arr2 = [1, 2, 3];\n\n  print(arr1); // ['A','B','C']\n  print(arr2); // [1,2,3]\n\n  var arr3 = concat(arr1, arr2);\n\n  print(arr1); // ['A','B','C']\n  print(arr2); // [1, 2, 3]\n  print(arr3); // ['A','B','C', 1, 2, 3]\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/array_functions.js",
              line: 145,
              description: "<p>Reverses the order of an array, maps to Array.reverse()</p>\n",
              itemtype: "method",
              name: "reverse",
              deprecated: !0,
              deprecationMessage: 'Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse">array.reverse()</a> instead.',
              params: [{
                name: "list",
                description: "<p>Array to reverse</p>\n",
                type: "Array"
              }],
              return: {
                description: "the reversed list",
                type: "Array"
              },
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  var myArray = ['A', 'B', 'C'];\n  print(myArray); // ['A','B','C']\n\n  reverse(myArray);\n  print(myArray); // ['C','B','A']\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/array_functions.js",
              line: 167,
              description: "<p>Decreases an array by one element and returns the shortened array,\nmaps to Array.pop().</p>\n",
              itemtype: "method",
              name: "shorten",
              deprecated: !0,
              deprecationMessage: 'Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/pop">array.pop()</a> instead.',
              params: [{
                name: "list",
                description: "<p>Array to shorten</p>\n",
                type: "Array"
              }],
              return: {
                description: "shortened Array",
                type: "Array"
              },
              example: ["\n<div class = 'norender'><code>\nfunction setup() {\n  var myArray = ['A', 'B', 'C'];\n  print(myArray); // ['A', 'B', 'C']\n  var newArray = shorten(myArray);\n  print(myArray); // ['A','B','C']\n  print(newArray); // ['A','B']\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/array_functions.js",
              line: 191,
              description: "<p>Randomizes the order of the elements of an array. Implements\n<a href='http://Bost.Ocks.org/mike/shuffle/' target=_blank>\nFisher-Yates Shuffle Algorithm</a>.</p>\n",
              itemtype: "method",
              name: "shuffle",
              params: [{
                name: "array",
                description: "<p>Array to shuffle</p>\n",
                type: "Array"
              }, {
                name: "bool",
                description: "<p>modify passed array</p>\n",
                type: "Boolean",
                optional: !0
              }],
              return: {
                description: "shuffled Array",
                type: "Array"
              },
              example: ["\n<div><code>\nfunction setup() {\n  var regularArr = ['ABC', 'def', createVector(), TAU, Math.E];\n  print(regularArr);\n  shuffle(regularArr, true); // force modifications to passed array\n  print(regularArr);\n\n  // By default shuffle() returns a shuffled cloned array:\n  var newArr = shuffle(regularArr);\n  print(regularArr);\n  print(newArr);\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/array_functions.js",
              line: 233,
              description: "<p>Sorts an array of numbers from smallest to largest, or puts an array of\nwords in alphabetical order. The original array is not modified; a\nre-ordered array is returned. The count parameter states the number of\nelements to sort. For example, if there are 12 elements in an array and\ncount is set to 5, only the first 5 elements in the array will be sorted.</p>\n",
              itemtype: "method",
              name: "sort",
              deprecated: !0,
              deprecationMessage: 'Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort">array.sort()</a> instead.',
              params: [{
                name: "list",
                description: "<p>Array to sort</p>\n",
                type: "Array"
              }, {
                name: "count",
                description: "<p>number of elements to sort, starting from 0</p>\n",
                type: "Integer",
                optional: !0
              }],
              return: {
                description: "the sorted list",
                type: "Array"
              },
              example: ["\n<div class = 'norender'><code>\nfunction setup() {\n  var words = ['banana', 'apple', 'pear', 'lime'];\n  print(words); // ['banana', 'apple', 'pear', 'lime']\n  var count = 4; // length of array\n\n  words = sort(words, count);\n  print(words); // ['apple', 'banana', 'lime', 'pear']\n}\n</code></div>\n<div class = 'norender'><code>\nfunction setup() {\n  var numbers = [2, 6, 1, 5, 14, 9, 8, 12];\n  print(numbers); // [2, 6, 1, 5, 14, 9, 8, 12]\n  var count = 5; // Less than the length of the array\n\n  numbers = sort(numbers, count);\n  print(numbers); // [1,2,5,6,14,9,8,12]\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/array_functions.js",
              line: 281,
              description: "<p>Inserts a value or an array of values into an existing array. The first\nparameter specifies the initial array to be modified, and the second\nparameter defines the data to be inserted. The third parameter is an index\nvalue which specifies the array position from which to insert data.\n(Remember that array index numbering starts at zero, so the first position\nis 0, the second position is 1, and so on.)</p>\n",
              itemtype: "method",
              name: "splice",
              deprecated: !0,
              deprecationMessage: 'Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice">array.splice()</a> instead.',
              params: [{
                name: "list",
                description: "<p>Array to splice into</p>\n",
                type: "Array"
              }, {
                name: "value",
                description: "<p>value to be spliced in</p>\n",
                type: "Any"
              }, {
                name: "position",
                description: "<p>in the array from which to insert data</p>\n",
                type: "Integer"
              }],
              return: {
                description: "the list",
                type: "Array"
              },
              example: ["\n<div class = 'norender'><code>\nfunction setup() {\n  var myArray = [0, 1, 2, 3, 4];\n  var insArray = ['A', 'B', 'C'];\n  print(myArray); // [0, 1, 2, 3, 4]\n  print(insArray); // ['A','B','C']\n\n  splice(myArray, insArray, 3);\n  print(myArray); // [0,1,2,'A','B','C',3,4]\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/array_functions.js",
              line: 316,
              description: "<p>Extracts an array of elements from an existing array. The list parameter\ndefines the array from which the elements will be copied, and the start\nand count parameters specify which elements to extract. If no count is\ngiven, elements will be extracted from the start to the end of the array.\nWhen specifying the start, remember that the first array element is 0.\nThis function does not change the source array.</p>\n",
              itemtype: "method",
              name: "subset",
              deprecated: !0,
              deprecationMessage: 'Use <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice">array.slice()</a> instead.',
              params: [{
                name: "list",
                description: "<p>Array to extract from</p>\n",
                type: "Array"
              }, {
                name: "start",
                description: "<p>position to begin</p>\n",
                type: "Integer"
              }, {
                name: "count",
                description: "<p>number of values to extract</p>\n",
                type: "Integer",
                optional: !0
              }],
              return: {
                description: "Array of extracted elements",
                type: "Array"
              },
              example: ["\n<div class = 'norender'><code>\nfunction setup() {\n  var myArray = [1, 2, 3, 4, 5];\n  print(myArray); // [1, 2, 3, 4, 5]\n\n  var sub1 = subset(myArray, 0, 3);\n  var sub2 = subset(myArray, 2, 2);\n  print(sub1); // [1,2,3]\n  print(sub2); // [3,4]\n}\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Array Functions"
            }, {
              file: "src/utilities/conversion.js",
              line: 12,
              description: "<p>Converts a string to its floating point representation. The contents of a\nstring must resemble a number, or NaN (not a number) will be returned.\nFor example, float(&quot;1234.56&quot;) evaluates to 1234.56, but float(&quot;giraffe&quot;)\nwill return NaN.</p>\n<p>When an array of values is passed in, then an array of floats of the same\nlength is returned.</p>\n",
              itemtype: "method",
              name: "float",
              params: [{
                name: "str",
                description: "<p>float string to parse</p>\n",
                type: "String"
              }],
              return: {
                description: "floating point representation of string",
                type: "Number"
              },
              example: ["\n<div><code>\nvar str = '20';\nvar diameter = float(str);\nellipse(width / 2, height / 2, diameter, diameter);\n</code></div>"],
              alt: "20 by 20 white ellipse in the center of the canvas",
              class: "p5",
              module: "Data",
              submodule: "Conversion"
            }, {
              file: "src/utilities/conversion.js",
              line: 42,
              description: "<p>Converts a boolean, string, or float to its integer representation.\nWhen an array of values is passed in, then an int array of the same length\nis returned.</p>\n",
              itemtype: "method",
              name: "int",
              return: {
                description: "integer representation of value",
                type: "Number"
              },
              example: ["\n<div class='norender'><code>\nprint(int('10')); // 10\nprint(int(10.31)); // 10\nprint(int(-10)); // -10\nprint(int(true)); // 1\nprint(int(false)); // 0\nprint(int([false, true, '10.3', 9.8])); // [0, 1, 10, 9]\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Conversion",
              overloads: [{
                line: 42,
                params: [{
                  name: "n",
                  description: "<p>value to parse</p>\n",
                  type: "String|Boolean|Number"
                }, {
                  name: "radix",
                  description: "<p>the radix to convert to (default: 10)</p>\n",
                  type: "Integer",
                  optional: !0
                }],
                return: {
                  description: "integer representation of value",
                  type: "Number"
                }
              }, {
                line: 62,
                params: [{
                  name: "ns",
                  description: "<p>values to parse</p>\n",
                  type: "Array"
                }],
                return: {
                  description: "integer representation of values",
                  type: "Number[]"
                }
              }]
            }, {
              file: "src/utilities/conversion.js",
              line: 82,
              description: "<p>Converts a boolean, string or number to its string representation.\nWhen an array of values is passed in, then an array of strings of the same\nlength is returned.</p>\n",
              itemtype: "method",
              name: "str",
              params: [{
                name: "n",
                description: "<p>value to parse</p>\n",
                type: "String|Boolean|Number|Array"
              }],
              return: {
                description: "string representation of value",
                type: "String"
              },
              example: ['\n<div class=\'norender\'><code>\nprint(str(\'10\')); // "10"\nprint(str(10.31)); // "10.31"\nprint(str(-10)); // "-10"\nprint(str(true)); // "true"\nprint(str(false)); // "false"\nprint(str([true, \'10.3\', 9.8])); // [ "true", "10.3", "9.8" ]\n</code></div>'],
              class: "p5",
              module: "Data",
              submodule: "Conversion"
            }, {
              file: "src/utilities/conversion.js",
              line: 108,
              description: "<p>Converts a number or string to its boolean representation.\nFor a number, any non-zero value (positive or negative) evaluates to true,\nwhile zero evaluates to false. For a string, the value &quot;true&quot; evaluates to\ntrue, while any other value evaluates to false. When an array of number or\nstring values is passed in, then a array of booleans of the same length is\nreturned.</p>\n",
              itemtype: "method",
              name: "boolean",
              params: [{
                name: "n",
                description: "<p>value to parse</p>\n",
                type: "String|Boolean|Number|Array"
              }],
              return: {
                description: "boolean representation of value",
                type: "Boolean"
              },
              example: ["\n<div class='norender'><code>\nprint(boolean(0)); // false\nprint(boolean(1)); // true\nprint(boolean('true')); // true\nprint(boolean('abcd')); // false\nprint(boolean([0, 12, 'true'])); // [false, true, false]\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Conversion"
            }, {
              file: "src/utilities/conversion.js",
              line: 140,
              description: "<p>Converts a number, string representation of a number, or boolean to its byte\nrepresentation. A byte can be only a whole number between -128 and 127, so\nwhen a value outside of this range is converted, it wraps around to the\ncorresponding byte representation. When an array of number, string or boolean\nvalues is passed in, then an array of bytes the same length is returned.</p>\n",
              itemtype: "method",
              name: "byte",
              return: {
                description: "byte representation of value",
                type: "Number"
              },
              example: ["\n<div class='norender'><code>\nprint(byte(127)); // 127\nprint(byte(128)); // -128\nprint(byte(23.4)); // 23\nprint(byte('23.4')); // 23\nprint(byte('hello')); // NaN\nprint(byte(true)); // 1\nprint(byte([0, 255, '100'])); // [0, -1, 100]\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Conversion",
              overloads: [{
                line: 140,
                params: [{
                  name: "n",
                  description: "<p>value to parse</p>\n",
                  type: "String|Boolean|Number"
                }],
                return: {
                  description: "byte representation of value",
                  type: "Number"
                }
              }, {
                line: 162,
                params: [{
                  name: "ns",
                  description: "<p>values to parse</p>\n",
                  type: "Array"
                }],
                return: {
                  description: "array of byte representation of values",
                  type: "Number[]"
                }
              }]
            }, {
              file: "src/utilities/conversion.js",
              line: 176,
              description: "<p>Converts a number or string to its corresponding single-character\nstring representation. If a string parameter is provided, it is first\nparsed as an integer and then translated into a single-character string.\nWhen an array of number or string values is passed in, then an array of\nsingle-character strings of the same length is returned.</p>\n",
              itemtype: "method",
              name: "char",
              return: {
                description: "string representation of value",
                type: "String"
              },
              example: ['\n<div class=\'norender\'><code>\nprint(char(65)); // "A"\nprint(char(\'65\')); // "A"\nprint(char([65, 66, 67])); // [ "A", "B", "C" ]\nprint(join(char([65, 66, 67]), \'\')); // "ABC"\n</code></div>'],
              class: "p5",
              module: "Data",
              submodule: "Conversion",
              overloads: [{
                line: 176,
                params: [{
                  name: "n",
                  description: "<p>value to parse</p>\n",
                  type: "String|Number"
                }],
                return: {
                  description: "string representation of value",
                  type: "String"
                }
              }, {
                line: 195,
                params: [{
                  name: "ns",
                  description: "<p>values to parse</p>\n",
                  type: "Array"
                }],
                return: {
                  description: "array of string representation of values",
                  type: "String[]"
                }
              }]
            }, {
              file: "src/utilities/conversion.js",
              line: 210,
              description: "<p>Converts a single-character string to its corresponding integer\nrepresentation. When an array of single-character string values is passed\nin, then an array of integers of the same length is returned.</p>\n",
              itemtype: "method",
              name: "unchar",
              return: {
                description: "integer representation of value",
                type: "Number"
              },
              example: ["\n<div class='norender'><code>\nprint(unchar('A')); // 65\nprint(unchar(['A', 'B', 'C'])); // [ 65, 66, 67 ]\nprint(unchar(split('ABC', ''))); // [ 65, 66, 67 ]\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Conversion",
              overloads: [{
                line: 210,
                params: [{
                  name: "n",
                  description: "<p>value to parse</p>\n",
                  type: "String"
                }],
                return: {
                  description: "integer representation of value",
                  type: "Number"
                }
              }, {
                line: 226,
                params: [{
                  name: "ns",
                  description: "<p>values to parse</p>\n",
                  type: "Array"
                }],
                return: {
                  description: "integer representation of values",
                  type: "Number[]"
                }
              }]
            }, {
              file: "src/utilities/conversion.js",
              line: 239,
              description: "<p>Converts a number to a string in its equivalent hexadecimal notation. If a\nsecond parameter is passed, it is used to set the number of characters to\ngenerate in the hexadecimal notation. When an array is passed in, an\narray of strings in hexadecimal notation of the same length is returned.</p>\n",
              itemtype: "method",
              name: "hex",
              return: {
                description: "hexadecimal string representation of value",
                type: "String"
              },
              example: ['\n<div class=\'norender\'><code>\nprint(hex(255)); // "000000FF"\nprint(hex(255, 6)); // "0000FF"\nprint(hex([0, 127, 255], 6)); // [ "000000", "00007F", "0000FF" ]\n</code></div>'],
              class: "p5",
              module: "Data",
              submodule: "Conversion",
              overloads: [{
                line: 239,
                params: [{
                  name: "n",
                  description: "<p>value to parse</p>\n",
                  type: "Number"
                }, {
                  name: "digits",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "hexadecimal string representation of value",
                  type: "String"
                }
              }, {
                line: 257,
                params: [{
                  name: "ns",
                  description: "<p>array of values to parse</p>\n",
                  type: "Number[]"
                }, {
                  name: "digits",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                return: {
                  description: "hexadecimal string representation of values",
                  type: "String[]"
                }
              }]
            }, {
              file: "src/utilities/conversion.js",
              line: 286,
              description: "<p>Converts a string representation of a hexadecimal number to its equivalent\ninteger value. When an array of strings in hexadecimal notation is passed\nin, an array of integers of the same length is returned.</p>\n",
              itemtype: "method",
              name: "unhex",
              return: {
                description: "integer representation of hexadecimal value",
                type: "Number"
              },
              example: ["\n<div class='norender'><code>\nprint(unhex('A')); // 10\nprint(unhex('FF')); // 255\nprint(unhex(['FF', 'AA', '00'])); // [ 255, 170, 0 ]\n</code></div>"],
              class: "p5",
              module: "Data",
              submodule: "Conversion",
              overloads: [{
                line: 286,
                params: [{
                  name: "n",
                  description: "<p>value to parse</p>\n",
                  type: "String"
                }],
                return: {
                  description: "integer representation of hexadecimal value",
                  type: "Number"
                }
              }, {
                line: 302,
                params: [{
                  name: "ns",
                  description: "<p>values to parse</p>\n",
                  type: "Array"
                }],
                return: {
                  description: "integer representations of hexadecimal value",
                  type: "Number[]"
                }
              }]
            }, {
              file: "src/utilities/string_functions.js",
              line: 15,
              description: '<p>Combines an array of Strings into one String, each separated by the\ncharacter(s) used for the separator parameter. To join arrays of ints or\nfloats, it&#39;s necessary to first convert them to Strings using <a href="#/p5/nf">nf()</a> or\nnfs().</p>\n',
              itemtype: "method",
              name: "join",
              params: [{
                name: "list",
                description: "<p>array of Strings to be joined</p>\n",
                type: "Array"
              }, {
                name: "separator",
                description: "<p>String to be placed between each item</p>\n",
                type: "String"
              }],
              return: {
                description: "joined String",
                type: "String"
              },
              example: ["\n<div>\n<code>\nvar array = ['Hello', 'world!'];\nvar separator = ' ';\nvar message = join(array, separator);\ntext(message, 5, 50);\n</code>\n</div>"],
              alt: '"hello world!" displayed middle left of canvas.',
              class: "p5",
              module: "Data",
              submodule: "String Functions"
            }, {
              file: "src/utilities/string_functions.js",
              line: 44,
              description: "<p>This function is used to apply a regular expression to a piece of text,\nand return matching groups (elements found inside parentheses) as a\nString array. If there are no matches, a null value will be returned.\nIf no groups are specified in the regular expression, but the sequence\nmatches, an array of length 1 (with the matched text as the first element\nof the array) will be returned.\n<br><br>\nTo use the function, first check to see if the result is null. If the\nresult is null, then the sequence did not match at all. If the sequence\ndid match, an array is returned.\n<br><br>\nIf there are groups (specified by sets of parentheses) in the regular\nexpression, then the contents of each will be returned in the array.\nElement [0] of a regular expression match returns the entire matching\nstring, and the match groups start at element [1] (the first group is [1],\nthe second [2], and so on).</p>\n",
              itemtype: "method",
              name: "match",
              params: [{
                name: "str",
                description: "<p>the String to be searched</p>\n",
                type: "String"
              }, {
                name: "regexp",
                description: "<p>the regexp to be used for matching</p>\n",
                type: "String"
              }],
              return: {
                description: "Array of Strings found",
                type: "String[]"
              },
              example: ["\n<div>\n<code>\nvar string = 'Hello p5js*!';\nvar regexp = 'p5js\\\\*';\nvar m = match(string, regexp);\ntext(m, 5, 50);\n</code>\n</div>"],
              alt: '"p5js*" displayed middle left of canvas.',
              class: "p5",
              module: "Data",
              submodule: "String Functions"
            }, {
              file: "src/utilities/string_functions.js",
              line: 85,
              description: "<p>This function is used to apply a regular expression to a piece of text,\nand return a list of matching groups (elements found inside parentheses)\nas a two-dimensional String array. If there are no matches, a null value\nwill be returned. If no groups are specified in the regular expression,\nbut the sequence matches, a two dimensional array is still returned, but\nthe second dimension is only of length one.\n<br><br>\nTo use the function, first check to see if the result is null. If the\nresult is null, then the sequence did not match at all. If the sequence\ndid match, a 2D array is returned.\n<br><br>\nIf there are groups (specified by sets of parentheses) in the regular\nexpression, then the contents of each will be returned in the array.\nAssuming a loop with counter variable i, element [i][0] of a regular\nexpression match returns the entire matching string, and the match groups\nstart at element [i][1] (the first group is [i][1], the second [i][2],\nand so on).</p>\n",
              itemtype: "method",
              name: "matchAll",
              params: [{
                name: "str",
                description: "<p>the String to be searched</p>\n",
                type: "String"
              }, {
                name: "regexp",
                description: "<p>the regexp to be used for matching</p>\n",
                type: "String"
              }],
              return: {
                description: "2d Array of Strings found",
                type: "String[]"
              },
              example: ["\n<div class=\"norender\">\n<code>\nvar string = 'Hello p5js*! Hello world!';\nvar regexp = 'Hello';\nmatchAll(string, regexp);\n</code>\n</div>"],
              class: "p5",
              module: "Data",
              submodule: "String Functions"
            }, {
              file: "src/utilities/string_functions.js",
              line: 132,
              description: "<p>Utility function for formatting numbers into strings. There are two\nversions: one for formatting floats, and one for formatting ints.\nThe values for the digits, left, and right parameters should always\nbe positive integers.\n(NOTE): Be cautious when using left and right parameters as it prepends numbers of 0&#39;s if the parameter\nif greater than the current length of the number.\nFor example if number is 123.2 and left parameter passed is 4 which is greater than length of 123\n(integer part) i.e 3 than result will be 0123.2. Same case for right parameter i.e. if right is 3 than\nthe result will be 123.200.</p>\n",
              itemtype: "method",
              name: "nf",
              return: {
                description: "formatted String",
                type: "String"
              },
              example: ["\n<div>\n<code>\nvar myFont;\nfunction preload() {\n  myFont = loadFont('assets/fonts/inconsolata.ttf');\n}\nfunction setup() {\n  background(200);\n  var num1 = 321;\n  var num2 = -1321;\n\n  noStroke();\n  fill(0);\n  textFont(myFont);\n  textSize(22);\n\n  text(nf(num1, 4, 2), 10, 30);\n  text(nf(num2, 4, 2), 10, 80);\n  // Draw dividing line\n  stroke(120);\n  line(0, 50, width, 50);\n}\n</code>\n</div>"],
              alt: '"0321.00" middle top, -1321.00" middle bottom canvas',
              class: "p5",
              module: "Data",
              submodule: "String Functions",
              overloads: [{
                line: 132,
                params: [{
                  name: "num",
                  description: "<p>the Number to format</p>\n",
                  type: "Number|String"
                }, {
                  name: "left",
                  description: "<p>number of digits to the left of the\n                               decimal point</p>\n",
                  type: "Integer|String",
                  optional: !0
                }, {
                  name: "right",
                  description: "<p>number of digits to the right of the\n                               decimal point</p>\n",
                  type: "Integer|String",
                  optional: !0
                }],
                return: {
                  description: "formatted String",
                  type: "String"
                }
              }, {
                line: 180,
                params: [{
                  name: "nums",
                  description: "<p>the Numbers to format</p>\n",
                  type: "Array"
                }, {
                  name: "left",
                  description: "",
                  type: "Integer|String",
                  optional: !0
                }, {
                  name: "right",
                  description: "",
                  type: "Integer|String",
                  optional: !0
                }],
                return: {
                  description: "formatted Strings",
                  type: "String[]"
                }
              }]
            }, {
              file: "src/utilities/string_functions.js",
              line: 243,
              description: "<p>Utility function for formatting numbers into strings and placing\nappropriate commas to mark units of 1000. There are two versions: one\nfor formatting ints, and one for formatting an array of ints. The value\nfor the right parameter should always be a positive integer.</p>\n",
              itemtype: "method",
              name: "nfc",
              return: {
                description: "formatted String",
                type: "String"
              },
              example: ["\n<div>\n<code>\nfunction setup() {\n  background(200);\n  var num = 11253106.115;\n  var numArr = [1, 1, 2];\n\n  noStroke();\n  fill(0);\n  textSize(12);\n\n  // Draw formatted numbers\n  text(nfc(num, 4), 10, 30);\n  text(nfc(numArr, 2), 10, 80);\n\n  // Draw dividing line\n  stroke(120);\n  line(0, 50, width, 50);\n}\n</code>\n</div>"],
              alt: '"11,253,106.115" top middle and "1.00,1.00,2.00" displayed bottom mid',
              class: "p5",
              module: "Data",
              submodule: "String Functions",
              overloads: [{
                line: 243,
                params: [{
                  name: "num",
                  description: "<p>the Number to format</p>\n",
                  type: "Number|String"
                }, {
                  name: "right",
                  description: "<p>number of digits to the right of the\n                                 decimal point</p>\n",
                  type: "Integer|String",
                  optional: !0
                }],
                return: {
                  description: "formatted String",
                  type: "String"
                }
              }, {
                line: 281,
                params: [{
                  name: "nums",
                  description: "<p>the Numbers to format</p>\n",
                  type: "Array"
                }, {
                  name: "right",
                  description: "",
                  type: "Integer|String",
                  optional: !0
                }],
                return: {
                  description: "formatted Strings",
                  type: "String[]"
                }
              }]
            }, {
              file: "src/utilities/string_functions.js",
              line: 319,
              description: '<p>Utility function for formatting numbers into strings. Similar to <a href="#/p5/nf">nf()</a> but\nputs a &quot;+&quot; in front of positive numbers and a &quot;-&quot; in front of negative\nnumbers. There are two versions: one for formatting floats, and one for\nformatting ints. The values for left, and right parameters\nshould always be positive integers.</p>\n',
              itemtype: "method",
              name: "nfp",
              return: {
                description: "formatted String",
                type: "String"
              },
              example: ["\n<div>\n<code>\nfunction setup() {\n  background(200);\n  var num1 = 11253106.115;\n  var num2 = -11253106.115;\n\n  noStroke();\n  fill(0);\n  textSize(12);\n\n  // Draw formatted numbers\n  text(nfp(num1, 4, 2), 10, 30);\n  text(nfp(num2, 4, 2), 10, 80);\n\n  // Draw dividing line\n  stroke(120);\n  line(0, 50, width, 50);\n}\n</code>\n</div>"],
              alt: '"+11253106.11" top middle and "-11253106.11" displayed bottom middle',
              class: "p5",
              module: "Data",
              submodule: "String Functions",
              overloads: [{
                line: 319,
                params: [{
                  name: "num",
                  description: "<p>the Number to format</p>\n",
                  type: "Number"
                }, {
                  name: "left",
                  description: "<p>number of digits to the left of the decimal\n                               point</p>\n",
                  type: "Integer",
                  optional: !0
                }, {
                  name: "right",
                  description: "<p>number of digits to the right of the\n                               decimal point</p>\n",
                  type: "Integer",
                  optional: !0
                }],
                return: {
                  description: "formatted String",
                  type: "String"
                }
              }, {
                line: 360,
                params: [{
                  name: "nums",
                  description: "<p>the Numbers to format</p>\n",
                  type: "Number[]"
                }, {
                  name: "left",
                  description: "",
                  type: "Integer",
                  optional: !0
                }, {
                  name: "right",
                  description: "",
                  type: "Integer",
                  optional: !0
                }],
                return: {
                  description: "formatted Strings",
                  type: "String[]"
                }
              }]
            }, {
              file: "src/utilities/string_functions.js",
              line: 381,
              description: '<p>Utility function for formatting numbers into strings. Similar to <a href="#/p5/nf">nf()</a> but\nputs an additional &quot;_&quot; (space) in front of positive numbers just in case to align it with negative\nnumbers which includes &quot;-&quot; (minus) sign.\nThe main usecase of nfs() can be seen when one wants to align the digits (place values) of a positive\nnumber with some negative number (See the example to get a clear picture).\nThere are two versions: one for formatting float, and one for formatting int.\nThe values for the digits, left, and right parameters should always be positive integers.\n(IMP): The result on the canvas basically the expected alignment can vary based on the typeface you are using.\n(NOTE): Be cautious when using left and right parameters as it prepends numbers of 0&#39;s if the parameter\nif greater than the current length of the number.\nFor example if number is 123.2 and left parameter passed is 4 which is greater than length of 123\n(integer part) i.e 3 than result will be 0123.2. Same case for right parameter i.e. if right is 3 than\nthe result will be 123.200.</p>\n',
              itemtype: "method",
              name: "nfs",
              return: {
                description: "formatted String",
                type: "String"
              },
              example: ["\n<div>\n<code>\nvar myFont;\nfunction preload() {\n  myFont = loadFont('assets/fonts/inconsolata.ttf');\n}\nfunction setup() {\n  background(200);\n  var num1 = 321;\n  var num2 = -1321;\n\n  noStroke();\n  fill(0);\n  textFont(myFont);\n  textSize(22);\n\n  // nfs() aligns num1 (positive number) with num2 (negative number) by\n  // adding a blank space in front of the num1 (positive number)\n  // [left = 4] in num1 add one 0 in front, to align the digits with num2\n  // [right = 2] in num1 and num2 adds two 0's after both numbers\n  // To see the differences check the example of nf() too.\n  text(nfs(num1, 4, 2), 10, 30);\n  text(nfs(num2, 4, 2), 10, 80);\n  // Draw dividing line\n  stroke(120);\n  line(0, 50, width, 50);\n}\n</code>\n</div>"],
              alt: '"0321.00" top middle and "-1321.00" displayed bottom middle',
              class: "p5",
              module: "Data",
              submodule: "String Functions",
              overloads: [{
                line: 381,
                params: [{
                  name: "num",
                  description: "<p>the Number to format</p>\n",
                  type: "Number"
                }, {
                  name: "left",
                  description: "<p>number of digits to the left of the decimal\n                               point</p>\n",
                  type: "Integer",
                  optional: !0
                }, {
                  name: "right",
                  description: "<p>number of digits to the right of the\n                               decimal point</p>\n",
                  type: "Integer",
                  optional: !0
                }],
                return: {
                  description: "formatted String",
                  type: "String"
                }
              }, {
                line: 438,
                params: [{
                  name: "nums",
                  description: "<p>the Numbers to format</p>\n",
                  type: "Array"
                }, {
                  name: "left",
                  description: "",
                  type: "Integer",
                  optional: !0
                }, {
                  name: "right",
                  description: "",
                  type: "Integer",
                  optional: !0
                }],
                return: {
                  description: "formatted Strings",
                  type: "String[]"
                }
              }]
            }, {
              file: "src/utilities/string_functions.js",
              line: 459,
              description: '<p>The <a href="#/p5/split">split()</a> function maps to String.split(), it breaks a String into\npieces using a character or string as the delimiter. The delim parameter\nspecifies the character or characters that mark the boundaries between\neach piece. A String[] array is returned that contains each of the pieces.</p>\n<p>The <a href="#/p5/splitTokens">splitTokens()</a> function works in a similar fashion, except that it\nsplits using a range of characters instead of a specific character or\nsequence.</p>\n',
              itemtype: "method",
              name: "split",
              params: [{
                name: "value",
                description: "<p>the String to be split</p>\n",
                type: "String"
              }, {
                name: "delim",
                description: "<p>the String used to separate the data</p>\n",
                type: "String"
              }],
              return: {
                description: "Array of Strings",
                type: "String[]"
              },
              example: ["\n<div>\n<code>\nvar names = 'Pat,Xio,Alex';\nvar splitString = split(names, ',');\ntext(splitString[0], 5, 30);\ntext(splitString[1], 5, 50);\ntext(splitString[2], 5, 70);\n</code>\n</div>"],
              alt: '"pat" top left, "Xio" mid left and "Alex" displayed bottom left',
              class: "p5",
              module: "Data",
              submodule: "String Functions"
            }, {
              file: "src/utilities/string_functions.js",
              line: 493,
              description: '<p>The <a href="#/p5/splitTokens">splitTokens()</a> function splits a String at one or many character\ndelimiters or &quot;tokens.&quot; The delim parameter specifies the character or\ncharacters to be used as a boundary.\n<br><br>\nIf no delim characters are specified, any whitespace character is used to\nsplit. Whitespace characters include tab (\\t), line feed (\\n), carriage\nreturn (\\r), form feed (\\f), and space.</p>\n',
              itemtype: "method",
              name: "splitTokens",
              params: [{
                name: "value",
                description: "<p>the String to be split</p>\n",
                type: "String"
              }, {
                name: "delim",
                description: "<p>list of individual Strings that will be used as\n                         separators</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: "Array of Strings",
                type: "String[]"
              },
              example: ['\n<div class = "norender">\n<code>\nfunction setup() {\n  var myStr = \'Mango, Banana, Lime\';\n  var myStrArr = splitTokens(myStr, \',\');\n\n  print(myStrArr); // prints : ["Mango"," Banana"," Lime"]\n}\n</code>\n</div>'],
              class: "p5",
              module: "Data",
              submodule: "String Functions"
            }, {
              file: "src/utilities/string_functions.js",
              line: 548,
              description: "<p>Removes whitespace characters from the beginning and end of a String. In\naddition to standard whitespace characters such as space, carriage return,\nand tab, this function also removes the Unicode &quot;nbsp&quot; character.</p>\n",
              itemtype: "method",
              name: "trim",
              return: {
                description: "a trimmed String",
                type: "String"
              },
              example: ["\n<div>\n<code>\nvar string = trim('  No new lines\\n   ');\ntext(string + ' here', 2, 50);\n</code>\n</div>"],
              alt: '"No new lines here" displayed center canvas',
              class: "p5",
              module: "Data",
              submodule: "String Functions",
              overloads: [{
                line: 548,
                params: [{
                  name: "str",
                  description: "<p>a String to be trimmed</p>\n",
                  type: "String"
                }],
                return: {
                  description: "a trimmed String",
                  type: "String"
                }
              }, {
                line: 568,
                params: [{
                  name: "strs",
                  description: "<p>an Array of Strings to be trimmed</p>\n",
                  type: "Array"
                }],
                return: {
                  description: "an Array of trimmed Strings",
                  type: "String[]"
                }
              }]
            }, {
              file: "src/utilities/time_date.js",
              line: 12,
              description: '<p>p5.js communicates with the clock on your computer. The <a href="#/p5/day">day()</a> function\nreturns the current day as a value from 1 - 31.</p>\n',
              itemtype: "method",
              name: "day",
              return: {
                description: "the current day",
                type: "Integer"
              },
              example: ["\n<div>\n<code>\nvar d = day();\ntext('Current day: \\n' + d, 5, 50);\n</code>\n</div>"],
              alt: "Current day is displayed",
              class: "p5",
              module: "IO",
              submodule: "Time & Date"
            }, {
              file: "src/utilities/time_date.js",
              line: 34,
              description: '<p>p5.js communicates with the clock on your computer. The <a href="#/p5/hour">hour()</a> function\nreturns the current hour as a value from 0 - 23.</p>\n',
              itemtype: "method",
              name: "hour",
              return: {
                description: "the current hour",
                type: "Integer"
              },
              example: ["\n<div>\n<code>\nvar h = hour();\ntext('Current hour:\\n' + h, 5, 50);\n</code>\n</div>"],
              alt: "Current hour is displayed",
              class: "p5",
              module: "IO",
              submodule: "Time & Date"
            }, {
              file: "src/utilities/time_date.js",
              line: 56,
              description: '<p>p5.js communicates with the clock on your computer. The <a href="#/p5/minute">minute()</a> function\nreturns the current minute as a value from 0 - 59.</p>\n',
              itemtype: "method",
              name: "minute",
              return: {
                description: "the current minute",
                type: "Integer"
              },
              example: ["\n<div>\n<code>\nvar m = minute();\ntext('Current minute: \\n' + m, 5, 50);\n</code>\n</div>"],
              alt: "Current minute is displayed",
              class: "p5",
              module: "IO",
              submodule: "Time & Date"
            }, {
              file: "src/utilities/time_date.js",
              line: 78,
              description: "<p>Returns the number of milliseconds (thousandths of a second) since\nstarting the program. This information is often used for timing events and\nanimation sequences.</p>\n",
              itemtype: "method",
              name: "millis",
              return: {
                description: "the number of milliseconds since starting the program",
                type: "Number"
              },
              example: ["\n<div>\n<code>\nvar millisecond = millis();\ntext('Milliseconds \\nrunning: \\n' + millisecond, 5, 40);\n</code>\n</div>"],
              alt: "number of milliseconds since program has started displayed",
              class: "p5",
              module: "IO",
              submodule: "Time & Date"
            }, {
              file: "src/utilities/time_date.js",
              line: 101,
              description: '<p>p5.js communicates with the clock on your computer. The <a href="#/p5/month">month()</a> function\nreturns the current month as a value from 1 - 12.</p>\n',
              itemtype: "method",
              name: "month",
              return: {
                description: "the current month",
                type: "Integer"
              },
              example: ["\n<div>\n<code>\nvar m = month();\ntext('Current month: \\n' + m, 5, 50);\n</code>\n</div>"],
              alt: "Current month is displayed",
              class: "p5",
              module: "IO",
              submodule: "Time & Date"
            }, {
              file: "src/utilities/time_date.js",
              line: 123,
              description: '<p>p5.js communicates with the clock on your computer. The <a href="#/p5/second">second()</a> function\nreturns the current second as a value from 0 - 59.</p>\n',
              itemtype: "method",
              name: "second",
              return: {
                description: "the current second",
                type: "Integer"
              },
              example: ["\n<div>\n<code>\nvar s = second();\ntext('Current second: \\n' + s, 5, 50);\n</code>\n</div>"],
              alt: "Current second is displayed",
              class: "p5",
              module: "IO",
              submodule: "Time & Date"
            }, {
              file: "src/utilities/time_date.js",
              line: 145,
              description: '<p>p5.js communicates with the clock on your computer. The <a href="#/p5/year">year()</a> function\nreturns the current year as an integer (2014, 2015, 2016, etc).</p>\n',
              itemtype: "method",
              name: "year",
              return: {
                description: "the current year",
                type: "Integer"
              },
              example: ["\n<div>\n<code>\nvar y = year();\ntext('Current year: \\n' + y, 5, 50);\n</code>\n</div>"],
              alt: "Current year is displayed",
              class: "p5",
              module: "IO",
              submodule: "Time & Date"
            }, {
              file: "src/webgl/3d_primitives.js",
              line: 15,
              description: "<p>Draw a plane with given a width and height</p>\n",
              itemtype: "method",
              name: "plane",
              params: [{
                name: "width",
                description: "<p>width of the plane</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "height",
                description: "<p>height of the plane</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "detailX",
                description: "<p>Optional number of triangle\n                            subdivisions in x-dimension</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "detailY",
                description: "<p>Optional number of triangle\n                            subdivisions in y-dimension</p>\n",
                type: "Integer",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n//draw a plane with width 50 and height 50\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  plane(50, 50);\n}\n</code>\n</div>"],
              alt: "Nothing displayed on canvas\nRotating interior view of a box with sides that change color.\n3d red and green gradient.\nRotating interior view of a cylinder with sides that change color.\nRotating view of a cylinder with sides that change color.\n3d red and green gradient.\nrotating view of a multi-colored cylinder with concave sides.",
              class: "p5",
              module: "Shape",
              submodule: "3D Primitives"
            }, {
              file: "src/webgl/3d_primitives.js",
              line: 98,
              description: "<p>Draw a box with given width, height and depth</p>\n",
              itemtype: "method",
              name: "box",
              params: [{
                name: "width",
                description: "<p>width of the box</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "Height",
                description: "<p>height of the box</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "depth",
                description: "<p>depth of the box</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "detailX",
                description: "<p>Optional number of triangle\n                           subdivisions in x-dimension</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "detailY",
                description: "<p>Optional number of triangle\n                           subdivisions in y-dimension</p>\n",
                type: "Integer",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n//draw a spinning box with width, height and depth 200\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  box(50);\n}\n</code>\n</div>"],
              class: "p5",
              module: "Shape",
              submodule: "3D Primitives"
            }, {
              file: "src/webgl/3d_primitives.js",
              line: 215,
              description: "<p>Draw a sphere with given radius</p>\n",
              itemtype: "method",
              name: "sphere",
              params: [{
                name: "radius",
                description: "<p>radius of circle</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "detailX",
                description: "<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 24</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "detailY",
                description: "<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 16</p>\n",
                type: "Integer",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n// draw a sphere with radius 200\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  sphere(40);\n}\n</code>\n</div>"],
              class: "p5",
              module: "Shape",
              submodule: "3D Primitives"
            }, {
              file: "src/webgl/3d_primitives.js",
              line: 393,
              description: "<p>Draw a cylinder with given radius and height</p>\n",
              itemtype: "method",
              name: "cylinder",
              params: [{
                name: "radius",
                description: "<p>radius of the surface</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "height",
                description: "<p>height of the cylinder</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "detailX",
                description: "<p>number of segments,\n                              the more segments the smoother geometry\n                              default is 24</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "detailY",
                description: "<p>number of segments in y-dimension,\n                              the more segments the smoother geometry\n                              default is 1</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "bottomCap",
                description: "<p>whether to draw the bottom of the cylinder</p>\n",
                type: "Boolean",
                optional: !0
              }, {
                name: "topCap",
                description: "<p>whether to draw the top of the cylinder</p>\n",
                type: "Boolean",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n//draw a spinning cylinder with radius 20 and height 50\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  rotateX(frameCount * 0.01);\n  rotateZ(frameCount * 0.01);\n  cylinder(20, 50);\n}\n</code>\n</div>"],
              class: "p5",
              module: "Shape",
              submodule: "3D Primitives"
            }, {
              file: "src/webgl/3d_primitives.js",
              line: 484,
              description: "<p>Draw a cone with given radius and height</p>\n",
              itemtype: "method",
              name: "cone",
              params: [{
                name: "radius",
                description: "<p>radius of the bottom surface</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "height",
                description: "<p>height of the cone</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "detailX",
                description: "<p>number of segments,\n                            the more segments the smoother geometry\n                            default is 24</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "detailY",
                description: "<p>number of segments,\n                            the more segments the smoother geometry\n                            default is 1</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "cap",
                description: "<p>whether to draw the base of the cone</p>\n",
                type: "Boolean",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n//draw a spinning cone with radius 40 and height 70\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  rotateX(frameCount * 0.01);\n  rotateZ(frameCount * 0.01);\n  cone(40, 70);\n}\n</code>\n</div>"],
              class: "p5",
              module: "Shape",
              submodule: "3D Primitives"
            }, {
              file: "src/webgl/3d_primitives.js",
              line: 555,
              description: "<p>Draw an ellipsoid with given radius</p>\n",
              itemtype: "method",
              name: "ellipsoid",
              params: [{
                name: "radiusx",
                description: "<p>xradius of circle</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "radiusy",
                description: "<p>yradius of circle</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "radiusz",
                description: "<p>zradius of circle</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "detailX",
                description: "<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 24. Avoid detail number above\n                                   150, it may crash the browser.</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "detailY",
                description: "<p>number of segments,\n                                   the more segments the smoother geometry\n                                   default is 16. Avoid detail number above\n                                   150, it may crash the browser.</p>\n",
                type: "Integer",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n// draw an ellipsoid with radius 20, 30 and 40.\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  ellipsoid(20, 30, 40);\n}\n</code>\n</div>"],
              class: "p5",
              module: "Shape",
              submodule: "3D Primitives"
            }, {
              file: "src/webgl/3d_primitives.js",
              line: 645,
              description: "<p>Draw a torus with given radius and tube radius</p>\n",
              itemtype: "method",
              name: "torus",
              params: [{
                name: "radius",
                description: "<p>radius of the whole ring</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "tubeRadius",
                description: "<p>radius of the tube</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "detailX",
                description: "<p>number of segments in x-dimension,\n                               the more segments the smoother geometry\n                               default is 24</p>\n",
                type: "Integer",
                optional: !0
              }, {
                name: "detailY",
                description: "<p>number of segments in y-dimension,\n                               the more segments the smoother geometry\n                               default is 16</p>\n",
                type: "Integer",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n//draw a spinning torus with radius 200 and tube radius 60\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  torus(50, 15);\n}\n</code>\n</div>"],
              class: "p5",
              module: "Shape",
              submodule: "3D Primitives"
            }, {
              file: "src/webgl/interaction.js",
              line: 13,
              description: "<p>Allows movement around a 3D sketch using a mouse or trackpad.  Left-clicking\nand dragging will rotate the camera position about the center of the sketch,\nright-clicking and dragging will pan the camera position without rotation,\nand using the mouse wheel (scrolling) will move the camera closer or further\nfrom the center of the sketch. This function can be called with parameters\ndictating sensitivity to mouse movement along the X and Y axes.  Calling\nthis function without parameters is equivalent to calling orbitControl(1,1).\nTo reverse direction of movement in either axis, enter a negative number\nfor sensitivity.</p>\n",
              itemtype: "method",
              name: "orbitControl",
              params: [{
                name: "sensitivityX",
                description: "<p>sensitivity to mouse movement along X axis</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "sensitivityY",
                description: "<p>sensitivity to mouse movement along Y axis</p>\n",
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n}\nfunction draw() {\n  background(200);\n  orbitControl();\n  rotateY(0.5);\n  box(30, 50);\n}\n</code>\n</div>"],
              alt: "Camera orbits around a box when mouse is hold-clicked & then moved.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Interaction"
            }, {
              file: "src/webgl/interaction.js",
              line: 146,
              description: "<p>debugMode() helps visualize 3D space by adding a grid to indicate where the\n‘ground’ is in a sketch and an axes icon which indicates the +X, +Y, and +Z\ndirections. This function can be called without parameters to create a\ndefault grid and axes icon, or it can be called according to the examples\nabove to customize the size and position of the grid and/or axes icon.  The\ngrid is drawn using the most recently set stroke color and weight.  To\nspecify these parameters, add a call to stroke() and strokeWeight()\njust before the end of the draw() loop.</p>\n<p>By default, the grid will run through the origin (0,0,0) of the sketch\nalong the XZ plane\nand the axes icon will be offset from the origin.  Both the grid and axes\nicon will be sized according to the current canvas size.  Note that because the\ngrid runs parallel to the default camera view, it is often helpful to use\ndebugMode along with orbitControl to allow full view of the grid.</p>\n",
              itemtype: "method",
              name: "debugMode",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  camera(0, -30, 100, 0, 0, 0, 0, 1, 0);\n  normalMaterial();\n  debugMode();\n}\n\nfunction draw() {\n  background(200);\n  orbitControl();\n  box(15, 30);\n  // Press the spacebar to turn debugMode off!\n  if (keyIsDown(32)) {\n    noDebugMode();\n  }\n}\n</code>\n</div>", "\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  camera(0, -30, 100, 0, 0, 0, 0, 1, 0);\n  normalMaterial();\n  debugMode(GRID);\n}\n\nfunction draw() {\n  background(200);\n  orbitControl();\n  box(15, 30);\n}\n</code>\n</div>", "\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  camera(0, -30, 100, 0, 0, 0, 0, 1, 0);\n  normalMaterial();\n  debugMode(AXES);\n}\n\nfunction draw() {\n  background(200);\n  orbitControl();\n  box(15, 30);\n}\n</code>\n</div>", "\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  camera(0, -30, 100, 0, 0, 0, 0, 1, 0);\n  normalMaterial();\n  debugMode(GRID, 100, 10, 0, 0, 0);\n}\n\nfunction draw() {\n  background(200);\n  orbitControl();\n  box(15, 30);\n}\n</code>\n</div>", "\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  camera(0, -30, 100, 0, 0, 0, 0, 1, 0);\n  normalMaterial();\n  debugMode(100, 10, 0, 0, 0, 20, 0, -40, 0);\n}\n\nfunction draw() {\n  noStroke();\n  background(200);\n  orbitControl();\n  box(15, 30);\n  // set the stroke color and weight for the grid!\n  stroke(255, 0, 150);\n  strokeWeight(0.8);\n}\n</code>\n</div>"],
              alt: "a 3D box is centered on a grid in a 3D sketch. an icon\nindicates the direction of each axis: a red line points +X,\na green line +Y, and a blue line +Z.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Interaction",
              overloads: [{
                line: 146,
                params: []
              }, {
                line: 279,
                params: [{
                  name: "mode",
                  description: "<p>either GRID or AXES</p>\n",
                  type: "Constant"
                }]
              }, {
                line: 284,
                params: [{
                  name: "mode",
                  description: "",
                  type: "Constant"
                }, {
                  name: "gridSize",
                  description: "<p>size of one side of the grid</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "gridDivisions",
                  description: "<p>number of divisions in the grid</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "xOff",
                  description: "<p>X axis offset from origin (0,0,0)</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "yOff",
                  description: "<p>Y axis offset from origin (0,0,0)</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "zOff",
                  description: "<p>Z axis offset from origin (0,0,0)</p>\n",
                  type: "Number",
                  optional: !0
                }]
              }, {
                line: 294,
                params: [{
                  name: "mode",
                  description: "",
                  type: "Constant"
                }, {
                  name: "axesSize",
                  description: "<p>size of axes icon</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "xOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "yOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "zOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }]
              }, {
                line: 303,
                params: [{
                  name: "gridSize",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "gridDivisions",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "gridXOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "gridYOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "gridZOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "axesSize",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "axesXOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "axesYOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }, {
                  name: "axesZOff",
                  description: "",
                  type: "Number",
                  optional: !0
                }]
              }]
            }, {
              file: "src/webgl/interaction.js",
              line: 380,
              description: "<p>Turns off debugMode() in a 3D sketch.</p>\n",
              itemtype: "method",
              name: "noDebugMode",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  camera(0, -30, 100, 0, 0, 0, 0, 1, 0);\n  normalMaterial();\n  debugMode();\n}\n\nfunction draw() {\n  background(200);\n  orbitControl();\n  box(15, 30);\n  // Press the spacebar to turn debugMode off!\n  if (keyIsDown(32)) {\n    noDebugMode();\n  }\n}\n</code>\n</div>"],
              alt: "a 3D box is centered on a grid in a 3D sketch. an icon\nindicates the direction of each axis: a red line points +X,\na green line +Y, and a blue line +Z. the grid and icon disappear when the\nspacebar is pressed.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Interaction"
            }, {
              file: "src/webgl/light.js",
              line: 12,
              description: "<p>Creates an ambient light with a color</p>\n",
              itemtype: "method",
              name: "ambientLight",
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(0);\n  ambientLight(150);\n  ambientMaterial(250);\n  noStroke();\n  sphere(25);\n}\n</code>\n</div>"],
              alt: "evenly distributed light across a sphere",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Lights",
              overloads: [{
                line: 12,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value relative to\n                                the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value\n                                relative to the current color range</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "<p>the alpha value</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 46,
                params: [{
                  name: "value",
                  description: "<p>a color string</p>\n",
                  type: "String"
                }],
                chainable: 1
              }, {
                line: 52,
                params: [{
                  name: "gray",
                  description: "<p>a gray value</p>\n",
                  type: "Number"
                }, {
                  name: "alpha",
                  description: "",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 59,
                params: [{
                  name: "values",
                  description: "<p>an array containing the red,green,blue &amp;\n                                and alpha components of the color</p>\n",
                  type: "Number[]"
                }],
                chainable: 1
              }, {
                line: 66,
                params: [{
                  name: "color",
                  description: "<p>the ambient light color</p>\n",
                  type: "p5.Color"
                }],
                chainable: 1
              }]
            }, {
              file: "src/webgl/light.js",
              line: 101,
              description: "<p>Creates a directional light with a color and a direction</p>\n",
              itemtype: "method",
              name: "directionalLight",
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(0);\n  //move your mouse to change light direction\n  let dirX = (mouseX / width - 0.5) * 2;\n  let dirY = (mouseY / height - 0.5) * 2;\n  directionalLight(250, 250, 250, -dirX, -dirY, 0.25);\n  ambientMaterial(250);\n  noStroke();\n  sphere(25);\n}\n</code>\n</div>"],
              alt: "light source on canvas changeable with mouse position",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Lights",
              overloads: [{
                line: 101,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value (depending on the current\ncolor mode),</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value</p>\n",
                  type: "Number"
                }, {
                  name: "position",
                  description: "<p>the direction of the light</p>\n",
                  type: "p5.Vector"
                }],
                chainable: 1
              }, {
                line: 134,
                params: [{
                  name: "color",
                  description: '<p>color Array, CSS color string,\n                                            or <a href="#/p5.Color">p5.Color</a> value</p>\n',
                  type: "Number[]|String|p5.Color"
                }, {
                  name: "x",
                  description: "<p>x axis direction</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>y axis direction</p>\n",
                  type: "Number"
                }, {
                  name: "z",
                  description: "<p>z axis direction</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 144,
                params: [{
                  name: "color",
                  description: "",
                  type: "Number[]|String|p5.Color"
                }, {
                  name: "position",
                  description: "",
                  type: "p5.Vector"
                }],
                chainable: 1
              }, {
                line: 151,
                params: [{
                  name: "v1",
                  description: "",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "",
                  type: "Number"
                }, {
                  name: "x",
                  description: "",
                  type: "Number"
                }, {
                  name: "y",
                  description: "",
                  type: "Number"
                }, {
                  name: "z",
                  description: "",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "src/webgl/light.js",
              line: 212,
              description: "<p>Creates a point light with a color and a light position</p>\n",
              itemtype: "method",
              name: "pointLight",
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(0);\n  //move your mouse to change light position\n  let locX = mouseX - width / 2;\n  let locY = mouseY - height / 2;\n  // to set the light position,\n  // think of the world's coordinate as:\n  // -width/2,-height/2 -------- width/2,-height/2\n  //                |            |\n  //                |     0,0    |\n  //                |            |\n  // -width/2,height/2--------width/2,height/2\n  pointLight(250, 250, 250, locX, locY, 50);\n  ambientMaterial(250);\n  noStroke();\n  sphere(25);\n}\n</code>\n</div>"],
              alt: "spot light on canvas changes position with mouse",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Lights",
              overloads: [{
                line: 212,
                params: [{
                  name: "v1",
                  description: "<p>red or hue value (depending on the current\ncolor mode),</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value</p>\n",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value</p>\n",
                  type: "Number"
                }, {
                  name: "x",
                  description: "<p>x axis position</p>\n",
                  type: "Number"
                }, {
                  name: "y",
                  description: "<p>y axis position</p>\n",
                  type: "Number"
                }, {
                  name: "z",
                  description: "<p>z axis position</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 254,
                params: [{
                  name: "v1",
                  description: "",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "",
                  type: "Number"
                }, {
                  name: "v3",
                  description: "",
                  type: "Number"
                }, {
                  name: "position",
                  description: "<p>the position of the light</p>\n",
                  type: "p5.Vector"
                }],
                chainable: 1
              }, {
                line: 263,
                params: [{
                  name: "color",
                  description: '<p>color Array, CSS color string,\nor <a href="#/p5.Color">p5.Color</a> value</p>\n',
                  type: "Number[]|String|p5.Color"
                }, {
                  name: "x",
                  description: "",
                  type: "Number"
                }, {
                  name: "y",
                  description: "",
                  type: "Number"
                }, {
                  name: "z",
                  description: "",
                  type: "Number"
                }],
                chainable: 1
              }, {
                line: 273,
                params: [{
                  name: "color",
                  description: "",
                  type: "Number[]|String|p5.Color"
                }, {
                  name: "position",
                  description: "",
                  type: "p5.Vector"
                }],
                chainable: 1
              }]
            }, {
              file: "src/webgl/loading.js",
              line: 14,
              description: '<p>Load a 3d model from an OBJ file.\n<br><br>\nOne of the limitations of the OBJ format is that it doesn&#39;t have a built-in\nsense of scale. This means that models exported from different programs might\nbe very different sizes. If your model isn&#39;t displaying, try calling\n<a href="#/p5/loadModel">loadModel()</a> with the normalized parameter set to true. This will resize the\nmodel to a scale appropriate for p5. You can also make additional changes to\nthe final size of your model with the <a href="#/p5/scale">scale()</a> function.</p>\n',
              itemtype: "method",
              name: "loadModel",
              return: {
                description: 'the <a href="#/p5.Geometry">p5.Geometry</a> object',
                type: "p5.Geometry"
              },
              example: ["\n<div>\n<code>\n//draw a spinning octahedron\nlet octahedron;\n\nfunction preload() {\n  octahedron = loadModel('assets/octahedron.obj');\n}\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  model(octahedron);\n}\n</code>\n</div>", "\n<div>\n<code>\n//draw a spinning teapot\nlet teapot;\n\nfunction preload() {\n  // Load model with normalise parameter set to true\n  teapot = loadModel('assets/teapot.obj', true);\n}\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  scale(0.4); // Scaled to make model fit into canvas\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  normalMaterial(); // For effect\n  model(teapot);\n}\n</code>\n</div>"],
              alt: "Vertically rotating 3-d teapot with red, green and blue gradient.",
              class: "p5",
              module: "Shape",
              submodule: "3D Models",
              overloads: [{
                line: 14,
                params: [{
                  name: "path",
                  description: "<p>Path of the model to be loaded</p>\n",
                  type: "String"
                }, {
                  name: "normalize",
                  description: "<p>If true, scale the model to a\n                                     standardized size when loading</p>\n",
                  type: "Boolean"
                }, {
                  name: "successCallback",
                  description: "<p>Function to be called\n                                    once the model is loaded. Will be passed\n                                    the 3D model object.</p>\n",
                  type: "function(p5.Geometry)",
                  optional: !0
                }, {
                  name: "failureCallback",
                  description: "<p>called with event error if\n                                        the image fails to load.</p>\n",
                  type: "Function(Event)",
                  optional: !0
                }],
                return: {
                  description: 'the <a href="#/p5.Geometry">p5.Geometry</a> object',
                  type: "p5.Geometry"
                }
              }, {
                line: 90,
                params: [{
                  name: "path",
                  description: "",
                  type: "String"
                }, {
                  name: "successCallback",
                  description: "",
                  type: "function(p5.Geometry)",
                  optional: !0
                }, {
                  name: "failureCallback",
                  description: "",
                  type: "Function(Event)",
                  optional: !0
                }],
                return: {
                  description: 'the <a href="#/p5.Geometry">p5.Geometry</a> object',
                  type: "p5.Geometry"
                }
              }]
            }, {
              file: "src/webgl/loading.js",
              line: 135,
              description: "<p>Parse OBJ lines into model. For reference, this is what a simple model of a\nsquare might look like:</p>\n<p>v -0.5 -0.5 0.5\nv -0.5 -0.5 -0.5\nv -0.5 0.5 -0.5\nv -0.5 0.5 0.5</p>\n<p>f 4 3 2 1</p>\n",
              class: "p5",
              module: "Shape",
              submodule: "3D Models"
            }, {
              file: "src/webgl/loading.js",
              line: 244,
              description: "<p>Render a 3d model to the screen.</p>\n",
              itemtype: "method",
              name: "model",
              params: [{
                name: "model",
                description: "<p>Loaded 3d model to be rendered</p>\n",
                type: "p5.Geometry"
              }],
              example: ["\n<div>\n<code>\n//draw a spinning octahedron\nlet octahedron;\n\nfunction preload() {\n  octahedron = loadModel('assets/octahedron.obj');\n}\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  model(octahedron);\n}\n</code>\n</div>"],
              alt: "Vertically rotating 3-d octahedron.",
              class: "p5",
              module: "Shape",
              submodule: "3D Models"
            }, {
              file: "src/webgl/material.js",
              line: 14,
              description: '<p>Loads a custom shader from the provided vertex and fragment\nshader paths. The shader files are loaded asynchronously in the\nbackground, so this method should be used in <a href="#/p5/preload">preload()</a>.</p>\n<p>For now, there are three main types of shaders. p5 will automatically\nsupply appropriate vertices, normals, colors, and lighting attributes\nif the parameters defined in the shader match the names.</p>\n',
              itemtype: "method",
              name: "loadShader",
              params: [{
                name: "vertFilename",
                description: "<p>path to file containing vertex shader\nsource code</p>\n",
                type: "String",
                optional: !0
              }, {
                name: "fragFilename",
                description: "<p>path to file containing fragment shader\nsource code</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: "a shader object created from the provided\nvertex and fragment shader files.",
                type: "p5.Shader"
              },
              example: ["\n<div modernizr='webgl'>\n<code>\nlet mandel;\nfunction preload() {\n  // load the shader definitions from files\n  mandel = loadShader('assets/shader.vert', 'assets/shader.frag');\n}\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  // use the shader\n  shader(mandel);\n  noStroke();\n  mandel.setUniform('p', [-0.74364388703, 0.13182590421]);\n}\n\nfunction draw() {\n  mandel.setUniform('r', 1.5 * exp(-6.5 * (1 + sin(millis() / 2000))));\n  quad(-1, -1, 1, -1, 1, 1, -1, 1);\n}\n</code>\n</div>"],
              alt: "zooming Mandelbrot set. a colorful, infinitely detailed fractal.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material"
            }, {
              file: "src/webgl/material.js",
              line: 83,
              itemtype: "method",
              name: "createShader",
              params: [{
                name: "vertSrc",
                description: "<p>source code for the vertex shader</p>\n",
                type: "String"
              }, {
                name: "fragSrc",
                description: "<p>source code for the fragment shader</p>\n",
                type: "String"
              }],
              return: {
                description: "a shader object created from the provided\nvertex and fragment shaders.",
                type: "p5.Shader"
              },
              example: ["\n<div modernizr='webgl'>\n<code>\n// the 'varying's are shared between both vertex & fragment shaders\nlet varying = 'precision highp float; varying vec2 vPos;';\n\n// the vertex shader is called for each vertex\nlet vs =\n  varying +\n  'attribute vec3 aPosition;' +\n  'void main() { vPos = (gl_Position = vec4(aPosition,1.0)).xy; }';\n\n// the fragment shader is called for each pixel\nlet fs =\n  varying +\n  'uniform vec2 p;' +\n  'uniform float r;' +\n  'const int I = 500;' +\n  'void main() {' +\n  '  vec2 c = p + vPos * r, z = c;' +\n  '  float n = 0.0;' +\n  '  for (int i = I; i > 0; i --) {' +\n  '    if(z.x*z.x+z.y*z.y > 4.0) {' +\n  '      n = float(i)/float(I);' +\n  '      break;' +\n  '    }' +\n  '    z = vec2(z.x*z.x-z.y*z.y, 2.0*z.x*z.y) + c;' +\n  '  }' +\n  '  gl_FragColor = vec4(0.5-cos(n*17.0)/2.0,0.5-cos(n*13.0)/2.0,0.5-cos(n*23.0)/2.0,1.0);' +\n  '}';\n\nlet mandel;\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n\n  // create and initialize the shader\n  mandel = createShader(vs, fs);\n  shader(mandel);\n  noStroke();\n\n  // 'p' is the center point of the Mandelbrot image\n  mandel.setUniform('p', [-0.74364388703, 0.13182590421]);\n}\n\nfunction draw() {\n  // 'r' is the size of the image in Mandelbrot-space\n  mandel.setUniform('r', 1.5 * exp(-6.5 * (1 + sin(millis() / 2000))));\n  quad(-1, -1, 1, -1, 1, 1, -1, 1);\n}\n</code>\n</div>"],
              alt: "zooming Mandelbrot set. a colorful, infinitely detailed fractal.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material"
            }, {
              file: "src/webgl/material.js",
              line: 151,
              description: '<p>The <a href="#/p5/shader">shader()</a> function lets the user provide a custom shader\nto fill in shapes in WEBGL mode. Users can create their\nown shaders by loading vertex and fragment shaders with\n<a href="#/p5/loadShader">loadShader()</a>.</p>\n',
              itemtype: "method",
              name: "shader",
              chainable: 1,
              params: [{
                name: "s",
                description: '<p>the desired <a href="#/p5.Shader">p5.Shader</a> to use for rendering\nshapes.</p>\n',
                type: "p5.Shader",
                optional: !0
              }],
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material"
            }, {
              file: "src/webgl/material.js",
              line: 176,
              description: '<p>Normal material for geometry. You can view all\npossible materials in this\n<a href="https://p5js.org/examples/3d-materials.html">example</a>.</p>\n',
              itemtype: "method",
              name: "normalMaterial",
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(200);\n  normalMaterial();\n  sphere(50);\n}\n</code>\n</div>"],
              alt: "Red, green and blue gradient.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material"
            }, {
              file: "src/webgl/material.js",
              line: 211,
              description: '<p>Texture for geometry.  You can view other possible materials in this\n<a href="https://p5js.org/examples/3d-materials.html">example</a>.</p>\n',
              itemtype: "method",
              name: "texture",
              params: [{
                name: "tex",
                description: "<p>2-dimensional graphics\n                   to render as texture</p>\n",
                type: "p5.Image|p5.MediaElement|p5.Graphics"
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nlet img;\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(0);\n  rotateZ(frameCount * 0.01);\n  rotateX(frameCount * 0.01);\n  rotateY(frameCount * 0.01);\n  //pass image as texture\n  texture(img);\n  box(200, 200, 200);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet pg;\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  pg = createGraphics(200, 200);\n  pg.textSize(100);\n}\n\nfunction draw() {\n  background(0);\n  pg.background(255);\n  pg.text('hello!', 0, 100);\n  //pass image as texture\n  texture(pg);\n  plane(200);\n}\n</code>\n</div>\n\n<div>\n<code>\nlet vid;\nfunction preload() {\n  vid = createVideo('assets/fingers.mov');\n  vid.hide();\n  vid.loop();\n}\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(0);\n  //pass video frame as texture\n  texture(vid);\n  plane(200);\n}\n</code>\n</div>"],
              alt: "Rotating view of many images umbrella and grid roof on a 3d plane\nblack canvas\nblack canvas",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material"
            }, {
              file: "src/webgl/material.js",
              line: 302,
              description: "<p>Sets the coordinate space for texture mapping. The default mode is IMAGE\nwhich refers to the actual coordinates of the image.\nNORMAL refers to a normalized space of values ranging from 0 to 1.\nThis function only works in WEBGL mode.</p>\n<p>With IMAGE, if an image is 100 x 200 pixels, mapping the image onto the entire\nsize of a quad would require the points (0,0) (100, 0) (100,200) (0,200).\nThe same mapping in NORMAL is (0,0) (1,0) (1,1) (0,1).</p>\n",
              itemtype: "method",
              name: "textureMode",
              params: [{
                name: "mode",
                description: "<p>either IMAGE or NORMAL</p>\n",
                type: "Constant"
              }],
              example: ["\n<div>\n<code>\nlet img;\n\nfunction preload() {\n  img = loadImage('assets/laDefense.jpg');\n}\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  texture(img);\n  textureMode(NORMAL);\n  beginShape();\n  vertex(-50, -50, 0, 0);\n  vertex(50, -50, 1, 0);\n  vertex(50, 50, 1, 1);\n  vertex(-50, 50, 0, 1);\n  endShape();\n}\n</code>\n</div>"],
              alt: "the underside of a white umbrella and gridded ceiling above",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material"
            }, {
              file: "src/webgl/material.js",
              line: 381,
              description: '<p>Ambient material for geometry with a given color. You can view all\npossible materials in this\n<a href="https://p5js.org/examples/3d-materials.html">example</a>.</p>\n',
              itemtype: "method",
              name: "ambientMaterial",
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(0);\n  ambientLight(100);\n  pointLight(250, 250, 250, 100, 100, 0);\n  ambientMaterial(250);\n  sphere(50);\n}\n</code>\n</div>"],
              alt: "radiating light source from top right of canvas",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material",
              overloads: [{
                line: 381,
                params: [{
                  name: "v1",
                  description: "<p>gray value, red or hue value\n                        (depending on the current color mode),</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "a",
                  description: "<p>opacity</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 412,
                params: [{
                  name: "color",
                  description: "<p>color, color Array, or CSS color string</p>\n",
                  type: "Number[]|String|p5.Color"
                }],
                chainable: 1
              }]
            }, {
              file: "src/webgl/material.js",
              line: 430,
              description: '<p>Specular material for geometry with a given color. You can view all\npossible materials in this\n<a href="https://p5js.org/examples/3d-materials.html">example</a>.</p>\n',
              itemtype: "method",
              name: "specularMaterial",
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(0);\n  ambientLight(100);\n  pointLight(250, 250, 250, 100, 100, 0);\n  specularMaterial(250);\n  sphere(50);\n}\n</code>\n</div>"],
              alt: "diffused radiating light source from top right of canvas",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Material",
              overloads: [{
                line: 430,
                params: [{
                  name: "v1",
                  description: "<p>gray value, red or hue value\n                      (depending on the current color mode),</p>\n",
                  type: "Number"
                }, {
                  name: "v2",
                  description: "<p>green or saturation value</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "v3",
                  description: "<p>blue or brightness value</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "a",
                  description: "<p>opacity</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }, {
                line: 461,
                params: [{
                  name: "color",
                  description: "<p>color Array, or CSS color string</p>\n",
                  type: "Number[]|String|p5.Color"
                }],
                chainable: 1
              }]
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 15,
              description: "<p>Sets the camera position for a 3D sketch. Parameters for this function define\nthe position for the camera, the center of the sketch (where the camera is\npointing), and an up direction (the orientation of the camera).</p>\n<p>When called with no arguments, this function creates a default camera\nequivalent to\ncamera(0, 0, (height/2.0) / tan(PI*30.0 / 180.0), 0, 0, 0, 0, 1, 0);</p>\n",
              itemtype: "method",
              name: "camera",
              params: [{
                name: "x",
                description: "<p>camera position value on x axis</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "y",
                description: "<p>camera position value on y axis</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "z",
                description: "<p>camera position value on z axis</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "centerX",
                description: "<p>x coordinate representing center of the sketch</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "centerY",
                description: "<p>y coordinate representing center of the sketch</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "centerZ",
                description: "<p>z coordinate representing center of the sketch</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "upX",
                description: "<p>x component of direction &#39;up&#39; from camera</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "upY",
                description: "<p>y component of direction &#39;up&#39; from camera</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "upZ",
                description: "<p>z component of direction &#39;up&#39; from camera</p>\n",
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\nfunction draw() {\n  background(204);\n  //move the camera away from the plane by a sin wave\n  camera(0, 0, 20 + sin(frameCount * 0.01) * 10, 0, 0, 0, 0, 1, 0);\n  plane(10, 10);\n}\n</code>\n</div>"],
              alt: "White square repeatedly grows to fill canvas and then shrinks.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 61,
              description: "<p>Sets a perspective projection for the camera in a 3D sketch. This projection\nrepresents depth through foreshortening: objects that are close to the camera\nappear their actual size while those that are further away from the camera\nappear smaller. The parameters to this function define the viewing frustum\n(the truncated pyramid within which objects are seen by the camera) through\nvertical field of view, aspect ratio (usually width/height), and near and far\nclipping planes.</p>\n<p>When called with no arguments, the defaults\nprovided are equivalent to\nperspective(PI/3.0, width/height, eyeZ/10.0, eyeZ<em>10.0), where eyeZ\nis equal to ((height/2.0) / tan(PI</em>60.0/360.0));</p>\n",
              itemtype: "method",
              name: "perspective",
              params: [{
                name: "fovy",
                description: '<p>camera frustum vertical field of view,\n                          from bottom to top of view, in <a href="#/p5/angleMode">angleMode</a> units</p>\n',
                type: "Number",
                optional: !0
              }, {
                name: "aspect",
                description: "<p>camera frustum aspect ratio</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "near",
                description: "<p>frustum near plane length</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "far",
                description: "<p>frustum far plane length</p>\n",
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n//drag the mouse to look around!\n//you will see there's a vanishing point\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  perspective(PI / 3.0, width / height, 0.1, 500);\n}\nfunction draw() {\n  background(200);\n  orbitControl();\n  normalMaterial();\n\n  rotateX(-0.3);\n  rotateY(-0.2);\n  translate(0, 0, -50);\n\n  push();\n  translate(-15, 0, sin(frameCount / 30) * 95);\n  box(30);\n  pop();\n  push();\n  translate(15, 0, sin(frameCount / 30 + PI) * 95);\n  box(30);\n  pop();\n}\n</code>\n</div>"],
              alt: "two colored 3D boxes move back and forth, rotating as mouse is dragged.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 126,
              description: "<p>Sets an orthographic projection for the camera in a 3D sketch and defines a\nbox-shaped viewing frustum within which objects are seen. In this projection,\nall objects with the same dimension appear the same size, regardless of\nwhether they are near or far from the camera. The parameters to this\nfunction specify the viewing frustum where left and right are the minimum and\nmaximum x values, top and bottom are the minimum and maximum y values, and near\nand far are the minimum and maximum z values. If no parameters are given, the\ndefault is used: ortho(-width/2, width/2, -height/2, height/2).</p>\n",
              itemtype: "method",
              name: "ortho",
              params: [{
                name: "left",
                description: "<p>camera frustum left plane</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "right",
                description: "<p>camera frustum right plane</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "bottom",
                description: "<p>camera frustum bottom plane</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "top",
                description: "<p>camera frustum top plane</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "near",
                description: "<p>camera frustum near plane</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "far",
                description: "<p>camera frustum far plane</p>\n",
                type: "Number",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div>\n<code>\n//drag the mouse to look around!\n//there's no vanishing point\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  ortho(-width / 2, width / 2, height / 2, -height / 2, 0, 500);\n}\nfunction draw() {\n  background(200);\n  orbitControl();\n  normalMaterial();\n\n  rotateX(0.2);\n  rotateY(-0.2);\n  push();\n  translate(-15, 0, sin(frameCount / 30) * 65);\n  box(30);\n  pop();\n  push();\n  translate(15, 0, sin(frameCount / 30 + PI) * 65);\n  box(30);\n  pop();\n}\n</code>\n</div>"],
              alt: "two 3D boxes move back and forth along same plane, rotating as mouse is dragged.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 187,
              description: '<p>Creates a new <a href="#/p5.Camera">p5.Camera</a> object and tells the\nrenderer to use that camera.\nReturns the p5.Camera object.</p>\n',
              itemtype: "method",
              name: "createCamera",
              return: {
                description: "The newly created camera object.",
                type: "p5.Camera"
              },
              class: "p5",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 298,
              description: '<p>Sets a perspective projection for a p5.Camera object and sets parameters\nfor that projection according to <a href="#/p5/perspective">perspective()</a>\nsyntax.</p>\n',
              itemtype: "method",
              name: "perspective",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 379,
              description: '<p>Sets an orthographic projection for a p5.Camera object and sets parameters\nfor that projection according to <a href="#/p5/ortho">ortho()</a> syntax.</p>\n',
              itemtype: "method",
              name: "ortho",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 486,
              description: "<p>Panning rotates the camera view to the left and right.</p>\n",
              itemtype: "method",
              name: "pan",
              params: [{
                name: "angle",
                description: '<p>amount to rotate camera in current\n<a href="#/p5/angleMode">angleMode</a> units.\nGreater than 0 values rotate counterclockwise (to the left).</p>\n',
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nlet cam;\nlet delta = 0.01;\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n  cam = createCamera();\n  // set initial pan angle\n  cam.pan(-0.8);\n}\n\nfunction draw() {\n  background(200);\n\n  // pan camera according to angle 'delta'\n  cam.pan(delta);\n\n  // every 160 frames, switch direction\n  if (frameCount % 160 === 0) {\n    delta *= -1;\n  }\n\n  rotateX(frameCount * 0.01);\n  translate(-100, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n}\n</code>\n</div>"],
              alt: "camera view pans left and right across a series of rotating 3D boxes.",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 545,
              description: "<p>Tilting rotates the camera view up and down.</p>\n",
              itemtype: "method",
              name: "tilt",
              params: [{
                name: "angle",
                description: '<p>amount to rotate camera in current\n<a href="#/p5/angleMode">angleMode</a> units.\nGreater than 0 values rotate counterclockwise (to the left).</p>\n',
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nlet cam;\nlet delta = 0.01;\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n  cam = createCamera();\n  // set initial tilt\n  cam.tilt(-0.8);\n}\n\nfunction draw() {\n  background(200);\n\n  // pan camera according to angle 'delta'\n  cam.tilt(delta);\n\n  // every 160 frames, switch direction\n  if (frameCount % 160 === 0) {\n    delta *= -1;\n  }\n\n  rotateY(frameCount * 0.01);\n  translate(0, -100, 0);\n  box(20);\n  translate(0, 35, 0);\n  box(20);\n  translate(0, 35, 0);\n  box(20);\n  translate(0, 35, 0);\n  box(20);\n  translate(0, 35, 0);\n  box(20);\n  translate(0, 35, 0);\n  box(20);\n  translate(0, 35, 0);\n  box(20);\n}\n</code>\n</div>"],
              alt: "camera view tilts up and down across a series of rotating 3D boxes.",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 603,
              description: "<p>Reorients the camera to look at a position in world space.</p>\n",
              itemtype: "method",
              name: "lookAt",
              params: [{
                name: "x",
                description: "<p>x position of a point in world space</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y position of a point in world space</p>\n",
                type: "Number"
              }, {
                name: "z",
                description: "<p>z position of a point in world space</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\nlet cam;\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n  cam = createCamera();\n}\n\nfunction draw() {\n  background(200);\n\n  // look at a new random point every 60 frames\n  if (frameCount % 60 === 0) {\n    cam.lookAt(random(-100, 100), random(-50, 50), 0);\n  }\n\n  rotateX(frameCount * 0.01);\n  translate(-100, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n}\n</code>\n</div>"],
              alt: "camera view of rotating 3D cubes changes to look at a new random\npoint every second .",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 670,
              description: '<p>Sets a camera&#39;s position and orientation.  This is equivalent to calling\n<a href="#/p5/camera">camera()</a> on a p5.Camera object.</p>\n',
              itemtype: "method",
              name: "camera",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 751,
              description: "<p>Move camera along its local axes while maintaining current camera orientation.</p>\n",
              itemtype: "method",
              name: "move",
              params: [{
                name: "x",
                description: "<p>amount to move along camera&#39;s left-right axis</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>amount to move along camera&#39;s up-down axis</p>\n",
                type: "Number"
              }, {
                name: "z",
                description: "<p>amount to move along camera&#39;s forward-backward axis</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\n// see the camera move along its own axes while maintaining its orientation\nlet cam;\nlet delta = 0.5;\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n  cam = createCamera();\n}\n\nfunction draw() {\n  background(200);\n\n  // move the camera along its local axes\n  cam.move(delta, delta, 0);\n\n  // every 100 frames, switch direction\n  if (frameCount % 150 === 0) {\n    delta *= -1;\n  }\n\n  translate(-10, -10, 0);\n  box(50, 8, 50);\n  translate(15, 15, 0);\n  box(50, 8, 50);\n  translate(15, 15, 0);\n  box(50, 8, 50);\n  translate(15, 15, 0);\n  box(50, 8, 50);\n  translate(15, 15, 0);\n  box(50, 8, 50);\n  translate(15, 15, 0);\n  box(50, 8, 50);\n}\n</code>\n</div>"],
              alt: "camera view moves along a series of 3D boxes, maintaining the same\norientation throughout the move",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 823,
              description: "<p>Set camera position in world-space while maintaining current camera\norientation.</p>\n",
              itemtype: "method",
              name: "setPosition",
              params: [{
                name: "x",
                description: "<p>x position of a point in world space</p>\n",
                type: "Number"
              }, {
                name: "y",
                description: "<p>y position of a point in world space</p>\n",
                type: "Number"
              }, {
                name: "z",
                description: "<p>z position of a point in world space</p>\n",
                type: "Number"
              }],
              example: ["\n<div>\n<code>\n// press '1' '2' or '3' keys to set camera position\n\nlet cam;\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n  cam = createCamera();\n}\n\nfunction draw() {\n  background(200);\n\n  // '1' key\n  if (keyIsDown(49)) {\n    cam.setPosition(30, 0, 80);\n  }\n  // '2' key\n  if (keyIsDown(50)) {\n    cam.setPosition(0, 0, 80);\n  }\n  // '3' key\n  if (keyIsDown(51)) {\n    cam.setPosition(-30, 0, 80);\n  }\n\n  box(20);\n}\n</code>\n</div>"],
              alt: "camera position changes as the user presses keys, altering view of a 3D box",
              class: "p5.Camera",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Camera.js",
              line: 1088,
              description: "<p>Sets rendererGL&#39;s current camera to a p5.Camera object.  Allows switching\nbetween multiple cameras.</p>\n",
              itemtype: "method",
              name: "setCamera",
              params: [{
                name: "cam",
                description: "<p>p5.Camera object</p>\n",
                type: "p5.Camera"
              }],
              example: ["\n<div>\n<code>\nlet cam1, cam2;\nlet currentCamera;\n\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  normalMaterial();\n\n  cam1 = createCamera();\n  cam2 = createCamera();\n  cam2.setPosition(30, 0, 50);\n  cam2.lookAt(0, 0, 0);\n  cam2.ortho();\n\n  // set variable for previously active camera:\n  currentCamera = 1;\n}\n\nfunction draw() {\n  background(200);\n\n  // camera 1:\n  cam1.lookAt(0, 0, 0);\n  cam1.setPosition(sin(frameCount / 60) * 200, 0, 100);\n\n  // every 100 frames, switch between the two cameras\n  if (frameCount % 100 === 0) {\n    if (currentCamera === 1) {\n      setCamera(cam1);\n      currentCamera = 0;\n    } else {\n      setCamera(cam2);\n      currentCamera = 1;\n    }\n  }\n\n  drawBoxes();\n}\n\nfunction drawBoxes() {\n  rotateX(frameCount * 0.01);\n  translate(-100, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n  translate(35, 0, 0);\n  box(20);\n}\n</code>\n</div>"],
              alt: "Canvas switches between two camera views, each showing a series of spinning\n3D boxes.",
              class: "p5",
              module: "Lights, Camera",
              submodule: "Camera"
            }, {
              file: "src/webgl/p5.Geometry.js",
              line: 50,
              itemtype: "method",
              name: "computeFaces",
              chainable: 1,
              class: "p5.Geometry",
              module: "Lights, Camera"
            }, {
              file: "src/webgl/p5.Geometry.js",
              line: 92,
              description: "<p>computes smooth normals per vertex as an average of each\nface.</p>\n",
              itemtype: "method",
              name: "computeNormals",
              chainable: 1,
              class: "p5.Geometry",
              module: "Lights, Camera"
            }, {
              file: "src/webgl/p5.Geometry.js",
              line: 131,
              description: "<p>Averages the vertex normals. Used in curved\nsurfaces</p>\n",
              itemtype: "method",
              name: "averageNormals",
              chainable: 1,
              class: "p5.Geometry",
              module: "Lights, Camera"
            }, {
              file: "src/webgl/p5.Geometry.js",
              line: 152,
              description: "<p>Averages pole normals.  Used in spherical primitives</p>\n",
              itemtype: "method",
              name: "averagePoleNormals",
              chainable: 1,
              class: "p5.Geometry",
              module: "Lights, Camera"
            }, {
              file: "src/webgl/p5.Geometry.js",
              line: 245,
              description: "<p>Modifies all vertices to be centered within the range -100 to 100.</p>\n",
              itemtype: "method",
              name: "normalize",
              chainable: 1,
              class: "p5.Geometry",
              module: "Lights, Camera"
            }, {
              file: "src/webgl/p5.RendererGL.js",
              line: 216,
              description: "<p>Set attributes for the WebGL Drawing context.\nThis is a way of adjusting ways that the WebGL\nrenderer works to fine-tune the display and performance.\nThis should be put in setup().\nThe available attributes are:\n<br>\nalpha - indicates if the canvas contains an alpha buffer\ndefault is true\n<br><br>\ndepth - indicates whether the drawing buffer has a depth buffer\nof at least 16 bits - default is true\n<br><br>\nstencil - indicates whether the drawing buffer has a stencil buffer\nof at least 8 bits\n<br><br>\nantialias - indicates whether or not to perform anti-aliasing\ndefault is false\n<br><br>\npremultipliedAlpha - indicates that the page compositor will assume\nthe drawing buffer contains colors with pre-multiplied alpha\ndefault is false\n<br><br>\npreserveDrawingBuffer - if true the buffers will not be cleared and\nand will preserve their values until cleared or overwritten by author\n(note that p5 clears automatically on draw loop)\ndefault is true\n<br><br>\nperPixelLighting - if true, per-pixel lighting will be used in the\nlighting shader.\ndefault is false\n<br><br></p>\n",
              itemtype: "method",
              name: "setAttributes",
              example: ["\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n}\n\nfunction draw() {\n  background(255);\n  push();\n  rotateZ(frameCount * 0.02);\n  rotateX(frameCount * 0.02);\n  rotateY(frameCount * 0.02);\n  fill(0, 0, 0);\n  box(50);\n  pop();\n}\n</code>\n</div>\n<br>\nNow with the antialias attribute set to true.\n<br>\n<div>\n<code>\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  setAttributes('antialias', true);\n}\n\nfunction draw() {\n  background(255);\n  push();\n  rotateZ(frameCount * 0.02);\n  rotateX(frameCount * 0.02);\n  rotateY(frameCount * 0.02);\n  fill(0, 0, 0);\n  box(50);\n  pop();\n}\n</code>\n</div>\n\n<div>\n<code>\n// press the mouse button to enable perPixelLighting\nfunction setup() {\n  createCanvas(100, 100, WEBGL);\n  noStroke();\n  fill(255);\n}\n\nvar lights = [\n  { c: '#f00', t: 1.12, p: 1.91, r: 0.2 },\n  { c: '#0f0', t: 1.21, p: 1.31, r: 0.2 },\n  { c: '#00f', t: 1.37, p: 1.57, r: 0.2 },\n  { c: '#ff0', t: 1.12, p: 1.91, r: 0.7 },\n  { c: '#0ff', t: 1.21, p: 1.31, r: 0.7 },\n  { c: '#f0f', t: 1.37, p: 1.57, r: 0.7 }\n];\n\nfunction draw() {\n  var t = millis() / 1000 + 1000;\n  background(0);\n  directionalLight(color('#222'), 1, 1, 1);\n\n  for (var i = 0; i < lights.length; i++) {\n    var light = lights[i];\n    pointLight(\n      color(light.c),\n      p5.Vector.fromAngles(t * light.t, t * light.p, width * light.r)\n    );\n  }\n\n  specularMaterial(255);\n  sphere(width * 0.1);\n\n  rotateX(t * 0.77);\n  rotateY(t * 0.83);\n  rotateZ(t * 0.91);\n  torus(width * 0.3, width * 0.07, 24, 10);\n}\n\nfunction mousePressed() {\n  setAttributes('perPixelLighting', true);\n  noStroke();\n  fill(255);\n}\nfunction mouseReleased() {\n  setAttributes('perPixelLighting', false);\n  noStroke();\n  fill(255);\n}\n</code>\n</div>"],
              alt: "a rotating cube with smoother edges",
              class: "p5",
              module: "Rendering",
              submodule: "Rendering",
              overloads: [{
                line: 216,
                params: [{
                  name: "key",
                  description: "<p>Name of attribute</p>\n",
                  type: "String"
                }, {
                  name: "value",
                  description: "<p>New value of named attribute</p>\n",
                  type: "Boolean"
                }]
              }, {
                line: 349,
                params: [{
                  name: "obj",
                  description: "<p>object with key-value pairs</p>\n",
                  type: "Object"
                }]
              }]
            }, {
              file: "src/webgl/p5.Shader.js",
              line: 274,
              description: "<p>Wrapper around gl.uniform functions.\nAs we store uniform info in the shader we can use that\nto do type checking on the supplied data and call\nthe appropriate function.</p>\n",
              itemtype: "method",
              name: "setUniform",
              chainable: 1,
              params: [{
                name: "uniformName",
                description: "<p>the name of the uniform in the\nshader program</p>\n",
                type: "String"
              }, {
                name: "data",
                description: "<p>the data to be associated\nwith that uniform; type varies (could be a single numerical value, array,\nmatrix, or texture / sampler reference)</p>\n",
                type: "Object|Number|Boolean|Number[]"
              }],
              class: "p5.Shader",
              module: "Lights, Camera",
              submodule: "Shaders"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 40,
              description: '<p>Searches the page for an element with the given ID, class, or tag name (using the &#39;#&#39; or &#39;.&#39;\nprefixes to specify an ID or class respectively, and none for a tag) and returns it as\na <a href="#/p5.Element">p5.Element</a>. If a class or tag name is given with more than 1 element,\nonly the first element will be returned.\nThe DOM node itself can be accessed with .elt.\nReturns null if none found. You can also specify a container to search within.</p>\n',
              itemtype: "method",
              name: "select",
              params: [{
                name: "name",
                description: "<p>id, class, or tag name of element to search for</p>\n",
                type: "String"
              }, {
                name: "container",
                description: '<p>id, <a href="#/p5.Element">p5.Element</a>, or\n                                            HTML element to search within</p>\n',
                type: "String|p5.Element|HTMLElement",
                optional: !0
              }],
              return: {
                description: '<a href="#/p5.Element">p5.Element</a> containing node found',
                type: "p5.Element|null"
              },
              example: ["\n<div ><code class='norender'>\nfunction setup() {\n  createCanvas(100, 100);\n  //translates canvas 50px down\n  select('canvas').position(100, 100);\n}\n</code></div>\n<div><code class='norender'>\n// these are all valid calls to select()\nvar a = select('#moo');\nvar b = select('#blah', '#myContainer');\nvar c, e;\nif (b) {\n  c = select('#foo', b);\n}\nvar d = document.getElementById('beep');\nif (d) {\n  e = select('p', d);\n}\n[a, b, c, d, e]; // unused\n</code></div>\n"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 107,
              description: '<p>Searches the page for elements with the given class or tag name (using the &#39;.&#39; prefix\nto specify a class and no prefix for a tag) and returns them as <a href="#/p5.Element">p5.Element</a>s\nin an array.\nThe DOM node itself can be accessed with .elt.\nReturns an empty array if none found.\nYou can also specify a container to search within.</p>\n',
              itemtype: "method",
              name: "selectAll",
              params: [{
                name: "name",
                description: "<p>class or tag name of elements to search for</p>\n",
                type: "String"
              }, {
                name: "container",
                description: '<p>id, <a href="#/p5.Element">p5.Element</a>, or HTML element to search within</p>\n',
                type: "String",
                optional: !0
              }],
              return: {
                description: 'Array of <a href="#/p5.Element">p5.Element</a>s containing nodes found',
                type: "p5.Element[]"
              },
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  createButton('btn');\n  createButton('2nd btn');\n  createButton('3rd btn');\n  var buttons = selectAll('button');\n\n  for (var i = 0; i < buttons.length; i++) {\n    buttons[i].size(100, 100);\n  }\n}\n</code></div>\n<div class='norender'><code>\n// these are all valid calls to selectAll()\nvar a = selectAll('.moo');\na = selectAll('div');\na = selectAll('button', '#myContainer');\n\nvar d = select('#container');\na = selectAll('p', d);\n\nvar f = document.getElementById('beep');\na = select('.blah', f);\n\na; // unused\n</code></div>\n"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 168,
              description: "<p>Helper function for select and selectAll</p>\n",
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 184,
              description: "<p>Helper function for getElement and getElements.</p>\n",
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 218,
              description: '<p>Removes all elements created by p5, except any canvas / graphics\nelements created by <a href="#/p5/createCanvas">createCanvas</a> or <a href="#/p5/createGraphics">createGraphics</a>.\nEvent handlers are removed, and element is removed from the DOM.</p>\n',
              itemtype: "method",
              name: "removeElements",
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  createCanvas(100, 100);\n  createDiv('this is some text');\n  createP('this is a paragraph');\n}\nfunction mousePressed() {\n  removeElements(); // this will remove the div and p, not canvas\n}\n</code></div>\n"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 245,
              description: '<p>The .<a href="#/p5.Element/changed">changed()</a> function is called when the value of an\nelement changes.\nThis can be used to attach an element specific event listener.</p>\n',
              itemtype: "method",
              name: "changed",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when the value of\n                               an element changes.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div><code>\nvar sel;\n\nfunction setup() {\n  textAlign(CENTER);\n  background(200);\n  sel = createSelect();\n  sel.position(10, 10);\n  sel.option('pear');\n  sel.option('kiwi');\n  sel.option('grape');\n  sel.changed(mySelectEvent);\n}\n\nfunction mySelectEvent() {\n  var item = sel.value();\n  background(200);\n  text(\"it's a \" + item + '!', 50, 50);\n}\n</code></div>\n\n<div><code>\nvar checkbox;\nvar cnv;\n\nfunction setup() {\n  checkbox = createCheckbox(' fill');\n  checkbox.changed(changeFill);\n  cnv = createCanvas(100, 100);\n  cnv.position(0, 30);\n  noFill();\n}\n\nfunction draw() {\n  background(200);\n  ellipse(50, 50, 50, 50);\n}\n\nfunction changeFill() {\n  if (checkbox.checked()) {\n    fill(0);\n  } else {\n    noFill();\n  }\n}\n</code></div>"],
              alt: 'dropdown: pear, kiwi, grape. When selected text "its a" + selection shown.',
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 313,
              description: '<p>The .<a href="#/p5.Element/input">input()</a> function is called when any user input is\ndetected with an element. The input event is often used\nto detect keystrokes in a input element, or changes on a\nslider element. This can be used to attach an element specific\nevent listener.</p>\n',
              itemtype: "method",
              name: "input",
              params: [{
                name: "fxn",
                description: "<p>function to be fired when any user input is\n                               detected within the element.\n                               if <code>false</code> is passed instead, the previously\n                               firing function will no longer fire.</p>\n",
                type: "Function|Boolean"
              }],
              chainable: 1,
              example: ["\n<div class='norender'><code>\n// Open your console to see the output\nfunction setup() {\n  var inp = createInput('');\n  inp.input(myInputEvent);\n}\n\nfunction myInputEvent() {\n  console.log('you are typing: ', this.value());\n}\n</code></div>"],
              alt: "no display.",
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 348,
              description: "<p>Helpers for create methods.</p>\n",
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 361,
              description: "<p>Creates a &lt;div&gt;&lt;/div&gt; element in the DOM with given inner HTML.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createDiv",
              params: [{
                name: "html",
                description: "<p>inner HTML for element created</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\ncreateDiv('this is some text');\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 375,
              description: "<p>Creates a &lt;p&gt;&lt;/p&gt; element in the DOM with given inner HTML. Used\nfor paragraph length text.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createP",
              params: [{
                name: "html",
                description: "<p>inner HTML for element created</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\ncreateP('this is some text');\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 390,
              description: "<p>Creates a &lt;span&gt;&lt;/span&gt; element in the DOM with given inner HTML.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createSpan",
              params: [{
                name: "html",
                description: "<p>inner HTML for element created</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\ncreateSpan('this is some text');\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 413,
              description: "<p>Creates an &lt;img&gt; element in the DOM with given src and\nalternate text.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createImg",
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\ncreateImg('http://p5js.org/img/asterisk-01.png');\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 413,
                params: [{
                  name: "src",
                  description: "<p>src path or url for image</p>\n",
                  type: "String"
                }, {
                  name: "alt",
                  description: "<p>alternate text to be used if image does not load</p>\n",
                  type: "String",
                  optional: !0
                }, {
                  name: "successCallback",
                  description: "<p>callback to be called once image data is loaded</p>\n",
                  type: "Function",
                  optional: !0
                }],
                return: {
                  description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                  type: "p5.Element"
                }
              }, {
                line: 429,
                params: [{
                  name: "src",
                  description: "",
                  type: "String"
                }, {
                  name: "successCallback",
                  description: "",
                  type: "Function"
                }],
                return: {
                  description: "",
                  type: "Object|p5.Element"
                }
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 462,
              description: "<p>Creates an &lt;a&gt;&lt;/a&gt; element in the DOM for including a hyperlink.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createA",
              params: [{
                name: "href",
                description: "<p>url of page to link to</p>\n",
                type: "String"
              }, {
                name: "html",
                description: "<p>inner html of link element to display</p>\n",
                type: "String"
              }, {
                name: "target",
                description: "<p>target where new link should open,\n                            could be _blank, _self, _parent, _top.</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\ncreateA('http://p5js.org/', 'this is a link');\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 487,
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 489,
              description: "<p>Creates a slider &lt;input&gt;&lt;/input&gt; element in the DOM.\nUse .size() to set the display length of the slider.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createSlider",
              params: [{
                name: "min",
                description: "<p>minimum value of the slider</p>\n",
                type: "Number"
              }, {
                name: "max",
                description: "<p>maximum value of the slider</p>\n",
                type: "Number"
              }, {
                name: "value",
                description: "<p>default value of the slider</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "step",
                description: "<p>step size for each tick of the slider (if step is set to 0, the slider will move continuously from the minimum to the maximum value)</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div><code>\nvar slider;\nfunction setup() {\n  slider = createSlider(0, 255, 100);\n  slider.position(10, 10);\n  slider.style('width', '80px');\n}\n\nfunction draw() {\n  var val = slider.value();\n  background(val);\n}\n</code></div>\n\n<div><code>\nvar slider;\nfunction setup() {\n  colorMode(HSB);\n  slider = createSlider(0, 360, 60, 40);\n  slider.position(10, 10);\n  slider.style('width', '80px');\n}\n\nfunction draw() {\n  var val = slider.value();\n  background(val, 100, 100, 1);\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 546,
              description: "<p>Creates a &lt;button&gt;&lt;/button&gt; element in the DOM.\nUse .size() to set the display size of the button.\nUse .mousePressed() to specify behavior on press.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createButton",
              params: [{
                name: "label",
                description: "<p>label displayed on the button</p>\n",
                type: "String"
              }, {
                name: "value",
                description: "<p>value of the button</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\nvar button;\nfunction setup() {\n  createCanvas(100, 100);\n  background(0);\n  button = createButton('click me');\n  button.position(19, 19);\n  button.mousePressed(changeBG);\n}\n\nfunction changeBG() {\n  var val = random(255);\n  background(val);\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 582,
              description: "<p>Creates a checkbox &lt;input&gt;&lt;/input&gt; element in the DOM.\nCalling .checked() on a checkbox returns if it is checked or not</p>\n",
              itemtype: "method",
              name: "createCheckbox",
              params: [{
                name: "label",
                description: "<p>label displayed after checkbox</p>\n",
                type: "String",
                optional: !0
              }, {
                name: "value",
                description: "<p>value of the checkbox; checked is true, unchecked is false</p>\n",
                type: "Boolean",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\nvar checkbox;\n\nfunction setup() {\n  checkbox = createCheckbox('label', false);\n  checkbox.changed(myCheckedEvent);\n}\n\nfunction myCheckedEvent() {\n  if (this.checked()) {\n    console.log('Checking!');\n  } else {\n    console.log('Unchecking!');\n  }\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 650,
              description: '<p>Creates a dropdown menu &lt;select&gt;&lt;/select&gt; element in the DOM.\nIt also helps to assign select-box methods to <a href="#/p5.Element">p5.Element</a> when selecting existing select box</p>\n',
              itemtype: "method",
              name: "createSelect",
              return: {
                description: "",
                type: "p5.Element"
              },
              example: ["\n<div><code>\nvar sel;\n\nfunction setup() {\n  textAlign(CENTER);\n  background(200);\n  sel = createSelect();\n  sel.position(10, 10);\n  sel.option('pear');\n  sel.option('kiwi');\n  sel.option('grape');\n  sel.changed(mySelectEvent);\n}\n\nfunction mySelectEvent() {\n  var item = sel.value();\n  background(200);\n  text('it is a' + item + '!', 50, 50);\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 650,
                params: [{
                  name: "multiple",
                  description: "<p>true if dropdown should support multiple selections</p>\n",
                  type: "Boolean",
                  optional: !0
                }],
                return: {
                  description: "",
                  type: "p5.Element"
                }
              }, {
                line: 678,
                params: [{
                  name: "existing",
                  description: "<p>DOM select element</p>\n",
                  type: "Object"
                }],
                return: {
                  description: "",
                  type: "p5.Element"
                }
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 754,
              description: "<p>Creates a radio button &lt;input&gt;&lt;/input&gt; element in the DOM.\nThe .option() method can be used to set options for the radio after it is\ncreated. The .value() method will return the currently selected option.</p>\n",
              itemtype: "method",
              name: "createRadio",
              params: [{
                name: "divId",
                description: "<p>the id and name of the created div and input field respectively</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div><code>\nvar radio;\n\nfunction setup() {\n  radio = createRadio();\n  radio.option('black');\n  radio.option('white');\n  radio.option('gray');\n  radio.style('width', '60px');\n  textAlign(CENTER);\n  fill(255, 0, 0);\n}\n\nfunction draw() {\n  var val = radio.value();\n  background(val);\n  text(val, width / 2, height / 2);\n}\n</code></div>\n<div><code>\nvar radio;\n\nfunction setup() {\n  radio = createRadio();\n  radio.option('apple', 1);\n  radio.option('bread', 2);\n  radio.option('juice', 3);\n  radio.style('width', '60px');\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  background(200);\n  var val = radio.value();\n  if (val) {\n    text('item cost is $' + val, width / 2, height / 2);\n  }\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 892,
              description: "<p>Creates a colorPicker element in the DOM for color input.\nThe .value() method will return a hex string (#rrggbb) of the color.\nThe .color() method will return a p5.Color object with the current chosen color.</p>\n",
              itemtype: "method",
              name: "createColorPicker",
              params: [{
                name: "value",
                description: "<p>default color of element</p>\n",
                type: "String|p5.Color",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div>\n<code>\nvar inp1, inp2;\nfunction setup() {\n  createCanvas(100, 100);\n  background('grey');\n  inp1 = createColorPicker('#ff0000');\n  inp2 = createColorPicker(color('yellow'));\n  inp1.input(setShade1);\n  inp2.input(setShade2);\n  setMidShade();\n}\n\nfunction setMidShade() {\n  // Finding a shade between the two\n  var commonShade = lerpColor(inp1.color(), inp2.color(), 0.5);\n  fill(commonShade);\n  rect(20, 20, 60, 60);\n}\n\nfunction setShade1() {\n  setMidShade();\n  console.log('You are choosing shade 1 to be : ', this.value());\n}\nfunction setShade2() {\n  setMidShade();\n  console.log('You are choosing shade 2 to be : ', this.value());\n}\n</code>\n</div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 966,
              description: '<p>Creates an &lt;input&gt;&lt;/input&gt; element in the DOM for text input.\nUse .<a href="#/p5.Element/size">size()</a> to set the display length of the box.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n',
              itemtype: "method",
              name: "createInput",
              params: [{
                name: "value",
                description: "<p>default value of the input box</p>\n",
                type: "String",
                optional: !0
              }, {
                name: "type",
                description: "<p>type of text, ie text, password etc. Defaults to text</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\nfunction setup() {\n  var inp = createInput('');\n  inp.input(myInputEvent);\n}\n\nfunction myInputEvent() {\n  console.log('you are typing: ', this.value());\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 996,
              description: "<p>Creates an &lt;input&gt;&lt;/input&gt; element in the DOM of type &#39;file&#39;.\nThis allows users to select local files for use in a sketch.</p>\n",
              itemtype: "method",
              name: "createFileInput",
              params: [{
                name: "callback",
                description: "<p>callback function for when a file loaded</p>\n",
                type: "Function",
                optional: !0
              }, {
                name: "multiple",
                description: "<p>optional to allow multiple files selected</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created DOM element',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\nvar input;\nvar img;\n\nfunction setup() {\n  input = createFileInput(handleFile);\n  input.position(0, 0);\n}\n\nfunction draw() {\n  if (img) {\n    image(img, 0, 0, width, height);\n  }\n}\n\nfunction handleFile(file) {\n  print(file);\n  if (file.type === 'image') {\n    img = createImg(file.data);\n    img.hide();\n  }\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1066,
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1108,
              description: "<p>Creates an HTML5 &lt;video&gt; element in the DOM for simple playback\nof audio/video. Shown by default, can be hidden with .<a href=\"#/p5.Element/hide\">hide()</a>\nand drawn into canvas using video(). Appends to the container\nnode if one is specified, otherwise appends to body. The first parameter\ncan be either a single string path to a video file, or an array of string\npaths to different formats of the same video. This is useful for ensuring\nthat your video can play across different browsers, as each supports\ndifferent formats. See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this\npage</a> for further information about supported formats.</p>\n",
              itemtype: "method",
              name: "createVideo",
              params: [{
                name: "src",
                description: "<p>path to a video file, or array of paths for\n                            supporting different browsers</p>\n",
                type: "String|String[]"
              }, {
                name: "callback",
                description: "<p>callback function to be called upon\n                            &#39;canplaythrough&#39; event fire, that is, when the\n                            browser can play the media, and estimates that\n                            enough data has been loaded to play the media\n                            up to its end without having to stop for\n                            further buffering of content</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: 'pointer to video <a href="#/p5.Element">p5.Element</a>',
                type: "p5.MediaElement"
              },
              example: ["\n<div><code>\nvar vid;\nfunction setup() {\n  vid = createVideo(['small.mp4', 'small.ogv', 'small.webm'], vidLoad);\n}\n\n// This function is called when the video loads\nfunction vidLoad() {\n  vid.play();\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1147,
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1149,
              description: "<p>Creates a hidden HTML5 &lt;audio&gt; element in the DOM for simple audio\nplayback. Appends to the container node if one is specified,\notherwise appends to body. The first parameter\ncan be either a single string path to a audio file, or an array of string\npaths to different formats of the same audio. This is useful for ensuring\nthat your audio can play across different browsers, as each supports\ndifferent formats. See <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Supported_media_formats'>this\npage for further information about supported formats</a>.</p>\n",
              itemtype: "method",
              name: "createAudio",
              params: [{
                name: "src",
                description: "<p>path to an audio file, or array of paths\n                            for supporting different browsers</p>\n",
                type: "String|String[]",
                optional: !0
              }, {
                name: "callback",
                description: "<p>callback function to be called upon\n                            &#39;canplaythrough&#39; event fire, that is, when the\n                            browser can play the media, and estimates that\n                            enough data has been loaded to play the media\n                            up to its end without having to stop for\n                            further buffering of content</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: 'pointer to audio <a href="#/p5.Element">p5.Element</a>',
                type: "p5.MediaElement"
              },
              example: ["\n<div><code>\nvar ele;\nfunction setup() {\n  ele = createAudio('assets/beat.mp3');\n\n  // here we set the element to autoplay\n  // The element will play as soon\n  // as it is able to do so.\n  ele.autoplay(true);\n}\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1187,
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1189,
              itemtype: "property",
              name: "VIDEO",
              type: "String",
              final: 1,
              category: ["Constants"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1195,
              itemtype: "property",
              name: "AUDIO",
              type: "String",
              final: 1,
              category: ["Constants"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1232,
              description: "<p>Creates a new HTML5 &lt;video&gt; element that contains the audio/video\nfeed from a webcam. The element is separate from the canvas and is\ndisplayed by default. The element can be hidden using .<a href=\"#/p5.Element/hide\">hide()</a>. The feed\ncan be drawn onto the canvas using <a href=\"#/p5/image\">image()</a>. The loadedmetadata property can\nbe used to detect when the element has fully loaded (see second example).</p>\n<p>More specific properties of the feed can be passing in a Constraints object.\nSee the\n<a href='http://w3c.github.io/mediacapture-main/getusermedia.html#media-track-constraints'> W3C\nspec</a> for possible properties. Note that not all of these are supported\nby all browsers.</p>\n<p>Security note: A new browser security specification requires that getUserMedia,\nwhich is behind <a href=\"#/p5/createCapture\">createCapture()</a>, only works when you&#39;re running the code locally,\nor on HTTPS. Learn more <a href='http://stackoverflow.com/questions/34197653/getusermedia-in-chrome-47-without-using-https'>here</a>\nand <a href='https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia'>here</a>.</p>",
              itemtype: "method",
              name: "createCapture",
              params: [{
                name: "type",
                description: "<p>type of capture, either VIDEO or\n                                  AUDIO if none specified, default both,\n                                  or a Constraints object</p>\n",
                type: "String|Constant|Object"
              }, {
                name: "callback",
                description: "<p>function to be called once\n                                  stream has loaded</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: 'capture video <a href="#/p5.Element">p5.Element</a>',
                type: "p5.Element"
              },
              example: ["\n<div class='norender notest'><code>\nvar capture;\n\nfunction setup() {\n  createCanvas(480, 480);\n  capture = createCapture(VIDEO);\n  capture.hide();\n}\n\nfunction draw() {\n  image(capture, 0, 0, width, width * capture.height / capture.width);\n  filter(INVERT);\n}\n</code></div>\n<div class='norender notest'><code>\nfunction setup() {\n  createCanvas(480, 120);\n  var constraints = {\n    video: {\n      mandatory: {\n        minWidth: 1280,\n        minHeight: 720\n      },\n      optional: [{ maxFrameRate: 10 }]\n    },\n    audio: true\n  };\n  createCapture(constraints, function(stream) {\n    console.log(stream);\n  });\n}\n</code></div>\n<code><div class='norender notest'>\nvar capture;\n\nfunction setup() {\n  createCanvas(640, 480);\n  capture = createCapture(VIDEO);\n}\nfunction draw() {\n  background(0);\n  if (capture.loadedmetadata) {\n    var c = capture.get(0, 0, 100, 100);\n    image(c, 0, 0);\n  }\n}"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1368,
              description: "<p>Creates element with given tag in the DOM with given content.\nAppends to the container node if one is specified, otherwise\nappends to body.</p>\n",
              itemtype: "method",
              name: "createElement",
              params: [{
                name: "tag",
                description: "<p>tag for the new element</p>\n",
                type: "String"
              }, {
                name: "content",
                description: "<p>html content to be inserted into the element</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: 'pointer to <a href="#/p5.Element">p5.Element</a> holding created node',
                type: "p5.Element"
              },
              example: ["\n<div class='norender'><code>\ncreateElement('h2', 'im an h2 p5.element!');\n</code></div>"],
              class: "p5",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1394,
              description: "<p>Adds specified class to the element.</p>\n",
              itemtype: "method",
              name: "addClass",
              params: [{
                name: "class",
                description: "<p>name of class to add</p>\n",
                type: "String"
              }],
              chainable: 1,
              example: ["\n <div class='norender'><code>\n var div = createDiv('div');\n div.addClass('myClass');\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1421,
              description: "<p>Removes specified class from the element.</p>\n",
              itemtype: "method",
              name: "removeClass",
              params: [{
                name: "class",
                description: "<p>name of class to remove</p>\n",
                type: "String"
              }],
              chainable: 1,
              example: ["\n <div class='norender'><code>\n // In this example, a class is set when the div is created\n // and removed when mouse is pressed. This could link up\n // with a CSS style rule to toggle style properties.\nvar div;\nfunction setup() {\n   div = createDiv('div');\n   div.addClass('myClass');\n }\nfunction mousePressed() {\n   div.removeClass('myClass');\n }\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1453,
              description: '<p>Attaches the element  as a child to the parent specified.\n Accepts either a string ID, DOM node, or <a href="#/p5.Element">p5.Element</a>.\n If no argument is specified, an array of children DOM nodes is returned.</p>\n',
              itemtype: "method",
              name: "child",
              return: {
                description: "an array of child nodes",
                type: "Node[]"
              },
              example: ["\n <div class='norender'><code>\n var div0 = createDiv('this is the parent');\n var div1 = createDiv('this is the child');\n div0.child(div1); // use p5.Element\n </code></div>\n <div class='norender'><code>\n var div0 = createDiv('this is the parent');\n var div1 = createDiv('this is the child');\n div1.id('apples');\n div0.child('apples'); // use id\n </code></div>\n <div class='norender notest'><code>\n // this example assumes there is a div already on the page\n // with id \"myChildDiv\"\n var div0 = createDiv('this is the parent');\n var elt = document.getElementById('myChildDiv');\n div0.child(elt); // use element from page\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 1453,
                params: [],
                return: {
                  description: "an array of child nodes",
                  type: "Node[]"
                }
              }, {
                line: 1481,
                params: [{
                  name: "child",
                  description: '<p>the ID, DOM node, or <a href="#/p5.Element">p5.Element</a>\n                        to add to the current element</p>\n',
                  type: "String|p5.Element",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1503,
              description: "<p>Centers a p5 Element either vertically, horizontally,\nor both, relative to its parent or according to\nthe body if the Element has no parent. If no argument is passed\nthe Element is aligned both vertically and horizontally.</p>\n",
              itemtype: "method",
              name: "center",
              params: [{
                name: "align",
                description: "<p>passing &#39;vertical&#39;, &#39;horizontal&#39; aligns element accordingly</p>\n",
                type: "String",
                optional: !0
              }],
              chainable: 1,
              example: ["\n<div><code>\nfunction setup() {\n  var div = createDiv('').size(10, 10);\n  div.style('background-color', 'orange');\n  div.center();\n}\n</code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1557,
              description: "<p>If an argument is given, sets the inner HTML of the element,\n replacing any existing html. If true is included as a second\n argument, html is appended instead of replacing existing html.\n If no arguments are given, returns\n the inner HTML of the element.</p>\n",
              itemtype: "method",
              name: "html",
              return: {
                description: "the inner HTML of the element",
                type: "String"
              },
              example: ["\n <div class='norender'><code>\n var div = createDiv('').size(100, 100);\n div.html('hi');\n </code></div>\n <div class='norender'><code>\n var div = createDiv('Hello ').size(100, 100);\n div.html('World', true);\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 1557,
                params: [],
                return: {
                  description: "the inner HTML of the element",
                  type: "String"
                }
              }, {
                line: 1578,
                params: [{
                  name: "html",
                  description: "<p>the HTML to be placed inside the element</p>\n",
                  type: "String",
                  optional: !0
                }, {
                  name: "append",
                  description: "<p>whether to append HTML to existing</p>\n",
                  type: "Boolean",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1596,
              description: "<p>Sets the position of the element relative to (0, 0) of the\n window. Essentially, sets position:absolute and left and top\n properties of style. If no arguments given returns the x and y position\n of the element in an object.</p>\n",
              itemtype: "method",
              name: "position",
              return: {
                description: "the x and y position of the element in an object",
                type: "Object"
              },
              example: ["\n <div><code class='norender'>\n function setup() {\n   var cnv = createCanvas(100, 100);\n   // positions canvas 50px to the right and 100px\n   // below upper left corner of the window\n   cnv.position(50, 100);\n }\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 1596,
                params: [],
                return: {
                  description: "the x and y position of the element in an object",
                  type: "Object"
                }
              }, {
                line: 1615,
                params: [{
                  name: "x",
                  description: "<p>x-position relative to upper left of window</p>\n",
                  type: "Number",
                  optional: !0
                }, {
                  name: "y",
                  description: "<p>y-position relative to upper left of window</p>\n",
                  type: "Number",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1690,
              description: "<p>Sets the given style (css) property (1st arg) of the element with the\ngiven value (2nd arg). If a single argument is given, .style()\nreturns the value of the given property; however, if the single argument\nis given in css syntax (&#39;text-align:center&#39;), .style() sets the css\nappropriatly. .style() also handles 2d and 3d css transforms. If\nthe 1st arg is &#39;rotate&#39;, &#39;translate&#39;, or &#39;position&#39;, the following arguments\naccept Numbers as values. (&#39;translate&#39;, 10, 100, 50);</p>\n",
              itemtype: "method",
              name: "style",
              return: {
                description: "value of property",
                type: "String"
              },
              example: ["\n<div><code class='norender'>\nvar myDiv = createDiv('I like pandas.');\nmyDiv.style('font-size', '18px');\nmyDiv.style('color', '#ff0000');\n</code></div>\n<div><code class='norender'>\nvar col = color(25, 23, 200, 50);\nvar button = createButton('button');\nbutton.style('background-color', col);\nbutton.position(10, 10);\n</code></div>\n<div><code class='norender'>\nvar myDiv = createDiv('I like lizards.');\nmyDiv.style('position', 20, 20);\nmyDiv.style('rotate', 45);\n</code></div>\n<div><code class='norender'>\nvar myDiv;\nfunction setup() {\n  background(200);\n  myDiv = createDiv('I like gray.');\n  myDiv.position(20, 20);\n}\n\nfunction draw() {\n  myDiv.style('font-size', mouseX + 'px');\n}\n</code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 1690,
                params: [{
                  name: "property",
                  description: "<p>property to be set</p>\n",
                  type: "String"
                }],
                return: {
                  description: "value of property",
                  type: "String"
                }
              }, {
                line: 1732,
                params: [{
                  name: "property",
                  description: "",
                  type: "String"
                }, {
                  name: "value",
                  description: "<p>value to assign to property (only String|Number for rotate/translate)</p>\n",
                  type: "String|Number|p5.Color"
                }, {
                  name: "value2",
                  description: "<p>position can take a 2nd value</p>\n",
                  type: "String|Number|p5.Color",
                  optional: !0
                }, {
                  name: "value3",
                  description: "<p>translate can take a 2nd &amp; 3rd value</p>\n",
                  type: "String|Number|p5.Color",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1791,
              description: "<p>Adds a new attribute or changes the value of an existing attribute\n on the specified element. If no value is specified, returns the\n value of the given attribute, or null if attribute is not set.</p>\n",
              itemtype: "method",
              name: "attribute",
              return: {
                description: "value of attribute",
                type: "String"
              },
              example: ["\n <div class='norender'><code>\n var myDiv = createDiv('I like pandas.');\n myDiv.attribute('align', 'center');\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 1791,
                params: [],
                return: {
                  description: "value of attribute",
                  type: "String"
                }
              }, {
                line: 1806,
                params: [{
                  name: "attr",
                  description: "<p>attribute to set</p>\n",
                  type: "String"
                }, {
                  name: "value",
                  description: "<p>value to assign to attribute</p>\n",
                  type: "String"
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1835,
              description: "<p>Removes an attribute on the specified element.</p>\n",
              itemtype: "method",
              name: "removeAttribute",
              params: [{
                name: "attr",
                description: "<p>attribute to remove</p>\n",
                type: "String"
              }],
              chainable: 1,
              example: ["\n <div><code>\n var button;\n var checkbox;\nfunction setup() {\n   checkbox = createCheckbox('enable', true);\n   checkbox.changed(enableButton);\n   button = createButton('button');\n   button.position(10, 10);\n }\nfunction enableButton() {\n   if (this.checked()) {\n     // Re-enable the button\n     button.removeAttribute('disabled');\n   } else {\n     // Disable the button\n     button.attribute('disabled', '');\n   }\n }\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1880,
              description: "<p>Either returns the value of the element if no arguments\ngiven, or sets the value of the element.</p>\n",
              itemtype: "method",
              name: "value",
              return: {
                description: "value of the element",
                type: "String|Number"
              },
              example: ["\n<div class='norender'><code>\n// gets the value\nvar inp;\nfunction setup() {\n  inp = createInput('');\n}\n\nfunction mousePressed() {\n  print(inp.value());\n}\n</code></div>\n<div class='norender'><code>\n// sets the value\nvar inp;\nfunction setup() {\n  inp = createInput('myValue');\n}\n\nfunction mousePressed() {\n  inp.value('myValue');\n}\n</code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 1880,
                params: [],
                return: {
                  description: "value of the element",
                  type: "String|Number"
                }
              }, {
                line: 1910,
                params: [{
                  name: "value",
                  description: "",
                  type: "String|Number"
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1926,
              description: "<p>Shows the current element. Essentially, setting display:block for the style.</p>\n",
              itemtype: "method",
              name: "show",
              chainable: 1,
              example: ["\n <div class='norender'><code>\n var div = createDiv('div');\n div.style('display', 'none');\n div.show(); // turns display to block\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1944,
              description: "<p>Hides the current element. Essentially, setting display:none for the style.</p>\n",
              itemtype: "method",
              name: "hide",
              chainable: 1,
              example: ["\n<div class='norender'><code>\nvar div = createDiv('this is a div');\ndiv.hide();\n</code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 1960,
              description: "<p>Sets the width and height of the element. AUTO can be used to\n only adjust one dimension. If no arguments given returns the width and height\n of the element in an object.</p>\n",
              itemtype: "method",
              name: "size",
              return: {
                description: "the width and height of the element in an object",
                type: "Object"
              },
              example: ["\n <div class='norender'><code>\n var div = createDiv('this is a div');\n div.size(100, 100);\n </code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 1960,
                params: [],
                return: {
                  description: "the width and height of the element in an object",
                  type: "Object"
                }
              }, {
                line: 1974,
                params: [{
                  name: "w",
                  description: "<p>width of the element, either AUTO, or a number</p>\n",
                  type: "Number|Constant"
                }, {
                  name: "h",
                  description: "<p>height of the element, either AUTO, or a number</p>\n",
                  type: "Number|Constant",
                  optional: !0
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2038,
              description: "<p>Removes the element and deregisters all listeners.</p>\n",
              itemtype: "method",
              name: "remove",
              example: ["\n<div class='norender'><code>\nvar myDiv = createDiv('this is some text');\nmyDiv.remove();\n</code></div>"],
              class: "p5.Element",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2086,
              description: "<p>Path to the media element source.</p>\n",
              itemtype: "property",
              name: "src",
              return: {
                description: "src",
                type: "String"
              },
              example: ["\n<div><code>\nvar ele;\n\nfunction setup() {\n  background(250);\n\n  //p5.MediaElement objects are usually created\n  //by calling the createAudio(), createVideo(),\n  //and createCapture() functions.\n\n  //In this example we create\n  //a new p5.MediaElement via createAudio().\n  ele = createAudio('assets/beat.mp3');\n\n  //We'll set up our example so that\n  //when you click on the text,\n  //an alert box displays the MediaElement's\n  //src field.\n  textAlign(CENTER);\n  text('Click Me!', width / 2, height / 2);\n}\n\nfunction mouseClicked() {\n  //here we test if the mouse is over the\n  //canvas element when it's clicked\n  if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n    //Show our p5.MediaElement's src field\n    alert(ele.src);\n  }\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2152,
              description: "<p>Play an HTML5 media element.</p>\n",
              itemtype: "method",
              name: "play",
              chainable: 1,
              example: ["\n<div><code>\nvar ele;\n\nfunction setup() {\n  //p5.MediaElement objects are usually created\n  //by calling the createAudio(), createVideo(),\n  //and createCapture() functions.\n\n  //In this example we create\n  //a new p5.MediaElement via createAudio().\n  ele = createAudio('assets/beat.mp3');\n\n  background(250);\n  textAlign(CENTER);\n  text('Click to Play!', width / 2, height / 2);\n}\n\nfunction mouseClicked() {\n  //here we test if the mouse is over the\n  //canvas element when it's clicked\n  if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n    //Here we call the play() function on\n    //the p5.MediaElement we created above.\n    //This will start the audio sample.\n    ele.play();\n\n    background(200);\n    text('You clicked Play!', width / 2, height / 2);\n  }\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2213,
              description: "<p>Stops an HTML5 media element (sets current time to zero).</p>\n",
              itemtype: "method",
              name: "stop",
              chainable: 1,
              example: ["\n<div><code>\n//This example both starts\n//and stops a sound sample\n//when the user clicks the canvas\n\n//We will store the p5.MediaElement\n//object in here\nvar ele;\n\n//while our audio is playing,\n//this will be set to true\nvar sampleIsPlaying = false;\n\nfunction setup() {\n  //Here we create a p5.MediaElement object\n  //using the createAudio() function.\n  ele = createAudio('assets/beat.mp3');\n  background(200);\n  textAlign(CENTER);\n  text('Click to play!', width / 2, height / 2);\n}\n\nfunction mouseClicked() {\n  //here we test if the mouse is over the\n  //canvas element when it's clicked\n  if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n    background(200);\n\n    if (sampleIsPlaying) {\n      //if the sample is currently playing\n      //calling the stop() function on\n      //our p5.MediaElement will stop\n      //it and reset its current\n      //time to 0 (i.e. it will start\n      //at the beginning the next time\n      //you play it)\n      ele.stop();\n\n      sampleIsPlaying = false;\n      text('Click to play!', width / 2, height / 2);\n    } else {\n      //loop our sound element until we\n      //call ele.stop() on it.\n      ele.loop();\n\n      sampleIsPlaying = true;\n      text('Click to stop!', width / 2, height / 2);\n    }\n  }\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2277,
              description: "<p>Pauses an HTML5 media element.</p>\n",
              itemtype: "method",
              name: "pause",
              chainable: 1,
              example: ["\n<div><code>\n//This example both starts\n//and pauses a sound sample\n//when the user clicks the canvas\n\n//We will store the p5.MediaElement\n//object in here\nvar ele;\n\n//while our audio is playing,\n//this will be set to true\nvar sampleIsPlaying = false;\n\nfunction setup() {\n  //Here we create a p5.MediaElement object\n  //using the createAudio() function.\n  ele = createAudio('assets/lucky_dragons.mp3');\n  background(200);\n  textAlign(CENTER);\n  text('Click to play!', width / 2, height / 2);\n}\n\nfunction mouseClicked() {\n  //here we test if the mouse is over the\n  //canvas element when it's clicked\n  if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n    background(200);\n\n    if (sampleIsPlaying) {\n      //Calling pause() on our\n      //p5.MediaElement will stop it\n      //playing, but when we call the\n      //loop() or play() functions\n      //the sample will start from\n      //where we paused it.\n      ele.pause();\n\n      sampleIsPlaying = false;\n      text('Click to resume!', width / 2, height / 2);\n    } else {\n      //loop our sound element until we\n      //call ele.pause() on it.\n      ele.loop();\n\n      sampleIsPlaying = true;\n      text('Click to pause!', width / 2, height / 2);\n    }\n  }\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2339,
              description: "<p>Set &#39;loop&#39; to true for an HTML5 media element, and starts playing.</p>\n",
              itemtype: "method",
              name: "loop",
              chainable: 1,
              example: ["\n<div><code>\n//Clicking the canvas will loop\n//the audio sample until the user\n//clicks again to stop it\n\n//We will store the p5.MediaElement\n//object in here\nvar ele;\n\n//while our audio is playing,\n//this will be set to true\nvar sampleIsLooping = false;\n\nfunction setup() {\n  //Here we create a p5.MediaElement object\n  //using the createAudio() function.\n  ele = createAudio('assets/lucky_dragons.mp3');\n  background(200);\n  textAlign(CENTER);\n  text('Click to loop!', width / 2, height / 2);\n}\n\nfunction mouseClicked() {\n  //here we test if the mouse is over the\n  //canvas element when it's clicked\n  if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n    background(200);\n\n    if (!sampleIsLooping) {\n      //loop our sound element until we\n      //call ele.stop() on it.\n      ele.loop();\n\n      sampleIsLooping = true;\n      text('Click to stop!', width / 2, height / 2);\n    } else {\n      ele.stop();\n\n      sampleIsLooping = false;\n      text('Click to loop!', width / 2, height / 2);\n    }\n  }\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2395,
              description: "<p>Set &#39;loop&#39; to false for an HTML5 media element. Element will stop\nwhen it reaches the end.</p>\n",
              itemtype: "method",
              name: "noLoop",
              chainable: 1,
              example: ["\n<div><code>\n//This example both starts\n//and stops loop of sound sample\n//when the user clicks the canvas\n\n//We will store the p5.MediaElement\n//object in here\nvar ele;\n//while our audio is playing,\n//this will be set to true\nvar sampleIsPlaying = false;\n\nfunction setup() {\n  //Here we create a p5.MediaElement object\n  //using the createAudio() function.\n  ele = createAudio('assets/beat.mp3');\n  background(200);\n  textAlign(CENTER);\n  text('Click to play!', width / 2, height / 2);\n}\n\nfunction mouseClicked() {\n  //here we test if the mouse is over the\n  //canvas element when it's clicked\n  if (mouseX >= 0 && mouseX <= width && mouseY >= 0 && mouseY <= height) {\n    background(200);\n\n    if (sampleIsPlaying) {\n      ele.noLoop();\n      text('No more Loops!', width / 2, height / 2);\n    } else {\n      ele.loop();\n      sampleIsPlaying = true;\n      text('Click to stop looping!', width / 2, height / 2);\n    }\n  }\n}\n</code></div>\n"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2447,
              description: "<p>Set HTML5 media element to autoplay or not.</p>\n",
              itemtype: "method",
              name: "autoplay",
              params: [{
                name: "autoplay",
                description: "<p>whether the element should autoplay</p>\n",
                type: "Boolean"
              }],
              chainable: 1,
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2459,
              description: "<p>Sets volume for this HTML5 media element. If no argument is given,\nreturns the current volume.</p>\n",
              itemtype: "method",
              name: "volume",
              return: {
                description: "current volume",
                type: "Number"
              },
              example: ["\n<div><code>\nvar ele;\nfunction setup() {\n  // p5.MediaElement objects are usually created\n  // by calling the createAudio(), createVideo(),\n  // and createCapture() functions.\n  // In this example we create\n  // a new p5.MediaElement via createAudio().\n  ele = createAudio('assets/lucky_dragons.mp3');\n  background(250);\n  textAlign(CENTER);\n  text('Click to Play!', width / 2, height / 2);\n}\nfunction mouseClicked() {\n  // Here we call the volume() function\n  // on the sound element to set its volume\n  // Volume must be between 0.0 and 1.0\n  ele.volume(0.2);\n  ele.play();\n  background(200);\n  text('You clicked Play!', width / 2, height / 2);\n}\n</code></div>\n<div><code>\nvar audio;\nvar counter = 0;\n\nfunction loaded() {\n  audio.play();\n}\n\nfunction setup() {\n  audio = createAudio('assets/lucky_dragons.mp3', loaded);\n  textAlign(CENTER);\n}\n\nfunction draw() {\n  if (counter === 0) {\n    background(0, 255, 0);\n    text('volume(0.9)', width / 2, height / 2);\n  } else if (counter === 1) {\n    background(255, 255, 0);\n    text('volume(0.5)', width / 2, height / 2);\n  } else if (counter === 2) {\n    background(255, 0, 0);\n    text('volume(0.1)', width / 2, height / 2);\n  }\n}\n\nfunction mousePressed() {\n  counter++;\n  if (counter === 0) {\n    audio.volume(0.9);\n  } else if (counter === 1) {\n    audio.volume(0.5);\n  } else if (counter === 2) {\n    audio.volume(0.1);\n  } else {\n    counter = 0;\n    audio.volume(0.9);\n  }\n}\n</code>\n</div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 2459,
                params: [],
                return: {
                  description: "current volume",
                  type: "Number"
                }
              }, {
                line: 2532,
                params: [{
                  name: "val",
                  description: "<p>volume between 0.0 and 1.0</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2545,
              description: "<p>If no arguments are given, returns the current playback speed of the\nelement. The speed parameter sets the speed where 2.0 will play the\nelement twice as fast, 0.5 will play at half the speed, and -1 will play\nthe element in normal speed in reverse.(Note that not all browsers support\nbackward playback and even if they do, playback might not be smooth.)</p>\n",
              itemtype: "method",
              name: "speed",
              return: {
                description: "current playback speed of the element",
                type: "Number"
              },
              example: ["\n<div class='norender notest'><code>\n//Clicking the canvas will loop\n//the audio sample until the user\n//clicks again to stop it\n\n//We will store the p5.MediaElement\n//object in here\nvar ele;\nvar button;\n\nfunction setup() {\n  createCanvas(710, 400);\n  //Here we create a p5.MediaElement object\n  //using the createAudio() function.\n  ele = createAudio('assets/beat.mp3');\n  ele.loop();\n  background(200);\n\n  button = createButton('2x speed');\n  button.position(100, 68);\n  button.mousePressed(twice_speed);\n\n  button = createButton('half speed');\n  button.position(200, 68);\n  button.mousePressed(half_speed);\n\n  button = createButton('reverse play');\n  button.position(300, 68);\n  button.mousePressed(reverse_speed);\n\n  button = createButton('STOP');\n  button.position(400, 68);\n  button.mousePressed(stop_song);\n\n  button = createButton('PLAY!');\n  button.position(500, 68);\n  button.mousePressed(play_speed);\n}\n\nfunction twice_speed() {\n  ele.speed(2);\n}\n\nfunction half_speed() {\n  ele.speed(0.5);\n}\n\nfunction reverse_speed() {\n  ele.speed(-1);\n}\n\nfunction stop_song() {\n  ele.stop();\n}\n\nfunction play_speed() {\n  ele.play();\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 2545,
                params: [],
                return: {
                  description: "current playback speed of the element",
                  type: "Number"
                }
              }, {
                line: 2616,
                params: [{
                  name: "speed",
                  description: "<p>speed multiplier for element playback</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2633,
              description: "<p>If no arguments are given, returns the current time of the element.\nIf an argument is given the current time of the element is set to it.</p>\n",
              itemtype: "method",
              name: "time",
              return: {
                description: "current time (in seconds)",
                type: "Number"
              },
              example: ["\n<div><code>\nvar ele;\nvar beginning = true;\nfunction setup() {\n  //p5.MediaElement objects are usually created\n  //by calling the createAudio(), createVideo(),\n  //and createCapture() functions.\n\n  //In this example we create\n  //a new p5.MediaElement via createAudio().\n  ele = createAudio('assets/lucky_dragons.mp3');\n  background(250);\n  textAlign(CENTER);\n  text('start at beginning', width / 2, height / 2);\n}\n\n// this function fires with click anywhere\nfunction mousePressed() {\n  if (beginning === true) {\n    // here we start the sound at the beginning\n    // time(0) is not necessary here\n    // as this produces the same result as\n    // play()\n    ele.play().time(0);\n    background(200);\n    text('jump 2 sec in', width / 2, height / 2);\n    beginning = false;\n  } else {\n    // here we jump 2 seconds into the sound\n    ele.play().time(2);\n    background(250);\n    text('start at beginning', width / 2, height / 2);\n    beginning = true;\n  }\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom",
              overloads: [{
                line: 2633,
                params: [],
                return: {
                  description: "current time (in seconds)",
                  type: "Number"
                }
              }, {
                line: 2678,
                params: [{
                  name: "time",
                  description: "<p>time to jump to (in seconds)</p>\n",
                  type: "Number"
                }],
                chainable: 1
              }]
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2692,
              description: "<p>Returns the duration of the HTML5 media element.</p>\n",
              itemtype: "method",
              name: "duration",
              return: {
                description: "duration",
                type: "Number"
              },
              example: ["\n<div><code>\nvar ele;\nfunction setup() {\n  //p5.MediaElement objects are usually created\n  //by calling the createAudio(), createVideo(),\n  //and createCapture() functions.\n  //In this example we create\n  //a new p5.MediaElement via createAudio().\n  ele = createAudio('assets/doorbell.mp3');\n  background(250);\n  textAlign(CENTER);\n  text('Click to know the duration!', 10, 25, 70, 80);\n}\nfunction mouseClicked() {\n  ele.play();\n  background(200);\n  //ele.duration dislpays the duration\n  text(ele.duration() + ' seconds', width / 2, height / 2);\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2833,
              description: "<p>Schedule an event to be called when the audio or video\nelement reaches the end. If the element is looping,\nthis will not be called. The element is passed in\nas the argument to the onended callback.</p>\n",
              itemtype: "method",
              name: "onended",
              params: [{
                name: "callback",
                description: "<p>function to call when the\n                            soundfile has ended. The\n                            media element will be passed\n                            in as the argument to the\n                            callback.</p>\n",
                type: "Function"
              }],
              chainable: 1,
              example: ["\n<div><code>\nfunction setup() {\n  var audioEl = createAudio('assets/beat.mp3');\n  audioEl.showControls();\n  audioEl.onended(sayDone);\n}\n\nfunction sayDone(elt) {\n  alert('done playing ' + elt.src);\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2864,
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2866,
              description: "<p>Send the audio output of this element to a specified audioNode or\np5.sound object. If no element is provided, connects to p5&#39;s master\noutput. That connection is established when this method is first called.\nAll connections are removed by the .disconnect() method.</p>\n<p>This method is meant to be used with the p5.sound.js addon library.</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "audioNode",
                description: "<p>AudioNode from the Web Audio API,\nor an object from the p5.sound library</p>\n",
                type: "AudioNode|Object"
              }],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2915,
              description: "<p>Disconnect all Web Audio routing, including to master output.\nThis is useful if you want to re-route the output through\naudio effects, for example.</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2930,
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2932,
              description: "<p>Show the default MediaElement controls, as determined by the web browser.</p>\n",
              itemtype: "method",
              name: "showControls",
              example: ["\n<div><code>\nvar ele;\nfunction setup() {\n  //p5.MediaElement objects are usually created\n  //by calling the createAudio(), createVideo(),\n  //and createCapture() functions.\n  //In this example we create\n  //a new p5.MediaElement via createAudio()\n  ele = createAudio('assets/lucky_dragons.mp3');\n  background(200);\n  textAlign(CENTER);\n  text('Click to Show Controls!', 10, 25, 70, 80);\n}\nfunction mousePressed() {\n  ele.showControls();\n  background(200);\n  text('Controls Shown', width / 2, height / 2);\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2963,
              description: "<p>Hide the default mediaElement controls.</p>\n",
              itemtype: "method",
              name: "hideControls",
              example: ["\n<div><code>\nvar ele;\nfunction setup() {\n  //p5.MediaElement objects are usually created\n  //by calling the createAudio(), createVideo(),\n  //and createCapture() functions.\n  //In this example we create\n  //a new p5.MediaElement via createAudio()\n  ele = createAudio('assets/lucky_dragons.mp3');\n  ele.showControls();\n  background(200);\n  textAlign(CENTER);\n  text('Click to hide Controls!', 10, 25, 70, 80);\n}\nfunction mousePressed() {\n  ele.hideControls();\n  background(200);\n  text('Controls hidden', width / 2, height / 2);\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 2992,
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3003,
              description: "<p>Schedule events to trigger every time a MediaElement\n(audio/video) reaches a playback cue point.</p>\n<p>Accepts a callback function, a time (in seconds) at which to trigger\nthe callback, and an optional parameter for the callback.</p>\n<p>Time will be passed as the first parameter to the callback function,\nand param will be the second parameter.</p>\n",
              itemtype: "method",
              name: "addCue",
              params: [{
                name: "time",
                description: "<p>Time in seconds, relative to this media\n                            element&#39;s playback. For example, to trigger\n                            an event every time playback reaches two\n                            seconds, pass in the number 2. This will be\n                            passed as the first parameter to\n                            the callback function.</p>\n",
                type: "Number"
              }, {
                name: "callback",
                description: "<p>Name of a function that will be\n                            called at the given time. The callback will\n                            receive time and (optionally) param as its\n                            two parameters.</p>\n",
                type: "Function"
              }, {
                name: "value",
                description: "<p>An object to be passed as the\n                            second parameter to the\n                            callback function.</p>\n",
                type: "Object",
                optional: !0
              }],
              return: {
                description: "id ID of this cue,\n                    useful for removeCue(id)",
                type: "Number"
              },
              example: ["\n<div><code>\n//\n//\nfunction setup() {\n  noCanvas();\n\n  var audioEl = createAudio('assets/beat.mp3');\n  audioEl.showControls();\n\n  // schedule three calls to changeBackground\n  audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\n  audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\n  audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\n  audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\n  audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\n  audioEl.addCue(5.0, changeBackground, color(255, 255, 0));\n}\n\nfunction changeBackground(val) {\n  background(val);\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3067,
              description: "<p>Remove a callback based on its ID. The ID is returned by the\naddCue method.</p>\n",
              itemtype: "method",
              name: "removeCue",
              params: [{
                name: "id",
                description: "<p>ID of the cue, as returned by addCue</p>\n",
                type: "Number"
              }],
              example: ["\n<div><code>\nvar audioEl, id1, id2;\nfunction setup() {\n  background(255, 255, 255);\n  audioEl = createAudio('assets/beat.mp3');\n  audioEl.showControls();\n  // schedule five calls to changeBackground\n  id1 = audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\n  audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\n  audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\n  audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\n  id2 = audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\n  text('Click to remove first and last Cue!', 10, 25, 70, 80);\n}\nfunction mousePressed() {\n  audioEl.removeCue(id1);\n  audioEl.removeCue(id2);\n}\nfunction changeBackground(val) {\n  background(val);\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3109,
              description: "<p>Remove all of the callbacks that had originally been scheduled\nvia the addCue method.</p>\n",
              itemtype: "method",
              name: "clearCues",
              params: [{
                name: "id",
                description: "<p>ID of the cue, as returned by addCue</p>\n",
                type: "Number"
              }],
              example: ["\n<div><code>\nvar audioEl;\nfunction setup() {\n  background(255, 255, 255);\n  audioEl = createAudio('assets/beat.mp3');\n  //Show the default MediaElement controls, as determined by the web browser\n  audioEl.showControls();\n  // schedule calls to changeBackground\n  background(200);\n  text('Click to change Cue!', 10, 25, 70, 80);\n  audioEl.addCue(0.5, changeBackground, color(255, 0, 0));\n  audioEl.addCue(1.0, changeBackground, color(0, 255, 0));\n  audioEl.addCue(2.5, changeBackground, color(0, 0, 255));\n  audioEl.addCue(3.0, changeBackground, color(0, 255, 255));\n  audioEl.addCue(4.2, changeBackground, color(255, 255, 0));\n}\nfunction mousePressed() {\n  // here we clear the scheduled callbacks\n  audioEl.clearCues();\n  // then we add some more callbacks\n  audioEl.addCue(1, changeBackground, color(2, 2, 2));\n  audioEl.addCue(3, changeBackground, color(255, 255, 0));\n}\nfunction changeBackground(val) {\n  background(val);\n}\n</code></div>"],
              class: "p5.MediaElement",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3179,
              description: "<p>Underlying File object. All normal File methods can be called on this.</p>\n",
              itemtype: "property",
              name: "file",
              class: "p5.File",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3191,
              description: "<p>File type (image, text, etc.)</p>\n",
              itemtype: "property",
              name: "type",
              class: "p5.File",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3197,
              description: "<p>File subtype (usually the file extension jpg, png, xml, etc.)</p>\n",
              itemtype: "property",
              name: "subtype",
              class: "p5.File",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3203,
              description: "<p>File name</p>\n",
              itemtype: "property",
              name: "name",
              class: "p5.File",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3209,
              description: "<p>File size</p>\n",
              itemtype: "property",
              name: "size",
              class: "p5.File",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.dom.js",
              line: 3216,
              description: "<p>URL string containing image data.</p>\n",
              itemtype: "property",
              name: "data",
              class: "p5.File",
              module: "p5.dom",
              submodule: "p5.dom"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 46,
              description: '<p>p5.sound \n<a href="https://p5js.org/reference/#/libraries/p5.sound">https://p5js.org/reference/#/libraries/p5.sound</a></p>\n<p>From the Processing Foundation and contributors\n<a href="https://github.com/processing/p5.js-sound/graphs/contributors">https://github.com/processing/p5.js-sound/graphs/contributors</a></p>\n<p>MIT License (MIT)\n<a href="https://github.com/processing/p5.js-sound/blob/master/LICENSE">https://github.com/processing/p5.js-sound/blob/master/LICENSE</a></p>\n<p>Some of the many audio libraries &amp; resources that inspire p5.sound:</p>\n<ul>\n<li>TONE.js (c) Yotam Mann. Licensed under The MIT License (MIT). <a href="https://github.com/TONEnoTONE/Tone.js">https://github.com/TONEnoTONE/Tone.js</a></li>\n<li>buzz.js (c) Jay Salvat. Licensed under The MIT License (MIT). <a href="http://buzz.jaysalvat.com/">http://buzz.jaysalvat.com/</a></li>\n<li>Boris Smus Web Audio API book, 2013. Licensed under the Apache License <a href="http://www.apache.org/licenses/LICENSE-2.0">http://www.apache.org/licenses/LICENSE-2.0</a></li>\n<li>wavesurfer.js <a href="https://github.com/katspaugh/wavesurfer.js">https://github.com/katspaugh/wavesurfer.js</a></li>\n<li>Web Audio Components by Jordan Santell <a href="https://github.com/web-audio-components">https://github.com/web-audio-components</a></li>\n<li><p>Wilm Thoben&#39;s Sound library for Processing <a href="https://github.com/processing/processing/tree/master/java/libraries/sound">https://github.com/processing/processing/tree/master/java/libraries/sound</a></p>\n<p>Web Audio API: <a href="http://w3.org/TR/webaudio/">http://w3.org/TR/webaudio/</a></p>\n</li>\n</ul>\n',
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 214,
              description: "<p>Determine which filetypes are supported (inspired by buzz.js)\nThe audio element (el) will only be used to test browser support for various audio formats</p>\n",
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 364,
              description: "<p>Returns the Audio Context for this sketch. Useful for users\nwho would like to dig deeper into the <a target='_blank' href=\n'http://webaudio.github.io/web-audio-api/'>Web Audio API\n</a>.</p>\n\n<p>Some browsers require users to startAudioContext\nwith a user gesture, such as touchStarted in the example below.</p>",
              itemtype: "method",
              name: "getAudioContext",
              return: {
                description: "AudioContext for this sketch",
                type: "Object"
              },
              example: ["\n<div><code>\n function draw() {\n   background(255);\n   textAlign(CENTER);\n\n   if (getAudioContext().state !== 'running') {\n     text('click to start audio', width/2, height/2);\n   } else {\n     text('audio is enabled', width/2, height/2);\n   }\n }\n\n function touchStarted() {\n   if (getAudioContext().state !== 'running') {\n     getAudioContext().resume();\n   }\n   var synth = new p5.MonoSynth();\n   synth.play('A4', 0.5, 0, 0.2);\n }\n\n</div></code>"],
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 401,
              description: '<p>It is a good practice to give users control over starting audio playback.\nThis practice is enforced by Google Chrome&#39;s autoplay policy as of r70\n(<a href="https://goo.gl/7K7WLu">info</a>), iOS Safari, and other browsers.\n</p>\n\n<p>\nuserStartAudio() starts the <a href="https://developer.mozilla.org/en-US/docs/Web/API/AudioContext"\ntarget="_blank" title="Audio Context @ MDN">Audio Context</a> on a user gesture. It utilizes\nthe <a href="https://github.com/tambien/StartAudioContext">StartAudioContext</a> library by\nYotam Mann (MIT Licence, 2016). Read more at <a href="https://github.com/tambien/StartAudioContext">https://github.com/tambien/StartAudioContext</a>.\n</p>\n\n<p>Starting the audio context on a user gesture can be as simple as <code>userStartAudio()</code>.\nOptional parameters let you decide on a specific element that will start the audio context,\nand/or call a function once the audio context is started.</p>',
              params: [{
                name: "element(s)",
                description: "<p>This argument can be an Element,\n                              Selector String, NodeList, p5.Element,\n                              jQuery Element, or an Array of any of those.</p>\n",
                type: "Element|Array",
                optional: !0
              }, {
                name: "callback",
                description: "<p>Callback to invoke when the AudioContext has started</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: "Returns a Promise which is resolved when\n                                     the AudioContext state is 'running'",
                type: "Promise"
              },
              itemtype: "method",
              name: "userStartAudio",
              example: ["\n<div><code>\nfunction setup() {\n  var myDiv = createDiv('click to start audio');\n  myDiv.position(0, 0);\n\n  var mySynth = new p5.MonoSynth();\n \n  // This won't play until the context has started\n  mySynth.play('A6');\n\n  // Start the audio context on a click/touch event\n  userStartAudio().then(function() {\n     myDiv.remove();\n   });\n}\n</code></div>"],
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 458,
              description: "<p>Master contains AudioContext and the master sound output.</p>\n",
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 492,
              description: "<p>Returns a number representing the master amplitude (volume) for sound\nin this sketch.</p>\n",
              itemtype: "method",
              name: "getMasterVolume",
              return: {
                description: "Master amplitude (volume) for sound in this sketch.\n                 Should be between 0.0 (silence) and 1.0.",
                type: "Number"
              },
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 503,
              description: "<p>Scale the output of all sound in this sketch</p>\nScaled between 0.0 (silence) and 1.0 (full volume).\n1.0 is the maximum amplitude of a digital sound, so multiplying\nby greater than 1.0 may cause digital distortion. To\nfade, provide a <code>rampTime</code> parameter. For more\ncomplex fades, see the Envelope class.\n\nAlternately, you can pass in a signal source such as an\noscillator to modulate the amplitude with an audio signal.\n\n<p><b>How This Works</b>: When you load the p5.sound module, it\ncreates a single instance of p5sound. All sound objects in this\nmodule output to p5sound before reaching your computer&#39;s output.\nSo if you change the amplitude of p5sound, it impacts all of the\nsound in this module.</p>\n\n<p>If no value is provided, returns a Web Audio API Gain Node</p>",
              itemtype: "method",
              name: "masterVolume",
              params: [{
                name: "volume",
                description: "<p>Volume (amplitude) between 0.0\n                                   and 1.0 or modulating signal/oscillator</p>\n",
                type: "Number|Object"
              }, {
                name: "rampTime",
                description: "<p>Fade for t seconds</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>Schedule this event to happen at\n                               t seconds in the future</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 545,
              description: "<p><code>p5.soundOut</code> is the p5.sound master output. It sends output to\nthe destination of this window&#39;s web audio context. It contains\nWeb Audio API nodes including a dyanmicsCompressor (<code>.limiter</code>),\nand Gain Nodes for <code>.input</code> and <code>.output</code>.</p>\n",
              itemtype: "property",
              name: "soundOut",
              type: "Object",
              class: "p5.sound",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 570,
              class: "p5",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 573,
              description: "<p>Returns a number representing the sample rate, in samples per second,\nof all sound objects in this audio context. It is determined by the\nsampling rate of your operating system&#39;s sound card, and it is not\ncurrently possile to change.\nIt is often 44100, or twice the range of human hearing.</p>\n",
              itemtype: "method",
              name: "sampleRate",
              return: {
                description: "samplerate samples per second",
                type: "Number"
              },
              class: "p5",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 586,
              description: "<p>Returns the closest MIDI note value for\na given frequency.</p>\n",
              itemtype: "method",
              name: "freqToMidi",
              params: [{
                name: "frequency",
                description: "<p>A freqeuncy, for example, the &quot;A&quot;\n                           above Middle C is 440Hz</p>\n",
                type: "Number"
              }],
              return: {
                description: "MIDI note value",
                type: "Number"
              },
              class: "p5",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 600,
              description: "<p>Returns the frequency value of a MIDI note value.\nGeneral MIDI treats notes as integers where middle C\nis 60, C# is 61, D is 62 etc. Useful for generating\nmusical frequencies with oscillators.</p>\n",
              itemtype: "method",
              name: "midiToFreq",
              params: [{
                name: "midiNote",
                description: "<p>The number of a MIDI note</p>\n",
                type: "Number"
              }],
              return: {
                description: "Frequency value of the given MIDI note",
                type: "Number"
              },
              example: ["\n<div><code>\nvar notes = [60, 64, 67, 72];\nvar i = 0;\n\nfunction setup() {\n  osc = new p5.Oscillator('Triangle');\n  osc.start();\n  frameRate(1);\n}\n\nfunction draw() {\n  var freq = midiToFreq(notes[i]);\n  osc.freq(freq);\n  i++;\n  if (i >= notes.length){\n    i = 0;\n  }\n}\n</code></div>"],
              class: "p5",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 662,
              description: '<p>List the SoundFile formats that you will include. LoadSound\nwill search your directory for these extensions, and will pick\na format that is compatable with the client&#39;s web browser.\n<a href="http://media.io/">Here</a> is a free online file\nconverter.</p>\n',
              itemtype: "method",
              name: "soundFormats",
              params: [{
                name: "formats",
                description: "<p>i.e. &#39;mp3&#39;, &#39;wav&#39;, &#39;ogg&#39;</p>\n",
                type: "String",
                optional: !0,
                multiple: !0
              }],
              example: ["\n<div><code>\nfunction preload() {\n  // set the global sound formats\n  soundFormats('mp3', 'ogg');\n\n  // load either beatbox.mp3, or .ogg, depending on browser\n  mySound = loadSound('assets/beatbox.mp3');\n}\n\nfunction setup() {\n  mySound.play();\n}\n</code></div>"],
              class: "p5",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 775,
              description: "<p>Used by Osc and Envelope to chain signal math</p>\n",
              class: "p5",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1121,
              description: '<p>loadSound() returns a new p5.SoundFile from a specified\npath. If called during preload(), the p5.SoundFile will be ready\nto play in time for setup() and draw(). If called outside of\npreload, the p5.SoundFile will not be ready immediately, so\nloadSound accepts a callback as the second parameter. Using a\n<a href="https://github.com/processing/p5.js/wiki/Local-server">\nlocal server</a> is recommended when loading external files.</p>\n',
              itemtype: "method",
              name: "loadSound",
              params: [{
                name: "path",
                description: "<p>Path to the sound file, or an array with\n                                  paths to soundfiles in multiple formats\n                                  i.e. [&#39;sound.ogg&#39;, &#39;sound.mp3&#39;].\n                                  Alternately, accepts an object: either\n                                  from the HTML5 File API, or a p5.File.</p>\n",
                type: "String|Array"
              }, {
                name: "successCallback",
                description: "<p>Name of a function to call once file loads</p>\n",
                type: "Function",
                optional: !0
              }, {
                name: "errorCallback",
                description: "<p>Name of a function to call if there is\n                                    an error loading the file.</p>\n",
                type: "Function",
                optional: !0
              }, {
                name: "whileLoading",
                description: "<p>Name of a function to call while file is loading.\n                               This function will receive the percentage loaded\n                               so far, from 0.0 to 1.0.</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: "Returns a p5.SoundFile",
                type: "SoundFile"
              },
              example: ["\n<div><code>\nfunction preload() {\n mySound = loadSound('assets/doorbell.mp3');\n}\n\nfunction setup() {\n  mySound.setVolume(0.1);\n  mySound.play();\n}\n</code></div>"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1277,
              description: "<p>Returns true if the sound file finished loading successfully.</p>\n",
              itemtype: "method",
              name: "isLoaded",
              return: {
                description: "",
                type: "Boolean"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1290,
              description: "<p>Play the p5.SoundFile</p>\n",
              itemtype: "method",
              name: "play",
              params: [{
                name: "startTime",
                description: "<p>(optional) schedule playback to start (in seconds from now).</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "rate",
                description: "<p>(optional) playback rate</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "amp",
                description: "<p>(optional) amplitude (volume)\n                                    of playback</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "cueStart",
                description: "<p>(optional) cue start time in seconds</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "duration",
                description: "<p>(optional) duration of playback in seconds</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1395,
              description: "<p>p5.SoundFile has two play modes: <code>restart</code> and\n<code>sustain</code>. Play Mode determines what happens to a\np5.SoundFile if it is triggered while in the middle of playback.\nIn sustain mode, playback will continue simultaneous to the\nnew playback. In restart mode, play() will stop playback\nand start over. With untilDone, a sound will play only if it&#39;s\nnot already playing. Sustain is the default mode.</p>\n",
              itemtype: "method",
              name: "playMode",
              params: [{
                name: "str",
                description: "<p>&#39;restart&#39; or &#39;sustain&#39; or &#39;untilDone&#39;</p>\n",
                type: "String"
              }],
              example: ["\n<div><code>\nvar mySound;\nfunction preload(){\n  mySound = loadSound('assets/Damscray_DancingTiger.mp3');\n}\nfunction mouseClicked() {\n  mySound.playMode('sustain');\n  mySound.play();\n}\nfunction keyPressed() {\n  mySound.playMode('restart');\n  mySound.play();\n}\n\n </code></div>"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1439,
              description: "<p>Pauses a file that is currently playing. If the file is not\nplaying, then nothing will happen.</p>\n<p>After pausing, .play() will resume from the paused\nposition.\nIf p5.SoundFile had been set to loop before it was paused,\nit will continue to loop after it is unpaused with .play().</p>\n",
              itemtype: "method",
              name: "pause",
              params: [{
                name: "startTime",
                description: "<p>(optional) schedule event to occur\n                             seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\nvar soundFile;\n\nfunction preload() {\n  soundFormats('ogg', 'mp3');\n  soundFile = loadSound('assets/Damscray_-_Dancing_Tiger_02.mp3');\n}\nfunction setup() {\n  background(0, 255, 0);\n  soundFile.setVolume(0.1);\n  soundFile.loop();\n}\nfunction keyTyped() {\n  if (key == 'p') {\n    soundFile.pause();\n    background(255, 0, 0);\n  }\n}\n\nfunction keyReleased() {\n  if (key == 'p') {\n    soundFile.play();\n    background(0, 255, 0);\n  }\n}\n</code>\n</div>"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1495,
              description: "<p>Loop the p5.SoundFile. Accepts optional parameters to set the\nplayback rate, playback volume, loopStart, loopEnd.</p>\n",
              itemtype: "method",
              name: "loop",
              params: [{
                name: "startTime",
                description: "<p>(optional) schedule event to occur\n                            seconds from now</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "rate",
                description: "<p>(optional) playback rate</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "amp",
                description: "<p>(optional) playback volume</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "cueLoopStart",
                description: "<p>(optional) startTime in seconds</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "duration",
                description: "<p>(optional) loop duration in seconds</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1511,
              description: "<p>Set a p5.SoundFile&#39;s looping flag to true or false. If the sound\nis currently playing, this change will take effect when it\nreaches the end of the current playback.</p>\n",
              itemtype: "method",
              name: "setLoop",
              params: [{
                name: "Boolean",
                description: "<p>set looping to true or false</p>\n",
                type: "Boolean"
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1532,
              description: "<p>Returns &#39;true&#39; if a p5.SoundFile is currently looping and playing, &#39;false&#39; if not.</p>\n",
              itemtype: "method",
              name: "isLooping",
              return: {
                description: "",
                type: "Boolean"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1547,
              description: "<p>Returns true if a p5.SoundFile is playing, false if not (i.e.\npaused or stopped).</p>\n",
              itemtype: "method",
              name: "isPlaying",
              return: {
                description: "",
                type: "Boolean"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1557,
              description: "<p>Returns true if a p5.SoundFile is paused, false if not (i.e.\nplaying or stopped).</p>\n",
              itemtype: "method",
              name: "isPaused",
              return: {
                description: "",
                type: "Boolean"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1567,
              description: "<p>Stop soundfile playback.</p>\n",
              itemtype: "method",
              name: "stop",
              params: [{
                name: "startTime",
                description: "<p>(optional) schedule event to occur\n                            in seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1613,
              description: "<p>Multiply the output volume (amplitude) of a sound file\nbetween 0.0 (silence) and 1.0 (full volume).\n1.0 is the maximum amplitude of a digital sound, so multiplying\nby greater than 1.0 may cause digital distortion. To\nfade, provide a <code>rampTime</code> parameter. For more\ncomplex fades, see the Envelope class.</p>\n<p>Alternately, you can pass in a signal source such as an\noscillator to modulate the amplitude with an audio signal.</p>\n",
              itemtype: "method",
              name: "setVolume",
              params: [{
                name: "volume",
                description: "<p>Volume (amplitude) between 0.0\n                                   and 1.0 or modulating signal/oscillator</p>\n",
                type: "Number|Object"
              }, {
                name: "rampTime",
                description: "<p>Fade for t seconds</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>Schedule this event to happen at\n                               t seconds in the future</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1654,
              description: "<p>Set the stereo panning of a p5.sound object to\na floating point number between -1.0 (left) and 1.0 (right).\nDefault is 0.0 (center).</p>\n",
              itemtype: "method",
              name: "pan",
              params: [{
                name: "panValue",
                description: "<p>Set the stereo panner</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                                seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\n\n var ball = {};\n var soundFile;\n\n function preload() {\n   soundFormats('ogg', 'mp3');\n   soundFile = loadSound('assets/beatbox.mp3');\n }\n\n function draw() {\n   background(0);\n   ball.x = constrain(mouseX, 0, width);\n   ellipse(ball.x, height/2, 20, 20)\n }\n\n function mousePressed(){\n   // map the ball's x location to a panning degree\n   // between -1.0 (left) and 1.0 (right)\n   var panning = map(ball.x, 0., width,-1.0, 1.0);\n   soundFile.pan(panning);\n   soundFile.play();\n }\n </div></code>"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1693,
              description: "<p>Returns the current stereo pan position (-1.0 to 1.0)</p>\n",
              itemtype: "method",
              name: "getPan",
              return: {
                description: "Returns the stereo pan setting of the Oscillator\n                         as a number between -1.0 (left) and 1.0 (right).\n                         0.0 is center and default.",
                type: "Number"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1704,
              description: "<p>Set the playback rate of a sound file. Will change the speed and the pitch.\nValues less than zero will reverse the audio buffer.</p>\n",
              itemtype: "method",
              name: "rate",
              params: [{
                name: "playbackRate",
                description: "<p>Set the playback rate. 1.0 is normal,\n                                   .5 is half-speed, 2.0 is twice as fast.\n                                   Values less than zero play backwards.</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\nvar song;\n\nfunction preload() {\n  song = loadSound('assets/Damscray_DancingTiger.mp3');\n}\n\nfunction setup() {\n  song.loop();\n}\n\nfunction draw() {\n  background(200);\n\n  // Set the rate to a range between 0.1 and 4\n  // Changing the rate also alters the pitch\n  var speed = map(mouseY, 0.1, height, 0, 2);\n  speed = constrain(speed, 0.01, 4);\n  song.rate(speed);\n\n  // Draw a circle to show what is going on\n  stroke(0);\n  fill(51, 100);\n  ellipse(mouseX, 100, 48, 48);\n}\n\n </code>\n </div>\n"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1777,
              description: "<p>Returns the duration of a sound file in seconds.</p>\n",
              itemtype: "method",
              name: "duration",
              return: {
                description: "The duration of the soundFile in seconds.",
                type: "Number"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1791,
              description: "<p>Return the current position of the p5.SoundFile playhead, in seconds.\nTime is relative to the normal buffer direction, so if <code>reverseBuffer</code>\nhas been called, currentTime will count backwards.</p>\n",
              itemtype: "method",
              name: "currentTime",
              return: {
                description: "currentTime of the soundFile in seconds.",
                type: "Number"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1802,
              description: "<p>Move the playhead of the song to a position, in seconds. Start timing\nand playback duration. If none are given, will reset the file to play\nentire duration from start to finish.</p>\n",
              itemtype: "method",
              name: "jump",
              params: [{
                name: "cueTime",
                description: "<p>cueTime of the soundFile in seconds.</p>\n",
                type: "Number"
              }, {
                name: "duration",
                description: "<p>duration in seconds.</p>\n",
                type: "Number"
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1825,
              description: "<p>Return the number of channels in a sound file.\nFor example, Mono = 1, Stereo = 2.</p>\n",
              itemtype: "method",
              name: "channels",
              return: {
                description: "[channels]",
                type: "Number"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1835,
              description: "<p>Return the sample rate of the sound file.</p>\n",
              itemtype: "method",
              name: "sampleRate",
              return: {
                description: "[sampleRate]",
                type: "Number"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1844,
              description: "<p>Return the number of samples in a sound file.\nEqual to sampleRate * duration.</p>\n",
              itemtype: "method",
              name: "frames",
              return: {
                description: "[sampleCount]",
                type: "Number"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1854,
              description: "<p>Returns an array of amplitude peaks in a p5.SoundFile that can be\nused to draw a static waveform. Scans through the p5.SoundFile&#39;s\naudio buffer to find the greatest amplitudes. Accepts one\nparameter, &#39;length&#39;, which determines size of the array.\nLarger arrays result in more precise waveform visualizations.</p>\n<p>Inspired by Wavesurfer.js.</p>\n",
              itemtype: "method",
              name: "getPeaks",
              params: [{
                name: "length",
                description: "<p>length is the size of the returned array.\n                         Larger length results in more precision.\n                         Defaults to 5*width of the browser window.</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "Array of peaks.",
                type: "Float32Array"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1906,
              description: "<p>Reverses the p5.SoundFile&#39;s buffer source.\nPlayback must be handled separately (see example).</p>\n",
              itemtype: "method",
              name: "reverseBuffer",
              example: ["\n<div><code>\nvar drum;\n\nfunction preload() {\n  drum = loadSound('assets/drum.mp3');\n}\n\nfunction setup() {\n  drum.reverseBuffer();\n  drum.play();\n}\n\n </code>\n </div>"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1946,
              description: "<p>Schedule an event to be called when the soundfile\nreaches the end of a buffer. If the soundfile is\nplaying through once, this will be called when it\nends. If it is looping, it will be called when\nstop is called.</p>\n",
              itemtype: "method",
              name: "onended",
              params: [{
                name: "callback",
                description: "<p>function to call when the\n                            soundfile has ended.</p>\n",
                type: "Function"
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 1999,
              description: "<p>Connects the output of a p5sound object to input of another\np5.sound object. For example, you may connect a p5.SoundFile to an\nFFT or an Effect. If no parameter is given, it will connect to\nthe master output. Most p5sound objects connect to the master\noutput when they are created.</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "object",
                description: "<p>Audio object that accepts an input</p>\n",
                type: "Object",
                optional: !0
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2020,
              description: "<p>Disconnects the output of this p5sound object.</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2030,
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2035,
              description: "<p>Reset the source for this SoundFile to a\nnew path (URL).</p>\n",
              itemtype: "method",
              name: "setPath",
              params: [{
                name: "path",
                description: "<p>path to audio file</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: "<p>Callback</p>\n",
                type: "Function"
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2048,
              description: "<p>Replace the current Audio Buffer with a new Buffer.</p>\n",
              itemtype: "method",
              name: "setBuffer",
              params: [{
                name: "buf",
                description: "<p>Array of Float32 Array(s). 2 Float32 Arrays\n                   will create a stereo source. 1 will create\n                   a mono source.</p>\n",
                type: "Array"
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2120,
              description: "<p>processPeaks returns an array of timestamps where it thinks there is a beat.</p>\n<p>This is an asynchronous function that processes the soundfile in an offline audio context,\nand sends the results to your callback function.</p>\n<p>The process involves running the soundfile through a lowpass filter, and finding all of the\npeaks above the initial threshold. If the total number of peaks are below the minimum number of peaks,\nit decreases the threshold and re-runs the analysis until either minPeaks or minThreshold are reached.</p>\n",
              itemtype: "method",
              name: "processPeaks",
              params: [{
                name: "callback",
                description: "<p>a function to call once this data is returned</p>\n",
                type: "Function"
              }, {
                name: "initThreshold",
                description: "<p>initial threshold defaults to 0.9</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "minThreshold",
                description: "<p>minimum threshold defaults to 0.22</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "minPeaks",
                description: "<p>minimum number of peaks defaults to 200</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "Array of timestamped peaks",
                type: "Array"
              },
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2313,
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2322,
              description: "<p>Schedule events to trigger every time a MediaElement\n(audio/video) reaches a playback cue point.</p>\n<p>Accepts a callback function, a time (in seconds) at which to trigger\nthe callback, and an optional parameter for the callback.</p>\n<p>Time will be passed as the first parameter to the callback function,\nand param will be the second parameter.</p>\n",
              itemtype: "method",
              name: "addCue",
              params: [{
                name: "time",
                description: "<p>Time in seconds, relative to this media\n                           element&#39;s playback. For example, to trigger\n                           an event every time playback reaches two\n                           seconds, pass in the number 2. This will be\n                           passed as the first parameter to\n                           the callback function.</p>\n",
                type: "Number"
              }, {
                name: "callback",
                description: "<p>Name of a function that will be\n                           called at the given time. The callback will\n                           receive time and (optionally) param as its\n                           two parameters.</p>\n",
                type: "Function"
              }, {
                name: "value",
                description: "<p>An object to be passed as the\n                           second parameter to the\n                           callback function.</p>\n",
                type: "Object",
                optional: !0
              }],
              return: {
                description: "id ID of this cue,\n                    useful for removeCue(id)",
                type: "Number"
              },
              example: ['\n<div><code>\nvar mySound;\nfunction preload() {\n  mySound = loadSound(\'assets/beat.mp3\');\n}\n\nfunction setup() {\n  background(0);\n  noStroke();\n  fill(255);\n  textAlign(CENTER);\n  text(\'click to play\', width/2, height/2);\n\n  // schedule calls to changeText\n  mySound.addCue(0.50, changeText, "hello" );\n  mySound.addCue(1.00, changeText, "p5" );\n  mySound.addCue(1.50, changeText, "what" );\n  mySound.addCue(2.00, changeText, "do" );\n  mySound.addCue(2.50, changeText, "you" );\n  mySound.addCue(3.00, changeText, "want" );\n  mySound.addCue(4.00, changeText, "to" );\n  mySound.addCue(5.00, changeText, "make" );\n  mySound.addCue(6.00, changeText, "?" );\n}\n\nfunction changeText(val) {\n  background(0);\n  text(val, width/2, height/2);\n}\n\nfunction mouseClicked() {\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    if (mySound.isPlaying() ) {\n      mySound.stop();\n    } else {\n      mySound.play();\n    }\n  }\n}\n</code></div>'],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2400,
              description: "<p>Remove a callback based on its ID. The ID is returned by the\naddCue method.</p>\n",
              itemtype: "method",
              name: "removeCue",
              params: [{
                name: "id",
                description: "<p>ID of the cue, as returned by addCue</p>\n",
                type: "Number"
              }],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2419,
              description: "<p>Remove all of the callbacks that had originally been scheduled\nvia the addCue method.</p>\n",
              itemtype: "method",
              name: "clearCues",
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2444,
              description: '<p>Save a p5.SoundFile as a .wav file. The browser will prompt the user\nto download the file to their device. To upload a file to a server, see\n<a href="/docs/reference/#/p5.SoundFile/getBlob">getBlob</a></p>\n',
              itemtype: "method",
              name: "save",
              params: [{
                name: "fileName",
                description: "<p>name of the resulting .wav file.</p>\n",
                type: "String",
                optional: !0
              }],
              example: ["\n <div><code>\n var inp, button, mySound;\n var fileName = 'cool';\n function preload() {\n   mySound = loadSound('assets/doorbell.mp3');\n }\n function setup() {\n   btn = createButton('click to save file');\n   btn.position(0, 0);\n   btn.mouseClicked(handleMouseClick);\n }\n\n function handleMouseClick() {\n   mySound.save(fileName);\n }\n</code></div>"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2473,
              description: '<p>This method is useful for sending a SoundFile to a server. It returns the\n.wav-encoded audio data as a &quot;<a target="_blank" title="Blob reference at\nMDN" href="https://developer.mozilla.org/en-US/docs/Web/API/Blob">Blob</a>&quot;.\nA Blob is a file-like data object that can be uploaded to a server\nwith an <a href="/docs/reference/#/p5/httpDo">http</a> request. We&#39;ll\nuse the <code>httpDo</code> options object to send a POST request with some\nspecific options: we encode the request as <code>multipart/form-data</code>,\nand attach the blob as one of the form values using <code>FormData</code>.</p>\n',
              itemtype: "method",
              name: "getBlob",
              return: {
                description: "A file-like data object",
                type: "Blob"
              },
              example: ["\n <div><code>\n\n function preload() {\n   mySound = loadSound('assets/doorbell.mp3');\n }\n\n function setup() {\n   noCanvas();\n   var soundBlob = mySound.getBlob();\n\n   // Now we can send the blob to a server...\n   var serverUrl = 'https://jsonplaceholder.typicode.com/posts';\n   var httpRequestOptions = {\n     method: 'POST',\n     body: new FormData().append('soundBlob', soundBlob),\n     headers: new Headers({\n       'Content-Type': 'multipart/form-data'\n     })\n   };\n   httpDo(serverUrl, httpRequestOptions);\n\n   // We can also create an `ObjectURL` pointing to the Blob\n   var blobUrl = URL.createObjectURL(soundBlob);\n\n   // The `<Audio>` Element accepts Object URL's\n   var htmlAudioElt = createAudio(blobUrl).showControls();\n\n   createDiv();\n\n   // The ObjectURL exists as long as this tab is open\n   var input = createInput(blobUrl);\n   input.attribute('readonly', true);\n   input.mouseClicked(function() { input.elt.select() });\n }\n\n</code></div>"],
              class: "p5.SoundFile",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2611,
              description: "<p>Connects to the p5sound instance (master output) by default.\nOptionally, you can pass in a specific source (i.e. a soundfile).</p>\n",
              itemtype: "method",
              name: "setInput",
              params: [{
                name: "snd",
                description: "<p>set the sound source\n                                     (optional, defaults to\n                                     master output)</p>\n",
                type: "SoundObject|undefined",
                optional: !0
              }, {
                name: "smoothing",
                description: "<p>a range between 0.0 and 1.0\n                                      to smooth amplitude readings</p>\n",
                type: "Number|undefined",
                optional: !0
              }],
              example: ["\n<div><code>\nfunction preload(){\n  sound1 = loadSound('assets/beat.mp3');\n  sound2 = loadSound('assets/drum.mp3');\n}\nfunction setup(){\n  amplitude = new p5.Amplitude();\n  sound1.play();\n  sound2.play();\n  amplitude.setInput(sound2);\n}\nfunction draw() {\n  background(0);\n  fill(255);\n  var level = amplitude.getLevel();\n  var size = map(level, 0, 1, 0, 200);\n  ellipse(width/2, height/2, size, size);\n}\nfunction mouseClicked(){\n  sound1.stop();\n  sound2.stop();\n}\n</code></div>"],
              class: "p5.Amplitude",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2718,
              description: "<p>Returns a single Amplitude reading at the moment it is called.\nFor continuous readings, run in the draw loop.</p>\n",
              itemtype: "method",
              name: "getLevel",
              params: [{
                name: "channel",
                description: "<p>Optionally return only channel 0 (left) or 1 (right)</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "Amplitude as a number between 0.0 and 1.0",
                type: "Number"
              },
              example: ["\n<div><code>\nfunction preload(){\n  sound = loadSound('assets/beat.mp3');\n}\nfunction setup() {\n  amplitude = new p5.Amplitude();\n  sound.play();\n}\nfunction draw() {\n  background(0);\n  fill(255);\n  var level = amplitude.getLevel();\n  var size = map(level, 0, 1, 0, 200);\n  ellipse(width/2, height/2, size, size);\n}\nfunction mouseClicked(){\n  sound.stop();\n}\n</code></div>"],
              class: "p5.Amplitude",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2759,
              description: "<p>Determines whether the results of Amplitude.process() will be\nNormalized. To normalize, Amplitude finds the difference the\nloudest reading it has processed and the maximum amplitude of\n1.0. Amplitude adds this difference to all values to produce\nresults that will reliably map between 0.0 and 1.0. However,\nif a louder moment occurs, the amount that Normalize adds to\nall the values will change. Accepts an optional boolean parameter\n(true or false). Normalizing is off by default.</p>\n",
              itemtype: "method",
              name: "toggleNormalize",
              params: [{
                name: "boolean",
                description: "<p>set normalize to true (1) or false (0)</p>\n",
                type: "Boolean",
                optional: !0
              }],
              class: "p5.Amplitude",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2779,
              description: "<p>Smooth Amplitude analysis by averaging with the last analysis\nframe. Off by default.</p>\n",
              itemtype: "method",
              name: "smooth",
              params: [{
                name: "set",
                description: "<p>smoothing from 0.0 &lt;= 1</p>\n",
                type: "Number"
              }],
              class: "p5.Amplitude",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2953,
              description: "<p>Set the input source for the FFT analysis. If no source is\nprovided, FFT will analyze all sound in the sketch.</p>\n",
              itemtype: "method",
              name: "setInput",
              params: [{
                name: "source",
                description: "<p>p5.sound object (or web audio API source node)</p>\n",
                type: "Object",
                optional: !0
              }],
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 2972,
              description: "<p>Returns an array of amplitude values (between -1.0 and +1.0) that represent\na snapshot of amplitude readings in a single buffer. Length will be\nequal to bins (defaults to 1024). Can be used to draw the waveform\nof a sound.</p>\n",
              itemtype: "method",
              name: "waveform",
              params: [{
                name: "bins",
                description: "<p>Must be a power of two between\n                          16 and 1024. Defaults to 1024.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "precision",
                description: "<p>If any value is provided, will return results\n                            in a Float32 Array which is more precise\n                            than a regular array.</p>\n",
                type: "String",
                optional: !0
              }],
              return: {
                description: "Array    Array of amplitude values (-1 to 1)\n                          over time. Array length = bins.",
                type: "Array"
              },
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3015,
              description: "<p>Returns an array of amplitude values (between 0 and 255)\nacross the frequency spectrum. Length is equal to FFT bins\n(1024 by default). The array indices correspond to frequencies\n(i.e. pitches), from the lowest to the highest that humans can\nhear. Each value represents amplitude at that slice of the\nfrequency spectrum. Must be called prior to using\n<code>getEnergy()</code>.</p>\n",
              itemtype: "method",
              name: "analyze",
              params: [{
                name: "bins",
                description: "<p>Must be a power of two between\n                           16 and 1024. Defaults to 1024.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "scale",
                description: "<p>If &quot;dB,&quot; returns decibel\n                           float measurements between\n                           -140 and 0 (max).\n                           Otherwise returns integers from 0-255.</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "spectrum    Array of energy (amplitude/volume)\n                            values across the frequency spectrum.\n                            Lowest energy (silence) = 0, highest\n                            possible is 255.",
                type: "Array"
              },
              example: ["\n<div><code>\nvar osc;\nvar fft;\n\nfunction setup(){\n  createCanvas(100,100);\n  osc = new p5.Oscillator();\n  osc.amp(0);\n  osc.start();\n  fft = new p5.FFT();\n}\n\nfunction draw(){\n  background(0);\n\n  var freq = map(mouseX, 0, 800, 20, 15000);\n  freq = constrain(freq, 1, 20000);\n  osc.freq(freq);\n\n  var spectrum = fft.analyze();\n  noStroke();\n  fill(0,255,0); // spectrum is green\n  for (var i = 0; i< spectrum.length; i++){\n    var x = map(i, 0, spectrum.length, 0, width);\n    var h = -height + map(spectrum[i], 0, 255, height, 0);\n    rect(x, height, width / spectrum.length, h );\n  }\n\n  stroke(255);\n  text('Freq: ' + round(freq)+'Hz', 10, 10);\n\n  isMouseOverCanvas();\n}\n\n// only play sound when mouse is over canvas\nfunction isMouseOverCanvas() {\n  var mX = mouseX, mY = mouseY;\n  if (mX > 0 && mX < width && mY < height && mY > 0) {\n    osc.amp(0.5, 0.2);\n  } else {\n    osc.amp(0, 0.2);\n  }\n}\n</code></div>\n\n"],
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3107,
              description: '<p>Returns the amount of energy (volume) at a specific\n<a href="https://en.wikipedia.org/wiki/Audio_frequency" target="_blank">\nfrequency</a>, or the average amount of energy between two\nfrequencies. Accepts Number(s) corresponding\nto frequency (in Hz), or a String corresponding to predefined\nfrequency ranges (&quot;bass&quot;, &quot;lowMid&quot;, &quot;mid&quot;, &quot;highMid&quot;, &quot;treble&quot;).\nReturns a range between 0 (no energy/volume at that frequency) and\n255 (maximum energy).\n<em>NOTE: analyze() must be called prior to getEnergy(). Analyze()\ntells the FFT to analyze frequency data, and getEnergy() uses\nthe results determine the value at a specific frequency or\nrange of frequencies.</em></p></p>\n',
              itemtype: "method",
              name: "getEnergy",
              params: [{
                name: "frequency1",
                description: "<p>Will return a value representing\n                              energy at this frequency. Alternately,\n                              the strings &quot;bass&quot;, &quot;lowMid&quot; &quot;mid&quot;,\n                              &quot;highMid&quot;, and &quot;treble&quot; will return\n                              predefined frequency ranges.</p>\n",
                type: "Number|String"
              }, {
                name: "frequency2",
                description: "<p>If a second frequency is given,\n                              will return average amount of\n                              energy that exists between the\n                              two frequencies.</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "Energy   Energy (volume/amplitude) from\n                            0 and 255.",
                type: "Number"
              },
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3189,
              description: '<p>Returns the\n<a href="http://en.wikipedia.org/wiki/Spectral_centroid" target="_blank">\nspectral centroid</a> of the input signal.\n<em>NOTE: analyze() must be called prior to getCentroid(). Analyze()\ntells the FFT to analyze frequency data, and getCentroid() uses\nthe results determine the spectral centroid.</em></p></p>\n',
              itemtype: "method",
              name: "getCentroid",
              return: {
                description: "Spectral Centroid Frequency   Frequency of the spectral centroid in Hz.",
                type: "Number"
              },
              example: ['\n<div><code>\n\n\nfunction setup(){\ncnv = createCanvas(100,100);\nsound = new p5.AudioIn();\nsound.start();\nfft = new p5.FFT();\nsound.connect(fft);\n}\n\n\nfunction draw(){\n\nvar centroidplot = 0.0;\nvar spectralCentroid = 0;\n\n\nbackground(0);\nstroke(0,255,0);\nvar spectrum = fft.analyze();\nfill(0,255,0); // spectrum is green\n\n//draw the spectrum\nfor (var i = 0; i< spectrum.length; i++){\n  var x = map(log(i), 0, log(spectrum.length), 0, width);\n  var h = map(spectrum[i], 0, 255, 0, height);\n  var rectangle_width = (log(i+1)-log(i))*(width/log(spectrum.length));\n  rect(x, height, rectangle_width, -h )\n}\n\nvar nyquist = 22050;\n\n// get the centroid\nspectralCentroid = fft.getCentroid();\n\n// the mean_freq_index calculation is for the display.\nvar mean_freq_index = spectralCentroid/(nyquist/spectrum.length);\n\ncentroidplot = map(log(mean_freq_index), 0, log(spectrum.length), 0, width);\n\n\nstroke(255,0,0); // the line showing where the centroid is will be red\n\nrect(centroidplot, 0, width / spectrum.length, height)\nnoStroke();\nfill(255,255,255);  // text is white\ntext("centroid: ", 10, 20);\ntext(round(spectralCentroid)+" Hz", 10, 40);\n}\n </code></div>'],
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3269,
              description: "<p>Smooth FFT analysis by averaging with the last analysis frame.</p>\n",
              itemtype: "method",
              name: "smooth",
              params: [{
                name: "smoothing",
                description: "<p>0.0 &lt; smoothing &lt; 1.0.\n                             Defaults to 0.8.</p>\n",
                type: "Number"
              }],
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3291,
              description: "<p>Returns an array of average amplitude values for a given number\nof frequency bands split equally. N defaults to 16.\n<em>NOTE: analyze() must be called prior to linAverages(). Analyze()\ntells the FFT to analyze frequency data, and linAverages() uses\nthe results to group them into a smaller set of averages.</em></p></p>\n",
              itemtype: "method",
              name: "linAverages",
              params: [{
                name: "N",
                description: "<p>Number of returned frequency groups</p>\n",
                type: "Number"
              }],
              return: {
                description: "linearAverages   Array of average amplitude values for each group",
                type: "Array"
              },
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3321,
              description: '<p>Returns an array of average amplitude values of the spectrum, for a given\nset of <a href="https://en.wikipedia.org/wiki/Octave_band" target="_blank">\nOctave Bands</a>\n<em>NOTE: analyze() must be called prior to logAverages(). Analyze()\ntells the FFT to analyze frequency data, and logAverages() uses\nthe results to group them into a smaller set of averages.</em></p></p>\n',
              itemtype: "method",
              name: "logAverages",
              params: [{
                name: "octaveBands",
                description: "<p>Array of Octave Bands objects for grouping</p>\n",
                type: "Array"
              }],
              return: {
                description: "logAverages    Array of average amplitude values for each group",
                type: "Array"
              },
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3351,
              description: '<p>Calculates and Returns the 1/N\n<a href="https://en.wikipedia.org/wiki/Octave_band" target="_blank">Octave Bands</a>\nN defaults to 3 and minimum central frequency to 15.625Hz.\n(1/3 Octave Bands ~= 31 Frequency Bands)\nSetting fCtr0 to a central value of a higher octave will ignore the lower bands\nand produce less frequency groups.</p>\n',
              itemtype: "method",
              name: "getOctaveBands",
              params: [{
                name: "N",
                description: "<p>Specifies the 1/N type of generated octave bands</p>\n",
                type: "Number"
              }, {
                name: "fCtr0",
                description: "<p>Minimum central frequency for the lowest band</p>\n",
                type: "Number"
              }],
              return: {
                description: "octaveBands   Array of octave band objects with their bounds",
                type: "Array"
              },
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3409,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3786,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3807,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 3866,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 4184,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 4356,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 4514,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 4555,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 4625,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 4813,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 4870,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5038,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5086,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5117,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5138,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5158,
              class: "p5.FFT",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5260,
              description: "<p>Fade to value, for smooth transitions</p>\n",
              itemtype: "method",
              name: "fade",
              params: [{
                name: "value",
                description: "<p>Value to set this signal</p>\n",
                type: "Number"
              }, {
                name: "secondsFromNow",
                description: "<p>Length of fade, in seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Signal",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5271,
              description: "<p>Connect a p5.sound object or Web Audio node to this\np5.Signal so that its amplitude values can be scaled.</p>\n",
              itemtype: "method",
              name: "setInput",
              params: [{
                name: "input",
                description: "",
                type: "Object"
              }],
              class: "p5.Signal",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5285,
              description: "<p>Add a constant value to this audio signal,\nand return the resulting audio signal. Does\nnot change the value of the original signal,\ninstead it returns a new p5.SignalAdd.</p>\n",
              itemtype: "method",
              name: "add",
              params: [{
                name: "number",
                description: "",
                type: "Number"
              }],
              return: {
                description: "object",
                type: "p5.Signal"
              },
              class: "p5.Signal",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5304,
              description: "<p>Multiply this signal by a constant value,\nand return the resulting audio signal. Does\nnot change the value of the original signal,\ninstead it returns a new p5.SignalMult.</p>\n",
              itemtype: "method",
              name: "mult",
              params: [{
                name: "number",
                description: "<p>to multiply</p>\n",
                type: "Number"
              }],
              return: {
                description: "object",
                type: "p5.Signal"
              },
              class: "p5.Signal",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5323,
              description: "<p>Scale this signal value to a given range,\nand return the result as an audio signal. Does\nnot change the value of the original signal,\ninstead it returns a new p5.SignalScale.</p>\n",
              itemtype: "method",
              name: "scale",
              params: [{
                name: "number",
                description: "<p>to multiply</p>\n",
                type: "Number"
              }, {
                name: "inMin",
                description: "<p>input range minumum</p>\n",
                type: "Number"
              }, {
                name: "inMax",
                description: "<p>input range maximum</p>\n",
                type: "Number"
              }, {
                name: "outMin",
                description: "<p>input range minumum</p>\n",
                type: "Number"
              }, {
                name: "outMax",
                description: "<p>input range maximum</p>\n",
                type: "Number"
              }],
              return: {
                description: "object",
                type: "p5.Signal"
              },
              class: "p5.Signal",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5457,
              description: "<p>Start an oscillator. Accepts an optional parameter to\ndetermine how long (in seconds from now) until the\noscillator starts.</p>\n",
              itemtype: "method",
              name: "start",
              params: [{
                name: "time",
                description: "<p>startTime in seconds from now.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "frequency",
                description: "<p>frequency in Hz.</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5497,
              description: "<p>Stop an oscillator. Accepts an optional parameter\nto determine how long (in seconds from now) until the\noscillator stops.</p>\n",
              itemtype: "method",
              name: "stop",
              params: [{
                name: "secondsFromNow",
                description: "<p>Time, in seconds from now.</p>\n",
                type: "Number"
              }],
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5513,
              description: "<p>Set the amplitude between 0 and 1.0. Or, pass in an object\nsuch as an oscillator to modulate amplitude with an audio signal.</p>\n",
              itemtype: "method",
              name: "amp",
              params: [{
                name: "vol",
                description: "<p>between 0 and 1.0\n                            or a modulating signal/oscillator</p>\n",
                type: "Number|Object"
              }, {
                name: "rampTime",
                description: "<p>create a fade that lasts rampTime</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "gain  If no value is provided,\n                            returns the Web Audio API\n                            AudioParam that controls\n                            this oscillator's\n                            gain/amplitude/volume)",
                type: "AudioParam"
              },
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5548,
              description: "<p>Set frequency of an oscillator to a value. Or, pass in an object\nsuch as an oscillator to modulate the frequency with an audio signal.</p>\n",
              itemtype: "method",
              name: "freq",
              params: [{
                name: "Frequency",
                description: "<p>Frequency in Hz\n                                      or modulating signal/oscillator</p>\n",
                type: "Number|Object"
              }, {
                name: "rampTime",
                description: "<p>Ramp time (in seconds)</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>Schedule this event to happen\n                                 at x seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "Frequency If no value is provided,\n                                returns the Web Audio API\n                                AudioParam that controls\n                                this oscillator's frequency",
                type: "AudioParam"
              },
              example: ["\n<div><code>\nvar osc = new p5.Oscillator(300);\nosc.start();\nosc.freq(40, 10);\n</code></div>"],
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5607,
              description: "<p>Set type to &#39;sine&#39;, &#39;triangle&#39;, &#39;sawtooth&#39; or &#39;square&#39;.</p>\n",
              itemtype: "method",
              name: "setType",
              params: [{
                name: "type",
                description: "<p>&#39;sine&#39;, &#39;triangle&#39;, &#39;sawtooth&#39; or &#39;square&#39;.</p>\n",
                type: "String"
              }],
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5619,
              description: "<p>Connect to a p5.sound / Web Audio object.</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "<p>A p5.sound or Web Audio object</p>\n",
                type: "Object"
              }],
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5636,
              description: "<p>Disconnect all outputs</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5653,
              description: "<p>Pan between Left (-1) and Right (1)</p>\n",
              itemtype: "method",
              name: "pan",
              params: [{
                name: "panning",
                description: "<p>Number between -1 and 1</p>\n",
                type: "Number"
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number"
              }],
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5685,
              description: "<p>Set the phase of an oscillator between 0.0 and 1.0.\nIn this implementation, phase is a delay time\nbased on the oscillator&#39;s current frequency.</p>\n",
              itemtype: "method",
              name: "phase",
              params: [{
                name: "phase",
                description: "<p>float between 0.0 and 1.0</p>\n",
                type: "Number"
              }],
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5739,
              description: "<p>Add a value to the p5.Oscillator&#39;s output amplitude,\nand return the oscillator. Calling this method again\nwill override the initial add() with a new value.</p>\n",
              itemtype: "method",
              name: "add",
              params: [{
                name: "number",
                description: "<p>Constant number to add</p>\n",
                type: "Number"
              }],
              return: {
                description: "Oscillator Returns this oscillator\n                                   with scaled output",
                type: "p5.Oscillator"
              },
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5756,
              description: "<p>Multiply the p5.Oscillator&#39;s output amplitude\nby a fixed value (i.e. turn it up!). Calling this method\nagain will override the initial mult() with a new value.</p>\n",
              itemtype: "method",
              name: "mult",
              params: [{
                name: "number",
                description: "<p>Constant number to multiply</p>\n",
                type: "Number"
              }],
              return: {
                description: "Oscillator Returns this oscillator\n                                   with multiplied output",
                type: "p5.Oscillator"
              },
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5772,
              description: "<p>Scale this oscillator&#39;s amplitude values to a given\nrange, and return the oscillator. Calling this method\nagain will override the initial scale() with new values.</p>\n",
              itemtype: "method",
              name: "scale",
              params: [{
                name: "inMin",
                description: "<p>input range minumum</p>\n",
                type: "Number"
              }, {
                name: "inMax",
                description: "<p>input range maximum</p>\n",
                type: "Number"
              }, {
                name: "outMin",
                description: "<p>input range minumum</p>\n",
                type: "Number"
              }, {
                name: "outMax",
                description: "<p>input range maximum</p>\n",
                type: "Number"
              }],
              return: {
                description: "Oscillator Returns this oscillator\n                                   with scaled output",
                type: "p5.Oscillator"
              },
              class: "p5.Oscillator",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 5871,
              class: "p5.SqrOsc",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6074,
              class: "p5.SqrOsc",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6363,
              description: "<p>Time until envelope reaches attackLevel</p>\n",
              itemtype: "property",
              name: "attackTime",
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6368,
              description: "<p>Level once attack is complete.</p>\n",
              itemtype: "property",
              name: "attackLevel",
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6373,
              description: "<p>Time until envelope reaches decayLevel.</p>\n",
              itemtype: "property",
              name: "decayTime",
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6378,
              description: "<p>Level after decay. The envelope will sustain here until it is released.</p>\n",
              itemtype: "property",
              name: "decayLevel",
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6383,
              description: "<p>Duration of the release portion of the envelope.</p>\n",
              itemtype: "property",
              name: "releaseTime",
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6388,
              description: "<p>Level at the end of the release.</p>\n",
              itemtype: "property",
              name: "releaseLevel",
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6424,
              description: "<p>Reset the envelope with a series of time/value pairs.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "attackTime",
                description: "<p>Time (in seconds) before level\n                               reaches attackLevel</p>\n",
                type: "Number"
              }, {
                name: "attackLevel",
                description: "<p>Typically an amplitude between\n                               0.0 and 1.0</p>\n",
                type: "Number"
              }, {
                name: "decayTime",
                description: "<p>Time</p>\n",
                type: "Number"
              }, {
                name: "decayLevel",
                description: "<p>Amplitude (In a standard ADSR envelope,\n                               decayLevel = sustainLevel)</p>\n",
                type: "Number"
              }, {
                name: "releaseTime",
                description: "<p>Release Time (in seconds)</p>\n",
                type: "Number"
              }, {
                name: "releaseLevel",
                description: "<p>Amplitude</p>\n",
                type: "Number"
              }],
              example: ["\n<div><code>\nvar t1 = 0.1; // attack time in seconds\nvar l1 = 0.7; // attack level 0.0 to 1.0\nvar t2 = 0.3; // decay time in seconds\nvar l2 = 0.1; // decay level  0.0 to 1.0\nvar t3 = 0.2; // sustain time in seconds\nvar l3 = 0.5; // sustain level  0.0 to 1.0\n// release level defaults to zero\n\nvar env;\nvar triOsc;\n\nfunction setup() {\n  background(0);\n  noStroke();\n  fill(255);\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  env = new p5.Envelope(t1, l1, t2, l2, t3, l3);\n  triOsc = new p5.Oscillator('triangle');\n  triOsc.amp(env); // give the env control of the triOsc's amp\n  triOsc.start();\n}\n\n// mouseClick triggers envelope if over canvas\nfunction mouseClicked() {\n  // is mouse over canvas?\n  if (mouseX > 0 && mouseX < width && mouseY > 0 && mouseY < height) {\n    env.play(triOsc);\n  }\n}\n</code></div>\n"],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6483,
              description: '<p>Set values like a traditional\n<a href="https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg">\nADSR envelope\n</a>.</p>\n',
              itemtype: "method",
              name: "setADSR",
              params: [{
                name: "attackTime",
                description: "<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",
                type: "Number"
              }, {
                name: "decayTime",
                description: "<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "susRatio",
                description: "<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "releaseTime",
                description: "<p>Time in seconds from now (defaults to 0)</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\nvar attackLevel = 1.0;\nvar releaseLevel = 0;\n\nvar attackTime = 0.001;\nvar decayTime = 0.2;\nvar susPercent = 0.2;\nvar releaseTime = 0.5;\n\nvar env, triOsc;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  env = new p5.Envelope();\n  env.setADSR(attackTime, decayTime, susPercent, releaseTime);\n  env.setRange(attackLevel, releaseLevel);\n\n  triOsc = new p5.Oscillator('triangle');\n  triOsc.amp(env);\n  triOsc.start();\n  triOsc.freq(220);\n\n  cnv.mousePressed(playEnv);\n}\n\nfunction playEnv()  {\n  env.play();\n}\n</code></div>"],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6548,
              description: "<p>Set max (attackLevel) and min (releaseLevel) of envelope.</p>\n",
              itemtype: "method",
              name: "setRange",
              params: [{
                name: "aLevel",
                description: "<p>attack level (defaults to 1)</p>\n",
                type: "Number"
              }, {
                name: "rLevel",
                description: "<p>release level (defaults to 0)</p>\n",
                type: "Number"
              }],
              example: ["\n<div><code>\nvar attackLevel = 1.0;\nvar releaseLevel = 0;\n\nvar attackTime = 0.001;\nvar decayTime = 0.2;\nvar susPercent = 0.2;\nvar releaseTime = 0.5;\n\nvar env, triOsc;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  env = new p5.Envelope();\n  env.setADSR(attackTime, decayTime, susPercent, releaseTime);\n  env.setRange(attackLevel, releaseLevel);\n\n  triOsc = new p5.Oscillator('triangle');\n  triOsc.amp(env);\n  triOsc.start();\n  triOsc.freq(220);\n\n  cnv.mousePressed(playEnv);\n}\n\nfunction playEnv()  {\n  env.play();\n}\n</code></div>"],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6627,
              description: "<p>Assign a parameter to be controlled by this envelope.\nIf a p5.Sound object is given, then the p5.Envelope will control its\noutput gain. If multiple inputs are provided, the env will\ncontrol all of them.</p>\n",
              itemtype: "method",
              name: "setInput",
              params: [{
                name: "inputs",
                description: "<p>A p5.sound object or\n                              Web Audio Param.</p>\n",
                type: "Object",
                optional: !0,
                multiple: !0
              }],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6642,
              description: "<p>Set whether the envelope ramp is linear (default) or exponential.\nExponential ramps can be useful because we perceive amplitude\nand frequency logarithmically.</p>\n",
              itemtype: "method",
              name: "setExp",
              params: [{
                name: "isExp",
                description: "<p>true is exponential, false is linear</p>\n",
                type: "Boolean"
              }],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6660,
              description: '<p>Play tells the envelope to start acting on a given input.\nIf the input is a p5.sound object (i.e. AudioIn, Oscillator,\nSoundFile), then Envelope will control its output volume.\nEnvelopes can also be used to control any <a href="\nhttp://docs.webplatform.org/wiki/apis/webaudio/AudioParam">\nWeb Audio Audio Param.</a></p>\n',
              itemtype: "method",
              name: "play",
              params: [{
                name: "unit",
                description: "<p>A p5.sound object or\n                              Web Audio Param.</p>\n",
                type: "Object"
              }, {
                name: "startTime",
                description: "<p>time from now (in seconds) at which to play</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "sustainTime",
                description: "<p>time to sustain before releasing the envelope</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\nvar attackLevel = 1.0;\nvar releaseLevel = 0;\n\nvar attackTime = 0.001;\nvar decayTime = 0.2;\nvar susPercent = 0.2;\nvar releaseTime = 0.5;\n\nvar env, triOsc;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  env = new p5.Envelope();\n  env.setADSR(attackTime, decayTime, susPercent, releaseTime);\n  env.setRange(attackLevel, releaseLevel);\n\n  triOsc = new p5.Oscillator('triangle');\n  triOsc.amp(env);\n  triOsc.start();\n  triOsc.freq(220);\n\n  cnv.mousePressed(playEnv);\n}\n\nfunction playEnv()  {\n  // trigger env on triOsc, 0 seconds from now\n  // After decay, sustain for 0.2 seconds before release\n  env.play(triOsc, 0, 0.2);\n}\n</code></div>"],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6721,
              description: '<p>Trigger the Attack, and Decay portion of the Envelope.\nSimilar to holding down a key on a piano, but it will\nhold the sustain level until you let go. Input can be\nany p5.sound object, or a <a href="\nhttp://docs.webplatform.org/wiki/apis/webaudio/AudioParam">\nWeb Audio Param</a>.</p>\n',
              itemtype: "method",
              name: "triggerAttack",
              params: [{
                name: "unit",
                description: "<p>p5.sound Object or Web Audio Param</p>\n",
                type: "Object"
              }, {
                name: "secondsFromNow",
                description: "<p>time from now (in seconds)</p>\n",
                type: "Number"
              }],
              example: ["\n<div><code>\n\nvar attackLevel = 1.0;\nvar releaseLevel = 0;\n\nvar attackTime = 0.001;\nvar decayTime = 0.3;\nvar susPercent = 0.4;\nvar releaseTime = 0.5;\n\nvar env, triOsc;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n  background(200);\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  env = new p5.Envelope();\n  env.setADSR(attackTime, decayTime, susPercent, releaseTime);\n  env.setRange(attackLevel, releaseLevel);\n\n  triOsc = new p5.Oscillator('triangle');\n  triOsc.amp(env);\n  triOsc.start();\n  triOsc.freq(220);\n\n  cnv.mousePressed(envAttack);\n}\n\nfunction envAttack()  {\n  console.log('trigger attack');\n  env.triggerAttack();\n\n  background(0,255,0);\n  text('attack!', width/2, height/2);\n}\n\nfunction mouseReleased() {\n  env.triggerRelease();\n\n  background(200);\n  text('click to play', width/2, height/2);\n}\n</code></div>"],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6828,
              description: "<p>Trigger the Release of the Envelope. This is similar to releasing\nthe key on a piano and letting the sound fade according to the\nrelease level and release time.</p>\n",
              itemtype: "method",
              name: "triggerRelease",
              params: [{
                name: "unit",
                description: "<p>p5.sound Object or Web Audio Param</p>\n",
                type: "Object"
              }, {
                name: "secondsFromNow",
                description: "<p>time to trigger the release</p>\n",
                type: "Number"
              }],
              example: ["\n<div><code>\n\nvar attackLevel = 1.0;\nvar releaseLevel = 0;\n\nvar attackTime = 0.001;\nvar decayTime = 0.3;\nvar susPercent = 0.4;\nvar releaseTime = 0.5;\n\nvar env, triOsc;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n  background(200);\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n\n  env = new p5.Envelope();\n  env.setADSR(attackTime, decayTime, susPercent, releaseTime);\n  env.setRange(attackLevel, releaseLevel);\n\n  triOsc = new p5.Oscillator('triangle');\n  triOsc.amp(env);\n  triOsc.start();\n  triOsc.freq(220);\n\n  cnv.mousePressed(envAttack);\n}\n\nfunction envAttack()  {\n  console.log('trigger attack');\n  env.triggerAttack();\n\n  background(0,255,0);\n  text('attack!', width/2, height/2);\n}\n\nfunction mouseReleased() {\n  env.triggerRelease();\n\n  background(200);\n  text('click to play', width/2, height/2);\n}\n</code></div>"],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 6925,
              description: '<p>Exponentially ramp to a value using the first two\nvalues from <code><a href="#/p5.Envelope/setADSR">setADSR(attackTime, decayTime)</a></code>\nas <a href="https://en.wikipedia.org/wiki/RC_time_constant">\ntime constants</a> for simple exponential ramps.\nIf the value is higher than current value, it uses attackTime,\nwhile a decrease uses decayTime.</p>\n',
              itemtype: "method",
              name: "ramp",
              params: [{
                name: "unit",
                description: "<p>p5.sound Object or Web Audio Param</p>\n",
                type: "Object"
              }, {
                name: "secondsFromNow",
                description: "<p>When to trigger the ramp</p>\n",
                type: "Number"
              }, {
                name: "v",
                description: "<p>Target value</p>\n",
                type: "Number"
              }, {
                name: "v2",
                description: "<p>Second target value (optional)</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\nvar env, osc, amp, cnv;\n\nvar attackTime = 0.001;\nvar decayTime = 0.2;\nvar attackLevel = 1;\nvar decayLevel = 0;\n\nfunction setup() {\n  cnv = createCanvas(100, 100);\n  fill(0,255,0);\n  noStroke();\n\n  env = new p5.Envelope();\n  env.setADSR(attackTime, decayTime);\n\n  osc = new p5.Oscillator();\n  osc.amp(env);\n  osc.start();\n\n  amp = new p5.Amplitude();\n\n  cnv.mousePressed(triggerRamp);\n}\n\nfunction triggerRamp() {\n  env.ramp(osc, 0, attackLevel, decayLevel);\n}\n\nfunction draw() {\n  background(20,20,20);\n  text('click me', 10, 20);\n  var h = map(amp.getLevel(), 0, 0.4, 0, height);;\n\n  rect(0, height, width, -h);\n}\n</code></div>"],
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7032,
              description: "<p>Add a value to the p5.Oscillator&#39;s output amplitude,\nand return the oscillator. Calling this method\nagain will override the initial add() with new values.</p>\n",
              itemtype: "method",
              name: "add",
              params: [{
                name: "number",
                description: "<p>Constant number to add</p>\n",
                type: "Number"
              }],
              return: {
                description: "Envelope Returns this envelope\n                                   with scaled output",
                type: "p5.Envelope"
              },
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7048,
              description: "<p>Multiply the p5.Envelope&#39;s output amplitude\nby a fixed value. Calling this method\nagain will override the initial mult() with new values.</p>\n",
              itemtype: "method",
              name: "mult",
              params: [{
                name: "number",
                description: "<p>Constant number to multiply</p>\n",
                type: "Number"
              }],
              return: {
                description: "Envelope Returns this envelope\n                                   with scaled output",
                type: "p5.Envelope"
              },
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7064,
              description: "<p>Scale this envelope&#39;s amplitude values to a given\nrange, and return the envelope. Calling this method\nagain will override the initial scale() with new values.</p>\n",
              itemtype: "method",
              name: "scale",
              params: [{
                name: "inMin",
                description: "<p>input range minumum</p>\n",
                type: "Number"
              }, {
                name: "inMax",
                description: "<p>input range maximum</p>\n",
                type: "Number"
              }, {
                name: "outMin",
                description: "<p>input range minumum</p>\n",
                type: "Number"
              }, {
                name: "outMax",
                description: "<p>input range maximum</p>\n",
                type: "Number"
              }],
              return: {
                description: "Envelope Returns this envelope\n                                   with scaled output",
                type: "p5.Envelope"
              },
              class: "p5.Envelope",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7172,
              description: "<p>Set the width of a Pulse object (an oscillator that implements\nPulse Width Modulation).</p>\n",
              itemtype: "method",
              name: "width",
              params: [{
                name: "width",
                description: "<p>Width between the pulses (0 to 1.0,\n                       defaults to 0)</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Pulse",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7359,
              description: "<p>Set type of noise to &#39;white&#39;, &#39;pink&#39; or &#39;brown&#39;.\nWhite is the default.</p>\n",
              itemtype: "method",
              name: "setType",
              params: [{
                name: "type",
                description: "<p>&#39;white&#39;, &#39;pink&#39; or &#39;brown&#39;</p>\n",
                type: "String",
                optional: !0
              }],
              class: "p5.Noise",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7472,
              itemtype: "property",
              name: "input",
              type: "GainNode",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7476,
              itemtype: "property",
              name: "output",
              type: "GainNode",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7480,
              itemtype: "property",
              name: "stream",
              type: "MediaStream|null",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7484,
              itemtype: "property",
              name: "mediaStream",
              type: "MediaStreamAudioSourceNode|null",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7488,
              itemtype: "property",
              name: "currentSource",
              type: "Number|null",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7492,
              description: "<p>Client must allow browser to access their microphone / audioin source.\nDefault: false. Will become true when the client enables acces.</p>\n",
              itemtype: "property",
              name: "enabled",
              type: "Boolean",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7499,
              description: "<p>Input amplitude, connect to it by default but not to master out</p>\n",
              itemtype: "property",
              name: "amplitude",
              type: "p5.Amplitude",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7512,
              description: "<p>Start processing audio input. This enables the use of other\nAudioIn methods like getLevel(). Note that by default, AudioIn\nis not connected to p5.sound&#39;s output. So you won&#39;t hear\nanything unless you use the connect() method.<br/></p>\n<p>Certain browsers limit access to the user&#39;s microphone. For example,\nChrome only allows access from localhost and over https. For this reason,\nyou may want to include an errorCallback—a function that is called in case\nthe browser won&#39;t provide mic access.</p>\n",
              itemtype: "method",
              name: "start",
              params: [{
                name: "successCallback",
                description: "<p>Name of a function to call on\n                                  success.</p>\n",
                type: "Function",
                optional: !0
              }, {
                name: "errorCallback",
                description: "<p>Name of a function to call if\n                                  there was an error. For example,\n                                  some browsers do not support\n                                  getUserMedia.</p>\n",
                type: "Function",
                optional: !0
              }],
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7565,
              description: "<p>Turn the AudioIn off. If the AudioIn is stopped, it cannot getLevel().\nIf re-starting, the user may be prompted for permission access.</p>\n",
              itemtype: "method",
              name: "stop",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7581,
              description: "<p>Connect to an audio unit. If no parameter is provided, will\nconnect to the master output (i.e. your speakers).<br/></p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "<p>An object that accepts audio input,\n                        such as an FFT</p>\n",
                type: "Object",
                optional: !0
              }],
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7602,
              description: "<p>Disconnect the AudioIn from all audio units. For example, if\nconnect() had been called, disconnect() will stop sending\nsignal to your speakers.<br/></p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7616,
              description: "<p>Read the Amplitude (volume level) of an AudioIn. The AudioIn\nclass contains its own instance of the Amplitude class to help\nmake it easy to get a microphone&#39;s volume level. Accepts an\noptional smoothing value (0.0 &lt; 1.0). <em>NOTE: AudioIn must\n.start() before using .getLevel().</em><br/></p>\n",
              itemtype: "method",
              name: "getLevel",
              params: [{
                name: "smoothing",
                description: "<p>Smoothing is 0.0 by default.\n                             Smooths values based on previous values.</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "Volume level (between 0.0 and 1.0)",
                type: "Number"
              },
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7634,
              description: "<p>Set amplitude (volume) of a mic input between 0 and 1.0. <br/></p>\n",
              itemtype: "method",
              name: "amp",
              params: [{
                name: "vol",
                description: "<p>between 0 and 1.0</p>\n",
                type: "Number"
              }, {
                name: "time",
                description: "<p>ramp time (optional)</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7653,
              description: '<p>Returns a list of available input sources. This is a wrapper\nfor &lt;a title=&quot;MediaDevices.enumerateDevices() - Web APIs | MDN&quot; target=&quot;_blank&quot; href=\n &quot;<a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices</a>&quot;</p>\n<blockquote>\n<p>and it returns a Promise.</p>\n</blockquote>\n',
              itemtype: "method",
              name: "getSources",
              params: [{
                name: "successCallback",
                description: "<p>This callback function handles the sources when they\n                                     have been enumerated. The callback function\n                                     receives the deviceList array as its only argument</p>\n",
                type: "Function",
                optional: !0
              }, {
                name: "errorCallback",
                description: "<p>This optional callback receives the error\n                                   message as its argument.</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: "Returns a Promise that can be used in place of the callbacks, similar\n                           to the enumerateDevices() method",
                type: "Promise"
              },
              example: ["\n <div><code>\n var audiograb;\n\n function setup(){\n   //new audioIn\n   audioGrab = new p5.AudioIn();\n\n   audioGrab.getSources(function(deviceList) {\n     //print out the array of available sources\n     console.log(deviceList);\n     //set the source to the first item in the deviceList array\n     audioGrab.setSource(0);\n   });\n }\n </code></div>"],
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7704,
              description: '<p>Set the input source. Accepts a number representing a\nposition in the array returned by getSources().\nThis is only available in browsers that support\n&lt;a title=&quot;MediaDevices.enumerateDevices() - Web APIs | MDN&quot; target=&quot;_blank&quot; href=\n&quot;<a href="https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices">https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices</a>&quot;</p>\n<blockquote>\n<p>navigator.mediaDevices.enumerateDevices()</a>.<br/></p>\n</blockquote>\n',
              itemtype: "method",
              name: "setSource",
              params: [{
                name: "num",
                description: "<p>position of input source in the array</p>\n",
                type: "Number"
              }],
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7744,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7760,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7784,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7810,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7832,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7854,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7900,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7931,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 7949,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8286,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8308,
              class: "p5.AudioIn",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8384,
              description: "<p>In classes that extend\np5.Effect, connect effect nodes\nto the wet parameter</p>\n",
              class: "p5.Effect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8397,
              description: "<p>Set the output volume of the filter.</p>\n",
              itemtype: "method",
              name: "amp",
              params: [{
                name: "vol",
                description: "<p>amplitude between 0 and 1.0</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "rampTime",
                description: "<p>create a fade that lasts until rampTime</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "tFromNow",
                description: "<p>schedule this event to happen in tFromNow seconds</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Effect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8414,
              description: "<p>Link effects together in a chain<br>Example usage: filter.chain(reverb, delay, panner);\nMay be used with an open-ended number of arguments</p>\n",
              itemtype: "method",
              name: "chain",
              params: [{
                name: "arguments",
                description: "<p>Chain together multiple sound objects</p>\n",
                type: "Object",
                optional: !0
              }],
              class: "p5.Effect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8431,
              description: "<p>Adjust the dry/wet value.</p>\n",
              itemtype: "method",
              name: "drywet",
              params: [{
                name: "fade",
                description: "<p>The desired drywet value (0 - 1.0)</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Effect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8443,
              description: "<p>Send output to a p5.js-sound, Web Audio Node, or use signal to\ncontrol an AudioParam</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "",
                type: "Object"
              }],
              class: "p5.Effect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8454,
              description: "<p>Disconnect all output.</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.Effect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8572,
              description: '<p>The p5.Filter is built with a\n<a href="http://www.w3.org/TR/webaudio/#BiquadFilterNode">\nWeb Audio BiquadFilter Node</a>.</p>\n',
              itemtype: "property",
              name: "biquadFilter",
              type: "DelayNode",
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8590,
              description: "<p>Filter an audio signal according to a set\nof filter parameters.</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "Signal",
                description: "<p>An object that outputs audio</p>\n",
                type: "Object"
              }, {
                name: "freq",
                description: "<p>Frequency in Hz, from 10 to 22050</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "res",
                description: "<p>Resonance/Width of the filter frequency\n                      from 0.001 to 1000</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8604,
              description: "<p>Set the frequency and the resonance of the filter.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "freq",
                description: "<p>Frequency in Hz, from 10 to 22050</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "res",
                description: "<p>Resonance (Q) from 0.001 to 1000</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8621,
              description: "<p>Set the filter frequency, in Hz, from 10 to 22050 (the range of\nhuman hearing, although in reality most people hear in a narrower\nrange).</p>\n",
              itemtype: "method",
              name: "freq",
              params: [{
                name: "freq",
                description: "<p>Filter Frequency</p>\n",
                type: "Number"
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "value  Returns the current frequency value",
                type: "Number"
              },
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8645,
              description: "<p>Controls either width of a bandpass frequency,\nor the resonance of a low/highpass cutoff frequency.</p>\n",
              itemtype: "method",
              name: "res",
              params: [{
                name: "res",
                description: "<p>Resonance/Width of filter freq\n                     from 0.001 to 1000</p>\n",
                type: "Number"
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "value Returns the current res value",
                type: "Number"
              },
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8667,
              description: "<p>Controls the gain attribute of a Biquad Filter.\nThis is distinctly different from .amp() which is inherited from p5.Effect\n.amp() controls the volume via the output gain node\np5.Filter.gain() controls the gain parameter of a Biquad Filter node.</p>\n",
              itemtype: "method",
              name: "gain",
              params: [{
                name: "gain",
                description: "",
                type: "Number"
              }],
              return: {
                description: "Returns the current or updated gain value",
                type: "Number"
              },
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8688,
              description: "<p>Toggle function. Switches between the specified type and allpass</p>\n",
              itemtype: "method",
              name: "toggle",
              return: {
                description: "[Toggle value]",
                type: "Boolean"
              },
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8703,
              description: "<p>Set the type of a p5.Filter. Possible types include:\n&quot;lowpass&quot; (default), &quot;highpass&quot;, &quot;bandpass&quot;,\n&quot;lowshelf&quot;, &quot;highshelf&quot;, &quot;peaking&quot;, &quot;notch&quot;,\n&quot;allpass&quot;.</p>\n",
              itemtype: "method",
              name: "setType",
              params: [{
                name: "t",
                description: "",
                type: "String"
              }],
              class: "p5.Filter",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8910,
              description: '<p>The p5.EQ is built with abstracted p5.Filter objects.\nTo modify any bands, use methods of the <a \nhref="/reference/#/p5.Filter" title="p5.Filter reference">\np5.Filter</a> API, especially <code>gain</code> and <code>freq</code>.\nBands are stored in an array, with indices 0 - 3, or 0 - 7</p>\n',
              itemtype: "property",
              name: "bands",
              type: "Array",
              class: "p5.EQ",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 8945,
              description: "<p>Process an input by connecting it to the EQ</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "src",
                description: "<p>Audio source</p>\n",
                type: "Object"
              }],
              class: "p5.EQ",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9033,
              description: '<p><a title="Web Audio Panner docs"  href=\n"https://developer.mozilla.org/en-US/docs/Web/API/PannerNode">\nWeb Audio Spatial Panner Node</a></p>\n<p>Properties include</p>\n<ul>\n<li>&lt;a title=&quot;w3 spec for Panning Model&quot;\nhref=&quot;<a href="https://www.w3.org/TR/webaudio/#idl-def-PanningModelType">https://www.w3.org/TR/webaudio/#idl-def-PanningModelType</a>&quot;<blockquote>\n<p>panningModel</a>: &quot;equal power&quot; or &quot;HRTF&quot;</p>\n</blockquote>\n</li>\n<li>&lt;a title=&quot;w3 spec for Distance Model&quot;\nhref=&quot;<a href="https://www.w3.org/TR/webaudio/#idl-def-DistanceModelType">https://www.w3.org/TR/webaudio/#idl-def-DistanceModelType</a>&quot;<blockquote>\n<p>distanceModel</a>: &quot;linear&quot;, &quot;inverse&quot;, or &quot;exponential&quot;</p>\n</blockquote>\n</li>\n</ul>\n',
              itemtype: "property",
              name: "panner",
              type: "AudioNode",
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9056,
              description: "<p>Connect an audio sorce</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "src",
                description: "<p>Input source</p>\n",
                type: "Object"
              }],
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9065,
              description: "<p>Set the X,Y,Z position of the Panner</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "xVal",
                description: "",
                type: "Number"
              }, {
                name: "yVal",
                description: "",
                type: "Number"
              }, {
                name: "zVal",
                description: "",
                type: "Number"
              }, {
                name: "time",
                description: "",
                type: "Number"
              }],
              return: {
                description: "Updated x, y, z values as an array",
                type: "Array"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9084,
              description: "<p>Getter and setter methods for position coordinates</p>\n",
              itemtype: "method",
              name: "positionX",
              return: {
                description: "updated coordinate value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9089,
              description: "<p>Getter and setter methods for position coordinates</p>\n",
              itemtype: "method",
              name: "positionY",
              return: {
                description: "updated coordinate value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9094,
              description: "<p>Getter and setter methods for position coordinates</p>\n",
              itemtype: "method",
              name: "positionZ",
              return: {
                description: "updated coordinate value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9132,
              description: "<p>Set the X,Y,Z position of the Panner</p>\n",
              itemtype: "method",
              name: "orient",
              params: [{
                name: "xVal",
                description: "",
                type: "Number"
              }, {
                name: "yVal",
                description: "",
                type: "Number"
              }, {
                name: "zVal",
                description: "",
                type: "Number"
              }, {
                name: "time",
                description: "",
                type: "Number"
              }],
              return: {
                description: "Updated x, y, z values as an array",
                type: "Array"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9151,
              description: "<p>Getter and setter methods for orient coordinates</p>\n",
              itemtype: "method",
              name: "orientX",
              return: {
                description: "updated coordinate value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9156,
              description: "<p>Getter and setter methods for orient coordinates</p>\n",
              itemtype: "method",
              name: "orientY",
              return: {
                description: "updated coordinate value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9161,
              description: "<p>Getter and setter methods for orient coordinates</p>\n",
              itemtype: "method",
              name: "orientZ",
              return: {
                description: "updated coordinate value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9199,
              description: "<p>Set the rolloff factor and max distance</p>\n",
              itemtype: "method",
              name: "setFalloff",
              params: [{
                name: "maxDistance",
                description: "",
                type: "Number",
                optional: !0
              }, {
                name: "rolloffFactor",
                description: "",
                type: "Number",
                optional: !0
              }],
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9209,
              description: "<p>Maxium distance between the source and the listener</p>\n",
              itemtype: "method",
              name: "maxDist",
              params: [{
                name: "maxDistance",
                description: "",
                type: "Number"
              }],
              return: {
                description: "updated value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9221,
              description: "<p>How quickly the volume is reduced as the source moves away from the listener</p>\n",
              itemtype: "method",
              name: "rollof",
              params: [{
                name: "rolloffFactor",
                description: "",
                type: "Number"
              }],
              return: {
                description: "updated value",
                type: "Number"
              },
              class: "p5.Panner3D",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9526,
              description: '<p>The p5.Delay is built with two\n<a href="http://www.w3.org/TR/webaudio/#DelayNode">\nWeb Audio Delay Nodes</a>, one for each stereo channel.</p>\n',
              itemtype: "property",
              name: "leftDelay",
              type: "DelayNode",
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9534,
              description: '<p>The p5.Delay is built with two\n<a href="http://www.w3.org/TR/webaudio/#DelayNode">\nWeb Audio Delay Nodes</a>, one for each stereo channel.</p>\n',
              itemtype: "property",
              name: "rightDelay",
              type: "DelayNode",
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9566,
              description: "<p>Add delay to an audio signal according to a set\nof delay parameters.</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "Signal",
                description: "<p>An object that outputs audio</p>\n",
                type: "Object"
              }, {
                name: "delayTime",
                description: "<p>Time (in seconds) of the delay/echo.\n                             Some browsers limit delayTime to\n                             1 second.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "feedback",
                description: "<p>sends the delay back through itself\n                             in a loop that decreases in volume\n                             each time.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "lowPass",
                description: "<p>Cutoff frequency. Only frequencies\n                             below the lowPass will be part of the\n                             delay.</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9601,
              description: "<p>Set the delay (echo) time, in seconds. Usually this value will be\na floating point number between 0.0 and 1.0.</p>\n",
              itemtype: "method",
              name: "delayTime",
              params: [{
                name: "delayTime",
                description: "<p>Time (in seconds) of the delay</p>\n",
                type: "Number"
              }],
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9620,
              description: "<p>Feedback occurs when Delay sends its signal back through its input\nin a loop. The feedback amount determines how much signal to send each\ntime through the loop. A feedback greater than 1.0 is not desirable because\nit will increase the overall output each time through the loop,\ncreating an infinite feedback loop. The default value is 0.5</p>\n",
              itemtype: "method",
              name: "feedback",
              params: [{
                name: "feedback",
                description: "<p>0.0 to 1.0, or an object such as an\n                                Oscillator that can be used to\n                                modulate this param</p>\n",
                type: "Number|Object"
              }],
              return: {
                description: "Feedback value",
                type: "Number"
              },
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9648,
              description: "<p>Set a lowpass filter frequency for the delay. A lowpass filter\nwill cut off any frequencies higher than the filter frequency.</p>\n",
              itemtype: "method",
              name: "filter",
              params: [{
                name: "cutoffFreq",
                description: "<p>A lowpass filter will cut off any\n                            frequencies higher than the filter frequency.</p>\n",
                type: "Number|Object"
              }, {
                name: "res",
                description: "<p>Resonance of the filter frequency\n                            cutoff, or an object (i.e. a p5.Oscillator)\n                            that can be used to modulate this parameter.\n                            High numbers (i.e. 15) will produce a resonance,\n                            low numbers (i.e. .2) will produce a slope.</p>\n",
                type: "Number|Object"
              }],
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9665,
              description: "<p>Choose a preset type of delay. &#39;pingPong&#39; bounces the signal\nfrom the left to the right channel to produce a stereo effect.\nAny other parameter will revert to the default delay setting.</p>\n",
              itemtype: "method",
              name: "setType",
              params: [{
                name: "type",
                description: "<p>&#39;pingPong&#39; (1) or &#39;default&#39; (0)</p>\n",
                type: "String|Number"
              }],
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9698,
              description: "<p>Set the output level of the delay effect.</p>\n",
              itemtype: "method",
              name: "amp",
              params: [{
                name: "volume",
                description: "<p>amplitude between 0 and 1.0</p>\n",
                type: "Number"
              }, {
                name: "rampTime",
                description: "<p>create a fade that lasts rampTime</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9707,
              description: "<p>Send output to a p5.sound or web audio object</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "",
                type: "Object"
              }],
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9713,
              description: "<p>Disconnect all output.</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.Delay",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9806,
              description: "<p>Connect a source to the reverb, and assign reverb parameters.</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "src",
                description: "<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",
                type: "Object"
              }, {
                name: "seconds",
                description: "<p>Duration of the reverb, in seconds.\n                         Min: 0, Max: 10. Defaults to 3.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "decayRate",
                description: "<p>Percentage of decay with each echo.\n                          Min: 0, Max: 100. Defaults to 2.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "reverse",
                description: "<p>Play the reverb backwards or forwards.</p>\n",
                type: "Boolean",
                optional: !0
              }],
              class: "p5.Reverb",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9835,
              description: "<p>Set the reverb settings. Similar to .process(), but without\nassigning a new input.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "seconds",
                description: "<p>Duration of the reverb, in seconds.\n                         Min: 0, Max: 10. Defaults to 3.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "decayRate",
                description: "<p>Percentage of decay with each echo.\n                          Min: 0, Max: 100. Defaults to 2.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "reverse",
                description: "<p>Play the reverb backwards or forwards.</p>\n",
                type: "Boolean",
                optional: !0
              }],
              class: "p5.Reverb",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9863,
              description: "<p>Set the output level of the reverb effect.</p>\n",
              itemtype: "method",
              name: "amp",
              params: [{
                name: "volume",
                description: "<p>amplitude between 0 and 1.0</p>\n",
                type: "Number"
              }, {
                name: "rampTime",
                description: "<p>create a fade that lasts rampTime</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Reverb",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9872,
              description: "<p>Send output to a p5.sound or web audio object</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "",
                type: "Object"
              }],
              class: "p5.Reverb",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9878,
              description: "<p>Disconnect all output.</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.Reverb",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9969,
              description: '<p>Internally, the p5.Convolver uses the a\n<a href="http://www.w3.org/TR/webaudio/#ConvolverNode">\nWeb Audio Convolver Node</a>.</p>\n',
              itemtype: "property",
              name: "convolverNode",
              type: "ConvolverNode",
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 9992,
              description: "<p>Create a p5.Convolver. Accepts a path to a soundfile\nthat will be used to generate an impulse response.</p>\n",
              itemtype: "method",
              name: "createConvolver",
              params: [{
                name: "path",
                description: "<p>path to a sound file</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: "<p>function to call if loading is successful.\n                              The object will be passed in as the argument\n                              to the callback function.</p>\n",
                type: "Function",
                optional: !0
              }, {
                name: "errorCallback",
                description: "<p>function to call if loading is not successful.\n                              A custom error will be passed in as the argument\n                              to the callback function.</p>\n",
                type: "Function",
                optional: !0
              }],
              return: {
                description: "",
                type: "p5.Convolver"
              },
              example: ["\n<div><code>\nvar cVerb, sound;\nfunction preload() {\n  // We have both MP3 and OGG versions of all sound assets\n  soundFormats('ogg', 'mp3');\n\n  // Try replacing 'bx-spring' with other soundfiles like\n  // 'concrete-tunnel' 'small-plate' 'drum' 'beatbox'\n  cVerb = createConvolver('assets/bx-spring.mp3');\n\n  // Try replacing 'Damscray_DancingTiger' with\n  // 'beat', 'doorbell', lucky_dragons_-_power_melody'\n  sound = loadSound('assets/Damscray_DancingTiger.mp3');\n}\n\nfunction setup() {\n  // disconnect from master output...\n  sound.disconnect();\n\n  // ...and process with cVerb\n  // so that we only hear the convolution\n  cVerb.process(sound);\n\n  sound.play();\n}\n</code></div>"],
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10116,
              description: "<p>Connect a source to the reverb, and assign reverb parameters.</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "src",
                description: "<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",
                type: "Object"
              }],
              example: ["\n<div><code>\nvar cVerb, sound;\nfunction preload() {\n  soundFormats('ogg', 'mp3');\n\n  cVerb = createConvolver('assets/concrete-tunnel.mp3');\n\n  sound = loadSound('assets/beat.mp3');\n}\n\nfunction setup() {\n  // disconnect from master output...\n  sound.disconnect();\n\n  // ...and process with (i.e. connect to) cVerb\n  // so that we only hear the convolution\n  cVerb.process(sound);\n\n  sound.play();\n}\n</code></div>"],
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10148,
              description: "<p>If you load multiple impulse files using the .addImpulse method,\nthey will be stored as Objects in this Array. Toggle between them\nwith the <code>toggleImpulse(id)</code> method.</p>\n",
              itemtype: "property",
              name: "impulses",
              type: "Array",
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10156,
              description: "<p>Load and assign a new Impulse Response to the p5.Convolver.\nThe impulse is added to the <code>.impulses</code> array. Previous\nimpulses can be accessed with the <code>.toggleImpulse(id)</code>\nmethod.</p>\n",
              itemtype: "method",
              name: "addImpulse",
              params: [{
                name: "path",
                description: "<p>path to a sound file</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: "<p>function (optional)</p>\n",
                type: "Function"
              }, {
                name: "errorCallback",
                description: "<p>function (optional)</p>\n",
                type: "Function"
              }],
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10174,
              description: "<p>Similar to .addImpulse, except that the <code>.impulses</code>\nArray is reset to save memory. A new <code>.impulses</code>\narray is created with this impulse as the only item.</p>\n",
              itemtype: "method",
              name: "resetImpulse",
              params: [{
                name: "path",
                description: "<p>path to a sound file</p>\n",
                type: "String"
              }, {
                name: "callback",
                description: "<p>function (optional)</p>\n",
                type: "Function"
              }, {
                name: "errorCallback",
                description: "<p>function (optional)</p>\n",
                type: "Function"
              }],
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10192,
              description: '<p>If you have used <code>.addImpulse()</code> to add multiple impulses\nto a p5.Convolver, then you can use this method to toggle between\nthe items in the <code>.impulses</code> Array. Accepts a parameter\nto identify which impulse you wish to use, identified either by its\noriginal filename (String) or by its position in the <code>.impulses\n</code> Array (Number).<br/>\nYou can access the objects in the .impulses Array directly. Each\nObject has two attributes: an <code>.audioBuffer</code> (type:\nWeb Audio <a href="\nhttp://webaudio.github.io/web-audio-api/#the-audiobuffer-interface">\nAudioBuffer)</a> and a <code>.name</code>, a String that corresponds\nwith the original filename.</p>\n',
              itemtype: "method",
              name: "toggleImpulse",
              params: [{
                name: "id",
                description: "<p>Identify the impulse by its original filename\n                          (String), or by its position in the\n                          <code>.impulses</code> Array (Number).</p>\n",
                type: "String|Number"
              }],
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10234,
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10259,
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10454,
              description: "<p>Set the global tempo, in beats per minute, for all\np5.Parts. This method will impact all active p5.Parts.</p>\n",
              itemtype: "method",
              name: "setBPM",
              params: [{
                name: "BPM",
                description: "<p>Beats Per Minute</p>\n",
                type: "Number"
              }, {
                name: "rampTime",
                description: "<p>Seconds from now</p>\n",
                type: "Number"
              }],
              class: "p5.Convolver",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10544,
              description: "<p>Array of values to pass into the callback\nat each step of the phrase. Depending on the callback\nfunction&#39;s requirements, these values may be numbers,\nstrings, or an object with multiple parameters.\nZero (0) indicates a rest.</p>\n",
              itemtype: "property",
              name: "sequence",
              type: "Array",
              class: "p5.Phrase",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10632,
              description: "<p>Set the tempo of this part, in Beats Per Minute.</p>\n",
              itemtype: "method",
              name: "setBPM",
              params: [{
                name: "BPM",
                description: "<p>Beats Per Minute</p>\n",
                type: "Number"
              }, {
                name: "rampTime",
                description: "<p>Seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10642,
              description: "<p>Returns the tempo, in Beats Per Minute, of this part.</p>\n",
              itemtype: "method",
              name: "getBPM",
              return: {
                description: "",
                type: "Number"
              },
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10651,
              description: "<p>Start playback of this part. It will play\nthrough all of its phrases at a speed\ndetermined by setBPM.</p>\n",
              itemtype: "method",
              name: "start",
              params: [{
                name: "time",
                description: "<p>seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10667,
              description: "<p>Loop playback of this part. It will begin\nlooping through all of its phrases at a speed\ndetermined by setBPM.</p>\n",
              itemtype: "method",
              name: "loop",
              params: [{
                name: "time",
                description: "<p>seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10684,
              description: "<p>Tell the part to stop looping.</p>\n",
              itemtype: "method",
              name: "noLoop",
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10696,
              description: "<p>Stop the part and cue it to step 0. Playback will resume from the begining of the Part when it is played again.</p>\n",
              itemtype: "method",
              name: "stop",
              params: [{
                name: "time",
                description: "<p>seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10706,
              description: "<p>Pause the part. Playback will resume\nfrom the current step.</p>\n",
              itemtype: "method",
              name: "pause",
              params: [{
                name: "time",
                description: "<p>seconds from now</p>\n",
                type: "Number"
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10718,
              description: "<p>Add a p5.Phrase to this Part.</p>\n",
              itemtype: "method",
              name: "addPhrase",
              params: [{
                name: "phrase",
                description: "<p>reference to a p5.Phrase</p>\n",
                type: "p5.Phrase"
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10739,
              description: "<p>Remove a phrase from this part, based on the name it was\ngiven when it was created.</p>\n",
              itemtype: "method",
              name: "removePhrase",
              params: [{
                name: "phraseName",
                description: "",
                type: "String"
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10753,
              description: "<p>Get a phrase from this part, based on the name it was\ngiven when it was created. Now you can modify its array.</p>\n",
              itemtype: "method",
              name: "getPhrase",
              params: [{
                name: "phraseName",
                description: "",
                type: "String"
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10767,
              description: "<p>Find all sequences with the specified name, and replace their patterns with the specified array.</p>\n",
              itemtype: "method",
              name: "replaceSequence",
              params: [{
                name: "phraseName",
                description: "",
                type: "String"
              }, {
                name: "sequence",
                description: "<p>Array of values to pass into the callback\n                          at each step of the phrase.</p>\n",
                type: "Array"
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10794,
              description: "<p>Set the function that will be called at every step. This will clear the previous function.</p>\n",
              itemtype: "method",
              name: "onStep",
              params: [{
                name: "callback",
                description: "<p>The name of the callback\n                            you want to fire\n                            on every beat/tatum.</p>\n",
                type: "Function"
              }],
              class: "p5.Part",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10847,
              description: "<p>Start playback of the score.</p>\n",
              itemtype: "method",
              name: "start",
              class: "p5.Score",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10856,
              description: "<p>Stop playback of the score.</p>\n",
              itemtype: "method",
              name: "stop",
              class: "p5.Score",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10866,
              description: "<p>Pause playback of the score.</p>\n",
              itemtype: "method",
              name: "pause",
              class: "p5.Score",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10874,
              description: "<p>Loop playback of the score.</p>\n",
              itemtype: "method",
              name: "loop",
              class: "p5.Score",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10883,
              description: "<p>Stop looping playback of the score. If it\nis currently playing, this will go into effect\nafter the current round of playback completes.</p>\n",
              itemtype: "method",
              name: "noLoop",
              class: "p5.Score",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10908,
              description: "<p>Set the tempo for all parts in the score</p>\n",
              itemtype: "method",
              name: "setBPM",
              params: [{
                name: "BPM",
                description: "<p>Beats Per Minute</p>\n",
                type: "Number"
              }, {
                name: "rampTime",
                description: "<p>Seconds from now</p>\n",
                type: "Number"
              }],
              class: "p5.Score",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10976,
              description: '<p>musicalTimeMode uses <a href = "https://github.com/Tonejs/Tone.js/wiki/Time">Tone.Time</a> convention\ntrue if string, false if number</p>\n',
              itemtype: "property",
              name: "musicalTimeMode",
              type: "Boolean",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10983,
              description: "<p>musicalTimeMode variables\nmodify these only when the interval is specified in musicalTime format as a string</p>\n",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10990,
              description: "<p>Set a limit to the number of loops to play. defaults to Infinity</p>\n",
              itemtype: "property",
              name: "maxIterations",
              type: "Number",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 10999,
              description: "<p>Do not initiate the callback if timeFromNow is &lt; 0\nThis ususually occurs for a few milliseconds when the page\nis not fully loaded</p>\n<p>The callback should only be called until maxIterations is reached</p>\n",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11013,
              description: "<p>Start the loop</p>\n",
              itemtype: "method",
              name: "start",
              params: [{
                name: "timeFromNow",
                description: "<p>schedule a starting time</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11026,
              description: "<p>Stop the loop</p>\n",
              itemtype: "method",
              name: "stop",
              params: [{
                name: "timeFromNow",
                description: "<p>schedule a stopping time</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11039,
              description: "<p>Pause the loop</p>\n",
              itemtype: "method",
              name: "pause",
              params: [{
                name: "timeFromNow",
                description: "<p>schedule a pausing time</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11052,
              description: "<p>Synchronize loops. Use this method to start two more more loops in synchronization\nor to start a loop in synchronization with a loop that is already playing\nThis method will schedule the implicit loop in sync with the explicit master loop\ni.e. loopToStart.syncedStart(loopToSyncWith)</p>\n",
              itemtype: "method",
              name: "syncedStart",
              params: [{
                name: "otherLoop",
                description: "<p>a p5.SoundLoop to sync with</p>\n",
                type: "Object"
              }, {
                name: "timeFromNow",
                description: "<p>Start the loops in sync after timeFromNow seconds</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11133,
              description: "<p>Getters and Setters, setting any paramter will result in a change in the clock&#39;s\nfrequency, that will be reflected after the next callback\nbeats per minute (defaults to 60)</p>\n",
              itemtype: "property",
              name: "bpm",
              type: "Number",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11151,
              description: "<p>number of quarter notes in a measure (defaults to 4)</p>\n",
              itemtype: "property",
              name: "timeSignature",
              type: "Number",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11167,
              description: "<p>length of the loops interval</p>\n",
              itemtype: "property",
              name: "interval",
              type: "Number|String",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11181,
              description: "<p>how many times the callback has been called so far</p>\n",
              itemtype: "property",
              name: "iterations",
              type: "Number",
              readonly: "",
              class: "p5.SoundLoop",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11222,
              description: '<p>The p5.Compressor is built with a <a href="https://www.w3.org/TR/webaudio/#the-dynamicscompressornode-interface" \n  target="_blank" title="W3 spec for Dynamics Compressor Node">Web Audio Dynamics Compressor Node\n  </a></p>\n',
              itemtype: "property",
              name: "compressor",
              type: "AudioNode",
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11233,
              description: "<p>Performs the same function as .connect, but also accepts\noptional parameters to set compressor&#39;s audioParams</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "src",
                description: "<p>Sound source to be connected</p>\n",
                type: "Object"
              }, {
                name: "attack",
                description: "<p>The amount of time (in seconds) to reduce the gain by 10dB,\n                           default = .003, range 0 - 1</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "knee",
                description: "<p>A decibel value representing the range above the \n                           threshold where the curve smoothly transitions to the &quot;ratio&quot; portion.\n                           default = 30, range 0 - 40</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "ratio",
                description: "<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "threshold",
                description: "<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "release",
                description: "<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11256,
              description: "<p>Set the paramters of a compressor.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "attack",
                description: "<p>The amount of time (in seconds) to reduce the gain by 10dB,\n                           default = .003, range 0 - 1</p>\n",
                type: "Number"
              }, {
                name: "knee",
                description: "<p>A decibel value representing the range above the \n                           threshold where the curve smoothly transitions to the &quot;ratio&quot; portion.\n                           default = 30, range 0 - 40</p>\n",
                type: "Number"
              }, {
                name: "ratio",
                description: "<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",
                type: "Number"
              }, {
                name: "threshold",
                description: "<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",
                type: "Number"
              }, {
                name: "release",
                description: "<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",
                type: "Number"
              }],
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11288,
              description: "<p>Get current attack or set value w/ time ramp</p>\n",
              itemtype: "method",
              name: "attack",
              params: [{
                name: "attack",
                description: "<p>Attack is the amount of time (in seconds) to reduce the gain by 10dB,\n                         default = .003, range 0 - 1</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "time",
                description: "<p>Assign time value to schedule the change in value</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11308,
              description: "<p>Get current knee or set value w/ time ramp</p>\n",
              itemtype: "method",
              name: "knee",
              params: [{
                name: "knee",
                description: "<p>A decibel value representing the range above the \n                       threshold where the curve smoothly transitions to the &quot;ratio&quot; portion.\n                       default = 30, range 0 - 40</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "time",
                description: "<p>Assign time value to schedule the change in value</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11328,
              description: "<p>Get current ratio or set value w/ time ramp</p>\n",
              itemtype: "method",
              name: "ratio",
              params: [{
                name: "ratio",
                description: "<p>The amount of dB change in input for a 1 dB change in output\n                           default = 12, range 1 - 20</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "time",
                description: "<p>Assign time value to schedule the change in value</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11347,
              description: "<p>Get current threshold or set value w/ time ramp</p>\n",
              itemtype: "method",
              name: "threshold",
              params: [{
                name: "threshold",
                description: "<p>The decibel value above which the compression will start taking effect\n                           default = -24, range -100 - 0</p>\n",
                type: "Number"
              }, {
                name: "time",
                description: "<p>Assign time value to schedule the change in value</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11366,
              description: "<p>Get current release or set value w/ time ramp</p>\n",
              itemtype: "method",
              name: "release",
              params: [{
                name: "release",
                description: "<p>The amount of time (in seconds) to increase the gain by 10dB\n                           default = .25, range 0 - 1</p>\n",
                type: "Number"
              }, {
                name: "time",
                description: "<p>Assign time value to schedule the change in value</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11386,
              description: "<p>Return the current reduction value</p>\n",
              itemtype: "method",
              name: "reduction",
              return: {
                description: "Value of the amount of gain reduction that is applied to the signal",
                type: "Number"
              },
              class: "p5.Compressor",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11502,
              description: "<p>Connect a specific device to the p5.SoundRecorder.\nIf no parameter is given, p5.SoundRecorer will record\nall audible p5.sound from your sketch.</p>\n",
              itemtype: "method",
              name: "setInput",
              params: [{
                name: "unit",
                description: "<p>p5.sound object or a web audio unit\n                       that outputs sound</p>\n",
                type: "Object",
                optional: !0
              }],
              class: "p5.SoundRecorder",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11523,
              description: "<p>Start recording. To access the recording, provide\na p5.SoundFile as the first parameter. The p5.SoundRecorder\nwill send its recording to that p5.SoundFile for playback once\nrecording is complete. Optional parameters include duration\n(in seconds) of the recording, and a callback function that\nwill be called once the complete recording has been\ntransfered to the p5.SoundFile.</p>\n",
              itemtype: "method",
              name: "record",
              params: [{
                name: "soundFile",
                description: "<p>p5.SoundFile</p>\n",
                type: "p5.SoundFile"
              }, {
                name: "duration",
                description: "<p>Time (in seconds)</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "callback",
                description: "<p>The name of a function that will be\n                              called once the recording completes</p>\n",
                type: "Function",
                optional: !0
              }],
              class: "p5.SoundRecorder",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11556,
              description: "<p>Stop the recording. Once the recording is stopped,\nthe results will be sent to the p5.SoundFile that\nwas given on .record(), and if a callback function\nwas provided on record, that function will be called.</p>\n",
              itemtype: "method",
              name: "stop",
              class: "p5.SoundRecorder",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11629,
              description: '<p>Save a p5.SoundFile as a .wav file. The browser will prompt the user\nto download the file to their device.\nFor uploading audio to a server, use\n<a href="/docs/reference/#/p5.SoundFile/saveBlob"><code>p5.SoundFile.saveBlob</code></a>.</p>\n',
              itemtype: "method",
              name: "saveSound",
              params: [{
                name: "soundFile",
                description: "<p>p5.SoundFile that you wish to save</p>\n",
                type: "p5.SoundFile"
              }, {
                name: "fileName",
                description: "<p>name of the resulting .wav file.</p>\n",
                type: "String"
              }],
              class: "p5",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11755,
              description: "<p>isDetected is set to true when a peak is detected.</p>\n",
              itemtype: "attribute",
              name: "isDetected",
              type: "Boolean",
              default: "false",
              class: "p5.PeakDetect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11768,
              description: "<p>The update method is run in the draw loop.</p>\n<p>Accepts an FFT object. You must call .analyze()\non the FFT object prior to updating the peakDetect\nbecause it relies on a completed FFT analysis.</p>\n",
              itemtype: "method",
              name: "update",
              params: [{
                name: "fftObject",
                description: "<p>A p5.FFT object</p>\n",
                type: "p5.FFT"
              }],
              class: "p5.PeakDetect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11799,
              description: "<p>onPeak accepts two arguments: a function to call when\na peak is detected. The value of the peak,\nbetween 0.0 and 1.0, is passed to the callback.</p>\n",
              itemtype: "method",
              name: "onPeak",
              params: [{
                name: "callback",
                description: "<p>Name of a function that will\n                            be called when a peak is\n                            detected.</p>\n",
                type: "Function"
              }, {
                name: "val",
                description: "<p>Optional value to pass\n                            into the function when\n                            a peak is detected.</p>\n",
                type: "Object",
                optional: !0
              }],
              example: ["\n<div><code>\nvar cnv, soundFile, fft, peakDetect;\nvar ellipseWidth = 0;\n\nfunction preload() {\n  soundFile = loadSound('assets/beat.mp3');\n}\n\nfunction setup() {\n  cnv = createCanvas(100,100);\n  textAlign(CENTER);\n\n  fft = new p5.FFT();\n  peakDetect = new p5.PeakDetect();\n\n  setupSound();\n\n  // when a beat is detected, call triggerBeat()\n  peakDetect.onPeak(triggerBeat);\n}\n\nfunction draw() {\n  background(0);\n  fill(255);\n  text('click to play', width/2, height/2);\n\n  fft.analyze();\n  peakDetect.update(fft);\n\n  ellipseWidth *= 0.95;\n  ellipse(width/2, height/2, ellipseWidth, ellipseWidth);\n}\n\n// this function is called by peakDetect.onPeak\nfunction triggerBeat() {\n  ellipseWidth = 50;\n}\n\n// mouseclick starts/stops sound\nfunction setupSound() {\n  cnv.mouseClicked( function() {\n    if (soundFile.isPlaying() ) {\n      soundFile.stop();\n    } else {\n      soundFile.play();\n    }\n  });\n}\n</code></div>"],
              class: "p5.PeakDetect",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11948,
              description: "<p>Connect a source to the gain node.</p>\n",
              itemtype: "method",
              name: "setInput",
              params: [{
                name: "src",
                description: "<p>p5.sound / Web Audio object with a sound\n                         output.</p>\n",
                type: "Object"
              }],
              class: "p5.Gain",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11958,
              description: "<p>Send output to a p5.sound or web audio object</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "",
                type: "Object"
              }],
              class: "p5.Gain",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11968,
              description: "<p>Disconnect all output.</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.Gain",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 11978,
              description: "<p>Set the output level of the gain node.</p>\n",
              itemtype: "method",
              name: "amp",
              params: [{
                name: "volume",
                description: "<p>amplitude between 0 and 1.0</p>\n",
                type: "Number"
              }, {
                name: "rampTime",
                description: "<p>create a fade that lasts rampTime</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "timeFromNow",
                description: "<p>schedule this event to happen\n                              seconds from now</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.Gain",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12036,
              description: "<p>Connect to p5 objects or Web Audio Nodes</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "",
                type: "Object"
              }],
              class: "p5.AudioVoice",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12045,
              description: "<p>Disconnect from soundOut</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.AudioVoice",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12125,
              description: "<p>Play tells the MonoSynth to start playing a note. This method schedules\nthe calling of .triggerAttack and .triggerRelease.</p>\n",
              itemtype: "method",
              name: "play",
              params: [{
                name: "note",
                description: '<p>the note you want to play, specified as a\n                               frequency in Hertz (Number) or as a midi\n                               value in Note/Octave format (&quot;C4&quot;, &quot;Eb3&quot;...etc&quot;)\n                               See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">\n                               Tone</a>. Defaults to 440 hz.</p>\n',
                type: "String | Number"
              }, {
                name: "velocity",
                description: "<p>velocity of the note to play (ranging from 0 to 1)</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "secondsFromNow",
                description: "<p>time from now (in seconds) at which to play</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "sustainTime",
                description: "<p>time to sustain before releasing the envelope</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ["\n<div><code>\nvar monoSynth;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n  cnv.mousePressed(playSynth);\n\n  monoSynth = new p5.MonoSynth();\n\n  textAlign(CENTER);\n  text('click to play', width/2, height/2);\n}\n\nfunction playSynth() {\n  // time from now (in seconds)\n  var time = 0;\n  // note duration (in seconds)\n  var dur = 1/6;\n  // note velocity (volume, from 0 to 1)\n  var v = random();\n\n  monoSynth.play(\"Fb3\", v, 0, dur);\n  monoSynth.play(\"Gb3\", v, time += dur, dur);\n\n  background(random(255), random(255), 255);\n  text('click to play', width/2, height/2);\n}\n</code></div>\n"],
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12173,
              description: "<p>Trigger the Attack, and Decay portion of the Envelope.\nSimilar to holding down a key on a piano, but it will\nhold the sustain level until you let go.</p>\n",
              params: [{
                name: "note",
                description: '<p>the note you want to play, specified as a\n                               frequency in Hertz (Number) or as a midi\n                               value in Note/Octave format (&quot;C4&quot;, &quot;Eb3&quot;...etc&quot;)\n                               See <a href = "https://github.com/Tonejs/Tone.js/wiki/Instruments">\n                               Tone</a>. Defaults to 440 hz</p>\n',
                type: "String | Number"
              }, {
                name: "velocity",
                description: "<p>velocity of the note to play (ranging from 0 to 1)</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "secondsFromNow",
                description: "<p>time from now (in seconds) at which to play</p>\n",
                type: "Number",
                optional: !0
              }],
              itemtype: "method",
              name: "triggerAttack",
              example: ['\n<div><code>\nvar monoSynth = new p5.MonoSynth();\n\nfunction mousePressed() {\n  monoSynth.triggerAttack("E3");\n}\n\nfunction mouseReleased() {\n  monoSynth.triggerRelease();\n}\n</code></div>'],
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12206,
              description: "<p>Trigger the release of the Envelope. This is similar to releasing\nthe key on a piano and letting the sound fade according to the\nrelease level and release time.</p>\n",
              params: [{
                name: "secondsFromNow",
                description: "<p>time to trigger the release</p>\n",
                type: "Number"
              }],
              itemtype: "method",
              name: "triggerRelease",
              example: ['\n<div><code>\nvar monoSynth = new p5.MonoSynth();\n\nfunction mousePressed() {\n  monoSynth.triggerAttack("E3");\n}\n\nfunction mouseReleased() {\n  monoSynth.triggerRelease();\n}\n</code></div>'],
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12230,
              description: '<p>Set values like a traditional\n<a href="https://en.wikipedia.org/wiki/Synthesizer#/media/File:ADSR_parameter.svg">\nADSR envelope\n</a>.</p>\n',
              itemtype: "method",
              name: "setADSR",
              params: [{
                name: "attackTime",
                description: "<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",
                type: "Number"
              }, {
                name: "decayTime",
                description: "<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "susRatio",
                description: "<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "releaseTime",
                description: "<p>Time in seconds from now (defaults to 0)</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12254,
              description: "<p>Getters and Setters</p>\n",
              itemtype: "property",
              name: "attack",
              type: "Number",
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12258,
              itemtype: "property",
              name: "decay",
              type: "Number",
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12261,
              itemtype: "property",
              name: "sustain",
              type: "Number",
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12264,
              itemtype: "property",
              name: "release",
              type: "Number",
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12301,
              description: "<p>MonoSynth amp</p>\n",
              itemtype: "method",
              name: "amp",
              params: [{
                name: "vol",
                description: "<p>desired volume</p>\n",
                type: "Number"
              }, {
                name: "rampTime",
                description: "<p>Time to reach new volume</p>\n",
                type: "Number",
                optional: !0
              }],
              return: {
                description: "new volume value",
                type: "Number"
              },
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12315,
              description: "<p>Connect to a p5.sound / Web Audio object.</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "<p>A p5.sound or Web Audio object</p>\n",
                type: "Object"
              }],
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12325,
              description: "<p>Disconnect all outputs</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12335,
              description: "<p>Get rid of the MonoSynth and free up its resources / memory.</p>\n",
              itemtype: "method",
              name: "dispose",
              class: "p5.MonoSynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12405,
              description: "<p>An object that holds information about which notes have been played and\nwhich notes are currently being played. New notes are added as keys\non the fly. While a note has been attacked, but not released, the value of the\nkey is the audiovoice which is generating that note. When notes are released,\nthe value of the key becomes undefined.</p>\n",
              itemtype: "property",
              name: "notes",
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12417,
              description: "<p>A PolySynth must have at least 1 voice, defaults to 8</p>\n",
              itemtype: "property",
              name: "polyvalue",
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12422,
              description: "<p>Monosynth that generates the sound for each note that is triggered. The\np5.PolySynth defaults to using the p5.MonoSynth as its voice.</p>\n",
              itemtype: "property",
              name: "AudioVoice",
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12453,
              description: "<p>Play a note by triggering noteAttack and noteRelease with sustain time</p>\n",
              itemtype: "method",
              name: "play",
              params: [{
                name: "note",
                description: "<p>midi note to play (ranging from 0 to 127 - 60 being a middle C)</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "velocity",
                description: "<p>velocity of the note to play (ranging from 0 to 1)</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "secondsFromNow",
                description: "<p>time from now (in seconds) at which to play</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "sustainTime",
                description: "<p>time to sustain before releasing the envelope</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ['\n<div><code>\nvar polySynth;\n\nfunction setup() {\n  var cnv = createCanvas(100, 100);\n  cnv.mousePressed(playSynth);\n\n  polySynth = new p5.PolySynth();\n\n  textAlign(CENTER);\n  text(\'click to play\', width/2, height/2);\n}\n\nfunction playSynth() {\n  // note duration (in seconds)\n  var dur = 0.1;\n\n  // time from now (in seconds)\n  var time = 0;\n\n  // velocity (volume, from 0 to 1)\n  var vel = 0.1;\n\n  polySynth.play("G2", vel, 0, dur);\n  polySynth.play("C3", vel, 0, dur);\n  polySynth.play("G3", vel, 0, dur);\n\n  background(random(255), random(255), 255);\n  text(\'click to play\', width/2, height/2);\n}\n</code></div>'],
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12499,
              description: "<p>noteADSR sets the envelope for a specific note that has just been triggered.\nUsing this method modifies the envelope of whichever audiovoice is being used\nto play the desired note. The envelope should be reset before noteRelease is called\nin order to prevent the modified envelope from being used on other notes.</p>\n",
              itemtype: "method",
              name: "noteADSR",
              params: [{
                name: "note",
                description: "<p>Midi note on which ADSR should be set.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "attackTime",
                description: "<p>Time (in seconds before envelope\n                              reaches Attack Level</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "decayTime",
                description: "<p>Time (in seconds) before envelope\n                              reaches Decay/Sustain Level</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "susRatio",
                description: "<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                              where 1.0 = attackLevel, 0.0 = releaseLevel.\n                              The susRatio determines the decayLevel and the level at which the\n                              sustain portion of the envelope will sustain.\n                              For example, if attackLevel is 0.4, releaseLevel is 0,\n                              and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                              increased to 1.0 (using <code>setRange</code>),\n                              then decayLevel would increase proportionally, to become 0.5.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "releaseTime",
                description: "<p>Time in seconds from now (defaults to 0)</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12527,
              description: "<p>Set the PolySynths global envelope. This method modifies the envelopes of each\nmonosynth so that all notes are played with this envelope.</p>\n",
              itemtype: "method",
              name: "setADSR",
              params: [{
                name: "attackTime",
                description: "<p>Time (in seconds before envelope\n                               reaches Attack Level</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "decayTime",
                description: "<p>Time (in seconds) before envelope\n                               reaches Decay/Sustain Level</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "susRatio",
                description: "<p>Ratio between attackLevel and releaseLevel, on a scale from 0 to 1,\n                               where 1.0 = attackLevel, 0.0 = releaseLevel.\n                               The susRatio determines the decayLevel and the level at which the\n                               sustain portion of the envelope will sustain.\n                               For example, if attackLevel is 0.4, releaseLevel is 0,\n                               and susAmt is 0.5, the decayLevel would be 0.2. If attackLevel is\n                               increased to 1.0 (using <code>setRange</code>),\n                               then decayLevel would increase proportionally, to become 0.5.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "releaseTime",
                description: "<p>Time in seconds from now (defaults to 0)</p>\n",
                type: "Number",
                optional: !0
              }],
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12551,
              description: "<p>Trigger the Attack, and Decay portion of a MonoSynth.\nSimilar to holding down a key on a piano, but it will\nhold the sustain level until you let go.</p>\n",
              itemtype: "method",
              name: "noteAttack",
              params: [{
                name: "note",
                description: "<p>midi note on which attack should be triggered.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "velocity",
                description: "<p>velocity of the note to play (ranging from 0 to 1)/</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "secondsFromNow",
                description: "<p>time from now (in seconds)</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ['\n<div><code>\nvar polySynth = new p5.PolySynth();\nvar pitches = ["G", "D", "G", "C"];\nvar octaves = [2, 3, 4];\n\nfunction mousePressed() {\n  // play a chord: multiple notes at the same time\n  for (var i = 0; i < 4; i++) {\n    var note = random(pitches) + random(octaves);\n    polySynth.noteAttack(note, 0.1);\n  }\n}\n\nfunction mouseReleased() {\n  // release all voices\n  polySynth.noteRelease();\n}\n</code></div>'],
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12641,
              description: "<p>Trigger the Release of an AudioVoice note. This is similar to releasing\nthe key on a piano and letting the sound fade according to the\nrelease level and release time.</p>\n",
              itemtype: "method",
              name: "noteRelease",
              params: [{
                name: "note",
                description: "<p>midi note on which attack should be triggered.\n                                  If no value is provided, all notes will be released.</p>\n",
                type: "Number",
                optional: !0
              }, {
                name: "secondsFromNow",
                description: "<p>time to trigger the release</p>\n",
                type: "Number",
                optional: !0
              }],
              example: ['\n<div><code>\nvar pitches = ["G", "D", "G", "C"];\nvar octaves = [2, 3, 4];\nvar polySynth = new p5.PolySynth();\n\nfunction mousePressed() {\n  // play a chord: multiple notes at the same time\n  for (var i = 0; i < 4; i++) {\n    var note = random(pitches) + random(octaves);\n    polySynth.noteAttack(note, 0.1);\n  }\n}\n\nfunction mouseReleased() {\n  // release all voices\n  polySynth.noteRelease();\n}\n</code></div>\n'],
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12706,
              description: "<p>Connect to a p5.sound / Web Audio object.</p>\n",
              itemtype: "method",
              name: "connect",
              params: [{
                name: "unit",
                description: "<p>A p5.sound or Web Audio object</p>\n",
                type: "Object"
              }],
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12716,
              description: "<p>Disconnect all outputs</p>\n",
              itemtype: "method",
              name: "disconnect",
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12726,
              description: "<p>Get rid of the MonoSynth and free up its resources / memory.</p>\n",
              itemtype: "method",
              name: "dispose",
              class: "p5.PolySynth",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12794,
              description: '<p>The p5.Distortion is built with a\n<a href="http://www.w3.org/TR/webaudio/#WaveShaperNode">\nWeb Audio WaveShaper Node</a>.</p>\n',
              itemtype: "property",
              name: "WaveShaperNode",
              type: "AudioNode",
              class: "p5.Distortion",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12809,
              description: "<p>Process a sound source, optionally specify amount and oversample values.</p>\n",
              itemtype: "method",
              name: "process",
              params: [{
                name: "amount",
                description: "<p>Unbounded distortion amount.\n                               Normal values range from 0-1.</p>\n",
                type: "Number",
                optional: !0,
                optdefault: "0.25"
              }, {
                name: "oversample",
                description: "<p>&#39;none&#39;, &#39;2x&#39;, or &#39;4x&#39;.</p>\n",
                type: "String",
                optional: !0,
                optdefault: "'none'"
              }],
              class: "p5.Distortion",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12821,
              description: "<p>Set the amount and oversample of the waveshaper distortion.</p>\n",
              itemtype: "method",
              name: "set",
              params: [{
                name: "amount",
                description: "<p>Unbounded distortion amount.\n                               Normal values range from 0-1.</p>\n",
                type: "Number",
                optional: !0,
                optdefault: "0.25"
              }, {
                name: "oversample",
                description: "<p>&#39;none&#39;, &#39;2x&#39;, or &#39;4x&#39;.</p>\n",
                type: "String",
                optional: !0,
                optdefault: "'none'"
              }],
              class: "p5.Distortion",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12839,
              description: "<p>Return the distortion amount, typically between 0-1.</p>\n",
              itemtype: "method",
              name: "getAmount",
              return: {
                description: "Unbounded distortion amount.\n                 Normal values range from 0-1.",
                type: "Number"
              },
              class: "p5.Distortion",
              module: "p5.sound",
              submodule: "p5.sound"
            }, {
              file: "lib/addons/p5.sound.js",
              line: 12849,
              description: "<p>Return the oversampling.</p>\n",
              itemtype: "method",
              name: "getOversample",
              return: {
                description: "Oversample can either be 'none', '2x', or '4x'.",
                type: "String"
              },
              class: "p5.Distortion",
              module: "p5.sound",
              submodule: "p5.sound"
            }],
            warnings: [{
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:16"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:61"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:91"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:121"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:319"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:350"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:387"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:484"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:514"
            }, {
              message: "unknown tag: alt",
              line: " src/color/creating_reading.js:554"
            }, {
              message: "unknown tag: alt",
              line: " src/color/p5.Color.js:52"
            }, {
              message: "unknown tag: alt",
              line: " src/color/p5.Color.js:248"
            }, {
              message: "unknown tag: alt",
              line: " src/color/p5.Color.js:275"
            }, {
              message: "unknown tag: alt",
              line: " src/color/p5.Color.js:302"
            }, {
              message: "unknown tag: alt",
              line: " src/color/p5.Color.js:329"
            }, {
              message: "unknown tag: alt",
              line: " src/color/p5.Color.js:763"
            }, {
              message: "unknown tag: alt",
              line: " src/color/setting.js:15"
            }, {
              message: "unknown tag: alt",
              line: " src/color/setting.js:185"
            }, {
              message: "unknown tag: alt",
              line: " src/color/setting.js:223"
            }, {
              message: "unknown tag: alt",
              line: " src/color/setting.js:344"
            }, {
              message: "unknown tag: alt",
              line: " src/color/setting.js:501"
            }, {
              message: "unknown tag: alt",
              line: " src/color/setting.js:542"
            }, {
              message: "unknown tag: alt",
              line: " src/color/setting.js:582"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:16"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:149"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:209"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:239"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:295"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:330"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:384"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:467"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/2d_primitives.js:524"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/attributes.js:14"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/attributes.js:83"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/attributes.js:113"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/attributes.js:182"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/attributes.js:213"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/attributes.js:250"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/attributes.js:317"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:13"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:96"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:139"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:194"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:273"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:364"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:406"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/curves.js:502"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:22"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:70"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:270"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:270"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:270"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:398"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:443"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:508"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:568"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:654"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:720"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:813"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:813"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:813"
            }, {
              message: "unknown tag: alt",
              line: " src/core/shape/vertex.js:813"
            }, {
              message: "unknown tag: alt",
              line: " src/core/constants.js:58"
            }, {
              message: "unknown tag: alt",
              line: " src/core/constants.js:77"
            }, {
              message: "unknown tag: alt",
              line: " src/core/constants.js:96"
            }, {
              message: "unknown tag: alt",
              line: " src/core/constants.js:115"
            }, {
              message: "unknown tag: alt",
              line: " src/core/constants.js:134"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:22"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:53"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:80"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:112"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:181"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:281"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:306"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:325"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:344"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:360"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:376"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:454"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:505"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/core/environment.js:540"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/core/environment.js:560"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:560"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:617"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:648"
            }, {
              message: "unknown tag: alt",
              line: " src/core/environment.js:671"
            }, {
              message: "unknown tag: alt",
              line: " src/core/main.js:49"
            }, {
              message: "unknown tag: alt",
              line: " src/core/main.js:90"
            }, {
              message: "unknown tag: alt",
              line: " src/core/main.js:121"
            }, {
              message: "unknown tag: alt",
              line: " src/core/main.js:400"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:52"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:122"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:159"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:194"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:255"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:304"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:370"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:424"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:480"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:538"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:581"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:623"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:671"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:711"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:760"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:798"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Element.js:836"
            }, {
              message: "unknown tag: alt",
              line: " src/core/p5.Graphics.js:65"
            }, {
              message: "unknown tag: alt",
              line: " src/core/rendering.js:17"
            }, {
              message: "unknown tag: alt",
              line: " src/core/rendering.js:119"
            }, {
              message: "unknown tag: alt",
              line: " src/core/rendering.js:174"
            }, {
              message: "unknown tag: alt",
              line: " src/core/rendering.js:197"
            }, {
              message: "unknown tag: alt",
              line: " src/core/rendering.js:236"
            }, {
              message: "unknown tag: alt",
              line: " src/core/structure.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/core/structure.js:74"
            }, {
              message: "unknown tag: alt",
              line: " src/core/structure.js:116"
            }, {
              message: "unknown tag: alt",
              line: " src/core/structure.js:181"
            }, {
              message: "unknown tag: alt",
              line: " src/core/structure.js:247"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:13"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:135"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:161"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:201"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:231"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:261"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:291"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:366"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:405"
            }, {
              message: "unknown tag: alt",
              line: " src/core/transform.js:444"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:23"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:46"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:69"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:135"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:166"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:197"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:233"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:278"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:322"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:380"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:419"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:462"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:506"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:538"
            }, {
              message: "unknown tag: alt",
              line: " src/events/acceleration.js:597"
            }, {
              message: "unknown tag: alt",
              line: " src/events/keyboard.js:18"
            }, {
              message: "unknown tag: alt",
              line: " src/events/keyboard.js:45"
            }, {
              message: "unknown tag: alt",
              line: " src/events/keyboard.js:74"
            }, {
              message: "unknown tag: alt",
              line: " src/events/keyboard.js:107"
            }, {
              message: "unknown tag: alt",
              line: " src/events/keyboard.js:194"
            }, {
              message: "unknown tag: alt",
              line: " src/events/keyboard.js:246"
            }, {
              message: "unknown tag: alt",
              line: " src/events/keyboard.js:310"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:22"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:48"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:74"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:106"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:137"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:174"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:211"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:252"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:294"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:333"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:424"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:479"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:560"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:637"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:715"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:785"
            }, {
              message: "unknown tag: alt",
              line: " src/events/mouse.js:870"
            }, {
              message: "unknown tag: alt",
              line: " src/events/touch.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/events/touch.js:74"
            }, {
              message: "unknown tag: alt",
              line: " src/events/touch.js:149"
            }, {
              message: "unknown tag: alt",
              line: " src/events/touch.js:222"
            }, {
              message: "unknown tag: alt",
              line: " src/image/image.js:22"
            }, {
              message: "unknown tag: alt",
              line: " src/image/image.js:102"
            }, {
              message: "unknown tag: alt",
              line: " src/image/image.js:195"
            }, {
              message: "unknown tag: alt",
              line: " src/image/loading_displaying.js:17"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/image/loading_displaying.js:110"
            }, {
              message: "unknown tag: alt",
              line: " src/image/loading_displaying.js:127"
            }, {
              message: "unknown tag: alt",
              line: " src/image/loading_displaying.js:298"
            }, {
              message: "unknown tag: alt",
              line: " src/image/loading_displaying.js:398"
            }, {
              message: "unknown tag: alt",
              line: " src/image/loading_displaying.js:464"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:90"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:117"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:152"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:231"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:267"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:315"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:360"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:398"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:483"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:564"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:627"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:663"
            }, {
              message: "unknown tag: alt",
              line: " src/image/p5.Image.js:785"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:14"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:83"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:177"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:236"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:415"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:520"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:557"
            }, {
              message: "unknown tag: alt",
              line: " src/image/pixels.js:631"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:19"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:180"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:293"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:603"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/io/files.js:714"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:714"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:1516"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:1574"
            }, {
              message: "unknown tag: alt",
              line: " src/io/files.js:1642"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:56"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:120"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:168"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:214"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:263"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:328"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:523"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:576"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:618"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:879"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:944"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:994"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:1040"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:1085"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:1132"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:1177"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:1230"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.Table.js:1296"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.TableRow.js:42"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.TableRow.js:106"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.TableRow.js:150"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.TableRow.js:195"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.TableRow.js:243"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.TableRow.js:299"
            }, {
              message: "unknown tag: alt",
              line: " src/io/p5.XML.js:11"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:36"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:76"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:121"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:190"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:240"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:279"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:327"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:383"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:422"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:478"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:528"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:578"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:631"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:665"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:704"
            }, {
              message: "unknown tag: alt",
              line: " src/math/calculation.js:751"
            }, {
              message: "unknown tag: alt",
              line: " src/math/math.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/math/noise.js:40"
            }, {
              message: "unknown tag: alt",
              line: " src/math/noise.js:187"
            }, {
              message: "unknown tag: alt",
              line: " src/math/noise.js:253"
            }, {
              message: "unknown tag: alt",
              line: " src/math/p5.Vector.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/math/random.js:48"
            }, {
              message: "unknown tag: alt",
              line: " src/math/random.js:79"
            }, {
              message: "unknown tag: alt",
              line: " src/math/random.js:166"
            }, {
              message: "unknown tag: alt",
              line: " src/math/trigonometry.js:124"
            }, {
              message: "unknown tag: alt",
              line: " src/math/trigonometry.js:160"
            }, {
              message: "unknown tag: alt",
              line: " src/math/trigonometry.js:188"
            }, {
              message: "unknown tag: alt",
              line: " src/math/trigonometry.js:216"
            }, {
              message: "unknown tag: alt",
              line: " src/math/trigonometry.js:296"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/math/trigonometry.js:332"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/math/trigonometry.js:347"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/math/trigonometry.js:362"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/attributes.js:13"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/attributes.js:84"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/attributes.js:122"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/attributes.js:154"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/attributes.js:191"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/loading_displaying.js:16"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/loading_displaying.js:143"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/loading_displaying.js:230"
            }, {
              message: "unknown tag: alt",
              line: " src/typography/p5.Font.js:32"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/conversion.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:15"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:44"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:132"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:243"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:319"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:381"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:459"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/string_functions.js:548"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/time_date.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/time_date.js:34"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/time_date.js:56"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/time_date.js:78"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/time_date.js:101"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/time_date.js:123"
            }, {
              message: "unknown tag: alt",
              line: " src/utilities/time_date.js:145"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/3d_primitives.js:15"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/interaction.js:13"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/interaction.js:146"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/interaction.js:146"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/interaction.js:146"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/interaction.js:146"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/interaction.js:146"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/interaction.js:380"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/light.js:12"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/light.js:101"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/light.js:212"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/loading.js:14"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/loading.js:14"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/loading.js:244"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:14"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/webgl/material.js:83"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:83"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:176"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:211"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:302"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:302"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:381"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/material.js:430"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:15"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:61"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:126"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:209"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:486"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:545"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:603"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:751"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:823"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.Camera.js:1088"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.RendererGL.js:216"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.RendererGL.js:428"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.RendererGL.js:475"
            }, {
              message: "unknown tag: alt",
              line: " src/webgl/p5.RendererGL.js:516"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:117"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/webgl/text.js:160"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:193"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:205"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:235"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:249"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:387"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " src/webgl/text.js:387"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:457"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:472"
            }, {
              message: "replacing incorrect tag: function with method",
              line: " src/webgl/text.js:547"
            }, {
              message: "unknown tag: alt",
              line: " lib/addons/p5.dom.js:245"
            }, {
              message: "unknown tag: alt",
              line: " lib/addons/p5.dom.js:313"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.dom.js:1453"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.dom.js:1557"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.dom.js:1596"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.dom.js:1690"
            }, {
              message: "replacing incorrect tag: params with param",
              line: " lib/addons/p5.sound.js:1854"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.sound.js:1854"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.sound.js:2473"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.sound.js:7653"
            }, {
              message: "replacing incorrect tag: returns with return",
              line: " lib/addons/p5.sound.js:9620"
            }, {
              message: "Missing item type\nConversions adapted from <http://www.easyrgb.com/en/math.php>.\n\nIn these functions, hue is always in the range [0, 1], just like all other\ncomponents are in the range [0, 1]. 'Brightness' and 'value' are used\ninterchangeably.",
              line: " src/color/color_conversion.js:10"
            }, {
              message: "Missing item type\nConvert an HSBA array to HSLA.",
              line: " src/color/color_conversion.js:21"
            }, {
              message: "Missing item type\nConvert an HSBA array to RGBA.",
              line: " src/color/color_conversion.js:47"
            }, {
              message: "Missing item type\nConvert an HSLA array to HSBA.",
              line: " src/color/color_conversion.js:102"
            }, {
              message: "Missing item type\nConvert an HSLA array to RGBA.\n\nWe need to change basis from HSLA to something that can be more easily be\nprojected onto RGBA. We will choose hue and brightness as our first two\ncomponents, and pick a convenient third one ('zest') so that we don't need\nto calculate formal HSBA saturation.",
              line: " src/color/color_conversion.js:125"
            }, {
              message: "Missing item type\nConvert an RGBA array to HSBA.",
              line: " src/color/color_conversion.js:189"
            }, {
              message: "Missing item type\nConvert an RGBA array to HSLA.",
              line: " src/color/color_conversion.js:228"
            }, {
              message: "Missing item type\nHue is the same in HSB and HSL, but the maximum value may be different.\nThis function will return the HSB-normalized saturation when supplied with\nan HSB color object, but will default to the HSL-normalized saturation\notherwise.",
              line: " src/color/p5.Color.js:410"
            }, {
              message: "Missing item type\nSaturation is scaled differently in HSB and HSL. This function will return\nthe HSB saturation when supplied with an HSB color object, but will default\nto the HSL saturation otherwise.",
              line: " src/color/p5.Color.js:441"
            }, {
              message: "Missing item type\nCSS named colors.",
              line: " src/color/p5.Color.js:460"
            }, {
              message: "Missing item type\nThese regular expressions are used to build up the patterns for matching\nviable CSS color strings: fragmenting the regexes in this way increases the\nlegibility and comprehensibility of the code.\n\nNote that RGB values of .9 are not parsed by IE, but are supported here for\ncolor string consistency.",
              line: " src/color/p5.Color.js:613"
            }, {
              message: "Missing item type\nFull color string patterns. The capture groups are necessary.",
              line: " src/color/p5.Color.js:626"
            }, {
              message: "Missing item type\nFor a number of different inputs, returns a color formatted as [r, g, b, a]\narrays, with each component normalized between 0 and 1.",
              line: " src/color/p5.Color.js:763"
            }, {
              message: "Missing item type\nFor HSB and HSL, interpret the gray level as a brightness/lightness\nvalue (they are equivalent when chroma is zero). For RGB, normalize the\ngray level according to the blue maximum.",
              line: " src/color/p5.Color.js:989"
            }, {
              message: "Missing item type\nReturns the current framerate.",
              line: " src/core/environment.js:255"
            }, {
              message: 'Missing item type\nSpecifies the number of frames to be displayed every second. For example,\nthe function call frameRate(30) will attempt to refresh 30 times a second.\nIf the processor is not fast enough to maintain the specified rate, the\nframe rate will not be achieved. Setting the frame rate within <a href="#/p5/setup">setup()</a> is\nrecommended. The default rate is 60 frames per second.\n\nCalling <a href="#/p5/frameRate">frameRate()</a> with no arguments returns the current framerate.',
              line: " src/core/environment.js:265"
            }, {
              message: "Missing item type",
              line: " src/core/error_helpers.js:1"
            }, {
              message: 'Missing item type\nValidates parameters\nparam  {String}               func    the name of the function\nparam  {Array}                args    user input arguments\n\nexample:\n var a;\n ellipse(10,10,a,5);\nconsole ouput:\n "It looks like ellipse received an empty variable in spot #2."\n\nexample:\n ellipse(10,"foo",5,5);\nconsole output:\n "ellipse was expecting a number for parameter #1,\n          received "foo" instead."',
              line: " src/core/error_helpers.js:584"
            }, {
              message: "Missing item type\nPrints out all the colors in the color pallete with white text.\nFor color blindness testing.",
              line: " src/core/error_helpers.js:645"
            }, {
              message: "Missing item type",
              line: " src/core/helpers.js:1"
            }, {
              message: 'Missing item type\n_globalInit\n\nTODO: ???\nif sketch is on window\nassume "global" mode\nand instantiate p5 automatically\notherwise do nothing',
              line: " src/core/init.js:5"
            }, {
              message: "Missing item type",
              line: " src/core/legacy.js:1"
            }, {
              message: "Missing item type\nHelper fxn for sharing pixel methods",
              line: " src/core/p5.Element.js:969"
            }, {
              message: "Missing item type\nResize our canvas element.",
              line: " src/core/p5.Renderer.js:96"
            }, {
              message: "Missing item type\nHelper fxn to check font type (system or otf)",
              line: " src/core/p5.Renderer.js:301"
            }, {
              message: "Missing item type\nHelper fxn to measure ascent and descent.\nAdapted from http://stackoverflow.com/a/25355178",
              line: " src/core/p5.Renderer.js:354"
            }, {
              message: "Missing item type\np5.Renderer2D\nThe 2D graphics canvas renderer class.\nextends p5.Renderer",
              line: " src/core/p5.Renderer2D.js:9"
            }, {
              message: "Missing item type\nGenerate a cubic Bezier representing an arc on the unit circle of total\nangle `size` radians, beginning `start` radians above the x-axis. Up to\nfour of these curves are combined to make a full arc.\n\nSee www.joecridge.me/bezier.pdf for an explanation of the method.",
              line: " src/core/p5.Renderer2D.js:392"
            }, {
              message: "Missing item type\nshim for Uint8ClampedArray.slice\n(allows arrayCopy to work with pixels[])\nwith thanks to http://halfpapstudios.com/blog/tag/html5-canvas/\nEnumerable set to false to protect for...in from\nUint8ClampedArray.prototype pollution.",
              line: " src/core/shim.js:23"
            }, {
              message: "Missing item type\nthis is implementation of Object.assign() which is unavailable in\nIE11 and (non-Chrome) Android browsers.\nThe assign() method is used to copy the values of all enumerable\nown properties from one or more source objects to a target object.\nIt will return the target object.\nModified from https://github.com/ljharb/object.assign",
              line: " src/core/shim.js:45"
            }, {
              message: "Missing item type\nprivate helper function to handle the user passing in objects\nduring construction or calls to create()",
              line: " src/data/p5.TypedDict.js:203"
            }, {
              message: "Missing item type\nprivate helper function to ensure that the user passed in valid\nvalues for the Dictionary type",
              line: " src/data/p5.TypedDict.js:394"
            }, {
              message: "Missing item type\nprivate helper function to ensure that the user passed in valid\nvalues for the Dictionary type",
              line: " src/data/p5.TypedDict.js:437"
            }, {
              message: "Missing item type\nprivate helper function for finding lowest or highest value\nthe argument 'flip' is used to flip the comparison arrow\nfrom 'less than' to 'greater than'",
              line: " src/data/p5.TypedDict.js:554"
            }, {
              message: "Missing item type\nprivate helper function for finding lowest or highest key\nthe argument 'flip' is used to flip the comparison arrow\nfrom 'less than' to 'greater than'",
              line: " src/data/p5.TypedDict.js:621"
            }, {
              message: "Missing item type\n_updatePAccelerations updates the pAcceleration values",
              line: " src/events/acceleration.js:124"
            }, {
              message: "Missing item type\nHolds the key codes of currently pressed keys.",
              line: " src/events/keyboard.js:12"
            }, {
              message: "Missing item type\nThe onblur function is called when the user is no longer focused\non the p5 element. Because the keyup events will not fire if the user is\nnot focused on the element we must assume all keys currently down have\nbeen released.",
              line: " src/events/keyboard.js:300"
            }, {
              message: "Missing item type\nThe checkDownKeys function returns a boolean true if any keys pressed\nand a false if no keys are currently pressed.\n\nHelps avoid instances where a multiple keys are pressed simultaneously and\nreleasing a single key will then switch the\nkeyIsPressed property to true.",
              line: " src/events/keyboard.js:387"
            }, {
              message: "Missing item type\nThis module defines the filters for use with image buffers.\n\nThis module is basically a collection of functions stored in an object\nas opposed to modules. The functions are destructive, modifying\nthe passed in canvas rather than creating a copy.\n\nGenerally speaking users of this module will use the Filters.apply method\non a canvas to create an effect.\n\nA number of functions are borrowed/adapted from\nhttp://www.html5rocks.com/en/tutorials/canvas/imagefilters/\nor the java processing implementation.",
              line: " src/image/filters.js:3"
            }, {
              message: "Missing item type\nReturns the pixel buffer for a canvas",
              line: " src/image/filters.js:26"
            }, {
              message: "Missing item type\nReturns a 32 bit number containing ARGB data at ith pixel in the\n1D array containing pixels data.",
              line: " src/image/filters.js:46"
            }, {
              message: "Missing item type\nModifies pixels RGBA values to values contained in the data object.",
              line: " src/image/filters.js:67"
            }, {
              message: "Missing item type\nReturns the ImageData object for a canvas\nhttps://developer.mozilla.org/en-US/docs/Web/API/ImageData",
              line: " src/image/filters.js:87"
            }, {
              message: "Missing item type\nReturns a blank ImageData object.",
              line: " src/image/filters.js:107"
            }, {
              message: "Missing item type\nApplys a filter function to a canvas.\n\nThe difference between this and the actual filter functions defined below\nis that the filter functions generally modify the pixel buffer but do\nnot actually put that data back to the canvas (where it would actually\nupdate what is visible). By contrast this method does make the changes\nactually visible in the canvas.\n\nThe apply method is the method that callers of this module would generally\nuse. It has been separated from the actual filters to support an advanced\nuse case of creating a filter chain that executes without actually updating\nthe canvas in between everystep.",
              line: " src/image/filters.js:122"
            }, {
              message: "Missing item type\nConverts the image to black and white pixels depending if they are above or\nbelow the threshold defined by the level parameter. The parameter must be\nbetween 0.0 (black) and 1.0 (white). If no level is specified, 0.5 is used.\n\nBorrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/",
              line: " src/image/filters.js:159"
            }, {
              message: "Missing item type\nConverts any colors in the image to grayscale equivalents.\nNo parameter is used.\n\nBorrowed from http://www.html5rocks.com/en/tutorials/canvas/imagefilters/",
              line: " src/image/filters.js:193"
            }, {
              message: "Missing item type\nSets the alpha channel to entirely opaque. No parameter is used.",
              line: " src/image/filters.js:216"
            }, {
              message: "Missing item type\nSets each pixel to its inverse value. No parameter is used.",
              line: " src/image/filters.js:232"
            }, {
              message: "Missing item type\nLimits each channel of the image to the number of colors specified as\nthe parameter. The parameter can be set to values between 2 and 255, but\nresults are most noticeable in the lower ranges.\n\nAdapted from java based processing implementation",
              line: " src/image/filters.js:247"
            }, {
              message: "Missing item type\nreduces the bright areas in an image",
              line: " src/image/filters.js:279"
            }, {
              message: "Missing item type\nincreases the bright areas in an image",
              line: " src/image/filters.js:367"
            }, {
              message: 'Missing item type\nThis module defines the p5 methods for the <a href="#/p5.Image">p5.Image</a> class\nfor drawing images to the main display canvas.',
              line: " src/image/image.js:8"
            }, {
              message: "Missing item type\nValidates clipping params. Per drawImage spec sWidth and sHight cannot be\nnegative or greater than image intrinsic width and height",
              line: " src/image/loading_displaying.js:110"
            }, {
              message: "Missing item type\nApply the current tint color to the input image, return the resulting\ncanvas.",
              line: " src/image/loading_displaying.js:427"
            }, {
              message: 'Missing item type\nThis module defines the <a href="#/p5.Image">p5.Image</a> class and P5 methods for\ndrawing images to the main display canvas.',
              line: " src/image/p5.Image.js:9"
            }, {
              message: "Missing item type\nHelper fxn for sharing pixel methods",
              line: " src/image/p5.Image.js:222"
            }, {
              message: 'Missing item type\nGenerate a blob of file data as a url to prepare for download.\nAccepts an array of data, a filename, and an extension (optional).\nThis is a private function because it does not do any formatting,\nbut it is used by <a href="#/p5/saveStrings">saveStrings</a>, <a href="#/p5/saveJSON">saveJSON</a>, <a href="#/p5/saveTable">saveTable</a> etc.',
              line: " src/io/files.js:1768"
            }, {
              message: "Missing item type\nReturns a file extension, or another string\nif the provided parameter has no extension.",
              line: " src/io/files.js:1837"
            }, {
              message: "Missing item type\nReturns true if the browser is Safari, false if not.\nSafari makes trouble for downloading files.",
              line: " src/io/files.js:1870"
            }, {
              message: "Missing item type\nHelper function, a callback for download that deletes\nan invisible anchor element from the DOM once the file\nhas been automatically downloaded.",
              line: " src/io/files.js:1882"
            }, {
              message: 'Missing item type\nTable Options\n<p>Generic class for handling tabular data, typically from a\nCSV, TSV, or other sort of spreadsheet file.</p>\n<p>CSV files are\n<a href="http://en.wikipedia.org/wiki/Comma-separated_values">\ncomma separated values</a>, often with the data in quotes. TSV\nfiles use tabs as separators, and usually don\'t bother with the\nquotes.</p>\n<p>File names should end with .csv if they\'re comma separated.</p>\n<p>A rough "spec" for CSV can be found\n<a href="http://tools.ietf.org/html/rfc4180">here</a>.</p>\n<p>To load files, use the <a href="#/p5/loadTable">loadTable</a> method.</p>\n<p>To save tables to your computer, use the <a href="#/p5/save">save</a> method\n or the <a href="#/p5/saveTable">saveTable</a> method.</p>\n\nPossible options include:\n<ul>\n<li>csv - parse the table as comma-separated values\n<li>tsv - parse the table as tab-separated values\n<li>header - this table has a header (title) row\n</ul>',
              line: " src/io/p5.Table.js:11"
            }, {
              message: "Missing item type\nMultiplies a vector by a scalar and returns a new vector.",
              line: " src/math/p5.Vector.js:1611"
            }, {
              message: "Missing item type\nDivides a vector by a scalar and returns a new vector.",
              line: " src/math/p5.Vector.js:1638"
            }, {
              message: "Missing item type\nCalculates the dot product of two vectors.",
              line: " src/math/p5.Vector.js:1665"
            }, {
              message: "Missing item type\nCalculates the cross product of two vectors.",
              line: " src/math/p5.Vector.js:1679"
            }, {
              message: "Missing item type\nCalculates the Euclidean distance between two points (considering a\npoint as a vector object).",
              line: " src/math/p5.Vector.js:1693"
            }, {
              message: "Missing item type\nLinear interpolate a vector to another vector and return the result as a\nnew vector.",
              line: " src/math/p5.Vector.js:1708"
            }, {
              message: "Missing item type\nHelper function to measure ascent and descent.",
              line: " src/typography/attributes.js:284"
            }, {
              message: "Missing item type\nReturns the set of opentype glyphs for the supplied string.\n\nNote that there is not a strict one-to-one mapping between characters\nand glyphs, so the list of returned glyphs can be larger or smaller\n than the length of the given string.",
              line: " src/typography/p5.Font.js:255"
            }, {
              message: "Missing item type\nReturns an opentype path for the supplied string and position.",
              line: " src/typography/p5.Font.js:270"
            }, {
              message: "Missing item type",
              line: " src/webgl/3d_primitives.js:259"
            }, {
              message: "Missing item type\nDraws a point, a coordinate in space at the dimension of one pixel,\ngiven x, y and z coordinates. The color of the point is determined\nby the current stroke, while the point size is determined by current\nstroke weight.",
              line: " src/webgl/3d_primitives.js:745"
            }, {
              message: "Missing item type\nDraw a line given two points",
              line: " src/webgl/3d_primitives.js:1162"
            }, {
              message: "Missing item type\nParse OBJ lines into model. For reference, this is what a simple model of a\nsquare might look like:\n\nv -0.5 -0.5 0.5\nv -0.5 -0.5 -0.5\nv -0.5 0.5 -0.5\nv -0.5 0.5 0.5\n\nf 4 3 2 1",
              line: " src/webgl/loading.js:135"
            }, {
              message: "Missing item type",
              line: " src/webgl/material.js:479"
            }, {
              message: "Missing item type\nCreate a 2D array for establishing stroke connections",
              line: " src/webgl/p5.Geometry.js:190"
            }, {
              message: "Missing item type\nCreate 4 vertices for each stroke line, two at the beginning position\nand two at the end position. These vertices are displaced relative to\nthat line's normal on the GPU",
              line: " src/webgl/p5.Geometry.js:211"
            }, {
              message: "Missing item type",
              line: " src/webgl/p5.Matrix.js:1"
            }, {
              message: "Missing item type\nPRIVATE",
              line: " src/webgl/p5.Matrix.js:671"
            }, {
              message: 'Missing item type\nWelcome to RendererGL Immediate Mode.\nImmediate mode is used for drawing custom shapes\nfrom a set of vertices.  Immediate Mode is activated\nwhen you call <a href="#/p5/beginShape">beginShape()</a> & de-activated when you call <a href="#/p5/endShape">endShape()</a>.\nImmediate mode is a style of programming borrowed\nfrom OpenGL\'s (now-deprecated) immediate mode.\nIt differs from p5.js\' default, Retained Mode, which caches\ngeometries and buffers on the CPU to reduce the number of webgl\ndraw calls. Retained mode is more efficient & performative,\nhowever, Immediate Mode is useful for sketching quick\ngeometric ideas.',
              line: " src/webgl/p5.RendererGL.Immediate.js:1"
            }, {
              message: "Missing item type\nEnd shape drawing and render vertices to screen.",
              line: " src/webgl/p5.RendererGL.Immediate.js:132"
            }, {
              message: "Missing item type\ninitializes buffer defaults. runs each time a new geometry is\nregistered",
              line: " src/webgl/p5.RendererGL.Retained.js:8"
            }, {
              message: "Missing item type\ncreateBuffers description",
              line: " src/webgl/p5.RendererGL.Retained.js:47"
            }, {
              message: "Missing item type\nDraws buffers given a geometry key ID",
              line: " src/webgl/p5.RendererGL.Retained.js:191"
            }, {
              message: "Missing item type\nmodel view, projection, & normal\nmatrices",
              line: " src/webgl/p5.RendererGL.js:83"
            }, {
              message: "Missing item type\n[background description]",
              line: " src/webgl/p5.RendererGL.js:406"
            }, {
              message: "Missing item type\n[resize description]",
              line: " src/webgl/p5.RendererGL.js:676"
            }, {
              message: "Missing item type\nclears color and depth buffers\nwith r,g,b,a",
              line: " src/webgl/p5.RendererGL.js:702"
            }, {
              message: "Missing item type\n[translate description]",
              line: " src/webgl/p5.RendererGL.js:720"
            }, {
              message: "Missing item type\nScales the Model View Matrix by a vector",
              line: " src/webgl/p5.RendererGL.js:739"
            }, {
              message: "Missing item type\nturn a two dimensional array into one dimensional array",
              line: " src/webgl/p5.RendererGL.js:1060"
            }, {
              message: "Missing item type\nturn a p5.Vector Array into a one dimensional number array",
              line: " src/webgl/p5.RendererGL.js:1097"
            }, {
              message: "Missing item type\nensures that p5 is using a 3d renderer. throws an error if not.",
              line: " src/webgl/p5.RendererGL.js:1113"
            }, {
              message: "Missing item type\nHelper function for select and selectAll",
              line: " lib/addons/p5.dom.js:168"
            }, {
              message: "Missing item type\nHelper function for getElement and getElements.",
              line: " lib/addons/p5.dom.js:184"
            }, {
              message: "Missing item type\nHelpers for create methods.",
              line: " lib/addons/p5.dom.js:348"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.dom.js:487"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.dom.js:1066"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.dom.js:1147"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.dom.js:1187"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.dom.js:2864"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.dom.js:2930"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.dom.js:2992"
            }, {
              message: "Missing item type\np5.sound \nhttps://p5js.org/reference/#/libraries/p5.sound\n\nFrom the Processing Foundation and contributors\nhttps://github.com/processing/p5.js-sound/graphs/contributors\n\nMIT License (MIT)\nhttps://github.com/processing/p5.js-sound/blob/master/LICENSE\n\nSome of the many audio libraries & resources that inspire p5.sound:\n - TONE.js (c) Yotam Mann. Licensed under The MIT License (MIT). https://github.com/TONEnoTONE/Tone.js\n - buzz.js (c) Jay Salvat. Licensed under The MIT License (MIT). http://buzz.jaysalvat.com/\n - Boris Smus Web Audio API book, 2013. Licensed under the Apache License http://www.apache.org/licenses/LICENSE-2.0\n - wavesurfer.js https://github.com/katspaugh/wavesurfer.js\n - Web Audio Components by Jordan Santell https://github.com/web-audio-components\n - Wilm Thoben's Sound library for Processing https://github.com/processing/processing/tree/master/java/libraries/sound\n\n Web Audio API: http://w3.org/TR/webaudio/",
              line: " lib/addons/p5.sound.js:46"
            }, {
              message: "Missing item type\nDetermine which filetypes are supported (inspired by buzz.js)\nThe audio element (el) will only be used to test browser support for various audio formats",
              line: " lib/addons/p5.sound.js:214"
            }, {
              message: "Missing item type\nMaster contains AudioContext and the master sound output.",
              line: " lib/addons/p5.sound.js:458"
            }, {
              message: "Missing item type\na silent connection to the DesinationNode\nwhich will ensure that anything connected to it\nwill not be garbage collected",
              line: " lib/addons/p5.sound.js:554"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:570"
            }, {
              message: "Missing item type\nUsed by Osc and Envelope to chain signal math",
              line: " lib/addons/p5.sound.js:775"
            }, {
              message: "Missing item type\nThis is a helper function that the p5.SoundFile calls to load\nitself. Accepts a callback (the name of another function)\nas an optional parameter.",
              line: " lib/addons/p5.sound.js:1171"
            }, {
              message: "Missing item type\nStop playback on all of this soundfile's sources.",
              line: " lib/addons/p5.sound.js:1591"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:2030"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:2313"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:3409"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:3786"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:3807"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:3866"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:4184"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:4356"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:4514"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:4555"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:4625"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:4813"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:4870"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:5038"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:5086"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:5117"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:5138"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:5158"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:5871"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:6074"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7744"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7760"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7784"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7810"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7832"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7854"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7900"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7931"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:7949"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:8286"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:8308"
            }, {
              message: "Missing item type\nThe p5.Effect class is built\n \tusing Tone.js CrossFade",
              line: " lib/addons/p5.sound.js:8378"
            }, {
              message: "Missing item type\nIn classes that extend\np5.Effect, connect effect nodes\nto the wet parameter",
              line: " lib/addons/p5.sound.js:8384"
            }, {
              message: "Missing item type\nEQFilter extends p5.Filter with constraints\nnecessary for the p5.EQ",
              line: " lib/addons/p5.sound.js:8773"
            }, {
              message: "Missing item type\nInspired by Simple Reverb by Jordan Santell\nhttps://github.com/web-audio-components/simple-reverb/blob/master/index.js\n\nUtility function for building an impulse response\nbased on the module parameters.",
              line: " lib/addons/p5.sound.js:9883"
            }, {
              message: "Missing item type\nPrivate method to load a buffer as an Impulse Response,\nassign it to the convolverNode, and add to the Array of .impulses.",
              line: " lib/addons/p5.sound.js:10050"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:10234"
            }, {
              message: "Missing item type",
              line: " lib/addons/p5.sound.js:10259"
            }, {
              message: "Missing item type\nmusicalTimeMode variables\nmodify these only when the interval is specified in musicalTime format as a string",
              line: " lib/addons/p5.sound.js:10983"
            }, {
              message: "Missing item type\nDo not initiate the callback if timeFromNow is < 0\nThis ususually occurs for a few milliseconds when the page\nis not fully loaded\n\nThe callback should only be called until maxIterations is reached",
              line: " lib/addons/p5.sound.js:10999"
            }, {
              message: "Missing item type\ncallback invoked when the recording is over",
              line: " lib/addons/p5.sound.js:11489"
            }, {
              message: "Missing item type\ninternal method called on audio process",
              line: " lib/addons/p5.sound.js:11575"
            }, {
              message: "Missing item type\nPrivate method to ensure accurate values of this._voicesInUse\nAny time a new value is scheduled, it is necessary to increment all subsequent\nscheduledValues after attack, and decrement all subsequent\nscheduledValues after release",
              line: " lib/addons/p5.sound.js:12621"
            }, {
              message: "Missing item type\np5.sound \nhttps://p5js.org/reference/#/libraries/p5.sound\n\nFrom the Processing Foundation and contributors\nhttps://github.com/processing/p5.js-sound/graphs/contributors\n\nMIT License (MIT)\nhttps://github.com/processing/p5.js-sound/blob/master/LICENSE\n\nSome of the many audio libraries & resources that inspire p5.sound:\n - TONE.js (c) Yotam Mann. Licensed under The MIT License (MIT). https://github.com/TONEnoTONE/Tone.js\n - buzz.js (c) Jay Salvat. Licensed under The MIT License (MIT). http://buzz.jaysalvat.com/\n - Boris Smus Web Audio API book, 2013. Licensed under the Apache License http://www.apache.org/licenses/LICENSE-2.0\n - wavesurfer.js https://github.com/katspaugh/wavesurfer.js\n - Web Audio Components by Jordan Santell https://github.com/web-audio-components\n - Wilm Thoben's Sound library for Processing https://github.com/processing/processing/tree/master/java/libraries/sound\n\n Web Audio API: http://w3.org/TR/webaudio/",
              line: " lib/addons/p5.sound.min.js:3"
            }],
            consts: {
              RGB: ["p5.colorMode"],
              HSB: ["p5.colorMode"],
              HSL: ["p5.colorMode"],
              CHORD: ["p5.arc"],
              PIE: ["p5.arc"],
              OPEN: ["p5.arc"],
              CENTER: ["p5.ellipseMode", "p5.rectMode", "p5.imageMode", "p5.textAlign"],
              RADIUS: ["p5.ellipseMode", "p5.rectMode"],
              CORNER: ["p5.ellipseMode", "p5.rectMode", "p5.imageMode"],
              CORNERS: ["p5.ellipseMode", "p5.rectMode", "p5.imageMode"],
              SQUARE: ["p5.strokeCap"],
              PROJECT: ["p5.strokeCap"],
              ROUND: ["p5.strokeCap", "p5.strokeJoin"],
              MITER: ["p5.strokeJoin"],
              BEVEL: ["p5.strokeJoin"],
              POINTS: ["p5.beginShape"],
              LINES: ["p5.beginShape"],
              TRIANGLES: ["p5.beginShape"],
              TRIANGLE_FAN: ["p5.beginShape"],
              TRIANGLE_STRIP: ["p5.beginShape"],
              QUADS: ["p5.beginShape"],
              QUAD_STRIP: ["p5.beginShape"],
              CLOSE: ["p5.endShape"],
              ARROW: ["p5.cursor"],
              CROSS: ["p5.cursor"],
              HAND: ["p5.cursor"],
              MOVE: ["p5.cursor"],
              TEXT: ["p5.cursor"],
              P2D: ["p5.createCanvas", "p5.createGraphics"],
              WEBGL: ["p5.createCanvas", "p5.createGraphics"],
              BLEND: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              DARKEST: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              LIGHTEST: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              DIFFERENCE: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              MULTIPLY: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              EXCLUSION: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              SCREEN: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              REPLACE: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              OVERLAY: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              HARD_LIGHT: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              SOFT_LIGHT: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              DODGE: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              BURN: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              ADD: ["p5.blendMode", "p5.Image.blend", "p5.blend"],
              NORMAL: ["p5.blendMode", "p5.Image.blend", "p5.blend", "p5.textStyle", "p5.textureMode"],
              THRESHOLD: ["p5.Image.filter", "p5.filter"],
              GRAY: ["p5.Image.filter", "p5.filter"],
              OPAQUE: ["p5.Image.filter", "p5.filter"],
              INVERT: ["p5.Image.filter", "p5.filter"],
              POSTERIZE: ["p5.Image.filter", "p5.filter"],
              BLUR: ["p5.Image.filter", "p5.filter"],
              ERODE: ["p5.Image.filter", "p5.filter"],
              DILATE: ["p5.Image.filter", "p5.filter"],
              RADIANS: ["p5.angleMode"],
              DEGREES: ["p5.angleMode"],
              LEFT: ["p5.textAlign"],
              RIGHT: ["p5.textAlign"],
              TOP: ["p5.textAlign"],
              BOTTOM: ["p5.textAlign"],
              BASELINE: ["p5.textAlign"],
              ITALIC: ["p5.textStyle"],
              BOLD: ["p5.textStyle"],
              BOLDITALIC: ["p5.textStyle"],
              IMAGE: ["p5.textureMode"],
              VIDEO: ["p5.createCapture"],
              AUDIO: ["p5.createCapture"]
            }
          };
        }, {}],
        2: [function (e, t, n) {
          "use strict";

          n.byteLength = function (e) {
            var t = p(e),
                n = t[0],
                a = t[1];
            return 3 * (n + a) / 4 - a;
          }, n.toByteArray = function (e) {
            for (var t, n = p(e), a = n[0], r = n[1], s = new i(function (e, t, n) {
              return 3 * (t + n) / 4 - n;
            }(0, a, r)), l = 0, d = r > 0 ? a - 4 : a, c = 0; c < d; c += 4) t = o[e.charCodeAt(c)] << 18 | o[e.charCodeAt(c + 1)] << 12 | o[e.charCodeAt(c + 2)] << 6 | o[e.charCodeAt(c + 3)], s[l++] = t >> 16 & 255, s[l++] = t >> 8 & 255, s[l++] = 255 & t;

            return 2 === r && (t = o[e.charCodeAt(c)] << 2 | o[e.charCodeAt(c + 1)] >> 4, s[l++] = 255 & t), 1 === r && (t = o[e.charCodeAt(c)] << 10 | o[e.charCodeAt(c + 1)] << 4 | o[e.charCodeAt(c + 2)] >> 2, s[l++] = t >> 8 & 255, s[l++] = 255 & t), s;
          }, n.fromByteArray = function (e) {
            for (var t, n = e.length, o = n % 3, i = [], r = 0, s = n - o; r < s; r += 16383) i.push(d(e, r, r + 16383 > s ? s : r + 16383));

            return 1 === o ? (t = e[n - 1], i.push(a[t >> 2] + a[t << 4 & 63] + "==")) : 2 === o && (t = (e[n - 2] << 8) + e[n - 1], i.push(a[t >> 10] + a[t >> 4 & 63] + a[t << 2 & 63] + "=")), i.join("");
          };

          for (var a = [], o = [], i = "undefined" != typeof Uint8Array ? Uint8Array : Array, r = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", s = 0, l = r.length; s < l; ++s) a[s] = r[s], o[r.charCodeAt(s)] = s;

          function p(e) {
            var t = e.length;
            if (t % 4 > 0) throw new Error("Invalid string. Length must be a multiple of 4");
            var n = e.indexOf("=");
            return -1 === n && (n = t), [n, n === t ? 0 : 4 - n % 4];
          }

          function d(e, t, n) {
            for (var o, i, r = [], s = t; s < n; s += 3) o = (e[s] << 16 & 16711680) + (e[s + 1] << 8 & 65280) + (255 & e[s + 2]), r.push(a[(i = o) >> 18 & 63] + a[i >> 12 & 63] + a[i >> 6 & 63] + a[63 & i]);

            return r.join("");
          }

          o["-".charCodeAt(0)] = 62, o["_".charCodeAt(0)] = 63;
        }, {}],
        3: [function (e, t, n) {}, {}],
        4: [function (e, t, n) {
          /*!
           * The buffer module from node.js, for the browser.
           *
           * @author   Feross Aboukhadijeh <https://feross.org>
           * @license  MIT
           */
          "use strict";

          var a = e("base64-js"),
              o = e("ieee754");
          n.Buffer = s, n.SlowBuffer = function (e) {
            return +e != e && (e = 0), s.alloc(+e);
          }, n.INSPECT_MAX_BYTES = 50;
          var i = 2147483647;

          function r(e) {
            if (e > i) throw new RangeError('The value "' + e + '" is invalid for option "size"');
            var t = new Uint8Array(e);
            return t.__proto__ = s.prototype, t;
          }

          function s(e, t, n) {
            if ("number" == typeof e) {
              if ("string" == typeof t) throw new TypeError('The "string" argument must be of type string. Received type number');
              return d(e);
            }

            return l(e, t, n);
          }

          function l(e, t, n) {
            if ("string" == typeof e) return function (e, t) {
              if ("string" == typeof t && "" !== t || (t = "utf8"), !s.isEncoding(t)) throw new TypeError("Unknown encoding: " + t);
              var n = 0 | m(e, t),
                  a = r(n),
                  o = a.write(e, t);
              return o !== n && (a = a.slice(0, o)), a;
            }(e, t);
            if (ArrayBuffer.isView(e)) return c(e);
            if (null == e) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
            if (G(e, ArrayBuffer) || e && G(e.buffer, ArrayBuffer)) return function (e, t, n) {
              if (t < 0 || e.byteLength < t) throw new RangeError('"offset" is outside of buffer bounds');
              if (e.byteLength < t + (n || 0)) throw new RangeError('"length" is outside of buffer bounds');
              var a;
              return (a = void 0 === t && void 0 === n ? new Uint8Array(e) : void 0 === n ? new Uint8Array(e, t) : new Uint8Array(e, t, n)).__proto__ = s.prototype, a;
            }(e, t, n);
            if ("number" == typeof e) throw new TypeError('The "value" argument must not be of type number. Received type number');
            var a = e.valueOf && e.valueOf();
            if (null != a && a !== e) return s.from(a, t, n);

            var o = function (e) {
              if (s.isBuffer(e)) {
                var t = 0 | u(e.length),
                    n = r(t);
                return 0 === n.length ? n : (e.copy(n, 0, 0, t), n);
              }

              return void 0 !== e.length ? "number" != typeof e.length || U(e.length) ? r(0) : c(e) : "Buffer" === e.type && Array.isArray(e.data) ? c(e.data) : void 0;
            }(e);

            if (o) return o;
            if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return s.from(e[Symbol.toPrimitive]("string"), t, n);
            throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
          }

          function p(e) {
            if ("number" != typeof e) throw new TypeError('"size" argument must be of type number');
            if (e < 0) throw new RangeError('The value "' + e + '" is invalid for option "size"');
          }

          function d(e) {
            return p(e), r(e < 0 ? 0 : 0 | u(e));
          }

          function c(e) {
            for (var t = e.length < 0 ? 0 : 0 | u(e.length), n = r(t), a = 0; a < t; a += 1) n[a] = 255 & e[a];

            return n;
          }

          function u(e) {
            if (e >= i) throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + i.toString(16) + " bytes");
            return 0 | e;
          }

          function m(e, t) {
            if (s.isBuffer(e)) return e.length;
            if (ArrayBuffer.isView(e) || G(e, ArrayBuffer)) return e.byteLength;
            if ("string" != typeof e) throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
            var n = e.length,
                a = arguments.length > 2 && !0 === arguments[2];
            if (!a && 0 === n) return 0;

            for (var o = !1;;) switch (t) {
              case "ascii":
              case "latin1":
              case "binary":
                return n;

              case "utf8":
              case "utf-8":
                return O(e).length;

              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return 2 * n;

              case "hex":
                return n >>> 1;

              case "base64":
                return F(e).length;

              default:
                if (o) return a ? -1 : O(e).length;
                t = ("" + t).toLowerCase(), o = !0;
            }
          }

          function h(e, t, n) {
            var a = !1;
            if ((void 0 === t || t < 0) && (t = 0), t > this.length) return "";
            if ((void 0 === n || n > this.length) && (n = this.length), n <= 0) return "";
            if ((n >>>= 0) <= (t >>>= 0)) return "";

            for (e || (e = "utf8");;) switch (e) {
              case "hex":
                return j(this, t, n);

              case "utf8":
              case "utf-8":
                return C(this, t, n);

              case "ascii":
                return M(this, t, n);

              case "latin1":
              case "binary":
                return E(this, t, n);

              case "base64":
                return T(this, t, n);

              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return I(this, t, n);

              default:
                if (a) throw new TypeError("Unknown encoding: " + e);
                e = (e + "").toLowerCase(), a = !0;
            }
          }

          function f(e, t, n) {
            var a = e[t];
            e[t] = e[n], e[n] = a;
          }

          function g(e, t, n, a, o) {
            if (0 === e.length) return -1;

            if ("string" == typeof n ? (a = n, n = 0) : n > 2147483647 ? n = 2147483647 : n < -2147483648 && (n = -2147483648), U(n = +n) && (n = o ? 0 : e.length - 1), n < 0 && (n = e.length + n), n >= e.length) {
              if (o) return -1;
              n = e.length - 1;
            } else if (n < 0) {
              if (!o) return -1;
              n = 0;
            }

            if ("string" == typeof t && (t = s.from(t, a)), s.isBuffer(t)) return 0 === t.length ? -1 : y(e, t, n, a, o);
            if ("number" == typeof t) return t &= 255, "function" == typeof Uint8Array.prototype.indexOf ? o ? Uint8Array.prototype.indexOf.call(e, t, n) : Uint8Array.prototype.lastIndexOf.call(e, t, n) : y(e, [t], n, a, o);
            throw new TypeError("val must be string, number or Buffer");
          }

          function y(e, t, n, a, o) {
            var i,
                r = 1,
                s = e.length,
                l = t.length;

            if (void 0 !== a && ("ucs2" === (a = String(a).toLowerCase()) || "ucs-2" === a || "utf16le" === a || "utf-16le" === a)) {
              if (e.length < 2 || t.length < 2) return -1;
              r = 2, s /= 2, l /= 2, n /= 2;
            }

            function p(e, t) {
              return 1 === r ? e[t] : e.readUInt16BE(t * r);
            }

            if (o) {
              var d = -1;

              for (i = n; i < s; i++) if (p(e, i) === p(t, -1 === d ? 0 : i - d)) {
                if (-1 === d && (d = i), i - d + 1 === l) return d * r;
              } else -1 !== d && (i -= i - d), d = -1;
            } else for (n + l > s && (n = s - l), i = n; i >= 0; i--) {
              for (var c = !0, u = 0; u < l; u++) if (p(e, i + u) !== p(t, u)) {
                c = !1;
                break;
              }

              if (c) return i;
            }

            return -1;
          }

          function v(e, t, n, a) {
            n = Number(n) || 0;
            var o = e.length - n;
            a ? (a = Number(a)) > o && (a = o) : a = o;
            var i = t.length;
            a > i / 2 && (a = i / 2);

            for (var r = 0; r < a; ++r) {
              var s = parseInt(t.substr(2 * r, 2), 16);
              if (U(s)) return r;
              e[n + r] = s;
            }

            return r;
          }

          function b(e, t, n, a) {
            return B(O(t, e.length - n), e, n, a);
          }

          function w(e, t, n, a) {
            return B(function (e) {
              for (var t = [], n = 0; n < e.length; ++n) t.push(255 & e.charCodeAt(n));

              return t;
            }(t), e, n, a);
          }

          function x(e, t, n, a) {
            return w(e, t, n, a);
          }

          function S(e, t, n, a) {
            return B(F(t), e, n, a);
          }

          function k(e, t, n, a) {
            return B(function (e, t) {
              for (var n, a, o, i = [], r = 0; r < e.length && !((t -= 2) < 0); ++r) n = e.charCodeAt(r), a = n >> 8, o = n % 256, i.push(o), i.push(a);

              return i;
            }(t, e.length - n), e, n, a);
          }

          function T(e, t, n) {
            return 0 === t && n === e.length ? a.fromByteArray(e) : a.fromByteArray(e.slice(t, n));
          }

          function C(e, t, n) {
            n = Math.min(e.length, n);

            for (var a = [], o = t; o < n;) {
              var i,
                  r,
                  s,
                  l,
                  p = e[o],
                  d = null,
                  c = p > 239 ? 4 : p > 223 ? 3 : p > 191 ? 2 : 1;
              if (o + c <= n) switch (c) {
                case 1:
                  p < 128 && (d = p);
                  break;

                case 2:
                  128 == (192 & (i = e[o + 1])) && (l = (31 & p) << 6 | 63 & i) > 127 && (d = l);
                  break;

                case 3:
                  i = e[o + 1], r = e[o + 2], 128 == (192 & i) && 128 == (192 & r) && (l = (15 & p) << 12 | (63 & i) << 6 | 63 & r) > 2047 && (l < 55296 || l > 57343) && (d = l);
                  break;

                case 4:
                  i = e[o + 1], r = e[o + 2], s = e[o + 3], 128 == (192 & i) && 128 == (192 & r) && 128 == (192 & s) && (l = (15 & p) << 18 | (63 & i) << 12 | (63 & r) << 6 | 63 & s) > 65535 && l < 1114112 && (d = l);
              }
              null === d ? (d = 65533, c = 1) : d > 65535 && (d -= 65536, a.push(d >>> 10 & 1023 | 55296), d = 56320 | 1023 & d), a.push(d), o += c;
            }

            return function (e) {
              var t = e.length;
              if (t <= _) return String.fromCharCode.apply(String, e);

              for (var n = "", a = 0; a < t;) n += String.fromCharCode.apply(String, e.slice(a, a += _));

              return n;
            }(a);
          }

          n.kMaxLength = i, s.TYPED_ARRAY_SUPPORT = function () {
            try {
              var e = new Uint8Array(1);
              return e.__proto__ = {
                __proto__: Uint8Array.prototype,
                foo: function () {
                  return 42;
                }
              }, 42 === e.foo();
            } catch (e) {
              return !1;
            }
          }(), s.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(s.prototype, "parent", {
            enumerable: !0,
            get: function () {
              if (s.isBuffer(this)) return this.buffer;
            }
          }), Object.defineProperty(s.prototype, "offset", {
            enumerable: !0,
            get: function () {
              if (s.isBuffer(this)) return this.byteOffset;
            }
          }), "undefined" != typeof Symbol && null != Symbol.species && s[Symbol.species] === s && Object.defineProperty(s, Symbol.species, {
            value: null,
            configurable: !0,
            enumerable: !1,
            writable: !1
          }), s.poolSize = 8192, s.from = function (e, t, n) {
            return l(e, t, n);
          }, s.prototype.__proto__ = Uint8Array.prototype, s.__proto__ = Uint8Array, s.alloc = function (e, t, n) {
            return function (e, t, n) {
              return p(e), e <= 0 ? r(e) : void 0 !== t ? "string" == typeof n ? r(e).fill(t, n) : r(e).fill(t) : r(e);
            }(e, t, n);
          }, s.allocUnsafe = function (e) {
            return d(e);
          }, s.allocUnsafeSlow = function (e) {
            return d(e);
          }, s.isBuffer = function (e) {
            return null != e && !0 === e._isBuffer && e !== s.prototype;
          }, s.compare = function (e, t) {
            if (G(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)), G(t, Uint8Array) && (t = s.from(t, t.offset, t.byteLength)), !s.isBuffer(e) || !s.isBuffer(t)) throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
            if (e === t) return 0;

            for (var n = e.length, a = t.length, o = 0, i = Math.min(n, a); o < i; ++o) if (e[o] !== t[o]) {
              n = e[o], a = t[o];
              break;
            }

            return n < a ? -1 : a < n ? 1 : 0;
          }, s.isEncoding = function (e) {
            switch (String(e).toLowerCase()) {
              case "hex":
              case "utf8":
              case "utf-8":
              case "ascii":
              case "latin1":
              case "binary":
              case "base64":
              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return !0;

              default:
                return !1;
            }
          }, s.concat = function (e, t) {
            if (!Array.isArray(e)) throw new TypeError('"list" argument must be an Array of Buffers');
            if (0 === e.length) return s.alloc(0);
            var n;
            if (void 0 === t) for (t = 0, n = 0; n < e.length; ++n) t += e[n].length;
            var a = s.allocUnsafe(t),
                o = 0;

            for (n = 0; n < e.length; ++n) {
              var i = e[n];
              if (G(i, Uint8Array) && (i = s.from(i)), !s.isBuffer(i)) throw new TypeError('"list" argument must be an Array of Buffers');
              i.copy(a, o), o += i.length;
            }

            return a;
          }, s.byteLength = m, s.prototype._isBuffer = !0, s.prototype.swap16 = function () {
            var e = this.length;
            if (e % 2 != 0) throw new RangeError("Buffer size must be a multiple of 16-bits");

            for (var t = 0; t < e; t += 2) f(this, t, t + 1);

            return this;
          }, s.prototype.swap32 = function () {
            var e = this.length;
            if (e % 4 != 0) throw new RangeError("Buffer size must be a multiple of 32-bits");

            for (var t = 0; t < e; t += 4) f(this, t, t + 3), f(this, t + 1, t + 2);

            return this;
          }, s.prototype.swap64 = function () {
            var e = this.length;
            if (e % 8 != 0) throw new RangeError("Buffer size must be a multiple of 64-bits");

            for (var t = 0; t < e; t += 8) f(this, t, t + 7), f(this, t + 1, t + 6), f(this, t + 2, t + 5), f(this, t + 3, t + 4);

            return this;
          }, s.prototype.toString = function () {
            var e = this.length;
            return 0 === e ? "" : 0 === arguments.length ? C(this, 0, e) : h.apply(this, arguments);
          }, s.prototype.toLocaleString = s.prototype.toString, s.prototype.equals = function (e) {
            if (!s.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
            return this === e || 0 === s.compare(this, e);
          }, s.prototype.inspect = function () {
            var e = "",
                t = n.INSPECT_MAX_BYTES;
            return e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim(), this.length > t && (e += " ... "), "<Buffer " + e + ">";
          }, s.prototype.compare = function (e, t, n, a, o) {
            if (G(e, Uint8Array) && (e = s.from(e, e.offset, e.byteLength)), !s.isBuffer(e)) throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
            if (void 0 === t && (t = 0), void 0 === n && (n = e ? e.length : 0), void 0 === a && (a = 0), void 0 === o && (o = this.length), t < 0 || n > e.length || a < 0 || o > this.length) throw new RangeError("out of range index");
            if (a >= o && t >= n) return 0;
            if (a >= o) return -1;
            if (t >= n) return 1;
            if (this === e) return 0;

            for (var i = (o >>>= 0) - (a >>>= 0), r = (n >>>= 0) - (t >>>= 0), l = Math.min(i, r), p = this.slice(a, o), d = e.slice(t, n), c = 0; c < l; ++c) if (p[c] !== d[c]) {
              i = p[c], r = d[c];
              break;
            }

            return i < r ? -1 : r < i ? 1 : 0;
          }, s.prototype.includes = function (e, t, n) {
            return -1 !== this.indexOf(e, t, n);
          }, s.prototype.indexOf = function (e, t, n) {
            return g(this, e, t, n, !0);
          }, s.prototype.lastIndexOf = function (e, t, n) {
            return g(this, e, t, n, !1);
          }, s.prototype.write = function (e, t, n, a) {
            if (void 0 === t) a = "utf8", n = this.length, t = 0;else if (void 0 === n && "string" == typeof t) a = t, n = this.length, t = 0;else {
              if (!isFinite(t)) throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
              t >>>= 0, isFinite(n) ? (n >>>= 0, void 0 === a && (a = "utf8")) : (a = n, n = void 0);
            }
            var o = this.length - t;
            if ((void 0 === n || n > o) && (n = o), e.length > 0 && (n < 0 || t < 0) || t > this.length) throw new RangeError("Attempt to write outside buffer bounds");
            a || (a = "utf8");

            for (var i = !1;;) switch (a) {
              case "hex":
                return v(this, e, t, n);

              case "utf8":
              case "utf-8":
                return b(this, e, t, n);

              case "ascii":
                return w(this, e, t, n);

              case "latin1":
              case "binary":
                return x(this, e, t, n);

              case "base64":
                return S(this, e, t, n);

              case "ucs2":
              case "ucs-2":
              case "utf16le":
              case "utf-16le":
                return k(this, e, t, n);

              default:
                if (i) throw new TypeError("Unknown encoding: " + a);
                a = ("" + a).toLowerCase(), i = !0;
            }
          }, s.prototype.toJSON = function () {
            return {
              type: "Buffer",
              data: Array.prototype.slice.call(this._arr || this, 0)
            };
          };
          var _ = 4096;

          function M(e, t, n) {
            var a = "";
            n = Math.min(e.length, n);

            for (var o = t; o < n; ++o) a += String.fromCharCode(127 & e[o]);

            return a;
          }

          function E(e, t, n) {
            var a = "";
            n = Math.min(e.length, n);

            for (var o = t; o < n; ++o) a += String.fromCharCode(e[o]);

            return a;
          }

          function j(e, t, n) {
            var a,
                o = e.length;
            (!t || t < 0) && (t = 0), (!n || n < 0 || n > o) && (n = o);

            for (var i = "", r = t; r < n; ++r) i += (a = e[r]) < 16 ? "0" + a.toString(16) : a.toString(16);

            return i;
          }

          function I(e, t, n) {
            for (var a = e.slice(t, n), o = "", i = 0; i < a.length; i += 2) o += String.fromCharCode(a[i] + 256 * a[i + 1]);

            return o;
          }

          function R(e, t, n) {
            if (e % 1 != 0 || e < 0) throw new RangeError("offset is not uint");
            if (e + t > n) throw new RangeError("Trying to access beyond buffer length");
          }

          function N(e, t, n, a, o, i) {
            if (!s.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
            if (t > o || t < i) throw new RangeError('"value" argument is out of bounds');
            if (n + a > e.length) throw new RangeError("Index out of range");
          }

          function A(e, t, n, a, o, i) {
            if (n + a > e.length) throw new RangeError("Index out of range");
            if (n < 0) throw new RangeError("Index out of range");
          }

          function D(e, t, n, a, i) {
            return t = +t, n >>>= 0, i || A(e, 0, n, 4), o.write(e, t, n, a, 23, 4), n + 4;
          }

          function L(e, t, n, a, i) {
            return t = +t, n >>>= 0, i || A(e, 0, n, 8), o.write(e, t, n, a, 52, 8), n + 8;
          }

          s.prototype.slice = function (e, t) {
            var n = this.length;
            (e = ~~e) < 0 ? (e += n) < 0 && (e = 0) : e > n && (e = n), (t = void 0 === t ? n : ~~t) < 0 ? (t += n) < 0 && (t = 0) : t > n && (t = n), t < e && (t = e);
            var a = this.subarray(e, t);
            return a.__proto__ = s.prototype, a;
          }, s.prototype.readUIntLE = function (e, t, n) {
            e >>>= 0, t >>>= 0, n || R(e, t, this.length);

            for (var a = this[e], o = 1, i = 0; ++i < t && (o *= 256);) a += this[e + i] * o;

            return a;
          }, s.prototype.readUIntBE = function (e, t, n) {
            e >>>= 0, t >>>= 0, n || R(e, t, this.length);

            for (var a = this[e + --t], o = 1; t > 0 && (o *= 256);) a += this[e + --t] * o;

            return a;
          }, s.prototype.readUInt8 = function (e, t) {
            return e >>>= 0, t || R(e, 1, this.length), this[e];
          }, s.prototype.readUInt16LE = function (e, t) {
            return e >>>= 0, t || R(e, 2, this.length), this[e] | this[e + 1] << 8;
          }, s.prototype.readUInt16BE = function (e, t) {
            return e >>>= 0, t || R(e, 2, this.length), this[e] << 8 | this[e + 1];
          }, s.prototype.readUInt32LE = function (e, t) {
            return e >>>= 0, t || R(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3];
          }, s.prototype.readUInt32BE = function (e, t) {
            return e >>>= 0, t || R(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
          }, s.prototype.readIntLE = function (e, t, n) {
            e >>>= 0, t >>>= 0, n || R(e, t, this.length);

            for (var a = this[e], o = 1, i = 0; ++i < t && (o *= 256);) a += this[e + i] * o;

            return a >= (o *= 128) && (a -= Math.pow(2, 8 * t)), a;
          }, s.prototype.readIntBE = function (e, t, n) {
            e >>>= 0, t >>>= 0, n || R(e, t, this.length);

            for (var a = t, o = 1, i = this[e + --a]; a > 0 && (o *= 256);) i += this[e + --a] * o;

            return i >= (o *= 128) && (i -= Math.pow(2, 8 * t)), i;
          }, s.prototype.readInt8 = function (e, t) {
            return e >>>= 0, t || R(e, 1, this.length), 128 & this[e] ? -1 * (255 - this[e] + 1) : this[e];
          }, s.prototype.readInt16LE = function (e, t) {
            e >>>= 0, t || R(e, 2, this.length);
            var n = this[e] | this[e + 1] << 8;
            return 32768 & n ? 4294901760 | n : n;
          }, s.prototype.readInt16BE = function (e, t) {
            e >>>= 0, t || R(e, 2, this.length);
            var n = this[e + 1] | this[e] << 8;
            return 32768 & n ? 4294901760 | n : n;
          }, s.prototype.readInt32LE = function (e, t) {
            return e >>>= 0, t || R(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
          }, s.prototype.readInt32BE = function (e, t) {
            return e >>>= 0, t || R(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
          }, s.prototype.readFloatLE = function (e, t) {
            return e >>>= 0, t || R(e, 4, this.length), o.read(this, e, !0, 23, 4);
          }, s.prototype.readFloatBE = function (e, t) {
            return e >>>= 0, t || R(e, 4, this.length), o.read(this, e, !1, 23, 4);
          }, s.prototype.readDoubleLE = function (e, t) {
            return e >>>= 0, t || R(e, 8, this.length), o.read(this, e, !0, 52, 8);
          }, s.prototype.readDoubleBE = function (e, t) {
            return e >>>= 0, t || R(e, 8, this.length), o.read(this, e, !1, 52, 8);
          }, s.prototype.writeUIntLE = function (e, t, n, a) {
            e = +e, t >>>= 0, n >>>= 0, a || N(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var o = 1,
                i = 0;

            for (this[t] = 255 & e; ++i < n && (o *= 256);) this[t + i] = e / o & 255;

            return t + n;
          }, s.prototype.writeUIntBE = function (e, t, n, a) {
            e = +e, t >>>= 0, n >>>= 0, a || N(this, e, t, n, Math.pow(2, 8 * n) - 1, 0);
            var o = n - 1,
                i = 1;

            for (this[t + o] = 255 & e; --o >= 0 && (i *= 256);) this[t + o] = e / i & 255;

            return t + n;
          }, s.prototype.writeUInt8 = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1;
          }, s.prototype.writeUInt16LE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2;
          }, s.prototype.writeUInt16BE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2;
          }, s.prototype.writeUInt32LE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4;
          }, s.prototype.writeUInt32BE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4;
          }, s.prototype.writeIntLE = function (e, t, n, a) {
            if (e = +e, t >>>= 0, !a) {
              var o = Math.pow(2, 8 * n - 1);
              N(this, e, t, n, o - 1, -o);
            }

            var i = 0,
                r = 1,
                s = 0;

            for (this[t] = 255 & e; ++i < n && (r *= 256);) e < 0 && 0 === s && 0 !== this[t + i - 1] && (s = 1), this[t + i] = (e / r >> 0) - s & 255;

            return t + n;
          }, s.prototype.writeIntBE = function (e, t, n, a) {
            if (e = +e, t >>>= 0, !a) {
              var o = Math.pow(2, 8 * n - 1);
              N(this, e, t, n, o - 1, -o);
            }

            var i = n - 1,
                r = 1,
                s = 0;

            for (this[t + i] = 255 & e; --i >= 0 && (r *= 256);) e < 0 && 0 === s && 0 !== this[t + i + 1] && (s = 1), this[t + i] = (e / r >> 0) - s & 255;

            return t + n;
          }, s.prototype.writeInt8 = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1;
          }, s.prototype.writeInt16LE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2;
          }, s.prototype.writeInt16BE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2;
          }, s.prototype.writeInt32LE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4;
          }, s.prototype.writeInt32BE = function (e, t, n) {
            return e = +e, t >>>= 0, n || N(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4;
          }, s.prototype.writeFloatLE = function (e, t, n) {
            return D(this, e, t, !0, n);
          }, s.prototype.writeFloatBE = function (e, t, n) {
            return D(this, e, t, !1, n);
          }, s.prototype.writeDoubleLE = function (e, t, n) {
            return L(this, e, t, !0, n);
          }, s.prototype.writeDoubleBE = function (e, t, n) {
            return L(this, e, t, !1, n);
          }, s.prototype.copy = function (e, t, n, a) {
            if (!s.isBuffer(e)) throw new TypeError("argument should be a Buffer");
            if (n || (n = 0), a || 0 === a || (a = this.length), t >= e.length && (t = e.length), t || (t = 0), a > 0 && a < n && (a = n), a === n) return 0;
            if (0 === e.length || 0 === this.length) return 0;
            if (t < 0) throw new RangeError("targetStart out of bounds");
            if (n < 0 || n >= this.length) throw new RangeError("Index out of range");
            if (a < 0) throw new RangeError("sourceEnd out of bounds");
            a > this.length && (a = this.length), e.length - t < a - n && (a = e.length - t + n);
            var o = a - n;
            if (this === e && "function" == typeof Uint8Array.prototype.copyWithin) this.copyWithin(t, n, a);else if (this === e && n < t && t < a) for (var i = o - 1; i >= 0; --i) e[i + t] = this[i + n];else Uint8Array.prototype.set.call(e, this.subarray(n, a), t);
            return o;
          }, s.prototype.fill = function (e, t, n, a) {
            if ("string" == typeof e) {
              if ("string" == typeof t ? (a = t, t = 0, n = this.length) : "string" == typeof n && (a = n, n = this.length), void 0 !== a && "string" != typeof a) throw new TypeError("encoding must be a string");
              if ("string" == typeof a && !s.isEncoding(a)) throw new TypeError("Unknown encoding: " + a);

              if (1 === e.length) {
                var o = e.charCodeAt(0);
                ("utf8" === a && o < 128 || "latin1" === a) && (e = o);
              }
            } else "number" == typeof e && (e &= 255);

            if (t < 0 || this.length < t || this.length < n) throw new RangeError("Out of range index");
            if (n <= t) return this;
            var i;
            if (t >>>= 0, n = void 0 === n ? this.length : n >>> 0, e || (e = 0), "number" == typeof e) for (i = t; i < n; ++i) this[i] = e;else {
              var r = s.isBuffer(e) ? e : s.from(e, a),
                  l = r.length;
              if (0 === l) throw new TypeError('The value "' + e + '" is invalid for argument "value"');

              for (i = 0; i < n - t; ++i) this[i + t] = r[i % l];
            }
            return this;
          };
          var P = /[^+/0-9A-Za-z-_]/g;

          function O(e, t) {
            var n;
            t = t || 1 / 0;

            for (var a = e.length, o = null, i = [], r = 0; r < a; ++r) {
              if ((n = e.charCodeAt(r)) > 55295 && n < 57344) {
                if (!o) {
                  if (n > 56319) {
                    (t -= 3) > -1 && i.push(239, 191, 189);
                    continue;
                  }

                  if (r + 1 === a) {
                    (t -= 3) > -1 && i.push(239, 191, 189);
                    continue;
                  }

                  o = n;
                  continue;
                }

                if (n < 56320) {
                  (t -= 3) > -1 && i.push(239, 191, 189), o = n;
                  continue;
                }

                n = 65536 + (o - 55296 << 10 | n - 56320);
              } else o && (t -= 3) > -1 && i.push(239, 191, 189);

              if (o = null, n < 128) {
                if ((t -= 1) < 0) break;
                i.push(n);
              } else if (n < 2048) {
                if ((t -= 2) < 0) break;
                i.push(n >> 6 | 192, 63 & n | 128);
              } else if (n < 65536) {
                if ((t -= 3) < 0) break;
                i.push(n >> 12 | 224, n >> 6 & 63 | 128, 63 & n | 128);
              } else {
                if (!(n < 1114112)) throw new Error("Invalid code point");
                if ((t -= 4) < 0) break;
                i.push(n >> 18 | 240, n >> 12 & 63 | 128, n >> 6 & 63 | 128, 63 & n | 128);
              }
            }

            return i;
          }

          function F(e) {
            return a.toByteArray(function (e) {
              if ((e = (e = e.split("=")[0]).trim().replace(P, "")).length < 2) return "";

              for (; e.length % 4 != 0;) e += "=";

              return e;
            }(e));
          }

          function B(e, t, n, a) {
            for (var o = 0; o < a && !(o + n >= t.length || o >= e.length); ++o) t[o + n] = e[o];

            return o;
          }

          function G(e, t) {
            return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name;
          }

          function U(e) {
            return e != e;
          }
        }, {
          "base64-js": 2,
          ieee754: 8
        }],
        5: [function (e, n, a) {
          (function (t, o) {
            /*!
             * @overview es6-promise - a tiny implementation of Promises/A+.
             * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)
             * @license   Licensed under MIT license
             *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE
             * @version   4.1.1
             */
            !function (e, t) {
              "object" == typeof a && void 0 !== n ? n.exports = t() : e.ES6Promise = t();
            }(this, function () {
              "use strict";

              function n(e) {
                return "function" == typeof e;
              }

              var a = Array.isArray ? Array.isArray : function (e) {
                return "[object Array]" === Object.prototype.toString.call(e);
              },
                  i = 0,
                  r = void 0,
                  s = void 0,
                  l = function (e, t) {
                f[i] = e, f[i + 1] = t, 2 === (i += 2) && (s ? s(g) : x());
              },
                  p = "undefined" != typeof window ? window : void 0,
                  d = p || {},
                  c = d.MutationObserver || d.WebKitMutationObserver,
                  u = "undefined" == typeof self && void 0 !== t && "[object process]" === {}.toString.call(t),
                  m = "undefined" != typeof Uint8ClampedArray && "undefined" != typeof importScripts && "undefined" != typeof MessageChannel;

              function h() {
                var e = setTimeout;
                return function () {
                  return e(g, 1);
                };
              }

              var f = new Array(1e3);

              function g() {
                for (var e = 0; e < i; e += 2) (0, f[e])(f[e + 1]), f[e] = void 0, f[e + 1] = void 0;

                i = 0;
              }

              var y,
                  v,
                  b,
                  w,
                  x = void 0;

              function S(e, t) {
                var n = arguments,
                    a = this,
                    o = new this.constructor(C);
                void 0 === o[T] && z(o);
                var i,
                    r = a._state;
                return r ? (i = n[r - 1], l(function () {
                  return G(r, o, i, a._result);
                })) : P(a, o, e, t), o;
              }

              function k(e) {
                if (e && "object" == typeof e && e.constructor === this) return e;
                var t = new this(C);
                return N(t, e), t;
              }

              u ? x = function () {
                return t.nextTick(g);
              } : c ? (v = 0, b = new c(g), w = document.createTextNode(""), b.observe(w, {
                characterData: !0
              }), x = function () {
                w.data = v = ++v % 2;
              }) : m ? ((y = new MessageChannel()).port1.onmessage = g, x = function () {
                return y.port2.postMessage(0);
              }) : x = void 0 === p && "function" == typeof e ? function () {
                try {
                  var t = e("vertx");
                  return void 0 !== (r = t.runOnLoop || t.runOnContext) ? function () {
                    r(g);
                  } : h();
                } catch (e) {
                  return h();
                }
              }() : h();
              var T = Math.random().toString(36).substring(16);

              function C() {}

              var _ = void 0,
                  M = 1,
                  E = 2,
                  j = new F();

              function I(e) {
                try {
                  return e.then;
                } catch (e) {
                  return j.error = e, j;
                }
              }

              function R(e, t, a) {
                t.constructor === e.constructor && a === S && t.constructor.resolve === k ? function (e, t) {
                  t._state === M ? D(e, t._result) : t._state === E ? L(e, t._result) : P(t, void 0, function (t) {
                    return N(e, t);
                  }, function (t) {
                    return L(e, t);
                  });
                }(e, t) : a === j ? (L(e, j.error), j.error = null) : void 0 === a ? D(e, t) : n(a) ? function (e, t, n) {
                  l(function (e) {
                    var a = !1,
                        o = function (e, t, n, a) {
                      try {
                        e.call(t, n, a);
                      } catch (e) {
                        return e;
                      }
                    }(n, t, function (n) {
                      a || (a = !0, t !== n ? N(e, n) : D(e, n));
                    }, function (t) {
                      a || (a = !0, L(e, t));
                    }, e._label);

                    !a && o && (a = !0, L(e, o));
                  }, e);
                }(e, t, a) : D(e, t);
              }

              function N(e, t) {
                var n, a;
                e === t ? L(e, new TypeError("You cannot resolve a promise with itself")) : (a = typeof (n = t), null === n || "object" !== a && "function" !== a ? D(e, t) : R(e, t, I(t)));
              }

              function A(e) {
                e._onerror && e._onerror(e._result), O(e);
              }

              function D(e, t) {
                e._state === _ && (e._result = t, e._state = M, 0 !== e._subscribers.length && l(O, e));
              }

              function L(e, t) {
                e._state === _ && (e._state = E, e._result = t, l(A, e));
              }

              function P(e, t, n, a) {
                var o = e._subscribers,
                    i = o.length;
                e._onerror = null, o[i] = t, o[i + M] = n, o[i + E] = a, 0 === i && e._state && l(O, e);
              }

              function O(e) {
                var t = e._subscribers,
                    n = e._state;

                if (0 !== t.length) {
                  for (var a = void 0, o = void 0, i = e._result, r = 0; r < t.length; r += 3) a = t[r], o = t[r + n], a ? G(n, a, o, i) : o(i);

                  e._subscribers.length = 0;
                }
              }

              function F() {
                this.error = null;
              }

              var B = new F();

              function G(e, t, a, o) {
                var i = n(a),
                    r = void 0,
                    s = void 0,
                    l = void 0,
                    p = void 0;

                if (i) {
                  if ((r = function (e, t) {
                    try {
                      return e(t);
                    } catch (e) {
                      return B.error = e, B;
                    }
                  }(a, o)) === B ? (p = !0, s = r.error, r.error = null) : l = !0, t === r) return void L(t, new TypeError("A promises callback cannot return that same promise."));
                } else r = o, l = !0;

                t._state !== _ || (i && l ? N(t, r) : p ? L(t, s) : e === M ? D(t, r) : e === E && L(t, r));
              }

              var U = 0;

              function z(e) {
                e[T] = U++, e._state = void 0, e._result = void 0, e._subscribers = [];
              }

              function q(e, t) {
                this._instanceConstructor = e, this.promise = new e(C), this.promise[T] || z(this.promise), a(t) ? (this.length = t.length, this._remaining = t.length, this._result = new Array(this.length), 0 === this.length ? D(this.promise, this._result) : (this.length = this.length || 0, this._enumerate(t), 0 === this._remaining && D(this.promise, this._result))) : L(this.promise, new Error("Array Methods must be provided an Array"));
              }

              function V(e) {
                this[T] = U++, this._result = this._state = void 0, this._subscribers = [], C !== e && ("function" != typeof e && function () {
                  throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
                }(), this instanceof V ? function (e, t) {
                  try {
                    t(function (t) {
                      N(e, t);
                    }, function (t) {
                      L(e, t);
                    });
                  } catch (t) {
                    L(e, t);
                  }
                }(this, e) : function () {
                  throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
                }());
              }

              return q.prototype._enumerate = function (e) {
                for (var t = 0; this._state === _ && t < e.length; t++) this._eachEntry(e[t], t);
              }, q.prototype._eachEntry = function (e, t) {
                var n = this._instanceConstructor,
                    a = n.resolve;

                if (a === k) {
                  var o = I(e);
                  if (o === S && e._state !== _) this._settledAt(e._state, t, e._result);else if ("function" != typeof o) this._remaining--, this._result[t] = e;else if (n === V) {
                    var i = new n(C);
                    R(i, e, o), this._willSettleAt(i, t);
                  } else this._willSettleAt(new n(function (t) {
                    return t(e);
                  }), t);
                } else this._willSettleAt(a(e), t);
              }, q.prototype._settledAt = function (e, t, n) {
                var a = this.promise;
                a._state === _ && (this._remaining--, e === E ? L(a, n) : this._result[t] = n), 0 === this._remaining && D(a, this._result);
              }, q.prototype._willSettleAt = function (e, t) {
                var n = this;
                P(e, void 0, function (e) {
                  return n._settledAt(M, t, e);
                }, function (e) {
                  return n._settledAt(E, t, e);
                });
              }, V.all = function (e) {
                return new q(this, e).promise;
              }, V.race = function (e) {
                var t = this;
                return a(e) ? new t(function (n, a) {
                  for (var o = e.length, i = 0; i < o; i++) t.resolve(e[i]).then(n, a);
                }) : new t(function (e, t) {
                  return t(new TypeError("You must pass an array to race."));
                });
              }, V.resolve = k, V.reject = function (e) {
                var t = new this(C);
                return L(t, e), t;
              }, V._setScheduler = function (e) {
                s = e;
              }, V._setAsap = function (e) {
                l = e;
              }, V._asap = l, V.prototype = {
                constructor: V,
                then: S,
                catch: function (e) {
                  return this.then(null, e);
                }
              }, V.polyfill = function () {
                var e = void 0;
                if (void 0 !== o) e = o;else if ("undefined" != typeof self) e = self;else try {
                  e = Function("return this")();
                } catch (e) {
                  throw new Error("polyfill failed because global object is unavailable in this environment");
                }
                var t = e.Promise;

                if (t) {
                  var n = null;

                  try {
                    n = Object.prototype.toString.call(t.resolve());
                  } catch (e) {}

                  if ("[object Promise]" === n && !t.cast) return;
                }

                e.Promise = V;
              }, V.Promise = V, V;
            });
          }).call(this, e("_process"), void 0 !== t ? t : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
        }, {
          _process: 11
        }],
        6: [function (e, t, n) {
          !function (e, a) {
            if (void 0 !== n && void 0 !== t) a(0, t);else {
              var o = {
                exports: {}
              };
              a(0, o), e.fetchJsonp = o.exports;
            }
          }(this, function (e, t) {
            "use strict";

            var n = {
              timeout: 5e3,
              jsonpCallback: "callback",
              jsonpCallbackFunction: null
            };

            function a(e) {
              try {
                delete window[e];
              } catch (t) {
                window[e] = void 0;
              }
            }

            function o(e) {
              var t = document.getElementById(e);
              t && document.getElementsByTagName("head")[0].removeChild(t);
            }

            t.exports = function (e) {
              var t = arguments.length <= 1 || void 0 === arguments[1] ? {} : arguments[1],
                  i = e,
                  r = t.timeout || n.timeout,
                  s = t.jsonpCallback || n.jsonpCallback,
                  l = void 0;
              return new Promise(function (n, p) {
                var d = t.jsonpCallbackFunction || "jsonp_" + Date.now() + "_" + Math.ceil(1e5 * Math.random()),
                    c = s + "_" + d;
                window[d] = function (e) {
                  n({
                    ok: !0,
                    json: function () {
                      return Promise.resolve(e);
                    }
                  }), l && clearTimeout(l), o(c), a(d);
                }, i += -1 === i.indexOf("?") ? "?" : "&";
                var u = document.createElement("script");
                u.setAttribute("src", "" + i + s + "=" + d), t.charset && u.setAttribute("charset", t.charset), u.id = c, document.getElementsByTagName("head")[0].appendChild(u), l = setTimeout(function () {
                  p(new Error("JSONP request to " + e + " timed out")), a(d), o(c), window[d] = function () {
                    a(d);
                  };
                }, r), u.onerror = function () {
                  p(new Error("JSONP request to " + e + " failed")), a(d), o(c), l && clearTimeout(l);
                };
              });
            };
          });
        }, {}],
        7: [function (e, t, n) {
          /*! @source http://purl.eligrey.com/github/FileSaver.js/blob/master/FileSaver.js */
          var a = a || function (e) {
            "use strict";

            if (!(void 0 === e || "undefined" != typeof navigator && /MSIE [1-9]\./.test(navigator.userAgent))) {
              var t = e.document,
                  n = function () {
                return e.URL || e.webkitURL || e;
              },
                  a = t.createElementNS("http://www.w3.org/1999/xhtml", "a"),
                  o = "download" in a,
                  i = /constructor/i.test(e.HTMLElement) || e.safari,
                  r = /CriOS\/[\d]+/.test(navigator.userAgent),
                  s = function (t) {
                (e.setImmediate || e.setTimeout)(function () {
                  throw t;
                }, 0);
              },
                  l = function (e) {
                setTimeout(function () {
                  "string" == typeof e ? n().revokeObjectURL(e) : e.remove();
                }, 4e4);
              },
                  p = function (e) {
                return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(e.type) ? new Blob([String.fromCharCode(65279), e], {
                  type: e.type
                }) : e;
              },
                  d = function (t, d, c) {
                c || (t = p(t));

                var u,
                    m = this,
                    h = "application/octet-stream" === t.type,
                    f = function () {
                  !function (e, t, n) {
                    for (var a = (t = [].concat(t)).length; a--;) {
                      var o = e["on" + t[a]];
                      if ("function" == typeof o) try {
                        o.call(e, n || e);
                      } catch (e) {
                        s(e);
                      }
                    }
                  }(m, "writestart progress write writeend".split(" "));
                };

                if (m.readyState = m.INIT, o) return u = n().createObjectURL(t), void setTimeout(function () {
                  var e, t;
                  a.href = u, a.download = d, e = a, t = new MouseEvent("click"), e.dispatchEvent(t), f(), l(u), m.readyState = m.DONE;
                });
                !function () {
                  if ((r || h && i) && e.FileReader) {
                    var a = new FileReader();
                    return a.onloadend = function () {
                      var t = r ? a.result : a.result.replace(/^data:[^;]*;/, "data:attachment/file;");
                      e.open(t, "_blank") || (e.location.href = t), t = void 0, m.readyState = m.DONE, f();
                    }, a.readAsDataURL(t), void (m.readyState = m.INIT);
                  }

                  u || (u = n().createObjectURL(t)), h ? e.location.href = u : e.open(u, "_blank") || (e.location.href = u), m.readyState = m.DONE, f(), l(u);
                }();
              },
                  c = d.prototype;

              return "undefined" != typeof navigator && navigator.msSaveOrOpenBlob ? function (e, t, n) {
                return t = t || e.name || "download", n || (e = p(e)), navigator.msSaveOrOpenBlob(e, t);
              } : (c.abort = function () {}, c.readyState = c.INIT = 0, c.WRITING = 1, c.DONE = 2, c.error = c.onwritestart = c.onprogress = c.onwrite = c.onabort = c.onerror = c.onwriteend = null, function (e, t, n) {
                return new d(e, t || e.name || "download", n);
              });
            }
          }("undefined" != typeof self && self || "undefined" != typeof window && window || this.content);

          void 0 !== t && t.exports && (t.exports.saveAs = a);
        }, {}],
        8: [function (e, t, n) {
          n.read = function (e, t, n, a, o) {
            var i,
                r,
                s = 8 * o - a - 1,
                l = (1 << s) - 1,
                p = l >> 1,
                d = -7,
                c = n ? o - 1 : 0,
                u = n ? -1 : 1,
                m = e[t + c];

            for (c += u, i = m & (1 << -d) - 1, m >>= -d, d += s; d > 0; i = 256 * i + e[t + c], c += u, d -= 8);

            for (r = i & (1 << -d) - 1, i >>= -d, d += a; d > 0; r = 256 * r + e[t + c], c += u, d -= 8);

            if (0 === i) i = 1 - p;else {
              if (i === l) return r ? NaN : 1 / 0 * (m ? -1 : 1);
              r += Math.pow(2, a), i -= p;
            }
            return (m ? -1 : 1) * r * Math.pow(2, i - a);
          }, n.write = function (e, t, n, a, o, i) {
            var r,
                s,
                l,
                p = 8 * i - o - 1,
                d = (1 << p) - 1,
                c = d >> 1,
                u = 23 === o ? Math.pow(2, -24) - Math.pow(2, -77) : 0,
                m = a ? 0 : i - 1,
                h = a ? 1 : -1,
                f = t < 0 || 0 === t && 1 / t < 0 ? 1 : 0;

            for (t = Math.abs(t), isNaN(t) || t === 1 / 0 ? (s = isNaN(t) ? 1 : 0, r = d) : (r = Math.floor(Math.log(t) / Math.LN2), t * (l = Math.pow(2, -r)) < 1 && (r--, l *= 2), (t += r + c >= 1 ? u / l : u * Math.pow(2, 1 - c)) * l >= 2 && (r++, l /= 2), r + c >= d ? (s = 0, r = d) : r + c >= 1 ? (s = (t * l - 1) * Math.pow(2, o), r += c) : (s = t * Math.pow(2, c - 1) * Math.pow(2, o), r = 0)); o >= 8; e[n + m] = 255 & s, m += h, s /= 256, o -= 8);

            for (r = r << o | s, p += o; p > 0; e[n + m] = 255 & r, m += h, r /= 256, p -= 8);

            e[n + m - h] |= 128 * f;
          };
        }, {}],
        9: [function (e, t, n) {
          "use strict";

          var a;

          function o(e, t) {
            return e.b === t.b && e.a === t.a;
          }

          function i(e, t) {
            return e.b < t.b || e.b === t.b && e.a <= t.a;
          }

          function r(e, t, n) {
            var a = t.b - e.b,
                o = n.b - t.b;
            return 0 < a + o ? a < o ? t.a - e.a + a / (a + o) * (e.a - n.a) : t.a - n.a + o / (a + o) * (n.a - e.a) : 0;
          }

          function s(e, t, n) {
            var a = t.b - e.b,
                o = n.b - t.b;
            return 0 < a + o ? (t.a - n.a) * a + (t.a - e.a) * o : 0;
          }

          function l(e, t) {
            return e.a < t.a || e.a === t.a && e.b <= t.b;
          }

          function p(e, t, n) {
            var a = t.a - e.a,
                o = n.a - t.a;
            return 0 < a + o ? a < o ? t.b - e.b + a / (a + o) * (e.b - n.b) : t.b - n.b + o / (a + o) * (n.b - e.b) : 0;
          }

          function d(e, t, n) {
            var a = t.a - e.a,
                o = n.a - t.a;
            return 0 < a + o ? (t.b - n.b) * a + (t.b - e.b) * o : 0;
          }

          function c(e) {
            return i(e.b.a, e.a);
          }

          function u(e) {
            return i(e.a, e.b.a);
          }

          function m(e, t, n, a) {
            return (e = 0 > e ? 0 : e) <= (n = 0 > n ? 0 : n) ? 0 === n ? (t + a) / 2 : t + e / (e + n) * (a - t) : a + n / (e + n) * (t - a);
          }

          function h(e) {
            var t = b(e.b);
            return x(t, e.c), x(t.b, e.c), S(t, e.a), t;
          }

          function f(e, t) {
            var n = !1,
                a = !1;
            e !== t && (t.a !== e.a && (a = !0, T(t.a, e.a)), t.d !== e.d && (n = !0, C(t.d, e.d)), w(t, e), a || (x(t, e.a), e.a.c = e), n || (S(t, e.d), e.d.a = e));
          }

          function g(e) {
            var t = e.b,
                n = !1;
            e.d !== e.b.d && (n = !0, C(e.d, e.b.d)), e.c === e ? T(e.a, null) : (e.b.d.a = te(e), e.a.c = e.c, w(e, te(e)), n || S(e, e.d)), t.c === t ? (T(t.a, null), C(t.d, null)) : (e.d.a = te(t), t.a.c = t.c, w(t, te(t))), k(e);
          }

          function y(e) {
            var t = b(e),
                n = t.b;
            return w(t, e.e), t.a = e.b.a, x(n, t.a), t.d = n.d = e.d, t = t.b, w(e.b, te(e.b)), w(e.b, t), e.b.a = t.a, t.b.a.c = t.b, t.b.d = e.b.d, t.f = e.f, t.b.f = e.b.f, t;
          }

          function v(e, t) {
            var n = !1,
                a = b(e),
                o = a.b;
            return t.d !== e.d && (n = !0, C(t.d, e.d)), w(a, e.e), w(o, t), a.a = e.b.a, o.a = t.a, a.d = o.d = e.d, e.d.a = o, n || S(a, e.d), a;
          }

          function b(e) {
            var t = new ee(),
                n = new ee(),
                a = e.b.h;
            return n.h = a, a.b.h = t, t.h = e, e.b.h = n, t.b = n, t.c = t, t.e = n, n.b = t, n.c = n, n.e = t;
          }

          function w(e, t) {
            var n = e.c,
                a = t.c;
            n.b.e = t, a.b.e = e, e.c = a, t.c = n;
          }

          function x(e, t) {
            var n = t.f,
                a = new ae(t, n);
            n.e = a, t.f = a, n = a.c = e;

            do {
              n.a = a, n = n.c;
            } while (n !== e);
          }

          function S(e, t) {
            var n = t.d,
                a = new $(t, n);
            n.b = a, t.d = a, a.a = e, a.c = t.c, n = e;

            do {
              n.d = a, n = n.e;
            } while (n !== e);
          }

          function k(e) {
            var t = e.h;
            e = e.b.h, t.b.h = e, e.b.h = t;
          }

          function T(e, t) {
            var n = e.c,
                a = n;

            do {
              a.a = t, a = a.c;
            } while (a !== n);

            n = e.f, (a = e.e).f = n, n.e = a;
          }

          function C(e, t) {
            var n = e.a,
                a = n;

            do {
              a.d = t, a = a.e;
            } while (a !== n);

            n = e.d, (a = e.b).d = n, n.b = a;
          }

          function _(e) {
            var t = 0;
            return Math.abs(e[1]) > Math.abs(e[0]) && (t = 1), Math.abs(e[2]) > Math.abs(e[t]) && (t = 2), t;
          }

          var M = 4e150;

          function E(e, t) {
            e.f += t.f, e.b.f += t.b.f;
          }

          function j(e, t, n) {
            return e = e.a, t = t.a, n = n.a, t.b.a === e ? n.b.a === e ? i(t.a, n.a) ? 0 >= s(n.b.a, t.a, n.a) : 0 <= s(t.b.a, n.a, t.a) : 0 >= s(n.b.a, e, n.a) : n.b.a === e ? 0 <= s(t.b.a, e, t.a) : (t = r(t.b.a, e, t.a)) >= (e = r(n.b.a, e, n.a));
          }

          function I(e) {
            e.a.i = null;
            var t = e.e;
            t.a.c = t.c, t.c.a = t.a, e.e = null;
          }

          function R(e, t) {
            g(e.a), e.c = !1, e.a = t, t.i = e;
          }

          function N(e) {
            var t = e.a.a;

            do {
              e = fe(e);
            } while (e.a.a === t);

            return e.c && (R(e, t = v(he(e).a.b, e.a.e)), e = fe(e)), e;
          }

          function A(e, t, n) {
            var a = new me();
            return a.a = n, a.e = H(e.f, t.e, a), n.i = a;
          }

          function D(e, t) {
            switch (e.s) {
              case 100130:
                return 0 != (1 & t);

              case 100131:
                return 0 !== t;

              case 100132:
                return 0 < t;

              case 100133:
                return 0 > t;

              case 100134:
                return 2 <= t || -2 >= t;
            }

            return !1;
          }

          function L(e) {
            var t = e.a,
                n = t.d;
            n.c = e.d, n.a = t, I(e);
          }

          function P(e, t, n) {
            for (e = t, t = t.a; e !== n;) {
              e.c = !1;
              var a = he(e),
                  o = a.a;

              if (o.a !== t.a) {
                if (!a.c) {
                  L(e);
                  break;
                }

                R(a, o = v(t.c.b, o.b));
              }

              t.c !== o && (f(te(o), o), f(t, o)), L(e), t = a.a, e = a;
            }

            return t;
          }

          function O(e, t, n, a, o, i) {
            var r = !0;

            do {
              A(e, t, n.b), n = n.c;
            } while (n !== a);

            for (null === o && (o = he(t).a.b.c); (n = (a = he(t)).a.b).a === o.a;) n.c !== o && (f(te(n), n), f(te(o), n)), a.f = t.f - n.f, a.d = D(e, a.f), t.b = !0, !r && U(e, t) && (E(n, o), I(t), g(o)), r = !1, t = a, o = n;

            t.b = !0, i && q(e, t);
          }

          function F(e, t, n, a, o) {
            var i = [t.g[0], t.g[1], t.g[2]];
            t.d = null, t.d = e.o && e.o(i, n, a, e.c) || null, null === t.d && (o ? e.n || (K(e, 100156), e.n = !0) : t.d = n[0]);
          }

          function B(e, t, n) {
            var a = [null, null, null, null];
            a[0] = t.a.d, a[1] = n.a.d, F(e, t.a, a, [.5, .5, 0, 0], !1), f(t, n);
          }

          function G(e, t, n, a, o) {
            var i = Math.abs(t.b - e.b) + Math.abs(t.a - e.a),
                r = Math.abs(n.b - e.b) + Math.abs(n.a - e.a),
                s = o + 1;
            a[o] = .5 * r / (i + r), a[s] = .5 * i / (i + r), e.g[0] += a[o] * t.g[0] + a[s] * n.g[0], e.g[1] += a[o] * t.g[1] + a[s] * n.g[1], e.g[2] += a[o] * t.g[2] + a[s] * n.g[2];
          }

          function U(e, t) {
            var n = he(t),
                a = t.a,
                r = n.a;

            if (i(a.a, r.a)) {
              if (0 < s(r.b.a, a.a, r.a)) return !1;

              if (o(a.a, r.a)) {
                if (a.a !== r.a) {
                  n = e.e;
                  var l = a.a.h;

                  if (0 <= l) {
                    var p = (n = n.b).d,
                        d = n.e,
                        c = n.c,
                        u = c[l];
                    p[u] = p[n.a], c[p[u]] = u, u <= --n.a && (1 >= u ? ce(n, u) : i(d[p[u >> 1]], d[p[u]]) ? ce(n, u) : ue(n, u)), d[l] = null, c[l] = n.b, n.b = l;
                  } else for (n.c[-(l + 1)] = null; 0 < n.a && null === n.c[n.d[n.a - 1]];) --n.a;

                  B(e, te(r), a);
                }
              } else y(r.b), f(a, te(r)), t.b = n.b = !0;
            } else {
              if (0 > s(a.b.a, r.a, a.a)) return !1;
              fe(t).b = t.b = !0, y(a.b), f(te(r), a);
            }

            return !0;
          }

          function z(e, t) {
            var n = he(t),
                a = t.a,
                c = n.a,
                u = a.a,
                h = c.a,
                g = a.b.a,
                v = c.b.a,
                b = new ae();
            if (s(g, e.a, u), s(v, e.a, h), u === h || Math.min(u.a, g.a) > Math.max(h.a, v.a)) return !1;

            if (i(u, h)) {
              if (0 < s(v, u, h)) return !1;
            } else if (0 > s(g, h, u)) return !1;

            var w,
                x,
                S = g,
                k = u,
                T = v,
                C = h;
            if (i(S, k) || (w = S, S = k, k = w), i(T, C) || (w = T, T = C, C = w), i(S, T) || (w = S, S = T, T = w, w = k, k = C, C = w), i(T, k) ? i(k, C) ? (0 > (w = r(S, T, k)) + (x = r(T, k, C)) && (w = -w, x = -x), b.b = m(w, T.b, x, k.b)) : (0 > (w = s(S, T, k)) + (x = -s(S, C, k)) && (w = -w, x = -x), b.b = m(w, T.b, x, C.b)) : b.b = (T.b + k.b) / 2, l(S, k) || (w = S, S = k, k = w), l(T, C) || (w = T, T = C, C = w), l(S, T) || (w = S, S = T, T = w, w = k, k = C, C = w), l(T, k) ? l(k, C) ? (0 > (w = p(S, T, k)) + (x = p(T, k, C)) && (w = -w, x = -x), b.a = m(w, T.a, x, k.a)) : (0 > (w = d(S, T, k)) + (x = -d(S, C, k)) && (w = -w, x = -x), b.a = m(w, T.a, x, C.a)) : b.a = (T.a + k.a) / 2, i(b, e.a) && (b.b = e.a.b, b.a = e.a.a), S = i(u, h) ? u : h, i(S, b) && (b.b = S.b, b.a = S.a), o(b, u) || o(b, h)) return U(e, t), !1;

            if (!o(g, e.a) && 0 <= s(g, e.a, b) || !o(v, e.a) && 0 >= s(v, e.a, b)) {
              if (v === e.a) return y(a.b), f(c.b, a), a = he(t = N(t)).a, P(e, he(t), n), O(e, t, te(a), a, a, !0), !0;

              if (g === e.a) {
                y(c.b), f(a.e, te(c)), h = (u = n = t).a.b.a;

                do {
                  u = fe(u);
                } while (u.a.b.a === h);

                return u = he(t = u).a.b.c, n.a = te(c), O(e, t, (c = P(e, n, null)).c, a.b.c, u, !0), !0;
              }

              return 0 <= s(g, e.a, b) && (fe(t).b = t.b = !0, y(a.b), a.a.b = e.a.b, a.a.a = e.a.a), 0 >= s(v, e.a, b) && (t.b = n.b = !0, y(c.b), c.a.b = e.a.b, c.a.a = e.a.a), !1;
            }

            return y(a.b), y(c.b), f(te(c), a), a.a.b = b.b, a.a.a = b.a, a.a.h = ie(e.e, a.a), a = a.a, c = [0, 0, 0, 0], b = [u.d, g.d, h.d, v.d], a.g[0] = a.g[1] = a.g[2] = 0, G(a, u, g, c, 0), G(a, h, v, c, 2), F(e, a, b, c, !0), fe(t).b = t.b = n.b = !0, !1;
          }

          function q(e, t) {
            for (var n = he(t);;) {
              for (; n.b;) t = n, n = he(n);

              if (!t.b && (n = t, null === (t = fe(t)) || !t.b)) break;
              t.b = !1;
              var a,
                  o = t.a,
                  r = n.a;
              if (a = o.b.a !== r.b.a) e: {
                var l = he(a = t),
                    p = a.a,
                    d = l.a,
                    c = void 0;

                if (i(p.b.a, d.b.a)) {
                  if (0 > s(p.b.a, d.b.a, p.a)) {
                    a = !1;
                    break e;
                  }

                  fe(a).b = a.b = !0, c = y(p), f(d.b, c), c.d.c = a.d;
                } else {
                  if (0 < s(d.b.a, p.b.a, d.a)) {
                    a = !1;
                    break e;
                  }

                  a.b = l.b = !0, c = y(d), f(p.e, d.b), c.b.d.c = a.d;
                }

                a = !0;
              }
              if (a && (n.c ? (I(n), g(r), r = (n = he(t)).a) : t.c && (I(t), g(o), o = (t = fe(n)).a)), o.a !== r.a) if (o.b.a === r.b.a || t.c || n.c || o.b.a !== e.a && r.b.a !== e.a) U(e, t);else if (z(e, t)) break;
              o.a === r.a && o.b.a === r.b.a && (E(r, o), I(t), g(o), t = fe(n));
            }
          }

          function V(e, t) {
            e.a = t;

            for (var n = t.c; null === n.i;) if ((n = n.c) === t.c) {
              n = e;
              var a = t;
              (p = new me()).a = a.c.b;
              var r = (c = n.f).a;

              do {
                r = r.a;
              } while (null !== r.b && !c.c(c.b, p, r.b));

              var l = he(c = r.b),
                  p = c.a;
              if (r = l.a, 0 === s(p.b.a, a, p.a)) o((p = c.a).a, a) || o(p.b.a, a) || (y(p.b), c.c && (g(p.c), c.c = !1), f(a.c, p), V(n, a));else {
                var d = i(r.b.a, p.b.a) ? c : l;
                l = void 0, c.d || d.c ? (l = d === c ? v(a.c.b, p.e) : v(r.b.c.b, a.c).b, d.c ? R(d, l) : (p = n, (c = A(n, c, l)).f = fe(c).f + c.a.f, c.d = D(p, c.f)), V(n, a)) : O(n, c, a.c, a.c, null, !0);
              }
              return;
            }

            if (c = (p = he(n = N(n.i))).a, (p = P(e, p, null)).c === c) {
              p = (c = p).c, r = he(n), l = n.a, d = r.a;
              var c,
                  u = !1;
              l.b.a !== d.b.a && z(e, n), o(l.a, e.a) && (f(te(p), l), p = he(n = N(n)).a, P(e, he(n), r), u = !0), o(d.a, e.a) && (f(c, te(d)), c = P(e, r, null), u = !0), u ? O(e, n, c.c, p, p, !0) : (a = i(d.a, l.a) ? te(d) : l, O(e, n, a = v(c.c.b, a), a.c, a.c, !1), a.b.i.c = !0, q(e, n));
            } else O(e, n, p.c, c, c, !0);
          }

          function W(e, t) {
            var n = new me(),
                a = h(e.b);
            a.a.b = M, a.a.a = t, a.b.a.b = -M, a.b.a.a = t, e.a = a.b.a, n.a = a, n.f = 0, n.d = !1, n.c = !1, n.h = !0, n.b = !1, a = H(a = e.f, a.a, n), n.e = a;
          }

          function X(e) {
            this.a = new Y(), this.b = e, this.c = j;
          }

          function H(e, t, n) {
            do {
              t = t.c;
            } while (null !== t.b && !e.c(e.b, t.b, n));

            return e = new Y(n, t.a, t), t.a.c = e, t.a = e;
          }

          function Y(e, t, n) {
            this.b = e || null, this.a = t || this, this.c = n || this;
          }

          function Z() {
            this.d = Q, this.p = this.b = this.q = null, this.j = [0, 0, 0], this.s = 100130, this.n = !1, this.o = this.a = this.e = this.f = null, this.m = !1, this.c = this.r = this.i = this.k = this.l = this.h = null;
          }

          var Q = 0;

          function J(e, t) {
            if (e.d !== t) for (; e.d !== t;) if (e.d < t) switch (e.d) {
              case Q:
                K(e, 100151), e.u(null);
                break;

              case 1:
                K(e, 100152), e.t();
            } else switch (e.d) {
              case 2:
                K(e, 100154), e.v();
                break;

              case 1:
                K(e, 100153), e.w();
            }
          }

          function K(e, t) {
            e.p && e.p(t, e.c);
          }

          function $(e, t) {
            this.b = e || this, this.d = t || this, this.a = null, this.c = !1;
          }

          function ee() {
            this.h = this, this.i = this.d = this.a = this.e = this.c = this.b = null, this.f = 0;
          }

          function te(e) {
            return e.b.e;
          }

          function ne() {
            this.c = new ae(), this.a = new $(), this.b = new ee(), this.d = new ee(), this.b.b = this.d, this.d.b = this.b;
          }

          function ae(e, t) {
            this.e = e || this, this.f = t || this, this.d = this.c = null, this.g = [0, 0, 0], this.h = this.a = this.b = 0;
          }

          function oe() {
            this.c = [], this.d = null, this.a = 0, this.e = !1, this.b = new se();
          }

          function ie(e, t) {
            if (e.e) {
              var n,
                  a = e.b,
                  o = ++a.a;
              return 2 * o > a.f && (a.f *= 2, a.c = le(a.c, a.f + 1)), 0 === a.b ? n = o : (n = a.b, a.b = a.c[a.b]), a.e[n] = t, a.c[n] = o, a.d[o] = n, a.h && ue(a, o), n;
            }

            return a = e.a++, e.c[a] = t, -(a + 1);
          }

          function re(e) {
            if (0 === e.a) return de(e.b);
            var t = e.c[e.d[e.a - 1]];
            if (0 !== e.b.a && i(pe(e.b), t)) return de(e.b);

            do {
              --e.a;
            } while (0 < e.a && null === e.c[e.d[e.a - 1]]);

            return t;
          }

          function se() {
            this.d = le([0], 33), this.e = [null, null], this.c = [0, 0], this.a = 0, this.f = 32, this.b = 0, this.h = !1, this.d[1] = 1;
          }

          function le(e, t) {
            for (var n = Array(t), a = 0; a < e.length; a++) n[a] = e[a];

            for (; a < t; a++) n[a] = 0;

            return n;
          }

          function pe(e) {
            return e.e[e.d[1]];
          }

          function de(e) {
            var t = e.d,
                n = e.e,
                a = e.c,
                o = t[1],
                i = n[o];
            return 0 < e.a && (t[1] = t[e.a], a[t[1]] = 1, n[o] = null, a[o] = e.b, e.b = o, 0 < --e.a && ce(e, 1)), i;
          }

          function ce(e, t) {
            for (var n = e.d, a = e.e, o = e.c, r = t, s = n[r];;) {
              var l = r << 1;
              l < e.a && i(a[n[l + 1]], a[n[l]]) && (l += 1);
              var p = n[l];

              if (l > e.a || i(a[s], a[p])) {
                n[r] = s, o[s] = r;
                break;
              }

              n[r] = p, o[p] = r, r = l;
            }
          }

          function ue(e, t) {
            for (var n = e.d, a = e.e, o = e.c, r = t, s = n[r];;) {
              var l = r >> 1,
                  p = n[l];

              if (0 === l || i(a[p], a[s])) {
                n[r] = s, o[s] = r;
                break;
              }

              n[r] = p, o[p] = r, r = l;
            }
          }

          function me() {
            this.e = this.a = null, this.f = 0, this.c = this.b = this.h = this.d = !1;
          }

          function he(e) {
            return e.e.c.b;
          }

          function fe(e) {
            return e.e.a.b;
          }

          (a = Z.prototype).x = function () {
            J(this, Q);
          }, a.B = function (e, t) {
            switch (e) {
              case 100142:
                return;

              case 100140:
                switch (t) {
                  case 100130:
                  case 100131:
                  case 100132:
                  case 100133:
                  case 100134:
                    return void (this.s = t);
                }

                break;

              case 100141:
                return void (this.m = !!t);

              default:
                return void K(this, 100900);
            }

            K(this, 100901);
          }, a.y = function (e) {
            switch (e) {
              case 100142:
                return 0;

              case 100140:
                return this.s;

              case 100141:
                return this.m;

              default:
                K(this, 100900);
            }

            return !1;
          }, a.A = function (e, t, n) {
            this.j[0] = e, this.j[1] = t, this.j[2] = n;
          }, a.z = function (e, t) {
            var n = t || null;

            switch (e) {
              case 100100:
              case 100106:
                this.h = n;
                break;

              case 100104:
              case 100110:
                this.l = n;
                break;

              case 100101:
              case 100107:
                this.k = n;
                break;

              case 100102:
              case 100108:
                this.i = n;
                break;

              case 100103:
              case 100109:
                this.p = n;
                break;

              case 100105:
              case 100111:
                this.o = n;
                break;

              case 100112:
                this.r = n;
                break;

              default:
                K(this, 100900);
            }
          }, a.C = function (e, t) {
            var n = !1,
                a = [0, 0, 0];
            J(this, 2);

            for (var o = 0; 3 > o; ++o) {
              var i = e[o];
              -1e150 > i && (i = -1e150, n = !0), 1e150 < i && (i = 1e150, n = !0), a[o] = i;
            }

            n && K(this, 100155), null === (n = this.q) ? f(n = h(this.b), n.b) : (y(n), n = n.e), n.a.d = t, n.a.g[0] = a[0], n.a.g[1] = a[1], n.a.g[2] = a[2], n.f = 1, n.b.f = -1, this.q = n;
          }, a.u = function (e) {
            J(this, Q), this.d = 1, this.b = new ne(), this.c = e;
          }, a.t = function () {
            J(this, 1), this.d = 2, this.q = null;
          }, a.v = function () {
            J(this, 2), this.d = 1;
          }, a.w = function () {
            J(this, 1), this.d = Q;
            var e = !1,
                t = [p = this.j[0], n = this.j[1], r = this.j[2]];

            if (0 === p && 0 === n && 0 === r) {
              for (var n = [-2e150, -2e150, -2e150], a = [2e150, 2e150, 2e150], r = [], l = [], p = (e = this.b.c).e; p !== e; p = p.e) for (var d = 0; 3 > d; ++d) {
                var m = p.g[d];
                m < a[d] && (a[d] = m, l[d] = p), m > n[d] && (n[d] = m, r[d] = p);
              }

              if (p = 0, n[1] - a[1] > n[0] - a[0] && (p = 1), n[2] - a[2] > n[p] - a[p] && (p = 2), a[p] >= n[p]) t[0] = 0, t[1] = 0, t[2] = 1;else {
                for (n = 0, a = l[p], r = r[p], l = [0, 0, 0], a = [a.g[0] - r.g[0], a.g[1] - r.g[1], a.g[2] - r.g[2]], d = [0, 0, 0], p = e.e; p !== e; p = p.e) d[0] = p.g[0] - r.g[0], d[1] = p.g[1] - r.g[1], d[2] = p.g[2] - r.g[2], l[0] = a[1] * d[2] - a[2] * d[1], l[1] = a[2] * d[0] - a[0] * d[2], l[2] = a[0] * d[1] - a[1] * d[0], (m = l[0] * l[0] + l[1] * l[1] + l[2] * l[2]) > n && (n = m, t[0] = l[0], t[1] = l[1], t[2] = l[2]);

                0 >= n && (t[0] = t[1] = t[2] = 0, t[_(a)] = 1);
              }
              e = !0;
            }

            for (l = _(t), p = this.b.c, n = (l + 1) % 3, r = (l + 2) % 3, l = 0 < t[l] ? 1 : -1, t = p.e; t !== p; t = t.e) t.b = t.g[n], t.a = l * t.g[r];

            if (e) {
              for (t = 0, p = (e = this.b.a).b; p !== e; p = p.b) if (!(0 >= (n = p.a).f)) do {
                t += (n.a.b - n.b.a.b) * (n.a.a + n.b.a.a), n = n.e;
              } while (n !== p.a);

              if (0 > t) for (e = (t = this.b.c).e; e !== t; e = e.e) e.a = -e.a;
            }

            for (this.n = !1, p = (t = this.b.b).h; p !== t; p = e) e = p.h, n = p.e, o(p.a, p.b.a) && p.e.e !== p && (B(this, n, p), g(p), n = (p = n).e), n.e === p && (n !== p && (n !== e && n !== e.b || (e = e.h), g(n)), p !== e && p !== e.b || (e = e.h), g(p));

            for (this.e = t = new oe(), p = (e = this.b.c).e; p !== e; p = p.e) p.h = ie(t, p);

            for (function (e) {
              e.d = [];

              for (var t = 0; t < e.a; t++) e.d[t] = t;

              e.d.sort(function (e) {
                return function (t, n) {
                  return i(e[t], e[n]) ? 1 : -1;
                };
              }(e.c)), e.e = !0, function (e) {
                for (var t = e.a; 1 <= t; --t) ce(e, t);

                e.h = !0;
              }(e.b);
            }(t), this.f = new X(this), W(this, -M), W(this, M); null !== (t = re(this.e));) {
              for (;;) {
                e: if (p = this.e, 0 === p.a) e = pe(p.b);else if (e = p.c[p.d[p.a - 1]], 0 !== p.b.a && (p = pe(p.b), i(p, e))) {
                  e = p;
                  break e;
                }

                if (null === e || !o(e, t)) break;
                e = re(this.e), B(this, t.c, e.c);
              }

              V(this, t);
            }

            for (this.a = this.f.a.a.b.a.a, t = 0; null !== (e = this.f.a.a.b);) e.h || ++t, I(e);

            for (this.f = null, (t = this.e).b = null, t.d = null, this.e = t.c = null, p = (t = this.b).a.b; p !== t.a; p = e) e = p.b, (p = p.a).e.e === p && (E(p.c, p), g(p));

            if (!this.n) {
              if (t = this.b, this.m) for (p = t.b.h; p !== t.b; p = e) e = p.h, p.b.d.c !== p.d.c ? p.f = p.d.c ? 1 : -1 : g(p);else for (p = t.a.b; p !== t.a; p = e) if (e = p.b, p.c) {
                for (p = p.a; i(p.b.a, p.a); p = p.c.b);

                for (; i(p.a, p.b.a); p = p.e);

                for (n = p.c.b, r = void 0; p.e !== n;) if (i(p.b.a, n.a)) {
                  for (; n.e !== p && (c(n.e) || 0 >= s(n.a, n.b.a, n.e.b.a));) n = (r = v(n.e, n)).b;

                  n = n.c.b;
                } else {
                  for (; n.e !== p && (u(p.c.b) || 0 <= s(p.b.a, p.a, p.c.b.a));) p = (r = v(p, p.c.b)).b;

                  p = p.e;
                }

                for (; n.e.e !== p;) n = (r = v(n.e, n)).b;
              }
              if (this.h || this.i || this.k || this.l) if (this.m) {
                for (e = (t = this.b).a.b; e !== t.a; e = e.b) if (e.c) {
                  this.h && this.h(2, this.c), p = e.a;

                  do {
                    this.k && this.k(p.a.d, this.c), p = p.e;
                  } while (p !== e.a);

                  this.i && this.i(this.c);
                }
              } else {
                for (t = this.b, e = !!this.l, p = !1, n = -1, r = t.a.d; r !== t.a; r = r.d) if (r.c) {
                  p || (this.h && this.h(4, this.c), p = !0), l = r.a;

                  do {
                    e && n !== (a = l.b.d.c ? 0 : 1) && (n = a, this.l && this.l(!!n, this.c)), this.k && this.k(l.a.d, this.c), l = l.e;
                  } while (l !== r.a);
                }

                p && this.i && this.i(this.c);
              }

              if (this.r) {
                for (p = (t = this.b).a.b; p !== t.a; p = e) if (e = p.b, !p.c) {
                  r = (n = p.a).e, l = void 0;

                  do {
                    r = (l = r).e, l.d = null, null === l.b.d && (l.c === l ? T(l.a, null) : (l.a.c = l.c, w(l, te(l))), (a = l.b).c === a ? T(a.a, null) : (a.a.c = a.c, w(a, te(a))), k(l));
                  } while (l !== n);

                  n = p.d, (p = p.b).d = n, n.b = p;
                }

                return this.r(this.b), void (this.c = this.b = null);
              }
            }

            this.b = this.c = null;
          }, this.libtess = {
            GluTesselator: Z,
            windingRule: {
              GLU_TESS_WINDING_ODD: 100130,
              GLU_TESS_WINDING_NONZERO: 100131,
              GLU_TESS_WINDING_POSITIVE: 100132,
              GLU_TESS_WINDING_NEGATIVE: 100133,
              GLU_TESS_WINDING_ABS_GEQ_TWO: 100134
            },
            primitiveType: {
              GL_LINE_LOOP: 2,
              GL_TRIANGLES: 4,
              GL_TRIANGLE_STRIP: 5,
              GL_TRIANGLE_FAN: 6
            },
            errorType: {
              GLU_TESS_MISSING_BEGIN_POLYGON: 100151,
              GLU_TESS_MISSING_END_POLYGON: 100153,
              GLU_TESS_MISSING_BEGIN_CONTOUR: 100152,
              GLU_TESS_MISSING_END_CONTOUR: 100154,
              GLU_TESS_COORD_TOO_LARGE: 100155,
              GLU_TESS_NEED_COMBINE_CALLBACK: 100156
            },
            gluEnum: {
              GLU_TESS_MESH: 100112,
              GLU_TESS_TOLERANCE: 100142,
              GLU_TESS_WINDING_RULE: 100140,
              GLU_TESS_BOUNDARY_ONLY: 100141,
              GLU_INVALID_ENUM: 100900,
              GLU_INVALID_VALUE: 100901,
              GLU_TESS_BEGIN: 100100,
              GLU_TESS_VERTEX: 100101,
              GLU_TESS_END: 100102,
              GLU_TESS_ERROR: 100103,
              GLU_TESS_EDGE_FLAG: 100104,
              GLU_TESS_COMBINE: 100105,
              GLU_TESS_BEGIN_DATA: 100106,
              GLU_TESS_VERTEX_DATA: 100107,
              GLU_TESS_END_DATA: 100108,
              GLU_TESS_ERROR_DATA: 100109,
              GLU_TESS_EDGE_FLAG_DATA: 100110,
              GLU_TESS_COMBINE_DATA: 100111
            }
          }, Z.prototype.gluDeleteTess = Z.prototype.x, Z.prototype.gluTessProperty = Z.prototype.B, Z.prototype.gluGetTessProperty = Z.prototype.y, Z.prototype.gluTessNormal = Z.prototype.A, Z.prototype.gluTessCallback = Z.prototype.z, Z.prototype.gluTessVertex = Z.prototype.C, Z.prototype.gluTessBeginPolygon = Z.prototype.u, Z.prototype.gluTessBeginContour = Z.prototype.t, Z.prototype.gluTessEndContour = Z.prototype.v, Z.prototype.gluTessEndPolygon = Z.prototype.w, void 0 !== t && (t.exports = this.libtess);
        }, {}],
        10: [function (e, t, n) {
          (function (a) {
            !function (e, a) {
              a("object" == typeof n && void 0 !== t ? n : e.opentype = {});
            }(this, function (t) {
              "use strict";
              /*! https://mths.be/codepointat v0.2.0 by @mathias */

              var n, o;
              String.prototype.codePointAt || (n = function () {
                try {
                  var e = {},
                      t = Object.defineProperty,
                      n = t(e, e, e) && t;
                } catch (e) {}

                return n;
              }(), o = function (e) {
                if (null == this) throw TypeError();
                var t = String(this),
                    n = t.length,
                    a = e ? Number(e) : 0;

                if (a != a && (a = 0), !(a < 0 || a >= n)) {
                  var o,
                      i = t.charCodeAt(a);
                  return i >= 55296 && i <= 56319 && n > a + 1 && (o = t.charCodeAt(a + 1)) >= 56320 && o <= 57343 ? 1024 * (i - 55296) + o - 56320 + 65536 : i;
                }
              }, n ? n(String.prototype, "codePointAt", {
                value: o,
                configurable: !0,
                writable: !0
              }) : String.prototype.codePointAt = o);
              var i = 0,
                  r = -3;

              function s() {
                this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
              }

              function l(e, t) {
                this.source = e, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = t, this.destLen = 0, this.ltree = new s(), this.dtree = new s();
              }

              var p = new s(),
                  d = new s(),
                  c = new Uint8Array(30),
                  u = new Uint16Array(30),
                  m = new Uint8Array(30),
                  h = new Uint16Array(30),
                  f = new Uint8Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]),
                  g = new s(),
                  y = new Uint8Array(320);

              function v(e, t, n, a) {
                var o, i;

                for (o = 0; o < n; ++o) e[o] = 0;

                for (o = 0; o < 30 - n; ++o) e[o + n] = o / n | 0;

                for (i = a, o = 0; o < 30; ++o) t[o] = i, i += 1 << e[o];
              }

              var b = new Uint16Array(16);

              function w(e, t, n, a) {
                var o, i;

                for (o = 0; o < 16; ++o) e.table[o] = 0;

                for (o = 0; o < a; ++o) e.table[t[n + o]]++;

                for (e.table[0] = 0, i = 0, o = 0; o < 16; ++o) b[o] = i, i += e.table[o];

                for (o = 0; o < a; ++o) t[n + o] && (e.trans[b[t[n + o]]++] = o);
              }

              function x(e) {
                e.bitcount-- || (e.tag = e.source[e.sourceIndex++], e.bitcount = 7);
                var t = 1 & e.tag;
                return e.tag >>>= 1, t;
              }

              function S(e, t, n) {
                if (!t) return n;

                for (; e.bitcount < 24;) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;

                var a = e.tag & 65535 >>> 16 - t;
                return e.tag >>>= t, e.bitcount -= t, a + n;
              }

              function k(e, t) {
                for (; e.bitcount < 24;) e.tag |= e.source[e.sourceIndex++] << e.bitcount, e.bitcount += 8;

                var n = 0,
                    a = 0,
                    o = 0,
                    i = e.tag;

                do {
                  a = 2 * a + (1 & i), i >>>= 1, ++o, n += t.table[o], a -= t.table[o];
                } while (a >= 0);

                return e.tag = i, e.bitcount -= o, t.trans[n + a];
              }

              function T(e, t, n) {
                var a, o, i, r, s, l;

                for (a = S(e, 5, 257), o = S(e, 5, 1), i = S(e, 4, 4), r = 0; r < 19; ++r) y[r] = 0;

                for (r = 0; r < i; ++r) {
                  var p = S(e, 3, 0);
                  y[f[r]] = p;
                }

                for (w(g, y, 0, 19), s = 0; s < a + o;) {
                  var d = k(e, g);

                  switch (d) {
                    case 16:
                      var c = y[s - 1];

                      for (l = S(e, 2, 3); l; --l) y[s++] = c;

                      break;

                    case 17:
                      for (l = S(e, 3, 3); l; --l) y[s++] = 0;

                      break;

                    case 18:
                      for (l = S(e, 7, 11); l; --l) y[s++] = 0;

                      break;

                    default:
                      y[s++] = d;
                  }
                }

                w(t, y, 0, a), w(n, y, a, o);
              }

              function C(e, t, n) {
                for (;;) {
                  var a,
                      o,
                      r,
                      s,
                      l = k(e, t);
                  if (256 === l) return i;
                  if (l < 256) e.dest[e.destLen++] = l;else for (a = S(e, c[l -= 257], u[l]), o = k(e, n), s = r = e.destLen - S(e, m[o], h[o]); s < r + a; ++s) e.dest[e.destLen++] = e.dest[s];
                }
              }

              function _(e) {
                for (var t, n; e.bitcount > 8;) e.sourceIndex--, e.bitcount -= 8;

                if ((t = 256 * (t = e.source[e.sourceIndex + 1]) + e.source[e.sourceIndex]) !== (65535 & ~(256 * e.source[e.sourceIndex + 3] + e.source[e.sourceIndex + 2]))) return r;

                for (e.sourceIndex += 4, n = t; n; --n) e.dest[e.destLen++] = e.source[e.sourceIndex++];

                return e.bitcount = 0, i;
              }

              !function (e, t) {
                var n;

                for (n = 0; n < 7; ++n) e.table[n] = 0;

                for (e.table[7] = 24, e.table[8] = 152, e.table[9] = 112, n = 0; n < 24; ++n) e.trans[n] = 256 + n;

                for (n = 0; n < 144; ++n) e.trans[24 + n] = n;

                for (n = 0; n < 8; ++n) e.trans[168 + n] = 280 + n;

                for (n = 0; n < 112; ++n) e.trans[176 + n] = 144 + n;

                for (n = 0; n < 5; ++n) t.table[n] = 0;

                for (t.table[5] = 32, n = 0; n < 32; ++n) t.trans[n] = n;
              }(p, d), v(c, u, 4, 3), v(m, h, 2, 1), c[28] = 0, u[28] = 258;

              var M = function (e, t) {
                var n,
                    a,
                    o = new l(e, t);

                do {
                  switch (n = x(o), S(o, 2, 0)) {
                    case 0:
                      a = _(o);
                      break;

                    case 1:
                      a = C(o, p, d);
                      break;

                    case 2:
                      T(o, o.ltree, o.dtree), a = C(o, o.ltree, o.dtree);
                      break;

                    default:
                      a = r;
                  }

                  if (a !== i) throw new Error("Data error");
                } while (!n);

                return o.destLen < o.dest.length ? "function" == typeof o.dest.slice ? o.dest.slice(0, o.destLen) : o.dest.subarray(0, o.destLen) : o.dest;
              };

              function E(e, t, n, a, o) {
                return Math.pow(1 - o, 3) * e + 3 * Math.pow(1 - o, 2) * o * t + 3 * (1 - o) * Math.pow(o, 2) * n + Math.pow(o, 3) * a;
              }

              function j() {
                this.x1 = Number.NaN, this.y1 = Number.NaN, this.x2 = Number.NaN, this.y2 = Number.NaN;
              }

              function I() {
                this.commands = [], this.fill = "black", this.stroke = null, this.strokeWidth = 1;
              }

              function R(e) {
                throw new Error(e);
              }

              function N(e, t) {
                e || R(t);
              }

              j.prototype.isEmpty = function () {
                return isNaN(this.x1) || isNaN(this.y1) || isNaN(this.x2) || isNaN(this.y2);
              }, j.prototype.addPoint = function (e, t) {
                "number" == typeof e && ((isNaN(this.x1) || isNaN(this.x2)) && (this.x1 = e, this.x2 = e), e < this.x1 && (this.x1 = e), e > this.x2 && (this.x2 = e)), "number" == typeof t && ((isNaN(this.y1) || isNaN(this.y2)) && (this.y1 = t, this.y2 = t), t < this.y1 && (this.y1 = t), t > this.y2 && (this.y2 = t));
              }, j.prototype.addX = function (e) {
                this.addPoint(e, null);
              }, j.prototype.addY = function (e) {
                this.addPoint(null, e);
              }, j.prototype.addBezier = function (e, t, n, a, o, i, r, s) {
                var l = [e, t],
                    p = [n, a],
                    d = [o, i],
                    c = [r, s];
                this.addPoint(e, t), this.addPoint(r, s);

                for (var u = 0; u <= 1; u++) {
                  var m = 6 * l[u] - 12 * p[u] + 6 * d[u],
                      h = -3 * l[u] + 9 * p[u] - 9 * d[u] + 3 * c[u],
                      f = 3 * p[u] - 3 * l[u];

                  if (0 !== h) {
                    var g = Math.pow(m, 2) - 4 * f * h;

                    if (!(g < 0)) {
                      var y = (-m + Math.sqrt(g)) / (2 * h);
                      0 < y && y < 1 && (0 === u && this.addX(E(l[u], p[u], d[u], c[u], y)), 1 === u && this.addY(E(l[u], p[u], d[u], c[u], y)));
                      var v = (-m - Math.sqrt(g)) / (2 * h);
                      0 < v && v < 1 && (0 === u && this.addX(E(l[u], p[u], d[u], c[u], v)), 1 === u && this.addY(E(l[u], p[u], d[u], c[u], v)));
                    }
                  } else {
                    if (0 === m) continue;
                    var b = -f / m;
                    0 < b && b < 1 && (0 === u && this.addX(E(l[u], p[u], d[u], c[u], b)), 1 === u && this.addY(E(l[u], p[u], d[u], c[u], b)));
                  }
                }
              }, j.prototype.addQuad = function (e, t, n, a, o, i) {
                var r = e + 2 / 3 * (n - e),
                    s = t + 2 / 3 * (a - t),
                    l = r + 1 / 3 * (o - e),
                    p = s + 1 / 3 * (i - t);
                this.addBezier(e, t, r, s, l, p, o, i);
              }, I.prototype.moveTo = function (e, t) {
                this.commands.push({
                  type: "M",
                  x: e,
                  y: t
                });
              }, I.prototype.lineTo = function (e, t) {
                this.commands.push({
                  type: "L",
                  x: e,
                  y: t
                });
              }, I.prototype.curveTo = I.prototype.bezierCurveTo = function (e, t, n, a, o, i) {
                this.commands.push({
                  type: "C",
                  x1: e,
                  y1: t,
                  x2: n,
                  y2: a,
                  x: o,
                  y: i
                });
              }, I.prototype.quadTo = I.prototype.quadraticCurveTo = function (e, t, n, a) {
                this.commands.push({
                  type: "Q",
                  x1: e,
                  y1: t,
                  x: n,
                  y: a
                });
              }, I.prototype.close = I.prototype.closePath = function () {
                this.commands.push({
                  type: "Z"
                });
              }, I.prototype.extend = function (e) {
                if (e.commands) e = e.commands;else if (e instanceof j) {
                  var t = e;
                  return this.moveTo(t.x1, t.y1), this.lineTo(t.x2, t.y1), this.lineTo(t.x2, t.y2), this.lineTo(t.x1, t.y2), void this.close();
                }
                Array.prototype.push.apply(this.commands, e);
              }, I.prototype.getBoundingBox = function () {
                for (var e = new j(), t = 0, n = 0, a = 0, o = 0, i = 0; i < this.commands.length; i++) {
                  var r = this.commands[i];

                  switch (r.type) {
                    case "M":
                      e.addPoint(r.x, r.y), t = a = r.x, n = o = r.y;
                      break;

                    case "L":
                      e.addPoint(r.x, r.y), a = r.x, o = r.y;
                      break;

                    case "Q":
                      e.addQuad(a, o, r.x1, r.y1, r.x, r.y), a = r.x, o = r.y;
                      break;

                    case "C":
                      e.addBezier(a, o, r.x1, r.y1, r.x2, r.y2, r.x, r.y), a = r.x, o = r.y;
                      break;

                    case "Z":
                      a = t, o = n;
                      break;

                    default:
                      throw new Error("Unexpected path command " + r.type);
                  }
                }

                return e.isEmpty() && e.addPoint(0, 0), e;
              }, I.prototype.draw = function (e) {
                e.beginPath();

                for (var t = 0; t < this.commands.length; t += 1) {
                  var n = this.commands[t];
                  "M" === n.type ? e.moveTo(n.x, n.y) : "L" === n.type ? e.lineTo(n.x, n.y) : "C" === n.type ? e.bezierCurveTo(n.x1, n.y1, n.x2, n.y2, n.x, n.y) : "Q" === n.type ? e.quadraticCurveTo(n.x1, n.y1, n.x, n.y) : "Z" === n.type && e.closePath();
                }

                this.fill && (e.fillStyle = this.fill, e.fill()), this.stroke && (e.strokeStyle = this.stroke, e.lineWidth = this.strokeWidth, e.stroke());
              }, I.prototype.toPathData = function (e) {
                function t(t) {
                  return Math.round(t) === t ? "" + Math.round(t) : t.toFixed(e);
                }

                function n() {
                  for (var e = arguments, n = "", a = 0; a < arguments.length; a += 1) {
                    var o = e[a];
                    o >= 0 && a > 0 && (n += " "), n += t(o);
                  }

                  return n;
                }

                e = void 0 !== e ? e : 2;

                for (var a = "", o = 0; o < this.commands.length; o += 1) {
                  var i = this.commands[o];
                  "M" === i.type ? a += "M" + n(i.x, i.y) : "L" === i.type ? a += "L" + n(i.x, i.y) : "C" === i.type ? a += "C" + n(i.x1, i.y1, i.x2, i.y2, i.x, i.y) : "Q" === i.type ? a += "Q" + n(i.x1, i.y1, i.x, i.y) : "Z" === i.type && (a += "Z");
                }

                return a;
              }, I.prototype.toSVG = function (e) {
                var t = '<path d="';
                return t += this.toPathData(e), t += '"', this.fill && "black" !== this.fill && (null === this.fill ? t += ' fill="none"' : t += ' fill="' + this.fill + '"'), this.stroke && (t += ' stroke="' + this.stroke + '" stroke-width="' + this.strokeWidth + '"'), t += "/>";
              }, I.prototype.toDOMElement = function (e) {
                var t = this.toPathData(e),
                    n = document.createElementNS("http://www.w3.org/2000/svg", "path");
                return n.setAttribute("d", t), n;
              };
              var A = {
                fail: R,
                argument: N,
                assert: N
              },
                  D = {},
                  L = {},
                  P = {};

              function O(e) {
                return function () {
                  return e;
                };
              }

              L.BYTE = function (e) {
                return A.argument(e >= 0 && e <= 255, "Byte value should be between 0 and 255."), [e];
              }, P.BYTE = O(1), L.CHAR = function (e) {
                return [e.charCodeAt(0)];
              }, P.CHAR = O(1), L.CHARARRAY = function (e) {
                for (var t = [], n = 0; n < e.length; n += 1) t[n] = e.charCodeAt(n);

                return t;
              }, P.CHARARRAY = function (e) {
                return e.length;
              }, L.USHORT = function (e) {
                return [e >> 8 & 255, 255 & e];
              }, P.USHORT = O(2), L.SHORT = function (e) {
                return e >= 32768 && (e = -(65536 - e)), [e >> 8 & 255, 255 & e];
              }, P.SHORT = O(2), L.UINT24 = function (e) {
                return [e >> 16 & 255, e >> 8 & 255, 255 & e];
              }, P.UINT24 = O(3), L.ULONG = function (e) {
                return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
              }, P.ULONG = O(4), L.LONG = function (e) {
                return e >= 2147483648 && (e = -(4294967296 - e)), [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
              }, P.LONG = O(4), L.FIXED = L.ULONG, P.FIXED = P.ULONG, L.FWORD = L.SHORT, P.FWORD = P.SHORT, L.UFWORD = L.USHORT, P.UFWORD = P.USHORT, L.LONGDATETIME = function (e) {
                return [0, 0, 0, 0, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
              }, P.LONGDATETIME = O(8), L.TAG = function (e) {
                return A.argument(4 === e.length, "Tag should be exactly 4 ASCII characters."), [e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)];
              }, P.TAG = O(4), L.Card8 = L.BYTE, P.Card8 = P.BYTE, L.Card16 = L.USHORT, P.Card16 = P.USHORT, L.OffSize = L.BYTE, P.OffSize = P.BYTE, L.SID = L.USHORT, P.SID = P.USHORT, L.NUMBER = function (e) {
                return e >= -107 && e <= 107 ? [e + 139] : e >= 108 && e <= 1131 ? [247 + ((e -= 108) >> 8), 255 & e] : e >= -1131 && e <= -108 ? [251 + ((e = -e - 108) >> 8), 255 & e] : e >= -32768 && e <= 32767 ? L.NUMBER16(e) : L.NUMBER32(e);
              }, P.NUMBER = function (e) {
                return L.NUMBER(e).length;
              }, L.NUMBER16 = function (e) {
                return [28, e >> 8 & 255, 255 & e];
              }, P.NUMBER16 = O(3), L.NUMBER32 = function (e) {
                return [29, e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e];
              }, P.NUMBER32 = O(5), L.REAL = function (e) {
                var t = e.toString(),
                    n = /\.(\d*?)(?:9{5,20}|0{5,20})\d{0,2}(?:e(.+)|$)/.exec(t);

                if (n) {
                  var a = parseFloat("1e" + ((n[2] ? +n[2] : 0) + n[1].length));
                  t = (Math.round(e * a) / a).toString();
                }

                for (var o = "", i = 0, r = t.length; i < r; i += 1) {
                  var s = t[i];
                  o += "e" === s ? "-" === t[++i] ? "c" : "b" : "." === s ? "a" : "-" === s ? "e" : s;
                }

                for (var l = [30], p = 0, d = (o += 1 & o.length ? "f" : "ff").length; p < d; p += 2) l.push(parseInt(o.substr(p, 2), 16));

                return l;
              }, P.REAL = function (e) {
                return L.REAL(e).length;
              }, L.NAME = L.CHARARRAY, P.NAME = P.CHARARRAY, L.STRING = L.CHARARRAY, P.STRING = P.CHARARRAY, D.UTF8 = function (e, t, n) {
                for (var a = [], o = n, i = 0; i < o; i++, t += 1) a[i] = e.getUint8(t);

                return String.fromCharCode.apply(null, a);
              }, D.UTF16 = function (e, t, n) {
                for (var a = [], o = n / 2, i = 0; i < o; i++, t += 2) a[i] = e.getUint16(t);

                return String.fromCharCode.apply(null, a);
              }, L.UTF16 = function (e) {
                for (var t = [], n = 0; n < e.length; n += 1) {
                  var a = e.charCodeAt(n);
                  t[t.length] = a >> 8 & 255, t[t.length] = 255 & a;
                }

                return t;
              }, P.UTF16 = function (e) {
                return 2 * e.length;
              };
              var F = {
                "x-mac-croatian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ",
                "x-mac-cyrillic": "АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ†°Ґ£§•¶І®©™Ђђ≠Ѓѓ∞±≤≥іµґЈЄєЇїЉљЊњјЅ¬√ƒ≈∆«»… ЋћЌќѕ–—“”‘’÷„ЎўЏџ№Ёёяабвгдежзийклмнопрстуфхцчшщъыьэю",
                "x-mac-gaelic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ",
                "x-mac-greek": "Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­",
                "x-mac-icelandic": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ",
                "x-mac-inuit": "ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł",
                "x-mac-ce": "ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ",
                macintosh: "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›ﬁﬂ‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ",
                "x-mac-romanian": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ",
                "x-mac-turkish": "ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"
              };

              D.MACSTRING = function (e, t, n, a) {
                var o = F[a];

                if (void 0 !== o) {
                  for (var i = "", r = 0; r < n; r++) {
                    var s = e.getUint8(t + r);
                    i += s <= 127 ? String.fromCharCode(s) : o[127 & s];
                  }

                  return i;
                }
              };

              var B,
                  G = "function" == typeof WeakMap && new WeakMap();

              function U(e) {
                return e >= -128 && e <= 127;
              }

              function z(e, t, n) {
                for (var a = 0, o = e.length; t < o && a < 64 && 0 === e[t];) ++t, ++a;

                return n.push(128 | a - 1), t;
              }

              function q(e, t, n) {
                for (var a = 0, o = e.length, i = t; i < o && a < 64;) {
                  var r = e[i];
                  if (!U(r)) break;
                  if (0 === r && i + 1 < o && 0 === e[i + 1]) break;
                  ++i, ++a;
                }

                n.push(a - 1);

                for (var s = t; s < i; ++s) n.push(e[s] + 256 & 255);

                return i;
              }

              function V(e, t, n) {
                for (var a = 0, o = e.length, i = t; i < o && a < 64;) {
                  var r = e[i];
                  if (0 === r) break;
                  if (U(r) && i + 1 < o && U(e[i + 1])) break;
                  ++i, ++a;
                }

                n.push(64 | a - 1);

                for (var s = t; s < i; ++s) {
                  var l = e[s];
                  n.push(l + 65536 >> 8 & 255, l + 256 & 255);
                }

                return i;
              }

              L.MACSTRING = function (e, t) {
                var n = function (e) {
                  if (!B) for (var t in B = {}, F) B[t] = new String(t);
                  var n = B[e];

                  if (void 0 !== n) {
                    if (G) {
                      var a = G.get(n);
                      if (void 0 !== a) return a;
                    }

                    var o = F[e];

                    if (void 0 !== o) {
                      for (var i = {}, r = 0; r < o.length; r++) i[o.charCodeAt(r)] = r + 128;

                      return G && G.set(n, i), i;
                    }
                  }
                }(t);

                if (void 0 !== n) {
                  for (var a = [], o = 0; o < e.length; o++) {
                    var i = e.charCodeAt(o);
                    if (i >= 128 && void 0 === (i = n[i])) return;
                    a[o] = i;
                  }

                  return a;
                }
              }, P.MACSTRING = function (e, t) {
                var n = L.MACSTRING(e, t);
                return void 0 !== n ? n.length : 0;
              }, L.VARDELTAS = function (e) {
                for (var t = 0, n = []; t < e.length;) {
                  var a = e[t];
                  t = 0 === a ? z(e, t, n) : a >= -128 && a <= 127 ? q(e, t, n) : V(e, t, n);
                }

                return n;
              }, L.INDEX = function (e) {
                for (var t = 1, n = [t], a = [], o = 0; o < e.length; o += 1) {
                  var i = L.OBJECT(e[o]);
                  Array.prototype.push.apply(a, i), t += i.length, n.push(t);
                }

                if (0 === a.length) return [0, 0];

                for (var r = [], s = 1 + Math.floor(Math.log(t) / Math.log(2)) / 8 | 0, l = [void 0, L.BYTE, L.USHORT, L.UINT24, L.ULONG][s], p = 0; p < n.length; p += 1) {
                  var d = l(n[p]);
                  Array.prototype.push.apply(r, d);
                }

                return Array.prototype.concat(L.Card16(e.length), L.OffSize(s), r, a);
              }, P.INDEX = function (e) {
                return L.INDEX(e).length;
              }, L.DICT = function (e) {
                for (var t = [], n = Object.keys(e), a = n.length, o = 0; o < a; o += 1) {
                  var i = parseInt(n[o], 0),
                      r = e[i];
                  t = (t = t.concat(L.OPERAND(r.value, r.type))).concat(L.OPERATOR(i));
                }

                return t;
              }, P.DICT = function (e) {
                return L.DICT(e).length;
              }, L.OPERATOR = function (e) {
                return e < 1200 ? [e] : [12, e - 1200];
              }, L.OPERAND = function (e, t) {
                var n = [];
                if (Array.isArray(t)) for (var a = 0; a < t.length; a += 1) A.argument(e.length === t.length, "Not enough arguments given for type" + t), n = n.concat(L.OPERAND(e[a], t[a]));else if ("SID" === t) n = n.concat(L.NUMBER(e));else if ("offset" === t) n = n.concat(L.NUMBER32(e));else if ("number" === t) n = n.concat(L.NUMBER(e));else {
                  if ("real" !== t) throw new Error("Unknown operand type " + t);
                  n = n.concat(L.REAL(e));
                }
                return n;
              }, L.OP = L.BYTE, P.OP = P.BYTE;
              var W = "function" == typeof WeakMap && new WeakMap();

              function X(e, t, n) {
                for (var a = 0; a < t.length; a += 1) {
                  var o = t[a];
                  this[o.name] = o.value;
                }

                if (this.tableName = e, this.fields = t, n) for (var i = Object.keys(n), r = 0; r < i.length; r += 1) {
                  var s = i[r],
                      l = n[s];
                  void 0 !== this[s] && (this[s] = l);
                }
              }

              function H(e, t, n) {
                void 0 === n && (n = t.length);
                var a = new Array(t.length + 1);
                a[0] = {
                  name: e + "Count",
                  type: "USHORT",
                  value: n
                };

                for (var o = 0; o < t.length; o++) a[o + 1] = {
                  name: e + o,
                  type: "USHORT",
                  value: t[o]
                };

                return a;
              }

              function Y(e, t, n) {
                var a = t.length,
                    o = new Array(a + 1);
                o[0] = {
                  name: e + "Count",
                  type: "USHORT",
                  value: a
                };

                for (var i = 0; i < a; i++) o[i + 1] = {
                  name: e + i,
                  type: "TABLE",
                  value: n(t[i], i)
                };

                return o;
              }

              function Z(e, t, n) {
                var a = t.length,
                    o = [];
                o[0] = {
                  name: e + "Count",
                  type: "USHORT",
                  value: a
                };

                for (var i = 0; i < a; i++) o = o.concat(n(t[i], i));

                return o;
              }

              function Q(e) {
                1 === e.format ? X.call(this, "coverageTable", [{
                  name: "coverageFormat",
                  type: "USHORT",
                  value: 1
                }].concat(H("glyph", e.glyphs))) : A.assert(!1, "Can't create coverage table format 2 yet.");
              }

              function J(e) {
                X.call(this, "scriptListTable", Z("scriptRecord", e, function (e, t) {
                  var n = e.script,
                      a = n.defaultLangSys;
                  return A.assert(!!a, "Unable to write GSUB: script " + e.tag + " has no default language system."), [{
                    name: "scriptTag" + t,
                    type: "TAG",
                    value: e.tag
                  }, {
                    name: "script" + t,
                    type: "TABLE",
                    value: new X("scriptTable", [{
                      name: "defaultLangSys",
                      type: "TABLE",
                      value: new X("defaultLangSys", [{
                        name: "lookupOrder",
                        type: "USHORT",
                        value: 0
                      }, {
                        name: "reqFeatureIndex",
                        type: "USHORT",
                        value: a.reqFeatureIndex
                      }].concat(H("featureIndex", a.featureIndexes)))
                    }].concat(Z("langSys", n.langSysRecords, function (e, t) {
                      var n = e.langSys;
                      return [{
                        name: "langSysTag" + t,
                        type: "TAG",
                        value: e.tag
                      }, {
                        name: "langSys" + t,
                        type: "TABLE",
                        value: new X("langSys", [{
                          name: "lookupOrder",
                          type: "USHORT",
                          value: 0
                        }, {
                          name: "reqFeatureIndex",
                          type: "USHORT",
                          value: n.reqFeatureIndex
                        }].concat(H("featureIndex", n.featureIndexes)))
                      }];
                    })))
                  }];
                }));
              }

              function K(e) {
                X.call(this, "featureListTable", Z("featureRecord", e, function (e, t) {
                  var n = e.feature;
                  return [{
                    name: "featureTag" + t,
                    type: "TAG",
                    value: e.tag
                  }, {
                    name: "feature" + t,
                    type: "TABLE",
                    value: new X("featureTable", [{
                      name: "featureParams",
                      type: "USHORT",
                      value: n.featureParams
                    }].concat(H("lookupListIndex", n.lookupListIndexes)))
                  }];
                }));
              }

              function $(e, t) {
                X.call(this, "lookupListTable", Y("lookup", e, function (e) {
                  var n = t[e.lookupType];
                  return A.assert(!!n, "Unable to write GSUB lookup type " + e.lookupType + " tables."), new X("lookupTable", [{
                    name: "lookupType",
                    type: "USHORT",
                    value: e.lookupType
                  }, {
                    name: "lookupFlag",
                    type: "USHORT",
                    value: e.lookupFlag
                  }].concat(Y("subtable", e.subtables, n)));
                }));
              }

              L.CHARSTRING = function (e) {
                if (W) {
                  var t = W.get(e);
                  if (void 0 !== t) return t;
                }

                for (var n = [], a = e.length, o = 0; o < a; o += 1) {
                  var i = e[o];
                  n = n.concat(L[i.type](i.value));
                }

                return W && W.set(e, n), n;
              }, P.CHARSTRING = function (e) {
                return L.CHARSTRING(e).length;
              }, L.OBJECT = function (e) {
                var t = L[e.type];
                return A.argument(void 0 !== t, "No encoding function for type " + e.type), t(e.value);
              }, P.OBJECT = function (e) {
                var t = P[e.type];
                return A.argument(void 0 !== t, "No sizeOf function for type " + e.type), t(e.value);
              }, L.TABLE = function (e) {
                for (var t = [], n = e.fields.length, a = [], o = [], i = 0; i < n; i += 1) {
                  var r = e.fields[i],
                      s = L[r.type];
                  A.argument(void 0 !== s, "No encoding function for field type " + r.type + " (" + r.name + ")");
                  var l = e[r.name];
                  void 0 === l && (l = r.value);
                  var p = s(l);
                  "TABLE" === r.type ? (o.push(t.length), t = t.concat([0, 0]), a.push(p)) : t = t.concat(p);
                }

                for (var d = 0; d < a.length; d += 1) {
                  var c = o[d],
                      u = t.length;
                  A.argument(u < 65536, "Table " + e.tableName + " too big."), t[c] = u >> 8, t[c + 1] = 255 & u, t = t.concat(a[d]);
                }

                return t;
              }, P.TABLE = function (e) {
                for (var t = 0, n = e.fields.length, a = 0; a < n; a += 1) {
                  var o = e.fields[a],
                      i = P[o.type];
                  A.argument(void 0 !== i, "No sizeOf function for field type " + o.type + " (" + o.name + ")");
                  var r = e[o.name];
                  void 0 === r && (r = o.value), t += i(r), "TABLE" === o.type && (t += 2);
                }

                return t;
              }, L.RECORD = L.TABLE, P.RECORD = P.TABLE, L.LITERAL = function (e) {
                return e;
              }, P.LITERAL = function (e) {
                return e.length;
              }, X.prototype.encode = function () {
                return L.TABLE(this);
              }, X.prototype.sizeOf = function () {
                return P.TABLE(this);
              }, Q.prototype = Object.create(X.prototype), Q.prototype.constructor = Q, J.prototype = Object.create(X.prototype), J.prototype.constructor = J, K.prototype = Object.create(X.prototype), K.prototype.constructor = K, $.prototype = Object.create(X.prototype), $.prototype.constructor = $;
              var ee = {
                Table: X,
                Record: X,
                Coverage: Q,
                ScriptList: J,
                FeatureList: K,
                LookupList: $,
                ushortList: H,
                tableList: Y,
                recordList: Z
              };

              function te(e, t) {
                return e.getUint8(t);
              }

              function ne(e, t) {
                return e.getUint16(t, !1);
              }

              function ae(e, t) {
                return e.getUint32(t, !1);
              }

              function oe(e, t) {
                return e.getInt16(t, !1) + e.getUint16(t + 2, !1) / 65535;
              }

              var ie = {
                byte: 1,
                uShort: 2,
                short: 2,
                uLong: 4,
                fixed: 4,
                longDateTime: 8,
                tag: 4
              };

              function re(e, t) {
                this.data = e, this.offset = t, this.relativeOffset = 0;
              }

              re.prototype.parseByte = function () {
                var e = this.data.getUint8(this.offset + this.relativeOffset);
                return this.relativeOffset += 1, e;
              }, re.prototype.parseChar = function () {
                var e = this.data.getInt8(this.offset + this.relativeOffset);
                return this.relativeOffset += 1, e;
              }, re.prototype.parseCard8 = re.prototype.parseByte, re.prototype.parseUShort = function () {
                var e = this.data.getUint16(this.offset + this.relativeOffset);
                return this.relativeOffset += 2, e;
              }, re.prototype.parseCard16 = re.prototype.parseUShort, re.prototype.parseSID = re.prototype.parseUShort, re.prototype.parseOffset16 = re.prototype.parseUShort, re.prototype.parseShort = function () {
                var e = this.data.getInt16(this.offset + this.relativeOffset);
                return this.relativeOffset += 2, e;
              }, re.prototype.parseF2Dot14 = function () {
                var e = this.data.getInt16(this.offset + this.relativeOffset) / 16384;
                return this.relativeOffset += 2, e;
              }, re.prototype.parseULong = function () {
                var e = ae(this.data, this.offset + this.relativeOffset);
                return this.relativeOffset += 4, e;
              }, re.prototype.parseOffset32 = re.prototype.parseULong, re.prototype.parseFixed = function () {
                var e = oe(this.data, this.offset + this.relativeOffset);
                return this.relativeOffset += 4, e;
              }, re.prototype.parseString = function (e) {
                var t = this.data,
                    n = this.offset + this.relativeOffset,
                    a = "";
                this.relativeOffset += e;

                for (var o = 0; o < e; o++) a += String.fromCharCode(t.getUint8(n + o));

                return a;
              }, re.prototype.parseTag = function () {
                return this.parseString(4);
              }, re.prototype.parseLongDateTime = function () {
                var e = ae(this.data, this.offset + this.relativeOffset + 4);
                return e -= 2082844800, this.relativeOffset += 8, e;
              }, re.prototype.parseVersion = function (e) {
                var t = ne(this.data, this.offset + this.relativeOffset),
                    n = ne(this.data, this.offset + this.relativeOffset + 2);
                return this.relativeOffset += 4, void 0 === e && (e = 4096), t + n / e / 10;
              }, re.prototype.skip = function (e, t) {
                void 0 === t && (t = 1), this.relativeOffset += ie[e] * t;
              }, re.prototype.parseULongList = function (e) {
                void 0 === e && (e = this.parseULong());

                for (var t = new Array(e), n = this.data, a = this.offset + this.relativeOffset, o = 0; o < e; o++) t[o] = n.getUint32(a), a += 4;

                return this.relativeOffset += 4 * e, t;
              }, re.prototype.parseOffset16List = re.prototype.parseUShortList = function (e) {
                void 0 === e && (e = this.parseUShort());

                for (var t = new Array(e), n = this.data, a = this.offset + this.relativeOffset, o = 0; o < e; o++) t[o] = n.getUint16(a), a += 2;

                return this.relativeOffset += 2 * e, t;
              }, re.prototype.parseShortList = function (e) {
                for (var t = new Array(e), n = this.data, a = this.offset + this.relativeOffset, o = 0; o < e; o++) t[o] = n.getInt16(a), a += 2;

                return this.relativeOffset += 2 * e, t;
              }, re.prototype.parseByteList = function (e) {
                for (var t = new Array(e), n = this.data, a = this.offset + this.relativeOffset, o = 0; o < e; o++) t[o] = n.getUint8(a++);

                return this.relativeOffset += e, t;
              }, re.prototype.parseList = function (e, t) {
                t || (t = e, e = this.parseUShort());

                for (var n = new Array(e), a = 0; a < e; a++) n[a] = t.call(this);

                return n;
              }, re.prototype.parseList32 = function (e, t) {
                t || (t = e, e = this.parseULong());

                for (var n = new Array(e), a = 0; a < e; a++) n[a] = t.call(this);

                return n;
              }, re.prototype.parseRecordList = function (e, t) {
                t || (t = e, e = this.parseUShort());

                for (var n = new Array(e), a = Object.keys(t), o = 0; o < e; o++) {
                  for (var i = {}, r = 0; r < a.length; r++) {
                    var s = a[r],
                        l = t[s];
                    i[s] = l.call(this);
                  }

                  n[o] = i;
                }

                return n;
              }, re.prototype.parseRecordList32 = function (e, t) {
                t || (t = e, e = this.parseULong());

                for (var n = new Array(e), a = Object.keys(t), o = 0; o < e; o++) {
                  for (var i = {}, r = 0; r < a.length; r++) {
                    var s = a[r],
                        l = t[s];
                    i[s] = l.call(this);
                  }

                  n[o] = i;
                }

                return n;
              }, re.prototype.parseStruct = function (e) {
                if ("function" == typeof e) return e.call(this);

                for (var t = Object.keys(e), n = {}, a = 0; a < t.length; a++) {
                  var o = t[a],
                      i = e[o];
                  n[o] = i.call(this);
                }

                return n;
              }, re.prototype.parseValueRecord = function (e) {
                if (void 0 === e && (e = this.parseUShort()), 0 !== e) {
                  var t = {};
                  return 1 & e && (t.xPlacement = this.parseShort()), 2 & e && (t.yPlacement = this.parseShort()), 4 & e && (t.xAdvance = this.parseShort()), 8 & e && (t.yAdvance = this.parseShort()), 16 & e && (t.xPlaDevice = void 0, this.parseShort()), 32 & e && (t.yPlaDevice = void 0, this.parseShort()), 64 & e && (t.xAdvDevice = void 0, this.parseShort()), 128 & e && (t.yAdvDevice = void 0, this.parseShort()), t;
                }
              }, re.prototype.parseValueRecordList = function () {
                for (var e = this.parseUShort(), t = this.parseUShort(), n = new Array(t), a = 0; a < t; a++) n[a] = this.parseValueRecord(e);

                return n;
              }, re.prototype.parsePointer = function (e) {
                var t = this.parseOffset16();
                if (t > 0) return new re(this.data, this.offset + t).parseStruct(e);
              }, re.prototype.parsePointer32 = function (e) {
                var t = this.parseOffset32();
                if (t > 0) return new re(this.data, this.offset + t).parseStruct(e);
              }, re.prototype.parseListOfLists = function (e) {
                for (var t = this.parseOffset16List(), n = t.length, a = this.relativeOffset, o = new Array(n), i = 0; i < n; i++) {
                  var r = t[i];
                  if (0 !== r) {
                    if (this.relativeOffset = r, e) {
                      for (var s = this.parseOffset16List(), l = new Array(s.length), p = 0; p < s.length; p++) this.relativeOffset = r + s[p], l[p] = e.call(this);

                      o[i] = l;
                    } else o[i] = this.parseUShortList();
                  } else o[i] = void 0;
                }

                return this.relativeOffset = a, o;
              }, re.prototype.parseCoverage = function () {
                var e = this.offset + this.relativeOffset,
                    t = this.parseUShort(),
                    n = this.parseUShort();
                if (1 === t) return {
                  format: 1,
                  glyphs: this.parseUShortList(n)
                };

                if (2 === t) {
                  for (var a = new Array(n), o = 0; o < n; o++) a[o] = {
                    start: this.parseUShort(),
                    end: this.parseUShort(),
                    index: this.parseUShort()
                  };

                  return {
                    format: 2,
                    ranges: a
                  };
                }

                throw new Error("0x" + e.toString(16) + ": Coverage format must be 1 or 2.");
              }, re.prototype.parseClassDef = function () {
                var e = this.offset + this.relativeOffset,
                    t = this.parseUShort();
                if (1 === t) return {
                  format: 1,
                  startGlyph: this.parseUShort(),
                  classes: this.parseUShortList()
                };
                if (2 === t) return {
                  format: 2,
                  ranges: this.parseRecordList({
                    start: re.uShort,
                    end: re.uShort,
                    classId: re.uShort
                  })
                };
                throw new Error("0x" + e.toString(16) + ": ClassDef format must be 1 or 2.");
              }, re.list = function (e, t) {
                return function () {
                  return this.parseList(e, t);
                };
              }, re.list32 = function (e, t) {
                return function () {
                  return this.parseList32(e, t);
                };
              }, re.recordList = function (e, t) {
                return function () {
                  return this.parseRecordList(e, t);
                };
              }, re.recordList32 = function (e, t) {
                return function () {
                  return this.parseRecordList32(e, t);
                };
              }, re.pointer = function (e) {
                return function () {
                  return this.parsePointer(e);
                };
              }, re.pointer32 = function (e) {
                return function () {
                  return this.parsePointer32(e);
                };
              }, re.tag = re.prototype.parseTag, re.byte = re.prototype.parseByte, re.uShort = re.offset16 = re.prototype.parseUShort, re.uShortList = re.prototype.parseUShortList, re.uLong = re.offset32 = re.prototype.parseULong, re.uLongList = re.prototype.parseULongList, re.struct = re.prototype.parseStruct, re.coverage = re.prototype.parseCoverage, re.classDef = re.prototype.parseClassDef;
              var se = {
                reserved: re.uShort,
                reqFeatureIndex: re.uShort,
                featureIndexes: re.uShortList
              };
              re.prototype.parseScriptList = function () {
                return this.parsePointer(re.recordList({
                  tag: re.tag,
                  script: re.pointer({
                    defaultLangSys: re.pointer(se),
                    langSysRecords: re.recordList({
                      tag: re.tag,
                      langSys: re.pointer(se)
                    })
                  })
                })) || [];
              }, re.prototype.parseFeatureList = function () {
                return this.parsePointer(re.recordList({
                  tag: re.tag,
                  feature: re.pointer({
                    featureParams: re.offset16,
                    lookupListIndexes: re.uShortList
                  })
                })) || [];
              }, re.prototype.parseLookupList = function (e) {
                return this.parsePointer(re.list(re.pointer(function () {
                  var t = this.parseUShort();
                  A.argument(1 <= t && t <= 9, "GPOS/GSUB lookup type " + t + " unknown.");
                  var n = this.parseUShort(),
                      a = 16 & n;
                  return {
                    lookupType: t,
                    lookupFlag: n,
                    subtables: this.parseList(re.pointer(e[t])),
                    markFilteringSet: a ? this.parseUShort() : void 0
                  };
                }))) || [];
              }, re.prototype.parseFeatureVariationsList = function () {
                return this.parsePointer32(function () {
                  var e = this.parseUShort(),
                      t = this.parseUShort();
                  return A.argument(1 === e && t < 1, "GPOS/GSUB feature variations table unknown."), this.parseRecordList32({
                    conditionSetOffset: re.offset32,
                    featureTableSubstitutionOffset: re.offset32
                  });
                }) || [];
              };
              var le = {
                getByte: te,
                getCard8: te,
                getUShort: ne,
                getCard16: ne,
                getShort: function (e, t) {
                  return e.getInt16(t, !1);
                },
                getULong: ae,
                getFixed: oe,
                getTag: function (e, t) {
                  for (var n = "", a = t; a < t + 4; a += 1) n += String.fromCharCode(e.getInt8(a));

                  return n;
                },
                getOffset: function (e, t, n) {
                  for (var a = 0, o = 0; o < n; o += 1) a <<= 8, a += e.getUint8(t + o);

                  return a;
                },
                getBytes: function (e, t, n) {
                  for (var a = [], o = t; o < n; o += 1) a.push(e.getUint8(o));

                  return a;
                },
                bytesToString: function (e) {
                  for (var t = "", n = 0; n < e.length; n += 1) t += String.fromCharCode(e[n]);

                  return t;
                },
                Parser: re
              };

              function pe(e, t, n) {
                e.segments.push({
                  end: t,
                  start: t,
                  delta: -(t - n),
                  offset: 0,
                  glyphIndex: n
                });
              }

              var de = {
                parse: function (e, t) {
                  var n = {};
                  n.version = le.getUShort(e, t), A.argument(0 === n.version, "cmap table version should be 0."), n.numTables = le.getUShort(e, t + 2);

                  for (var a = -1, o = n.numTables - 1; o >= 0; o -= 1) {
                    var i = le.getUShort(e, t + 4 + 8 * o),
                        r = le.getUShort(e, t + 4 + 8 * o + 2);

                    if (3 === i && (0 === r || 1 === r || 10 === r) || 0 === i && (0 === r || 1 === r || 2 === r || 3 === r || 4 === r)) {
                      a = le.getULong(e, t + 4 + 8 * o + 4);
                      break;
                    }
                  }

                  if (-1 === a) throw new Error("No valid cmap sub-tables found.");
                  var s = new le.Parser(e, t + a);
                  if (n.format = s.parseUShort(), 12 === n.format) !function (e, t) {
                    var n;
                    t.parseUShort(), e.length = t.parseULong(), e.language = t.parseULong(), e.groupCount = n = t.parseULong(), e.glyphIndexMap = {};

                    for (var a = 0; a < n; a += 1) for (var o = t.parseULong(), i = t.parseULong(), r = t.parseULong(), s = o; s <= i; s += 1) e.glyphIndexMap[s] = r, r++;
                  }(n, s);else {
                    if (4 !== n.format) throw new Error("Only format 4 and 12 cmap tables are supported (found format " + n.format + ").");
                    !function (e, t, n, a, o) {
                      var i;
                      e.length = t.parseUShort(), e.language = t.parseUShort(), e.segCount = i = t.parseUShort() >> 1, t.skip("uShort", 3), e.glyphIndexMap = {};

                      for (var r = new le.Parser(n, a + o + 14), s = new le.Parser(n, a + o + 16 + 2 * i), l = new le.Parser(n, a + o + 16 + 4 * i), p = new le.Parser(n, a + o + 16 + 6 * i), d = a + o + 16 + 8 * i, c = 0; c < i - 1; c += 1) for (var u = void 0, m = r.parseUShort(), h = s.parseUShort(), f = l.parseShort(), g = p.parseUShort(), y = h; y <= m; y += 1) 0 !== g ? (d = p.offset + p.relativeOffset - 2, d += g, d += 2 * (y - h), 0 !== (u = le.getUShort(n, d)) && (u = u + f & 65535)) : u = y + f & 65535, e.glyphIndexMap[y] = u;
                    }(n, s, e, t, a);
                  }
                  return n;
                },
                make: function (e) {
                  var t,
                      n = !0;

                  for (t = e.length - 1; t > 0; t -= 1) if (e.get(t).unicode > 65535) {
                    console.log("Adding CMAP format 12 (needed!)"), n = !1;
                    break;
                  }

                  var a = [{
                    name: "version",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "numTables",
                    type: "USHORT",
                    value: n ? 1 : 2
                  }, {
                    name: "platformID",
                    type: "USHORT",
                    value: 3
                  }, {
                    name: "encodingID",
                    type: "USHORT",
                    value: 1
                  }, {
                    name: "offset",
                    type: "ULONG",
                    value: n ? 12 : 20
                  }];
                  n || (a = a.concat([{
                    name: "cmap12PlatformID",
                    type: "USHORT",
                    value: 3
                  }, {
                    name: "cmap12EncodingID",
                    type: "USHORT",
                    value: 10
                  }, {
                    name: "cmap12Offset",
                    type: "ULONG",
                    value: 0
                  }])), a = a.concat([{
                    name: "format",
                    type: "USHORT",
                    value: 4
                  }, {
                    name: "cmap4Length",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "language",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "segCountX2",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "searchRange",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "entrySelector",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "rangeShift",
                    type: "USHORT",
                    value: 0
                  }]);
                  var o = new ee.Table("cmap", a);

                  for (o.segments = [], t = 0; t < e.length; t += 1) {
                    for (var i = e.get(t), r = 0; r < i.unicodes.length; r += 1) pe(o, i.unicodes[r], t);

                    o.segments = o.segments.sort(function (e, t) {
                      return e.start - t.start;
                    });
                  }

                  !function (e) {
                    e.segments.push({
                      end: 65535,
                      start: 65535,
                      delta: 1,
                      offset: 0
                    });
                  }(o);
                  var s = o.segments.length,
                      l = 0,
                      p = [],
                      d = [],
                      c = [],
                      u = [],
                      m = [],
                      h = [];

                  for (t = 0; t < s; t += 1) {
                    var f = o.segments[t];
                    f.end <= 65535 && f.start <= 65535 ? (p = p.concat({
                      name: "end_" + t,
                      type: "USHORT",
                      value: f.end
                    }), d = d.concat({
                      name: "start_" + t,
                      type: "USHORT",
                      value: f.start
                    }), c = c.concat({
                      name: "idDelta_" + t,
                      type: "SHORT",
                      value: f.delta
                    }), u = u.concat({
                      name: "idRangeOffset_" + t,
                      type: "USHORT",
                      value: f.offset
                    }), void 0 !== f.glyphId && (m = m.concat({
                      name: "glyph_" + t,
                      type: "USHORT",
                      value: f.glyphId
                    }))) : l += 1, n || void 0 === f.glyphIndex || (h = (h = (h = h.concat({
                      name: "cmap12Start_" + t,
                      type: "ULONG",
                      value: f.start
                    })).concat({
                      name: "cmap12End_" + t,
                      type: "ULONG",
                      value: f.end
                    })).concat({
                      name: "cmap12Glyph_" + t,
                      type: "ULONG",
                      value: f.glyphIndex
                    }));
                  }

                  if (o.segCountX2 = 2 * (s - l), o.searchRange = 2 * Math.pow(2, Math.floor(Math.log(s - l) / Math.log(2))), o.entrySelector = Math.log(o.searchRange / 2) / Math.log(2), o.rangeShift = o.segCountX2 - o.searchRange, o.fields = o.fields.concat(p), o.fields.push({
                    name: "reservedPad",
                    type: "USHORT",
                    value: 0
                  }), o.fields = o.fields.concat(d), o.fields = o.fields.concat(c), o.fields = o.fields.concat(u), o.fields = o.fields.concat(m), o.cmap4Length = 14 + 2 * p.length + 2 + 2 * d.length + 2 * c.length + 2 * u.length + 2 * m.length, !n) {
                    var g = 16 + 4 * h.length;
                    o.cmap12Offset = 20 + o.cmap4Length, o.fields = o.fields.concat([{
                      name: "cmap12Format",
                      type: "USHORT",
                      value: 12
                    }, {
                      name: "cmap12Reserved",
                      type: "USHORT",
                      value: 0
                    }, {
                      name: "cmap12Length",
                      type: "ULONG",
                      value: g
                    }, {
                      name: "cmap12Language",
                      type: "ULONG",
                      value: 0
                    }, {
                      name: "cmap12nGroups",
                      type: "ULONG",
                      value: h.length / 3
                    }]), o.fields = o.fields.concat(h);
                  }

                  return o;
                }
              },
                  ce = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "266 ff", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"],
                  ue = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"],
                  me = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"],
                  he = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"];

              function fe(e) {
                this.font = e;
              }

              function ge(e) {
                this.cmap = e;
              }

              function ye(e, t) {
                this.encoding = e, this.charset = t;
              }

              function ve(e) {
                switch (e.version) {
                  case 1:
                    this.names = he.slice();
                    break;

                  case 2:
                    this.names = new Array(e.numberOfGlyphs);

                    for (var t = 0; t < e.numberOfGlyphs; t++) e.glyphNameIndex[t] < he.length ? this.names[t] = he[e.glyphNameIndex[t]] : this.names[t] = e.names[e.glyphNameIndex[t] - he.length];

                    break;

                  case 2.5:
                    this.names = new Array(e.numberOfGlyphs);

                    for (var n = 0; n < e.numberOfGlyphs; n++) this.names[n] = he[n + e.glyphNameIndex[n]];

                    break;

                  case 3:
                  default:
                    this.names = [];
                }
              }

              fe.prototype.charToGlyphIndex = function (e) {
                var t = e.codePointAt(0),
                    n = this.font.glyphs;
                if (n) for (var a = 0; a < n.length; a += 1) for (var o = n.get(a), i = 0; i < o.unicodes.length; i += 1) if (o.unicodes[i] === t) return a;
                return null;
              }, ge.prototype.charToGlyphIndex = function (e) {
                return this.cmap.glyphIndexMap[e.codePointAt(0)] || 0;
              }, ye.prototype.charToGlyphIndex = function (e) {
                var t = e.codePointAt(0),
                    n = this.encoding[t];
                return this.charset.indexOf(n);
              }, ve.prototype.nameToGlyphIndex = function (e) {
                return this.names.indexOf(e);
              }, ve.prototype.glyphIndexToName = function (e) {
                return this.names[e];
              };
              var be = {
                line: function (e, t, n, a, o) {
                  e.beginPath(), e.moveTo(t, n), e.lineTo(a, o), e.stroke();
                }
              };

              function we(e) {
                this.bindConstructorValues(e);
              }

              function xe(e, t, n) {
                Object.defineProperty(e, t, {
                  get: function () {
                    return e.path, e[n];
                  },
                  set: function (t) {
                    e[n] = t;
                  },
                  enumerable: !0,
                  configurable: !0
                });
              }

              function Se(e, t) {
                if (this.font = e, this.glyphs = {}, Array.isArray(t)) for (var n = 0; n < t.length; n++) this.glyphs[n] = t[n];
                this.length = t && t.length || 0;
              }

              we.prototype.bindConstructorValues = function (e) {
                var t, n;
                this.index = e.index || 0, this.name = e.name || null, this.unicode = e.unicode || void 0, this.unicodes = e.unicodes || void 0 !== e.unicode ? [e.unicode] : [], e.xMin && (this.xMin = e.xMin), e.yMin && (this.yMin = e.yMin), e.xMax && (this.xMax = e.xMax), e.yMax && (this.yMax = e.yMax), e.advanceWidth && (this.advanceWidth = e.advanceWidth), Object.defineProperty(this, "path", (t = e.path, n = t || new I(), {
                  configurable: !0,
                  get: function () {
                    return "function" == typeof n && (n = n()), n;
                  },
                  set: function (e) {
                    n = e;
                  }
                }));
              }, we.prototype.addUnicode = function (e) {
                0 === this.unicodes.length && (this.unicode = e), this.unicodes.push(e);
              }, we.prototype.getBoundingBox = function () {
                return this.path.getBoundingBox();
              }, we.prototype.getPath = function (e, t, n, a, o) {
                var i, r;
                e = void 0 !== e ? e : 0, t = void 0 !== t ? t : 0, n = void 0 !== n ? n : 72, a || (a = {});
                var s = a.xScale,
                    l = a.yScale;
                if (a.hinting && o && o.hinting && (r = this.path && o.hinting.exec(this, n)), r) i = o.hinting.getCommands(r), e = Math.round(e), t = Math.round(t), s = l = 1;else {
                  i = this.path.commands;
                  var p = 1 / this.path.unitsPerEm * n;
                  void 0 === s && (s = p), void 0 === l && (l = p);
                }

                for (var d = new I(), c = 0; c < i.length; c += 1) {
                  var u = i[c];
                  "M" === u.type ? d.moveTo(e + u.x * s, t + -u.y * l) : "L" === u.type ? d.lineTo(e + u.x * s, t + -u.y * l) : "Q" === u.type ? d.quadraticCurveTo(e + u.x1 * s, t + -u.y1 * l, e + u.x * s, t + -u.y * l) : "C" === u.type ? d.curveTo(e + u.x1 * s, t + -u.y1 * l, e + u.x2 * s, t + -u.y2 * l, e + u.x * s, t + -u.y * l) : "Z" === u.type && d.closePath();
                }

                return d;
              }, we.prototype.getContours = function () {
                if (void 0 === this.points) return [];

                for (var e = [], t = [], n = 0; n < this.points.length; n += 1) {
                  var a = this.points[n];
                  t.push(a), a.lastPointOfContour && (e.push(t), t = []);
                }

                return A.argument(0 === t.length, "There are still points left in the current contour."), e;
              }, we.prototype.getMetrics = function () {
                for (var e = this.path.commands, t = [], n = [], a = 0; a < e.length; a += 1) {
                  var o = e[a];
                  "Z" !== o.type && (t.push(o.x), n.push(o.y)), "Q" !== o.type && "C" !== o.type || (t.push(o.x1), n.push(o.y1)), "C" === o.type && (t.push(o.x2), n.push(o.y2));
                }

                var i = {
                  xMin: Math.min.apply(null, t),
                  yMin: Math.min.apply(null, n),
                  xMax: Math.max.apply(null, t),
                  yMax: Math.max.apply(null, n),
                  leftSideBearing: this.leftSideBearing
                };
                return isFinite(i.xMin) || (i.xMin = 0), isFinite(i.xMax) || (i.xMax = this.advanceWidth), isFinite(i.yMin) || (i.yMin = 0), isFinite(i.yMax) || (i.yMax = 0), i.rightSideBearing = this.advanceWidth - i.leftSideBearing - (i.xMax - i.xMin), i;
              }, we.prototype.draw = function (e, t, n, a, o) {
                this.getPath(t, n, a, o).draw(e);
              }, we.prototype.drawPoints = function (e, t, n, a) {
                function o(t, n, a, o) {
                  var i = 2 * Math.PI;
                  e.beginPath();

                  for (var r = 0; r < t.length; r += 1) e.moveTo(n + t[r].x * o, a + t[r].y * o), e.arc(n + t[r].x * o, a + t[r].y * o, 2, 0, i, !1);

                  e.closePath(), e.fill();
                }

                t = void 0 !== t ? t : 0, n = void 0 !== n ? n : 0, a = void 0 !== a ? a : 24;

                for (var i = 1 / this.path.unitsPerEm * a, r = [], s = [], l = this.path, p = 0; p < l.commands.length; p += 1) {
                  var d = l.commands[p];
                  void 0 !== d.x && r.push({
                    x: d.x,
                    y: -d.y
                  }), void 0 !== d.x1 && s.push({
                    x: d.x1,
                    y: -d.y1
                  }), void 0 !== d.x2 && s.push({
                    x: d.x2,
                    y: -d.y2
                  });
                }

                e.fillStyle = "blue", o(r, t, n, i), e.fillStyle = "red", o(s, t, n, i);
              }, we.prototype.drawMetrics = function (e, t, n, a) {
                var o;
                t = void 0 !== t ? t : 0, n = void 0 !== n ? n : 0, a = void 0 !== a ? a : 24, o = 1 / this.path.unitsPerEm * a, e.lineWidth = 1, e.strokeStyle = "black", be.line(e, t, -1e4, t, 1e4), be.line(e, -1e4, n, 1e4, n);
                var i = this.xMin || 0,
                    r = this.yMin || 0,
                    s = this.xMax || 0,
                    l = this.yMax || 0,
                    p = this.advanceWidth || 0;
                e.strokeStyle = "blue", be.line(e, t + i * o, -1e4, t + i * o, 1e4), be.line(e, t + s * o, -1e4, t + s * o, 1e4), be.line(e, -1e4, n + -r * o, 1e4, n + -r * o), be.line(e, -1e4, n + -l * o, 1e4, n + -l * o), e.strokeStyle = "green", be.line(e, t + p * o, -1e4, t + p * o, 1e4);
              }, Se.prototype.get = function (e) {
                return "function" == typeof this.glyphs[e] && (this.glyphs[e] = this.glyphs[e]()), this.glyphs[e];
              }, Se.prototype.push = function (e, t) {
                this.glyphs[e] = t, this.length++;
              };
              var ke = {
                GlyphSet: Se,
                glyphLoader: function (e, t) {
                  return new we({
                    index: t,
                    font: e
                  });
                },
                ttfGlyphLoader: function (e, t, n, a, o, i) {
                  return function () {
                    var r = new we({
                      index: t,
                      font: e
                    });
                    return r.path = function () {
                      n(r, a, o);
                      var t = i(e.glyphs, r);
                      return t.unitsPerEm = e.unitsPerEm, t;
                    }, xe(r, "xMin", "_xMin"), xe(r, "xMax", "_xMax"), xe(r, "yMin", "_yMin"), xe(r, "yMax", "_yMax"), r;
                  };
                },
                cffGlyphLoader: function (e, t, n, a) {
                  return function () {
                    var o = new we({
                      index: t,
                      font: e
                    });
                    return o.path = function () {
                      var t = n(e, o, a);
                      return t.unitsPerEm = e.unitsPerEm, t;
                    }, o;
                  };
                }
              };

              function Te(e, t) {
                if (e === t) return !0;

                if (Array.isArray(e) && Array.isArray(t)) {
                  if (e.length !== t.length) return !1;

                  for (var n = 0; n < e.length; n += 1) if (!Te(e[n], t[n])) return !1;

                  return !0;
                }

                return !1;
              }

              function Ce(e) {
                return e.length < 1240 ? 107 : e.length < 33900 ? 1131 : 32768;
              }

              function _e(e, t, n) {
                var a,
                    o,
                    i = [],
                    r = [],
                    s = le.getCard16(e, t);

                if (0 !== s) {
                  var l = le.getByte(e, t + 2);
                  a = t + (s + 1) * l + 2;

                  for (var p = t + 3, d = 0; d < s + 1; d += 1) i.push(le.getOffset(e, p, l)), p += l;

                  o = a + i[s];
                } else o = t + 2;

                for (var c = 0; c < i.length - 1; c += 1) {
                  var u = le.getBytes(e, a + i[c], a + i[c + 1]);
                  n && (u = n(u)), r.push(u);
                }

                return {
                  objects: r,
                  startOffset: t,
                  endOffset: o
                };
              }

              function Me(e, t) {
                if (28 === t) return e.parseByte() << 8 | e.parseByte();
                if (29 === t) return e.parseByte() << 24 | e.parseByte() << 16 | e.parseByte() << 8 | e.parseByte();
                if (30 === t) return function (e) {
                  for (var t = "", n = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"];;) {
                    var a = e.parseByte(),
                        o = a >> 4,
                        i = 15 & a;
                    if (15 === o) break;
                    if (t += n[o], 15 === i) break;
                    t += n[i];
                  }

                  return parseFloat(t);
                }(e);
                if (t >= 32 && t <= 246) return t - 139;
                if (t >= 247 && t <= 250) return 256 * (t - 247) + e.parseByte() + 108;
                if (t >= 251 && t <= 254) return 256 * -(t - 251) - e.parseByte() - 108;
                throw new Error("Invalid b0 " + t);
              }

              function Ee(e, t, n) {
                t = void 0 !== t ? t : 0;
                var a = new le.Parser(e, t),
                    o = [],
                    i = [];

                for (n = void 0 !== n ? n : e.length; a.relativeOffset < n;) {
                  var r = a.parseByte();
                  r <= 21 ? (12 === r && (r = 1200 + a.parseByte()), o.push([r, i]), i = []) : i.push(Me(a, r));
                }

                return function (e) {
                  for (var t = {}, n = 0; n < e.length; n += 1) {
                    var a = e[n][0],
                        o = e[n][1],
                        i = void 0;
                    if (i = 1 === o.length ? o[0] : o, t.hasOwnProperty(a) && !isNaN(t[a])) throw new Error("Object " + t + " already has key " + a);
                    t[a] = i;
                  }

                  return t;
                }(o);
              }

              function je(e, t) {
                return t = t <= 390 ? ce[t] : e[t - 391];
              }

              function Ie(e, t, n) {
                for (var a, o = {}, i = 0; i < t.length; i += 1) {
                  var r = t[i];

                  if (Array.isArray(r.type)) {
                    var s = [];
                    s.length = r.type.length;

                    for (var l = 0; l < r.type.length; l++) void 0 === (a = void 0 !== e[r.op] ? e[r.op][l] : void 0) && (a = void 0 !== r.value && void 0 !== r.value[l] ? r.value[l] : null), "SID" === r.type[l] && (a = je(n, a)), s[l] = a;

                    o[r.name] = s;
                  } else void 0 === (a = e[r.op]) && (a = void 0 !== r.value ? r.value : null), "SID" === r.type && (a = je(n, a)), o[r.name] = a;
                }

                return o;
              }

              var Re = [{
                name: "version",
                op: 0,
                type: "SID"
              }, {
                name: "notice",
                op: 1,
                type: "SID"
              }, {
                name: "copyright",
                op: 1200,
                type: "SID"
              }, {
                name: "fullName",
                op: 2,
                type: "SID"
              }, {
                name: "familyName",
                op: 3,
                type: "SID"
              }, {
                name: "weight",
                op: 4,
                type: "SID"
              }, {
                name: "isFixedPitch",
                op: 1201,
                type: "number",
                value: 0
              }, {
                name: "italicAngle",
                op: 1202,
                type: "number",
                value: 0
              }, {
                name: "underlinePosition",
                op: 1203,
                type: "number",
                value: -100
              }, {
                name: "underlineThickness",
                op: 1204,
                type: "number",
                value: 50
              }, {
                name: "paintType",
                op: 1205,
                type: "number",
                value: 0
              }, {
                name: "charstringType",
                op: 1206,
                type: "number",
                value: 2
              }, {
                name: "fontMatrix",
                op: 1207,
                type: ["real", "real", "real", "real", "real", "real"],
                value: [.001, 0, 0, .001, 0, 0]
              }, {
                name: "uniqueId",
                op: 13,
                type: "number"
              }, {
                name: "fontBBox",
                op: 5,
                type: ["number", "number", "number", "number"],
                value: [0, 0, 0, 0]
              }, {
                name: "strokeWidth",
                op: 1208,
                type: "number",
                value: 0
              }, {
                name: "xuid",
                op: 14,
                type: [],
                value: null
              }, {
                name: "charset",
                op: 15,
                type: "offset",
                value: 0
              }, {
                name: "encoding",
                op: 16,
                type: "offset",
                value: 0
              }, {
                name: "charStrings",
                op: 17,
                type: "offset",
                value: 0
              }, {
                name: "private",
                op: 18,
                type: ["number", "offset"],
                value: [0, 0]
              }, {
                name: "ros",
                op: 1230,
                type: ["SID", "SID", "number"]
              }, {
                name: "cidFontVersion",
                op: 1231,
                type: "number",
                value: 0
              }, {
                name: "cidFontRevision",
                op: 1232,
                type: "number",
                value: 0
              }, {
                name: "cidFontType",
                op: 1233,
                type: "number",
                value: 0
              }, {
                name: "cidCount",
                op: 1234,
                type: "number",
                value: 8720
              }, {
                name: "uidBase",
                op: 1235,
                type: "number"
              }, {
                name: "fdArray",
                op: 1236,
                type: "offset"
              }, {
                name: "fdSelect",
                op: 1237,
                type: "offset"
              }, {
                name: "fontName",
                op: 1238,
                type: "SID"
              }],
                  Ne = [{
                name: "subrs",
                op: 19,
                type: "offset",
                value: 0
              }, {
                name: "defaultWidthX",
                op: 20,
                type: "number",
                value: 0
              }, {
                name: "nominalWidthX",
                op: 21,
                type: "number",
                value: 0
              }];

              function Ae(e, t) {
                return Ie(Ee(e, 0, e.byteLength), Re, t);
              }

              function De(e, t, n, a) {
                return Ie(Ee(e, t, n), Ne, a);
              }

              function Le(e, t, n, a) {
                for (var o = [], i = 0; i < n.length; i += 1) {
                  var r = Ae(new DataView(new Uint8Array(n[i]).buffer), a);
                  r._subrs = [], r._subrsBias = 0;
                  var s = r.private[0],
                      l = r.private[1];

                  if (0 !== s && 0 !== l) {
                    var p = De(e, l + t, s, a);

                    if (r._defaultWidthX = p.defaultWidthX, r._nominalWidthX = p.nominalWidthX, 0 !== p.subrs) {
                      var d = _e(e, l + p.subrs + t);

                      r._subrs = d.objects, r._subrsBias = Ce(r._subrs);
                    }

                    r._privateDict = p;
                  }

                  o.push(r);
                }

                return o;
              }

              function Pe(e, t, n) {
                var a,
                    o,
                    i,
                    r,
                    s,
                    l,
                    p,
                    d,
                    c = new I(),
                    u = [],
                    m = 0,
                    h = !1,
                    f = !1,
                    g = 0,
                    y = 0;

                if (e.isCIDFont) {
                  var v = e.tables.cff.topDict._fdSelect[t.index],
                      b = e.tables.cff.topDict._fdArray[v];
                  s = b._subrs, l = b._subrsBias, p = b._defaultWidthX, d = b._nominalWidthX;
                } else s = e.tables.cff.topDict._subrs, l = e.tables.cff.topDict._subrsBias, p = e.tables.cff.topDict._defaultWidthX, d = e.tables.cff.topDict._nominalWidthX;

                var w = p;

                function x(e, t) {
                  f && c.closePath(), c.moveTo(e, t), f = !0;
                }

                function S() {
                  u.length % 2 != 0 && !h && (w = u.shift() + d), m += u.length >> 1, u.length = 0, h = !0;
                }

                return function n(p) {
                  for (var v, b, k, T, C, _, M, E, j, I, R, N, A = 0; A < p.length;) {
                    var D = p[A];

                    switch (A += 1, D) {
                      case 1:
                      case 3:
                        S();
                        break;

                      case 4:
                        u.length > 1 && !h && (w = u.shift() + d, h = !0), y += u.pop(), x(g, y);
                        break;

                      case 5:
                        for (; u.length > 0;) g += u.shift(), y += u.shift(), c.lineTo(g, y);

                        break;

                      case 6:
                        for (; u.length > 0 && (g += u.shift(), c.lineTo(g, y), 0 !== u.length);) y += u.shift(), c.lineTo(g, y);

                        break;

                      case 7:
                        for (; u.length > 0 && (y += u.shift(), c.lineTo(g, y), 0 !== u.length);) g += u.shift(), c.lineTo(g, y);

                        break;

                      case 8:
                        for (; u.length > 0;) a = g + u.shift(), o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), g = i + u.shift(), y = r + u.shift(), c.curveTo(a, o, i, r, g, y);

                        break;

                      case 10:
                        C = u.pop() + l, (_ = s[C]) && n(_);
                        break;

                      case 11:
                        return;

                      case 12:
                        switch (D = p[A], A += 1, D) {
                          case 35:
                            a = g + u.shift(), o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), M = i + u.shift(), E = r + u.shift(), j = M + u.shift(), I = E + u.shift(), R = j + u.shift(), N = I + u.shift(), g = R + u.shift(), y = N + u.shift(), u.shift(), c.curveTo(a, o, i, r, M, E), c.curveTo(j, I, R, N, g, y);
                            break;

                          case 34:
                            a = g + u.shift(), o = y, i = a + u.shift(), r = o + u.shift(), M = i + u.shift(), E = r, j = M + u.shift(), I = r, R = j + u.shift(), N = y, g = R + u.shift(), c.curveTo(a, o, i, r, M, E), c.curveTo(j, I, R, N, g, y);
                            break;

                          case 36:
                            a = g + u.shift(), o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), M = i + u.shift(), E = r, j = M + u.shift(), I = r, R = j + u.shift(), N = I + u.shift(), g = R + u.shift(), c.curveTo(a, o, i, r, M, E), c.curveTo(j, I, R, N, g, y);
                            break;

                          case 37:
                            a = g + u.shift(), o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), M = i + u.shift(), E = r + u.shift(), j = M + u.shift(), I = E + u.shift(), R = j + u.shift(), N = I + u.shift(), Math.abs(R - g) > Math.abs(N - y) ? g = R + u.shift() : y = N + u.shift(), c.curveTo(a, o, i, r, M, E), c.curveTo(j, I, R, N, g, y);
                            break;

                          default:
                            console.log("Glyph " + t.index + ": unknown operator 1200" + D), u.length = 0;
                        }

                        break;

                      case 14:
                        u.length > 0 && !h && (w = u.shift() + d, h = !0), f && (c.closePath(), f = !1);
                        break;

                      case 18:
                        S();
                        break;

                      case 19:
                      case 20:
                        S(), A += m + 7 >> 3;
                        break;

                      case 21:
                        u.length > 2 && !h && (w = u.shift() + d, h = !0), y += u.pop(), x(g += u.pop(), y);
                        break;

                      case 22:
                        u.length > 1 && !h && (w = u.shift() + d, h = !0), x(g += u.pop(), y);
                        break;

                      case 23:
                        S();
                        break;

                      case 24:
                        for (; u.length > 2;) a = g + u.shift(), o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), g = i + u.shift(), y = r + u.shift(), c.curveTo(a, o, i, r, g, y);

                        g += u.shift(), y += u.shift(), c.lineTo(g, y);
                        break;

                      case 25:
                        for (; u.length > 6;) g += u.shift(), y += u.shift(), c.lineTo(g, y);

                        a = g + u.shift(), o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), g = i + u.shift(), y = r + u.shift(), c.curveTo(a, o, i, r, g, y);
                        break;

                      case 26:
                        for (u.length % 2 && (g += u.shift()); u.length > 0;) a = g, o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), g = i, y = r + u.shift(), c.curveTo(a, o, i, r, g, y);

                        break;

                      case 27:
                        for (u.length % 2 && (y += u.shift()); u.length > 0;) a = g + u.shift(), o = y, i = a + u.shift(), r = o + u.shift(), g = i + u.shift(), y = r, c.curveTo(a, o, i, r, g, y);

                        break;

                      case 28:
                        v = p[A], b = p[A + 1], u.push((v << 24 | b << 16) >> 16), A += 2;
                        break;

                      case 29:
                        C = u.pop() + e.gsubrsBias, (_ = e.gsubrs[C]) && n(_);
                        break;

                      case 30:
                        for (; u.length > 0 && (a = g, o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), g = i + u.shift(), y = r + (1 === u.length ? u.shift() : 0), c.curveTo(a, o, i, r, g, y), 0 !== u.length);) a = g + u.shift(), o = y, i = a + u.shift(), r = o + u.shift(), y = r + u.shift(), g = i + (1 === u.length ? u.shift() : 0), c.curveTo(a, o, i, r, g, y);

                        break;

                      case 31:
                        for (; u.length > 0 && (a = g + u.shift(), o = y, i = a + u.shift(), r = o + u.shift(), y = r + u.shift(), g = i + (1 === u.length ? u.shift() : 0), c.curveTo(a, o, i, r, g, y), 0 !== u.length);) a = g, o = y + u.shift(), i = a + u.shift(), r = o + u.shift(), g = i + u.shift(), y = r + (1 === u.length ? u.shift() : 0), c.curveTo(a, o, i, r, g, y);

                        break;

                      default:
                        D < 32 ? console.log("Glyph " + t.index + ": unknown operator " + D) : D < 247 ? u.push(D - 139) : D < 251 ? (v = p[A], A += 1, u.push(256 * (D - 247) + v + 108)) : D < 255 ? (v = p[A], A += 1, u.push(256 * -(D - 251) - v - 108)) : (v = p[A], b = p[A + 1], k = p[A + 2], T = p[A + 3], A += 4, u.push((v << 24 | b << 16 | k << 8 | T) / 65536));
                    }
                  }
                }(n), t.advanceWidth = w, c;
              }

              function Oe(e, t) {
                var n,
                    a = ce.indexOf(e);
                return a >= 0 && (n = a), (a = t.indexOf(e)) >= 0 ? n = a + ce.length : (n = ce.length + t.length, t.push(e)), n;
              }

              function Fe(e, t, n) {
                for (var a = {}, o = 0; o < e.length; o += 1) {
                  var i = e[o],
                      r = t[i.name];
                  void 0 === r || Te(r, i.value) || ("SID" === i.type && (r = Oe(r, n)), a[i.op] = {
                    name: i.name,
                    type: i.type,
                    value: r
                  });
                }

                return a;
              }

              function Be(e, t) {
                var n = new ee.Record("Top DICT", [{
                  name: "dict",
                  type: "DICT",
                  value: {}
                }]);
                return n.dict = Fe(Re, e, t), n;
              }

              function Ge(e) {
                var t = new ee.Record("Top DICT INDEX", [{
                  name: "topDicts",
                  type: "INDEX",
                  value: []
                }]);
                return t.topDicts = [{
                  name: "topDict_0",
                  type: "TABLE",
                  value: e
                }], t;
              }

              function Ue(e) {
                var t = [],
                    n = e.path;
                t.push({
                  name: "width",
                  type: "NUMBER",
                  value: e.advanceWidth
                });

                for (var a = 0, o = 0, i = 0; i < n.commands.length; i += 1) {
                  var r = void 0,
                      s = void 0,
                      l = n.commands[i];
                  if ("Q" === l.type && (l = {
                    type: "C",
                    x: l.x,
                    y: l.y,
                    x1: 1 / 3 * a + 2 / 3 * l.x1,
                    y1: 1 / 3 * o + 2 / 3 * l.y1,
                    x2: 1 / 3 * l.x + 2 / 3 * l.x1,
                    y2: 1 / 3 * l.y + 2 / 3 * l.y1
                  }), "M" === l.type) r = Math.round(l.x - a), s = Math.round(l.y - o), t.push({
                    name: "dx",
                    type: "NUMBER",
                    value: r
                  }), t.push({
                    name: "dy",
                    type: "NUMBER",
                    value: s
                  }), t.push({
                    name: "rmoveto",
                    type: "OP",
                    value: 21
                  }), a = Math.round(l.x), o = Math.round(l.y);else if ("L" === l.type) r = Math.round(l.x - a), s = Math.round(l.y - o), t.push({
                    name: "dx",
                    type: "NUMBER",
                    value: r
                  }), t.push({
                    name: "dy",
                    type: "NUMBER",
                    value: s
                  }), t.push({
                    name: "rlineto",
                    type: "OP",
                    value: 5
                  }), a = Math.round(l.x), o = Math.round(l.y);else if ("C" === l.type) {
                    var p = Math.round(l.x1 - a),
                        d = Math.round(l.y1 - o),
                        c = Math.round(l.x2 - l.x1),
                        u = Math.round(l.y2 - l.y1);
                    r = Math.round(l.x - l.x2), s = Math.round(l.y - l.y2), t.push({
                      name: "dx1",
                      type: "NUMBER",
                      value: p
                    }), t.push({
                      name: "dy1",
                      type: "NUMBER",
                      value: d
                    }), t.push({
                      name: "dx2",
                      type: "NUMBER",
                      value: c
                    }), t.push({
                      name: "dy2",
                      type: "NUMBER",
                      value: u
                    }), t.push({
                      name: "dx",
                      type: "NUMBER",
                      value: r
                    }), t.push({
                      name: "dy",
                      type: "NUMBER",
                      value: s
                    }), t.push({
                      name: "rrcurveto",
                      type: "OP",
                      value: 8
                    }), a = Math.round(l.x), o = Math.round(l.y);
                  }
                }

                return t.push({
                  name: "endchar",
                  type: "OP",
                  value: 14
                }), t;
              }

              var ze = {
                parse: function (e, t, n) {
                  n.tables.cff = {};

                  var a = _e(e, function (e, t) {
                    var n = {};
                    return n.formatMajor = le.getCard8(e, t), n.formatMinor = le.getCard8(e, t + 1), n.size = le.getCard8(e, t + 2), n.offsetSize = le.getCard8(e, t + 3), n.startOffset = t, n.endOffset = t + 4, n;
                  }(e, t).endOffset, le.bytesToString),
                      o = _e(e, a.endOffset),
                      i = _e(e, o.endOffset, le.bytesToString),
                      r = _e(e, i.endOffset);

                  n.gsubrs = r.objects, n.gsubrsBias = Ce(n.gsubrs);
                  var s = Le(e, t, o.objects, i.objects);
                  if (1 !== s.length) throw new Error("CFF table has too many fonts in 'FontSet' - count of fonts NameIndex.length = " + s.length);
                  var l = s[0];

                  if (n.tables.cff.topDict = l, l._privateDict && (n.defaultWidthX = l._privateDict.defaultWidthX, n.nominalWidthX = l._privateDict.nominalWidthX), void 0 !== l.ros[0] && void 0 !== l.ros[1] && (n.isCIDFont = !0), n.isCIDFont) {
                    var p = l.fdArray,
                        d = l.fdSelect;
                    if (0 === p || 0 === d) throw new Error("Font is marked as a CID font, but FDArray and/or FDSelect information is missing");
                    var c = Le(e, t, _e(e, p += t).objects, i.objects);
                    l._fdArray = c, d += t, l._fdSelect = function (e, t, n, a) {
                      var o,
                          i = [],
                          r = new le.Parser(e, t),
                          s = r.parseCard8();
                      if (0 === s) for (var l = 0; l < n; l++) {
                        if ((o = r.parseCard8()) >= a) throw new Error("CFF table CID Font FDSelect has bad FD index value " + o + " (FD count " + a + ")");
                        i.push(o);
                      } else {
                        if (3 !== s) throw new Error("CFF Table CID Font FDSelect table has unsupported format " + s);
                        var p,
                            d = r.parseCard16(),
                            c = r.parseCard16();
                        if (0 !== c) throw new Error("CFF Table CID Font FDSelect format 3 range has bad initial GID " + c);

                        for (var u = 0; u < d; u++) {
                          if (o = r.parseCard8(), p = r.parseCard16(), o >= a) throw new Error("CFF table CID Font FDSelect has bad FD index value " + o + " (FD count " + a + ")");
                          if (p > n) throw new Error("CFF Table CID Font FDSelect format 3 range has bad GID " + p);

                          for (; c < p; c++) i.push(o);

                          c = p;
                        }

                        if (p !== n) throw new Error("CFF Table CID Font FDSelect format 3 range has bad final GID " + p);
                      }
                      return i;
                    }(e, d, n.numGlyphs, c.length);
                  }

                  var u = t + l.private[1],
                      m = De(e, u, l.private[0], i.objects);

                  if (n.defaultWidthX = m.defaultWidthX, n.nominalWidthX = m.nominalWidthX, 0 !== m.subrs) {
                    var h = _e(e, u + m.subrs);

                    n.subrs = h.objects, n.subrsBias = Ce(n.subrs);
                  } else n.subrs = [], n.subrsBias = 0;

                  var f = _e(e, t + l.charStrings);

                  n.nGlyphs = f.objects.length;

                  var g = function (e, t, n, a) {
                    var o,
                        i,
                        r = new le.Parser(e, t);
                    n -= 1;
                    var s = [".notdef"],
                        l = r.parseCard8();
                    if (0 === l) for (var p = 0; p < n; p += 1) o = r.parseSID(), s.push(je(a, o));else if (1 === l) for (; s.length <= n;) {
                      o = r.parseSID(), i = r.parseCard8();

                      for (var d = 0; d <= i; d += 1) s.push(je(a, o)), o += 1;
                    } else {
                      if (2 !== l) throw new Error("Unknown charset format " + l);

                      for (; s.length <= n;) {
                        o = r.parseSID(), i = r.parseCard16();

                        for (var c = 0; c <= i; c += 1) s.push(je(a, o)), o += 1;
                      }
                    }
                    return s;
                  }(e, t + l.charset, n.nGlyphs, i.objects);

                  0 === l.encoding ? n.cffEncoding = new ye(ue, g) : 1 === l.encoding ? n.cffEncoding = new ye(me, g) : n.cffEncoding = function (e, t, n) {
                    var a,
                        o = {},
                        i = new le.Parser(e, t),
                        r = i.parseCard8();
                    if (0 === r) for (var s = i.parseCard8(), l = 0; l < s; l += 1) o[a = i.parseCard8()] = l;else {
                      if (1 !== r) throw new Error("Unknown encoding format " + r);
                      var p = i.parseCard8();
                      a = 1;

                      for (var d = 0; d < p; d += 1) for (var c = i.parseCard8(), u = i.parseCard8(), m = c; m <= c + u; m += 1) o[m] = a, a += 1;
                    }
                    return new ye(o, n);
                  }(e, t + l.encoding, g), n.encoding = n.encoding || n.cffEncoding, n.glyphs = new ke.GlyphSet(n);

                  for (var y = 0; y < n.nGlyphs; y += 1) {
                    var v = f.objects[y];
                    n.glyphs.push(y, ke.cffGlyphLoader(n, y, Pe, v));
                  }
                },
                make: function (e, t) {
                  for (var n, a = new ee.Table("CFF ", [{
                    name: "header",
                    type: "RECORD"
                  }, {
                    name: "nameIndex",
                    type: "RECORD"
                  }, {
                    name: "topDictIndex",
                    type: "RECORD"
                  }, {
                    name: "stringIndex",
                    type: "RECORD"
                  }, {
                    name: "globalSubrIndex",
                    type: "RECORD"
                  }, {
                    name: "charsets",
                    type: "RECORD"
                  }, {
                    name: "charStringsIndex",
                    type: "RECORD"
                  }, {
                    name: "privateDict",
                    type: "RECORD"
                  }]), o = 1 / t.unitsPerEm, i = {
                    version: t.version,
                    fullName: t.fullName,
                    familyName: t.familyName,
                    weight: t.weightName,
                    fontBBox: t.fontBBox || [0, 0, 0, 0],
                    fontMatrix: [o, 0, 0, o, 0, 0],
                    charset: 999,
                    encoding: 0,
                    charStrings: 999,
                    private: [0, 999]
                  }, r = [], s = 1; s < e.length; s += 1) n = e.get(s), r.push(n.name);

                  var l = [];
                  a.header = new ee.Record("Header", [{
                    name: "major",
                    type: "Card8",
                    value: 1
                  }, {
                    name: "minor",
                    type: "Card8",
                    value: 0
                  }, {
                    name: "hdrSize",
                    type: "Card8",
                    value: 4
                  }, {
                    name: "major",
                    type: "Card8",
                    value: 1
                  }]), a.nameIndex = function (e) {
                    var t = new ee.Record("Name INDEX", [{
                      name: "names",
                      type: "INDEX",
                      value: []
                    }]);
                    t.names = [];

                    for (var n = 0; n < e.length; n += 1) t.names.push({
                      name: "name_" + n,
                      type: "NAME",
                      value: e[n]
                    });

                    return t;
                  }([t.postScriptName]);
                  var p = Be(i, l);
                  a.topDictIndex = Ge(p), a.globalSubrIndex = new ee.Record("Global Subr INDEX", [{
                    name: "subrs",
                    type: "INDEX",
                    value: []
                  }]), a.charsets = function (e, t) {
                    for (var n = new ee.Record("Charsets", [{
                      name: "format",
                      type: "Card8",
                      value: 0
                    }]), a = 0; a < e.length; a += 1) {
                      var o = Oe(e[a], t);
                      n.fields.push({
                        name: "glyph_" + a,
                        type: "SID",
                        value: o
                      });
                    }

                    return n;
                  }(r, l), a.charStringsIndex = function (e) {
                    for (var t = new ee.Record("CharStrings INDEX", [{
                      name: "charStrings",
                      type: "INDEX",
                      value: []
                    }]), n = 0; n < e.length; n += 1) {
                      var a = e.get(n),
                          o = Ue(a);
                      t.charStrings.push({
                        name: a.name,
                        type: "CHARSTRING",
                        value: o
                      });
                    }

                    return t;
                  }(e), a.privateDict = function (e, t) {
                    var n = new ee.Record("Private DICT", [{
                      name: "dict",
                      type: "DICT",
                      value: {}
                    }]);
                    return n.dict = Fe(Ne, e, t), n;
                  }({}, l), a.stringIndex = function (e) {
                    var t = new ee.Record("String INDEX", [{
                      name: "strings",
                      type: "INDEX",
                      value: []
                    }]);
                    t.strings = [];

                    for (var n = 0; n < e.length; n += 1) t.strings.push({
                      name: "string_" + n,
                      type: "STRING",
                      value: e[n]
                    });

                    return t;
                  }(l);
                  var d = a.header.sizeOf() + a.nameIndex.sizeOf() + a.topDictIndex.sizeOf() + a.stringIndex.sizeOf() + a.globalSubrIndex.sizeOf();
                  return i.charset = d, i.encoding = 0, i.charStrings = i.charset + a.charsets.sizeOf(), i.private[1] = i.charStrings + a.charStringsIndex.sizeOf(), p = Be(i, l), a.topDictIndex = Ge(p), a;
                }
              },
                  qe = {
                parse: function (e, t) {
                  var n = {},
                      a = new le.Parser(e, t);
                  return n.version = a.parseVersion(), n.fontRevision = Math.round(1e3 * a.parseFixed()) / 1e3, n.checkSumAdjustment = a.parseULong(), n.magicNumber = a.parseULong(), A.argument(1594834165 === n.magicNumber, "Font header has wrong magic number."), n.flags = a.parseUShort(), n.unitsPerEm = a.parseUShort(), n.created = a.parseLongDateTime(), n.modified = a.parseLongDateTime(), n.xMin = a.parseShort(), n.yMin = a.parseShort(), n.xMax = a.parseShort(), n.yMax = a.parseShort(), n.macStyle = a.parseUShort(), n.lowestRecPPEM = a.parseUShort(), n.fontDirectionHint = a.parseShort(), n.indexToLocFormat = a.parseShort(), n.glyphDataFormat = a.parseShort(), n;
                },
                make: function (e) {
                  var t = Math.round(new Date().getTime() / 1e3) + 2082844800,
                      n = t;
                  return e.createdTimestamp && (n = e.createdTimestamp + 2082844800), new ee.Table("head", [{
                    name: "version",
                    type: "FIXED",
                    value: 65536
                  }, {
                    name: "fontRevision",
                    type: "FIXED",
                    value: 65536
                  }, {
                    name: "checkSumAdjustment",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "magicNumber",
                    type: "ULONG",
                    value: 1594834165
                  }, {
                    name: "flags",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "unitsPerEm",
                    type: "USHORT",
                    value: 1e3
                  }, {
                    name: "created",
                    type: "LONGDATETIME",
                    value: n
                  }, {
                    name: "modified",
                    type: "LONGDATETIME",
                    value: t
                  }, {
                    name: "xMin",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "yMin",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "xMax",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "yMax",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "macStyle",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "lowestRecPPEM",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "fontDirectionHint",
                    type: "SHORT",
                    value: 2
                  }, {
                    name: "indexToLocFormat",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "glyphDataFormat",
                    type: "SHORT",
                    value: 0
                  }], e);
                }
              },
                  Ve = {
                parse: function (e, t) {
                  var n = {},
                      a = new le.Parser(e, t);
                  return n.version = a.parseVersion(), n.ascender = a.parseShort(), n.descender = a.parseShort(), n.lineGap = a.parseShort(), n.advanceWidthMax = a.parseUShort(), n.minLeftSideBearing = a.parseShort(), n.minRightSideBearing = a.parseShort(), n.xMaxExtent = a.parseShort(), n.caretSlopeRise = a.parseShort(), n.caretSlopeRun = a.parseShort(), n.caretOffset = a.parseShort(), a.relativeOffset += 8, n.metricDataFormat = a.parseShort(), n.numberOfHMetrics = a.parseUShort(), n;
                },
                make: function (e) {
                  return new ee.Table("hhea", [{
                    name: "version",
                    type: "FIXED",
                    value: 65536
                  }, {
                    name: "ascender",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "descender",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "lineGap",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "advanceWidthMax",
                    type: "UFWORD",
                    value: 0
                  }, {
                    name: "minLeftSideBearing",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "minRightSideBearing",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "xMaxExtent",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "caretSlopeRise",
                    type: "SHORT",
                    value: 1
                  }, {
                    name: "caretSlopeRun",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "caretOffset",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "reserved1",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "reserved2",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "reserved3",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "reserved4",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "metricDataFormat",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "numberOfHMetrics",
                    type: "USHORT",
                    value: 0
                  }], e);
                }
              },
                  We = {
                parse: function (e, t, n, a, o) {
                  for (var i, r, s = new le.Parser(e, t), l = 0; l < a; l += 1) {
                    l < n && (i = s.parseUShort(), r = s.parseShort());
                    var p = o.get(l);
                    p.advanceWidth = i, p.leftSideBearing = r;
                  }
                },
                make: function (e) {
                  for (var t = new ee.Table("hmtx", []), n = 0; n < e.length; n += 1) {
                    var a = e.get(n),
                        o = a.advanceWidth || 0,
                        i = a.leftSideBearing || 0;
                    t.fields.push({
                      name: "advanceWidth_" + n,
                      type: "USHORT",
                      value: o
                    }), t.fields.push({
                      name: "leftSideBearing_" + n,
                      type: "SHORT",
                      value: i
                    });
                  }

                  return t;
                }
              },
                  Xe = {
                make: function (e) {
                  for (var t = new ee.Table("ltag", [{
                    name: "version",
                    type: "ULONG",
                    value: 1
                  }, {
                    name: "flags",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "numTags",
                    type: "ULONG",
                    value: e.length
                  }]), n = "", a = 12 + 4 * e.length, o = 0; o < e.length; ++o) {
                    var i = n.indexOf(e[o]);
                    i < 0 && (i = n.length, n += e[o]), t.fields.push({
                      name: "offset " + o,
                      type: "USHORT",
                      value: a + i
                    }), t.fields.push({
                      name: "length " + o,
                      type: "USHORT",
                      value: e[o].length
                    });
                  }

                  return t.fields.push({
                    name: "stringPool",
                    type: "CHARARRAY",
                    value: n
                  }), t;
                },
                parse: function (e, t) {
                  var n = new le.Parser(e, t),
                      a = n.parseULong();
                  A.argument(1 === a, "Unsupported ltag table version."), n.skip("uLong", 1);

                  for (var o = n.parseULong(), i = [], r = 0; r < o; r++) {
                    for (var s = "", l = t + n.parseUShort(), p = n.parseUShort(), d = l; d < l + p; ++d) s += String.fromCharCode(e.getInt8(d));

                    i.push(s);
                  }

                  return i;
                }
              },
                  He = {
                parse: function (e, t) {
                  var n = {},
                      a = new le.Parser(e, t);
                  return n.version = a.parseVersion(), n.numGlyphs = a.parseUShort(), 1 === n.version && (n.maxPoints = a.parseUShort(), n.maxContours = a.parseUShort(), n.maxCompositePoints = a.parseUShort(), n.maxCompositeContours = a.parseUShort(), n.maxZones = a.parseUShort(), n.maxTwilightPoints = a.parseUShort(), n.maxStorage = a.parseUShort(), n.maxFunctionDefs = a.parseUShort(), n.maxInstructionDefs = a.parseUShort(), n.maxStackElements = a.parseUShort(), n.maxSizeOfInstructions = a.parseUShort(), n.maxComponentElements = a.parseUShort(), n.maxComponentDepth = a.parseUShort()), n;
                },
                make: function (e) {
                  return new ee.Table("maxp", [{
                    name: "version",
                    type: "FIXED",
                    value: 20480
                  }, {
                    name: "numGlyphs",
                    type: "USHORT",
                    value: e
                  }]);
                }
              },
                  Ye = ["copyright", "fontFamily", "fontSubfamily", "uniqueID", "fullName", "version", "postScriptName", "trademark", "manufacturer", "designer", "description", "manufacturerURL", "designerURL", "license", "licenseURL", "reserved", "preferredFamily", "preferredSubfamily", "compatibleFullName", "sampleText", "postScriptFindFontName", "wwsFamily", "wwsSubfamily"],
                  Ze = {
                0: "en",
                1: "fr",
                2: "de",
                3: "it",
                4: "nl",
                5: "sv",
                6: "es",
                7: "da",
                8: "pt",
                9: "no",
                10: "he",
                11: "ja",
                12: "ar",
                13: "fi",
                14: "el",
                15: "is",
                16: "mt",
                17: "tr",
                18: "hr",
                19: "zh-Hant",
                20: "ur",
                21: "hi",
                22: "th",
                23: "ko",
                24: "lt",
                25: "pl",
                26: "hu",
                27: "es",
                28: "lv",
                29: "se",
                30: "fo",
                31: "fa",
                32: "ru",
                33: "zh",
                34: "nl-BE",
                35: "ga",
                36: "sq",
                37: "ro",
                38: "cz",
                39: "sk",
                40: "si",
                41: "yi",
                42: "sr",
                43: "mk",
                44: "bg",
                45: "uk",
                46: "be",
                47: "uz",
                48: "kk",
                49: "az-Cyrl",
                50: "az-Arab",
                51: "hy",
                52: "ka",
                53: "mo",
                54: "ky",
                55: "tg",
                56: "tk",
                57: "mn-CN",
                58: "mn",
                59: "ps",
                60: "ks",
                61: "ku",
                62: "sd",
                63: "bo",
                64: "ne",
                65: "sa",
                66: "mr",
                67: "bn",
                68: "as",
                69: "gu",
                70: "pa",
                71: "or",
                72: "ml",
                73: "kn",
                74: "ta",
                75: "te",
                76: "si",
                77: "my",
                78: "km",
                79: "lo",
                80: "vi",
                81: "id",
                82: "tl",
                83: "ms",
                84: "ms-Arab",
                85: "am",
                86: "ti",
                87: "om",
                88: "so",
                89: "sw",
                90: "rw",
                91: "rn",
                92: "ny",
                93: "mg",
                94: "eo",
                128: "cy",
                129: "eu",
                130: "ca",
                131: "la",
                132: "qu",
                133: "gn",
                134: "ay",
                135: "tt",
                136: "ug",
                137: "dz",
                138: "jv",
                139: "su",
                140: "gl",
                141: "af",
                142: "br",
                143: "iu",
                144: "gd",
                145: "gv",
                146: "ga",
                147: "to",
                148: "el-polyton",
                149: "kl",
                150: "az",
                151: "nn"
              },
                  Qe = {
                0: 0,
                1: 0,
                2: 0,
                3: 0,
                4: 0,
                5: 0,
                6: 0,
                7: 0,
                8: 0,
                9: 0,
                10: 5,
                11: 1,
                12: 4,
                13: 0,
                14: 6,
                15: 0,
                16: 0,
                17: 0,
                18: 0,
                19: 2,
                20: 4,
                21: 9,
                22: 21,
                23: 3,
                24: 29,
                25: 29,
                26: 29,
                27: 29,
                28: 29,
                29: 0,
                30: 0,
                31: 4,
                32: 7,
                33: 25,
                34: 0,
                35: 0,
                36: 0,
                37: 0,
                38: 29,
                39: 29,
                40: 0,
                41: 5,
                42: 7,
                43: 7,
                44: 7,
                45: 7,
                46: 7,
                47: 7,
                48: 7,
                49: 7,
                50: 4,
                51: 24,
                52: 23,
                53: 7,
                54: 7,
                55: 7,
                56: 7,
                57: 27,
                58: 7,
                59: 4,
                60: 4,
                61: 4,
                62: 4,
                63: 26,
                64: 9,
                65: 9,
                66: 9,
                67: 13,
                68: 13,
                69: 11,
                70: 10,
                71: 12,
                72: 17,
                73: 16,
                74: 14,
                75: 15,
                76: 18,
                77: 19,
                78: 20,
                79: 22,
                80: 30,
                81: 0,
                82: 0,
                83: 0,
                84: 4,
                85: 28,
                86: 28,
                87: 28,
                88: 0,
                89: 0,
                90: 0,
                91: 0,
                92: 0,
                93: 0,
                94: 0,
                128: 0,
                129: 0,
                130: 0,
                131: 0,
                132: 0,
                133: 0,
                134: 0,
                135: 7,
                136: 4,
                137: 26,
                138: 0,
                139: 0,
                140: 0,
                141: 0,
                142: 0,
                143: 28,
                144: 0,
                145: 0,
                146: 0,
                147: 0,
                148: 6,
                149: 0,
                150: 0,
                151: 0
              },
                  Je = {
                1078: "af",
                1052: "sq",
                1156: "gsw",
                1118: "am",
                5121: "ar-DZ",
                15361: "ar-BH",
                3073: "ar",
                2049: "ar-IQ",
                11265: "ar-JO",
                13313: "ar-KW",
                12289: "ar-LB",
                4097: "ar-LY",
                6145: "ary",
                8193: "ar-OM",
                16385: "ar-QA",
                1025: "ar-SA",
                10241: "ar-SY",
                7169: "aeb",
                14337: "ar-AE",
                9217: "ar-YE",
                1067: "hy",
                1101: "as",
                2092: "az-Cyrl",
                1068: "az",
                1133: "ba",
                1069: "eu",
                1059: "be",
                2117: "bn",
                1093: "bn-IN",
                8218: "bs-Cyrl",
                5146: "bs",
                1150: "br",
                1026: "bg",
                1027: "ca",
                3076: "zh-HK",
                5124: "zh-MO",
                2052: "zh",
                4100: "zh-SG",
                1028: "zh-TW",
                1155: "co",
                1050: "hr",
                4122: "hr-BA",
                1029: "cs",
                1030: "da",
                1164: "prs",
                1125: "dv",
                2067: "nl-BE",
                1043: "nl",
                3081: "en-AU",
                10249: "en-BZ",
                4105: "en-CA",
                9225: "en-029",
                16393: "en-IN",
                6153: "en-IE",
                8201: "en-JM",
                17417: "en-MY",
                5129: "en-NZ",
                13321: "en-PH",
                18441: "en-SG",
                7177: "en-ZA",
                11273: "en-TT",
                2057: "en-GB",
                1033: "en",
                12297: "en-ZW",
                1061: "et",
                1080: "fo",
                1124: "fil",
                1035: "fi",
                2060: "fr-BE",
                3084: "fr-CA",
                1036: "fr",
                5132: "fr-LU",
                6156: "fr-MC",
                4108: "fr-CH",
                1122: "fy",
                1110: "gl",
                1079: "ka",
                3079: "de-AT",
                1031: "de",
                5127: "de-LI",
                4103: "de-LU",
                2055: "de-CH",
                1032: "el",
                1135: "kl",
                1095: "gu",
                1128: "ha",
                1037: "he",
                1081: "hi",
                1038: "hu",
                1039: "is",
                1136: "ig",
                1057: "id",
                1117: "iu",
                2141: "iu-Latn",
                2108: "ga",
                1076: "xh",
                1077: "zu",
                1040: "it",
                2064: "it-CH",
                1041: "ja",
                1099: "kn",
                1087: "kk",
                1107: "km",
                1158: "quc",
                1159: "rw",
                1089: "sw",
                1111: "kok",
                1042: "ko",
                1088: "ky",
                1108: "lo",
                1062: "lv",
                1063: "lt",
                2094: "dsb",
                1134: "lb",
                1071: "mk",
                2110: "ms-BN",
                1086: "ms",
                1100: "ml",
                1082: "mt",
                1153: "mi",
                1146: "arn",
                1102: "mr",
                1148: "moh",
                1104: "mn",
                2128: "mn-CN",
                1121: "ne",
                1044: "nb",
                2068: "nn",
                1154: "oc",
                1096: "or",
                1123: "ps",
                1045: "pl",
                1046: "pt",
                2070: "pt-PT",
                1094: "pa",
                1131: "qu-BO",
                2155: "qu-EC",
                3179: "qu",
                1048: "ro",
                1047: "rm",
                1049: "ru",
                9275: "smn",
                4155: "smj-NO",
                5179: "smj",
                3131: "se-FI",
                1083: "se",
                2107: "se-SE",
                8251: "sms",
                6203: "sma-NO",
                7227: "sms",
                1103: "sa",
                7194: "sr-Cyrl-BA",
                3098: "sr",
                6170: "sr-Latn-BA",
                2074: "sr-Latn",
                1132: "nso",
                1074: "tn",
                1115: "si",
                1051: "sk",
                1060: "sl",
                11274: "es-AR",
                16394: "es-BO",
                13322: "es-CL",
                9226: "es-CO",
                5130: "es-CR",
                7178: "es-DO",
                12298: "es-EC",
                17418: "es-SV",
                4106: "es-GT",
                18442: "es-HN",
                2058: "es-MX",
                19466: "es-NI",
                6154: "es-PA",
                15370: "es-PY",
                10250: "es-PE",
                20490: "es-PR",
                3082: "es",
                1034: "es",
                21514: "es-US",
                14346: "es-UY",
                8202: "es-VE",
                2077: "sv-FI",
                1053: "sv",
                1114: "syr",
                1064: "tg",
                2143: "tzm",
                1097: "ta",
                1092: "tt",
                1098: "te",
                1054: "th",
                1105: "bo",
                1055: "tr",
                1090: "tk",
                1152: "ug",
                1058: "uk",
                1070: "hsb",
                1056: "ur",
                2115: "uz-Cyrl",
                1091: "uz",
                1066: "vi",
                1106: "cy",
                1160: "wo",
                1157: "sah",
                1144: "ii",
                1130: "yo"
              };

              function Ke(e, t, n) {
                switch (e) {
                  case 0:
                    if (65535 === t) return "und";
                    if (n) return n[t];
                    break;

                  case 1:
                    return Ze[t];

                  case 3:
                    return Je[t];
                }
              }

              var $e = "utf-16",
                  et = {
                0: "macintosh",
                1: "x-mac-japanese",
                2: "x-mac-chinesetrad",
                3: "x-mac-korean",
                6: "x-mac-greek",
                7: "x-mac-cyrillic",
                9: "x-mac-devanagai",
                10: "x-mac-gurmukhi",
                11: "x-mac-gujarati",
                12: "x-mac-oriya",
                13: "x-mac-bengali",
                14: "x-mac-tamil",
                15: "x-mac-telugu",
                16: "x-mac-kannada",
                17: "x-mac-malayalam",
                18: "x-mac-sinhalese",
                19: "x-mac-burmese",
                20: "x-mac-khmer",
                21: "x-mac-thai",
                22: "x-mac-lao",
                23: "x-mac-georgian",
                24: "x-mac-armenian",
                25: "x-mac-chinesesimp",
                26: "x-mac-tibetan",
                27: "x-mac-mongolian",
                28: "x-mac-ethiopic",
                29: "x-mac-ce",
                30: "x-mac-vietnamese",
                31: "x-mac-extarabic"
              },
                  tt = {
                15: "x-mac-icelandic",
                17: "x-mac-turkish",
                18: "x-mac-croatian",
                24: "x-mac-ce",
                25: "x-mac-ce",
                26: "x-mac-ce",
                27: "x-mac-ce",
                28: "x-mac-ce",
                30: "x-mac-icelandic",
                37: "x-mac-romanian",
                38: "x-mac-ce",
                39: "x-mac-ce",
                40: "x-mac-ce",
                143: "x-mac-inuit",
                146: "x-mac-gaelic"
              };

              function nt(e, t, n) {
                switch (e) {
                  case 0:
                    return $e;

                  case 1:
                    return tt[n] || et[t];

                  case 3:
                    if (1 === t || 10 === t) return $e;
                }
              }

              function at(e) {
                var t = {};

                for (var n in e) t[e[n]] = parseInt(n);

                return t;
              }

              function ot(e, t, n, a, o, i) {
                return new ee.Record("NameRecord", [{
                  name: "platformID",
                  type: "USHORT",
                  value: e
                }, {
                  name: "encodingID",
                  type: "USHORT",
                  value: t
                }, {
                  name: "languageID",
                  type: "USHORT",
                  value: n
                }, {
                  name: "nameID",
                  type: "USHORT",
                  value: a
                }, {
                  name: "length",
                  type: "USHORT",
                  value: o
                }, {
                  name: "offset",
                  type: "USHORT",
                  value: i
                }]);
              }

              function it(e, t) {
                var n = function (e, t) {
                  var n = e.length,
                      a = t.length - n + 1;

                  e: for (var o = 0; o < a; o++) for (; o < a; o++) {
                    for (var i = 0; i < n; i++) if (t[o + i] !== e[i]) continue e;

                    return o;
                  }

                  return -1;
                }(e, t);

                if (n < 0) {
                  n = t.length;

                  for (var a = 0, o = e.length; a < o; ++a) t.push(e[a]);
                }

                return n;
              }

              var rt = {
                parse: function (e, t, n) {
                  for (var a = {}, o = new le.Parser(e, t), i = o.parseUShort(), r = o.parseUShort(), s = o.offset + o.parseUShort(), l = 0; l < r; l++) {
                    var p = o.parseUShort(),
                        d = o.parseUShort(),
                        c = o.parseUShort(),
                        u = o.parseUShort(),
                        m = Ye[u] || u,
                        h = o.parseUShort(),
                        f = o.parseUShort(),
                        g = Ke(p, c, n),
                        y = nt(p, d, c);

                    if (void 0 !== y && void 0 !== g) {
                      var v = void 0;

                      if (v = y === $e ? D.UTF16(e, s + f, h) : D.MACSTRING(e, s + f, h, y)) {
                        var b = a[m];
                        void 0 === b && (b = a[m] = {}), b[g] = v;
                      }
                    }
                  }

                  return 1 === i && o.parseUShort(), a;
                },
                make: function (e, t) {
                  var n,
                      a = [],
                      o = {},
                      i = at(Ye);

                  for (var r in e) {
                    var s = i[r];
                    if (void 0 === s && (s = r), n = parseInt(s), isNaN(n)) throw new Error('Name table entry "' + r + '" does not exist, see nameTableNames for complete list.');
                    o[n] = e[r], a.push(n);
                  }

                  for (var l = at(Ze), p = at(Je), d = [], c = [], u = 0; u < a.length; u++) {
                    var m = o[n = a[u]];

                    for (var h in m) {
                      var f = m[h],
                          g = 1,
                          y = l[h],
                          v = Qe[y],
                          b = nt(g, v, y),
                          w = L.MACSTRING(f, b);
                      void 0 === w && (g = 0, (y = t.indexOf(h)) < 0 && (y = t.length, t.push(h)), v = 4, w = L.UTF16(f));
                      var x = it(w, c);
                      d.push(ot(g, v, y, n, w.length, x));
                      var S = p[h];

                      if (void 0 !== S) {
                        var k = L.UTF16(f),
                            T = it(k, c);
                        d.push(ot(3, 1, S, n, k.length, T));
                      }
                    }
                  }

                  d.sort(function (e, t) {
                    return e.platformID - t.platformID || e.encodingID - t.encodingID || e.languageID - t.languageID || e.nameID - t.nameID;
                  });

                  for (var C = new ee.Table("name", [{
                    name: "format",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "count",
                    type: "USHORT",
                    value: d.length
                  }, {
                    name: "stringOffset",
                    type: "USHORT",
                    value: 6 + 12 * d.length
                  }]), _ = 0; _ < d.length; _++) C.fields.push({
                    name: "record_" + _,
                    type: "RECORD",
                    value: d[_]
                  });

                  return C.fields.push({
                    name: "strings",
                    type: "LITERAL",
                    value: c
                  }), C;
                }
              },
                  st = [{
                begin: 0,
                end: 127
              }, {
                begin: 128,
                end: 255
              }, {
                begin: 256,
                end: 383
              }, {
                begin: 384,
                end: 591
              }, {
                begin: 592,
                end: 687
              }, {
                begin: 688,
                end: 767
              }, {
                begin: 768,
                end: 879
              }, {
                begin: 880,
                end: 1023
              }, {
                begin: 11392,
                end: 11519
              }, {
                begin: 1024,
                end: 1279
              }, {
                begin: 1328,
                end: 1423
              }, {
                begin: 1424,
                end: 1535
              }, {
                begin: 42240,
                end: 42559
              }, {
                begin: 1536,
                end: 1791
              }, {
                begin: 1984,
                end: 2047
              }, {
                begin: 2304,
                end: 2431
              }, {
                begin: 2432,
                end: 2559
              }, {
                begin: 2560,
                end: 2687
              }, {
                begin: 2688,
                end: 2815
              }, {
                begin: 2816,
                end: 2943
              }, {
                begin: 2944,
                end: 3071
              }, {
                begin: 3072,
                end: 3199
              }, {
                begin: 3200,
                end: 3327
              }, {
                begin: 3328,
                end: 3455
              }, {
                begin: 3584,
                end: 3711
              }, {
                begin: 3712,
                end: 3839
              }, {
                begin: 4256,
                end: 4351
              }, {
                begin: 6912,
                end: 7039
              }, {
                begin: 4352,
                end: 4607
              }, {
                begin: 7680,
                end: 7935
              }, {
                begin: 7936,
                end: 8191
              }, {
                begin: 8192,
                end: 8303
              }, {
                begin: 8304,
                end: 8351
              }, {
                begin: 8352,
                end: 8399
              }, {
                begin: 8400,
                end: 8447
              }, {
                begin: 8448,
                end: 8527
              }, {
                begin: 8528,
                end: 8591
              }, {
                begin: 8592,
                end: 8703
              }, {
                begin: 8704,
                end: 8959
              }, {
                begin: 8960,
                end: 9215
              }, {
                begin: 9216,
                end: 9279
              }, {
                begin: 9280,
                end: 9311
              }, {
                begin: 9312,
                end: 9471
              }, {
                begin: 9472,
                end: 9599
              }, {
                begin: 9600,
                end: 9631
              }, {
                begin: 9632,
                end: 9727
              }, {
                begin: 9728,
                end: 9983
              }, {
                begin: 9984,
                end: 10175
              }, {
                begin: 12288,
                end: 12351
              }, {
                begin: 12352,
                end: 12447
              }, {
                begin: 12448,
                end: 12543
              }, {
                begin: 12544,
                end: 12591
              }, {
                begin: 12592,
                end: 12687
              }, {
                begin: 43072,
                end: 43135
              }, {
                begin: 12800,
                end: 13055
              }, {
                begin: 13056,
                end: 13311
              }, {
                begin: 44032,
                end: 55215
              }, {
                begin: 55296,
                end: 57343
              }, {
                begin: 67840,
                end: 67871
              }, {
                begin: 19968,
                end: 40959
              }, {
                begin: 57344,
                end: 63743
              }, {
                begin: 12736,
                end: 12783
              }, {
                begin: 64256,
                end: 64335
              }, {
                begin: 64336,
                end: 65023
              }, {
                begin: 65056,
                end: 65071
              }, {
                begin: 65040,
                end: 65055
              }, {
                begin: 65104,
                end: 65135
              }, {
                begin: 65136,
                end: 65279
              }, {
                begin: 65280,
                end: 65519
              }, {
                begin: 65520,
                end: 65535
              }, {
                begin: 3840,
                end: 4095
              }, {
                begin: 1792,
                end: 1871
              }, {
                begin: 1920,
                end: 1983
              }, {
                begin: 3456,
                end: 3583
              }, {
                begin: 4096,
                end: 4255
              }, {
                begin: 4608,
                end: 4991
              }, {
                begin: 5024,
                end: 5119
              }, {
                begin: 5120,
                end: 5759
              }, {
                begin: 5760,
                end: 5791
              }, {
                begin: 5792,
                end: 5887
              }, {
                begin: 6016,
                end: 6143
              }, {
                begin: 6144,
                end: 6319
              }, {
                begin: 10240,
                end: 10495
              }, {
                begin: 40960,
                end: 42127
              }, {
                begin: 5888,
                end: 5919
              }, {
                begin: 66304,
                end: 66351
              }, {
                begin: 66352,
                end: 66383
              }, {
                begin: 66560,
                end: 66639
              }, {
                begin: 118784,
                end: 119039
              }, {
                begin: 119808,
                end: 120831
              }, {
                begin: 1044480,
                end: 1048573
              }, {
                begin: 65024,
                end: 65039
              }, {
                begin: 917504,
                end: 917631
              }, {
                begin: 6400,
                end: 6479
              }, {
                begin: 6480,
                end: 6527
              }, {
                begin: 6528,
                end: 6623
              }, {
                begin: 6656,
                end: 6687
              }, {
                begin: 11264,
                end: 11359
              }, {
                begin: 11568,
                end: 11647
              }, {
                begin: 19904,
                end: 19967
              }, {
                begin: 43008,
                end: 43055
              }, {
                begin: 65536,
                end: 65663
              }, {
                begin: 65856,
                end: 65935
              }, {
                begin: 66432,
                end: 66463
              }, {
                begin: 66464,
                end: 66527
              }, {
                begin: 66640,
                end: 66687
              }, {
                begin: 66688,
                end: 66735
              }, {
                begin: 67584,
                end: 67647
              }, {
                begin: 68096,
                end: 68191
              }, {
                begin: 119552,
                end: 119647
              }, {
                begin: 73728,
                end: 74751
              }, {
                begin: 119648,
                end: 119679
              }, {
                begin: 7040,
                end: 7103
              }, {
                begin: 7168,
                end: 7247
              }, {
                begin: 7248,
                end: 7295
              }, {
                begin: 43136,
                end: 43231
              }, {
                begin: 43264,
                end: 43311
              }, {
                begin: 43312,
                end: 43359
              }, {
                begin: 43520,
                end: 43615
              }, {
                begin: 65936,
                end: 65999
              }, {
                begin: 66e3,
                end: 66047
              }, {
                begin: 66208,
                end: 66271
              }, {
                begin: 127024,
                end: 127135
              }],
                  lt = {
                parse: function (e, t) {
                  var n = {},
                      a = new le.Parser(e, t);
                  n.version = a.parseUShort(), n.xAvgCharWidth = a.parseShort(), n.usWeightClass = a.parseUShort(), n.usWidthClass = a.parseUShort(), n.fsType = a.parseUShort(), n.ySubscriptXSize = a.parseShort(), n.ySubscriptYSize = a.parseShort(), n.ySubscriptXOffset = a.parseShort(), n.ySubscriptYOffset = a.parseShort(), n.ySuperscriptXSize = a.parseShort(), n.ySuperscriptYSize = a.parseShort(), n.ySuperscriptXOffset = a.parseShort(), n.ySuperscriptYOffset = a.parseShort(), n.yStrikeoutSize = a.parseShort(), n.yStrikeoutPosition = a.parseShort(), n.sFamilyClass = a.parseShort(), n.panose = [];

                  for (var o = 0; o < 10; o++) n.panose[o] = a.parseByte();

                  return n.ulUnicodeRange1 = a.parseULong(), n.ulUnicodeRange2 = a.parseULong(), n.ulUnicodeRange3 = a.parseULong(), n.ulUnicodeRange4 = a.parseULong(), n.achVendID = String.fromCharCode(a.parseByte(), a.parseByte(), a.parseByte(), a.parseByte()), n.fsSelection = a.parseUShort(), n.usFirstCharIndex = a.parseUShort(), n.usLastCharIndex = a.parseUShort(), n.sTypoAscender = a.parseShort(), n.sTypoDescender = a.parseShort(), n.sTypoLineGap = a.parseShort(), n.usWinAscent = a.parseUShort(), n.usWinDescent = a.parseUShort(), n.version >= 1 && (n.ulCodePageRange1 = a.parseULong(), n.ulCodePageRange2 = a.parseULong()), n.version >= 2 && (n.sxHeight = a.parseShort(), n.sCapHeight = a.parseShort(), n.usDefaultChar = a.parseUShort(), n.usBreakChar = a.parseUShort(), n.usMaxContent = a.parseUShort()), n;
                },
                make: function (e) {
                  return new ee.Table("OS/2", [{
                    name: "version",
                    type: "USHORT",
                    value: 3
                  }, {
                    name: "xAvgCharWidth",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "usWeightClass",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "usWidthClass",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "fsType",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "ySubscriptXSize",
                    type: "SHORT",
                    value: 650
                  }, {
                    name: "ySubscriptYSize",
                    type: "SHORT",
                    value: 699
                  }, {
                    name: "ySubscriptXOffset",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "ySubscriptYOffset",
                    type: "SHORT",
                    value: 140
                  }, {
                    name: "ySuperscriptXSize",
                    type: "SHORT",
                    value: 650
                  }, {
                    name: "ySuperscriptYSize",
                    type: "SHORT",
                    value: 699
                  }, {
                    name: "ySuperscriptXOffset",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "ySuperscriptYOffset",
                    type: "SHORT",
                    value: 479
                  }, {
                    name: "yStrikeoutSize",
                    type: "SHORT",
                    value: 49
                  }, {
                    name: "yStrikeoutPosition",
                    type: "SHORT",
                    value: 258
                  }, {
                    name: "sFamilyClass",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "bFamilyType",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bSerifStyle",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bWeight",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bProportion",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bContrast",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bStrokeVariation",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bArmStyle",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bLetterform",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bMidline",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "bXHeight",
                    type: "BYTE",
                    value: 0
                  }, {
                    name: "ulUnicodeRange1",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "ulUnicodeRange2",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "ulUnicodeRange3",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "ulUnicodeRange4",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "achVendID",
                    type: "CHARARRAY",
                    value: "XXXX"
                  }, {
                    name: "fsSelection",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "usFirstCharIndex",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "usLastCharIndex",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "sTypoAscender",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "sTypoDescender",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "sTypoLineGap",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "usWinAscent",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "usWinDescent",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "ulCodePageRange1",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "ulCodePageRange2",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "sxHeight",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "sCapHeight",
                    type: "SHORT",
                    value: 0
                  }, {
                    name: "usDefaultChar",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "usBreakChar",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "usMaxContext",
                    type: "USHORT",
                    value: 0
                  }], e);
                },
                unicodeRanges: st,
                getUnicodeRange: function (e) {
                  for (var t = 0; t < st.length; t += 1) {
                    var n = st[t];
                    if (e >= n.begin && e < n.end) return t;
                  }

                  return -1;
                }
              },
                  pt = {
                parse: function (e, t) {
                  var n = {},
                      a = new le.Parser(e, t);

                  switch (n.version = a.parseVersion(), n.italicAngle = a.parseFixed(), n.underlinePosition = a.parseShort(), n.underlineThickness = a.parseShort(), n.isFixedPitch = a.parseULong(), n.minMemType42 = a.parseULong(), n.maxMemType42 = a.parseULong(), n.minMemType1 = a.parseULong(), n.maxMemType1 = a.parseULong(), n.version) {
                    case 1:
                      n.names = he.slice();
                      break;

                    case 2:
                      n.numberOfGlyphs = a.parseUShort(), n.glyphNameIndex = new Array(n.numberOfGlyphs);

                      for (var o = 0; o < n.numberOfGlyphs; o++) n.glyphNameIndex[o] = a.parseUShort();

                      n.names = [];

                      for (var i = 0; i < n.numberOfGlyphs; i++) if (n.glyphNameIndex[i] >= he.length) {
                        var r = a.parseChar();
                        n.names.push(a.parseString(r));
                      }

                      break;

                    case 2.5:
                      n.numberOfGlyphs = a.parseUShort(), n.offset = new Array(n.numberOfGlyphs);

                      for (var s = 0; s < n.numberOfGlyphs; s++) n.offset[s] = a.parseChar();

                  }

                  return n;
                },
                make: function () {
                  return new ee.Table("post", [{
                    name: "version",
                    type: "FIXED",
                    value: 196608
                  }, {
                    name: "italicAngle",
                    type: "FIXED",
                    value: 0
                  }, {
                    name: "underlinePosition",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "underlineThickness",
                    type: "FWORD",
                    value: 0
                  }, {
                    name: "isFixedPitch",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "minMemType42",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "maxMemType42",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "minMemType1",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "maxMemType1",
                    type: "ULONG",
                    value: 0
                  }]);
                }
              },
                  dt = new Array(9);
              dt[1] = function () {
                var e = this.offset + this.relativeOffset,
                    t = this.parseUShort();
                return 1 === t ? {
                  substFormat: 1,
                  coverage: this.parsePointer(re.coverage),
                  deltaGlyphId: this.parseUShort()
                } : 2 === t ? {
                  substFormat: 2,
                  coverage: this.parsePointer(re.coverage),
                  substitute: this.parseOffset16List()
                } : void A.assert(!1, "0x" + e.toString(16) + ": lookup type 1 format must be 1 or 2.");
              }, dt[2] = function () {
                var e = this.parseUShort();
                return A.argument(1 === e, "GSUB Multiple Substitution Subtable identifier-format must be 1"), {
                  substFormat: e,
                  coverage: this.parsePointer(re.coverage),
                  sequences: this.parseListOfLists()
                };
              }, dt[3] = function () {
                var e = this.parseUShort();
                return A.argument(1 === e, "GSUB Alternate Substitution Subtable identifier-format must be 1"), {
                  substFormat: e,
                  coverage: this.parsePointer(re.coverage),
                  alternateSets: this.parseListOfLists()
                };
              }, dt[4] = function () {
                var e = this.parseUShort();
                return A.argument(1 === e, "GSUB ligature table identifier-format must be 1"), {
                  substFormat: e,
                  coverage: this.parsePointer(re.coverage),
                  ligatureSets: this.parseListOfLists(function () {
                    return {
                      ligGlyph: this.parseUShort(),
                      components: this.parseUShortList(this.parseUShort() - 1)
                    };
                  })
                };
              };
              var ct = {
                sequenceIndex: re.uShort,
                lookupListIndex: re.uShort
              };
              dt[5] = function () {
                var e = this.offset + this.relativeOffset,
                    t = this.parseUShort();
                if (1 === t) return {
                  substFormat: t,
                  coverage: this.parsePointer(re.coverage),
                  ruleSets: this.parseListOfLists(function () {
                    var e = this.parseUShort(),
                        t = this.parseUShort();
                    return {
                      input: this.parseUShortList(e - 1),
                      lookupRecords: this.parseRecordList(t, ct)
                    };
                  })
                };
                if (2 === t) return {
                  substFormat: t,
                  coverage: this.parsePointer(re.coverage),
                  classDef: this.parsePointer(re.classDef),
                  classSets: this.parseListOfLists(function () {
                    var e = this.parseUShort(),
                        t = this.parseUShort();
                    return {
                      classes: this.parseUShortList(e - 1),
                      lookupRecords: this.parseRecordList(t, ct)
                    };
                  })
                };

                if (3 === t) {
                  var n = this.parseUShort(),
                      a = this.parseUShort();
                  return {
                    substFormat: t,
                    coverages: this.parseList(n, re.pointer(re.coverage)),
                    lookupRecords: this.parseRecordList(a, ct)
                  };
                }

                A.assert(!1, "0x" + e.toString(16) + ": lookup type 5 format must be 1, 2 or 3.");
              }, dt[6] = function () {
                var e = this.offset + this.relativeOffset,
                    t = this.parseUShort();
                return 1 === t ? {
                  substFormat: 1,
                  coverage: this.parsePointer(re.coverage),
                  chainRuleSets: this.parseListOfLists(function () {
                    return {
                      backtrack: this.parseUShortList(),
                      input: this.parseUShortList(this.parseShort() - 1),
                      lookahead: this.parseUShortList(),
                      lookupRecords: this.parseRecordList(ct)
                    };
                  })
                } : 2 === t ? {
                  substFormat: 2,
                  coverage: this.parsePointer(re.coverage),
                  backtrackClassDef: this.parsePointer(re.classDef),
                  inputClassDef: this.parsePointer(re.classDef),
                  lookaheadClassDef: this.parsePointer(re.classDef),
                  chainClassSet: this.parseListOfLists(function () {
                    return {
                      backtrack: this.parseUShortList(),
                      input: this.parseUShortList(this.parseShort() - 1),
                      lookahead: this.parseUShortList(),
                      lookupRecords: this.parseRecordList(ct)
                    };
                  })
                } : 3 === t ? {
                  substFormat: 3,
                  backtrackCoverage: this.parseList(re.pointer(re.coverage)),
                  inputCoverage: this.parseList(re.pointer(re.coverage)),
                  lookaheadCoverage: this.parseList(re.pointer(re.coverage)),
                  lookupRecords: this.parseRecordList(ct)
                } : void A.assert(!1, "0x" + e.toString(16) + ": lookup type 6 format must be 1, 2 or 3.");
              }, dt[7] = function () {
                var e = this.parseUShort();
                A.argument(1 === e, "GSUB Extension Substitution subtable identifier-format must be 1");
                var t = this.parseUShort(),
                    n = new re(this.data, this.offset + this.parseULong());
                return {
                  substFormat: 1,
                  lookupType: t,
                  extension: dt[t].call(n)
                };
              }, dt[8] = function () {
                var e = this.parseUShort();
                return A.argument(1 === e, "GSUB Reverse Chaining Contextual Single Substitution Subtable identifier-format must be 1"), {
                  substFormat: e,
                  coverage: this.parsePointer(re.coverage),
                  backtrackCoverage: this.parseList(re.pointer(re.coverage)),
                  lookaheadCoverage: this.parseList(re.pointer(re.coverage)),
                  substitutes: this.parseUShortList()
                };
              };
              var ut = new Array(9);
              ut[1] = function (e) {
                return 1 === e.substFormat ? new ee.Table("substitutionTable", [{
                  name: "substFormat",
                  type: "USHORT",
                  value: 1
                }, {
                  name: "coverage",
                  type: "TABLE",
                  value: new ee.Coverage(e.coverage)
                }, {
                  name: "deltaGlyphID",
                  type: "USHORT",
                  value: e.deltaGlyphId
                }]) : new ee.Table("substitutionTable", [{
                  name: "substFormat",
                  type: "USHORT",
                  value: 2
                }, {
                  name: "coverage",
                  type: "TABLE",
                  value: new ee.Coverage(e.coverage)
                }].concat(ee.ushortList("substitute", e.substitute)));
              }, ut[3] = function (e) {
                return A.assert(1 === e.substFormat, "Lookup type 3 substFormat must be 1."), new ee.Table("substitutionTable", [{
                  name: "substFormat",
                  type: "USHORT",
                  value: 1
                }, {
                  name: "coverage",
                  type: "TABLE",
                  value: new ee.Coverage(e.coverage)
                }].concat(ee.tableList("altSet", e.alternateSets, function (e) {
                  return new ee.Table("alternateSetTable", ee.ushortList("alternate", e));
                })));
              }, ut[4] = function (e) {
                return A.assert(1 === e.substFormat, "Lookup type 4 substFormat must be 1."), new ee.Table("substitutionTable", [{
                  name: "substFormat",
                  type: "USHORT",
                  value: 1
                }, {
                  name: "coverage",
                  type: "TABLE",
                  value: new ee.Coverage(e.coverage)
                }].concat(ee.tableList("ligSet", e.ligatureSets, function (e) {
                  return new ee.Table("ligatureSetTable", ee.tableList("ligature", e, function (e) {
                    return new ee.Table("ligatureTable", [{
                      name: "ligGlyph",
                      type: "USHORT",
                      value: e.ligGlyph
                    }].concat(ee.ushortList("component", e.components, e.components.length + 1)));
                  }));
                })));
              };
              var mt = {
                parse: function (e, t) {
                  var n = new re(e, t = t || 0),
                      a = n.parseVersion(1);
                  return A.argument(1 === a || 1.1 === a, "Unsupported GSUB table version."), 1 === a ? {
                    version: a,
                    scripts: n.parseScriptList(),
                    features: n.parseFeatureList(),
                    lookups: n.parseLookupList(dt)
                  } : {
                    version: a,
                    scripts: n.parseScriptList(),
                    features: n.parseFeatureList(),
                    lookups: n.parseLookupList(dt),
                    variations: n.parseFeatureVariationsList()
                  };
                },
                make: function (e) {
                  return new ee.Table("GSUB", [{
                    name: "version",
                    type: "ULONG",
                    value: 65536
                  }, {
                    name: "scripts",
                    type: "TABLE",
                    value: new ee.ScriptList(e.scripts)
                  }, {
                    name: "features",
                    type: "TABLE",
                    value: new ee.FeatureList(e.features)
                  }, {
                    name: "lookups",
                    type: "TABLE",
                    value: new ee.LookupList(e.lookups, ut)
                  }]);
                }
              },
                  ht = {
                parse: function (e, t) {
                  var n = new le.Parser(e, t),
                      a = n.parseULong();
                  A.argument(1 === a, "Unsupported META table version."), n.parseULong(), n.parseULong();

                  for (var o = n.parseULong(), i = {}, r = 0; r < o; r++) {
                    var s = n.parseTag(),
                        l = n.parseULong(),
                        p = n.parseULong(),
                        d = D.UTF8(e, t + l, p);
                    i[s] = d;
                  }

                  return i;
                },
                make: function (e) {
                  var t = Object.keys(e).length,
                      n = "",
                      a = 16 + 12 * t,
                      o = new ee.Table("meta", [{
                    name: "version",
                    type: "ULONG",
                    value: 1
                  }, {
                    name: "flags",
                    type: "ULONG",
                    value: 0
                  }, {
                    name: "offset",
                    type: "ULONG",
                    value: a
                  }, {
                    name: "numTags",
                    type: "ULONG",
                    value: t
                  }]);

                  for (var i in e) {
                    var r = n.length;
                    n += e[i], o.fields.push({
                      name: "tag " + i,
                      type: "TAG",
                      value: i
                    }), o.fields.push({
                      name: "offset " + i,
                      type: "ULONG",
                      value: a + r
                    }), o.fields.push({
                      name: "length " + i,
                      type: "ULONG",
                      value: e[i].length
                    });
                  }

                  return o.fields.push({
                    name: "stringPool",
                    type: "CHARARRAY",
                    value: n
                  }), o;
                }
              };

              function ft(e) {
                return Math.log(e) / Math.log(2) | 0;
              }

              function gt(e) {
                for (; e.length % 4 != 0;) e.push(0);

                for (var t = 0, n = 0; n < e.length; n += 4) t += (e[n] << 24) + (e[n + 1] << 16) + (e[n + 2] << 8) + e[n + 3];

                return t %= Math.pow(2, 32);
              }

              function yt(e, t, n, a) {
                return new ee.Record("Table Record", [{
                  name: "tag",
                  type: "TAG",
                  value: void 0 !== e ? e : ""
                }, {
                  name: "checkSum",
                  type: "ULONG",
                  value: void 0 !== t ? t : 0
                }, {
                  name: "offset",
                  type: "ULONG",
                  value: void 0 !== n ? n : 0
                }, {
                  name: "length",
                  type: "ULONG",
                  value: void 0 !== a ? a : 0
                }]);
              }

              function vt(e) {
                var t = new ee.Table("sfnt", [{
                  name: "version",
                  type: "TAG",
                  value: "OTTO"
                }, {
                  name: "numTables",
                  type: "USHORT",
                  value: 0
                }, {
                  name: "searchRange",
                  type: "USHORT",
                  value: 0
                }, {
                  name: "entrySelector",
                  type: "USHORT",
                  value: 0
                }, {
                  name: "rangeShift",
                  type: "USHORT",
                  value: 0
                }]);
                t.tables = e, t.numTables = e.length;
                var n = Math.pow(2, ft(t.numTables));
                t.searchRange = 16 * n, t.entrySelector = ft(n), t.rangeShift = 16 * t.numTables - t.searchRange;

                for (var a = [], o = [], i = t.sizeOf() + yt().sizeOf() * t.numTables; i % 4 != 0;) i += 1, o.push({
                  name: "padding",
                  type: "BYTE",
                  value: 0
                });

                for (var r = 0; r < e.length; r += 1) {
                  var s = e[r];
                  A.argument(4 === s.tableName.length, "Table name" + s.tableName + " is invalid.");
                  var l = s.sizeOf(),
                      p = yt(s.tableName, gt(s.encode()), i, l);

                  for (a.push({
                    name: p.tag + " Table Record",
                    type: "RECORD",
                    value: p
                  }), o.push({
                    name: s.tableName + " table",
                    type: "RECORD",
                    value: s
                  }), i += l, A.argument(!isNaN(i), "Something went wrong calculating the offset."); i % 4 != 0;) i += 1, o.push({
                    name: "padding",
                    type: "BYTE",
                    value: 0
                  });
                }

                return a.sort(function (e, t) {
                  return e.value.tag > t.value.tag ? 1 : -1;
                }), t.fields = t.fields.concat(a), t.fields = t.fields.concat(o), t;
              }

              function bt(e, t, n) {
                for (var a = 0; a < t.length; a += 1) {
                  var o = e.charToGlyphIndex(t[a]);
                  if (o > 0) return e.glyphs.get(o).getMetrics();
                }

                return n;
              }

              function wt(e) {
                for (var t = 0, n = 0; n < e.length; n += 1) t += e[n];

                return t / e.length;
              }

              var xt = {
                make: vt,
                fontToTable: function (e) {
                  for (var t, n = [], a = [], o = [], i = [], r = [], s = [], l = [], p = 0, d = 0, c = 0, u = 0, m = 0, h = 0; h < e.glyphs.length; h += 1) {
                    var f = e.glyphs.get(h),
                        g = 0 | f.unicode;
                    if (isNaN(f.advanceWidth)) throw new Error("Glyph " + f.name + " (" + h + "): advanceWidth is not a number.");
                    (t > g || void 0 === t) && g > 0 && (t = g), p < g && (p = g);
                    var y = lt.getUnicodeRange(g);
                    if (y < 32) d |= 1 << y;else if (y < 64) c |= 1 << y - 32;else if (y < 96) u |= 1 << y - 64;else {
                      if (!(y < 123)) throw new Error("Unicode ranges bits > 123 are reserved for internal usage");
                      m |= 1 << y - 96;
                    }

                    if (".notdef" !== f.name) {
                      var v = f.getMetrics();
                      n.push(v.xMin), a.push(v.yMin), o.push(v.xMax), i.push(v.yMax), s.push(v.leftSideBearing), l.push(v.rightSideBearing), r.push(f.advanceWidth);
                    }
                  }

                  var b = {
                    xMin: Math.min.apply(null, n),
                    yMin: Math.min.apply(null, a),
                    xMax: Math.max.apply(null, o),
                    yMax: Math.max.apply(null, i),
                    advanceWidthMax: Math.max.apply(null, r),
                    advanceWidthAvg: wt(r),
                    minLeftSideBearing: Math.min.apply(null, s),
                    maxLeftSideBearing: Math.max.apply(null, s),
                    minRightSideBearing: Math.min.apply(null, l)
                  };
                  b.ascender = e.ascender, b.descender = e.descender;

                  var w = qe.make({
                    flags: 3,
                    unitsPerEm: e.unitsPerEm,
                    xMin: b.xMin,
                    yMin: b.yMin,
                    xMax: b.xMax,
                    yMax: b.yMax,
                    lowestRecPPEM: 3,
                    createdTimestamp: e.createdTimestamp
                  }),
                      x = Ve.make({
                    ascender: b.ascender,
                    descender: b.descender,
                    advanceWidthMax: b.advanceWidthMax,
                    minLeftSideBearing: b.minLeftSideBearing,
                    minRightSideBearing: b.minRightSideBearing,
                    xMaxExtent: b.maxLeftSideBearing + (b.xMax - b.xMin),
                    numberOfHMetrics: e.glyphs.length
                  }),
                      S = He.make(e.glyphs.length),
                      k = lt.make({
                    xAvgCharWidth: Math.round(b.advanceWidthAvg),
                    usWeightClass: e.tables.os2.usWeightClass,
                    usWidthClass: e.tables.os2.usWidthClass,
                    usFirstCharIndex: t,
                    usLastCharIndex: p,
                    ulUnicodeRange1: d,
                    ulUnicodeRange2: c,
                    ulUnicodeRange3: u,
                    ulUnicodeRange4: m,
                    fsSelection: e.tables.os2.fsSelection,
                    sTypoAscender: b.ascender,
                    sTypoDescender: b.descender,
                    sTypoLineGap: 0,
                    usWinAscent: b.yMax,
                    usWinDescent: Math.abs(b.yMin),
                    ulCodePageRange1: 1,
                    sxHeight: bt(e, "xyvw", {
                      yMax: Math.round(b.ascender / 2)
                    }).yMax,
                    sCapHeight: bt(e, "HIKLEFJMNTZBDPRAGOQSUVWXY", b).yMax,
                    usDefaultChar: e.hasChar(" ") ? 32 : 0,
                    usBreakChar: e.hasChar(" ") ? 32 : 0
                  }),
                      T = We.make(e.glyphs),
                      C = de.make(e.glyphs),
                      _ = e.getEnglishName("fontFamily"),
                      M = e.getEnglishName("fontSubfamily"),
                      E = _ + " " + M,
                      j = e.getEnglishName("postScriptName");

                  j || (j = _.replace(/\s/g, "") + "-" + M);
                  var I = {};

                  for (var R in e.names) I[R] = e.names[R];

                  I.uniqueID || (I.uniqueID = {
                    en: e.getEnglishName("manufacturer") + ":" + E
                  }), I.postScriptName || (I.postScriptName = {
                    en: j
                  }), I.preferredFamily || (I.preferredFamily = e.names.fontFamily), I.preferredSubfamily || (I.preferredSubfamily = e.names.fontSubfamily);
                  var N = [],
                      A = rt.make(I, N),
                      D = N.length > 0 ? Xe.make(N) : void 0,
                      L = pt.make(),
                      P = ze.make(e.glyphs, {
                    version: e.getEnglishName("version"),
                    fullName: E,
                    familyName: _,
                    weightName: M,
                    postScriptName: j,
                    unitsPerEm: e.unitsPerEm,
                    fontBBox: [0, b.yMin, b.ascender, b.advanceWidthMax]
                  }),
                      O = e.metas && Object.keys(e.metas).length > 0 ? ht.make(e.metas) : void 0,
                      F = [w, x, S, k, A, C, L, P, T];
                  D && F.push(D), e.tables.gsub && F.push(mt.make(e.tables.gsub)), O && F.push(O);

                  for (var B = vt(F), G = gt(B.encode()), U = B.fields, z = !1, q = 0; q < U.length; q += 1) if ("head table" === U[q].name) {
                    U[q].value.checkSumAdjustment = 2981146554 - G, z = !0;
                    break;
                  }

                  if (!z) throw new Error("Could not find head table with checkSum to adjust.");
                  return B;
                },
                computeCheckSum: gt
              };

              function St(e, t) {
                for (var n = 0, a = e.length - 1; n <= a;) {
                  var o = n + a >>> 1,
                      i = e[o].tag;
                  if (i === t) return o;
                  i < t ? n = o + 1 : a = o - 1;
                }

                return -n - 1;
              }

              function kt(e, t) {
                for (var n = 0, a = e.length - 1; n <= a;) {
                  var o = n + a >>> 1,
                      i = e[o];
                  if (i === t) return o;
                  i < t ? n = o + 1 : a = o - 1;
                }

                return -n - 1;
              }

              function Tt(e, t) {
                for (var n, a = 0, o = e.length - 1; a <= o;) {
                  var i = a + o >>> 1,
                      r = (n = e[i]).start;
                  if (r === t) return n;
                  r < t ? a = i + 1 : o = i - 1;
                }

                if (a > 0) return t > (n = e[a - 1]).end ? 0 : n;
              }

              function Ct(e, t) {
                this.font = e, this.tableName = t;
              }

              function _t(e) {
                Ct.call(this, e, "gpos");
              }

              function Mt(e) {
                Ct.call(this, e, "gsub");
              }

              function Et(e, t) {
                var n = e.length;
                if (n !== t.length) return !1;

                for (var a = 0; a < n; a++) if (e[a] !== t[a]) return !1;

                return !0;
              }

              function jt(e, t, n) {
                for (var a = e.subtables, o = 0; o < a.length; o++) {
                  var i = a[o];
                  if (i.substFormat === t) return i;
                }

                if (n) return a.push(n), n;
              }

              function It(e) {
                for (var t = new ArrayBuffer(e.length), n = new Uint8Array(t), a = 0; a < e.length; ++a) n[a] = e[a];

                return t;
              }

              function Rt(e, t) {
                if (!e) throw t;
              }

              function Nt(e, t, n, a, o) {
                var i;
                return (t & a) > 0 ? (i = e.parseByte(), 0 == (t & o) && (i = -i), i = n + i) : i = (t & o) > 0 ? n : n + e.parseShort(), i;
              }

              function At(e, t, n) {
                var a,
                    o,
                    i = new le.Parser(t, n);

                if (e.numberOfContours = i.parseShort(), e._xMin = i.parseShort(), e._yMin = i.parseShort(), e._xMax = i.parseShort(), e._yMax = i.parseShort(), e.numberOfContours > 0) {
                  for (var r = e.endPointIndices = [], s = 0; s < e.numberOfContours; s += 1) r.push(i.parseUShort());

                  e.instructionLength = i.parseUShort(), e.instructions = [];

                  for (var l = 0; l < e.instructionLength; l += 1) e.instructions.push(i.parseByte());

                  var p = r[r.length - 1] + 1;
                  a = [];

                  for (var d = 0; d < p; d += 1) if (o = i.parseByte(), a.push(o), (8 & o) > 0) for (var c = i.parseByte(), u = 0; u < c; u += 1) a.push(o), d += 1;

                  if (A.argument(a.length === p, "Bad flags."), r.length > 0) {
                    var m,
                        h = [];

                    if (p > 0) {
                      for (var f = 0; f < p; f += 1) o = a[f], (m = {}).onCurve = !!(1 & o), m.lastPointOfContour = r.indexOf(f) >= 0, h.push(m);

                      for (var g = 0, y = 0; y < p; y += 1) o = a[y], (m = h[y]).x = Nt(i, o, g, 2, 16), g = m.x;

                      for (var v = 0, b = 0; b < p; b += 1) o = a[b], (m = h[b]).y = Nt(i, o, v, 4, 32), v = m.y;
                    }

                    e.points = h;
                  } else e.points = [];
                } else if (0 === e.numberOfContours) e.points = [];else {
                  e.isComposite = !0, e.points = [], e.components = [];

                  for (var w = !0; w;) {
                    a = i.parseUShort();
                    var x = {
                      glyphIndex: i.parseUShort(),
                      xScale: 1,
                      scale01: 0,
                      scale10: 0,
                      yScale: 1,
                      dx: 0,
                      dy: 0
                    };
                    (1 & a) > 0 ? (2 & a) > 0 ? (x.dx = i.parseShort(), x.dy = i.parseShort()) : x.matchedPoints = [i.parseUShort(), i.parseUShort()] : (2 & a) > 0 ? (x.dx = i.parseChar(), x.dy = i.parseChar()) : x.matchedPoints = [i.parseByte(), i.parseByte()], (8 & a) > 0 ? x.xScale = x.yScale = i.parseF2Dot14() : (64 & a) > 0 ? (x.xScale = i.parseF2Dot14(), x.yScale = i.parseF2Dot14()) : (128 & a) > 0 && (x.xScale = i.parseF2Dot14(), x.scale01 = i.parseF2Dot14(), x.scale10 = i.parseF2Dot14(), x.yScale = i.parseF2Dot14()), e.components.push(x), w = !!(32 & a);
                  }

                  if (256 & a) {
                    e.instructionLength = i.parseUShort(), e.instructions = [];

                    for (var S = 0; S < e.instructionLength; S += 1) e.instructions.push(i.parseByte());
                  }
                }
              }

              function Dt(e, t) {
                for (var n = [], a = 0; a < e.length; a += 1) {
                  var o = e[a],
                      i = {
                    x: t.xScale * o.x + t.scale01 * o.y + t.dx,
                    y: t.scale10 * o.x + t.yScale * o.y + t.dy,
                    onCurve: o.onCurve,
                    lastPointOfContour: o.lastPointOfContour
                  };
                  n.push(i);
                }

                return n;
              }

              function Lt(e) {
                var t = new I();
                if (!e) return t;

                for (var n = function (e) {
                  for (var t = [], n = [], a = 0; a < e.length; a += 1) {
                    var o = e[a];
                    n.push(o), o.lastPointOfContour && (t.push(n), n = []);
                  }

                  return A.argument(0 === n.length, "There are still points left in the current contour."), t;
                }(e), a = 0; a < n.length; ++a) {
                  var o = n[a],
                      i = null,
                      r = o[o.length - 1],
                      s = o[0];
                  if (r.onCurve) t.moveTo(r.x, r.y);else if (s.onCurve) t.moveTo(s.x, s.y);else {
                    var l = {
                      x: .5 * (r.x + s.x),
                      y: .5 * (r.y + s.y)
                    };
                    t.moveTo(l.x, l.y);
                  }

                  for (var p = 0; p < o.length; ++p) if (i = r, r = s, s = o[(p + 1) % o.length], r.onCurve) t.lineTo(r.x, r.y);else {
                    var d = s;
                    i.onCurve || (r.x, i.x, r.y, i.y), s.onCurve || (d = {
                      x: .5 * (r.x + s.x),
                      y: .5 * (r.y + s.y)
                    }), t.quadraticCurveTo(r.x, r.y, d.x, d.y);
                  }

                  t.closePath();
                }

                return t;
              }

              function Pt(e, t) {
                if (t.isComposite) for (var n = 0; n < t.components.length; n += 1) {
                  var a = t.components[n],
                      o = e.get(a.glyphIndex);

                  if (o.getPath(), o.points) {
                    var i = void 0;
                    if (void 0 === a.matchedPoints) i = Dt(o.points, a);else {
                      if (a.matchedPoints[0] > t.points.length - 1 || a.matchedPoints[1] > o.points.length - 1) throw Error("Matched points out of range in " + t.name);
                      var r = t.points[a.matchedPoints[0]],
                          s = o.points[a.matchedPoints[1]],
                          l = {
                        xScale: a.xScale,
                        scale01: a.scale01,
                        scale10: a.scale10,
                        yScale: a.yScale,
                        dx: 0,
                        dy: 0
                      };
                      s = Dt([s], l)[0], l.dx = r.x - s.x, l.dy = r.y - s.y, i = Dt(o.points, l);
                    }
                    t.points = t.points.concat(i);
                  }
                }
                return Lt(t.points);
              }

              Ct.prototype = {
                searchTag: St,
                binSearch: kt,
                getTable: function (e) {
                  var t = this.font.tables[this.tableName];
                  return !t && e && (t = this.font.tables[this.tableName] = this.createDefaultTable()), t;
                },
                getScriptNames: function () {
                  var e = this.getTable();
                  return e ? e.scripts.map(function (e) {
                    return e.tag;
                  }) : [];
                },
                getDefaultScriptName: function () {
                  var e = this.getTable();

                  if (e) {
                    for (var t = !1, n = 0; n < e.scripts.length; n++) {
                      var a = e.scripts[n].tag;
                      if ("DFLT" === a) return a;
                      "latn" === a && (t = !0);
                    }

                    return t ? "latn" : void 0;
                  }
                },
                getScriptTable: function (e, t) {
                  var n = this.getTable(t);

                  if (n) {
                    e = e || "DFLT";
                    var a = n.scripts,
                        o = St(n.scripts, e);
                    if (o >= 0) return a[o].script;

                    if (t) {
                      var i = {
                        tag: e,
                        script: {
                          defaultLangSys: {
                            reserved: 0,
                            reqFeatureIndex: 65535,
                            featureIndexes: []
                          },
                          langSysRecords: []
                        }
                      };
                      return a.splice(-1 - o, 0, i), i.script;
                    }
                  }
                },
                getLangSysTable: function (e, t, n) {
                  var a = this.getScriptTable(e, n);

                  if (a) {
                    if (!t || "dflt" === t || "DFLT" === t) return a.defaultLangSys;
                    var o = St(a.langSysRecords, t);
                    if (o >= 0) return a.langSysRecords[o].langSys;

                    if (n) {
                      var i = {
                        tag: t,
                        langSys: {
                          reserved: 0,
                          reqFeatureIndex: 65535,
                          featureIndexes: []
                        }
                      };
                      return a.langSysRecords.splice(-1 - o, 0, i), i.langSys;
                    }
                  }
                },
                getFeatureTable: function (e, t, n, a) {
                  var o = this.getLangSysTable(e, t, a);

                  if (o) {
                    for (var i, r = o.featureIndexes, s = this.font.tables[this.tableName].features, l = 0; l < r.length; l++) if ((i = s[r[l]]).tag === n) return i.feature;

                    if (a) {
                      var p = s.length;
                      return A.assert(0 === p || n >= s[p - 1].tag, "Features must be added in alphabetical order."), i = {
                        tag: n,
                        feature: {
                          params: 0,
                          lookupListIndexes: []
                        }
                      }, s.push(i), r.push(p), i.feature;
                    }
                  }
                },
                getLookupTables: function (e, t, n, a, o) {
                  var i = this.getFeatureTable(e, t, n, o),
                      r = [];

                  if (i) {
                    for (var s, l = i.lookupListIndexes, p = this.font.tables[this.tableName].lookups, d = 0; d < l.length; d++) (s = p[l[d]]).lookupType === a && r.push(s);

                    if (0 === r.length && o) {
                      s = {
                        lookupType: a,
                        lookupFlag: 0,
                        subtables: [],
                        markFilteringSet: void 0
                      };
                      var c = p.length;
                      return p.push(s), l.push(c), [s];
                    }
                  }

                  return r;
                },
                getGlyphClass: function (e, t) {
                  switch (e.format) {
                    case 1:
                      return e.startGlyph <= t && t < e.startGlyph + e.classes.length ? e.classes[t - e.startGlyph] : 0;

                    case 2:
                      var n = Tt(e.ranges, t);
                      return n ? n.classId : 0;
                  }
                },
                getCoverageIndex: function (e, t) {
                  switch (e.format) {
                    case 1:
                      var n = kt(e.glyphs, t);
                      return n >= 0 ? n : -1;

                    case 2:
                      var a = Tt(e.ranges, t);
                      return a ? a.index + t - a.start : -1;
                  }
                },
                expandCoverage: function (e) {
                  if (1 === e.format) return e.glyphs;

                  for (var t = [], n = e.ranges, a = 0; a < n.length; a++) for (var o = n[a], i = o.start, r = o.end, s = i; s <= r; s++) t.push(s);

                  return t;
                }
              }, _t.prototype = Ct.prototype, _t.prototype.init = function () {
                var e = this.getDefaultScriptName();
                this.defaultKerningTables = this.getKerningTables(e);
              }, _t.prototype.getKerningValue = function (e, t, n) {
                for (var a = 0; a < e.length; a++) for (var o = e[a].subtables, i = 0; i < o.length; i++) {
                  var r = o[i],
                      s = this.getCoverageIndex(r.coverage, t);
                  if (!(s < 0)) switch (r.posFormat) {
                    case 1:
                      for (var l = r.pairSets[s], p = 0; p < l.length; p++) {
                        var d = l[p];
                        if (d.secondGlyph === n) return d.value1 && d.value1.xAdvance || 0;
                      }

                      break;

                    case 2:
                      var c = this.getGlyphClass(r.classDef1, t),
                          u = this.getGlyphClass(r.classDef2, n),
                          m = r.classRecords[c][u];
                      return m.value1 && m.value1.xAdvance || 0;
                  }
                }

                return 0;
              }, _t.prototype.getKerningTables = function (e, t) {
                if (this.font.tables.gpos) return this.getLookupTables(e, t, "kern", 2);
              }, Mt.prototype = Ct.prototype, Mt.prototype.createDefaultTable = function () {
                return {
                  version: 1,
                  scripts: [{
                    tag: "DFLT",
                    script: {
                      defaultLangSys: {
                        reserved: 0,
                        reqFeatureIndex: 65535,
                        featureIndexes: []
                      },
                      langSysRecords: []
                    }
                  }],
                  features: [],
                  lookups: []
                };
              }, Mt.prototype.getSingle = function (e, t, n) {
                for (var a = [], o = this.getLookupTables(t, n, e, 1), i = 0; i < o.length; i++) for (var r = o[i].subtables, s = 0; s < r.length; s++) {
                  var l = r[s],
                      p = this.expandCoverage(l.coverage),
                      d = void 0;

                  if (1 === l.substFormat) {
                    var c = l.deltaGlyphId;

                    for (d = 0; d < p.length; d++) {
                      var u = p[d];
                      a.push({
                        sub: u,
                        by: u + c
                      });
                    }
                  } else {
                    var m = l.substitute;

                    for (d = 0; d < p.length; d++) a.push({
                      sub: p[d],
                      by: m[d]
                    });
                  }
                }

                return a;
              }, Mt.prototype.getAlternates = function (e, t, n) {
                for (var a = [], o = this.getLookupTables(t, n, e, 3), i = 0; i < o.length; i++) for (var r = o[i].subtables, s = 0; s < r.length; s++) for (var l = r[s], p = this.expandCoverage(l.coverage), d = l.alternateSets, c = 0; c < p.length; c++) a.push({
                  sub: p[c],
                  by: d[c]
                });

                return a;
              }, Mt.prototype.getLigatures = function (e, t, n) {
                for (var a = [], o = this.getLookupTables(t, n, e, 4), i = 0; i < o.length; i++) for (var r = o[i].subtables, s = 0; s < r.length; s++) for (var l = r[s], p = this.expandCoverage(l.coverage), d = l.ligatureSets, c = 0; c < p.length; c++) for (var u = p[c], m = d[c], h = 0; h < m.length; h++) {
                  var f = m[h];
                  a.push({
                    sub: [u].concat(f.components),
                    by: f.ligGlyph
                  });
                }

                return a;
              }, Mt.prototype.addSingle = function (e, t, n, a) {
                var o = jt(this.getLookupTables(n, a, e, 1, !0)[0], 2, {
                  substFormat: 2,
                  coverage: {
                    format: 1,
                    glyphs: []
                  },
                  substitute: []
                });
                A.assert(1 === o.coverage.format, "Ligature: unable to modify coverage table format " + o.coverage.format);
                var i = t.sub,
                    r = this.binSearch(o.coverage.glyphs, i);
                r < 0 && (r = -1 - r, o.coverage.glyphs.splice(r, 0, i), o.substitute.splice(r, 0, 0)), o.substitute[r] = t.by;
              }, Mt.prototype.addAlternate = function (e, t, n, a) {
                var o = jt(this.getLookupTables(n, a, e, 3, !0)[0], 1, {
                  substFormat: 1,
                  coverage: {
                    format: 1,
                    glyphs: []
                  },
                  alternateSets: []
                });
                A.assert(1 === o.coverage.format, "Ligature: unable to modify coverage table format " + o.coverage.format);
                var i = t.sub,
                    r = this.binSearch(o.coverage.glyphs, i);
                r < 0 && (r = -1 - r, o.coverage.glyphs.splice(r, 0, i), o.alternateSets.splice(r, 0, 0)), o.alternateSets[r] = t.by;
              }, Mt.prototype.addLigature = function (e, t, n, a) {
                var o = this.getLookupTables(n, a, e, 4, !0)[0],
                    i = o.subtables[0];
                i || (i = {
                  substFormat: 1,
                  coverage: {
                    format: 1,
                    glyphs: []
                  },
                  ligatureSets: []
                }, o.subtables[0] = i), A.assert(1 === i.coverage.format, "Ligature: unable to modify coverage table format " + i.coverage.format);
                var r = t.sub[0],
                    s = t.sub.slice(1),
                    l = {
                  ligGlyph: t.by,
                  components: s
                },
                    p = this.binSearch(i.coverage.glyphs, r);

                if (p >= 0) {
                  for (var d = i.ligatureSets[p], c = 0; c < d.length; c++) if (Et(d[c].components, s)) return;

                  d.push(l);
                } else p = -1 - p, i.coverage.glyphs.splice(p, 0, r), i.ligatureSets.splice(p, 0, [l]);
              }, Mt.prototype.getFeature = function (e, t, n) {
                if (/ss\d\d/.test(e)) return this.getSingle(e, t, n);

                switch (e) {
                  case "aalt":
                  case "salt":
                    return this.getSingle(e, t, n).concat(this.getAlternates(e, t, n));

                  case "dlig":
                  case "liga":
                  case "rlig":
                    return this.getLigatures(e, t, n);
                }
              }, Mt.prototype.add = function (e, t, n, a) {
                if (/ss\d\d/.test(e)) return this.addSingle(e, t, n, a);

                switch (e) {
                  case "aalt":
                  case "salt":
                    return "number" == typeof t.by ? this.addSingle(e, t, n, a) : this.addAlternate(e, t, n, a);

                  case "dlig":
                  case "liga":
                  case "rlig":
                    return this.addLigature(e, t, n, a);
                }
              };
              var Ot,
                  Ft,
                  Bt,
                  Gt,
                  Ut = {
                getPath: Lt,
                parse: function (e, t, n, a) {
                  for (var o = new ke.GlyphSet(a), i = 0; i < n.length - 1; i += 1) {
                    var r = n[i];
                    r !== n[i + 1] ? o.push(i, ke.ttfGlyphLoader(a, i, At, e, t + r, Pt)) : o.push(i, ke.glyphLoader(a, i));
                  }

                  return o;
                }
              };

              function zt(e) {
                this.font = e, this.getCommands = function (e) {
                  return Ut.getPath(e).commands;
                }, this._fpgmState = this._prepState = void 0, this._errorState = 0;
              }

              function qt(e) {
                return e;
              }

              function Vt(e) {
                return Math.sign(e) * Math.round(Math.abs(e));
              }

              function Wt(e) {
                return Math.sign(e) * Math.round(Math.abs(2 * e)) / 2;
              }

              function Xt(e) {
                return Math.sign(e) * (Math.round(Math.abs(e) + .5) - .5);
              }

              function Ht(e) {
                return Math.sign(e) * Math.ceil(Math.abs(e));
              }

              function Yt(e) {
                return Math.sign(e) * Math.floor(Math.abs(e));
              }

              var Zt = function (e) {
                var t = this.srPeriod,
                    n = this.srPhase,
                    a = 1;
                return e < 0 && (e = -e, a = -1), e += this.srThreshold - n, e = Math.trunc(e / t) * t, (e += n) < 0 ? n * a : e * a;
              },
                  Qt = {
                x: 1,
                y: 0,
                axis: "x",
                distance: function (e, t, n, a) {
                  return (n ? e.xo : e.x) - (a ? t.xo : t.x);
                },
                interpolate: function (e, t, n, a) {
                  var o, i, r, s, l, p, d;
                  if (!a || a === this) return o = e.xo - t.xo, i = e.xo - n.xo, l = t.x - t.xo, p = n.x - n.xo, 0 === (d = (r = Math.abs(o)) + (s = Math.abs(i))) ? void (e.x = e.xo + (l + p) / 2) : void (e.x = e.xo + (l * s + p * r) / d);
                  o = a.distance(e, t, !0, !0), i = a.distance(e, n, !0, !0), l = a.distance(t, t, !1, !0), p = a.distance(n, n, !1, !0), 0 !== (d = (r = Math.abs(o)) + (s = Math.abs(i))) ? Qt.setRelative(e, e, (l * s + p * r) / d, a, !0) : Qt.setRelative(e, e, (l + p) / 2, a, !0);
                },
                normalSlope: Number.NEGATIVE_INFINITY,
                setRelative: function (e, t, n, a, o) {
                  if (a && a !== this) {
                    var i = o ? t.xo : t.x,
                        r = o ? t.yo : t.y,
                        s = i + n * a.x,
                        l = r + n * a.y;
                    e.x = s + (e.y - l) / a.normalSlope;
                  } else e.x = (o ? t.xo : t.x) + n;
                },
                slope: 0,
                touch: function (e) {
                  e.xTouched = !0;
                },
                touched: function (e) {
                  return e.xTouched;
                },
                untouch: function (e) {
                  e.xTouched = !1;
                }
              },
                  Jt = {
                x: 0,
                y: 1,
                axis: "y",
                distance: function (e, t, n, a) {
                  return (n ? e.yo : e.y) - (a ? t.yo : t.y);
                },
                interpolate: function (e, t, n, a) {
                  var o, i, r, s, l, p, d;
                  if (!a || a === this) return o = e.yo - t.yo, i = e.yo - n.yo, l = t.y - t.yo, p = n.y - n.yo, 0 === (d = (r = Math.abs(o)) + (s = Math.abs(i))) ? void (e.y = e.yo + (l + p) / 2) : void (e.y = e.yo + (l * s + p * r) / d);
                  o = a.distance(e, t, !0, !0), i = a.distance(e, n, !0, !0), l = a.distance(t, t, !1, !0), p = a.distance(n, n, !1, !0), 0 !== (d = (r = Math.abs(o)) + (s = Math.abs(i))) ? Jt.setRelative(e, e, (l * s + p * r) / d, a, !0) : Jt.setRelative(e, e, (l + p) / 2, a, !0);
                },
                normalSlope: 0,
                setRelative: function (e, t, n, a, o) {
                  if (a && a !== this) {
                    var i = o ? t.xo : t.x,
                        r = o ? t.yo : t.y,
                        s = i + n * a.x,
                        l = r + n * a.y;
                    e.y = l + a.normalSlope * (e.x - s);
                  } else e.y = (o ? t.yo : t.y) + n;
                },
                slope: Number.POSITIVE_INFINITY,
                touch: function (e) {
                  e.yTouched = !0;
                },
                touched: function (e) {
                  return e.yTouched;
                },
                untouch: function (e) {
                  e.yTouched = !1;
                }
              };

              function Kt(e, t) {
                this.x = e, this.y = t, this.axis = void 0, this.slope = t / e, this.normalSlope = -e / t, Object.freeze(this);
              }

              function $t(e, t) {
                var n = Math.sqrt(e * e + t * t);
                return t /= n, 1 == (e /= n) && 0 === t ? Qt : 0 === e && 1 === t ? Jt : new Kt(e, t);
              }

              function en(e, t, n, a) {
                this.x = this.xo = Math.round(64 * e) / 64, this.y = this.yo = Math.round(64 * t) / 64, this.lastPointOfContour = n, this.onCurve = a, this.prevPointOnContour = void 0, this.nextPointOnContour = void 0, this.xTouched = !1, this.yTouched = !1, Object.preventExtensions(this);
              }

              Object.freeze(Qt), Object.freeze(Jt), Kt.prototype.distance = function (e, t, n, a) {
                return this.x * Qt.distance(e, t, n, a) + this.y * Jt.distance(e, t, n, a);
              }, Kt.prototype.interpolate = function (e, t, n, a) {
                var o, i, r, s, l, p, d;
                r = a.distance(e, t, !0, !0), s = a.distance(e, n, !0, !0), o = a.distance(t, t, !1, !0), i = a.distance(n, n, !1, !0), 0 !== (d = (l = Math.abs(r)) + (p = Math.abs(s))) ? this.setRelative(e, e, (o * p + i * l) / d, a, !0) : this.setRelative(e, e, (o + i) / 2, a, !0);
              }, Kt.prototype.setRelative = function (e, t, n, a, o) {
                a = a || this;
                var i = o ? t.xo : t.x,
                    r = o ? t.yo : t.y,
                    s = i + n * a.x,
                    l = r + n * a.y,
                    p = a.normalSlope,
                    d = this.slope,
                    c = e.x,
                    u = e.y;
                e.x = (d * c - p * s + l - u) / (d - p), e.y = d * (e.x - c) + u;
              }, Kt.prototype.touch = function (e) {
                e.xTouched = !0, e.yTouched = !0;
              }, en.prototype.nextTouched = function (e) {
                for (var t = this.nextPointOnContour; !e.touched(t) && t !== this;) t = t.nextPointOnContour;

                return t;
              }, en.prototype.prevTouched = function (e) {
                for (var t = this.prevPointOnContour; !e.touched(t) && t !== this;) t = t.prevPointOnContour;

                return t;
              };
              var tn = Object.freeze(new en(0, 0)),
                  nn = {
                cvCutIn: 17 / 16,
                deltaBase: 9,
                deltaShift: .125,
                loop: 1,
                minDis: 1,
                autoFlip: !0
              };

              function an(e, t) {
                switch (this.env = e, this.stack = [], this.prog = t, e) {
                  case "glyf":
                    this.zp0 = this.zp1 = this.zp2 = 1, this.rp0 = this.rp1 = this.rp2 = 0;

                  case "prep":
                    this.fv = this.pv = this.dpv = Qt, this.round = Vt;
                }
              }

              function on(e) {
                for (var t = e.tZone = new Array(e.gZone.length), n = 0; n < t.length; n++) t[n] = new en(0, 0);
              }

              function rn(e, t) {
                var n,
                    a = e.prog,
                    o = e.ip,
                    i = 1;

                do {
                  if (88 === (n = a[++o])) i++;else if (89 === n) i--;else if (64 === n) o += a[o + 1] + 1;else if (65 === n) o += 2 * a[o + 1] + 1;else if (n >= 176 && n <= 183) o += n - 176 + 1;else if (n >= 184 && n <= 191) o += 2 * (n - 184 + 1);else if (t && 1 === i && 27 === n) break;
                } while (i > 0);

                e.ip = o;
              }

              function sn(e, n) {
                t.DEBUG && console.log(n.step, "SVTCA[" + e.axis + "]"), n.fv = n.pv = n.dpv = e;
              }

              function ln(e, n) {
                t.DEBUG && console.log(n.step, "SPVTCA[" + e.axis + "]"), n.pv = n.dpv = e;
              }

              function pn(e, n) {
                t.DEBUG && console.log(n.step, "SFVTCA[" + e.axis + "]"), n.fv = e;
              }

              function dn(e, n) {
                var a,
                    o,
                    i = n.stack,
                    r = i.pop(),
                    s = i.pop(),
                    l = n.z2[r],
                    p = n.z1[s];
                t.DEBUG && console.log("SPVTL[" + e + "]", r, s), e ? (a = l.y - p.y, o = p.x - l.x) : (a = p.x - l.x, o = p.y - l.y), n.pv = n.dpv = $t(a, o);
              }

              function cn(e, n) {
                var a,
                    o,
                    i = n.stack,
                    r = i.pop(),
                    s = i.pop(),
                    l = n.z2[r],
                    p = n.z1[s];
                t.DEBUG && console.log("SFVTL[" + e + "]", r, s), e ? (a = l.y - p.y, o = p.x - l.x) : (a = p.x - l.x, o = p.y - l.y), n.fv = $t(a, o);
              }

              function un(e) {
                t.DEBUG && console.log(e.step, "POP[]"), e.stack.pop();
              }

              function mn(e, n) {
                var a = n.stack.pop(),
                    o = n.z0[a],
                    i = n.fv,
                    r = n.pv;
                t.DEBUG && console.log(n.step, "MDAP[" + e + "]", a);
                var s = r.distance(o, tn);
                e && (s = n.round(s)), i.setRelative(o, tn, s, r), i.touch(o), n.rp0 = n.rp1 = a;
              }

              function hn(e, n) {
                var a,
                    o,
                    i,
                    r = n.z2,
                    s = r.length - 2;
                t.DEBUG && console.log(n.step, "IUP[" + e.axis + "]");

                for (var l = 0; l < s; l++) a = r[l], e.touched(a) || (o = a.prevTouched(e)) !== a && (o === (i = a.nextTouched(e)) && e.setRelative(a, a, e.distance(o, o, !1, !0), e, !0), e.interpolate(a, o, i, e));
              }

              function fn(e, n) {
                for (var a = n.stack, o = e ? n.rp1 : n.rp2, i = (e ? n.z0 : n.z1)[o], r = n.fv, s = n.pv, l = n.loop, p = n.z2; l--;) {
                  var d = a.pop(),
                      c = p[d],
                      u = s.distance(i, i, !1, !0);
                  r.setRelative(c, c, u, s), r.touch(c), t.DEBUG && console.log(n.step, (n.loop > 1 ? "loop " + (n.loop - l) + ": " : "") + "SHP[" + (e ? "rp1" : "rp2") + "]", d);
                }

                n.loop = 1;
              }

              function gn(e, n) {
                var a = n.stack,
                    o = e ? n.rp1 : n.rp2,
                    i = (e ? n.z0 : n.z1)[o],
                    r = n.fv,
                    s = n.pv,
                    l = a.pop(),
                    p = n.z2[n.contours[l]],
                    d = p;
                t.DEBUG && console.log(n.step, "SHC[" + e + "]", l);
                var c = s.distance(i, i, !1, !0);

                do {
                  d !== i && r.setRelative(d, d, c, s), d = d.nextPointOnContour;
                } while (d !== p);
              }

              function yn(e, n) {
                var a,
                    o,
                    i = n.stack,
                    r = e ? n.rp1 : n.rp2,
                    s = (e ? n.z0 : n.z1)[r],
                    l = n.fv,
                    p = n.pv,
                    d = i.pop();

                switch (t.DEBUG && console.log(n.step, "SHZ[" + e + "]", d), d) {
                  case 0:
                    a = n.tZone;
                    break;

                  case 1:
                    a = n.gZone;
                    break;

                  default:
                    throw new Error("Invalid zone");
                }

                for (var c = p.distance(s, s, !1, !0), u = a.length - 2, m = 0; m < u; m++) o = a[m], l.setRelative(o, o, c, p);
              }

              function vn(e, n) {
                var a = n.stack,
                    o = a.pop() / 64,
                    i = a.pop(),
                    r = n.z1[i],
                    s = n.z0[n.rp0],
                    l = n.fv,
                    p = n.pv;
                l.setRelative(r, s, o, p), l.touch(r), t.DEBUG && console.log(n.step, "MSIRP[" + e + "]", o, i), n.rp1 = n.rp0, n.rp2 = i, e && (n.rp0 = i);
              }

              function bn(e, n) {
                var a = n.stack,
                    o = a.pop(),
                    i = a.pop(),
                    r = n.z0[i],
                    s = n.fv,
                    l = n.pv,
                    p = n.cvt[o];
                t.DEBUG && console.log(n.step, "MIAP[" + e + "]", o, "(", p, ")", i);
                var d = l.distance(r, tn);
                e && (Math.abs(d - p) < n.cvCutIn && (d = p), d = n.round(d)), s.setRelative(r, tn, d, l), 0 === n.zp0 && (r.xo = r.x, r.yo = r.y), s.touch(r), n.rp0 = n.rp1 = i;
              }

              function wn(e, n) {
                var a = n.stack,
                    o = a.pop(),
                    i = n.z2[o];
                t.DEBUG && console.log(n.step, "GC[" + e + "]", o), a.push(64 * n.dpv.distance(i, tn, e, !1));
              }

              function xn(e, n) {
                var a = n.stack,
                    o = a.pop(),
                    i = a.pop(),
                    r = n.z1[o],
                    s = n.z0[i],
                    l = n.dpv.distance(s, r, e, e);
                t.DEBUG && console.log(n.step, "MD[" + e + "]", o, i, "->", l), n.stack.push(Math.round(64 * l));
              }

              function Sn(e, n) {
                var a = n.stack,
                    o = a.pop(),
                    i = n.fv,
                    r = n.pv,
                    s = n.ppem,
                    l = n.deltaBase + 16 * (e - 1),
                    p = n.deltaShift,
                    d = n.z0;
                t.DEBUG && console.log(n.step, "DELTAP[" + e + "]", o, a);

                for (var c = 0; c < o; c++) {
                  var u = a.pop(),
                      m = a.pop();

                  if (l + ((240 & m) >> 4) === s) {
                    var h = (15 & m) - 8;
                    h >= 0 && h++, t.DEBUG && console.log(n.step, "DELTAPFIX", u, "by", h * p);
                    var f = d[u];
                    i.setRelative(f, f, h * p, r);
                  }
                }
              }

              function kn(e, n) {
                var a = n.stack,
                    o = a.pop();
                t.DEBUG && console.log(n.step, "ROUND[]"), a.push(64 * n.round(o / 64));
              }

              function Tn(e, n) {
                var a = n.stack,
                    o = a.pop(),
                    i = n.ppem,
                    r = n.deltaBase + 16 * (e - 1),
                    s = n.deltaShift;
                t.DEBUG && console.log(n.step, "DELTAC[" + e + "]", o, a);

                for (var l = 0; l < o; l++) {
                  var p = a.pop(),
                      d = a.pop();

                  if (r + ((240 & d) >> 4) === i) {
                    var c = (15 & d) - 8;
                    c >= 0 && c++;
                    var u = c * s;
                    t.DEBUG && console.log(n.step, "DELTACFIX", p, "by", u), n.cvt[p] += u;
                  }
                }
              }

              function Cn(e, n) {
                var a,
                    o,
                    i = n.stack,
                    r = i.pop(),
                    s = i.pop(),
                    l = n.z2[r],
                    p = n.z1[s];
                t.DEBUG && console.log(n.step, "SDPVTL[" + e + "]", r, s), e ? (a = l.y - p.y, o = p.x - l.x) : (a = p.x - l.x, o = p.y - l.y), n.dpv = $t(a, o);
              }

              function _n(e, n) {
                var a = n.stack,
                    o = n.prog,
                    i = n.ip;
                t.DEBUG && console.log(n.step, "PUSHB[" + e + "]");

                for (var r = 0; r < e; r++) a.push(o[++i]);

                n.ip = i;
              }

              function Mn(e, n) {
                var a = n.ip,
                    o = n.prog,
                    i = n.stack;
                t.DEBUG && console.log(n.ip, "PUSHW[" + e + "]");

                for (var r = 0; r < e; r++) {
                  var s = o[++a] << 8 | o[++a];
                  32768 & s && (s = -(1 + (65535 ^ s))), i.push(s);
                }

                n.ip = a;
              }

              function En(e, n, a, o, i, r) {
                var s,
                    l,
                    p,
                    d,
                    c = r.stack,
                    u = e && c.pop(),
                    m = c.pop(),
                    h = r.rp0,
                    f = r.z0[h],
                    g = r.z1[m],
                    y = r.minDis,
                    v = r.fv,
                    b = r.dpv;
                p = (l = s = b.distance(g, f, !0, !0)) >= 0 ? 1 : -1, l = Math.abs(l), e && (d = r.cvt[u], o && Math.abs(l - d) < r.cvCutIn && (l = d)), a && l < y && (l = y), o && (l = r.round(l)), v.setRelative(g, f, p * l, b), v.touch(g), t.DEBUG && console.log(r.step, (e ? "MIRP[" : "MDRP[") + (n ? "M" : "m") + (a ? ">" : "_") + (o ? "R" : "_") + (0 === i ? "Gr" : 1 === i ? "Bl" : 2 === i ? "Wh" : "") + "]", e ? u + "(" + r.cvt[u] + "," + d + ")" : "", m, "(d =", s, "->", p * l, ")"), r.rp1 = r.rp0, r.rp2 = m, n && (r.rp0 = m);
              }

              zt.prototype.exec = function (e, n) {
                if ("number" != typeof n) throw new Error("Point size is not a number!");

                if (!(this._errorState > 2)) {
                  var a = this.font,
                      o = this._prepState;

                  if (!o || o.ppem !== n) {
                    var i = this._fpgmState;

                    if (!i) {
                      an.prototype = nn, (i = this._fpgmState = new an("fpgm", a.tables.fpgm)).funcs = [], i.font = a, t.DEBUG && (console.log("---EXEC FPGM---"), i.step = -1);

                      try {
                        Ft(i);
                      } catch (e) {
                        return console.log("Hinting error in FPGM:" + e), void (this._errorState = 3);
                      }
                    }

                    an.prototype = i, (o = this._prepState = new an("prep", a.tables.prep)).ppem = n;
                    var r = a.tables.cvt;
                    if (r) for (var s = o.cvt = new Array(r.length), l = n / a.unitsPerEm, p = 0; p < r.length; p++) s[p] = r[p] * l;else o.cvt = [];
                    t.DEBUG && (console.log("---EXEC PREP---"), o.step = -1);

                    try {
                      Ft(o);
                    } catch (e) {
                      this._errorState < 2 && console.log("Hinting error in PREP:" + e), this._errorState = 2;
                    }
                  }

                  if (!(this._errorState > 1)) try {
                    return Bt(e, o);
                  } catch (e) {
                    return this._errorState < 1 && (console.log("Hinting error:" + e), console.log("Note: further hinting errors are silenced")), void (this._errorState = 1);
                  }
                }
              }, Bt = function (e, n) {
                var a,
                    o,
                    i,
                    r = n.ppem / n.font.unitsPerEm,
                    s = r,
                    l = e.components;

                if (an.prototype = n, l) {
                  var p = n.font;
                  o = [], a = [];

                  for (var d = 0; d < l.length; d++) {
                    var c = l[d],
                        u = p.glyphs.get(c.glyphIndex);
                    i = new an("glyf", u.instructions), t.DEBUG && (console.log("---EXEC COMP " + d + "---"), i.step = -1), Gt(u, i, r, s);

                    for (var m = Math.round(c.dx * r), h = Math.round(c.dy * s), f = i.gZone, g = i.contours, y = 0; y < f.length; y++) {
                      var v = f[y];
                      v.xTouched = v.yTouched = !1, v.xo = v.x = v.x + m, v.yo = v.y = v.y + h;
                    }

                    var b = o.length;
                    o.push.apply(o, f);

                    for (var w = 0; w < g.length; w++) a.push(g[w] + b);
                  }

                  e.instructions && !i.inhibitGridFit && ((i = new an("glyf", e.instructions)).gZone = i.z0 = i.z1 = i.z2 = o, i.contours = a, o.push(new en(0, 0), new en(Math.round(e.advanceWidth * r), 0)), t.DEBUG && (console.log("---EXEC COMPOSITE---"), i.step = -1), Ft(i), o.length -= 2);
                } else i = new an("glyf", e.instructions), t.DEBUG && (console.log("---EXEC GLYPH---"), i.step = -1), Gt(e, i, r, s), o = i.gZone;

                return o;
              }, Gt = function (e, n, a, o) {
                for (var i, r, s, l = e.points || [], p = l.length, d = n.gZone = n.z0 = n.z1 = n.z2 = [], c = n.contours = [], u = 0; u < p; u++) i = l[u], d[u] = new en(i.x * a, i.y * o, i.lastPointOfContour, i.onCurve);

                for (var m = 0; m < p; m++) i = d[m], r || (r = i, c.push(m)), i.lastPointOfContour ? (i.nextPointOnContour = r, r.prevPointOnContour = i, r = void 0) : (s = d[m + 1], i.nextPointOnContour = s, s.prevPointOnContour = i);

                if (!n.inhibitGridFit) {
                  if (t.DEBUG) {
                    console.log("PROCESSING GLYPH", n.stack);

                    for (var h = 0; h < p; h++) console.log(h, d[h].x, d[h].y);
                  }

                  if (d.push(new en(0, 0), new en(Math.round(e.advanceWidth * a), 0)), Ft(n), d.length -= 2, t.DEBUG) {
                    console.log("FINISHED GLYPH", n.stack);

                    for (var f = 0; f < p; f++) console.log(f, d[f].x, d[f].y);
                  }
                }
              }, Ft = function (e) {
                var n = e.prog;

                if (n) {
                  var a,
                      o = n.length;

                  for (e.ip = 0; e.ip < o; e.ip++) {
                    if (t.DEBUG && e.step++, !(a = Ot[n[e.ip]])) throw new Error("unknown instruction: 0x" + Number(n[e.ip]).toString(16));
                    a(e);
                  }
                }
              }, Ot = [sn.bind(void 0, Jt), sn.bind(void 0, Qt), ln.bind(void 0, Jt), ln.bind(void 0, Qt), pn.bind(void 0, Jt), pn.bind(void 0, Qt), dn.bind(void 0, 0), dn.bind(void 0, 1), cn.bind(void 0, 0), cn.bind(void 0, 1), function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "SPVFS[]", a, o), e.pv = e.dpv = $t(o, a);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "SPVFS[]", a, o), e.fv = $t(o, a);
              }, function (e) {
                var n = e.stack,
                    a = e.pv;
                t.DEBUG && console.log(e.step, "GPV[]"), n.push(16384 * a.x), n.push(16384 * a.y);
              }, function (e) {
                var n = e.stack,
                    a = e.fv;
                t.DEBUG && console.log(e.step, "GFV[]"), n.push(16384 * a.x), n.push(16384 * a.y);
              }, function (e) {
                e.fv = e.pv, t.DEBUG && console.log(e.step, "SFVTPV[]");
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop(),
                    i = n.pop(),
                    r = n.pop(),
                    s = n.pop(),
                    l = e.z0,
                    p = e.z1,
                    d = l[a],
                    c = l[o],
                    u = p[i],
                    m = p[r],
                    h = e.z2[s];
                t.DEBUG && console.log("ISECT[], ", a, o, i, r, s);
                var f = d.x,
                    g = d.y,
                    y = c.x,
                    v = c.y,
                    b = u.x,
                    w = u.y,
                    x = m.x,
                    S = m.y,
                    k = (f - y) * (w - S) - (g - v) * (b - x),
                    T = f * v - g * y,
                    C = b * S - w * x;
                h.x = (T * (b - x) - C * (f - y)) / k, h.y = (T * (w - S) - C * (g - v)) / k;
              }, function (e) {
                e.rp0 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP0[]", e.rp0);
              }, function (e) {
                e.rp1 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP1[]", e.rp1);
              }, function (e) {
                e.rp2 = e.stack.pop(), t.DEBUG && console.log(e.step, "SRP2[]", e.rp2);
              }, function (e) {
                var n = e.stack.pop();

                switch (t.DEBUG && console.log(e.step, "SZP0[]", n), e.zp0 = n, n) {
                  case 0:
                    e.tZone || on(e), e.z0 = e.tZone;
                    break;

                  case 1:
                    e.z0 = e.gZone;
                    break;

                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function (e) {
                var n = e.stack.pop();

                switch (t.DEBUG && console.log(e.step, "SZP1[]", n), e.zp1 = n, n) {
                  case 0:
                    e.tZone || on(e), e.z1 = e.tZone;
                    break;

                  case 1:
                    e.z1 = e.gZone;
                    break;

                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function (e) {
                var n = e.stack.pop();

                switch (t.DEBUG && console.log(e.step, "SZP2[]", n), e.zp2 = n, n) {
                  case 0:
                    e.tZone || on(e), e.z2 = e.tZone;
                    break;

                  case 1:
                    e.z2 = e.gZone;
                    break;

                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function (e) {
                var n = e.stack.pop();

                switch (t.DEBUG && console.log(e.step, "SZPS[]", n), e.zp0 = e.zp1 = e.zp2 = n, n) {
                  case 0:
                    e.tZone || on(e), e.z0 = e.z1 = e.z2 = e.tZone;
                    break;

                  case 1:
                    e.z0 = e.z1 = e.z2 = e.gZone;
                    break;

                  default:
                    throw new Error("Invalid zone pointer");
                }
              }, function (e) {
                e.loop = e.stack.pop(), t.DEBUG && console.log(e.step, "SLOOP[]", e.loop);
              }, function (e) {
                t.DEBUG && console.log(e.step, "RTG[]"), e.round = Vt;
              }, function (e) {
                t.DEBUG && console.log(e.step, "RTHG[]"), e.round = Xt;
              }, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "SMD[]", n), e.minDis = n / 64;
              }, function (e) {
                t.DEBUG && console.log(e.step, "ELSE[]"), rn(e, !1);
              }, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "JMPR[]", n), e.ip += n - 1;
              }, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "SCVTCI[]", n), e.cvCutIn = n / 64;
              }, void 0, void 0, function (e) {
                var n = e.stack;
                t.DEBUG && console.log(e.step, "DUP[]"), n.push(n[n.length - 1]);
              }, un, function (e) {
                t.DEBUG && console.log(e.step, "CLEAR[]"), e.stack.length = 0;
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "SWAP[]"), n.push(a), n.push(o);
              }, function (e) {
                var n = e.stack;
                t.DEBUG && console.log(e.step, "DEPTH[]"), n.push(n.length);
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "CINDEX[]", a), n.push(n[n.length - a]);
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "MINDEX[]", a), n.push(n.splice(n.length - a, 1)[0]);
              }, void 0, void 0, void 0, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "LOOPCALL[]", a, o);
                var i = e.ip,
                    r = e.prog;
                e.prog = e.funcs[a];

                for (var s = 0; s < o; s++) Ft(e), t.DEBUG && console.log(++e.step, s + 1 < o ? "next loopcall" : "done loopcall", s);

                e.ip = i, e.prog = r;
              }, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "CALL[]", n);
                var a = e.ip,
                    o = e.prog;
                e.prog = e.funcs[n], Ft(e), e.ip = a, e.prog = o, t.DEBUG && console.log(++e.step, "returning from", n);
              }, function (e) {
                if ("fpgm" !== e.env) throw new Error("FDEF not allowed here");
                var n = e.stack,
                    a = e.prog,
                    o = e.ip,
                    i = n.pop(),
                    r = o;

                for (t.DEBUG && console.log(e.step, "FDEF[]", i); 45 !== a[++o];);

                e.ip = o, e.funcs[i] = a.slice(r + 1, o);
              }, void 0, mn.bind(void 0, 0), mn.bind(void 0, 1), hn.bind(void 0, Jt), hn.bind(void 0, Qt), fn.bind(void 0, 0), fn.bind(void 0, 1), gn.bind(void 0, 0), gn.bind(void 0, 1), yn.bind(void 0, 0), yn.bind(void 0, 1), function (e) {
                for (var n = e.stack, a = e.loop, o = e.fv, i = n.pop() / 64, r = e.z2; a--;) {
                  var s = n.pop(),
                      l = r[s];
                  t.DEBUG && console.log(e.step, (e.loop > 1 ? "loop " + (e.loop - a) + ": " : "") + "SHPIX[]", s, i), o.setRelative(l, l, i), o.touch(l);
                }

                e.loop = 1;
              }, function (e) {
                for (var n = e.stack, a = e.rp1, o = e.rp2, i = e.loop, r = e.z0[a], s = e.z1[o], l = e.fv, p = e.dpv, d = e.z2; i--;) {
                  var c = n.pop(),
                      u = d[c];
                  t.DEBUG && console.log(e.step, (e.loop > 1 ? "loop " + (e.loop - i) + ": " : "") + "IP[]", c, a, "<->", o), l.interpolate(u, r, s, p), l.touch(u);
                }

                e.loop = 1;
              }, vn.bind(void 0, 0), vn.bind(void 0, 1), function (e) {
                for (var n = e.stack, a = e.rp0, o = e.z0[a], i = e.loop, r = e.fv, s = e.pv, l = e.z1; i--;) {
                  var p = n.pop(),
                      d = l[p];
                  t.DEBUG && console.log(e.step, (e.loop > 1 ? "loop " + (e.loop - i) + ": " : "") + "ALIGNRP[]", p), r.setRelative(d, o, 0, s), r.touch(d);
                }

                e.loop = 1;
              }, function (e) {
                t.DEBUG && console.log(e.step, "RTDG[]"), e.round = Wt;
              }, bn.bind(void 0, 0), bn.bind(void 0, 1), function (e) {
                var n = e.prog,
                    a = e.ip,
                    o = e.stack,
                    i = n[++a];
                t.DEBUG && console.log(e.step, "NPUSHB[]", i);

                for (var r = 0; r < i; r++) o.push(n[++a]);

                e.ip = a;
              }, function (e) {
                var n = e.ip,
                    a = e.prog,
                    o = e.stack,
                    i = a[++n];
                t.DEBUG && console.log(e.step, "NPUSHW[]", i);

                for (var r = 0; r < i; r++) {
                  var s = a[++n] << 8 | a[++n];
                  32768 & s && (s = -(1 + (65535 ^ s))), o.push(s);
                }

                e.ip = n;
              }, function (e) {
                var n = e.stack,
                    a = e.store;
                a || (a = e.store = []);
                var o = n.pop(),
                    i = n.pop();
                t.DEBUG && console.log(e.step, "WS", o, i), a[i] = o;
              }, function (e) {
                var n = e.stack,
                    a = e.store,
                    o = n.pop();
                t.DEBUG && console.log(e.step, "RS", o);
                var i = a && a[o] || 0;
                n.push(i);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "WCVTP", a, o), e.cvt[o] = a / 64;
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "RCVT", a), n.push(64 * e.cvt[a]);
              }, wn.bind(void 0, 0), wn.bind(void 0, 1), void 0, xn.bind(void 0, 0), xn.bind(void 0, 1), function (e) {
                t.DEBUG && console.log(e.step, "MPPEM[]"), e.stack.push(e.ppem);
              }, void 0, function (e) {
                t.DEBUG && console.log(e.step, "FLIPON[]"), e.autoFlip = !0;
              }, void 0, void 0, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "LT[]", a, o), n.push(o < a ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "LTEQ[]", a, o), n.push(o <= a ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "GT[]", a, o), n.push(o > a ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "GTEQ[]", a, o), n.push(o >= a ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "EQ[]", a, o), n.push(a === o ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "NEQ[]", a, o), n.push(a !== o ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "ODD[]", a), n.push(Math.trunc(a) % 2 ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "EVEN[]", a), n.push(Math.trunc(a) % 2 ? 0 : 1);
              }, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "IF[]", n), n || (rn(e, !0), t.DEBUG && console.log(e.step, "EIF[]"));
              }, function (e) {
                t.DEBUG && console.log(e.step, "EIF[]");
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "AND[]", a, o), n.push(a && o ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "OR[]", a, o), n.push(a || o ? 1 : 0);
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "NOT[]", a), n.push(a ? 0 : 1);
              }, Sn.bind(void 0, 1), function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "SDB[]", n), e.deltaBase = n;
              }, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "SDS[]", n), e.deltaShift = Math.pow(.5, n);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "ADD[]", a, o), n.push(o + a);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "SUB[]", a, o), n.push(o - a);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "DIV[]", a, o), n.push(64 * o / a);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "MUL[]", a, o), n.push(o * a / 64);
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "ABS[]", a), n.push(Math.abs(a));
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "NEG[]", a), n.push(-a);
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "FLOOR[]", a), n.push(64 * Math.floor(a / 64));
              }, function (e) {
                var n = e.stack,
                    a = n.pop();
                t.DEBUG && console.log(e.step, "CEILING[]", a), n.push(64 * Math.ceil(a / 64));
              }, kn.bind(void 0, 0), kn.bind(void 0, 1), kn.bind(void 0, 2), kn.bind(void 0, 3), void 0, void 0, void 0, void 0, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "WCVTF[]", a, o), e.cvt[o] = a * e.ppem / e.font.unitsPerEm;
              }, Sn.bind(void 0, 2), Sn.bind(void 0, 3), Tn.bind(void 0, 1), Tn.bind(void 0, 2), Tn.bind(void 0, 3), function (e) {
                var n,
                    a = e.stack.pop();

                switch (t.DEBUG && console.log(e.step, "SROUND[]", a), e.round = Zt, 192 & a) {
                  case 0:
                    n = .5;
                    break;

                  case 64:
                    n = 1;
                    break;

                  case 128:
                    n = 2;
                    break;

                  default:
                    throw new Error("invalid SROUND value");
                }

                switch (e.srPeriod = n, 48 & a) {
                  case 0:
                    e.srPhase = 0;
                    break;

                  case 16:
                    e.srPhase = .25 * n;
                    break;

                  case 32:
                    e.srPhase = .5 * n;
                    break;

                  case 48:
                    e.srPhase = .75 * n;
                    break;

                  default:
                    throw new Error("invalid SROUND value");
                }

                a &= 15, e.srThreshold = 0 === a ? 0 : (a / 8 - .5) * n;
              }, function (e) {
                var n,
                    a = e.stack.pop();

                switch (t.DEBUG && console.log(e.step, "S45ROUND[]", a), e.round = Zt, 192 & a) {
                  case 0:
                    n = Math.sqrt(2) / 2;
                    break;

                  case 64:
                    n = Math.sqrt(2);
                    break;

                  case 128:
                    n = 2 * Math.sqrt(2);
                    break;

                  default:
                    throw new Error("invalid S45ROUND value");
                }

                switch (e.srPeriod = n, 48 & a) {
                  case 0:
                    e.srPhase = 0;
                    break;

                  case 16:
                    e.srPhase = .25 * n;
                    break;

                  case 32:
                    e.srPhase = .5 * n;
                    break;

                  case 48:
                    e.srPhase = .75 * n;
                    break;

                  default:
                    throw new Error("invalid S45ROUND value");
                }

                a &= 15, e.srThreshold = 0 === a ? 0 : (a / 8 - .5) * n;
              }, void 0, void 0, function (e) {
                t.DEBUG && console.log(e.step, "ROFF[]"), e.round = qt;
              }, void 0, function (e) {
                t.DEBUG && console.log(e.step, "RUTG[]"), e.round = Ht;
              }, function (e) {
                t.DEBUG && console.log(e.step, "RDTG[]"), e.round = Yt;
              }, un, un, void 0, void 0, void 0, void 0, void 0, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "SCANCTRL[]", n);
              }, Cn.bind(void 0, 0), Cn.bind(void 0, 1), function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = 0;
                t.DEBUG && console.log(e.step, "GETINFO[]", a), 1 & a && (o = 35), 32 & a && (o |= 4096), n.push(o);
              }, void 0, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop(),
                    i = n.pop();
                t.DEBUG && console.log(e.step, "ROLL[]"), n.push(o), n.push(a), n.push(i);
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "MAX[]", a, o), n.push(Math.max(o, a));
              }, function (e) {
                var n = e.stack,
                    a = n.pop(),
                    o = n.pop();
                t.DEBUG && console.log(e.step, "MIN[]", a, o), n.push(Math.min(o, a));
              }, function (e) {
                var n = e.stack.pop();
                t.DEBUG && console.log(e.step, "SCANTYPE[]", n);
              }, function (e) {
                var n = e.stack.pop(),
                    a = e.stack.pop();

                switch (t.DEBUG && console.log(e.step, "INSTCTRL[]", n, a), n) {
                  case 1:
                    return void (e.inhibitGridFit = !!a);

                  case 2:
                    return void (e.ignoreCvt = !!a);

                  default:
                    throw new Error("invalid INSTCTRL[] selector");
                }
              }, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, void 0, _n.bind(void 0, 1), _n.bind(void 0, 2), _n.bind(void 0, 3), _n.bind(void 0, 4), _n.bind(void 0, 5), _n.bind(void 0, 6), _n.bind(void 0, 7), _n.bind(void 0, 8), Mn.bind(void 0, 1), Mn.bind(void 0, 2), Mn.bind(void 0, 3), Mn.bind(void 0, 4), Mn.bind(void 0, 5), Mn.bind(void 0, 6), Mn.bind(void 0, 7), Mn.bind(void 0, 8), En.bind(void 0, 0, 0, 0, 0, 0), En.bind(void 0, 0, 0, 0, 0, 1), En.bind(void 0, 0, 0, 0, 0, 2), En.bind(void 0, 0, 0, 0, 0, 3), En.bind(void 0, 0, 0, 0, 1, 0), En.bind(void 0, 0, 0, 0, 1, 1), En.bind(void 0, 0, 0, 0, 1, 2), En.bind(void 0, 0, 0, 0, 1, 3), En.bind(void 0, 0, 0, 1, 0, 0), En.bind(void 0, 0, 0, 1, 0, 1), En.bind(void 0, 0, 0, 1, 0, 2), En.bind(void 0, 0, 0, 1, 0, 3), En.bind(void 0, 0, 0, 1, 1, 0), En.bind(void 0, 0, 0, 1, 1, 1), En.bind(void 0, 0, 0, 1, 1, 2), En.bind(void 0, 0, 0, 1, 1, 3), En.bind(void 0, 0, 1, 0, 0, 0), En.bind(void 0, 0, 1, 0, 0, 1), En.bind(void 0, 0, 1, 0, 0, 2), En.bind(void 0, 0, 1, 0, 0, 3), En.bind(void 0, 0, 1, 0, 1, 0), En.bind(void 0, 0, 1, 0, 1, 1), En.bind(void 0, 0, 1, 0, 1, 2), En.bind(void 0, 0, 1, 0, 1, 3), En.bind(void 0, 0, 1, 1, 0, 0), En.bind(void 0, 0, 1, 1, 0, 1), En.bind(void 0, 0, 1, 1, 0, 2), En.bind(void 0, 0, 1, 1, 0, 3), En.bind(void 0, 0, 1, 1, 1, 0), En.bind(void 0, 0, 1, 1, 1, 1), En.bind(void 0, 0, 1, 1, 1, 2), En.bind(void 0, 0, 1, 1, 1, 3), En.bind(void 0, 1, 0, 0, 0, 0), En.bind(void 0, 1, 0, 0, 0, 1), En.bind(void 0, 1, 0, 0, 0, 2), En.bind(void 0, 1, 0, 0, 0, 3), En.bind(void 0, 1, 0, 0, 1, 0), En.bind(void 0, 1, 0, 0, 1, 1), En.bind(void 0, 1, 0, 0, 1, 2), En.bind(void 0, 1, 0, 0, 1, 3), En.bind(void 0, 1, 0, 1, 0, 0), En.bind(void 0, 1, 0, 1, 0, 1), En.bind(void 0, 1, 0, 1, 0, 2), En.bind(void 0, 1, 0, 1, 0, 3), En.bind(void 0, 1, 0, 1, 1, 0), En.bind(void 0, 1, 0, 1, 1, 1), En.bind(void 0, 1, 0, 1, 1, 2), En.bind(void 0, 1, 0, 1, 1, 3), En.bind(void 0, 1, 1, 0, 0, 0), En.bind(void 0, 1, 1, 0, 0, 1), En.bind(void 0, 1, 1, 0, 0, 2), En.bind(void 0, 1, 1, 0, 0, 3), En.bind(void 0, 1, 1, 0, 1, 0), En.bind(void 0, 1, 1, 0, 1, 1), En.bind(void 0, 1, 1, 0, 1, 2), En.bind(void 0, 1, 1, 0, 1, 3), En.bind(void 0, 1, 1, 1, 0, 0), En.bind(void 0, 1, 1, 1, 0, 1), En.bind(void 0, 1, 1, 1, 0, 2), En.bind(void 0, 1, 1, 1, 0, 3), En.bind(void 0, 1, 1, 1, 1, 0), En.bind(void 0, 1, 1, 1, 1, 1), En.bind(void 0, 1, 1, 1, 1, 2), En.bind(void 0, 1, 1, 1, 1, 3)];

              var jn = Array.from || function (e) {
                return e.match(/[\uD800-\uDBFF][\uDC00-\uDFFF]?|[^\uD800-\uDFFF]|./g) || [];
              };

              function In(e) {
                (e = e || {}).empty || (Rt(e.familyName, "When creating a new Font object, familyName is required."), Rt(e.styleName, "When creating a new Font object, styleName is required."), Rt(e.unitsPerEm, "When creating a new Font object, unitsPerEm is required."), Rt(e.ascender, "When creating a new Font object, ascender is required."), Rt(e.descender, "When creating a new Font object, descender is required."), Rt(e.descender < 0, "Descender should be negative (e.g. -512)."), this.names = {
                  fontFamily: {
                    en: e.familyName || " "
                  },
                  fontSubfamily: {
                    en: e.styleName || " "
                  },
                  fullName: {
                    en: e.fullName || e.familyName + " " + e.styleName
                  },
                  postScriptName: {
                    en: e.postScriptName || (e.familyName + e.styleName).replace(/\s/g, "")
                  },
                  designer: {
                    en: e.designer || " "
                  },
                  designerURL: {
                    en: e.designerURL || " "
                  },
                  manufacturer: {
                    en: e.manufacturer || " "
                  },
                  manufacturerURL: {
                    en: e.manufacturerURL || " "
                  },
                  license: {
                    en: e.license || " "
                  },
                  licenseURL: {
                    en: e.licenseURL || " "
                  },
                  version: {
                    en: e.version || "Version 0.1"
                  },
                  description: {
                    en: e.description || " "
                  },
                  copyright: {
                    en: e.copyright || " "
                  },
                  trademark: {
                    en: e.trademark || " "
                  }
                }, this.unitsPerEm = e.unitsPerEm || 1e3, this.ascender = e.ascender, this.descender = e.descender, this.createdTimestamp = e.createdTimestamp, this.tables = {
                  os2: {
                    usWeightClass: e.weightClass || this.usWeightClasses.MEDIUM,
                    usWidthClass: e.widthClass || this.usWidthClasses.MEDIUM,
                    fsSelection: e.fsSelection || this.fsSelectionValues.REGULAR
                  }
                }), this.supported = !0, this.glyphs = new ke.GlyphSet(this, e.glyphs || []), this.encoding = new fe(this), this.position = new _t(this), this.substitution = new Mt(this), this.tables = this.tables || {}, Object.defineProperty(this, "hinting", {
                  get: function () {
                    return this._hinting ? this._hinting : "truetype" === this.outlinesFormat ? this._hinting = new zt(this) : void 0;
                  }
                });
              }

              function Rn(e, t) {
                var n = JSON.stringify(e),
                    a = 256;

                for (var o in t) {
                  var i = parseInt(o);

                  if (i && !(i < 256)) {
                    if (JSON.stringify(t[o]) === n) return i;
                    a <= i && (a = i + 1);
                  }
                }

                return t[a] = e, a;
              }

              function Nn(e, t, n) {
                var a = Rn(t.name, n);
                return [{
                  name: "tag_" + e,
                  type: "TAG",
                  value: t.tag
                }, {
                  name: "minValue_" + e,
                  type: "FIXED",
                  value: t.minValue << 16
                }, {
                  name: "defaultValue_" + e,
                  type: "FIXED",
                  value: t.defaultValue << 16
                }, {
                  name: "maxValue_" + e,
                  type: "FIXED",
                  value: t.maxValue << 16
                }, {
                  name: "flags_" + e,
                  type: "USHORT",
                  value: 0
                }, {
                  name: "nameID_" + e,
                  type: "USHORT",
                  value: a
                }];
              }

              function An(e, t, n) {
                var a = {},
                    o = new le.Parser(e, t);
                return a.tag = o.parseTag(), a.minValue = o.parseFixed(), a.defaultValue = o.parseFixed(), a.maxValue = o.parseFixed(), o.skip("uShort", 1), a.name = n[o.parseUShort()] || {}, a;
              }

              function Dn(e, t, n, a) {
                for (var o = [{
                  name: "nameID_" + e,
                  type: "USHORT",
                  value: Rn(t.name, a)
                }, {
                  name: "flags_" + e,
                  type: "USHORT",
                  value: 0
                }], i = 0; i < n.length; ++i) {
                  var r = n[i].tag;
                  o.push({
                    name: "axis_" + e + " " + r,
                    type: "FIXED",
                    value: t.coordinates[r] << 16
                  });
                }

                return o;
              }

              function Ln(e, t, n, a) {
                var o = {},
                    i = new le.Parser(e, t);
                o.name = a[i.parseUShort()] || {}, i.skip("uShort", 1), o.coordinates = {};

                for (var r = 0; r < n.length; ++r) o.coordinates[n[r].tag] = i.parseFixed();

                return o;
              }

              In.prototype.hasChar = function (e) {
                return null !== this.encoding.charToGlyphIndex(e);
              }, In.prototype.charToGlyphIndex = function (e) {
                return this.encoding.charToGlyphIndex(e);
              }, In.prototype.charToGlyph = function (e) {
                var t = this.charToGlyphIndex(e),
                    n = this.glyphs.get(t);
                return n || (n = this.glyphs.get(0)), n;
              }, In.prototype.stringToGlyphs = function (e, t) {
                t = t || this.defaultRenderOptions;

                for (var n = jn(e), a = [], o = 0; o < n.length; o += 1) {
                  var i = n[o];
                  a.push(this.charToGlyphIndex(i));
                }

                var r = a.length;

                if (t.features) {
                  var s = t.script || this.substitution.getDefaultScriptName(),
                      l = [];
                  t.features.liga && (l = l.concat(this.substitution.getFeature("liga", s, t.language))), t.features.rlig && (l = l.concat(this.substitution.getFeature("rlig", s, t.language)));

                  for (var p = 0; p < r; p += 1) for (var d = 0; d < l.length; d++) {
                    for (var c = l[d], u = c.sub, m = u.length, h = 0; h < m && u[h] === a[p + h];) h++;

                    h === m && (a.splice(p, m, c.by), r = r - m + 1);
                  }
                }

                for (var f = new Array(r), g = this.glyphs.get(0), y = 0; y < r; y += 1) f[y] = this.glyphs.get(a[y]) || g;

                return f;
              }, In.prototype.nameToGlyphIndex = function (e) {
                return this.glyphNames.nameToGlyphIndex(e);
              }, In.prototype.nameToGlyph = function (e) {
                var t = this.nameToGlyphIndex(e),
                    n = this.glyphs.get(t);
                return n || (n = this.glyphs.get(0)), n;
              }, In.prototype.glyphIndexToName = function (e) {
                return this.glyphNames.glyphIndexToName ? this.glyphNames.glyphIndexToName(e) : "";
              }, In.prototype.getKerningValue = function (e, t) {
                e = e.index || e, t = t.index || t;
                var n = this.position.defaultKerningTables;
                return n ? this.position.getKerningValue(n, e, t) : this.kerningPairs[e + "," + t] || 0;
              }, In.prototype.defaultRenderOptions = {
                kerning: !0,
                features: {
                  liga: !0,
                  rlig: !0
                }
              }, In.prototype.forEachGlyph = function (e, t, n, a, o, i) {
                t = void 0 !== t ? t : 0, n = void 0 !== n ? n : 0, a = void 0 !== a ? a : 72, o = o || this.defaultRenderOptions;
                var r,
                    s = 1 / this.unitsPerEm * a,
                    l = this.stringToGlyphs(e, o);

                if (o.kerning) {
                  var p = o.script || this.position.getDefaultScriptName();
                  r = this.position.getKerningTables(p, o.language);
                }

                for (var d = 0; d < l.length; d += 1) {
                  var c = l[d];
                  i.call(this, c, t, n, a, o), c.advanceWidth && (t += c.advanceWidth * s), o.kerning && d < l.length - 1 && (t += (r ? this.position.getKerningValue(r, c.index, l[d + 1].index) : this.getKerningValue(c, l[d + 1])) * s), o.letterSpacing ? t += o.letterSpacing * a : o.tracking && (t += o.tracking / 1e3 * a);
                }

                return t;
              }, In.prototype.getPath = function (e, t, n, a, o) {
                var i = new I();
                return this.forEachGlyph(e, t, n, a, o, function (e, t, n, a) {
                  var r = e.getPath(t, n, a, o, this);
                  i.extend(r);
                }), i;
              }, In.prototype.getPaths = function (e, t, n, a, o) {
                var i = [];
                return this.forEachGlyph(e, t, n, a, o, function (e, t, n, a) {
                  var r = e.getPath(t, n, a, o, this);
                  i.push(r);
                }), i;
              }, In.prototype.getAdvanceWidth = function (e, t, n) {
                return this.forEachGlyph(e, 0, 0, t, n, function () {});
              }, In.prototype.draw = function (e, t, n, a, o, i) {
                this.getPath(t, n, a, o, i).draw(e);
              }, In.prototype.drawPoints = function (e, t, n, a, o, i) {
                this.forEachGlyph(t, n, a, o, i, function (t, n, a, o) {
                  t.drawPoints(e, n, a, o);
                });
              }, In.prototype.drawMetrics = function (e, t, n, a, o, i) {
                this.forEachGlyph(t, n, a, o, i, function (t, n, a, o) {
                  t.drawMetrics(e, n, a, o);
                });
              }, In.prototype.getEnglishName = function (e) {
                var t = this.names[e];
                if (t) return t.en;
              }, In.prototype.validate = function () {
                var e = this;

                function t(t) {
                  var n = e.getEnglishName(t);
                  n && n.trim().length;
                }

                t("fontFamily"), t("weightName"), t("manufacturer"), t("copyright"), t("version"), this.unitsPerEm;
              }, In.prototype.toTables = function () {
                return xt.fontToTable(this);
              }, In.prototype.toBuffer = function () {
                return console.warn("Font.toBuffer is deprecated. Use Font.toArrayBuffer instead."), this.toArrayBuffer();
              }, In.prototype.toArrayBuffer = function () {
                for (var e = this.toTables().encode(), t = new ArrayBuffer(e.length), n = new Uint8Array(t), a = 0; a < e.length; a++) n[a] = e[a];

                return t;
              }, In.prototype.download = function (t) {
                var n = this.getEnglishName("fontFamily"),
                    o = this.getEnglishName("fontSubfamily");
                t = t || n.replace(/\s/g, "") + "-" + o + ".otf";
                var i = this.toArrayBuffer();
                if ("undefined" != typeof window) window.requestFileSystem = window.requestFileSystem || window.webkitRequestFileSystem, window.requestFileSystem(window.TEMPORARY, i.byteLength, function (e) {
                  e.root.getFile(t, {
                    create: !0
                  }, function (e) {
                    e.createWriter(function (t) {
                      var n = new DataView(i),
                          a = new Blob([n], {
                        type: "font/opentype"
                      });
                      t.write(a), t.addEventListener("writeend", function () {
                        location.href = e.toURL();
                      }, !1);
                    });
                  });
                }, function (e) {
                  throw new Error(e.name + ": " + e.message);
                });else {
                  var r = e("fs"),
                      s = function (e) {
                    for (var t = new a(e.byteLength), n = new Uint8Array(e), o = 0; o < t.length; ++o) t[o] = n[o];

                    return t;
                  }(i);

                  r.writeFileSync(t, s);
                }
              }, In.prototype.fsSelectionValues = {
                ITALIC: 1,
                UNDERSCORE: 2,
                NEGATIVE: 4,
                OUTLINED: 8,
                STRIKEOUT: 16,
                BOLD: 32,
                REGULAR: 64,
                USER_TYPO_METRICS: 128,
                WWS: 256,
                OBLIQUE: 512
              }, In.prototype.usWidthClasses = {
                ULTRA_CONDENSED: 1,
                EXTRA_CONDENSED: 2,
                CONDENSED: 3,
                SEMI_CONDENSED: 4,
                MEDIUM: 5,
                SEMI_EXPANDED: 6,
                EXPANDED: 7,
                EXTRA_EXPANDED: 8,
                ULTRA_EXPANDED: 9
              }, In.prototype.usWeightClasses = {
                THIN: 100,
                EXTRA_LIGHT: 200,
                LIGHT: 300,
                NORMAL: 400,
                MEDIUM: 500,
                SEMI_BOLD: 600,
                BOLD: 700,
                EXTRA_BOLD: 800,
                BLACK: 900
              };
              var Pn = {
                make: function (e, t) {
                  var n = new ee.Table("fvar", [{
                    name: "version",
                    type: "ULONG",
                    value: 65536
                  }, {
                    name: "offsetToData",
                    type: "USHORT",
                    value: 0
                  }, {
                    name: "countSizePairs",
                    type: "USHORT",
                    value: 2
                  }, {
                    name: "axisCount",
                    type: "USHORT",
                    value: e.axes.length
                  }, {
                    name: "axisSize",
                    type: "USHORT",
                    value: 20
                  }, {
                    name: "instanceCount",
                    type: "USHORT",
                    value: e.instances.length
                  }, {
                    name: "instanceSize",
                    type: "USHORT",
                    value: 4 + 4 * e.axes.length
                  }]);
                  n.offsetToData = n.sizeOf();

                  for (var a = 0; a < e.axes.length; a++) n.fields = n.fields.concat(Nn(a, e.axes[a], t));

                  for (var o = 0; o < e.instances.length; o++) n.fields = n.fields.concat(Dn(o, e.instances[o], e.axes, t));

                  return n;
                },
                parse: function (e, t, n) {
                  var a = new le.Parser(e, t),
                      o = a.parseULong();
                  A.argument(65536 === o, "Unsupported fvar table version.");
                  var i = a.parseOffset16();
                  a.skip("uShort", 1);

                  for (var r = a.parseUShort(), s = a.parseUShort(), l = a.parseUShort(), p = a.parseUShort(), d = [], c = 0; c < r; c++) d.push(An(e, t + i + c * s, n));

                  for (var u = [], m = t + i + r * s, h = 0; h < l; h++) u.push(Ln(e, m + h * p, d, n));

                  return {
                    axes: d,
                    instances: u
                  };
                }
              },
                  On = new Array(10);
              On[1] = function () {
                var e = this.offset + this.relativeOffset,
                    t = this.parseUShort();
                return 1 === t ? {
                  posFormat: 1,
                  coverage: this.parsePointer(re.coverage),
                  value: this.parseValueRecord()
                } : 2 === t ? {
                  posFormat: 2,
                  coverage: this.parsePointer(re.coverage),
                  values: this.parseValueRecordList()
                } : void A.assert(!1, "0x" + e.toString(16) + ": GPOS lookup type 1 format must be 1 or 2.");
              }, On[2] = function () {
                var e = this.offset + this.relativeOffset,
                    t = this.parseUShort();
                A.assert(1 === t || 2 === t, "0x" + e.toString(16) + ": GPOS lookup type 2 format must be 1 or 2.");
                var n = this.parsePointer(re.coverage),
                    a = this.parseUShort(),
                    o = this.parseUShort();
                if (1 === t) return {
                  posFormat: t,
                  coverage: n,
                  valueFormat1: a,
                  valueFormat2: o,
                  pairSets: this.parseList(re.pointer(re.list(function () {
                    return {
                      secondGlyph: this.parseUShort(),
                      value1: this.parseValueRecord(a),
                      value2: this.parseValueRecord(o)
                    };
                  })))
                };

                if (2 === t) {
                  var i = this.parsePointer(re.classDef),
                      r = this.parsePointer(re.classDef),
                      s = this.parseUShort(),
                      l = this.parseUShort();
                  return {
                    posFormat: t,
                    coverage: n,
                    valueFormat1: a,
                    valueFormat2: o,
                    classDef1: i,
                    classDef2: r,
                    class1Count: s,
                    class2Count: l,
                    classRecords: this.parseList(s, re.list(l, function () {
                      return {
                        value1: this.parseValueRecord(a),
                        value2: this.parseValueRecord(o)
                      };
                    }))
                  };
                }
              }, On[3] = function () {
                return {
                  error: "GPOS Lookup 3 not supported"
                };
              }, On[4] = function () {
                return {
                  error: "GPOS Lookup 4 not supported"
                };
              }, On[5] = function () {
                return {
                  error: "GPOS Lookup 5 not supported"
                };
              }, On[6] = function () {
                return {
                  error: "GPOS Lookup 6 not supported"
                };
              }, On[7] = function () {
                return {
                  error: "GPOS Lookup 7 not supported"
                };
              }, On[8] = function () {
                return {
                  error: "GPOS Lookup 8 not supported"
                };
              }, On[9] = function () {
                return {
                  error: "GPOS Lookup 9 not supported"
                };
              };
              var Fn = new Array(10),
                  Bn = {
                parse: function (e, t) {
                  var n = new re(e, t = t || 0),
                      a = n.parseVersion(1);
                  return A.argument(1 === a || 1.1 === a, "Unsupported GPOS table version " + a), 1 === a ? {
                    version: a,
                    scripts: n.parseScriptList(),
                    features: n.parseFeatureList(),
                    lookups: n.parseLookupList(On)
                  } : {
                    version: a,
                    scripts: n.parseScriptList(),
                    features: n.parseFeatureList(),
                    lookups: n.parseLookupList(On),
                    variations: n.parseFeatureVariationsList()
                  };
                },
                make: function (e) {
                  return new ee.Table("GPOS", [{
                    name: "version",
                    type: "ULONG",
                    value: 65536
                  }, {
                    name: "scripts",
                    type: "TABLE",
                    value: new ee.ScriptList(e.scripts)
                  }, {
                    name: "features",
                    type: "TABLE",
                    value: new ee.FeatureList(e.features)
                  }, {
                    name: "lookups",
                    type: "TABLE",
                    value: new ee.LookupList(e.lookups, Fn)
                  }]);
                }
              },
                  Gn = {
                parse: function (e, t) {
                  var n = new le.Parser(e, t),
                      a = n.parseUShort();
                  if (0 === a) return function (e) {
                    var t = {};
                    e.skip("uShort");
                    var n = e.parseUShort();
                    A.argument(0 === n, "Unsupported kern sub-table version."), e.skip("uShort", 2);
                    var a = e.parseUShort();
                    e.skip("uShort", 3);

                    for (var o = 0; o < a; o += 1) {
                      var i = e.parseUShort(),
                          r = e.parseUShort(),
                          s = e.parseShort();
                      t[i + "," + r] = s;
                    }

                    return t;
                  }(n);
                  if (1 === a) return function (e) {
                    var t = {};
                    e.skip("uShort"), e.parseULong() > 1 && console.warn("Only the first kern subtable is supported."), e.skip("uLong");
                    var n = 255 & e.parseUShort();

                    if (e.skip("uShort"), 0 === n) {
                      var a = e.parseUShort();
                      e.skip("uShort", 3);

                      for (var o = 0; o < a; o += 1) {
                        var i = e.parseUShort(),
                            r = e.parseUShort(),
                            s = e.parseShort();
                        t[i + "," + r] = s;
                      }
                    }

                    return t;
                  }(n);
                  throw new Error("Unsupported kern table version (" + a + ").");
                }
              },
                  Un = {
                parse: function (e, t, n, a) {
                  for (var o = new le.Parser(e, t), i = a ? o.parseUShort : o.parseULong, r = [], s = 0; s < n + 1; s += 1) {
                    var l = i.call(o);
                    a && (l *= 2), r.push(l);
                  }

                  return r;
                }
              };

              function zn(t, n) {
                e("fs").readFile(t, function (e, t) {
                  if (e) return n(e.message);
                  n(null, It(t));
                });
              }

              function qn(e, t) {
                var n = new XMLHttpRequest();
                n.open("get", e, !0), n.responseType = "arraybuffer", n.onload = function () {
                  return n.response ? t(null, n.response) : t("Font could not be loaded: " + n.statusText);
                }, n.onerror = function () {
                  t("Font could not be loaded");
                }, n.send();
              }

              function Vn(e, t) {
                for (var n = [], a = 12, o = 0; o < t; o += 1) {
                  var i = le.getTag(e, a),
                      r = le.getULong(e, a + 4),
                      s = le.getULong(e, a + 8),
                      l = le.getULong(e, a + 12);
                  n.push({
                    tag: i,
                    checksum: r,
                    offset: s,
                    length: l,
                    compression: !1
                  }), a += 16;
                }

                return n;
              }

              function Wn(e, t) {
                if ("WOFF" === t.compression) {
                  var n = new Uint8Array(e.buffer, t.offset + 2, t.compressedLength - 2),
                      a = new Uint8Array(t.length);
                  if (M(n, a), a.byteLength !== t.length) throw new Error("Decompression error: " + t.tag + " decompressed length doesn't match recorded length");
                  return {
                    data: new DataView(a.buffer, 0),
                    offset: 0
                  };
                }

                return {
                  data: e,
                  offset: t.offset
                };
              }

              function Xn(e) {
                var t,
                    n,
                    a,
                    o,
                    i,
                    r,
                    s,
                    l,
                    p,
                    d,
                    c,
                    u,
                    m,
                    h,
                    f = new In({
                  empty: !0
                }),
                    g = new DataView(e, 0),
                    y = [],
                    v = le.getTag(g, 0);
                if (v === String.fromCharCode(0, 1, 0, 0) || "true" === v || "typ1" === v) f.outlinesFormat = "truetype", y = Vn(g, a = le.getUShort(g, 4));else if ("OTTO" === v) f.outlinesFormat = "cff", y = Vn(g, a = le.getUShort(g, 4));else {
                  if ("wOFF" !== v) throw new Error("Unsupported OpenType signature " + v);
                  var b = le.getTag(g, 4);
                  if (b === String.fromCharCode(0, 1, 0, 0)) f.outlinesFormat = "truetype";else {
                    if ("OTTO" !== b) throw new Error("Unsupported OpenType flavor " + v);
                    f.outlinesFormat = "cff";
                  }

                  y = function (e, t) {
                    for (var n = [], a = 44, o = 0; o < t; o += 1) {
                      var i = le.getTag(e, a),
                          r = le.getULong(e, a + 4),
                          s = le.getULong(e, a + 8),
                          l = le.getULong(e, a + 12),
                          p = void 0;
                      p = s < l && "WOFF", n.push({
                        tag: i,
                        offset: r,
                        compression: p,
                        compressedLength: s,
                        length: l
                      }), a += 20;
                    }

                    return n;
                  }(g, a = le.getUShort(g, 12));
                }

                for (var w = 0; w < a; w += 1) {
                  var x = y[w],
                      S = void 0;

                  switch (x.tag) {
                    case "cmap":
                      S = Wn(g, x), f.tables.cmap = de.parse(S.data, S.offset), f.encoding = new ge(f.tables.cmap);
                      break;

                    case "cvt ":
                      S = Wn(g, x), h = new le.Parser(S.data, S.offset), f.tables.cvt = h.parseShortList(x.length / 2);
                      break;

                    case "fvar":
                      i = x;
                      break;

                    case "fpgm":
                      S = Wn(g, x), h = new le.Parser(S.data, S.offset), f.tables.fpgm = h.parseByteList(x.length);
                      break;

                    case "head":
                      S = Wn(g, x), f.tables.head = qe.parse(S.data, S.offset), f.unitsPerEm = f.tables.head.unitsPerEm, t = f.tables.head.indexToLocFormat;
                      break;

                    case "hhea":
                      S = Wn(g, x), f.tables.hhea = Ve.parse(S.data, S.offset), f.ascender = f.tables.hhea.ascender, f.descender = f.tables.hhea.descender, f.numberOfHMetrics = f.tables.hhea.numberOfHMetrics;
                      break;

                    case "hmtx":
                      p = x;
                      break;

                    case "ltag":
                      S = Wn(g, x), n = Xe.parse(S.data, S.offset);
                      break;

                    case "maxp":
                      S = Wn(g, x), f.tables.maxp = He.parse(S.data, S.offset), f.numGlyphs = f.tables.maxp.numGlyphs;
                      break;

                    case "name":
                      u = x;
                      break;

                    case "OS/2":
                      S = Wn(g, x), f.tables.os2 = lt.parse(S.data, S.offset);
                      break;

                    case "post":
                      S = Wn(g, x), f.tables.post = pt.parse(S.data, S.offset), f.glyphNames = new ve(f.tables.post);
                      break;

                    case "prep":
                      S = Wn(g, x), h = new le.Parser(S.data, S.offset), f.tables.prep = h.parseByteList(x.length);
                      break;

                    case "glyf":
                      r = x;
                      break;

                    case "loca":
                      c = x;
                      break;

                    case "CFF ":
                      o = x;
                      break;

                    case "kern":
                      d = x;
                      break;

                    case "GPOS":
                      s = x;
                      break;

                    case "GSUB":
                      l = x;
                      break;

                    case "meta":
                      m = x;
                  }
                }

                var k = Wn(g, u);

                if (f.tables.name = rt.parse(k.data, k.offset, n), f.names = f.tables.name, r && c) {
                  var T = 0 === t,
                      C = Wn(g, c),
                      _ = Un.parse(C.data, C.offset, f.numGlyphs, T),
                      M = Wn(g, r);

                  f.glyphs = Ut.parse(M.data, M.offset, _, f);
                } else {
                  if (!o) throw new Error("Font doesn't contain TrueType or CFF outlines.");
                  var E = Wn(g, o);
                  ze.parse(E.data, E.offset, f);
                }

                var j = Wn(g, p);

                if (We.parse(j.data, j.offset, f.numberOfHMetrics, f.numGlyphs, f.glyphs), function (e) {
                  for (var t, n = e.tables.cmap.glyphIndexMap, a = Object.keys(n), o = 0; o < a.length; o += 1) {
                    var i = a[o],
                        r = n[i];
                    (t = e.glyphs.get(r)).addUnicode(parseInt(i));
                  }

                  for (var s = 0; s < e.glyphs.length; s += 1) t = e.glyphs.get(s), e.cffEncoding ? e.isCIDFont ? t.name = "gid" + s : t.name = e.cffEncoding.charset[s] : e.glyphNames.names && (t.name = e.glyphNames.glyphIndexToName(s));
                }(f), d) {
                  var I = Wn(g, d);
                  f.kerningPairs = Gn.parse(I.data, I.offset);
                } else f.kerningPairs = {};

                if (s) {
                  var R = Wn(g, s);
                  f.tables.gpos = Bn.parse(R.data, R.offset), f.position.init();
                }

                if (l) {
                  var N = Wn(g, l);
                  f.tables.gsub = mt.parse(N.data, N.offset);
                }

                if (i) {
                  var A = Wn(g, i);
                  f.tables.fvar = Pn.parse(A.data, A.offset, f.names);
                }

                if (m) {
                  var D = Wn(g, m);
                  f.tables.meta = ht.parse(D.data, D.offset), f.metas = f.tables.meta;
                }

                return f;
              }

              t.Font = In, t.Glyph = we, t.Path = I, t.BoundingBox = j, t._parse = le, t.parse = Xn, t.load = function (e, t) {
                ("undefined" == typeof window ? zn : qn)(e, function (e, n) {
                  if (e) return t(e);
                  var a;

                  try {
                    a = Xn(n);
                  } catch (e) {
                    return t(e, null);
                  }

                  return t(null, a);
                });
              }, t.loadSync = function (t) {
                return Xn(It(e("fs").readFileSync(t)));
              }, Object.defineProperty(t, "__esModule", {
                value: !0
              });
            });
          }).call(this, e("buffer").Buffer);
        }, {
          buffer: 4,
          fs: 3
        }],
        11: [function (e, t, n) {
          var a,
              o,
              i = t.exports = {};

          function r() {
            throw new Error("setTimeout has not been defined");
          }

          function s() {
            throw new Error("clearTimeout has not been defined");
          }

          function l(e) {
            if (a === setTimeout) return setTimeout(e, 0);
            if ((a === r || !a) && setTimeout) return a = setTimeout, setTimeout(e, 0);

            try {
              return a(e, 0);
            } catch (t) {
              try {
                return a.call(null, e, 0);
              } catch (t) {
                return a.call(this, e, 0);
              }
            }
          }

          !function () {
            try {
              a = "function" == typeof setTimeout ? setTimeout : r;
            } catch (e) {
              a = r;
            }

            try {
              o = "function" == typeof clearTimeout ? clearTimeout : s;
            } catch (e) {
              o = s;
            }
          }();
          var p,
              d = [],
              c = !1,
              u = -1;

          function m() {
            c && p && (c = !1, p.length ? d = p.concat(d) : u = -1, d.length && h());
          }

          function h() {
            if (!c) {
              var e = l(m);
              c = !0;

              for (var t = d.length; t;) {
                for (p = d, d = []; ++u < t;) p && p[u].run();

                u = -1, t = d.length;
              }

              p = null, c = !1, function (e) {
                if (o === clearTimeout) return clearTimeout(e);
                if ((o === s || !o) && clearTimeout) return o = clearTimeout, clearTimeout(e);

                try {
                  o(e);
                } catch (t) {
                  try {
                    return o.call(null, e);
                  } catch (t) {
                    return o.call(this, e);
                  }
                }
              }(e);
            }
          }

          function f(e, t) {
            this.fun = e, this.array = t;
          }

          function g() {}

          i.nextTick = function (e) {
            var t = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) t[n - 1] = arguments[n];
            d.push(new f(e, t)), 1 !== d.length || c || l(h);
          }, f.prototype.run = function () {
            this.fun.apply(null, this.array);
          }, i.title = "browser", i.browser = !0, i.env = {}, i.argv = [], i.version = "", i.versions = {}, i.on = g, i.addListener = g, i.once = g, i.off = g, i.removeListener = g, i.removeAllListeners = g, i.emit = g, i.prependListener = g, i.prependOnceListener = g, i.listeners = function (e) {
            return [];
          }, i.binding = function (e) {
            throw new Error("process.binding is not supported");
          }, i.cwd = function () {
            return "/";
          }, i.chdir = function (e) {
            throw new Error("process.chdir is not supported");
          }, i.umask = function () {
            return 0;
          };
        }, {}],
        12: [function (e, t, n) {
          !function (e) {
            "use strict";

            if (!e.fetch) {
              var t = {
                searchParams: "URLSearchParams" in e,
                iterable: "Symbol" in e && "iterator" in Symbol,
                blob: "FileReader" in e && "Blob" in e && function () {
                  try {
                    return new Blob(), !0;
                  } catch (e) {
                    return !1;
                  }
                }(),
                formData: "FormData" in e,
                arrayBuffer: "ArrayBuffer" in e
              };
              if (t.arrayBuffer) var n = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
                  a = function (e) {
                return e && DataView.prototype.isPrototypeOf(e);
              },
                  o = ArrayBuffer.isView || function (e) {
                return e && n.indexOf(Object.prototype.toString.call(e)) > -1;
              };
              d.prototype.append = function (e, t) {
                e = s(e), t = l(t);
                var n = this.map[e];
                this.map[e] = n ? n + "," + t : t;
              }, d.prototype.delete = function (e) {
                delete this.map[s(e)];
              }, d.prototype.get = function (e) {
                return e = s(e), this.has(e) ? this.map[e] : null;
              }, d.prototype.has = function (e) {
                return this.map.hasOwnProperty(s(e));
              }, d.prototype.set = function (e, t) {
                this.map[s(e)] = l(t);
              }, d.prototype.forEach = function (e, t) {
                for (var n in this.map) this.map.hasOwnProperty(n) && e.call(t, this.map[n], n, this);
              }, d.prototype.keys = function () {
                var e = [];
                return this.forEach(function (t, n) {
                  e.push(n);
                }), p(e);
              }, d.prototype.values = function () {
                var e = [];
                return this.forEach(function (t) {
                  e.push(t);
                }), p(e);
              }, d.prototype.entries = function () {
                var e = [];
                return this.forEach(function (t, n) {
                  e.push([n, t]);
                }), p(e);
              }, t.iterable && (d.prototype[Symbol.iterator] = d.prototype.entries);
              var i = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];
              g.prototype.clone = function () {
                return new g(this, {
                  body: this._bodyInit
                });
              }, f.call(g.prototype), f.call(v.prototype), v.prototype.clone = function () {
                return new v(this._bodyInit, {
                  status: this.status,
                  statusText: this.statusText,
                  headers: new d(this.headers),
                  url: this.url
                });
              }, v.error = function () {
                var e = new v(null, {
                  status: 0,
                  statusText: ""
                });
                return e.type = "error", e;
              };
              var r = [301, 302, 303, 307, 308];
              v.redirect = function (e, t) {
                if (-1 === r.indexOf(t)) throw new RangeError("Invalid status code");
                return new v(null, {
                  status: t,
                  headers: {
                    location: e
                  }
                });
              }, e.Headers = d, e.Request = g, e.Response = v, e.fetch = function (e, n) {
                return new Promise(function (a, o) {
                  var i = new g(e, n),
                      r = new XMLHttpRequest();
                  r.onload = function () {
                    var e,
                        t,
                        n = {
                      status: r.status,
                      statusText: r.statusText,
                      headers: (e = r.getAllResponseHeaders() || "", t = new d(), e.split(/\r?\n/).forEach(function (e) {
                        var n = e.split(":"),
                            a = n.shift().trim();

                        if (a) {
                          var o = n.join(":").trim();
                          t.append(a, o);
                        }
                      }), t)
                    };
                    n.url = "responseURL" in r ? r.responseURL : n.headers.get("X-Request-URL");
                    var o = "response" in r ? r.response : r.responseText;
                    a(new v(o, n));
                  }, r.onerror = function () {
                    o(new TypeError("Network request failed"));
                  }, r.ontimeout = function () {
                    o(new TypeError("Network request failed"));
                  }, r.open(i.method, i.url, !0), "include" === i.credentials && (r.withCredentials = !0), "responseType" in r && t.blob && (r.responseType = "blob"), i.headers.forEach(function (e, t) {
                    r.setRequestHeader(t, e);
                  }), r.send(void 0 === i._bodyInit ? null : i._bodyInit);
                });
              }, e.fetch.polyfill = !0;
            }

            function s(e) {
              if ("string" != typeof e && (e = String(e)), /[^a-z0-9\-#$%&'*+.\^_`|~]/i.test(e)) throw new TypeError("Invalid character in header field name");
              return e.toLowerCase();
            }

            function l(e) {
              return "string" != typeof e && (e = String(e)), e;
            }

            function p(e) {
              var n = {
                next: function () {
                  var t = e.shift();
                  return {
                    done: void 0 === t,
                    value: t
                  };
                }
              };
              return t.iterable && (n[Symbol.iterator] = function () {
                return n;
              }), n;
            }

            function d(e) {
              this.map = {}, e instanceof d ? e.forEach(function (e, t) {
                this.append(t, e);
              }, this) : Array.isArray(e) ? e.forEach(function (e) {
                this.append(e[0], e[1]);
              }, this) : e && Object.getOwnPropertyNames(e).forEach(function (t) {
                this.append(t, e[t]);
              }, this);
            }

            function c(e) {
              if (e.bodyUsed) return Promise.reject(new TypeError("Already read"));
              e.bodyUsed = !0;
            }

            function u(e) {
              return new Promise(function (t, n) {
                e.onload = function () {
                  t(e.result);
                }, e.onerror = function () {
                  n(e.error);
                };
              });
            }

            function m(e) {
              var t = new FileReader(),
                  n = u(t);
              return t.readAsArrayBuffer(e), n;
            }

            function h(e) {
              if (e.slice) return e.slice(0);
              var t = new Uint8Array(e.byteLength);
              return t.set(new Uint8Array(e)), t.buffer;
            }

            function f() {
              return this.bodyUsed = !1, this._initBody = function (e) {
                if (this._bodyInit = e, e) {
                  if ("string" == typeof e) this._bodyText = e;else if (t.blob && Blob.prototype.isPrototypeOf(e)) this._bodyBlob = e;else if (t.formData && FormData.prototype.isPrototypeOf(e)) this._bodyFormData = e;else if (t.searchParams && URLSearchParams.prototype.isPrototypeOf(e)) this._bodyText = e.toString();else if (t.arrayBuffer && t.blob && a(e)) this._bodyArrayBuffer = h(e.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer]);else {
                    if (!t.arrayBuffer || !ArrayBuffer.prototype.isPrototypeOf(e) && !o(e)) throw new Error("unsupported BodyInit type");
                    this._bodyArrayBuffer = h(e);
                  }
                } else this._bodyText = "";
                this.headers.get("content-type") || ("string" == typeof e ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : t.searchParams && URLSearchParams.prototype.isPrototypeOf(e) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"));
              }, t.blob && (this.blob = function () {
                var e = c(this);
                if (e) return e;
                if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                return Promise.resolve(new Blob([this._bodyText]));
              }, this.arrayBuffer = function () {
                return this._bodyArrayBuffer ? c(this) || Promise.resolve(this._bodyArrayBuffer) : this.blob().then(m);
              }), this.text = function () {
                var e,
                    t,
                    n,
                    a = c(this);
                if (a) return a;
                if (this._bodyBlob) return e = this._bodyBlob, t = new FileReader(), n = u(t), t.readAsText(e), n;
                if (this._bodyArrayBuffer) return Promise.resolve(function (e) {
                  for (var t = new Uint8Array(e), n = new Array(t.length), a = 0; a < t.length; a++) n[a] = String.fromCharCode(t[a]);

                  return n.join("");
                }(this._bodyArrayBuffer));
                if (this._bodyFormData) throw new Error("could not read FormData body as text");
                return Promise.resolve(this._bodyText);
              }, t.formData && (this.formData = function () {
                return this.text().then(y);
              }), this.json = function () {
                return this.text().then(JSON.parse);
              }, this;
            }

            function g(e, t) {
              var n,
                  a,
                  o = (t = t || {}).body;

              if (e instanceof g) {
                if (e.bodyUsed) throw new TypeError("Already read");
                this.url = e.url, this.credentials = e.credentials, t.headers || (this.headers = new d(e.headers)), this.method = e.method, this.mode = e.mode, o || null == e._bodyInit || (o = e._bodyInit, e.bodyUsed = !0);
              } else this.url = String(e);

              if (this.credentials = t.credentials || this.credentials || "omit", !t.headers && this.headers || (this.headers = new d(t.headers)), this.method = (n = t.method || this.method || "GET", a = n.toUpperCase(), i.indexOf(a) > -1 ? a : n), this.mode = t.mode || this.mode || null, this.referrer = null, ("GET" === this.method || "HEAD" === this.method) && o) throw new TypeError("Body not allowed for GET or HEAD requests");

              this._initBody(o);
            }

            function y(e) {
              var t = new FormData();
              return e.trim().split("&").forEach(function (e) {
                if (e) {
                  var n = e.split("="),
                      a = n.shift().replace(/\+/g, " "),
                      o = n.join("=").replace(/\+/g, " ");
                  t.append(decodeURIComponent(a), decodeURIComponent(o));
                }
              }), t;
            }

            function v(e, t) {
              t || (t = {}), this.type = "default", this.status = "status" in t ? t.status : 200, this.ok = this.status >= 200 && this.status < 300, this.statusText = "statusText" in t ? t.statusText : "OK", this.headers = new d(t.headers), this.url = t.url || "", this._initBody(e);
            }
          }("undefined" != typeof self ? self : this);
        }, {}],
        13: [function (e, t, n) {
          "use strict";

          var a = e("./core/main");
          e("./core/constants"), e("./core/environment"), e("./core/error_helpers"), e("./core/helpers"), e("./core/legacy"), e("./core/p5.Element"), e("./core/p5.Graphics"), e("./core/p5.Renderer"), e("./core/p5.Renderer2D"), e("./core/rendering"), e("./core/shim"), e("./core/structure"), e("./core/transform"), e("./core/shape/2d_primitives"), e("./core/shape/attributes"), e("./core/shape/curves"), e("./core/shape/vertex"), e("./color/color_conversion"), e("./color/creating_reading"), e("./color/p5.Color"), e("./color/setting"), e("./data/p5.TypedDict"), e("./events/acceleration"), e("./events/keyboard"), e("./events/mouse"), e("./events/touch"), e("./image/filters"), e("./image/image"), e("./image/loading_displaying"), e("./image/p5.Image"), e("./image/pixels"), e("./io/files"), e("./io/p5.Table"), e("./io/p5.TableRow"), e("./io/p5.XML"), e("./math/calculation"), e("./math/math"), e("./math/noise"), e("./math/p5.Vector"), e("./math/random"), e("./math/trigonometry"), e("./typography/attributes"), e("./typography/loading_displaying"), e("./typography/p5.Font"), e("./utilities/array_functions"), e("./utilities/conversion"), e("./utilities/string_functions"), e("./utilities/time_date"), e("./webgl/3d_primitives"), e("./webgl/interaction"), e("./webgl/light"), e("./webgl/loading"), e("./webgl/material"), e("./webgl/p5.Camera"), e("./webgl/p5.Geometry"), e("./webgl/p5.Matrix"), e("./webgl/p5.RendererGL.Immediate"), e("./webgl/p5.RendererGL"), e("./webgl/p5.RendererGL.Retained"), e("./webgl/p5.Shader"), e("./webgl/p5.Texture"), e("./webgl/text"), e("./core/init"), t.exports = a;
        }, {
          "./color/color_conversion": 14,
          "./color/creating_reading": 15,
          "./color/p5.Color": 16,
          "./color/setting": 17,
          "./core/constants": 18,
          "./core/environment": 19,
          "./core/error_helpers": 20,
          "./core/helpers": 21,
          "./core/init": 22,
          "./core/legacy": 23,
          "./core/main": 24,
          "./core/p5.Element": 25,
          "./core/p5.Graphics": 26,
          "./core/p5.Renderer": 27,
          "./core/p5.Renderer2D": 28,
          "./core/rendering": 29,
          "./core/shape/2d_primitives": 30,
          "./core/shape/attributes": 31,
          "./core/shape/curves": 32,
          "./core/shape/vertex": 33,
          "./core/shim": 34,
          "./core/structure": 35,
          "./core/transform": 36,
          "./data/p5.TypedDict": 37,
          "./events/acceleration": 38,
          "./events/keyboard": 39,
          "./events/mouse": 40,
          "./events/touch": 41,
          "./image/filters": 42,
          "./image/image": 43,
          "./image/loading_displaying": 44,
          "./image/p5.Image": 45,
          "./image/pixels": 46,
          "./io/files": 47,
          "./io/p5.Table": 48,
          "./io/p5.TableRow": 49,
          "./io/p5.XML": 50,
          "./math/calculation": 51,
          "./math/math": 52,
          "./math/noise": 53,
          "./math/p5.Vector": 54,
          "./math/random": 55,
          "./math/trigonometry": 56,
          "./typography/attributes": 57,
          "./typography/loading_displaying": 58,
          "./typography/p5.Font": 59,
          "./utilities/array_functions": 60,
          "./utilities/conversion": 61,
          "./utilities/string_functions": 62,
          "./utilities/time_date": 63,
          "./webgl/3d_primitives": 64,
          "./webgl/interaction": 65,
          "./webgl/light": 66,
          "./webgl/loading": 67,
          "./webgl/material": 68,
          "./webgl/p5.Camera": 69,
          "./webgl/p5.Geometry": 70,
          "./webgl/p5.Matrix": 71,
          "./webgl/p5.RendererGL": 74,
          "./webgl/p5.RendererGL.Immediate": 72,
          "./webgl/p5.RendererGL.Retained": 73,
          "./webgl/p5.Shader": 75,
          "./webgl/p5.Texture": 76,
          "./webgl/text": 77
        }],
        14: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.ColorConversion = {}, a.ColorConversion._hsbaToHSLA = function (e) {
            var t = e[0],
                n = e[1],
                a = e[2],
                o = (2 - n) * a / 2;
            return 0 !== o && (1 === o ? n = 0 : o < .5 ? n /= 2 - n : n = n * a / (2 - 2 * o)), [t, n, o, e[3]];
          }, a.ColorConversion._hsbaToRGBA = function (e) {
            var t = 6 * e[0],
                n = e[1],
                a = e[2],
                o = [];
            if (0 === n) o = [a, a, a, e[3]];else {
              var i,
                  r,
                  s,
                  l = Math.floor(t),
                  p = a * (1 - n),
                  d = a * (1 - n * (t - l)),
                  c = a * (1 - n * (1 + l - t));
              1 === l ? (i = d, r = a, s = p) : 2 === l ? (i = p, r = a, s = c) : 3 === l ? (i = p, r = d, s = a) : 4 === l ? (i = c, r = p, s = a) : 5 === l ? (i = a, r = p, s = d) : (i = a, r = c, s = p), o = [i, r, s, e[3]];
            }
            return o;
          }, a.ColorConversion._hslaToHSBA = function (e) {
            var t,
                n = e[0],
                a = e[1],
                o = e[2];
            return [n, a = 2 * ((t = o < .5 ? (1 + a) * o : o + a - o * a) - o) / t, t, e[3]];
          }, a.ColorConversion._hslaToRGBA = function (e) {
            var t = 6 * e[0],
                n = e[1],
                a = e[2],
                o = [];
            if (0 === n) o = [a, a, a, e[3]];else {
              var i,
                  r = 2 * a - (i = a < .5 ? (1 + n) * a : a + n - a * n),
                  s = function (e, t, n) {
                return e < 0 ? e += 6 : e >= 6 && (e -= 6), e < 1 ? t + (n - t) * e : e < 3 ? n : e < 4 ? t + (n - t) * (4 - e) : t;
              };

              o = [s(t + 2, r, i), s(t, r, i), s(t - 2, r, i), e[3]];
            }
            return o;
          }, a.ColorConversion._rgbaToHSBA = function (e) {
            var t,
                n,
                a = e[0],
                o = e[1],
                i = e[2],
                r = Math.max(a, o, i),
                s = r - Math.min(a, o, i);
            return 0 === s ? (t = 0, n = 0) : (n = s / r, a === r ? t = (o - i) / s : o === r ? t = 2 + (i - a) / s : i === r && (t = 4 + (a - o) / s), t < 0 ? t += 6 : t >= 6 && (t -= 6)), [t / 6, n, r, e[3]];
          }, a.ColorConversion._rgbaToHSLA = function (e) {
            var t,
                n,
                a = e[0],
                o = e[1],
                i = e[2],
                r = Math.max(a, o, i),
                s = Math.min(a, o, i),
                l = r + s,
                p = r - s;
            return 0 === p ? (t = 0, n = 0) : (n = l < 1 ? p / l : p / (2 - l), a === r ? t = (o - i) / p : o === r ? t = 2 + (i - a) / p : i === r && (t = 4 + (a - o) / p), t < 0 ? t += 6 : t >= 6 && (t -= 6)), [t / 6, n, l / 2, e[3]];
          }, t.exports = a.ColorConversion;
        }, {
          "../core/main": 24
        }],
        15: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          e("./p5.Color"), e("../core/error_helpers"), a.prototype.alpha = function (e) {
            return a._validateParameters("alpha", arguments), this.color(e)._getAlpha();
          }, a.prototype.blue = function (e) {
            return a._validateParameters("blue", arguments), this.color(e)._getBlue();
          }, a.prototype.brightness = function (e) {
            return a._validateParameters("brightness", arguments), this.color(e)._getBrightness();
          }, a.prototype.color = function () {
            if (a._validateParameters("color", arguments), arguments[0] instanceof a.Color) return arguments[0];
            var e = arguments[0] instanceof Array ? arguments[0] : arguments;
            return new a.Color(this, e);
          }, a.prototype.green = function (e) {
            return a._validateParameters("green", arguments), this.color(e)._getGreen();
          }, a.prototype.hue = function (e) {
            return a._validateParameters("hue", arguments), this.color(e)._getHue();
          }, a.prototype.lerpColor = function (e, t, n) {
            a._validateParameters("lerpColor", arguments);

            var i,
                r,
                s,
                l,
                p,
                d,
                c = this._colorMode,
                u = this._colorMaxes;
            if (c === o.RGB) p = e.levels.map(function (e) {
              return e / 255;
            }), d = t.levels.map(function (e) {
              return e / 255;
            });else if (c === o.HSB) e._getBrightness(), t._getBrightness(), p = e.hsba, d = t.hsba;else {
              if (c !== o.HSL) throw new Error(c + "cannot be used for interpolation.");
              e._getLightness(), t._getLightness(), p = e.hsla, d = t.hsla;
            }
            return n = Math.max(Math.min(n, 1), 0), void 0 === this.lerp && (this.lerp = function (e, t, n) {
              return n * (t - e) + e;
            }), i = this.lerp(p[0], d[0], n), r = this.lerp(p[1], d[1], n), s = this.lerp(p[2], d[2], n), l = this.lerp(p[3], d[3], n), i *= u[c][0], r *= u[c][1], s *= u[c][2], l *= u[c][3], this.color(i, r, s, l);
          }, a.prototype.lightness = function (e) {
            return a._validateParameters("lightness", arguments), this.color(e)._getLightness();
          }, a.prototype.red = function (e) {
            return a._validateParameters("red", arguments), this.color(e)._getRed();
          }, a.prototype.saturation = function (e) {
            return a._validateParameters("saturation", arguments), this.color(e)._getSaturation();
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/error_helpers": 20,
          "../core/main": 24,
          "./p5.Color": 16
        }],
        16: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants"),
              i = e("./color_conversion");
          a.Color = function (e, t) {
            if (this._storeModeAndMaxes(e._colorMode, e._colorMaxes), this.mode !== o.RGB && this.mode !== o.HSL && this.mode !== o.HSB) throw new Error(this.mode + " is an invalid colorMode.");
            return this._array = a.Color._parseInputs.apply(this, t), this._calculateLevels(), this;
          }, a.Color.prototype.toString = function (e) {
            this.hsba || (this.hsba = i._rgbaToHSBA(this._array)), this.hsla || (this.hsla = i._rgbaToHSLA(this._array));
            var t = this.levels,
                n = this._array,
                a = n[3];

            switch (e) {
              case "#rrggbb":
                return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16));

              case "#rrggbbaa":
                return "#".concat(t[0] < 16 ? "0".concat(t[0].toString(16)) : t[0].toString(16), t[1] < 16 ? "0".concat(t[1].toString(16)) : t[1].toString(16), t[2] < 16 ? "0".concat(t[2].toString(16)) : t[2].toString(16), t[3] < 16 ? "0".concat(t[2].toString(16)) : t[3].toString(16));

              case "#rgb":
                return "#".concat(Math.round(15 * n[0]).toString(16), Math.round(15 * n[1]).toString(16), Math.round(15 * n[2]).toString(16));

              case "#rgba":
                return "#".concat(Math.round(15 * n[0]).toString(16), Math.round(15 * n[1]).toString(16), Math.round(15 * n[2]).toString(16), Math.round(15 * n[3]).toString(16));

              case "rgb":
                return "rgb(".concat(t[0], ", ", t[1], ", ", t[2], ")");

              case "rgb%":
                return "rgb(".concat((100 * n[0]).toPrecision(3), "%, ", (100 * n[1]).toPrecision(3), "%, ", (100 * n[2]).toPrecision(3), "%)");

              case "rgba%":
                return "rgba(".concat((100 * n[0]).toPrecision(3), "%, ", (100 * n[1]).toPrecision(3), "%, ", (100 * n[2]).toPrecision(3), "%, ", (100 * n[3]).toPrecision(3), "%)");

              case "hsb":
              case "hsv":
                return "hsb(".concat(this.hsba[0] * this.maxes[o.HSB][0], ", ", this.hsba[1] * this.maxes[o.HSB][1], ", ", this.hsba[2] * this.maxes[o.HSB][2], ")");

              case "hsb%":
              case "hsv%":
                return "hsb(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%)");

              case "hsba":
              case "hsva":
                return "hsba(".concat(this.hsba[0] * this.maxes[o.HSB][0], ", ", this.hsba[1] * this.maxes[o.HSB][1], ", ", this.hsba[2] * this.maxes[o.HSB][2], ", ", a, ")");

              case "hsba%":
              case "hsva%":
                return "hsba(".concat((100 * this.hsba[0]).toPrecision(3), "%, ", (100 * this.hsba[1]).toPrecision(3), "%, ", (100 * this.hsba[2]).toPrecision(3), "%, ", (100 * a).toPrecision(3), "%)");

              case "hsl":
                return "hsl(".concat(this.hsla[0] * this.maxes[o.HSL][0], ", ", this.hsla[1] * this.maxes[o.HSL][1], ", ", this.hsla[2] * this.maxes[o.HSL][2], ")");

              case "hsl%":
                return "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%)");

              case "hsla":
                return "hsla(".concat(this.hsla[0] * this.maxes[o.HSL][0], ", ", this.hsla[1] * this.maxes[o.HSL][1], ", ", this.hsla[2] * this.maxes[o.HSL][2], ", ", a, ")");

              case "hsla%":
                return "hsl(".concat((100 * this.hsla[0]).toPrecision(3), "%, ", (100 * this.hsla[1]).toPrecision(3), "%, ", (100 * this.hsla[2]).toPrecision(3), "%, ", (100 * a).toPrecision(3), "%)");

              case "rgba":
              default:
                return "rgba(" + t[0] + "," + t[1] + "," + t[2] + "," + a + ")";
            }
          }, a.Color.prototype.setRed = function (e) {
            this._array[0] = e / this.maxes[o.RGB][0], this._calculateLevels();
          }, a.Color.prototype.setGreen = function (e) {
            this._array[1] = e / this.maxes[o.RGB][1], this._calculateLevels();
          }, a.Color.prototype.setBlue = function (e) {
            this._array[2] = e / this.maxes[o.RGB][2], this._calculateLevels();
          }, a.Color.prototype.setAlpha = function (e) {
            this._array[3] = e / this.maxes[this.mode][3], this._calculateLevels();
          }, a.Color.prototype._calculateLevels = function () {
            for (var e = this._array, t = this.levels = new Array(e.length), n = e.length - 1; n >= 0; --n) t[n] = Math.round(255 * e[n]);
          }, a.Color.prototype._getAlpha = function () {
            return this._array[3] * this.maxes[this.mode][3];
          }, a.Color.prototype._storeModeAndMaxes = function (e, t) {
            this.mode = e, this.maxes = t;
          }, a.Color.prototype._getMode = function () {
            return this.mode;
          }, a.Color.prototype._getMaxes = function () {
            return this.maxes;
          }, a.Color.prototype._getBlue = function () {
            return this._array[2] * this.maxes[o.RGB][2];
          }, a.Color.prototype._getBrightness = function () {
            return this.hsba || (this.hsba = i._rgbaToHSBA(this._array)), this.hsba[2] * this.maxes[o.HSB][2];
          }, a.Color.prototype._getGreen = function () {
            return this._array[1] * this.maxes[o.RGB][1];
          }, a.Color.prototype._getHue = function () {
            return this.mode === o.HSB ? (this.hsba || (this.hsba = i._rgbaToHSBA(this._array)), this.hsba[0] * this.maxes[o.HSB][0]) : (this.hsla || (this.hsla = i._rgbaToHSLA(this._array)), this.hsla[0] * this.maxes[o.HSL][0]);
          }, a.Color.prototype._getLightness = function () {
            return this.hsla || (this.hsla = i._rgbaToHSLA(this._array)), this.hsla[2] * this.maxes[o.HSL][2];
          }, a.Color.prototype._getRed = function () {
            return this._array[0] * this.maxes[o.RGB][0];
          }, a.Color.prototype._getSaturation = function () {
            return this.mode === o.HSB ? (this.hsba || (this.hsba = i._rgbaToHSBA(this._array)), this.hsba[1] * this.maxes[o.HSB][1]) : (this.hsla || (this.hsla = i._rgbaToHSLA(this._array)), this.hsla[1] * this.maxes[o.HSL][1]);
          };
          var r = {
            aliceblue: "#f0f8ff",
            antiquewhite: "#faebd7",
            aqua: "#00ffff",
            aquamarine: "#7fffd4",
            azure: "#f0ffff",
            beige: "#f5f5dc",
            bisque: "#ffe4c4",
            black: "#000000",
            blanchedalmond: "#ffebcd",
            blue: "#0000ff",
            blueviolet: "#8a2be2",
            brown: "#a52a2a",
            burlywood: "#deb887",
            cadetblue: "#5f9ea0",
            chartreuse: "#7fff00",
            chocolate: "#d2691e",
            coral: "#ff7f50",
            cornflowerblue: "#6495ed",
            cornsilk: "#fff8dc",
            crimson: "#dc143c",
            cyan: "#00ffff",
            darkblue: "#00008b",
            darkcyan: "#008b8b",
            darkgoldenrod: "#b8860b",
            darkgray: "#a9a9a9",
            darkgreen: "#006400",
            darkgrey: "#a9a9a9",
            darkkhaki: "#bdb76b",
            darkmagenta: "#8b008b",
            darkolivegreen: "#556b2f",
            darkorange: "#ff8c00",
            darkorchid: "#9932cc",
            darkred: "#8b0000",
            darksalmon: "#e9967a",
            darkseagreen: "#8fbc8f",
            darkslateblue: "#483d8b",
            darkslategray: "#2f4f4f",
            darkslategrey: "#2f4f4f",
            darkturquoise: "#00ced1",
            darkviolet: "#9400d3",
            deeppink: "#ff1493",
            deepskyblue: "#00bfff",
            dimgray: "#696969",
            dimgrey: "#696969",
            dodgerblue: "#1e90ff",
            firebrick: "#b22222",
            floralwhite: "#fffaf0",
            forestgreen: "#228b22",
            fuchsia: "#ff00ff",
            gainsboro: "#dcdcdc",
            ghostwhite: "#f8f8ff",
            gold: "#ffd700",
            goldenrod: "#daa520",
            gray: "#808080",
            green: "#008000",
            greenyellow: "#adff2f",
            grey: "#808080",
            honeydew: "#f0fff0",
            hotpink: "#ff69b4",
            indianred: "#cd5c5c",
            indigo: "#4b0082",
            ivory: "#fffff0",
            khaki: "#f0e68c",
            lavender: "#e6e6fa",
            lavenderblush: "#fff0f5",
            lawngreen: "#7cfc00",
            lemonchiffon: "#fffacd",
            lightblue: "#add8e6",
            lightcoral: "#f08080",
            lightcyan: "#e0ffff",
            lightgoldenrodyellow: "#fafad2",
            lightgray: "#d3d3d3",
            lightgreen: "#90ee90",
            lightgrey: "#d3d3d3",
            lightpink: "#ffb6c1",
            lightsalmon: "#ffa07a",
            lightseagreen: "#20b2aa",
            lightskyblue: "#87cefa",
            lightslategray: "#778899",
            lightslategrey: "#778899",
            lightsteelblue: "#b0c4de",
            lightyellow: "#ffffe0",
            lime: "#00ff00",
            limegreen: "#32cd32",
            linen: "#faf0e6",
            magenta: "#ff00ff",
            maroon: "#800000",
            mediumaquamarine: "#66cdaa",
            mediumblue: "#0000cd",
            mediumorchid: "#ba55d3",
            mediumpurple: "#9370db",
            mediumseagreen: "#3cb371",
            mediumslateblue: "#7b68ee",
            mediumspringgreen: "#00fa9a",
            mediumturquoise: "#48d1cc",
            mediumvioletred: "#c71585",
            midnightblue: "#191970",
            mintcream: "#f5fffa",
            mistyrose: "#ffe4e1",
            moccasin: "#ffe4b5",
            navajowhite: "#ffdead",
            navy: "#000080",
            oldlace: "#fdf5e6",
            olive: "#808000",
            olivedrab: "#6b8e23",
            orange: "#ffa500",
            orangered: "#ff4500",
            orchid: "#da70d6",
            palegoldenrod: "#eee8aa",
            palegreen: "#98fb98",
            paleturquoise: "#afeeee",
            palevioletred: "#db7093",
            papayawhip: "#ffefd5",
            peachpuff: "#ffdab9",
            peru: "#cd853f",
            pink: "#ffc0cb",
            plum: "#dda0dd",
            powderblue: "#b0e0e6",
            purple: "#800080",
            red: "#ff0000",
            rosybrown: "#bc8f8f",
            royalblue: "#4169e1",
            saddlebrown: "#8b4513",
            salmon: "#fa8072",
            sandybrown: "#f4a460",
            seagreen: "#2e8b57",
            seashell: "#fff5ee",
            sienna: "#a0522d",
            silver: "#c0c0c0",
            skyblue: "#87ceeb",
            slateblue: "#6a5acd",
            slategray: "#708090",
            slategrey: "#708090",
            snow: "#fffafa",
            springgreen: "#00ff7f",
            steelblue: "#4682b4",
            tan: "#d2b48c",
            teal: "#008080",
            thistle: "#d8bfd8",
            tomato: "#ff6347",
            turquoise: "#40e0d0",
            violet: "#ee82ee",
            wheat: "#f5deb3",
            white: "#ffffff",
            whitesmoke: "#f5f5f5",
            yellow: "#ffff00",
            yellowgreen: "#9acd32"
          },
              s = /\s*/,
              l = /(\d{1,3})/,
              p = /((?:\d+(?:\.\d+)?)|(?:\.\d+))/,
              d = new RegExp(p.source + "%"),
              c = {
            HEX3: /^#([a-f0-9])([a-f0-9])([a-f0-9])$/i,
            HEX4: /^#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])$/i,
            HEX6: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
            HEX8: /^#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})$/i,
            RGB: new RegExp(["^rgb\\(", l.source, ",", l.source, ",", l.source, "\\)$"].join(s.source), "i"),
            RGB_PERCENT: new RegExp(["^rgb\\(", d.source, ",", d.source, ",", d.source, "\\)$"].join(s.source), "i"),
            RGBA: new RegExp(["^rgba\\(", l.source, ",", l.source, ",", l.source, ",", p.source, "\\)$"].join(s.source), "i"),
            RGBA_PERCENT: new RegExp(["^rgba\\(", d.source, ",", d.source, ",", d.source, ",", p.source, "\\)$"].join(s.source), "i"),
            HSL: new RegExp(["^hsl\\(", l.source, ",", d.source, ",", d.source, "\\)$"].join(s.source), "i"),
            HSLA: new RegExp(["^hsla\\(", l.source, ",", d.source, ",", d.source, ",", p.source, "\\)$"].join(s.source), "i"),
            HSB: new RegExp(["^hsb\\(", l.source, ",", d.source, ",", d.source, "\\)$"].join(s.source), "i"),
            HSBA: new RegExp(["^hsba\\(", l.source, ",", d.source, ",", d.source, ",", p.source, "\\)$"].join(s.source), "i")
          };
          a.Color._parseInputs = function (e, t, n, s) {
            var l,
                p = arguments.length,
                d = this.mode,
                u = this.maxes[d],
                m = [];

            if (p >= 3) {
              for (m[0] = e / u[0], m[1] = t / u[1], m[2] = n / u[2], m[3] = "number" == typeof s ? s / u[3] : 1, l = m.length - 1; l >= 0; --l) {
                var h = m[l];
                h < 0 ? m[l] = 0 : h > 1 && (m[l] = 1);
              }

              return d === o.HSL ? i._hslaToRGBA(m) : d === o.HSB ? i._hsbaToRGBA(m) : m;
            }

            if (1 === p && "string" == typeof e) {
              var f = e.trim().toLowerCase();
              if (r[f]) return a.Color._parseInputs.call(this, r[f]);
              if (c.HEX3.test(f)) return (m = c.HEX3.exec(f).slice(1).map(function (e) {
                return parseInt(e + e, 16) / 255;
              }))[3] = 1, m;
              if (c.HEX6.test(f)) return (m = c.HEX6.exec(f).slice(1).map(function (e) {
                return parseInt(e, 16) / 255;
              }))[3] = 1, m;
              if (c.HEX4.test(f)) return m = c.HEX4.exec(f).slice(1).map(function (e) {
                return parseInt(e + e, 16) / 255;
              });
              if (c.HEX8.test(f)) return m = c.HEX8.exec(f).slice(1).map(function (e) {
                return parseInt(e, 16) / 255;
              });
              if (c.RGB.test(f)) return (m = c.RGB.exec(f).slice(1).map(function (e) {
                return e / 255;
              }))[3] = 1, m;
              if (c.RGB_PERCENT.test(f)) return (m = c.RGB_PERCENT.exec(f).slice(1).map(function (e) {
                return parseFloat(e) / 100;
              }))[3] = 1, m;
              if (c.RGBA.test(f)) return m = c.RGBA.exec(f).slice(1).map(function (e, t) {
                return 3 === t ? parseFloat(e) : e / 255;
              });
              if (c.RGBA_PERCENT.test(f)) return m = c.RGBA_PERCENT.exec(f).slice(1).map(function (e, t) {
                return 3 === t ? parseFloat(e) : parseFloat(e) / 100;
              });
              if (c.HSL.test(f) ? (m = c.HSL.exec(f).slice(1).map(function (e, t) {
                return 0 === t ? parseInt(e, 10) / 360 : parseInt(e, 10) / 100;
              }))[3] = 1 : c.HSLA.test(f) && (m = c.HSLA.exec(f).slice(1).map(function (e, t) {
                return 0 === t ? parseInt(e, 10) / 360 : 3 === t ? parseFloat(e) : parseInt(e, 10) / 100;
              })), (m = m.map(function (e) {
                return Math.max(Math.min(e, 1), 0);
              })).length) return i._hslaToRGBA(m);

              if (c.HSB.test(f) ? (m = c.HSB.exec(f).slice(1).map(function (e, t) {
                return 0 === t ? parseInt(e, 10) / 360 : parseInt(e, 10) / 100;
              }))[3] = 1 : c.HSBA.test(f) && (m = c.HSBA.exec(f).slice(1).map(function (e, t) {
                return 0 === t ? parseInt(e, 10) / 360 : 3 === t ? parseFloat(e) : parseInt(e, 10) / 100;
              })), m.length) {
                for (l = m.length - 1; l >= 0; --l) m[l] = Math.max(Math.min(m[l], 1), 0);

                return i._hsbaToRGBA(m);
              }

              m = [1, 1, 1, 1];
            } else {
              if (1 !== p && 2 !== p || "number" != typeof e) throw new Error(arguments + "is not a valid color representation.");
              m[0] = e / u[2], m[1] = e / u[2], m[2] = e / u[2], m[3] = "number" == typeof t ? t / u[3] : 1, m = m.map(function (e) {
                return Math.max(Math.min(e, 1), 0);
              });
            }

            return m;
          }, t.exports = a.Color;
        }, {
          "../core/constants": 18,
          "../core/main": 24,
          "./color_conversion": 14
        }],
        17: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          e("./p5.Color"), a.prototype.background = function () {
            return arguments[0] instanceof a.Image ? this.image(arguments[0], 0, 0, this.width, this.height) : this._renderer.background.apply(this._renderer, arguments), this;
          }, a.prototype.clear = function () {
            return this._renderer.clear(), this;
          }, a.prototype.colorMode = function (e, t, n, i, r) {
            if (a._validateParameters("colorMode", arguments), e === o.RGB || e === o.HSB || e === o.HSL) {
              this._colorMode = e;
              var s = this._colorMaxes[e];
              2 === arguments.length ? (s[0] = t, s[1] = t, s[2] = t, s[3] = t) : 4 === arguments.length ? (s[0] = t, s[1] = n, s[2] = i) : 5 === arguments.length && (s[0] = t, s[1] = n, s[2] = i, s[3] = r);
            }

            return this;
          }, a.prototype.fill = function () {
            return this._renderer._setProperty("_fillSet", !0), this._renderer._setProperty("_doFill", !0), this._renderer.fill.apply(this._renderer, arguments), this;
          }, a.prototype.noFill = function () {
            return this._renderer._setProperty("_doFill", !1), this;
          }, a.prototype.noStroke = function () {
            return this._renderer._setProperty("_doStroke", !1), this;
          }, a.prototype.stroke = function () {
            return this._renderer._setProperty("_strokeSet", !0), this._renderer._setProperty("_doStroke", !0), this._renderer.stroke.apply(this._renderer, arguments), this;
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/main": 24,
          "./p5.Color": 16
        }],
        18: [function (e, t, n) {
          "use strict";

          var a = Math.PI;
          t.exports = {
            P2D: "p2d",
            WEBGL: "webgl",
            ARROW: "default",
            CROSS: "crosshair",
            HAND: "pointer",
            MOVE: "move",
            TEXT: "text",
            WAIT: "wait",
            HALF_PI: a / 2,
            PI: a,
            QUARTER_PI: a / 4,
            TAU: 2 * a,
            TWO_PI: 2 * a,
            DEGREES: "degrees",
            RADIANS: "radians",
            DEG_TO_RAD: a / 180,
            RAD_TO_DEG: 180 / a,
            CORNER: "corner",
            CORNERS: "corners",
            RADIUS: "radius",
            RIGHT: "right",
            LEFT: "left",
            CENTER: "center",
            TOP: "top",
            BOTTOM: "bottom",
            BASELINE: "alphabetic",
            POINTS: 0,
            LINES: 1,
            LINE_STRIP: 3,
            LINE_LOOP: 2,
            TRIANGLES: 4,
            TRIANGLE_FAN: 6,
            TRIANGLE_STRIP: 5,
            QUADS: "quads",
            QUAD_STRIP: "quad_strip",
            CLOSE: "close",
            OPEN: "open",
            CHORD: "chord",
            PIE: "pie",
            PROJECT: "square",
            SQUARE: "butt",
            ROUND: "round",
            BEVEL: "bevel",
            MITER: "miter",
            RGB: "rgb",
            HSB: "hsb",
            HSL: "hsl",
            AUTO: "auto",
            ALT: 18,
            BACKSPACE: 8,
            CONTROL: 17,
            DELETE: 46,
            DOWN_ARROW: 40,
            ENTER: 13,
            ESCAPE: 27,
            LEFT_ARROW: 37,
            OPTION: 18,
            RETURN: 13,
            RIGHT_ARROW: 39,
            SHIFT: 16,
            TAB: 9,
            UP_ARROW: 38,
            BLEND: "source-over",
            ADD: "lighter",
            DARKEST: "darken",
            LIGHTEST: "lighten",
            DIFFERENCE: "difference",
            EXCLUSION: "exclusion",
            MULTIPLY: "multiply",
            SCREEN: "screen",
            REPLACE: "copy",
            OVERLAY: "overlay",
            HARD_LIGHT: "hard-light",
            SOFT_LIGHT: "soft-light",
            DODGE: "color-dodge",
            BURN: "color-burn",
            THRESHOLD: "threshold",
            GRAY: "gray",
            OPAQUE: "opaque",
            INVERT: "invert",
            POSTERIZE: "posterize",
            DILATE: "dilate",
            ERODE: "erode",
            BLUR: "blur",
            NORMAL: "normal",
            ITALIC: "italic",
            BOLD: "bold",
            BOLDITALIC: "bold italic",
            _DEFAULT_TEXT_FILL: "#000000",
            _DEFAULT_LEADMULT: 1.25,
            _CTX_MIDDLE: "middle",
            LINEAR: "linear",
            QUADRATIC: "quadratic",
            BEZIER: "bezier",
            CURVE: "curve",
            STROKE: "stroke",
            FILL: "fill",
            TEXTURE: "texture",
            IMMEDIATE: "immediate",
            IMAGE: "image",
            NEAREST: "nearest",
            REPEAT: "repeat",
            CLAMP: "clamp",
            MIRROR: "mirror",
            LANDSCAPE: "landscape",
            PORTRAIT: "portrait",
            _DEFAULT_STROKE: "#000000",
            _DEFAULT_FILL: "#FFFFFF",
            GRID: "grid",
            AXES: "axes"
          };
        }, {}],
        19: [function (e, t, n) {
          "use strict";

          var a = e("./main"),
              o = e("./constants"),
              i = [o.ARROW, o.CROSS, o.HAND, o.MOVE, o.TEXT, o.WAIT];
          a.prototype._frameRate = 0, a.prototype._lastFrameTime = window.performance.now(), a.prototype._targetFrameRate = 60;
          var r = window.print;

          function s() {
            return window.innerWidth || document.documentElement && document.documentElement.clientWidth || document.body && document.body.clientWidth || 0;
          }

          function l() {
            return window.innerHeight || document.documentElement && document.documentElement.clientHeight || document.body && document.body.clientHeight || 0;
          }

          function p(e) {
            if (!(document.fullscreenEnabled || document.webkitFullscreenEnabled || document.mozFullScreenEnabled || document.msFullscreenEnabled)) throw new Error("Fullscreen not enabled in this browser.");
            e.requestFullscreen ? e.requestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullscreen ? e.webkitRequestFullscreen() : e.msRequestFullscreen && e.msRequestFullscreen();
          }

          function d() {
            document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.webkitExitFullscreen ? document.webkitExitFullscreen() : document.msExitFullscreen && document.msExitFullscreen();
          }

          a.prototype.print = function () {
            arguments.length ? console.log.apply(console, arguments) : r();
          }, a.prototype.frameCount = 0, a.prototype.focused = document.hasFocus(), a.prototype.cursor = function (e, t, n) {
            var a = "auto",
                o = this._curElement.elt;
            if (i.indexOf(e) > -1) a = e;else if ("string" == typeof e) {
              var r = "";
              t && n && "number" == typeof t && "number" == typeof n && (r = t + " " + n), a = "http://" === e.substring(0, 7) || "https://" === e.substring(0, 8) ? "url(" + e + ") " + r + ", auto" : /\.(cur|jpg|jpeg|gif|png|CUR|JPG|JPEG|GIF|PNG)$/.test(e) ? "url(" + e + ") " + r + ", auto" : e;
            }
            o.style.cursor = a;
          }, a.prototype.frameRate = function (e) {
            return a._validateParameters("frameRate", arguments), "number" != typeof e || e < 0 ? this._frameRate : (this._setProperty("_targetFrameRate", e), this);
          }, a.prototype.getFrameRate = function () {
            return this.frameRate();
          }, a.prototype.setFrameRate = function (e) {
            return this.frameRate(e);
          }, a.prototype.noCursor = function () {
            this._curElement.elt.style.cursor = "none";
          }, a.prototype.displayWidth = screen.width, a.prototype.displayHeight = screen.height, a.prototype.windowWidth = s(), a.prototype.windowHeight = l(), a.prototype._onresize = function (e) {
            this._setProperty("windowWidth", s()), this._setProperty("windowHeight", l());
            var t,
                n = this._isGlobal ? window : this;
            "function" == typeof n.windowResized && (void 0 === (t = n.windowResized(e)) || t || e.preventDefault());
          }, a.prototype.width = 0, a.prototype.height = 0, a.prototype.fullscreen = function (e) {
            if (a._validateParameters("fullscreen", arguments), void 0 === e) return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
            e ? p(document.documentElement) : d();
          }, a.prototype.pixelDensity = function (e) {
            var t;
            return a._validateParameters("pixelDensity", arguments), "number" == typeof e ? (e !== this._pixelDensity && (this._pixelDensity = e, this._pixelsDirty = !0), t = this, this.resizeCanvas(this.width, this.height, !0)) : t = this._pixelDensity, t;
          }, a.prototype.displayDensity = function () {
            return window.devicePixelRatio;
          }, a.prototype.getURL = function () {
            return location.href;
          }, a.prototype.getURLPath = function () {
            return location.pathname.split("/").filter(function (e) {
              return "" !== e;
            });
          }, a.prototype.getURLParams = function () {
            for (var e, t = /[?&]([^&=]+)(?:[&=])([^&=]+)/gim, n = {}; null != (e = t.exec(location.search));) e.index === t.lastIndex && t.lastIndex++, n[e[1]] = e[2];

            return n;
          }, t.exports = a;
        }, {
          "./constants": 18,
          "./main": 24
        }],
        20: [function (e, t, n) {
          "use strict";

          var a,
              o = e("./main"),
              i = e("./constants"),
              r = ["#2D7BB6", "#EE9900", "#4DB200", "#C83C00"];
          if ("undefined" != typeof IS_MINIFIED) o._validateParameters = o._friendlyFileLoadError = o._friendlyError = function () {};else {
            for (var s = !1, l = e("../../docs/reference/data.json"), p = JSON.parse(JSON.stringify(l)), d = {}, c = d.toString, u = ["Boolean", "Number", "String", "Function", "Array", "Date", "RegExp", "Object", "Error"], m = 0; m < u.length; m++) d["[object " + u[m] + "]"] = u[m].toLowerCase();

            var h = function (e) {
              return null == e ? e + "" : "object" == typeof e || "function" == typeof e ? d[c.call(e)] || "object" : typeof e;
            },
                f = function (e, t, n) {
              s && (console.log("    _ \n /\\| |/\\ \n \\ ` ' /  \n / , . \\  \n \\/|_|\\/ \n\n> p5.js says: Welcome! This is your friendly debugger. To turn me off switch to using “p5.min.js”."), s = !1), "undefined" === h(n) ? n = "#B40033" : "number" === h(n) && (n = r[n]), "loadX" === t ? console.log("> p5.js says: " + e) : "load" === t.substring(0, 4) ? console.log("> p5.js says: " + e + "[https://github.com/processing/p5.js/wiki/Local-server]") : console.log("> p5.js says: " + e + " [http://p5js.org/reference/#p5/" + t + "]");
            },
                g = {
              0: {
                fileType: "image",
                method: "loadImage",
                message: " hosting the image online,"
              },
              1: {
                fileType: "XML file",
                method: "loadXML"
              },
              2: {
                fileType: "table file",
                method: "loadTable"
              },
              3: {
                fileType: "text file",
                method: "loadStrings"
              },
              4: {
                fileType: "font",
                method: "loadFont",
                message: " hosting the font online,"
              },
              5: {
                fileType: "json",
                method: "loadJSON"
              },
              6: {
                fileType: "file",
                method: "loadBytes"
              },
              7: {
                method: "loadX",
                message: "In case your large file isn't fetched successfully,we recommend splitting the file into smaller segments and fetching those."
              }
            };

            o._friendlyFileLoadError = function (e, t) {
              var n,
                  a = g[e];
              n = 7 === e ? a.message : "It looks like there was a problem loading your " + a.fileType + ". Try checking if the file path [" + t + "] is correct," + (a.message || "") + " or running a local server.", f(n, a.method, 3);
            }, o._friendlyError = function (e, t) {
              f(e, t);
            };

            var y = {},
                v = ["null", "number", "string", "boolean", "constant", "function", "any", "integer"],
                b = function (e) {
              switch (typeof e) {
                case "number":
                  return !0;

                case "string":
                  return !isNaN(e);

                default:
                  return !1;
              }
            },
                w = function (e, t) {
              var n = e instanceof Array,
                  a = !0;
              if (t.array && n) for (var o = 0; o < e.length; o++) {
                var i = w(e[o], t.array);
                if (i) return i / 2;
              } else if (t.prototype) a = e instanceof t.prototype;else if (t.builtin) switch (t.builtin) {
                case "number":
                  a = b(e);
                  break;

                case "integer":
                  a = b(e) && Number(e) === Math.floor(e);
                  break;

                case "boolean":
                case "any":
                  a = !0;
                  break;

                case "array":
                  a = n;
                  break;

                case "string":
                  a = "string" == typeof e;
                  break;

                case "constant":
                  a = t.values.hasOwnProperty(e);
                  break;

                case "function":
                  a = e instanceof Function;
                  break;

                case "null":
                  a = null === e;
              } else a = typeof e === t.t;
              return a ? 0 : 1;
            },
                x = function (e, t) {
              for (var n = 9999, a = 0; n > 0 && a < t.length; a++) {
                var o = w(e, t[a]);
                n > o && (n = o);
              }

              return n;
            },
                S = function (e, t, n, a) {
              var o = 0,
                  i = n.formats,
                  r = n.minParams;
              t < r ? o = 2 * (r - t) : t > i.length && (o = 2 * (t - i.length));

              for (var s = 0; o <= a && s < i.length; s++) {
                var l = e[s],
                    p = i[s];
                null == l ? (!p.optional || s < r || s < t) && (o += 1) : o += x(l, p.types);
              }

              return o;
            };

            o.ValidationError = ((a = function (e, t) {
              this.message = e, this.func = t, "captureStackTrace" in Error ? Error.captureStackTrace(this, a) : this.stack = new Error().stack;
            }).prototype = Object.create(Error.prototype), a.prototype.name = "ValidationError", a.prototype.constructor = a, a), o._friendlyParamError = function (e, t) {
              var n;

              function a() {
                return e.format.types.map(function (e) {
                  return e.names ? e.names.join("|") : e.name;
                }).join("|");
              }

              switch (e.type) {
                case "EMPTY_VAR":
                  n = t + "() was expecting " + a() + " for parameter #" + e.position + " (zero-based index), received an empty variable instead. If not intentional, this is often a problem with scope: [https://p5js.org/examples/data-variable-scope.html]";
                  break;

                case "WRONG_TYPE":
                  var i = e.arg,
                      r = i instanceof Array ? "array" : null === i ? "null" : i.name || typeof i;
                  n = t + "() was expecting " + a() + " for parameter #" + e.position + " (zero-based index), received " + r + " instead";
                  break;

                case "TOO_FEW_ARGUMENTS":
                  n = t + "() was expecting at least " + e.minParams + " arguments, but received only " + e.argCount;
                  break;

                case "TOO_MANY_ARGUMENTS":
                  n = t + "() was expecting no more than " + e.maxParams + " arguments, but received " + e.argCount;
              }

              if (n) {
                if (o._throwValidationErrors) throw new o.ValidationError(n);

                try {
                  var s = /Function\.validateParameters.*[\r\n].*[\r\n].*\(([^)]*)/.exec(new Error().stack)[1];
                  s && (n += " at " + s);
                } catch (e) {}

                f(n + ".", t, 3);
              }
            }, o._validateParameters = function (e, t) {
              if (!o.disableFriendlyErrors) {
                for (var n = (y[e] || (y[e] = function (e) {
                  for (var t, n = e.lastIndexOf("."), a = e.substr(n + 1), r = e.substr(0, n) || "p5", s = p.classitems, l = 0; l < s.length; l++) {
                    var d = s[l];

                    if (d.name === a && d.class === r) {
                      t = d;
                      break;
                    }
                  }

                  var c = [];
                  if (t.hasOwnProperty("overloads")) for (var u = 0; u < t.overloads.length; u++) c.push({
                    formats: t.overloads[u].params
                  });else c.push({
                    formats: t.params || []
                  });
                  var m = {},
                      h = 0;
                  return c.forEach(function (t) {
                    var n = t.formats;
                    h < n.length && (h = n.length);

                    for (var a = n.length; a > 0 && n[a - 1].optional;) a--;

                    t.minParams = a, n.forEach(function (t) {
                      t.types = t.type.split("|").map(function n(a) {
                        if ("[]" === a.substr(a.length - 2, 2)) return {
                          name: a,
                          array: n(a.substr(0, a.length - 2))
                        };
                        var r = a.toLowerCase();

                        if ("constant" === r) {
                          var s;
                          if (m.hasOwnProperty(t.name)) s = m[t.name];else {
                            var l = {},
                                p = [];
                            s = m[t.name] = {
                              values: l,
                              names: p
                            };
                            var d = /either\s+(?:[A-Z0-9_]+\s*,?\s*(?:or)?\s*)+/g.exec(t.description);
                            if ("endShape" === e && "mode" === t.name) l[i.CLOSE] = !0, p.push("CLOSE");else for (var c, u = d[0], h = /[A-Z0-9_]+/g; null !== (c = h.exec(u));) {
                              var f = c[0];
                              i.hasOwnProperty(f) && (l[i[f]] = !0, p.push(f));
                            }
                          }
                          return {
                            name: a,
                            builtin: r,
                            names: s.names,
                            values: s.values
                          };
                        }

                        if ("function" === r.substr(0, "function".length) && (r = "function"), v.indexOf(r) >= 0) return {
                          name: a,
                          builtin: r
                        };
                        var g = window,
                            y = a.split(".");
                        return "p5" === y[0] && (g = o, y.shift()), y.forEach(function (e) {
                          g = g && g[e];
                        }), g ? {
                          name: a,
                          prototype: g
                        } : {
                          name: a,
                          type: r
                        };
                      });
                    });
                  }), {
                    overloads: c,
                    maxParams: h
                  };
                }(e))).overloads, a = t.length; a > 0 && null == t[a - 1];) a--;

                for (var r, s = 99999, l = 0; l < n.length; l++) {
                  var d = S(t, a, n[l], s);
                  if (0 === d) return;
                  s > d && (s = d, r = l);
                }

                if (s > 0) for (var c = function (e, t, n) {
                  var a = n.formats,
                      o = n.minParams;
                  if (t < o) return [{
                    type: "TOO_FEW_ARGUMENTS",
                    argCount: t,
                    minParams: o
                  }];
                  if (t > a.length) return [{
                    type: "TOO_MANY_ARGUMENTS",
                    argCount: t,
                    maxParams: a.length
                  }];

                  for (var i = [], r = 0; r < a.length; r++) {
                    var s = e[r],
                        l = a[r];
                    null == s ? (!l.optional || r < o || r < t) && i.push({
                      type: "EMPTY_VAR",
                      position: r,
                      format: l
                    }) : x(s, l.types) > 0 && i.push({
                      type: "WRONG_TYPE",
                      position: r,
                      format: l,
                      arg: s
                    });
                  }

                  return i;
                }(t, a, n[r]), u = 0; u < c.length; u++) o._friendlyParamError(c[u], e);
              }
            }, o.prototype._validateParameters = o.validateParameters;
          }

          var k = null,
              T = function (t, n) {
            var a, i;
            n || (n = console.log.bind(console)), k || (a = {}, (k = [].concat((i = function (e) {
              return Object.getOwnPropertyNames(e).filter(function (e) {
                return !("_" === e[0] || e in a || (a[e] = !0, 0));
              }).map(function (t) {
                var n;
                return n = "function" == typeof e[t] ? "function" : t === t.toUpperCase() ? "constant" : "variable", {
                  name: t,
                  type: n
                };
              });
            })(o.prototype), i(e("./constants")))).sort(function (e, t) {
              return t.name.length - e.name.length;
            })), k.some(function (e) {
              if (t.message && null !== t.message.match("\\W?" + e.name + "\\W")) return n("Did you just try to use p5.js's " + e.name + ("function" === e.type ? "() " : " ") + e.type + "? If so, you may want to move it into your sketch's setup() function.\n\nFor more details, see: https://github.com/processing/p5.js/wiki/p5.js-overview#why-cant-i-assign-variables-using-p5-functions-and-variables-before-setup"), !0;
            });
          };

          o.prototype._helpForMisusedAtTopLevelCode = T, "complete" !== document.readyState && (window.addEventListener("error", T, !1), window.addEventListener("load", function () {
            window.removeEventListener("error", T, !1);
          })), t.exports = o;
        }, {
          "../../docs/reference/data.json": 1,
          "./constants": 18,
          "./main": 24
        }],
        21: [function (e, t, n) {
          "use strict";

          var a = e("./constants");
          t.exports = {
            modeAdjust: function (e, t, n, o, i) {
              return i === a.CORNER ? {
                x: e,
                y: t,
                w: n,
                h: o
              } : i === a.CORNERS ? {
                x: e,
                y: t,
                w: n - e,
                h: o - t
              } : i === a.RADIUS ? {
                x: e - n,
                y: t - o,
                w: 2 * n,
                h: 2 * o
              } : i === a.CENTER ? {
                x: e - .5 * n,
                y: t - .5 * o,
                w: n,
                h: o
              } : void 0;
            }
          };
        }, {
          "./constants": 18
        }],
        22: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = function () {
            window.mocha || (window.setup && "function" == typeof window.setup || window.draw && "function" == typeof window.draw) && !a.instance && new a();
          };

          "complete" === document.readyState ? o() : window.addEventListener("load", o, !1);
        }, {
          "../core/main": 24
        }],
        23: [function (e, t, n) {
          "use strict";

          var a = e("./main");
          a.prototype.pushStyle = function () {
            throw new Error("pushStyle() not used, see push()");
          }, a.prototype.popStyle = function () {
            throw new Error("popStyle() not used, see pop()");
          }, t.exports = a;
        }, {
          "./main": 24
        }],
        24: [function (e, t, n) {
          "use strict";

          e("./shim");

          var a = e("./constants"),
              o = function (e, t, n) {
            "boolean" == typeof t && void 0 === n && (n = t, t = void 0), this._setupDone = !1, this._pixelDensity = Math.ceil(window.devicePixelRatio) || 1, this._userNode = t, this._curElement = null, this._elements = [], this._requestAnimId = 0, this._preloadCount = 0, this._isGlobal = !1, this._loop = !0, this._initializeInstanceVariables(), this._defaultCanvasSize = {
              width: 100,
              height: 100
            }, this._events = {
              mousemove: null,
              mousedown: null,
              mouseup: null,
              dragend: null,
              dragover: null,
              click: null,
              dblclick: null,
              mouseover: null,
              mouseout: null,
              keydown: null,
              keyup: null,
              keypress: null,
              touchstart: null,
              touchmove: null,
              touchend: null,
              resize: null,
              blur: null
            }, this._events.wheel = null, this._loadingScreenId = "p5_loading", this._registeredMethods = {};

            for (var a = Object.getOwnPropertyNames(o.prototype._registeredMethods), i = 0; i < a.length; i++) {
              var r = a[i];
              this._registeredMethods[r] = o.prototype._registeredMethods[r].slice();
            }

            window.DeviceOrientationEvent && (this._events.deviceorientation = null), window.DeviceMotionEvent && !window._isNodeWebkit && (this._events.devicemotion = null), this._start = function () {
              this._userNode && "string" == typeof this._userNode && (this._userNode = document.getElementById(this._userNode));
              var e = (this._isGlobal ? window : this).preload;

              if (e) {
                var t = document.getElementById(this._loadingScreenId);
                t || ((t = document.createElement("div")).innerHTML = "Loading...", t.style.position = "absolute", t.id = this._loadingScreenId, (this._userNode || document.body).appendChild(t));
                var n = this._preloadMethods;

                for (var a in n) {
                  n[a] = n[a] || o;
                  var i = n[a];
                  i !== o.prototype && i !== o || (this._isGlobal && (window[a] = this._wrapPreload(this, a)), i = this), this._registeredPreloadMethods[a] = i[a], i[a] = this._wrapPreload(i, a);
                }

                e(), this._runIfPreloadsAreDone();
              } else this._setup(), this._draw();
            }.bind(this), this._runIfPreloadsAreDone = function () {
              var e = this._isGlobal ? window : this;

              if (0 === e._preloadCount) {
                var t = document.getElementById(e._loadingScreenId);
                t && t.parentNode.removeChild(t), e._setup(), e._draw();
              }
            }, this._decrementPreload = function () {
              var e = this._isGlobal ? window : this;
              "function" == typeof e.preload && (e._setProperty("_preloadCount", e._preloadCount - 1), e._runIfPreloadsAreDone());
            }, this._wrapPreload = function (e, t) {
              return function () {
                return this._incrementPreload(), this._registeredPreloadMethods[t].apply(e, arguments);
              }.bind(this);
            }, this._incrementPreload = function () {
              var e = this._isGlobal ? window : this;

              e._setProperty("_preloadCount", e._preloadCount + 1);
            }, this._setup = function () {
              this.createCanvas(this._defaultCanvasSize.width, this._defaultCanvasSize.height, "p2d");
              var e = this._isGlobal ? window : this;
              if ("function" == typeof e.preload) for (var t in this._preloadMethods) e[t] = this._preloadMethods[t][t], e[t] && this && (e[t] = e[t].bind(this));
              "function" == typeof e.setup && e.setup();

              for (var n = document.getElementsByTagName("canvas"), a = 0; a < n.length; a++) {
                var o = n[a];
                "true" === o.dataset.hidden && (o.style.visibility = "", delete o.dataset.hidden);
              }

              this._setupDone = !0;
            }.bind(this), this._draw = function () {
              var e = window.performance.now(),
                  t = e - this._lastFrameTime,
                  n = 1e3 / this._targetFrameRate;
              (!this._loop || t >= n - 5) && (this.redraw(), this._frameRate = 1e3 / (e - this._lastFrameTime), this._lastFrameTime = e, void 0 !== this._updateMouseCoords && this._updateMouseCoords()), this._loop && (this._requestAnimId = window.requestAnimationFrame(this._draw));
            }.bind(this), this._setProperty = function (e, t) {
              this[e] = t, this._isGlobal && (window[e] = t);
            }.bind(this), this.remove = function () {
              var e = document.getElementById(this._loadingScreenId);

              if (e && (e.parentNode.removeChild(e), this._incrementPreload()), this._curElement) {
                for (var t in this._loop = !1, this._requestAnimId && window.cancelAnimationFrame(this._requestAnimId), this._events) window.removeEventListener(t, this._events[t]);

                for (var n = 0; n < this._elements.length; n++) {
                  var a = this._elements[n];

                  for (var i in a.elt.parentNode && a.elt.parentNode.removeChild(a.elt), a._events) a.elt.removeEventListener(i, a._events[i]);
                }

                var r = this;

                this._registeredMethods.remove.forEach(function (e) {
                  void 0 !== e && e.call(r);
                });
              }

              if (this._isGlobal) {
                for (var s in o.prototype) try {
                  delete window[s];
                } catch (e) {
                  window[s] = void 0;
                }

                for (var l in this) if (this.hasOwnProperty(l)) try {
                  delete window[l];
                } catch (e) {
                  window[l] = void 0;
                }

                o.instance = null;
              }
            }.bind(this), this._registeredMethods.init.forEach(function (e) {
              void 0 !== e && e.call(this);
            }, this);

            var s = this._createFriendlyGlobalFunctionBinder();

            if (e) e(this);else {
              for (var l in this._isGlobal = !0, o.instance = this, o.prototype) if ("function" == typeof o.prototype[l]) {
                var p = l.substring(2);
                this._events.hasOwnProperty(p) || (Math.hasOwnProperty(l) && Math[l] === o.prototype[l] ? s(l, o.prototype[l]) : s(l, o.prototype[l].bind(this)));
              } else s(l, o.prototype[l]);

              for (var d in this) this.hasOwnProperty(d) && s(d, this[d]);
            }

            for (var c in this._events) {
              var u = this["_on" + c];

              if (u) {
                var m = u.bind(this);
                window.addEventListener(c, m, {
                  passive: !1
                }), this._events[c] = m;
              }
            }

            var h = function () {
              this._setProperty("focused", !0);
            }.bind(this),
                f = function () {
              this._setProperty("focused", !1);
            }.bind(this);

            window.addEventListener("focus", h), window.addEventListener("blur", f), this.registerMethod("remove", function () {
              window.removeEventListener("focus", h), window.removeEventListener("blur", f);
            }), n ? this._start() : "complete" === document.readyState ? this._start() : window.addEventListener("load", this._start.bind(this), !1);
          };

          for (var i in o.prototype._initializeInstanceVariables = function () {
            this._styles = [], this._bezierDetail = 20, this._curveDetail = 20, this._colorMode = a.RGB, this._colorMaxes = {
              rgb: [255, 255, 255, 255],
              hsb: [360, 100, 100, 1],
              hsl: [360, 100, 100, 1]
            }, this._pixelsDirty = !0;
          }, o.instance = null, o.disableFriendlyErrors = !1, a) o.prototype[i] = a[i];

          o.prototype._preloadMethods = {
            loadJSON: o.prototype,
            loadImage: o.prototype,
            loadStrings: o.prototype,
            loadXML: o.prototype,
            loadBytes: o.prototype,
            loadTable: o.prototype,
            loadFont: o.prototype,
            loadModel: o.prototype,
            loadShader: o.prototype
          }, o.prototype._registeredMethods = {
            init: [],
            pre: [],
            post: [],
            remove: []
          }, o.prototype._registeredPreloadMethods = {}, o.prototype.registerPreloadMethod = function (e, t) {
            o.prototype._preloadMethods.hasOwnProperty(e) || (o.prototype._preloadMethods[e] = t);
          }, o.prototype.registerMethod = function (e, t) {
            var n = this || o.prototype;
            n._registeredMethods.hasOwnProperty(e) || (n._registeredMethods[e] = []), n._registeredMethods[e].push(t);
          }, o.prototype._createFriendlyGlobalFunctionBinder = function (e) {
            var t = (e = e || {}).globalObject || window,
                n = e.log || console.log.bind(console),
                a = {
              print: !0
            };
            return function (e, i) {
              if (o.disableFriendlyErrors || "undefined" != typeof IS_MINIFIED || "function" != typeof i || e in o.prototype._preloadMethods) t[e] = i;else try {
                if (e in t && !(e in a)) throw new Error('global "' + e + '" already exists');
                Object.defineProperty(t, e, {
                  configurable: !0,
                  enumerable: !0,
                  get: function () {
                    return i;
                  },
                  set: function (a) {
                    Object.defineProperty(t, e, {
                      configurable: !0,
                      enumerable: !0,
                      value: a,
                      writable: !0
                    }), n('You just changed the value of "' + e + "\", which was a p5 function. This could cause problems later if you're not careful.");
                  }
                });
              } catch (a) {
                n('p5 had problems creating the global function "' + e + '", possibly because your code is already using that name as a variable. You may want to rename your variable to something else.'), t[e] = i;
              }
            };
          }, t.exports = o;
        }, {
          "./constants": 18,
          "./shim": 34
        }],
        25: [function (e, t, n) {
          "use strict";

          var a = e("./main");
          a.Element = function (e, t) {
            this.elt = e, this._pInst = t, this._events = {}, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight;
          }, a.Element.prototype.parent = function (e) {
            return void 0 === e ? this.elt.parentNode : ("string" == typeof e ? ("#" === e[0] && (e = e.substring(1)), e = document.getElementById(e)) : e instanceof a.Element && (e = e.elt), e.appendChild(this.elt), this);
          }, a.Element.prototype.id = function (e) {
            return void 0 === e ? this.elt.id : (this.elt.id = e, this.width = this.elt.offsetWidth, this.height = this.elt.offsetHeight, this);
          }, a.Element.prototype.class = function (e) {
            return void 0 === e ? this.elt.className : (this.elt.className = e, this);
          }, a.Element.prototype.mousePressed = function (e) {
            return a.Element._adjustListener("mousedown", function (t) {
              return this._pInst._setProperty("mouseIsPressed", !0), this._pInst._setMouseButton(t), e.call(this);
            }, this), this;
          }, a.Element.prototype.doubleClicked = function (e) {
            return a.Element._adjustListener("dblclick", e, this), this;
          }, a.Element.prototype.mouseWheel = function (e) {
            return a.Element._adjustListener("wheel", e, this), this;
          }, a.Element.prototype.mouseReleased = function (e) {
            return a.Element._adjustListener("mouseup", e, this), this;
          }, a.Element.prototype.mouseClicked = function (e) {
            return a.Element._adjustListener("click", e, this), this;
          }, a.Element.prototype.mouseMoved = function (e) {
            return a.Element._adjustListener("mousemove", e, this), this;
          }, a.Element.prototype.mouseOver = function (e) {
            return a.Element._adjustListener("mouseover", e, this), this;
          }, a.Element.prototype.mouseOut = function (e) {
            return a.Element._adjustListener("mouseout", e, this), this;
          }, a.Element.prototype.touchStarted = function (e) {
            return a.Element._adjustListener("touchstart", e, this), this;
          }, a.Element.prototype.touchMoved = function (e) {
            return a.Element._adjustListener("touchmove", e, this), this;
          }, a.Element.prototype.touchEnded = function (e) {
            return a.Element._adjustListener("touchend", e, this), this;
          }, a.Element.prototype.dragOver = function (e) {
            return a.Element._adjustListener("dragover", e, this), this;
          }, a.Element.prototype.dragLeave = function (e) {
            return a.Element._adjustListener("dragleave", e, this), this;
          }, a.Element.prototype.drop = function (e, t) {
            if (window.File && window.FileReader && window.FileList && window.Blob) {
              if (!this._dragDisabled) {
                this._dragDisabled = !0;

                var n = function (e) {
                  e.preventDefault();
                };

                this.elt.addEventListener("dragover", n), this.elt.addEventListener("dragleave", n);
              }

              void 0 !== t && a.Element._attachListener("drop", t, this), a.Element._attachListener("drop", function (t) {
                t.preventDefault();

                for (var n = t.dataTransfer.files, o = 0; o < n.length; o++) {
                  var i = n[o];

                  a.File._load(i, e);
                }
              }, this);
            } else console.log("The File APIs are not fully supported in this browser.");

            return this;
          }, a.Element._adjustListener = function (e, t, n) {
            return !1 === t ? a.Element._detachListener(e, n) : a.Element._attachListener(e, t, n), this;
          }, a.Element._attachListener = function (e, t, n) {
            n._events[e] && a.Element._detachListener(e, n);
            var o = t.bind(n);
            n.elt.addEventListener(e, o, !1), n._events[e] = o;
          }, a.Element._detachListener = function (e, t) {
            var n = t._events[e];
            t.elt.removeEventListener(e, n, !1), t._events[e] = null;
          }, a.Element.prototype._setProperty = function (e, t) {
            this[e] = t;
          }, t.exports = a.Element;
        }, {
          "./main": 24
        }],
        26: [function (e, t, n) {
          "use strict";

          var a = e("./main"),
              o = e("./constants");
          a.Graphics = function (e, t, n, i) {
            var r = n || o.P2D;
            this.canvas = document.createElement("canvas");
            var s = i._userNode || document.body;

            for (var l in s.appendChild(this.canvas), a.Element.call(this, this.canvas, i, !1), a.prototype) this[l] || ("function" == typeof a.prototype[l] ? this[l] = a.prototype[l].bind(this) : this[l] = a.prototype[l]);

            return a.prototype._initializeInstanceVariables.apply(this), this.width = e, this.height = t, this._pixelDensity = i._pixelDensity, r === o.WEBGL ? this._renderer = new a.RendererGL(this.canvas, this, !1) : this._renderer = new a.Renderer2D(this.canvas, this, !1), i._elements.push(this), this._renderer.resize(e, t), this._renderer._applyDefaults(), this;
          }, a.Graphics.prototype = Object.create(a.Element.prototype), a.Graphics.prototype.remove = function () {
            this.elt.parentNode && this.elt.parentNode.removeChild(this.elt);

            var e = this._pInst._elements.indexOf(this);

            for (var t in -1 !== e && this._pInst._elements.splice(e, 1), this._events) this.elt.removeEventListener(t, this._events[t]);
          }, t.exports = a.Graphics;
        }, {
          "./constants": 18,
          "./main": 24
        }],
        27: [function (e, t, n) {
          "use strict";

          var a = e("./main"),
              o = e("../core/constants");

          function i(e) {
            var t = 0,
                n = 0;
            if (e.offsetParent) do {
              t += e.offsetLeft, n += e.offsetTop;
            } while (e = e.offsetParent);else t += e.offsetLeft, n += e.offsetTop;
            return [t, n];
          }

          a.Renderer = function (e, t, n) {
            a.Element.call(this, e, t), this.canvas = e, n ? (this._isMainCanvas = !0, this._pInst._setProperty("_curElement", this), this._pInst._setProperty("canvas", this.canvas), this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height)) : (this.canvas.style.display = "none", this._styles = []), this._textSize = 12, this._textLeading = 15, this._textFont = "sans-serif", this._textStyle = o.NORMAL, this._textAscent = null, this._textDescent = null, this._textAlign = o.LEFT, this._textBaseline = o.BASELINE, this._rectMode = o.CORNER, this._ellipseMode = o.CENTER, this._curveTightness = 0, this._imageMode = o.CORNER, this._tint = null, this._doStroke = !0, this._doFill = !0, this._strokeSet = !1, this._fillSet = !1;
          }, a.Renderer.prototype = Object.create(a.Element.prototype), a.Renderer.prototype.push = function () {
            return {
              properties: {
                _doStroke: this._doStroke,
                _strokeSet: this._strokeSet,
                _doFill: this._doFill,
                _fillSet: this._fillSet,
                _tint: this._tint,
                _imageMode: this._imageMode,
                _rectMode: this._rectMode,
                _ellipseMode: this._ellipseMode,
                _textFont: this._textFont,
                _textLeading: this._textLeading,
                _textSize: this._textSize,
                _textAlign: this._textAlign,
                _textBaseline: this._textBaseline,
                _textStyle: this._textStyle
              }
            };
          }, a.Renderer.prototype.pop = function (e) {
            e.properties && Object.assign(this, e.properties);
          }, a.Renderer.prototype.resize = function (e, t) {
            this.width = e, this.height = t, this.elt.width = e * this._pInst._pixelDensity, this.elt.height = t * this._pInst._pixelDensity, this.elt.style.width = e + "px", this.elt.style.height = t + "px", this._isMainCanvas && (this._pInst._setProperty("width", this.width), this._pInst._setProperty("height", this.height));
          }, a.Renderer.prototype.textLeading = function (e) {
            return "number" == typeof e ? (this._setProperty("_textLeading", e), this._pInst) : this._textLeading;
          }, a.Renderer.prototype.textSize = function (e) {
            return "number" == typeof e ? (this._setProperty("_textSize", e), this._setProperty("_textLeading", e * o._DEFAULT_LEADMULT), this._applyTextProperties()) : this._textSize;
          }, a.Renderer.prototype.textStyle = function (e) {
            return e ? (e !== o.NORMAL && e !== o.ITALIC && e !== o.BOLD && e !== o.BOLDITALIC || this._setProperty("_textStyle", e), this._applyTextProperties()) : this._textStyle;
          }, a.Renderer.prototype.textAscent = function () {
            return null === this._textAscent && this._updateTextMetrics(), this._textAscent;
          }, a.Renderer.prototype.textDescent = function () {
            return null === this._textDescent && this._updateTextMetrics(), this._textDescent;
          }, a.Renderer.prototype.textAlign = function (e, t) {
            return void 0 !== e ? (this._setProperty("_textAlign", e), void 0 !== t && this._setProperty("_textBaseline", t), this._applyTextProperties()) : {
              horizontal: this._textAlign,
              vertical: this._textBaseline
            };
          }, a.Renderer.prototype.text = function (e, t, n, a, i) {
            var r,
                s,
                l,
                p,
                d,
                c,
                u,
                m,
                h = this._pInst,
                f = Number.MAX_VALUE;

            if ((this._doFill || this._doStroke) && void 0 !== e) {
              if ("string" != typeof e && (e = e.toString()), r = (e = e.replace(/(\t)/g, "  ")).split("\n"), void 0 !== a) {
                for (m = 0, l = 0; l < r.length; l++) for (d = "", u = r[l].split(" "), s = 0; s < u.length; s++) c = d + u[s] + " ", this.textWidth(c) > a ? (d = u[s] + " ", m += h.textLeading()) : d = c;

                switch (this._rectMode === o.CENTER && (t -= a / 2, n -= i / 2), this._textAlign) {
                  case o.CENTER:
                    t += a / 2;
                    break;

                  case o.RIGHT:
                    t += a;
                }

                var g = !1;

                if (void 0 !== i) {
                  switch (this._textBaseline) {
                    case o.BOTTOM:
                      n += i - m;
                      break;

                    case o.CENTER:
                      n += (i - m) / 2;
                      break;

                    case o.BASELINE:
                      g = !0, this._textBaseline = o.TOP;
                  }

                  f = n + i - h.textAscent();
                }

                for (l = 0; l < r.length; l++) {
                  for (d = "", u = r[l].split(" "), s = 0; s < u.length; s++) c = d + u[s] + " ", this.textWidth(c) > a && d.length > 0 ? (this._renderText(h, d, t, n, f), d = u[s] + " ", n += h.textLeading()) : d = c;

                  this._renderText(h, d, t, n, f), n += h.textLeading(), g && (this._textBaseline = o.BASELINE);
                }
              } else {
                var y = 0,
                    v = h.textAlign().vertical;

                for (v === o.CENTER ? y = (r.length - 1) * h.textLeading() / 2 : v === o.BOTTOM && (y = (r.length - 1) * h.textLeading()), p = 0; p < r.length; p++) this._renderText(h, r[p], t, n - y, f), n += h.textLeading();
              }

              return h;
            }
          }, a.Renderer.prototype._applyDefaults = function () {
            return this;
          }, a.Renderer.prototype._isOpenType = function (e) {
            return "object" == typeof (e = e || this._textFont) && e.font && e.font.supported;
          }, a.Renderer.prototype._updateTextMetrics = function () {
            if (this._isOpenType()) return this._setProperty("_textAscent", this._textFont._textAscent()), this._setProperty("_textDescent", this._textFont._textDescent()), this;
            var e = document.createElement("span");
            e.style.fontFamily = this._textFont, e.style.fontSize = this._textSize + "px", e.innerHTML = "ABCjgq|";
            var t = document.createElement("div");
            t.style.display = "inline-block", t.style.width = "1px", t.style.height = "0px";
            var n = document.createElement("div");
            n.appendChild(e), n.appendChild(t), n.style.height = "0px", n.style.overflow = "hidden", document.body.appendChild(n), t.style.verticalAlign = "baseline";
            var a = i(t),
                o = i(e),
                r = a[1] - o[1];
            t.style.verticalAlign = "bottom", a = i(t), o = i(e);
            var s = a[1] - o[1] - r;
            return document.body.removeChild(n), this._setProperty("_textAscent", r), this._setProperty("_textDescent", s), this;
          }, t.exports = a.Renderer;
        }, {
          "../core/constants": 18,
          "./main": 24
        }],
        28: [function (e, t, n) {
          "use strict";

          var a = e("./main"),
              o = e("./constants"),
              i = e("../image/filters");
          e("./p5.Renderer");
          var r = "rgba(0,0,0,0)";
          a.Renderer2D = function (e, t, n) {
            return a.Renderer.call(this, e, t, n), this.drawingContext = this.canvas.getContext("2d"), this._pInst._setProperty("drawingContext", this.drawingContext), this;
          }, a.Renderer2D.prototype = Object.create(a.Renderer.prototype), a.Renderer2D.prototype._applyDefaults = function () {
            this._cachedFillStyle = this._cachedStrokeStyle = void 0, this._setFill(o._DEFAULT_FILL), this._setStroke(o._DEFAULT_STROKE), this.drawingContext.lineCap = o.ROUND, this.drawingContext.font = "normal 12px sans-serif";
          }, a.Renderer2D.prototype.resize = function (e, t) {
            a.Renderer.prototype.resize.call(this, e, t), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity);
          }, a.Renderer2D.prototype.background = function () {
            if (this.drawingContext.save(), this.resetMatrix(), arguments[0] instanceof a.Image) this._pInst.image(arguments[0], 0, 0, this.width, this.height);else {
              var e = this._getFill(),
                  t = this._pInst.color.apply(this._pInst, arguments),
                  n = t.toString();

              this._setFill(n), this.drawingContext.fillRect(0, 0, this.width, this.height), this._setFill(e);
            }
            this.drawingContext.restore(), this._pInst._pixelsDirty = !0;
          }, a.Renderer2D.prototype.clear = function () {
            this.drawingContext.save(), this.resetMatrix(), this.drawingContext.clearRect(0, 0, this.width, this.height), this.drawingContext.restore(), this._pInst._pixelsDirty = !0;
          }, a.Renderer2D.prototype.fill = function () {
            var e = this._pInst.color.apply(this._pInst, arguments);

            this._setFill(e.toString());
          }, a.Renderer2D.prototype.stroke = function () {
            var e = this._pInst.color.apply(this._pInst, arguments);

            this._setStroke(e.toString());
          }, a.Renderer2D.prototype.image = function (e, t, n, o, i, r, s, l, p) {
            var d;

            try {
              this._tint && (a.MediaElement && e instanceof a.MediaElement && e.loadPixels(), e.canvas && (d = this._getTintedImageCanvas(e))), d || (d = e.canvas || e.elt);
              var c = 1;
              e.width && e.width > 0 && (c = d.width / e.width), this.drawingContext.drawImage(d, c * t, c * n, c * o, c * i, r, s, l, p);
            } catch (e) {
              if ("NS_ERROR_NOT_AVAILABLE" !== e.name) throw e;
            }

            this._pInst._pixelsDirty = !0;
          }, a.Renderer2D.prototype._getTintedImageCanvas = function (e) {
            if (!e.canvas) return e;

            var t = i._toPixels(e.canvas),
                n = document.createElement("canvas");

            n.width = e.canvas.width, n.height = e.canvas.height;

            for (var a = n.getContext("2d"), o = a.createImageData(e.canvas.width, e.canvas.height), r = o.data, s = 0; s < t.length; s += 4) {
              var l = t[s],
                  p = t[s + 1],
                  d = t[s + 2],
                  c = t[s + 3];
              r[s] = l * this._tint[0] / 255, r[s + 1] = p * this._tint[1] / 255, r[s + 2] = d * this._tint[2] / 255, r[s + 3] = c * this._tint[3] / 255;
            }

            return a.putImageData(o, 0, 0), n;
          }, a.Renderer2D.prototype.blendMode = function (e) {
            this.drawingContext.globalCompositeOperation = e;
          }, a.Renderer2D.prototype.blend = function () {
            var e = this.drawingContext.globalCompositeOperation,
                t = arguments[arguments.length - 1],
                n = Array.prototype.slice.call(arguments, 0, arguments.length - 1);
            this.drawingContext.globalCompositeOperation = t, this._pInst ? this._pInst.copy.apply(this._pInst, n) : this.copy.apply(this, n), this.drawingContext.globalCompositeOperation = e;
          }, a.Renderer2D.prototype.copy = function () {
            var e, t, n, o, i, r, s, l, p;
            if (9 === arguments.length) e = arguments[0], t = arguments[1], n = arguments[2], o = arguments[3], i = arguments[4], r = arguments[5], s = arguments[6], l = arguments[7], p = arguments[8];else {
              if (8 !== arguments.length) throw new Error("Signature not supported");
              e = this._pInst, t = arguments[0], n = arguments[1], o = arguments[2], i = arguments[3], r = arguments[4], s = arguments[5], l = arguments[6], p = arguments[7];
            }
            a.Renderer2D._copyHelper(this, e, t, n, o, i, r, s, l, p), this._pInst._pixelsDirty = !0;
          }, a.Renderer2D._copyHelper = function (e, t, n, a, o, i, r, s, l, p) {
            t.loadPixels();
            var d = t.canvas.width / t.width;
            e.drawingContext.drawImage(t.canvas, d * n, d * a, d * o, d * i, r, s, l, p);
          }, a.Renderer2D.prototype.get = function (e, t, n, o) {
            var i,
                r,
                s = this._pInst || this,
                l = s._pixelDensity,
                p = e * l,
                d = t * l;
            if (1 === n && 1 === o) return s._pixelsDirty ? (i = this.drawingContext.getImageData(p, d, 1, 1).data, r = 0) : (i = s.pixels, r = 4 * (p + d * this.width * l)), [i[r + 0], i[r + 1], i[r + 2], i[r + 3]];
            var c = Math.min(n, s.width),
                u = Math.min(o, s.height),
                m = c * l,
                h = u * l,
                f = new a.Image(c, u);
            return f.canvas.getContext("2d").drawImage(this.canvas, p, d, m, h, 0, 0, c, u), f;
          }, a.Renderer2D.prototype.loadPixels = function () {
            var e = this._pInst || this;

            if (e._pixelsDirty) {
              e._pixelsDirty = !1;
              var t = e._pixelDensity,
                  n = this.width * t,
                  a = this.height * t,
                  o = this.drawingContext.getImageData(0, 0, n, a);
              e._setProperty("imageData", o), e._setProperty("pixels", o.data);
            }
          }, a.Renderer2D.prototype.set = function (e, t, n) {
            e = Math.floor(e), t = Math.floor(t);
            var o = this._pInst || this;
            if (n instanceof a.Image) this.drawingContext.save(), this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(o._pixelDensity, o._pixelDensity), this.drawingContext.drawImage(n.canvas, e, t), this.drawingContext.restore(), o._pixelsDirty = !0;else {
              var i = 0,
                  r = 0,
                  s = 0,
                  l = 0,
                  p = 4 * (t * o._pixelDensity * (this.width * o._pixelDensity) + e * o._pixelDensity);
              if (o.imageData && !o._pixelsDirty || o.loadPixels.call(o), "number" == typeof n) p < o.pixels.length && (i = n, r = n, s = n, l = 255);else if (n instanceof Array) {
                if (n.length < 4) throw new Error("pixel array must be of the form [R, G, B, A]");
                p < o.pixels.length && (i = n[0], r = n[1], s = n[2], l = n[3]);
              } else n instanceof a.Color && p < o.pixels.length && (i = n.levels[0], r = n.levels[1], s = n.levels[2], l = n.levels[3]);

              for (var d = 0; d < o._pixelDensity; d++) for (var c = 0; c < o._pixelDensity; c++) p = 4 * ((t * o._pixelDensity + c) * this.width * o._pixelDensity + (e * o._pixelDensity + d)), o.pixels[p] = i, o.pixels[p + 1] = r, o.pixels[p + 2] = s, o.pixels[p + 3] = l;
            }
          }, a.Renderer2D.prototype.updatePixels = function (e, t, n, a) {
            var o = this._pInst || this,
                i = o._pixelDensity;
            void 0 === e && void 0 === t && void 0 === n && void 0 === a && (e = 0, t = 0, n = this.width, a = this.height), n *= i, a *= i, this.drawingContext.putImageData(o.imageData, e, t, 0, 0, n, a), 0 === e && 0 === t && n === this.width && a === this.height || (o._pixelsDirty = !0);
          }, a.Renderer2D.prototype._acuteArcToBezier = function (e, t) {
            var n = t / 2,
                a = Math.cos(n),
                o = Math.sin(n),
                i = 1 / Math.tan(n),
                r = e + n,
                s = Math.cos(r),
                l = Math.sin(r),
                p = (4 - a) / 3,
                d = o + (a - p) * i;
            return {
              ax: Math.cos(e),
              ay: Math.sin(e),
              bx: p * s + d * l,
              by: p * l - d * s,
              cx: p * s - d * l,
              cy: p * l + d * s,
              dx: Math.cos(e + t),
              dy: Math.sin(e + t)
            };
          }, a.Renderer2D.prototype.arc = function (e, t, n, a, i, r, s) {
            var l = this.drawingContext,
                p = n / 2,
                d = a / 2,
                c = 0,
                u = [];

            for (e += p, t += d; r - i > 1e-5;) c = Math.min(r - i, o.HALF_PI), u.push(this._acuteArcToBezier(i, c)), i += c;

            return this._doFill && (l.beginPath(), u.forEach(function (n, a) {
              0 === a && l.moveTo(e + n.ax * p, t + n.ay * d), l.bezierCurveTo(e + n.bx * p, t + n.by * d, e + n.cx * p, t + n.cy * d, e + n.dx * p, t + n.dy * d);
            }), s !== o.PIE && null != s || l.lineTo(e, t), l.closePath(), l.fill()), this._doStroke && (l.beginPath(), u.forEach(function (n, a) {
              0 === a && l.moveTo(e + n.ax * p, t + n.ay * d), l.bezierCurveTo(e + n.bx * p, t + n.by * d, e + n.cx * p, t + n.cy * d, e + n.dx * p, t + n.dy * d);
            }), s === o.PIE ? (l.lineTo(e, t), l.closePath()) : s === o.CHORD && l.closePath(), l.stroke()), this;
          }, a.Renderer2D.prototype.ellipse = function (e) {
            var t = this.drawingContext,
                n = this._doFill,
                a = this._doStroke,
                o = e[0],
                i = e[1],
                s = e[2],
                l = e[3];

            if (n && !a) {
              if (this._getFill() === r) return this;
            } else if (!n && a && this._getStroke() === r) return this;

            var p = s / 2 * .5522847498,
                d = l / 2 * .5522847498,
                c = o + s,
                u = i + l,
                m = o + s / 2,
                h = i + l / 2;
            t.beginPath(), t.moveTo(o, h), t.bezierCurveTo(o, h - d, m - p, i, m, i), t.bezierCurveTo(m + p, i, c, h - d, c, h), t.bezierCurveTo(c, h + d, m + p, u, m, u), t.bezierCurveTo(m - p, u, o, h + d, o, h), t.closePath(), n && t.fill(), a && t.stroke();
          }, a.Renderer2D.prototype.line = function (e, t, n, a) {
            var o = this.drawingContext;
            return this._doStroke ? this._getStroke() === r ? this : (o.lineWidth % 2 == 1 && o.translate(.5, .5), o.beginPath(), o.moveTo(e, t), o.lineTo(n, a), o.stroke(), o.lineWidth % 2 == 1 && o.translate(-.5, -.5), this) : this;
          }, a.Renderer2D.prototype.point = function (e, t) {
            var n = this.drawingContext;
            if (!this._doStroke) return this;
            if (this._getStroke() === r) return this;

            var a = this._getStroke(),
                i = this._getFill();

            e = Math.round(e), t = Math.round(t), this._setFill(a), n.lineWidth > 1 ? (n.beginPath(), n.arc(e, t, n.lineWidth / 2, 0, o.TWO_PI, !1), n.fill()) : n.fillRect(e, t, 1, 1), this._setFill(i);
          }, a.Renderer2D.prototype.quad = function (e, t, n, a, o, i, s, l) {
            var p = this.drawingContext,
                d = this._doFill,
                c = this._doStroke;

            if (d && !c) {
              if (this._getFill() === r) return this;
            } else if (!d && c && this._getStroke() === r) return this;

            return p.beginPath(), p.moveTo(e, t), p.lineTo(n, a), p.lineTo(o, i), p.lineTo(s, l), p.closePath(), d && p.fill(), c && p.stroke(), this;
          }, a.Renderer2D.prototype.rect = function (e) {
            var t = e[0],
                n = e[1],
                a = e[2],
                o = e[3],
                i = e[4],
                s = e[5],
                l = e[6],
                p = e[7],
                d = this.drawingContext,
                c = this._doFill,
                u = this._doStroke;

            if (c && !u) {
              if (this._getFill() === r) return this;
            } else if (!c && u && this._getStroke() === r) return this;

            if (this._doStroke && d.lineWidth % 2 == 1 && d.translate(.5, .5), d.beginPath(), void 0 === i) d.rect(t, n, a, o);else {
              void 0 === s && (s = i), void 0 === l && (l = s), void 0 === p && (p = l);
              var m = a / 2,
                  h = o / 2;
              a < 2 * i && (i = m), o < 2 * i && (i = h), a < 2 * s && (s = m), o < 2 * s && (s = h), a < 2 * l && (l = m), o < 2 * l && (l = h), a < 2 * p && (p = m), o < 2 * p && (p = h), d.beginPath(), d.moveTo(t + i, n), d.arcTo(t + a, n, t + a, n + o, s), d.arcTo(t + a, n + o, t, n + o, l), d.arcTo(t, n + o, t, n, p), d.arcTo(t, n, t + a, n, i), d.closePath();
            }
            return this._doFill && d.fill(), this._doStroke && d.stroke(), this._doStroke && d.lineWidth % 2 == 1 && d.translate(-.5, -.5), this;
          }, a.Renderer2D.prototype.triangle = function (e) {
            var t = this.drawingContext,
                n = this._doFill,
                a = this._doStroke,
                o = e[0],
                i = e[1],
                s = e[2],
                l = e[3],
                p = e[4],
                d = e[5];

            if (n && !a) {
              if (this._getFill() === r) return this;
            } else if (!n && a && this._getStroke() === r) return this;

            t.beginPath(), t.moveTo(o, i), t.lineTo(s, l), t.lineTo(p, d), t.closePath(), n && t.fill(), a && t.stroke();
          }, a.Renderer2D.prototype.endShape = function (e, t, n, a, i, r, s) {
            if (0 === t.length) return this;
            if (!this._doStroke && !this._doFill) return this;
            var l,
                p,
                d,
                c = e === o.CLOSE;
            c && !r && t.push(t[0]);
            var u = t.length;
            if (!n || s !== o.POLYGON && null !== s) {
              if (!a || s !== o.POLYGON && null !== s) {
                if (!i || s !== o.POLYGON && null !== s) {
                  if (s === o.POINTS) for (p = 0; p < u; p++) l = t[p], this._doStroke && this._pInst.stroke(l[6]), this._pInst.point(l[0], l[1]);else if (s === o.LINES) for (p = 0; p + 1 < u; p += 2) l = t[p], this._doStroke && this._pInst.stroke(t[p + 1][6]), this._pInst.line(l[0], l[1], t[p + 1][0], t[p + 1][1]);else if (s === o.TRIANGLES) for (p = 0; p + 2 < u; p += 3) l = t[p], this.drawingContext.beginPath(), this.drawingContext.moveTo(l[0], l[1]), this.drawingContext.lineTo(t[p + 1][0], t[p + 1][1]), this.drawingContext.lineTo(t[p + 2][0], t[p + 2][1]), this.drawingContext.closePath(), this._doFill && (this._pInst.fill(t[p + 2][5]), this.drawingContext.fill()), this._doStroke && (this._pInst.stroke(t[p + 2][6]), this.drawingContext.stroke());else if (s === o.TRIANGLE_STRIP) for (p = 0; p + 1 < u; p++) l = t[p], this.drawingContext.beginPath(), this.drawingContext.moveTo(t[p + 1][0], t[p + 1][1]), this.drawingContext.lineTo(l[0], l[1]), this._doStroke && this._pInst.stroke(t[p + 1][6]), this._doFill && this._pInst.fill(t[p + 1][5]), p + 2 < u && (this.drawingContext.lineTo(t[p + 2][0], t[p + 2][1]), this._doStroke && this._pInst.stroke(t[p + 2][6]), this._doFill && this._pInst.fill(t[p + 2][5])), this._doFillStrokeClose(c);else if (s === o.TRIANGLE_FAN) {
                    if (u > 2) {
                      for (this.drawingContext.beginPath(), p = 2; p < u; p++) l = t[p], this.drawingContext.moveTo(t[0][0], t[0][1]), this.drawingContext.lineTo(t[p - 1][0], t[p - 1][1]), this.drawingContext.lineTo(l[0], l[1]), this.drawingContext.lineTo(t[0][0], t[0][1]), p < u - 1 && (this._doFill && l[5] !== t[p + 1][5] || this._doStroke && l[6] !== t[p + 1][6]) && (this._doFill && (this._pInst.fill(l[5]), this.drawingContext.fill(), this._pInst.fill(t[p + 1][5])), this._doStroke && (this._pInst.stroke(l[6]), this.drawingContext.stroke(), this._pInst.stroke(t[p + 1][6])), this.drawingContext.closePath(), this.drawingContext.beginPath());

                      this._doFillStrokeClose(c);
                    }
                  } else if (s === o.QUADS) for (p = 0; p + 3 < u; p += 4) {
                    for (l = t[p], this.drawingContext.beginPath(), this.drawingContext.moveTo(l[0], l[1]), d = 1; d < 4; d++) this.drawingContext.lineTo(t[p + d][0], t[p + d][1]);

                    this.drawingContext.lineTo(l[0], l[1]), this._doFill && this._pInst.fill(t[p + 3][5]), this._doStroke && this._pInst.stroke(t[p + 3][6]), this._doFillStrokeClose(c);
                  } else if (s === o.QUAD_STRIP) {
                    if (u > 3) for (p = 0; p + 1 < u; p += 2) l = t[p], this.drawingContext.beginPath(), p + 3 < u ? (this.drawingContext.moveTo(t[p + 2][0], t[p + 2][1]), this.drawingContext.lineTo(l[0], l[1]), this.drawingContext.lineTo(t[p + 1][0], t[p + 1][1]), this.drawingContext.lineTo(t[p + 3][0], t[p + 3][1]), this._doFill && this._pInst.fill(t[p + 3][5]), this._doStroke && this._pInst.stroke(t[p + 3][6])) : (this.drawingContext.moveTo(l[0], l[1]), this.drawingContext.lineTo(t[p + 1][0], t[p + 1][1])), this._doFillStrokeClose(c);
                  } else {
                    for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t[0][0], t[0][1]), p = 1; p < u; p++) (l = t[p]).isVert && (l.moveTo ? this.drawingContext.moveTo(l[0], l[1]) : this.drawingContext.lineTo(l[0], l[1]));

                    this._doFillStrokeClose(c);
                  }
                } else {
                  for (this.drawingContext.beginPath(), p = 0; p < u; p++) t[p].isVert ? t[p].moveTo ? this.drawingContext.moveTo([0], t[p][1]) : this.drawingContext.lineTo(t[p][0], t[p][1]) : this.drawingContext.quadraticCurveTo(t[p][0], t[p][1], t[p][2], t[p][3]);

                  this._doFillStrokeClose(c);
                }
              } else {
                for (this.drawingContext.beginPath(), p = 0; p < u; p++) t[p].isVert ? t[p].moveTo ? this.drawingContext.moveTo(t[p][0], t[p][1]) : this.drawingContext.lineTo(t[p][0], t[p][1]) : this.drawingContext.bezierCurveTo(t[p][0], t[p][1], t[p][2], t[p][3], t[p][4], t[p][5]);

                this._doFillStrokeClose(c);
              }
            } else if (u > 3) {
              var m = [],
                  h = 1 - this._curveTightness;

              for (this.drawingContext.beginPath(), this.drawingContext.moveTo(t[1][0], t[1][1]), p = 1; p + 2 < u; p++) l = t[p], m[0] = [l[0], l[1]], m[1] = [l[0] + (h * t[p + 1][0] - h * t[p - 1][0]) / 6, l[1] + (h * t[p + 1][1] - h * t[p - 1][1]) / 6], m[2] = [t[p + 1][0] + (h * t[p][0] - h * t[p + 2][0]) / 6, t[p + 1][1] + (h * t[p][1] - h * t[p + 2][1]) / 6], m[3] = [t[p + 1][0], t[p + 1][1]], this.drawingContext.bezierCurveTo(m[1][0], m[1][1], m[2][0], m[2][1], m[3][0], m[3][1]);

              c && this.drawingContext.lineTo(t[p + 1][0], t[p + 1][1]), this._doFillStrokeClose(c);
            }
            return n = !1, a = !1, i = !1, r = !1, c && t.pop(), this._pInst._pixelsDirty = !0, this;
          }, a.Renderer2D.prototype.noSmooth = function () {
            return "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !1), this;
          }, a.Renderer2D.prototype.smooth = function () {
            return "imageSmoothingEnabled" in this.drawingContext && (this.drawingContext.imageSmoothingEnabled = !0), this;
          }, a.Renderer2D.prototype.strokeCap = function (e) {
            return e !== o.ROUND && e !== o.SQUARE && e !== o.PROJECT || (this.drawingContext.lineCap = e), this;
          }, a.Renderer2D.prototype.strokeJoin = function (e) {
            return e !== o.ROUND && e !== o.BEVEL && e !== o.MITER || (this.drawingContext.lineJoin = e), this;
          }, a.Renderer2D.prototype.strokeWeight = function (e) {
            return this.drawingContext.lineWidth = void 0 === e || 0 === e ? 1e-4 : e, this;
          }, a.Renderer2D.prototype._getFill = function () {
            return this._cachedFillStyle || (this._cachedFillStyle = this.drawingContext.fillStyle), this._cachedFillStyle;
          }, a.Renderer2D.prototype._setFill = function (e) {
            e !== this._cachedFillStyle && (this.drawingContext.fillStyle = e, this._cachedFillStyle = e);
          }, a.Renderer2D.prototype._getStroke = function () {
            return this._cachedStrokeStyle || (this._cachedStrokeStyle = this.drawingContext.strokeStyle), this._cachedStrokeStyle;
          }, a.Renderer2D.prototype._setStroke = function (e) {
            e !== this._cachedStrokeStyle && (this.drawingContext.strokeStyle = e, this._cachedStrokeStyle = e);
          }, a.Renderer2D.prototype.bezier = function (e, t, n, a, o, i, r, s) {
            return this._pInst.beginShape(), this._pInst.vertex(e, t), this._pInst.bezierVertex(n, a, o, i, r, s), this._pInst.endShape(), this;
          }, a.Renderer2D.prototype.curve = function (e, t, n, a, o, i, r, s) {
            return this._pInst.beginShape(), this._pInst.curveVertex(e, t), this._pInst.curveVertex(n, a), this._pInst.curveVertex(o, i), this._pInst.curveVertex(r, s), this._pInst.endShape(), this;
          }, a.Renderer2D.prototype._doFillStrokeClose = function (e) {
            e && this.drawingContext.closePath(), this._doFill && this.drawingContext.fill(), this._doStroke && this.drawingContext.stroke(), this._pInst._pixelsDirty = !0;
          }, a.Renderer2D.prototype.applyMatrix = function (e, t, n, a, o, i) {
            this.drawingContext.transform(e, t, n, a, o, i);
          }, a.Renderer2D.prototype.resetMatrix = function () {
            return this.drawingContext.setTransform(1, 0, 0, 1, 0, 0), this.drawingContext.scale(this._pInst._pixelDensity, this._pInst._pixelDensity), this;
          }, a.Renderer2D.prototype.rotate = function (e) {
            this.drawingContext.rotate(e);
          }, a.Renderer2D.prototype.scale = function (e, t) {
            return this.drawingContext.scale(e, t), this;
          }, a.Renderer2D.prototype.shearX = function (e) {
            return this.drawingContext.transform(1, 0, Math.tan(e), 1, 0, 0), this;
          }, a.Renderer2D.prototype.shearY = function (e) {
            return this.drawingContext.transform(1, Math.tan(e), 0, 1, 0, 0), this;
          }, a.Renderer2D.prototype.translate = function (e, t) {
            return e instanceof a.Vector && (t = e.y, e = e.x), this.drawingContext.translate(e, t), this;
          }, a.Renderer2D.prototype.text = function (e, t, n, i, r) {
            var s;
            void 0 !== i && void 0 !== r && this.drawingContext.textBaseline === o.BASELINE && (s = !0, this.drawingContext.textBaseline = o.TOP);
            var l = a.Renderer.prototype.text.apply(this, arguments);
            return s && (this.drawingContext.textBaseline = o.BASELINE), l;
          }, a.Renderer2D.prototype._renderText = function (e, t, n, a, i) {
            if (!(a >= i)) return e.push(), this._isOpenType() ? this._textFont._renderPath(t, n, a, {
              renderer: this
            }) : (this._doStroke && this._strokeSet && this.drawingContext.strokeText(t, n, a), this._doFill && (this._fillSet || this._setFill(o._DEFAULT_TEXT_FILL), this.drawingContext.fillText(t, n, a))), e.pop(), this._pInst._pixelsDirty = !0, e;
          }, a.Renderer2D.prototype.textWidth = function (e) {
            return this._isOpenType() ? this._textFont._textWidth(e, this._textSize) : this.drawingContext.measureText(e).width;
          }, a.Renderer2D.prototype._applyTextProperties = function () {
            var e,
                t = this._pInst;
            return this._setProperty("_textAscent", null), this._setProperty("_textDescent", null), e = this._textFont, this._isOpenType() && (e = this._textFont.font.familyName, this._setProperty("_textStyle", this._textFont.font.styleName)), this.drawingContext.font = (this._textStyle || "normal") + " " + (this._textSize || 12) + "px " + (e || "sans-serif"), this.drawingContext.textAlign = this._textAlign, this._textBaseline === o.CENTER ? this.drawingContext.textBaseline = o._CTX_MIDDLE : this.drawingContext.textBaseline = this._textBaseline, t;
          }, a.Renderer2D.prototype.push = function () {
            return this.drawingContext.save(), a.Renderer.prototype.push.apply(this);
          }, a.Renderer2D.prototype.pop = function (e) {
            this.drawingContext.restore(), this._cachedFillStyle = this.drawingContext.fillStyle, this._cachedStrokeStyle = this.drawingContext.strokeStyle, a.Renderer.prototype.pop.call(this, e);
          }, t.exports = a.Renderer2D;
        }, {
          "../image/filters": 42,
          "./constants": 18,
          "./main": 24,
          "./p5.Renderer": 27
        }],
        29: [function (e, t, n) {
          "use strict";

          var a = e("./main"),
              o = e("./constants");
          e("./p5.Graphics"), e("./p5.Renderer2D"), e("../webgl/p5.RendererGL");
          var i = "defaultCanvas0";
          a.prototype.createCanvas = function (e, t, n) {
            a._validateParameters("createCanvas", arguments);

            var r,
                s = n || o.P2D;

            if (s === o.WEBGL) {
              if (r = document.getElementById(i)) {
                r.parentNode.removeChild(r);
                var l = this._renderer;
                this._elements = this._elements.filter(function (e) {
                  return e !== l;
                });
              }

              (r = document.createElement("canvas")).id = i, r.classList.add("p5Canvas");
            } else if (this._defaultGraphicsCreated) r = this.canvas;else {
              r = document.createElement("canvas");

              for (var p = 0; document.getElementById("defaultCanvas" + p);) p++;

              i = "defaultCanvas" + p, r.id = i, r.classList.add("p5Canvas");
            }

            return this._setupDone || (r.dataset.hidden = !0, r.style.visibility = "hidden"), this._userNode ? this._userNode.appendChild(r) : document.body.appendChild(r), s === o.WEBGL ? (this._setProperty("_renderer", new a.RendererGL(r, this, !0)), this._elements.push(this._renderer)) : this._defaultGraphicsCreated || (this._setProperty("_renderer", new a.Renderer2D(r, this, !0)), this._defaultGraphicsCreated = !0, this._elements.push(this._renderer)), this._renderer.resize(e, t), this._renderer._applyDefaults(), this._renderer;
          }, a.prototype.resizeCanvas = function (e, t, n) {
            if (a._validateParameters("resizeCanvas", arguments), this._renderer) {
              var o = {};

              for (var i in this.drawingContext) {
                var r = this.drawingContext[i];
                "object" != typeof r && "function" != typeof r && (o[i] = r);
              }

              for (var s in this._renderer.resize(e, t), this.width = e, this.height = t, o) try {
                this.drawingContext[s] = o[s];
              } catch (e) {}

              n || this.redraw();
            }
          }, a.prototype.noCanvas = function () {
            this.canvas && this.canvas.parentNode.removeChild(this.canvas);
          }, a.prototype.createGraphics = function (e, t, n) {
            return a._validateParameters("createGraphics", arguments), new a.Graphics(e, t, n, this);
          }, a.prototype.blendMode = function (e) {
            if (a._validateParameters("blendMode", arguments), e !== o.BLEND && e !== o.DARKEST && e !== o.LIGHTEST && e !== o.DIFFERENCE && e !== o.MULTIPLY && e !== o.EXCLUSION && e !== o.SCREEN && e !== o.REPLACE && e !== o.OVERLAY && e !== o.HARD_LIGHT && e !== o.SOFT_LIGHT && e !== o.DODGE && e !== o.BURN && e !== o.ADD && e !== o.NORMAL) throw new Error("Mode " + e + " not recognized.");

            this._renderer.blendMode(e);
          }, t.exports = a;
        }, {
          "../webgl/p5.RendererGL": 74,
          "./constants": 18,
          "./main": 24,
          "./p5.Graphics": 26,
          "./p5.Renderer2D": 28
        }],
        30: [function (e, t, n) {
          "use strict";

          var a = e("../main"),
              o = e("../constants"),
              i = e("../helpers");
          e("../error_helpers"), a.prototype.arc = function (e, t, n, r, s, l, p, d) {
            if (a._validateParameters("arc", arguments), !this._renderer._doStroke && !this._renderer._doFill) return this;

            for (s = this._toRadians(s), l = this._toRadians(l); s < 0;) s += o.TWO_PI;

            for (; l < 0;) l += o.TWO_PI;

            void 0 !== s && void 0 !== l && (l.toFixed(10) === s.toFixed(10) || Math.abs(l - s) === o.TWO_PI ? (s %= o.TWO_PI, l %= o.TWO_PI, s += o.TWO_PI) : Math.abs(l - s) > o.TWO_PI && (s %= o.TWO_PI, l %= o.TWO_PI, l += o.TWO_PI)), s <= o.HALF_PI ? s = Math.atan(n / r * Math.tan(s)) : s > o.HALF_PI && s <= 3 * o.HALF_PI && (s = Math.atan(n / r * Math.tan(s)) + o.PI), l <= o.HALF_PI ? l = Math.atan(n / r * Math.tan(l)) : l > o.HALF_PI && l <= 3 * o.HALF_PI && (l = Math.atan(n / r * Math.tan(l)) + o.PI), s > l && (l += o.TWO_PI), n = Math.abs(n), r = Math.abs(r);
            var c = i.modeAdjust(e, t, n, r, this._renderer._ellipseMode);
            return this._renderer.arc(c.x, c.y, c.w, c.h, s, l, p, d), this;
          }, a.prototype.ellipse = function (e, t, n, o, r) {
            if (a._validateParameters("ellipse", arguments), !this._renderer._doStroke && !this._renderer._doFill) return this;
            n < 0 && (n = Math.abs(n)), void 0 === o ? o = n : o < 0 && (o = Math.abs(o));
            var s = i.modeAdjust(e, t, n, o, this._renderer._ellipseMode);
            return this._renderer.ellipse([s.x, s.y, s.w, s.h, r]), this;
          }, a.prototype.circle = function () {
            var e = Array.prototype.slice.call(arguments, 0, 2);
            e.push(2 * arguments[2]), e.push(2 * arguments[2]), this.ellipse.apply(this, e);
          }, a.prototype.line = function () {
            return a._validateParameters("line", arguments), this._renderer._doStroke && this._renderer.line.apply(this._renderer, arguments), this;
          }, a.prototype.point = function () {
            return a._validateParameters("point", arguments), this._renderer._doStroke && this._renderer.point.apply(this._renderer, arguments), this;
          }, a.prototype.quad = function () {
            return a._validateParameters("quad", arguments), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.quad.apply(this._renderer, arguments), this;
          }, a.prototype.rect = function () {
            if (a._validateParameters("rect", arguments), this._renderer._doStroke || this._renderer._doFill) {
              for (var e = i.modeAdjust(arguments[0], arguments[1], arguments[2], arguments[3], this._renderer._rectMode), t = [e.x, e.y, e.w, e.h], n = 4; n < arguments.length; n++) t[n] = arguments[n];

              this._renderer.rect(t);
            }

            return this;
          }, a.prototype.square = function () {
            var e = Array.prototype.slice.call(arguments, 0, 3);
            e.push(arguments[2]), e = e.concat(Array.prototype.slice.call(arguments, 4)), this.rect.apply(this, e);
          }, a.prototype.triangle = function () {
            return a._validateParameters("triangle", arguments), (this._renderer._doStroke || this._renderer._doFill) && this._renderer.triangle(arguments), this;
          }, t.exports = a;
        }, {
          "../constants": 18,
          "../error_helpers": 20,
          "../helpers": 21,
          "../main": 24
        }],
        31: [function (e, t, n) {
          "use strict";

          var a = e("../main"),
              o = e("../constants");
          a.prototype.ellipseMode = function (e) {
            return a._validateParameters("ellipseMode", arguments), e !== o.CORNER && e !== o.CORNERS && e !== o.RADIUS && e !== o.CENTER || (this._renderer._ellipseMode = e), this;
          }, a.prototype.noSmooth = function () {
            return this._renderer.noSmooth(), this;
          }, a.prototype.rectMode = function (e) {
            return a._validateParameters("rectMode", arguments), e !== o.CORNER && e !== o.CORNERS && e !== o.RADIUS && e !== o.CENTER || (this._renderer._rectMode = e), this;
          }, a.prototype.smooth = function () {
            return this._renderer.smooth(), this;
          }, a.prototype.strokeCap = function (e) {
            return a._validateParameters("strokeCap", arguments), e !== o.ROUND && e !== o.SQUARE && e !== o.PROJECT || this._renderer.strokeCap(e), this;
          }, a.prototype.strokeJoin = function (e) {
            return a._validateParameters("strokeJoin", arguments), e !== o.ROUND && e !== o.BEVEL && e !== o.MITER || this._renderer.strokeJoin(e), this;
          }, a.prototype.strokeWeight = function (e) {
            return a._validateParameters("strokeWeight", arguments), this._renderer.strokeWeight(e), this;
          }, t.exports = a;
        }, {
          "../constants": 18,
          "../main": 24
        }],
        32: [function (e, t, n) {
          "use strict";

          var a = e("../main");
          e("../error_helpers"), a.prototype.bezier = function () {
            return a._validateParameters("bezier", arguments), this._renderer._doStroke || this._renderer._doFill ? (this._renderer.bezier.apply(this._renderer, arguments), this) : this;
          }, a.prototype.bezierDetail = function (e) {
            return a._validateParameters("bezierDetail", arguments), this._bezierDetail = e, this;
          }, a.prototype.bezierPoint = function (e, t, n, o, i) {
            a._validateParameters("bezierPoint", arguments);

            var r = 1 - i;
            return Math.pow(r, 3) * e + 3 * Math.pow(r, 2) * i * t + 3 * r * Math.pow(i, 2) * n + Math.pow(i, 3) * o;
          }, a.prototype.bezierTangent = function (e, t, n, o, i) {
            a._validateParameters("bezierTangent", arguments);

            var r = 1 - i;
            return 3 * o * Math.pow(i, 2) - 3 * n * Math.pow(i, 2) + 6 * n * r * i - 6 * t * r * i + 3 * t * Math.pow(r, 2) - 3 * e * Math.pow(r, 2);
          }, a.prototype.curve = function () {
            return a._validateParameters("curve", arguments), this._renderer._doStroke && this._renderer.curve.apply(this._renderer, arguments), this;
          }, a.prototype.curveDetail = function (e) {
            return a._validateParameters("curveDetail", arguments), this._curveDetail = e < 3 ? 3 : e, this;
          }, a.prototype.curveTightness = function (e) {
            return a._validateParameters("curveTightness", arguments), this._renderer._curveTightness = e, this;
          }, a.prototype.curvePoint = function (e, t, n, o, i) {
            a._validateParameters("curvePoint", arguments);

            var r = i * i * i,
                s = i * i,
                l = -.5 * r + s - .5 * i,
                p = 1.5 * r - 2.5 * s + 1,
                d = -1.5 * r + 2 * s + .5 * i,
                c = .5 * r - .5 * s;
            return e * l + t * p + n * d + o * c;
          }, a.prototype.curveTangent = function (e, t, n, o, i) {
            a._validateParameters("curveTangent", arguments);

            var r = i * i,
                s = -3 * r / 2 + 2 * i - .5,
                l = 9 * r / 2 - 5 * i,
                p = -9 * r / 2 + 4 * i + .5,
                d = 3 * r / 2 - i;
            return e * s + t * l + n * p + o * d;
          }, t.exports = a;
        }, {
          "../error_helpers": 20,
          "../main": 24
        }],
        33: [function (e, t, n) {
          "use strict";

          var a = e("../main"),
              o = e("../constants"),
              i = null,
              r = [],
              s = [],
              l = !1,
              p = !1,
              d = !1,
              c = !1,
              u = !0;
          a.prototype.beginContour = function () {
            return s = [], c = !0, this;
          }, a.prototype.beginShape = function (e) {
            return a._validateParameters("beginShape", arguments), this._renderer.isP3D ? this._renderer.beginShape.apply(this._renderer, arguments) : (i = e === o.POINTS || e === o.LINES || e === o.TRIANGLES || e === o.TRIANGLE_FAN || e === o.TRIANGLE_STRIP || e === o.QUADS || e === o.QUAD_STRIP ? e : null, r = [], s = []), this;
          }, a.prototype.bezierVertex = function () {
            if (a._validateParameters("bezierVertex", arguments), this._renderer.isP3D) this._renderer.bezierVertex.apply(this._renderer, arguments);else if (0 === r.length) a._friendlyError("vertex() must be used once before calling bezierVertex()", "bezierVertex");else {
              l = !0;

              for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];

              e.isVert = !1, c ? s.push(e) : r.push(e);
            }
            return this;
          }, a.prototype.curveVertex = function () {
            return a._validateParameters("curveVertex", arguments), this._renderer.isP3D ? this._renderer.curveVertex.apply(this._renderer, arguments) : (p = !0, this.vertex(arguments[0], arguments[1])), this;
          }, a.prototype.endContour = function () {
            var e = s[0].slice();
            e.isVert = s[0].isVert, e.moveTo = !1, s.push(e), u && (r.push(r[0]), u = !1);

            for (var t = 0; t < s.length; t++) r.push(s[t]);

            return this;
          }, a.prototype.endShape = function (e) {
            if (a._validateParameters("endShape", arguments), this._renderer.isP3D) this._renderer.endShape(e, p, l, d, c, i);else {
              if (0 === r.length) return this;
              if (!this._renderer._doStroke && !this._renderer._doFill) return this;
              var t = e === o.CLOSE;
              t && !c && r.push(r[0]), this._renderer.endShape(e, r, p, l, d, c, i), p = !1, l = !1, d = !1, c = !1, u = !0, t && r.pop();
            }
            return this;
          }, a.prototype.quadraticVertex = function () {
            if (a._validateParameters("quadraticVertex", arguments), this._renderer.isP3D) this._renderer.quadraticVertex.apply(this._renderer, arguments);else {
              if (this._contourInited) {
                var e = {};
                return e.x = arguments[0], e.y = arguments[1], e.x3 = arguments[2], e.y3 = arguments[3], e.type = o.QUADRATIC, this._contourVertices.push(e), this;
              }

              if (r.length > 0) {
                d = !0;

                for (var t = [], n = 0; n < arguments.length; n++) t[n] = arguments[n];

                t.isVert = !1, c ? s.push(t) : r.push(t);
              } else a._friendlyError("vertex() must be used once before calling quadraticVertex()", "quadraticVertex");
            }
            return this;
          }, a.prototype.vertex = function (e, t, n, a, o) {
            if (this._renderer.isP3D) this._renderer.vertex.apply(this._renderer, arguments);else {
              var i = [];
              i.isVert = !0, i[0] = e, i[1] = t, i[2] = 0, i[3] = 0, i[4] = 0, i[5] = this._renderer._getFill(), i[6] = this._renderer._getStroke(), n && (i.moveTo = n), c ? (0 === s.length && (i.moveTo = !0), s.push(i)) : r.push(i);
            }
            return this;
          }, t.exports = a;
        }, {
          "../constants": 18,
          "../main": 24
        }],
        34: [function (e, t, n) {
          "use strict";

          window.requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (e, t) {
            window.setTimeout(e, 1e3 / 60);
          }, "undefined" == typeof Uint8ClampedArray || Uint8ClampedArray.prototype.slice || Object.defineProperty(Uint8ClampedArray.prototype, "slice", {
            value: Array.prototype.slice,
            writable: !0,
            configurable: !0,
            enumerable: !1
          }), function () {
            if (!Object.assign) {
              var e = Object.keys,
                  t = Object.defineProperty,
                  n = function (e) {
                return null != e;
              },
                  a = "function" == typeof Symbol && "symbol" == typeof Symbol(),
                  o = Object.prototype.propertyIsEnumerable,
                  i = function (e) {
                return function (t) {
                  return o.call(e, t);
                };
              };

              t(Object, "assign", {
                value: function (t, o) {
                  if (!n(t)) throw new TypeError("target must be an object");
                  var r,
                      s,
                      l,
                      p,
                      d = Object(t);

                  for (r = 1; r < arguments.length; ++r) for (s = Object(arguments[r]), p = e(s), a && Object.getOwnPropertySymbols && p.push.apply(p, Object.getOwnPropertySymbols(s).filter(i(s))), l = 0; l < p.length; ++l) d[p[l]] = s[p[l]];

                  return d;
                },
                configurable: !0,
                enumerable: !1,
                writable: !0
              });
            }
          }();
        }, {}],
        35: [function (e, t, n) {
          "use strict";

          var a = e("./main");
          a.prototype.noLoop = function () {
            this._loop = !1;
          }, a.prototype.loop = function () {
            this._loop = !0, this._draw();
          }, a.prototype.push = function () {
            this._styles.push({
              props: {
                _colorMode: this._colorMode
              },
              renderer: this._renderer.push()
            });
          }, a.prototype.pop = function () {
            var e = this._styles.pop();

            e ? (this._renderer.pop(e.renderer), Object.assign(this, e.props)) : console.warn("pop() was called without matching push()");
          }, a.prototype.redraw = function (e) {
            var t = parseInt(e);
            (isNaN(t) || t < 1) && (t = 1);
            var n = this._isGlobal ? window : this,
                a = n.setup,
                o = n.draw;

            if ("function" == typeof o) {
              void 0 === a && n.scale(n._pixelDensity, n._pixelDensity);

              for (var i = function (e) {
                e.call(n);
              }, r = 0; r < t; r++) n.resetMatrix(), n._renderer.isP3D && n._renderer._update(), n._setProperty("frameCount", n.frameCount + 1), n._registeredMethods.pre.forEach(i), o(), n._registeredMethods.post.forEach(i);
            }
          }, t.exports = a;
        }, {
          "./main": 24
        }],
        36: [function (e, t, n) {
          "use strict";

          var a = e("./main");
          a.prototype.applyMatrix = function (e, t, n, a, o, i) {
            return this._renderer.applyMatrix(e, t, n, a, o, i), this;
          }, a.prototype.popMatrix = function () {
            throw new Error("popMatrix() not used, see pop()");
          }, a.prototype.printMatrix = function () {
            throw new Error("printMatrix() not implemented");
          }, a.prototype.pushMatrix = function () {
            throw new Error("pushMatrix() not used, see push()");
          }, a.prototype.resetMatrix = function () {
            return this._renderer.resetMatrix(), this;
          }, a.prototype.rotate = function (e, t) {
            return a._validateParameters("rotate", arguments), this._renderer.rotate(this._toRadians(e), t), this;
          }, a.prototype.rotateX = function (e) {
            return this._assert3d("rotateX"), a._validateParameters("rotateX", arguments), this._renderer.rotateX(this._toRadians(e)), this;
          }, a.prototype.rotateY = function (e) {
            return this._assert3d("rotateY"), a._validateParameters("rotateY", arguments), this._renderer.rotateY(this._toRadians(e)), this;
          }, a.prototype.rotateZ = function (e) {
            return this._assert3d("rotateZ"), a._validateParameters("rotateZ", arguments), this._renderer.rotateZ(this._toRadians(e)), this;
          }, a.prototype.scale = function (e, t, n) {
            if (a._validateParameters("scale", arguments), e instanceof a.Vector) {
              var o = e;
              e = o.x, t = o.y, n = o.z;
            } else if (e instanceof Array) {
              var i = e;
              e = i[0], t = i[1], n = i[2] || 1;
            }

            return isNaN(t) ? t = n = e : isNaN(n) && (n = 1), this._renderer.scale.call(this._renderer, e, t, n), this;
          }, a.prototype.shearX = function (e) {
            return a._validateParameters("shearX", arguments), this._renderer.shearX(this._toRadians(e)), this;
          }, a.prototype.shearY = function (e) {
            return a._validateParameters("shearY", arguments), this._renderer.shearY(this._toRadians(e)), this;
          }, a.prototype.translate = function (e, t, n) {
            return a._validateParameters("translate", arguments), this._renderer.isP3D ? this._renderer.translate(e, t, n) : this._renderer.translate(e, t), this;
          }, t.exports = a;
        }, {
          "./main": 24
        }],
        37: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.createStringDict = function (e, t) {
            return a._validateParameters("createStringDict", arguments), new a.StringDict(e, t);
          }, a.prototype.createNumberDict = function (e, t) {
            return a._validateParameters("createNumberDict", arguments), new a.NumberDict(e, t);
          }, a.TypedDict = function (e, t) {
            return e instanceof Object ? this.data = e : (this.data = {}, this.data[e] = t), this;
          }, a.TypedDict.prototype.size = function () {
            return Object.keys(this.data).length;
          }, a.TypedDict.prototype.hasKey = function (e) {
            return this.data.hasOwnProperty(e);
          }, a.TypedDict.prototype.get = function (e) {
            if (this.data.hasOwnProperty(e)) return this.data[e];
            console.log(e + " does not exist in this Dictionary");
          }, a.TypedDict.prototype.set = function (e, t) {
            this._validate(t) ? this.data[e] = t : console.log("Those values dont work for this dictionary type.");
          }, a.TypedDict.prototype._addObj = function (e) {
            for (var t in e) this.set(t, e[t]);
          }, a.TypedDict.prototype.create = function (e, t) {
            e instanceof Object && void 0 === t ? this._addObj(e) : void 0 !== e ? this.set(e, t) : console.log("In order to create a new Dictionary entry you must pass an object or a key, value pair");
          }, a.TypedDict.prototype.clear = function () {
            this.data = {};
          }, a.TypedDict.prototype.remove = function (e) {
            if (!this.data.hasOwnProperty(e)) throw new Error(e + " does not exist in this Dictionary");
            delete this.data[e];
          }, a.TypedDict.prototype.print = function () {
            for (var e in this.data) console.log("key:" + e + " value:" + this.data[e]);
          }, a.TypedDict.prototype.saveTable = function (e) {
            var t = "";

            for (var n in this.data) t += n + "," + this.data[n] + "\n";

            var o = new Blob([t], {
              type: "text/csv"
            });
            a.prototype.downloadFile(o, e || "mycsv", "csv");
          }, a.TypedDict.prototype.saveJSON = function (e, t) {
            a.prototype.saveJSON(this.data, e, t);
          }, a.TypedDict.prototype._validate = function (e) {
            return !0;
          }, a.StringDict = function () {
            a.TypedDict.apply(this, arguments);
          }, a.StringDict.prototype = Object.create(a.TypedDict.prototype), a.StringDict.prototype._validate = function (e) {
            return "string" == typeof e;
          }, a.NumberDict = function () {
            a.TypedDict.apply(this, arguments);
          }, a.NumberDict.prototype = Object.create(a.TypedDict.prototype), a.NumberDict.prototype._validate = function (e) {
            return "number" == typeof e;
          }, a.NumberDict.prototype.add = function (e, t) {
            this.data.hasOwnProperty(e) ? this.data[e] += t : console.log("The key - " + e + " does not exist in this dictionary.");
          }, a.NumberDict.prototype.sub = function (e, t) {
            this.add(e, -t);
          }, a.NumberDict.prototype.mult = function (e, t) {
            this.data.hasOwnProperty(e) ? this.data[e] *= t : console.log("The key - " + e + " does not exist in this dictionary.");
          }, a.NumberDict.prototype.div = function (e, t) {
            this.data.hasOwnProperty(e) ? this.data[e] /= t : console.log("The key - " + e + " does not exist in this dictionary.");
          }, a.NumberDict.prototype._valueTest = function (e) {
            if (0 === Object.keys(this.data).length) throw new Error("Unable to search for a minimum or maximum value on an empty NumberDict");
            if (1 === Object.keys(this.data).length) return this.data[Object.keys(this.data)[0]];
            var t = this.data[Object.keys(this.data)[0]];

            for (var n in this.data) this.data[n] * e < t * e && (t = this.data[n]);

            return t;
          }, a.NumberDict.prototype.minValue = function () {
            return this._valueTest(1);
          }, a.NumberDict.prototype.maxValue = function () {
            return this._valueTest(-1);
          }, a.NumberDict.prototype._keyTest = function (e) {
            if (0 === Object.keys(this.data).length) throw new Error("Unable to use minValue on an empty NumberDict");
            if (1 === Object.keys(this.data).length) return Object.keys(this.data)[0];

            for (var t = Object.keys(this.data)[0], n = 1; n < Object.keys(this.data).length; n++) Object.keys(this.data)[n] * e < t * e && (t = Object.keys(this.data)[n]);

            return t;
          }, a.NumberDict.prototype.minKey = function () {
            return this._keyTest(1);
          }, a.NumberDict.prototype.maxKey = function () {
            return this._keyTest(-1);
          }, t.exports = a.TypedDict;
        }, {
          "../core/main": 24
        }],
        38: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.deviceOrientation = void 0, a.prototype.accelerationX = 0, a.prototype.accelerationY = 0, a.prototype.accelerationZ = 0, a.prototype.pAccelerationX = 0, a.prototype.pAccelerationY = 0, a.prototype.pAccelerationZ = 0, a.prototype._updatePAccelerations = function () {
            this._setProperty("pAccelerationX", this.accelerationX), this._setProperty("pAccelerationY", this.accelerationY), this._setProperty("pAccelerationZ", this.accelerationZ);
          }, a.prototype.rotationX = 0, a.prototype.rotationY = 0, a.prototype.rotationZ = 0, a.prototype.pRotationX = 0, a.prototype.pRotationY = 0, a.prototype.pRotationZ = 0;
          var o,
              i,
              r,
              s = 0,
              l = 0,
              p = 0,
              d = "clockwise",
              c = "clockwise",
              u = "clockwise";
          a.prototype._updatePRotations = function () {
            this._setProperty("pRotationX", this.rotationX), this._setProperty("pRotationY", this.rotationY), this._setProperty("pRotationZ", this.rotationZ);
          }, a.prototype.turnAxis = void 0;
          var m = .5,
              h = 30;
          a.prototype.setMoveThreshold = function (e) {
            a._validateParameters("setMoveThreshold", arguments), m = e;
          }, a.prototype.setShakeThreshold = function (e) {
            a._validateParameters("setShakeThreshold", arguments), h = e;
          }, a.prototype._ondeviceorientation = function (e) {
            this._updatePRotations(), this._setProperty("rotationX", e.beta), this._setProperty("rotationY", e.gamma), this._setProperty("rotationZ", e.alpha), this._handleMotion();
          }, a.prototype._ondevicemotion = function (e) {
            this._updatePAccelerations(), this._setProperty("accelerationX", 2 * e.acceleration.x), this._setProperty("accelerationY", 2 * e.acceleration.y), this._setProperty("accelerationZ", 2 * e.acceleration.z), this._handleMotion();
          }, a.prototype._handleMotion = function () {
            90 === window.orientation || -90 === window.orientation ? this._setProperty("deviceOrientation", "landscape") : 0 === window.orientation ? this._setProperty("deviceOrientation", "portrait") : void 0 === window.orientation && this._setProperty("deviceOrientation", "undefined");
            var e = this.deviceMoved || window.deviceMoved;
            "function" == typeof e && (Math.abs(this.accelerationX - this.pAccelerationX) > m || Math.abs(this.accelerationY - this.pAccelerationY) > m || Math.abs(this.accelerationZ - this.pAccelerationZ) > m) && e();
            var t = this.deviceTurned || window.deviceTurned;

            if ("function" == typeof t) {
              var n = this.rotationX + 180,
                  a = this.pRotationX + 180,
                  f = s + 180;
              n - a > 0 && n - a < 270 || n - a < -270 ? d = "clockwise" : (n - a < 0 || n - a > 270) && (d = "counter-clockwise"), d !== o && (f = n), Math.abs(n - f) > 90 && Math.abs(n - f) < 270 && (f = n, this._setProperty("turnAxis", "X"), t()), o = d, s = f - 180;
              var g = this.rotationY + 180,
                  y = this.pRotationY + 180,
                  v = l + 180;
              g - y > 0 && g - y < 270 || g - y < -270 ? c = "clockwise" : (g - y < 0 || g - this.pRotationY > 270) && (c = "counter-clockwise"), c !== i && (v = g), Math.abs(g - v) > 90 && Math.abs(g - v) < 270 && (v = g, this._setProperty("turnAxis", "Y"), t()), i = c, l = v - 180, this.rotationZ - this.pRotationZ > 0 && this.rotationZ - this.pRotationZ < 270 || this.rotationZ - this.pRotationZ < -270 ? u = "clockwise" : (this.rotationZ - this.pRotationZ < 0 || this.rotationZ - this.pRotationZ > 270) && (u = "counter-clockwise"), u !== r && (p = this.rotationZ), Math.abs(this.rotationZ - p) > 90 && Math.abs(this.rotationZ - p) < 270 && (p = this.rotationZ, this._setProperty("turnAxis", "Z"), t()), r = u, this._setProperty("turnAxis", void 0);
            }

            var b,
                w,
                x = this.deviceShaken || window.deviceShaken;
            "function" == typeof x && (null !== this.pAccelerationX && (b = Math.abs(this.accelerationX - this.pAccelerationX), w = Math.abs(this.accelerationY - this.pAccelerationY)), b + w > h && x());
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        39: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = {};
          a.prototype.isKeyPressed = !1, a.prototype.keyIsPressed = !1, a.prototype.key = "", a.prototype.keyCode = 0, a.prototype._onkeydown = function (e) {
            if (!o[e.which]) {
              this._setProperty("isKeyPressed", !0), this._setProperty("keyIsPressed", !0), this._setProperty("keyCode", e.which), o[e.which] = !0, this._setProperty("key", e.key || String.fromCharCode(e.which) || e.which);
              var t = this.keyPressed || window.keyPressed;
              "function" != typeof t || e.charCode || !1 === t(e) && e.preventDefault();
            }
          }, a.prototype._onkeyup = function (e) {
            var t = this.keyReleased || window.keyReleased;
            o[e.which] = !1, function () {
              for (var e in o) if (o.hasOwnProperty(e) && !0 === o[e]) return !0;

              return !1;
            }() || (this._setProperty("isKeyPressed", !1), this._setProperty("keyIsPressed", !1)), this._setProperty("_lastKeyCodeTyped", null), this._setProperty("key", e.key || String.fromCharCode(e.which) || e.which), this._setProperty("keyCode", e.which), "function" == typeof t && !1 === t(e) && e.preventDefault();
          }, a.prototype._onkeypress = function (e) {
            if (e.which !== this._lastKeyCodeTyped) {
              this._setProperty("keyCode", e.which), this._setProperty("_lastKeyCodeTyped", e.which), this._setProperty("key", String.fromCharCode(e.which));
              var t = this.keyTyped || window.keyTyped;
              "function" == typeof t && !1 === t(e) && e.preventDefault();
            }
          }, a.prototype._onblur = function (e) {
            o = {};
          }, a.prototype.keyIsDown = function (e) {
            return a._validateParameters("keyIsDown", arguments), o[e];
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        40: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          a.prototype._hasMouseInteracted = !1, a.prototype.mouseX = 0, a.prototype.mouseY = 0, a.prototype.pmouseX = 0, a.prototype.pmouseY = 0, a.prototype.winMouseX = 0, a.prototype.winMouseY = 0, a.prototype.pwinMouseX = 0, a.prototype.pwinMouseY = 0, a.prototype.mouseButton = 0, a.prototype.mouseIsPressed = !1, a.prototype._updateNextMouseCoords = function (e) {
            if (null !== this._curElement && (!e.touches || e.touches.length > 0)) {
              var t = function (e, t, n, a) {
                a && !a.clientX && (a.touches ? a = a.touches[0] : a.changedTouches && (a = a.changedTouches[0]));
                var o = e.getBoundingClientRect(),
                    i = e.scrollWidth / t,
                    r = e.scrollHeight / n;
                return {
                  x: (a.clientX - o.left) / i,
                  y: (a.clientY - o.top) / r,
                  winX: a.clientX,
                  winY: a.clientY,
                  id: a.identifier
                };
              }(this._curElement.elt, this.width, this.height, e);

              this._setProperty("mouseX", t.x), this._setProperty("mouseY", t.y), this._setProperty("winMouseX", t.winX), this._setProperty("winMouseY", t.winY);
            }

            this._hasMouseInteracted || (this._updateMouseCoords(), this._setProperty("_hasMouseInteracted", !0));
          }, a.prototype._updateMouseCoords = function () {
            this._setProperty("pmouseX", this.mouseX), this._setProperty("pmouseY", this.mouseY), this._setProperty("pwinMouseX", this.winMouseX), this._setProperty("pwinMouseY", this.winMouseY), this._setProperty("_pmouseWheelDeltaY", this._mouseWheelDeltaY);
          }, a.prototype._setMouseButton = function (e) {
            1 === e.button ? this._setProperty("mouseButton", o.CENTER) : 2 === e.button ? this._setProperty("mouseButton", o.RIGHT) : this._setProperty("mouseButton", o.LEFT);
          }, a.prototype._onmousemove = function (e) {
            var t = this._isGlobal ? window : this;
            this._updateNextMouseCoords(e), this.mouseIsPressed ? "function" == typeof t.mouseDragged ? !1 === t.mouseDragged(e) && e.preventDefault() : "function" == typeof t.touchMoved && !1 === t.touchMoved(e) && e.preventDefault() : "function" == typeof t.mouseMoved && !1 === t.mouseMoved(e) && e.preventDefault();
          }, a.prototype._onmousedown = function (e) {
            var t = this._isGlobal ? window : this;
            this._setProperty("mouseIsPressed", !0), this._setMouseButton(e), this._updateNextMouseCoords(e), "function" == typeof t.mousePressed ? !1 === t.mousePressed(e) && e.preventDefault() : "function" == typeof t.touchStarted && !1 === t.touchStarted(e) && e.preventDefault();
          }, a.prototype._onmouseup = function (e) {
            var t = this._isGlobal ? window : this;
            this._setProperty("mouseIsPressed", !1), "function" == typeof t.mouseReleased ? !1 === t.mouseReleased(e) && e.preventDefault() : "function" == typeof t.touchEnded && !1 === t.touchEnded(e) && e.preventDefault();
          }, a.prototype._ondragend = a.prototype._onmouseup, a.prototype._ondragover = a.prototype._onmousemove, a.prototype._onclick = function (e) {
            var t = this._isGlobal ? window : this;
            "function" == typeof t.mouseClicked && !1 === t.mouseClicked(e) && e.preventDefault();
          }, a.prototype._ondblclick = function (e) {
            var t = this._isGlobal ? window : this;
            "function" == typeof t.doubleClicked && !1 === t.doubleClicked(e) && e.preventDefault();
          }, a.prototype._mouseWheelDeltaY = 0, a.prototype._pmouseWheelDeltaY = 0, a.prototype._onwheel = function (e) {
            var t = this._isGlobal ? window : this;
            this._setProperty("_mouseWheelDeltaY", e.deltaY), "function" == typeof t.mouseWheel && (e.delta = e.deltaY, !1 === t.mouseWheel(e) && e.preventDefault());
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/main": 24
        }],
        41: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");

          function o(e, t, n, a, o) {
            o = o || 0;
            var i = e.getBoundingClientRect(),
                r = e.scrollWidth / t,
                s = e.scrollHeight / n,
                l = a.touches[o] || a.changedTouches[o];
            return {
              x: (l.clientX - i.left) / r,
              y: (l.clientY - i.top) / s,
              winX: l.clientX,
              winY: l.clientY,
              id: l.identifier
            };
          }

          a.prototype.touches = [], a.prototype._updateTouchCoords = function (e) {
            if (null !== this._curElement) {
              for (var t = [], n = 0; n < e.touches.length; n++) t[n] = o(this._curElement.elt, this.width, this.height, e, n);

              this._setProperty("touches", t);
            }
          }, a.prototype._ontouchstart = function (e) {
            var t = this._isGlobal ? window : this;
            this._setProperty("mouseIsPressed", !0), this._updateTouchCoords(e), this._updateNextMouseCoords(e), this._updateMouseCoords(), "function" == typeof t.touchStarted ? !1 === t.touchStarted(e) && e.preventDefault() : "function" == typeof t.mousePressed && !1 === t.mousePressed(e) && e.preventDefault();
          }, a.prototype._ontouchmove = function (e) {
            var t = this._isGlobal ? window : this;
            this._updateTouchCoords(e), this._updateNextMouseCoords(e), "function" == typeof t.touchMoved ? !1 === t.touchMoved(e) && e.preventDefault() : "function" == typeof t.mouseDragged && !1 === t.mouseDragged(e) && e.preventDefault();
          }, a.prototype._ontouchend = function (e) {
            this._setProperty("mouseIsPressed", !1), this._updateTouchCoords(e), this._updateNextMouseCoords(e);
            var t = this._isGlobal ? window : this;
            "function" == typeof t.touchEnded ? !1 === t.touchEnded(e) && e.preventDefault() : "function" == typeof t.mouseReleased && !1 === t.mouseReleased(e) && e.preventDefault();
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        42: [function (e, t, n) {
          "use strict";

          var a,
              o,
              i,
              r,
              s = {};

          function l(e, t) {
            for (var n, l, p, d, c, u, m, h, f, g, y = s._toPixels(e), v = e.width, b = e.height, w = v * b, x = new Int32Array(w), S = 0; S < w; S++) x[S] = s._getARGB(y, S);

            var k,
                T,
                C,
                _,
                M = new Int32Array(w),
                E = new Int32Array(w),
                j = new Int32Array(w),
                I = new Int32Array(w),
                R = 0;

            for (function (e) {
              var t = 3.5 * e | 0;

              if (a !== (t = t < 1 ? 1 : t < 248 ? t : 248)) {
                o = 1 + (a = t) << 1, i = new Int32Array(o), r = new Array(o);

                for (var n = 0; n < o; n++) r[n] = new Int32Array(256);

                for (var s, l, p, d, c = 1, u = t - 1; c < t; c++) {
                  i[t + c] = i[u] = l = u * u, p = r[t + c], d = r[u--];

                  for (var m = 0; m < 256; m++) p[m] = d[m] = l * m;
                }

                s = i[t] = t * t, p = r[t];

                for (var h = 0; h < 256; h++) p[h] = s * h;
              }
            }(t), T = 0; T < b; T++) {
              for (k = 0; k < v; k++) {
                if (d = p = l = c = n = 0, (u = k - a) < 0) g = -u, u = 0;else {
                  if (u >= v) break;
                  g = 0;
                }

                for (C = g; C < o && !(u >= v); C++) {
                  var N = x[u + R];
                  c += (_ = r[C])[(-16777216 & N) >>> 24], l += _[(16711680 & N) >> 16], p += _[(65280 & N) >> 8], d += _[255 & N], n += i[C], u++;
                }

                M[m = R + k] = c / n, E[m] = l / n, j[m] = p / n, I[m] = d / n;
              }

              R += v;
            }

            for (R = 0, f = (h = -a) * v, T = 0; T < b; T++) {
              for (k = 0; k < v; k++) {
                if (d = p = l = c = n = 0, h < 0) g = m = -h, u = k;else {
                  if (h >= b) break;
                  g = 0, m = h, u = k + f;
                }

                for (C = g; C < o && !(m >= b); C++) c += (_ = r[C])[M[u]], l += _[E[u]], p += _[j[u]], d += _[I[u]], n += i[C], m++, u += v;

                x[k + R] = c / n << 24 | l / n << 16 | p / n << 8 | d / n;
              }

              R += v, f += v, h++;
            }

            s._setPixels(y, x);
          }

          s._toPixels = function (e) {
            return e instanceof ImageData ? e.data : e.getContext("2d").getImageData(0, 0, e.width, e.height).data;
          }, s._getARGB = function (e, t) {
            var n = 4 * t;
            return e[n + 3] << 24 & 4278190080 | e[n] << 16 & 16711680 | e[n + 1] << 8 & 65280 | 255 & e[n + 2];
          }, s._setPixels = function (e, t) {
            for (var n = 0, a = 0, o = e.length; a < o; a++) e[0 + (n = 4 * a)] = (16711680 & t[a]) >>> 16, e[n + 1] = (65280 & t[a]) >>> 8, e[n + 2] = 255 & t[a], e[n + 3] = (4278190080 & t[a]) >>> 24;
          }, s._toImageData = function (e) {
            return e instanceof ImageData ? e : e.getContext("2d").getImageData(0, 0, e.width, e.height);
          }, s._createImageData = function (e, t) {
            return s._tmpCanvas = document.createElement("canvas"), s._tmpCtx = s._tmpCanvas.getContext("2d"), this._tmpCtx.createImageData(e, t);
          }, s.apply = function (e, t, n) {
            var a = e.getContext("2d"),
                o = a.getImageData(0, 0, e.width, e.height),
                i = t(o, n);
            i instanceof ImageData ? a.putImageData(i, 0, 0, 0, 0, e.width, e.height) : a.putImageData(o, 0, 0, 0, 0, e.width, e.height);
          }, s.threshold = function (e, t) {
            var n = s._toPixels(e);

            void 0 === t && (t = .5);

            for (var a = Math.floor(255 * t), o = 0; o < n.length; o += 4) {
              var i;
              i = .2126 * n[o] + .7152 * n[o + 1] + .0722 * n[o + 2] >= a ? 255 : 0, n[o] = n[o + 1] = n[o + 2] = i;
            }
          }, s.gray = function (e) {
            for (var t = s._toPixels(e), n = 0; n < t.length; n += 4) {
              var a = .2126 * t[n] + .7152 * t[n + 1] + .0722 * t[n + 2];
              t[n] = t[n + 1] = t[n + 2] = a;
            }
          }, s.opaque = function (e) {
            for (var t = s._toPixels(e), n = 0; n < t.length; n += 4) t[n + 3] = 255;

            return t;
          }, s.invert = function (e) {
            for (var t = s._toPixels(e), n = 0; n < t.length; n += 4) t[n] = 255 - t[n], t[n + 1] = 255 - t[n + 1], t[n + 2] = 255 - t[n + 2];
          }, s.posterize = function (e, t) {
            var n = s._toPixels(e);

            if (t < 2 || t > 255) throw new Error("Level must be greater than 2 and less than 255 for posterize");

            for (var a = t - 1, o = 0; o < n.length; o += 4) {
              var i = n[o],
                  r = n[o + 1],
                  l = n[o + 2];
              n[o] = 255 * (i * t >> 8) / a, n[o + 1] = 255 * (r * t >> 8) / a, n[o + 2] = 255 * (l * t >> 8) / a;
            }
          }, s.dilate = function (e) {
            for (var t, n, a, o, i, r, l, p, d, c, u, m, h, f, g, y, v, b = s._toPixels(e), w = 0, x = b.length ? b.length / 4 : 0, S = new Int32Array(x); w < x;) for (t = w, n = w + e.width; w < n;) a = o = s._getARGB(b, w), (l = w - 1) < t && (l = w), (r = w + 1) >= n && (r = w), (p = w - e.width) < 0 && (p = 0), (d = w + e.width) >= x && (d = w), m = s._getARGB(b, p), u = s._getARGB(b, l), h = s._getARGB(b, d), (g = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) > (i = 77 * (a >> 16 & 255) + 151 * (a >> 8 & 255) + 28 * (255 & a)) && (o = u, i = g), (f = 77 * ((c = s._getARGB(b, r)) >> 16 & 255) + 151 * (c >> 8 & 255) + 28 * (255 & c)) > i && (o = c, i = f), (y = 77 * (m >> 16 & 255) + 151 * (m >> 8 & 255) + 28 * (255 & m)) > i && (o = m, i = y), (v = 77 * (h >> 16 & 255) + 151 * (h >> 8 & 255) + 28 * (255 & h)) > i && (o = h, i = v), S[w++] = o;

            s._setPixels(b, S);
          }, s.erode = function (e) {
            for (var t, n, a, o, i, r, l, p, d, c, u, m, h, f, g, y, v, b = s._toPixels(e), w = 0, x = b.length ? b.length / 4 : 0, S = new Int32Array(x); w < x;) for (t = w, n = w + e.width; w < n;) a = o = s._getARGB(b, w), (l = w - 1) < t && (l = w), (r = w + 1) >= n && (r = w), (p = w - e.width) < 0 && (p = 0), (d = w + e.width) >= x && (d = w), m = s._getARGB(b, p), u = s._getARGB(b, l), h = s._getARGB(b, d), (g = 77 * (u >> 16 & 255) + 151 * (u >> 8 & 255) + 28 * (255 & u)) < (i = 77 * (a >> 16 & 255) + 151 * (a >> 8 & 255) + 28 * (255 & a)) && (o = u, i = g), (f = 77 * ((c = s._getARGB(b, r)) >> 16 & 255) + 151 * (c >> 8 & 255) + 28 * (255 & c)) < i && (o = c, i = f), (y = 77 * (m >> 16 & 255) + 151 * (m >> 8 & 255) + 28 * (255 & m)) < i && (o = m, i = y), (v = 77 * (h >> 16 & 255) + 151 * (h >> 8 & 255) + 28 * (255 & h)) < i && (o = h, i = v), S[w++] = o;

            s._setPixels(b, S);
          }, s.blur = function (e, t) {
            l(e, t);
          }, t.exports = s;
        }, {}],
        43: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = [];
          a.prototype.createImage = function (e, t) {
            return a._validateParameters("createImage", arguments), new a.Image(e, t);
          }, a.prototype.saveCanvas = function () {
            a._validateParameters("saveCanvas", arguments);

            var e,
                t,
                n,
                o,
                i = [].slice.call(arguments);

            switch (arguments[0] instanceof HTMLCanvasElement ? (e = arguments[0], i.shift()) : arguments[0] instanceof a.Element ? (e = arguments[0].elt, i.shift()) : e = this._curElement && this._curElement.elt, i.length >= 1 && (t = i[0]), i.length >= 2 && (n = i[1]), n = n || a.prototype._checkFileExtension(t, n)[1] || "png") {
              default:
                o = "image/png";
                break;

              case "jpeg":
              case "jpg":
                o = "image/jpeg";
            }

            e.toBlob(function (e) {
              a.prototype.downloadFile(e, t, n);
            }, o);
          }, a.prototype.saveFrames = function (e, t, n, i, r) {
            a._validateParameters("saveFrames", arguments);

            var s = n || 3;
            s = a.prototype.constrain(s, 0, 15), s *= 1e3;
            var l = i || 15;
            l = a.prototype.constrain(l, 0, 22);
            var p = 0,
                d = a.prototype._makeFrame,
                c = this._curElement.elt,
                u = setInterval(function () {
              d(e + p, t, c), p++;
            }, 1e3 / l);
            setTimeout(function () {
              if (clearInterval(u), r) r(o);else for (var e = 0; e < o.length; e++) {
                var t = o[e];
                a.prototype.downloadFile(t.imageData, t.filename, t.ext);
              }
              o = [];
            }, s + .01);
          }, a.prototype._makeFrame = function (e, t, n) {
            var a, i;
            if (a = this ? this._curElement.elt : n, t) switch (t.toLowerCase()) {
              case "png":
                i = "image/png";
                break;

              case "jpeg":
              case "jpg":
                i = "image/jpeg";
                break;

              default:
                i = "image/png";
            } else t = "png", i = "image/png";
            var r = a.toDataURL(i);
            r = r.replace(i, "image/octet-stream");
            var s = {};
            s.imageData = r, s.filename = e, s.ext = t, o.push(s);
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        44: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("./filters"),
              i = e("../core/helpers"),
              r = e("../core/constants");

          function s(e, t) {
            return e > 0 && e < t ? e : t;
          }

          e("../core/error_helpers"), a.prototype.loadImage = function (e, t, n) {
            a._validateParameters("loadImage", arguments);

            var o = new Image(),
                i = new a.Image(1, 1, this),
                r = this;
            return o.onload = function () {
              i.width = i.canvas.width = o.width, i.height = i.canvas.height = o.height, i.drawingContext.drawImage(o, 0, 0), i.modified = !0, "function" == typeof t && t(i), r._decrementPreload();
            }, o.onerror = function (e) {
              a._friendlyFileLoadError(0, o.src), "function" == typeof n ? n(e) : console.error(e);
            }, 0 !== e.indexOf("data:image/") && (o.crossOrigin = "Anonymous"), o.src = e, i;
          }, a.prototype.image = function (e, t, n, o, r, l, p, d, c) {
            a._validateParameters("image", arguments);

            var u = e.width,
                m = e.height;
            e.elt && e.elt.videoWidth && !e.canvas && (u = e.elt.videoWidth, m = e.elt.videoHeight);
            var h = t,
                f = n,
                g = o || u,
                y = r || m,
                v = l || 0,
                b = p || 0,
                w = d || u,
                x = c || m;
            w = s(w, u), x = s(x, m);
            var S = 1;
            e.elt && !e.canvas && e.elt.style.width && (S = e.elt.videoWidth && !o ? e.elt.videoWidth : e.elt.width, S /= parseInt(e.elt.style.width, 10)), v *= S, b *= S, x *= S, w *= S;
            var k = i.modeAdjust(h, f, g, y, this._renderer._imageMode);

            this._renderer.image(e, v, b, w, x, k.x, k.y, k.w, k.h);
          }, a.prototype.tint = function () {
            a._validateParameters("tint", arguments);

            var e = this.color.apply(this, arguments);
            this._renderer._tint = e.levels;
          }, a.prototype.noTint = function () {
            this._renderer._tint = null;
          }, a.prototype._getTintedImageCanvas = function (e) {
            if (!e.canvas) return e;

            var t = o._toPixels(e.canvas),
                n = document.createElement("canvas");

            n.width = e.canvas.width, n.height = e.canvas.height;

            for (var a = n.getContext("2d"), i = a.createImageData(e.canvas.width, e.canvas.height), r = i.data, s = 0; s < t.length; s += 4) {
              var l = t[s],
                  p = t[s + 1],
                  d = t[s + 2],
                  c = t[s + 3];
              r[s] = l * this._renderer._tint[0] / 255, r[s + 1] = p * this._renderer._tint[1] / 255, r[s + 2] = d * this._renderer._tint[2] / 255, r[s + 3] = c * this._renderer._tint[3] / 255;
            }

            return a.putImageData(i, 0, 0), n;
          }, a.prototype.imageMode = function (e) {
            a._validateParameters("imageMode", arguments), e !== r.CORNER && e !== r.CORNERS && e !== r.CENTER || (this._renderer._imageMode = e);
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/error_helpers": 20,
          "../core/helpers": 21,
          "../core/main": 24,
          "./filters": 42
        }],
        45: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("./filters");
          a.Image = function (e, t) {
            this.width = e, this.height = t, this.canvas = document.createElement("canvas"), this.canvas.width = this.width, this.canvas.height = this.height, this.drawingContext = this.canvas.getContext("2d"), this._pixelDensity = 1, this._modified = !1, this._pixelsDirty = !0, this.pixels = [];
          }, a.Image.prototype._setProperty = function (e, t) {
            this[e] = t, this.setModified(!0);
          }, a.Image.prototype.loadPixels = function () {
            a.Renderer2D.prototype.loadPixels.call(this), this.setModified(!0);
          }, a.Image.prototype.updatePixels = function (e, t, n, o) {
            a.Renderer2D.prototype.updatePixels.call(this, e, t, n, o), this.setModified(!0);
          }, a.Image.prototype.get = function (e, t, n, o) {
            return a.prototype.get.call(this, e, t, n, o);
          }, a.Image.prototype.set = function (e, t, n) {
            a.Renderer2D.prototype.set.call(this, e, t, n), this.setModified(!0);
          }, a.Image.prototype.resize = function (e, t) {
            0 === e && 0 === t ? (e = this.canvas.width, t = this.canvas.height) : 0 === e ? e = this.canvas.width * t / this.canvas.height : 0 === t && (t = this.canvas.height * e / this.canvas.width), e = Math.floor(e), t = Math.floor(t);
            var n = document.createElement("canvas");
            n.width = e, n.height = t, n.getContext("2d").drawImage(this.canvas, 0, 0, this.canvas.width, this.canvas.height, 0, 0, n.width, n.height), this.canvas.width = this.width = e, this.canvas.height = this.height = t, this.drawingContext.drawImage(n, 0, 0, e, t, 0, 0, e, t), this.pixels.length > 0 && this.loadPixels(), this.setModified(!0), this._pixelsDirty = !0;
          }, a.Image.prototype.copy = function () {
            var e, t, n, o, i, r, s, l, p;
            if (9 === arguments.length) e = arguments[0], t = arguments[1], n = arguments[2], o = arguments[3], i = arguments[4], r = arguments[5], s = arguments[6], l = arguments[7], p = arguments[8];else {
              if (8 !== arguments.length) throw new Error("Signature not supported");
              e = this, t = arguments[0], n = arguments[1], o = arguments[2], i = arguments[3], r = arguments[4], s = arguments[5], l = arguments[6], p = arguments[7];
            }
            a.Renderer2D._copyHelper(this, e, t, n, o, i, r, s, l, p), this._pixelsDirty = !0;
          }, a.Image.prototype.mask = function (e) {
            void 0 === e && (e = this);
            var t = this.drawingContext.globalCompositeOperation,
                n = 1;
            e instanceof a.Renderer && (n = e._pInst._pixelDensity);
            var o = [e, 0, 0, n * e.width, n * e.height, 0, 0, this.width, this.height];
            this.drawingContext.globalCompositeOperation = "destination-in", a.Image.prototype.copy.apply(this, o), this.drawingContext.globalCompositeOperation = t, this.setModified(!0);
          }, a.Image.prototype.filter = function (e, t) {
            o.apply(this.canvas, o[e.toLowerCase()], t), this.setModified(!0);
          }, a.Image.prototype.blend = function () {
            a.prototype.blend.apply(this, arguments), this.setModified(!0);
          }, a.Image.prototype.setModified = function (e) {
            this._modified = e;
          }, a.Image.prototype.isModified = function () {
            return this._modified;
          }, a.Image.prototype.save = function (e, t) {
            a.prototype.saveCanvas(this.canvas, e, t);
          }, t.exports = a.Image;
        }, {
          "../core/main": 24,
          "./filters": 42
        }],
        46: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("./filters");
          e("../color/p5.Color"), a.prototype.pixels = [], a.prototype.blend = function () {
            a._validateParameters("blend", arguments), this._renderer ? this._renderer.blend.apply(this._renderer, arguments) : a.Renderer2D.prototype.blend.apply(this, arguments);
          }, a.prototype.copy = function () {
            a._validateParameters("copy", arguments), a.Renderer2D.prototype.copy.apply(this._renderer, arguments);
          }, a.prototype.filter = function (e, t) {
            a._validateParameters("filter", arguments), void 0 !== this.canvas ? o.apply(this.canvas, o[e.toLowerCase()], t) : o.apply(this.elt, o[e.toLowerCase()], t);
          }, a.prototype.get = function (e, t, n, o) {
            return void 0 === n && void 0 === o && (void 0 === e && void 0 === t ? (e = t = 0, n = this.width, o = this.height) : n = o = 1), e + n < 0 || t + o < 0 || e >= this.width || t >= this.height ? [0, 0, 0, 255] : (e = Math.floor(e), t = Math.floor(t), n = Math.floor(n), o = Math.floor(o), this instanceof a.Image ? a.Renderer2D.prototype.get.call(this, e, t, n, o) : this._renderer.get(e, t, n, o));
          }, a.prototype.loadPixels = function () {
            a._validateParameters("loadPixels", arguments), this._renderer.loadPixels();
          }, a.prototype.set = function (e, t, n) {
            this._renderer.set(e, t, n);
          }, a.prototype.updatePixels = function (e, t, n, o) {
            a._validateParameters("updatePixels", arguments), 0 !== this.pixels.length && this._renderer.updatePixels(e, t, n, o);
          }, t.exports = a;
        }, {
          "../color/p5.Color": 16,
          "../core/main": 24,
          "./filters": 42
        }],
        47: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          e("whatwg-fetch"), e("es6-promise").polyfill();
          var o = e("fetch-jsonp");

          function i(e, t) {
            var n = {};
            if (void 0 === (t = t || [])) for (var a = 0; a < e.length; a++) t[a.toString()] = a;

            for (var o = 0; o < t.length; o++) {
              var i = t[o],
                  r = e[o];
              n[i] = r;
            }

            return n;
          }

          function r(e) {
            return e.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;").replace(/'/g, "&#039;");
          }

          function s(e, t) {
            t && !0 !== t && "true" !== t || (t = ""), e || (e = "untitled");
            var n = "";
            return e && e.indexOf(".") > -1 && (n = e.split(".").pop()), t && n !== t && (e = e + "." + (n = t)), [e, n];
          }

          e("../core/error_helpers"), a.prototype.loadJSON = function () {
            a._validateParameters("loadJSON", arguments);

            for (var e, t, n, o = arguments[0], i = {}, r = "json", s = 1; s < arguments.length; s++) {
              var l = arguments[s];
              "string" == typeof l ? "jsonp" !== l && "json" !== l || (r = l) : "function" == typeof l ? e ? t = l : e = l : "object" == typeof l && l.hasOwnProperty("jsonpCallback") && (r = "jsonp", n = l);
            }

            var p = this;
            return this.httpDo(o, "GET", n, r, function (t) {
              for (var n in t) i[n] = t[n];

              void 0 !== e && e(t), p._decrementPreload();
            }, function (e) {
              if (a._friendlyFileLoadError(5, o), !t) throw e;
              t(e);
            }), i;
          }, a.prototype.loadStrings = function () {
            a._validateParameters("loadStrings", arguments);

            for (var e, t, n = [], o = 1; o < arguments.length; o++) {
              var i = arguments[o];
              "function" == typeof i && (void 0 === e ? e = i : void 0 === t && (t = i));
            }

            var r = this;
            return a.prototype.httpDo.call(this, arguments[0], "GET", "text", function (t) {
              var a = t.replace(/\r\n/g, "\r").replace(/\n/g, "\r").split(/\r/);
              Array.prototype.push.apply(n, a), void 0 !== e && e(n), r._decrementPreload();
            }, function (e) {
              if (a._friendlyFileLoadError(3, arguments[0]), !t) throw e;
              t(e);
            }), n;
          }, a.prototype.loadTable = function (e) {
            var t,
                n,
                o = [],
                r = !1,
                s = e.substring(e.lastIndexOf(".") + 1, e.length),
                l = ",",
                p = !1;
            "tsv" === s && (l = "\t");

            for (var d = 1; d < arguments.length; d++) if ("function" == typeof arguments[d]) void 0 === t ? t = arguments[d] : void 0 === n && (n = arguments[d]);else if ("string" == typeof arguments[d]) if (o.push(arguments[d]), "header" === arguments[d] && (r = !0), "csv" === arguments[d]) {
              if (p) throw new Error("Cannot set multiple separator types.");
              l = ",", p = !0;
            } else if ("tsv" === arguments[d]) {
              if (p) throw new Error("Cannot set multiple separator types.");
              l = "\t", p = !0;
            }

            var c = new a.Table(),
                u = this;
            return this.httpDo(e, "GET", "table", function (e) {
              for (var n, o, s = {}, p = [], m = 0, h = null, f = function () {
                s.currentState = 0, s.token = "";
              }, g = function () {
                h.push(s.token), f();
              }, y = function () {
                s.currentState = 4, p.push(h), h = null;
              };;) {
                if (null == (n = e[m++])) {
                  if (s.escaped) throw new Error("Unclosed quote in file.");

                  if (h) {
                    g(), y();
                    break;
                  }
                }

                if (null === h && (s.escaped = !1, h = [], f()), 0 === s.currentState) {
                  if ('"' === n) {
                    s.escaped = !0, s.currentState = 1;
                    continue;
                  }

                  s.currentState = 1;
                }

                if (1 === s.currentState && s.escaped) {
                  if ('"' === n) '"' === e[m] ? (s.token += '"', m++) : (s.escaped = !1, s.currentState = 2);else {
                    if ("\r" === n) continue;
                    s.token += n;
                  }
                } else "\r" === n ? ("\n" === e[m] && m++, g(), y()) : "\n" === n ? (g(), y()) : n === l ? g() : 1 === s.currentState && (s.token += n);
              }

              if (r) c.columns = p.shift();else for (d = 0; d < p[0].length; d++) c.columns[d] = "null";

              for (d = 0; d < p.length; d++) (1 !== p[d].length || "undefined" !== p[d][0] && "" !== p[d][0]) && ((o = new a.TableRow()).arr = p[d], o.obj = i(p[d], c.columns), c.addRow(o));

              "function" == typeof t && t(c), u._decrementPreload();
            }, function (t) {
              a._friendlyFileLoadError(2, e), n ? n(t) : console.error(t);
            }), c;
          }, a.prototype.loadXML = function () {
            for (var e, t, n = new a.XML(), o = 1; o < arguments.length; o++) {
              var i = arguments[o];
              "function" == typeof i && (void 0 === e ? e = i : void 0 === t && (t = i));
            }

            var r = this;
            return this.httpDo(arguments[0], "GET", "xml", function (t) {
              for (var a in t) n[a] = t[a];

              void 0 !== e && e(n), r._decrementPreload();
            }, function (e) {
              if (a._friendlyFileLoadError(1, arguments[0]), !t) throw e;
              t(e);
            }), n;
          }, a.prototype.loadBytes = function (e, t, n) {
            var o = {},
                i = this;
            return this.httpDo(e, "GET", "arrayBuffer", function (e) {
              o.bytes = new Uint8Array(e), "function" == typeof t && t(o), i._decrementPreload();
            }, function (t) {
              if (a._friendlyFileLoadError(6, e), !n) throw t;
              n(t);
            }), o;
          }, a.prototype.httpGet = function () {
            a._validateParameters("httpGet", arguments);

            var e = Array.prototype.slice.call(arguments);
            return e.splice(1, 0, "GET"), a.prototype.httpDo.apply(this, e);
          }, a.prototype.httpPost = function () {
            a._validateParameters("httpPost", arguments);

            var e = Array.prototype.slice.call(arguments);
            return e.splice(1, 0, "POST"), a.prototype.httpDo.apply(this, e);
          }, a.prototype.httpDo = function () {
            for (var e, t, n, i, r, s = {}, l = 0, p = "text/plain", d = arguments.length - 1; d > 0 && "function" == typeof arguments[d]; d--) l++;

            var c = arguments.length - l,
                u = arguments[0];
            if (2 === c && "string" == typeof u && "object" == typeof arguments[1]) i = new Request(u, arguments[1]), t = arguments[2], n = arguments[3];else {
              for (var m, h = "GET", f = 1; f < arguments.length; f++) {
                var g = arguments[f];
                if ("string" == typeof g) "GET" === g || "POST" === g || "PUT" === g || "DELETE" === g ? h = g : "json" === g || "jsonp" === g || "binary" === g || "arrayBuffer" === g || "xml" === g || "text" === g || "table" === g ? e = g : m = g;else if ("number" == typeof g) m = g.toString();else if ("object" == typeof g) {
                  if (g.hasOwnProperty("jsonpCallback")) for (var y in g) s[y] = g[y];else g instanceof a.XML ? (m = g.serialize(), p = "application/xml") : (m = JSON.stringify(g), p = "application/json");
                } else "function" == typeof g && (t ? n = g : t = g);
              }

              i = new Request(u, {
                method: h,
                mode: "cors",
                body: m,
                headers: new Headers({
                  "Content-Type": p
                })
              });
            }
            return e || (e = -1 !== u.indexOf("json") ? "json" : -1 !== u.indexOf("xml") ? "xml" : "text"), (r = (r = "jsonp" === e ? o(u, s) : fetch(i)).then(function (t) {
              if (!t.ok) {
                var n = new Error(t.body);
                throw n.status = t.status, n.ok = !1, n;
              }

              var o = t.headers.get("content-length");

              switch (o && o > 64e6 && a._friendlyFileLoadError(7, u), e) {
                case "json":
                case "jsonp":
                  return t.json();

                case "binary":
                  return t.blob();

                case "arrayBuffer":
                  return t.arrayBuffer();

                case "xml":
                  return t.text().then(function (e) {
                    var t = new DOMParser().parseFromString(e, "text/xml");
                    return new a.XML(t.documentElement);
                  });

                default:
                  return t.text();
              }
            })).then(t || function () {}), r.catch(n || console.error), r;
          }, window.URL = window.URL || window.webkitURL, a.prototype._pWriters = [], a.prototype.createWriter = function (e, t) {
            var n;

            for (var o in a.prototype._pWriters) if (a.prototype._pWriters[o].name === e) return n = new a.PrintWriter(e + this.millis(), t), a.prototype._pWriters.push(n), n;

            return n = new a.PrintWriter(e, t), a.prototype._pWriters.push(n), n;
          }, a.PrintWriter = function (e, t) {
            var n = this;
            this.name = e, this.content = "", this.write = function (e) {
              this.content += e;
            }, this.print = function (e) {
              this.content += e + "\n";
            }, this.clear = function () {
              this.content = "";
            }, this.close = function () {
              var o = [];

              for (var i in o.push(this.content), a.prototype.writeFile(o, e, t), a.prototype._pWriters) a.prototype._pWriters[i].name === this.name && a.prototype._pWriters.splice(i, 1);

              n.clear(), n = {};
            };
          }, a.prototype.save = function (e, t, n) {
            var o = arguments,
                i = this._curElement ? this._curElement.elt : this.elt;
            if (0 !== o.length) {
              if (o[0] instanceof a.Renderer || o[0] instanceof a.Graphics) a.prototype.saveCanvas(o[0].elt, o[1], o[2]);else if (1 === o.length && "string" == typeof o[0]) a.prototype.saveCanvas(i, o[0]);else {
                var r = s(o[1], o[2])[1];

                switch (r) {
                  case "json":
                    return void a.prototype.saveJSON(o[0], o[1], o[2]);

                  case "txt":
                    return void a.prototype.saveStrings(o[0], o[1], o[2]);

                  default:
                    o[0] instanceof Array ? a.prototype.saveStrings(o[0], o[1], o[2]) : o[0] instanceof a.Table ? a.prototype.saveTable(o[0], o[1], o[2]) : o[0] instanceof a.Image ? a.prototype.saveCanvas(o[0].canvas, o[1]) : o[0] instanceof a.SoundFile && a.prototype.saveSound(o[0], o[1], o[2], o[3]);
                }
              }
            } else a.prototype.saveCanvas(i);
          }, a.prototype.saveJSON = function (e, t, n) {
            var o;
            a._validateParameters("saveJSON", arguments), o = n ? JSON.stringify(e) : JSON.stringify(e, void 0, 2), this.saveStrings(o.split("\n"), t, "json");
          }, a.prototype.saveJSONObject = a.prototype.saveJSON, a.prototype.saveJSONArray = a.prototype.saveJSON, a.prototype.saveStrings = function (e, t, n) {
            a._validateParameters("saveStrings", arguments);

            for (var o = n || "txt", i = this.createWriter(t, o), r = 0; r < e.length; r++) e.length, i.print(e[r]);

            i.close(), i.clear();
          }, a.prototype.saveTable = function (e, t, n) {
            var o;
            a._validateParameters("saveTable", arguments), o = void 0 === n ? t.substring(t.lastIndexOf(".") + 1, t.length) : n;
            var i = this.createWriter(t, o),
                s = e.columns,
                l = ",";

            if ("tsv" === o && (l = "\t"), "html" !== o) {
              if ("0" !== s[0]) {
                for (var p = 0; p < s.length; p++) p < s.length - 1 ? i.write(s[p] + l) : i.write(s[p]);

                i.write("\n");
              }

              for (var d = 0; d < e.rows.length; d++) {
                var c;

                for (c = 0; c < e.rows[d].arr.length; c++) c < e.rows[d].arr.length - 1 ? i.write(e.rows[d].arr[c] + l) : (e.rows.length, i.write(e.rows[d].arr[c]));

                i.write("\n");
              }
            } else {
              i.print("<html>"), i.print("<head>");
              var u = '  <meta http-equiv="content-type" content';

              if (u += '="text/html;charset=utf-8" />', i.print(u), i.print("</head>"), i.print("<body>"), i.print("  <table>"), "0" !== s[0]) {
                i.print("    <tr>");

                for (var m = 0; m < s.length; m++) {
                  var h = r(s[m]);
                  i.print("      <td>" + h), i.print("      </td>");
                }

                i.print("    </tr>");
              }

              for (var f = 0; f < e.rows.length; f++) {
                i.print("    <tr>");

                for (var g = 0; g < e.columns.length; g++) {
                  var y = e.rows[f].getString(g),
                      v = r(y);
                  i.print("      <td>" + v), i.print("      </td>");
                }

                i.print("    </tr>");
              }

              i.print("  </table>"), i.print("</body>"), i.print("</html>");
            }

            i.close(), i.clear();
          }, a.prototype.writeFile = function (e, t, n) {
            var o = "application/octet-stream";
            a.prototype._isSafari() && (o = "text/plain");
            var i = new Blob(e, {
              type: o
            });
            a.prototype.downloadFile(i, t, n);
          }, a.prototype.downloadFile = function (t, n, o) {
            var i = s(n, o),
                r = i[0];
            if (t instanceof Blob) e("file-saver").saveAs(t, r);else {
              var l = document.createElement("a");

              if (l.href = t, l.download = r, l.onclick = function (e) {
                var t;
                t = e, document.body.removeChild(t.target), e.stopPropagation();
              }, l.style.display = "none", document.body.appendChild(l), a.prototype._isSafari()) {
                var p = "Hello, Safari user! To download this file...\n";
                p += "1. Go to File --\x3e Save As.\n", p += '2. Choose "Page Source" as the Format.\n', p += '3. Name it with this extension: ."' + i[1] + '"', alert(p);
              }

              l.click();
            }
          }, a.prototype._checkFileExtension = s, a.prototype._isSafari = function () {
            return Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor") > 0;
          }, t.exports = a;
        }, {
          "../core/error_helpers": 20,
          "../core/main": 24,
          "es6-promise": 5,
          "fetch-jsonp": 6,
          "file-saver": 7,
          "whatwg-fetch": 12
        }],
        48: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.Table = function (e) {
            this.columns = [], this.rows = [];
          }, a.Table.prototype.addRow = function (e) {
            var t = e || new a.TableRow();
            if (void 0 === t.arr || void 0 === t.obj) throw new Error("invalid TableRow: " + t);
            return t.table = this, this.rows.push(t), t;
          }, a.Table.prototype.removeRow = function (e) {
            this.rows[e].table = null;
            var t = this.rows.splice(e + 1, this.rows.length);
            this.rows.pop(), this.rows = this.rows.concat(t);
          }, a.Table.prototype.getRow = function (e) {
            return this.rows[e];
          }, a.Table.prototype.getRows = function () {
            return this.rows;
          }, a.Table.prototype.findRow = function (e, t) {
            if ("string" == typeof t) {
              for (var n = 0; n < this.rows.length; n++) if (this.rows[n].obj[t] === e) return this.rows[n];
            } else for (var a = 0; a < this.rows.length; a++) if (this.rows[a].arr[t] === e) return this.rows[a];

            return null;
          }, a.Table.prototype.findRows = function (e, t) {
            var n = [];
            if ("string" == typeof t) for (var a = 0; a < this.rows.length; a++) this.rows[a].obj[t] === e && n.push(this.rows[a]);else for (var o = 0; o < this.rows.length; o++) this.rows[o].arr[t] === e && n.push(this.rows[o]);
            return n;
          }, a.Table.prototype.matchRow = function (e, t) {
            if ("number" == typeof t) {
              for (var n = 0; n < this.rows.length; n++) if (this.rows[n].arr[t].match(e)) return this.rows[n];
            } else for (var a = 0; a < this.rows.length; a++) if (this.rows[a].obj[t].match(e)) return this.rows[a];

            return null;
          }, a.Table.prototype.matchRows = function (e, t) {
            var n = [];
            if ("number" == typeof t) for (var a = 0; a < this.rows.length; a++) this.rows[a].arr[t].match(e) && n.push(this.rows[a]);else for (var o = 0; o < this.rows.length; o++) this.rows[o].obj[t].match(e) && n.push(this.rows[o]);
            return n;
          }, a.Table.prototype.getColumn = function (e) {
            var t = [];
            if ("string" == typeof e) for (var n = 0; n < this.rows.length; n++) t.push(this.rows[n].obj[e]);else for (var a = 0; a < this.rows.length; a++) t.push(this.rows[a].arr[e]);
            return t;
          }, a.Table.prototype.clearRows = function () {
            delete this.rows, this.rows = [];
          }, a.Table.prototype.addColumn = function (e) {
            var t = e || null;
            this.columns.push(t);
          }, a.Table.prototype.getColumnCount = function () {
            return this.columns.length;
          }, a.Table.prototype.getRowCount = function () {
            return this.rows.length;
          }, a.Table.prototype.removeTokens = function (e, t) {
            for (var n = function (e) {
              return e.replace(/[-/\\^$*+?.()|[\]{}]/g, "\\$&");
            }, a = [], o = 0; o < e.length; o++) a.push(n(e.charAt(o)));

            var i = new RegExp(a.join("|"), "g");
            if (void 0 === t) for (var r = 0; r < this.columns.length; r++) for (var s = 0; s < this.rows.length; s++) {
              var l = this.rows[s].arr[r];
              l = l.replace(i, ""), this.rows[s].arr[r] = l, this.rows[s].obj[this.columns[r]] = l;
            } else if ("string" == typeof t) for (var p = 0; p < this.rows.length; p++) {
              var d = this.rows[p].obj[t];
              d = d.replace(i, ""), this.rows[p].obj[t] = d;
              var c = this.columns.indexOf(t);
              this.rows[p].arr[c] = d;
            } else for (var u = 0; u < this.rows.length; u++) {
              var m = this.rows[u].arr[t];
              m = m.replace(i, ""), this.rows[u].arr[t] = m, this.rows[u].obj[this.columns[t]] = m;
            }
          }, a.Table.prototype.trim = function (e) {
            var t = new RegExp(" ", "g");
            if (void 0 === e) for (var n = 0; n < this.columns.length; n++) for (var a = 0; a < this.rows.length; a++) {
              var o = this.rows[a].arr[n];
              o = o.replace(t, ""), this.rows[a].arr[n] = o, this.rows[a].obj[this.columns[n]] = o;
            } else if ("string" == typeof e) for (var i = 0; i < this.rows.length; i++) {
              var r = this.rows[i].obj[e];
              r = r.replace(t, ""), this.rows[i].obj[e] = r;
              var s = this.columns.indexOf(e);
              this.rows[i].arr[s] = r;
            } else for (var l = 0; l < this.rows.length; l++) {
              var p = this.rows[l].arr[e];
              p = p.replace(t, ""), this.rows[l].arr[e] = p, this.rows[l].obj[this.columns[e]] = p;
            }
          }, a.Table.prototype.removeColumn = function (e) {
            var t, n;
            "string" == typeof e ? (t = e, n = this.columns.indexOf(e)) : (n = e, t = this.columns[e]);
            var a = this.columns.splice(n + 1, this.columns.length);
            this.columns.pop(), this.columns = this.columns.concat(a);

            for (var o = 0; o < this.rows.length; o++) {
              var i = this.rows[o].arr,
                  r = i.splice(n + 1, i.length);
              i.pop(), this.rows[o].arr = i.concat(r), delete this.rows[o].obj[t];
            }
          }, a.Table.prototype.set = function (e, t, n) {
            this.rows[e].set(t, n);
          }, a.Table.prototype.setNum = function (e, t, n) {
            this.rows[e].setNum(t, n);
          }, a.Table.prototype.setString = function (e, t, n) {
            this.rows[e].setString(t, n);
          }, a.Table.prototype.get = function (e, t) {
            return this.rows[e].get(t);
          }, a.Table.prototype.getNum = function (e, t) {
            return this.rows[e].getNum(t);
          }, a.Table.prototype.getString = function (e, t) {
            return this.rows[e].getString(t);
          }, a.Table.prototype.getObject = function (e) {
            for (var t, n = {}, a = 0; a < this.rows.length; a++) if (t = this.rows[a].obj, "string" == typeof e) {
              if (!(this.columns.indexOf(e) >= 0)) throw new Error('This table has no column named "' + e + '"');
              n[t[e]] = t;
            } else n[a] = this.rows[a].obj;

            return n;
          }, a.Table.prototype.getArray = function () {
            for (var e = [], t = 0; t < this.rows.length; t++) e.push(this.rows[t].arr);

            return e;
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        49: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.TableRow = function (e, t) {
            var n = [],
                a = {};
            e && (t = t || ",", n = e.split(t));

            for (var o = 0; o < n.length; o++) {
              var i = o,
                  r = n[o];
              a[i] = r;
            }

            this.arr = n, this.obj = a, this.table = null;
          }, a.TableRow.prototype.set = function (e, t) {
            if ("string" == typeof e) {
              var n = this.table.columns.indexOf(e);
              if (!(n >= 0)) throw new Error('This table has no column named "' + e + '"');
              this.obj[e] = t, this.arr[n] = t;
            } else {
              if (!(e < this.table.columns.length)) throw new Error("Column #" + e + " is out of the range of this table");
              this.arr[e] = t;
              var a = this.table.columns[e];
              this.obj[a] = t;
            }
          }, a.TableRow.prototype.setNum = function (e, t) {
            var n = parseFloat(t);
            this.set(e, n);
          }, a.TableRow.prototype.setString = function (e, t) {
            var n = t.toString();
            this.set(e, n);
          }, a.TableRow.prototype.get = function (e) {
            return "string" == typeof e ? this.obj[e] : this.arr[e];
          }, a.TableRow.prototype.getNum = function (e) {
            var t;
            if ("NaN" === (t = "string" == typeof e ? parseFloat(this.obj[e]) : parseFloat(this.arr[e])).toString()) throw "Error: " + this.obj[e] + " is NaN (Not a Number)";
            return t;
          }, a.TableRow.prototype.getString = function (e) {
            return "string" == typeof e ? this.obj[e].toString() : this.arr[e].toString();
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        50: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");

          function o(e) {
            for (var t = [], n = 0; n < e.length; n++) t.push(new a.XML(e[n]));

            return t;
          }

          a.XML = function (e) {
            if (e) this.DOM = e;else {
              var t = document.implementation.createDocument(null, "doc");
              this.DOM = t.createElement("root");
            }
          }, a.XML.prototype.getParent = function () {
            return new a.XML(this.DOM.parentElement);
          }, a.XML.prototype.getName = function () {
            return this.DOM.tagName;
          }, a.XML.prototype.setName = function (e) {
            var t = this.DOM.innerHTML,
                n = this.DOM.attributes,
                a = document.implementation.createDocument(null, "default").createElement(e);
            a.innerHTML = t;

            for (var o = 0; o < n.length; o++) a.setAttribute(n[o].nodeName, n.nodeValue);

            this.DOM = a;
          }, a.XML.prototype.hasChildren = function () {
            return this.DOM.children.length > 0;
          }, a.XML.prototype.listChildren = function () {
            for (var e = [], t = 0; t < this.DOM.childNodes.length; t++) e.push(this.DOM.childNodes[t].nodeName);

            return e;
          }, a.XML.prototype.getChildren = function (e) {
            return o(e ? this.DOM.getElementsByTagName(e) : this.DOM.children);
          }, a.XML.prototype.getChild = function (e) {
            if ("string" != typeof e) return new a.XML(this.DOM.children[e]);

            for (var t = 0; t < this.DOM.children.length; t++) {
              var n = this.DOM.children[t];
              if (n.tagName === e) return new a.XML(n);
            }
          }, a.XML.prototype.addChild = function (e) {
            e instanceof a.XML && this.DOM.appendChild(e.DOM);
          }, a.XML.prototype.removeChild = function (e) {
            var t = -1;

            if ("string" == typeof e) {
              for (var n = 0; n < this.DOM.children.length; n++) if (this.DOM.children[n].tagName === e) {
                t = n;
                break;
              }
            } else t = e;

            -1 !== t && this.DOM.removeChild(this.DOM.children[t]);
          }, a.XML.prototype.getAttributeCount = function () {
            return this.DOM.attributes.length;
          }, a.XML.prototype.listAttributes = function () {
            for (var e = [], t = 0; t < this.DOM.attributes.length; t++) {
              var n = this.DOM.attributes[t];
              e.push(n.nodeName);
            }

            return e;
          }, a.XML.prototype.hasAttribute = function (e) {
            for (var t = {}, n = 0; n < this.DOM.attributes.length; n++) {
              var a = this.DOM.attributes[n];
              t[a.nodeName] = a.nodeValue;
            }

            return !!t[e];
          }, a.XML.prototype.getNum = function (e, t) {
            for (var n = {}, a = 0; a < this.DOM.attributes.length; a++) {
              var o = this.DOM.attributes[a];
              n[o.nodeName] = o.nodeValue;
            }

            return Number(n[e]) || t || 0;
          }, a.XML.prototype.getString = function (e, t) {
            for (var n = {}, a = 0; a < this.DOM.attributes.length; a++) {
              var o = this.DOM.attributes[a];
              n[o.nodeName] = o.nodeValue;
            }

            return n[e] ? String(n[e]) : t || null;
          }, a.XML.prototype.setAttribute = function (e, t) {
            this.DOM.setAttribute(e, t);
          }, a.XML.prototype.getContent = function (e) {
            return this.DOM.textContent.replace(/\s\s+/g, ",") || e || null;
          }, a.XML.prototype.setContent = function (e) {
            this.DOM.children.length || (this.DOM.textContent = e);
          }, a.XML.prototype.serialize = function () {
            return new XMLSerializer().serializeToString(this.DOM);
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        51: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");

          function o(e, t, n) {
            if ("function" == typeof Math.hypot) return Math.hypot.apply(null, arguments);

            for (var a = arguments.length, o = [], i = 0, r = 0; r < a; r++) {
              var s = arguments[r];
              if ((s = +s) == 1 / 0 || s === -1 / 0) return 1 / 0;
              (s = Math.abs(s)) > i && (i = s), o[r] = s;
            }

            0 === i && (i = 1);

            for (var l = 0, p = 0, d = 0; d < a; d++) {
              var c = o[d] / i,
                  u = c * c - p,
                  m = l + u;
              p = m - l - u, l = m;
            }

            return Math.sqrt(l) * i;
          }

          a.prototype.abs = Math.abs, a.prototype.ceil = Math.ceil, a.prototype.constrain = function (e, t, n) {
            return a._validateParameters("constrain", arguments), Math.max(Math.min(e, n), t);
          }, a.prototype.dist = function () {
            return a._validateParameters("dist", arguments), 4 === arguments.length ? o(arguments[2] - arguments[0], arguments[3] - arguments[1]) : 6 === arguments.length ? o(arguments[3] - arguments[0], arguments[4] - arguments[1], arguments[5] - arguments[2]) : void 0;
          }, a.prototype.exp = Math.exp, a.prototype.floor = Math.floor, a.prototype.lerp = function (e, t, n) {
            return a._validateParameters("lerp", arguments), n * (t - e) + e;
          }, a.prototype.log = Math.log, a.prototype.mag = function (e, t) {
            return a._validateParameters("mag", arguments), o(e, t);
          }, a.prototype.map = function (e, t, n, o, i, r) {
            a._validateParameters("map", arguments);

            var s = (e - t) / (n - t) * (i - o) + o;
            return r ? o < i ? this.constrain(s, o, i) : this.constrain(s, i, o) : s;
          }, a.prototype.max = function () {
            return a._validateParameters("max", arguments), arguments[0] instanceof Array ? Math.max.apply(null, arguments[0]) : Math.max.apply(null, arguments);
          }, a.prototype.min = function () {
            return a._validateParameters("min", arguments), arguments[0] instanceof Array ? Math.min.apply(null, arguments[0]) : Math.min.apply(null, arguments);
          }, a.prototype.norm = function (e, t, n) {
            return a._validateParameters("norm", arguments), this.map(e, t, n, 0, 1);
          }, a.prototype.pow = Math.pow, a.prototype.round = Math.round, a.prototype.sq = function (e) {
            return e * e;
          }, a.prototype.sqrt = Math.sqrt, t.exports = a;
        }, {
          "../core/main": 24
        }],
        52: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.createVector = function (e, t, n) {
            return this instanceof a ? new a.Vector(this, arguments) : new a.Vector(e, t, n);
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        53: [function (e, t, n) {
          "use strict";

          var a,
              o = e("../core/main"),
              i = 4,
              r = .5,
              s = function (e) {
            return .5 * (1 - Math.cos(e * Math.PI));
          };

          o.prototype.noise = function (e, t, n) {
            if (t = t || 0, n = n || 0, null == a) {
              a = new Array(4096);

              for (var o = 0; o < 4096; o++) a[o] = Math.random();
            }

            e < 0 && (e = -e), t < 0 && (t = -t), n < 0 && (n = -n);

            for (var l, p, d, c, u, m = Math.floor(e), h = Math.floor(t), f = Math.floor(n), g = e - m, y = t - h, v = n - f, b = 0, w = .5, x = 0; x < i; x++) {
              var S = m + (h << 4) + (f << 8);
              l = s(g), p = s(y), d = a[4095 & S], d += l * (a[S + 1 & 4095] - d), c = a[S + 16 & 4095], d += p * ((c += l * (a[S + 16 + 1 & 4095] - c)) - d), c = a[4095 & (S += 256)], c += l * (a[S + 1 & 4095] - c), u = a[S + 16 & 4095], c += p * ((u += l * (a[S + 16 + 1 & 4095] - u)) - c), b += (d += s(v) * (c - d)) * w, w *= r, m <<= 1, h <<= 1, f <<= 1, (g *= 2) >= 1 && (m++, g--), (y *= 2) >= 1 && (h++, y--), (v *= 2) >= 1 && (f++, v--);
            }

            return b;
          }, o.prototype.noiseDetail = function (e, t) {
            e > 0 && (i = e), t > 0 && (r = t);
          }, o.prototype.noiseSeed = function (e) {
            var t = function () {
              var e,
                  t,
                  n = 4294967296;
              return {
                setSeed: function (a) {
                  t = e = (null == a ? Math.random() * n : a) >>> 0;
                },
                getSeed: function () {
                  return e;
                },
                rand: function () {
                  return (t = (1664525 * t + 1013904223) % n) / n;
                }
              };
            }();

            t.setSeed(e), a = new Array(4096);

            for (var n = 0; n < 4096; n++) a[n] = t.rand();
          }, t.exports = o;
        }, {
          "../core/main": 24
        }],
        54: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          a.Vector = function () {
            var e, t, n;
            arguments[0] instanceof a ? (this.p5 = arguments[0], e = arguments[1][0] || 0, t = arguments[1][1] || 0, n = arguments[1][2] || 0) : (e = arguments[0] || 0, t = arguments[1] || 0, n = arguments[2] || 0), this.x = e, this.y = t, this.z = n;
          }, a.Vector.prototype.toString = function () {
            return "p5.Vector Object : [" + this.x + ", " + this.y + ", " + this.z + "]";
          }, a.Vector.prototype.set = function (e, t, n) {
            return e instanceof a.Vector ? (this.x = e.x || 0, this.y = e.y || 0, this.z = e.z || 0, this) : e instanceof Array ? (this.x = e[0] || 0, this.y = e[1] || 0, this.z = e[2] || 0, this) : (this.x = e || 0, this.y = t || 0, this.z = n || 0, this);
          }, a.Vector.prototype.copy = function () {
            return this.p5 ? new a.Vector(this.p5, [this.x, this.y, this.z]) : new a.Vector(this.x, this.y, this.z);
          }, a.Vector.prototype.add = function (e, t, n) {
            return e instanceof a.Vector ? (this.x += e.x || 0, this.y += e.y || 0, this.z += e.z || 0, this) : e instanceof Array ? (this.x += e[0] || 0, this.y += e[1] || 0, this.z += e[2] || 0, this) : (this.x += e || 0, this.y += t || 0, this.z += n || 0, this);
          }, a.Vector.prototype.sub = function (e, t, n) {
            return e instanceof a.Vector ? (this.x -= e.x || 0, this.y -= e.y || 0, this.z -= e.z || 0, this) : e instanceof Array ? (this.x -= e[0] || 0, this.y -= e[1] || 0, this.z -= e[2] || 0, this) : (this.x -= e || 0, this.y -= t || 0, this.z -= n || 0, this);
          }, a.Vector.prototype.mult = function (e) {
            return "number" == typeof e && isFinite(e) ? (this.x *= e, this.y *= e, this.z *= e, this) : (console.warn("p5.Vector.prototype.mult:", "n is undefined or not a finite number"), this);
          }, a.Vector.prototype.div = function (e) {
            return "number" == typeof e && isFinite(e) ? 0 === e ? (console.warn("p5.Vector.prototype.div:", "divide by 0"), this) : (this.x /= e, this.y /= e, this.z /= e, this) : (console.warn("p5.Vector.prototype.div:", "n is undefined or not a finite number"), this);
          }, a.Vector.prototype.mag = function () {
            return Math.sqrt(this.magSq());
          }, a.Vector.prototype.magSq = function () {
            var e = this.x,
                t = this.y,
                n = this.z;
            return e * e + t * t + n * n;
          }, a.Vector.prototype.dot = function (e, t, n) {
            return e instanceof a.Vector ? this.dot(e.x, e.y, e.z) : this.x * (e || 0) + this.y * (t || 0) + this.z * (n || 0);
          }, a.Vector.prototype.cross = function (e) {
            var t = this.y * e.z - this.z * e.y,
                n = this.z * e.x - this.x * e.z,
                o = this.x * e.y - this.y * e.x;
            return this.p5 ? new a.Vector(this.p5, [t, n, o]) : new a.Vector(t, n, o);
          }, a.Vector.prototype.dist = function (e) {
            return e.copy().sub(this).mag();
          }, a.Vector.prototype.normalize = function () {
            var e = this.mag();
            return 0 !== e && this.mult(1 / e), this;
          }, a.Vector.prototype.limit = function (e) {
            var t = this.magSq();
            return t > e * e && this.div(Math.sqrt(t)).mult(e), this;
          }, a.Vector.prototype.setMag = function (e) {
            return this.normalize().mult(e);
          }, a.Vector.prototype.heading = function () {
            var e = Math.atan2(this.y, this.x);
            return this.p5 ? this.p5._fromRadians(e) : e;
          }, a.Vector.prototype.rotate = function (e) {
            var t = this.heading() + e;
            this.p5 && (t = this.p5._toRadians(t));
            var n = this.mag();
            return this.x = Math.cos(t) * n, this.y = Math.sin(t) * n, this;
          }, a.Vector.prototype.angleBetween = function (e) {
            var t = this.dot(e) / (this.mag() * e.mag()),
                n = Math.acos(Math.min(1, Math.max(-1, t)));
            return this.p5 ? this.p5._fromRadians(n) : n;
          }, a.Vector.prototype.lerp = function (e, t, n, o) {
            return e instanceof a.Vector ? this.lerp(e.x, e.y, e.z, t) : (this.x += (e - this.x) * o || 0, this.y += (t - this.y) * o || 0, this.z += (n - this.z) * o || 0, this);
          }, a.Vector.prototype.array = function () {
            return [this.x || 0, this.y || 0, this.z || 0];
          }, a.Vector.prototype.equals = function (e, t, n) {
            var o, i, r;
            return e instanceof a.Vector ? (o = e.x || 0, i = e.y || 0, r = e.z || 0) : e instanceof Array ? (o = e[0] || 0, i = e[1] || 0, r = e[2] || 0) : (o = e || 0, i = t || 0, r = n || 0), this.x === o && this.y === i && this.z === r;
          }, a.Vector.fromAngle = function (e, t) {
            return void 0 === t && (t = 1), new a.Vector(t * Math.cos(e), t * Math.sin(e), 0);
          }, a.Vector.fromAngles = function (e, t, n) {
            void 0 === n && (n = 1);
            var o = Math.cos(t),
                i = Math.sin(t),
                r = Math.cos(e),
                s = Math.sin(e);
            return new a.Vector(n * s * i, -n * r, n * s * o);
          }, a.Vector.random2D = function () {
            return this.fromAngle(Math.random() * o.TWO_PI);
          }, a.Vector.random3D = function () {
            var e = Math.random() * o.TWO_PI,
                t = 2 * Math.random() - 1,
                n = Math.sqrt(1 - t * t),
                i = n * Math.cos(e),
                r = n * Math.sin(e);
            return new a.Vector(i, r, t);
          }, a.Vector.add = function (e, t, n) {
            return n ? n.set(e) : n = e.copy(), n.add(t), n;
          }, a.Vector.sub = function (e, t, n) {
            return n ? n.set(e) : n = e.copy(), n.sub(t), n;
          }, a.Vector.mult = function (e, t, n) {
            return n ? n.set(e) : n = e.copy(), n.mult(t), n;
          }, a.Vector.div = function (e, t, n) {
            return n ? n.set(e) : n = e.copy(), n.div(t), n;
          }, a.Vector.dot = function (e, t) {
            return e.dot(t);
          }, a.Vector.cross = function (e, t) {
            return e.cross(t);
          }, a.Vector.dist = function (e, t) {
            return e.dist(t);
          }, a.Vector.lerp = function (e, t, n, a) {
            return a ? a.set(e) : a = e.copy(), a.lerp(t, n), a;
          }, a.Vector.mag = function (e) {
            var t = e.x,
                n = e.y,
                a = e.z,
                o = t * t + n * n + a * a;
            return Math.sqrt(o);
          }, t.exports = a.Vector;
        }, {
          "../core/constants": 18,
          "../core/main": 24
        }],
        55: [function (e, t, n) {
          "use strict";

          var a,
              o,
              i,
              r = e("../core/main"),
              s = !1,
              l = !1,
              p = 0,
              d = (i = 4294967296, {
            setSeed: function (e) {
              o = a = (null == e ? Math.random() * i : e) >>> 0;
            },
            getSeed: function () {
              return a;
            },
            rand: function () {
              return (o = (1664525 * o + 1013904223) % i) / i;
            }
          });
          r.prototype.randomSeed = function (e) {
            d.setSeed(e), s = !0, l = !1;
          }, r.prototype.random = function (e, t) {
            var n;
            if (n = s ? d.rand() : Math.random(), void 0 === e) return n;
            if (void 0 === t) return e instanceof Array ? e[Math.floor(n * e.length)] : n * e;

            if (e > t) {
              var a = e;
              e = t, t = a;
            }

            return n * (t - e) + e;
          }, r.prototype.randomGaussian = function (e, t) {
            var n, a, o, i;
            if (l) n = p, l = !1;else {
              do {
                i = (a = this.random(2) - 1) * a + (o = this.random(2) - 1) * o;
              } while (i >= 1);

              n = a * (i = Math.sqrt(-2 * Math.log(i) / i)), p = o * i, l = !0;
            }
            return n * (t || 1) + (e || 0);
          }, t.exports = r;
        }, {
          "../core/main": 24
        }],
        56: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          a.prototype._angleMode = o.RADIANS, a.prototype.acos = function (e) {
            return this._fromRadians(Math.acos(e));
          }, a.prototype.asin = function (e) {
            return this._fromRadians(Math.asin(e));
          }, a.prototype.atan = function (e) {
            return this._fromRadians(Math.atan(e));
          }, a.prototype.atan2 = function (e, t) {
            return this._fromRadians(Math.atan2(e, t));
          }, a.prototype.cos = function (e) {
            return Math.cos(this._toRadians(e));
          }, a.prototype.sin = function (e) {
            return Math.sin(this._toRadians(e));
          }, a.prototype.tan = function (e) {
            return Math.tan(this._toRadians(e));
          }, a.prototype.degrees = function (e) {
            return e * o.RAD_TO_DEG;
          }, a.prototype.radians = function (e) {
            return e * o.DEG_TO_RAD;
          }, a.prototype.angleMode = function (e) {
            e !== o.DEGREES && e !== o.RADIANS || (this._angleMode = e);
          }, a.prototype._toRadians = function (e) {
            return this._angleMode === o.DEGREES ? e * o.DEG_TO_RAD : e;
          }, a.prototype._toDegrees = function (e) {
            return this._angleMode === o.RADIANS ? e * o.RAD_TO_DEG : e;
          }, a.prototype._fromRadians = function (e) {
            return this._angleMode === o.DEGREES ? e * o.RAD_TO_DEG : e;
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/main": 24
        }],
        57: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.textAlign = function (e, t) {
            return a._validateParameters("textAlign", arguments), this._renderer.textAlign.apply(this._renderer, arguments);
          }, a.prototype.textLeading = function (e) {
            return a._validateParameters("textLeading", arguments), this._renderer.textLeading.apply(this._renderer, arguments);
          }, a.prototype.textSize = function (e) {
            return a._validateParameters("textSize", arguments), this._renderer.textSize.apply(this._renderer, arguments);
          }, a.prototype.textStyle = function (e) {
            return a._validateParameters("textStyle", arguments), this._renderer.textStyle.apply(this._renderer, arguments);
          }, a.prototype.textWidth = function (e) {
            return a._validateParameters("textWidth", arguments), 0 === e.length ? 0 : this._renderer.textWidth.apply(this._renderer, arguments);
          }, a.prototype.textAscent = function () {
            return a._validateParameters("textAscent", arguments), this._renderer.textAscent();
          }, a.prototype.textDescent = function () {
            return a._validateParameters("textDescent", arguments), this._renderer.textDescent();
          }, a.prototype._updateTextMetrics = function () {
            return this._renderer._updateTextMetrics();
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        58: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants"),
              i = e("opentype.js");
          e("../core/error_helpers"), a.prototype.loadFont = function (e, t, n) {
            a._validateParameters("loadFont", arguments);

            var o = new a.Font(this),
                r = this;
            return i.load(e, function (i, s) {
              if (i) return a._friendlyFileLoadError(4, e), void 0 !== n ? n(i) : void console.error(i, e);
              o.font = s, void 0 !== t && t(o), r._decrementPreload();
              var l,
                  p,
                  d = e.split("\\").pop().split("/").pop(),
                  c = d.lastIndexOf("."),
                  u = c < 1 ? null : d.substr(c + 1);
              ["ttf", "otf", "woff", "woff2"].indexOf(u) > -1 && (l = d.substr(0, c), (p = document.createElement("style")).appendChild(document.createTextNode("\n@font-face {\nfont-family: " + l + ";\nsrc: url(" + e + ");\n}\n")), document.head.appendChild(p));
            }), o;
          }, a.prototype.text = function (e, t, n, o, i) {
            return a._validateParameters("text", arguments), this._renderer._doFill || this._renderer._doStroke ? this._renderer.text.apply(this._renderer, arguments) : this;
          }, a.prototype.textFont = function (e, t) {
            if (a._validateParameters("textFont", arguments), arguments.length) {
              if (!e) throw new Error("null font passed to textFont");
              return this._renderer._setProperty("_textFont", e), t && (this._renderer._setProperty("_textSize", t), this._renderer._setProperty("_textLeading", t * o._DEFAULT_LEADMULT)), this._renderer._applyTextProperties();
            }

            return this._renderer._textFont;
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/error_helpers": 20,
          "../core/main": 24,
          "opentype.js": 10
        }],
        59: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");

          function i(e, t) {
            for (var n = function (e, t) {
              if ("object" != typeof e) e = t;else for (var n in t) void 0 === e[n] && (e[n] = t[n]);
              return e;
            }(t, {
              sampleFactor: .1,
              simplifyThreshold: 0
            }), a = c(e, 0, 1), o = a / (a * n.sampleFactor), i = [], r = 0; r < a; r += o) i.push(c(e, r));

            return n.simplifyThreshold && function (e, t) {
              t = void 0 === t ? 0 : t;

              for (var n = e.length - 1; e.length > 3 && n >= 0; --n) l(s(e, n - 1), s(e, n), s(e, n + 1), t) && e.splice(n % e.length, 1);
            }(i, n.simplifyThreshold), i;
          }

          function r(e) {
            for (var t, n = [], a = 0; a < e.length; a++) "M" === e[a].type && (t && n.push(t), t = []), t.push((o = e[a], i = void 0, i = [o.type], "M" === o.type || "L" === o.type ? i.push(o.x, o.y) : "C" === o.type ? i.push(o.x1, o.y1, o.x2, o.y2, o.x, o.y) : "Q" === o.type && i.push(o.x1, o.y1, o.x, o.y), i));

            var o, i;
            return n.push(t), n;
          }

          function s(e, t) {
            var n = e.length;
            return e[t < 0 ? t % n + n : t % n];
          }

          function l(e, t, n, a) {
            if (!a) return 0 === function (e, t, n) {
              return (t[0] - e[0]) * (n[1] - e[1]) - (n[0] - e[0]) * (t[1] - e[1]);
            }(e, t, n);
            void 0 === l.tmpPoint1 && (l.tmpPoint1 = [], l.tmpPoint2 = []);
            var o = l.tmpPoint1,
                i = l.tmpPoint2;
            o.x = t.x - e.x, o.y = t.y - e.y, i.x = n.x - t.x, i.y = n.y - t.y;
            var r = o.x * i.x + o.y * i.y,
                s = Math.sqrt(o.x * o.x + o.y * o.y),
                p = Math.sqrt(i.x * i.x + i.y * i.y);
            return Math.acos(r / (s * p)) < a;
          }

          function p(e, t, n, a, o, i, r, s, l) {
            var p = 1 - l,
                d = Math.pow(p, 3),
                c = Math.pow(p, 2),
                u = l * l,
                m = u * l,
                h = d * e + 3 * c * l * n + 3 * p * l * l * o + m * r,
                f = d * t + 3 * c * l * a + 3 * p * l * l * i + m * s,
                g = e + 2 * l * (n - e) + u * (o - 2 * n + e),
                y = t + 2 * l * (a - t) + u * (i - 2 * a + t),
                v = n + 2 * l * (o - n) + u * (r - 2 * o + n),
                b = a + 2 * l * (i - a) + u * (s - 2 * i + a),
                w = p * e + l * n,
                x = p * t + l * a,
                S = p * o + l * r,
                k = p * i + l * s,
                T = 90 - 180 * Math.atan2(g - v, y - b) / Math.PI;
            return (g > v || y < b) && (T += 180), {
              x: h,
              y: f,
              m: {
                x: g,
                y: y
              },
              n: {
                x: v,
                y: b
              },
              start: {
                x: w,
                y: x
              },
              end: {
                x: S,
                y: k
              },
              alpha: T
            };
          }

          function d(e, t, n, a, o, i, r, s, l) {
            return null == l ? y(e, t, n, a, o, i, r, s) : p(e, t, n, a, o, i, r, s, function (e, t, n, a, o, i, r, s, l) {
              if (!(l < 0 || y(e, t, n, a, o, i, r, s) < l)) {
                var p,
                    d = .5,
                    c = 1 - d;

                for (p = y(e, t, n, a, o, i, r, s, c); Math.abs(p - l) > .01;) p = y(e, t, n, a, o, i, r, s, c += (p < l ? 1 : -1) * (d /= 2));

                return c;
              }
            }(e, t, n, a, o, i, r, s, l));
          }

          function c(e, t, n) {
            e = function (e, t) {
              var n,
                  a = u(e),
                  o = t && u(t),
                  i = {
                x: 0,
                y: 0,
                bx: 0,
                by: 0,
                X: 0,
                Y: 0,
                qx: null,
                qy: null
              },
                  r = {
                x: 0,
                y: 0,
                bx: 0,
                by: 0,
                X: 0,
                Y: 0,
                qx: null,
                qy: null
              },
                  s = [],
                  l = [],
                  p = function (e, t, n) {
                var a, o;
                if (!e) return ["C", t.x, t.y, t.x, t.y, t.x, t.y];

                switch (e[0] in {
                  T: 1,
                  Q: 1
                } || (t.qx = t.qy = null), e[0]) {
                  case "M":
                    t.X = e[1], t.Y = e[2];
                    break;

                  case "A":
                    e = ["C"].concat(m.apply(0, [t.x, t.y].concat(e.slice(1))));
                    break;

                  case "S":
                    "C" === n || "S" === n ? (a = 2 * t.x - t.bx, o = 2 * t.y - t.by) : (a = t.x, o = t.y), e = ["C", a, o].concat(e.slice(1));
                    break;

                  case "T":
                    "Q" === n || "T" === n ? (t.qx = 2 * t.x - t.qx, t.qy = 2 * t.y - t.qy) : (t.qx = t.x, t.qy = t.y), e = ["C"].concat(g(t.x, t.y, t.qx, t.qy, e[1], e[2]));
                    break;

                  case "Q":
                    t.qx = e[1], t.qy = e[2], e = ["C"].concat(g(t.x, t.y, e[1], e[2], e[3], e[4]));
                    break;

                  case "L":
                    e = ["C"].concat(f(t.x, t.y, e[1], e[2]));
                    break;

                  case "H":
                    e = ["C"].concat(f(t.x, t.y, e[1], t.y));
                    break;

                  case "V":
                    e = ["C"].concat(f(t.x, t.y, t.x, e[1]));
                    break;

                  case "Z":
                    e = ["C"].concat(f(t.x, t.y, t.X, t.Y));
                }

                return e;
              },
                  d = function (e, t) {
                if (e[t].length > 7) {
                  e[t].shift();

                  for (var i = e[t]; i.length;) s[t] = "A", o && (l[t] = "A"), e.splice(t++, 0, ["C"].concat(i.splice(0, 6)));

                  e.splice(t, 1), n = Math.max(a.length, o && o.length || 0);
                }
              },
                  c = function (e, t, i, r, s) {
                e && t && "M" === e[s][0] && "M" !== t[s][0] && (t.splice(s, 0, ["M", r.x, r.y]), i.bx = 0, i.by = 0, i.x = e[s][1], i.y = e[s][2], n = Math.max(a.length, o && o.length || 0));
              },
                  h = "",
                  y = "";

              n = Math.max(a.length, o && o.length || 0);

              for (var v = 0; v < n; v++) {
                a[v] && (h = a[v][0]), "C" !== h && (s[v] = h, v && (y = s[v - 1])), a[v] = p(a[v], i, y), "A" !== s[v] && "C" === h && (s[v] = "C"), d(a, v), o && (o[v] && (h = o[v][0]), "C" !== h && (l[v] = h, v && (y = l[v - 1])), o[v] = p(o[v], r, y), "A" !== l[v] && "C" === h && (l[v] = "C"), d(o, v)), c(a, o, i, r, v), c(o, a, r, i, v);
                var b = a[v],
                    w = o && o[v],
                    x = b.length,
                    S = o && w.length;
                i.x = b[x - 2], i.y = b[x - 1], i.bx = parseFloat(b[x - 4]) || i.x, i.by = parseFloat(b[x - 3]) || i.y, r.bx = o && (parseFloat(w[S - 4]) || r.x), r.by = o && (parseFloat(w[S - 3]) || r.y), r.x = o && w[S - 2], r.y = o && w[S - 1];
              }

              return o ? [a, o] : a;
            }(e);

            for (var a, o, i, r, s, l = 0, c = 0, h = e.length; c < h; c++) {
              if ("M" === (i = e[c])[0]) a = +i[1], o = +i[2];else {
                if (l + (r = d(a, o, i[1], i[2], i[3], i[4], i[5], i[6])) > t && !n) return {
                  x: (s = d(a, o, i[1], i[2], i[3], i[4], i[5], i[6], t - l)).x,
                  y: s.y,
                  alpha: s.alpha
                };
                l += r, a = +i[5], o = +i[6];
              }
              i.shift();
            }

            return (s = n ? l : p(a, o, i[0], i[1], i[2], i[3], i[4], i[5], 1)).alpha && (s = {
              x: s.x,
              y: s.y,
              alpha: s.alpha
            }), s;
          }

          function u(e) {
            var t = [],
                n = 0,
                a = 0,
                o = 0,
                i = 0,
                r = 0;
            if (!e) return t;
            "M" === e[0][0] && (o = n = +e[0][1], i = a = +e[0][2], r++, t[0] = ["M", n, a]);

            for (var s, l, p, d = 3 === e.length && "M" === e[0][0] && "R" === e[1][0].toUpperCase() && "Z" === e[2][0].toUpperCase(), c = r, u = e.length; c < u; c++) {
              if (t.push(l = []), (p = e[c])[0] !== String.prototype.toUpperCase.call(p[0])) switch (l[0] = String.prototype.toUpperCase.call(p[0]), l[0]) {
                case "A":
                  l[1] = p[1], l[2] = p[2], l[3] = p[3], l[4] = p[4], l[5] = p[5], l[6] = +(p[6] + n), l[7] = +(p[7] + a);
                  break;

                case "V":
                  l[1] = +p[1] + a;
                  break;

                case "H":
                  l[1] = +p[1] + n;
                  break;

                case "R":
                  for (var m = 2, f = (s = [n, a].concat(p.slice(1))).length; m < f; m++) s[m] = +s[m] + n, s[++m] = +s[m] + a;

                  t.pop(), t = t.concat(h(s, d));
                  break;

                case "M":
                  o = +p[1] + n, i = +p[2] + a;
                  break;

                default:
                  for (m = 1, f = p.length; m < f; m++) l[m] = +p[m] + (m % 2 ? n : a);

              } else if ("R" === p[0]) s = [n, a].concat(p.slice(1)), t.pop(), t = t.concat(h(s, d)), l = ["R"].concat(p.slice(-2));else for (var g = 0, y = p.length; g < y; g++) l[g] = p[g];

              switch (l[0]) {
                case "Z":
                  n = o, a = i;
                  break;

                case "H":
                  n = l[1];
                  break;

                case "V":
                  a = l[1];
                  break;

                case "M":
                  o = l[l.length - 2], i = l[l.length - 1];
                  break;

                default:
                  n = l[l.length - 2], a = l[l.length - 1];
              }
            }

            return t;
          }

          function m(e, t, n, a, o, i, r, s, l, p) {
            var d,
                c,
                u,
                h,
                f,
                g = Math.PI,
                y = 120 * g / 180,
                v = g / 180 * (+o || 0),
                b = [],
                w = function (e, t, n) {
              return {
                x: e * Math.cos(n) - t * Math.sin(n),
                y: e * Math.sin(n) + t * Math.cos(n)
              };
            };

            if (p) d = p[0], c = p[1], u = p[2], h = p[3];else {
              e = (f = w(e, t, -v)).x, t = f.y;
              var x = (e - (s = (f = w(s, l, -v)).x)) / 2,
                  S = (t - (l = f.y)) / 2,
                  k = x * x / (n * n) + S * S / (a * a);
              k > 1 && (n *= k = Math.sqrt(k), a *= k);

              var T = n * n,
                  C = a * a,
                  _ = (i === r ? -1 : 1) * Math.sqrt(Math.abs((T * C - T * S * S - C * x * x) / (T * S * S + C * x * x)));

              u = _ * n * S / a + (e + s) / 2, h = _ * -a * x / n + (t + l) / 2, d = Math.asin(((t - h) / a).toFixed(9)), c = Math.asin(((l - h) / a).toFixed(9)), (d = e < u ? g - d : d) < 0 && (d = 2 * g + d), (c = s < u ? g - c : c) < 0 && (c = 2 * g + c), r && d > c && (d -= 2 * g), !r && c > d && (c -= 2 * g);
            }
            var M = c - d;

            if (Math.abs(M) > y) {
              var E = c,
                  j = s,
                  I = l;
              c = d + y * (r && c > d ? 1 : -1), b = m(s = u + n * Math.cos(c), l = h + a * Math.sin(c), n, a, o, 0, r, j, I, [c, E, u, h]);
            }

            M = c - d;
            var R = Math.cos(d),
                N = Math.sin(d),
                A = Math.cos(c),
                D = Math.sin(c),
                L = Math.tan(M / 4),
                P = 4 / 3 * n * L,
                O = 4 / 3 * a * L,
                F = [e, t],
                B = [e + P * N, t - O * R],
                G = [s + P * D, l - O * A],
                U = [s, l];
            if (B[0] = 2 * F[0] - B[0], B[1] = 2 * F[1] - B[1], p) return [B, G, U].concat(b);

            for (var z = [], q = 0, V = (b = [B, G, U].concat(b).join().split(",")).length; q < V; q++) z[q] = q % 2 ? w(b[q - 1], b[q], v).y : w(b[q], b[q + 1], v).x;

            return z;
          }

          function h(e, t) {
            for (var n = [], a = 0, o = e.length; o - 2 * !t > a; a += 2) {
              var i = [{
                x: +e[a - 2],
                y: +e[a - 1]
              }, {
                x: +e[a],
                y: +e[a + 1]
              }, {
                x: +e[a + 2],
                y: +e[a + 3]
              }, {
                x: +e[a + 4],
                y: +e[a + 5]
              }];
              t ? a ? o - 4 === a ? i[3] = {
                x: +e[0],
                y: +e[1]
              } : o - 2 === a && (i[2] = {
                x: +e[0],
                y: +e[1]
              }, i[3] = {
                x: +e[2],
                y: +e[3]
              }) : i[0] = {
                x: +e[o - 2],
                y: +e[o - 1]
              } : o - 4 === a ? i[3] = i[2] : a || (i[0] = {
                x: +e[a],
                y: +e[a + 1]
              }), n.push(["C", (-i[0].x + 6 * i[1].x + i[2].x) / 6, (-i[0].y + 6 * i[1].y + i[2].y) / 6, (i[1].x + 6 * i[2].x - i[3].x) / 6, (i[1].y + 6 * i[2].y - i[3].y) / 6, i[2].x, i[2].y]);
            }

            return n;
          }

          function f(e, t, n, a) {
            return [e, t, n, a, n, a];
          }

          function g(e, t, n, a, o, i) {
            return [1 / 3 * e + 2 / 3 * n, 1 / 3 * t + 2 / 3 * a, 1 / 3 * o + 2 / 3 * n, 1 / 3 * i + 2 / 3 * a, o, i];
          }

          function y(e, t, n, a, o, i, r, s, l) {
            null == l && (l = 1);

            for (var p = (l = l > 1 ? 1 : l < 0 ? 0 : l) / 2, d = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816], c = 0, u = [.2491, .2491, .2335, .2335, .2032, .2032, .1601, .1601, .1069, .1069, .0472, .0472], m = 0; m < 12; m++) {
              var h = p * d[m] + p,
                  f = v(h, e, n, o, r),
                  g = v(h, t, a, i, s),
                  y = f * f + g * g;
              c += u[m] * Math.sqrt(y);
            }

            return p * c;
          }

          function v(e, t, n, a, o) {
            return e * (e * (-3 * t + 9 * n - 9 * a + 3 * o) + 6 * t - 12 * n + 6 * a) - 3 * t + 3 * n;
          }

          a.Font = function (e) {
            this.parent = e, this.cache = {}, this.font = void 0;
          }, a.Font.prototype.textBounds = function (e, t, n, a, i) {
            t = void 0 !== t ? t : 0, n = void 0 !== n ? n : 0;
            var r,
                s = i && i.renderer && i.renderer._pInst || this.parent,
                l = s._renderer.drawingContext;

            if (l.textAlign || o.LEFT, l.textBaseline || o.BASELINE, a = a || s._renderer._textSize, !r) {
              var p,
                  d,
                  c,
                  u,
                  m = [],
                  h = [],
                  f = this._scale(a);

              this.font.forEachGlyph(e, t, n, a, i, function (e, t, n, a) {
                var o = e.getMetrics();
                m.push(t + o.xMin * f), m.push(t + o.xMax * f), h.push(n + -o.yMin * f), h.push(n + -o.yMax * f);
              }), p = Math.min.apply(null, m), d = Math.min.apply(null, h), c = Math.max.apply(null, m), r = {
                x: p,
                y: d,
                h: Math.max.apply(null, h) - d,
                w: c - p,
                advance: p - t
              }, u = this._handleAlignment(s._renderer, e, r.x, r.y, r.w + r.advance), r.x = u.x, r.y = u.y;
            }

            return r;
          }, a.Font.prototype.textToPoints = function (e, t, n, a, o) {
            var s = 0,
                l = [],
                p = this._getGlyphs(e);

            function d(t) {
              return p[t].name && "space" === p[t].name || e.length === p.length && " " === e[t] || p[t].index && 3 === p[t].index;
            }

            a = a || this.parent._renderer._textSize;

            for (var c = 0; c < p.length; c++) {
              if (!d(c)) for (var u = r(p[c].getPath(t, n, a).commands), m = 0; m < u.length; m++) for (var h = i(u[m], o), f = 0; f < h.length; f++) h[f].x += s, l.push(h[f]);
              s += p[c].advanceWidth * this._scale(a);
            }

            return l;
          }, a.Font.prototype._getGlyphs = function (e) {
            return this.font.stringToGlyphs(e);
          }, a.Font.prototype._getPath = function (e, t, n, a) {
            var o = (a && a.renderer && a.renderer._pInst || this.parent)._renderer,
                i = this._handleAlignment(o, e, t, n);

            return this.font.getPath(e, i.x, i.y, o._textSize, a);
          }, a.Font.prototype._getPathData = function (e, t, n, a) {
            var o = 3;
            return "string" == typeof e && arguments.length > 2 ? e = this._getPath(e, t, n, a) : "object" == typeof t && (a = t), a && "number" == typeof a.decimals && (o = a.decimals), e.toPathData(o);
          }, a.Font.prototype._getSVG = function (e, t, n, a) {
            var o = 3;
            return "string" == typeof e && arguments.length > 2 ? e = this._getPath(e, t, n, a) : "object" == typeof t && (a = t), a && ("number" == typeof a.decimals && (o = a.decimals), "number" == typeof a.strokeWidth && (e.strokeWidth = a.strokeWidth), void 0 !== a.fill && (e.fill = a.fill), void 0 !== a.stroke && (e.stroke = a.stroke)), e.toSVG(o);
          }, a.Font.prototype._renderPath = function (e, t, n, a) {
            var i,
                r = a && a.renderer || this.parent._renderer,
                s = r.drawingContext;
            i = "object" == typeof e && e.commands ? e.commands : this._getPath(e, t, n, a).commands, s.beginPath();

            for (var l = 0; l < i.length; l += 1) {
              var p = i[l];
              "M" === p.type ? s.moveTo(p.x, p.y) : "L" === p.type ? s.lineTo(p.x, p.y) : "C" === p.type ? s.bezierCurveTo(p.x1, p.y1, p.x2, p.y2, p.x, p.y) : "Q" === p.type ? s.quadraticCurveTo(p.x1, p.y1, p.x, p.y) : "Z" === p.type && s.closePath();
            }

            return r._doStroke && r._strokeSet && s.stroke(), r._doFill && (r._fillSet || r._setFill(o._DEFAULT_TEXT_FILL), s.fill()), this;
          }, a.Font.prototype._textWidth = function (e, t) {
            return this.font.getAdvanceWidth(e, t);
          }, a.Font.prototype._textAscent = function (e) {
            return this.font.ascender * this._scale(e);
          }, a.Font.prototype._textDescent = function (e) {
            return -this.font.descender * this._scale(e);
          }, a.Font.prototype._scale = function (e) {
            return 1 / this.font.unitsPerEm * (e || this.parent._renderer._textSize);
          }, a.Font.prototype._handleAlignment = function (e, t, n, a, i) {
            var r = e._textSize;

            switch (void 0 === i && (i = this._textWidth(t, r)), e._textAlign) {
              case o.CENTER:
                n -= i / 2;
                break;

              case o.RIGHT:
                n -= i;
            }

            switch (e._textBaseline) {
              case o.TOP:
                a += this._textAscent(r);
                break;

              case o.CENTER:
                a += this._textAscent(r) / 2;
                break;

              case o.BOTTOM:
                a -= this._textDescent(r);
            }

            return {
              x: n,
              y: a
            };
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/main": 24
        }],
        60: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.append = function (e, t) {
            return e.push(t), e;
          }, a.prototype.arrayCopy = function (e, t, n, a, o) {
            var i, r;
            void 0 !== o ? (r = Math.min(o, e.length), i = a, e = e.slice(t, r + t)) : (void 0 !== n ? (r = n, r = Math.min(r, e.length)) : r = e.length, i = 0, n = t, e = e.slice(0, r)), Array.prototype.splice.apply(n, [i, r].concat(e));
          }, a.prototype.concat = function (e, t) {
            return e.concat(t);
          }, a.prototype.reverse = function (e) {
            return e.reverse();
          }, a.prototype.shorten = function (e) {
            return e.pop(), e;
          }, a.prototype.shuffle = function (e, t) {
            for (var n, a, o = ArrayBuffer && ArrayBuffer.isView && ArrayBuffer.isView(e), i = (e = t || o ? e : e.slice()).length; i > 1;) n = Math.random() * i | 0, a = e[--i], e[i] = e[n], e[n] = a;

            return e;
          }, a.prototype.sort = function (e, t) {
            var n = t ? e.slice(0, Math.min(t, e.length)) : e,
                a = t ? e.slice(Math.min(t, e.length)) : [];
            return (n = "string" == typeof n[0] ? n.sort() : n.sort(function (e, t) {
              return e - t;
            })).concat(a);
          }, a.prototype.splice = function (e, t, n) {
            return Array.prototype.splice.apply(e, [n, 0].concat(t)), e;
          }, a.prototype.subset = function (e, t, n) {
            return void 0 !== n ? e.slice(t, t + n) : e.slice(t, e.length);
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        61: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.float = function (e) {
            return e instanceof Array ? e.map(parseFloat) : parseFloat(e);
          }, a.prototype.int = function (e, t) {
            return t = t || 10, "string" == typeof e ? parseInt(e, t) : "number" == typeof e ? 0 | e : "boolean" == typeof e ? e ? 1 : 0 : e instanceof Array ? e.map(function (e) {
              return a.prototype.int(e, t);
            }) : void 0;
          }, a.prototype.str = function (e) {
            return e instanceof Array ? e.map(a.prototype.str) : String(e);
          }, a.prototype.boolean = function (e) {
            return "number" == typeof e ? 0 !== e : "string" == typeof e ? "true" === e.toLowerCase() : "boolean" == typeof e ? e : e instanceof Array ? e.map(a.prototype.boolean) : void 0;
          }, a.prototype.byte = function (e) {
            var t = a.prototype.int(e, 10);
            return "number" == typeof t ? (t + 128) % 256 - 128 : t instanceof Array ? t.map(a.prototype.byte) : void 0;
          }, a.prototype.char = function (e) {
            return "number" != typeof e || isNaN(e) ? e instanceof Array ? e.map(a.prototype.char) : "string" == typeof e ? a.prototype.char(parseInt(e, 10)) : void 0 : String.fromCharCode(e);
          }, a.prototype.unchar = function (e) {
            return "string" == typeof e && 1 === e.length ? e.charCodeAt(0) : e instanceof Array ? e.map(a.prototype.unchar) : void 0;
          }, a.prototype.hex = function (e, t) {
            if (t = null == t ? t = 8 : t, e instanceof Array) return e.map(function (e) {
              return a.prototype.hex(e, t);
            });

            if ("number" == typeof e) {
              e < 0 && (e = 4294967295 + e + 1);

              for (var n = Number(e).toString(16).toUpperCase(); n.length < t;) n = "0" + n;

              return n.length >= t && (n = n.substring(n.length - t, n.length)), n;
            }
          }, a.prototype.unhex = function (e) {
            return e instanceof Array ? e.map(a.prototype.unhex) : parseInt("0x" + e, 16);
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        62: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");

          function o(e, t, n) {
            var a = e < 0,
                o = a ? e.toString().substring(1) : e.toString(),
                i = o.indexOf("."),
                r = -1 !== i ? o.substring(0, i) : o,
                s = -1 !== i ? o.substring(i + 1) : "",
                l = a ? "-" : "";

            if (void 0 !== n) {
              var p = "";
              (-1 !== i || n - s.length > 0) && (p = "."), s.length > n && (s = s.substring(0, n));

              for (var d = 0; d < t - r.length; d++) l += "0";

              l += r, l += p, l += s;

              for (var c = 0; c < n - s.length; c++) l += "0";

              return l;
            }

            for (var u = 0; u < Math.max(t - r.length, 0); u++) l += "0";

            return l += o;
          }

          function i(e, t) {
            var n = (e = e.toString()).indexOf("."),
                a = -1 !== n ? e.substring(n) : "",
                o = -1 !== n ? e.substring(0, n) : e;
            if (o = o.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ","), 0 === t) a = "";else if (void 0 !== t) if (t > a.length) for (var i = t - (a += -1 === n ? "." : "").length + 1, r = 0; r < i; r++) a += "0";else a = a.substring(0, t + 1);
            return o + a;
          }

          function r(e) {
            return parseFloat(e) > 0 ? "+" + e.toString() : e.toString();
          }

          function s(e) {
            return parseFloat(e) > 0 ? " " + e.toString() : e.toString();
          }

          e("../core/error_helpers"), a.prototype.join = function (e, t) {
            return a._validateParameters("join", arguments), e.join(t);
          }, a.prototype.match = function (e, t) {
            return a._validateParameters("match", arguments), e.match(t);
          }, a.prototype.matchAll = function (e, t) {
            a._validateParameters("matchAll", arguments);

            for (var n = new RegExp(t, "g"), o = n.exec(e), i = []; null !== o;) i.push(o), o = n.exec(e);

            return i;
          }, a.prototype.nf = function (e, t, n) {
            if (a._validateParameters("nf", arguments), e instanceof Array) return e.map(function (e) {
              return o(e, t, n);
            });
            var i = Object.prototype.toString.call(e);
            return "[object Arguments]" === i ? 3 === e.length ? this.nf(e[0], e[1], e[2]) : 2 === e.length ? this.nf(e[0], e[1]) : this.nf(e[0]) : o(e, t, n);
          }, a.prototype.nfc = function (e, t) {
            return a._validateParameters("nfc", arguments), e instanceof Array ? e.map(function (e) {
              return i(e, t);
            }) : i(e, t);
          }, a.prototype.nfp = function () {
            a._validateParameters("nfp", arguments);

            var e = a.prototype.nf.apply(this, arguments);
            return e instanceof Array ? e.map(r) : r(e);
          }, a.prototype.nfs = function () {
            a._validateParameters("nfs", arguments);

            var e = a.prototype.nf.apply(this, arguments);
            return e instanceof Array ? e.map(s) : s(e);
          }, a.prototype.split = function (e, t) {
            return a._validateParameters("split", arguments), e.split(t);
          }, a.prototype.splitTokens = function (e, t) {
            var n;

            if (a._validateParameters("splitTokens", arguments), void 0 !== t) {
              var o = t,
                  i = /\]/g.exec(o),
                  r = /\[/g.exec(o);
              r && i ? (o = o.slice(0, i.index) + o.slice(i.index + 1), r = /\[/g.exec(o), o = o.slice(0, r.index) + o.slice(r.index + 1), n = new RegExp("[\\[" + o + "\\]]", "g")) : i ? (o = o.slice(0, i.index) + o.slice(i.index + 1), n = new RegExp("[" + o + "\\]]", "g")) : r ? (o = o.slice(0, r.index) + o.slice(r.index + 1), n = new RegExp("[" + o + "\\[]", "g")) : n = new RegExp("[" + o + "]", "g");
            } else n = /\s/g;

            return e.split(n).filter(function (e) {
              return e;
            });
          }, a.prototype.trim = function (e) {
            return a._validateParameters("trim", arguments), e instanceof Array ? e.map(this.trim) : e.trim();
          }, t.exports = a;
        }, {
          "../core/error_helpers": 20,
          "../core/main": 24
        }],
        63: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.day = function () {
            return new Date().getDate();
          }, a.prototype.hour = function () {
            return new Date().getHours();
          }, a.prototype.minute = function () {
            return new Date().getMinutes();
          }, a.prototype.millis = function () {
            return window.performance.now();
          }, a.prototype.month = function () {
            return new Date().getMonth() + 1;
          }, a.prototype.second = function () {
            return new Date().getSeconds();
          }, a.prototype.year = function () {
            return new Date().getFullYear();
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        64: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          e("./p5.Geometry");
          var o = e("../core/constants");
          a.prototype.plane = function (e, t, n, o) {
            this._assert3d("plane"), a._validateParameters("plane", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === n && (n = 1), void 0 === o && (o = 1);
            var i = "plane|" + n + "|" + o;

            if (!this._renderer.geometryInHash(i)) {
              var r = function () {
                for (var e, t, n, o = 0; o <= this.detailY; o++) {
                  t = o / this.detailY;

                  for (var i = 0; i <= this.detailX; i++) e = i / this.detailX, n = new a.Vector(e - .5, t - .5, 0), this.vertices.push(n), this.uvs.push(e, t);
                }
              },
                  s = new a.Geometry(n, o, r);

              s.computeFaces().computeNormals(), n <= 1 && o <= 1 ? s._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on plane objects with more than 1 detailX or 1 detailY"), this._renderer.createBuffers(i, s);
            }

            return this._renderer.drawBuffersScaled(i, e, t, 1), this;
          }, a.prototype.box = function (e, t, n, o, i) {
            this._assert3d("box"), a._validateParameters("box", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === n && (n = t);
            var r = this._renderer.attributes && this._renderer.attributes.perPixelLighting;
            void 0 === o && (o = r ? 1 : 4), void 0 === i && (i = r ? 1 : 4);
            var s = "box|" + o + "|" + i;

            if (!this._renderer.geometryInHash(s)) {
              var l = function () {
                var e = [[0, 4, 2, 6], [1, 3, 5, 7], [0, 1, 4, 5], [2, 6, 3, 7], [0, 2, 1, 3], [4, 5, 6, 7]];
                this.strokeIndices = [[0, 1], [1, 3], [3, 2], [6, 7], [8, 9], [9, 11], [14, 15], [16, 17], [17, 19], [18, 19], [20, 21], [22, 23]];

                for (var t = 0; t < e.length; t++) {
                  for (var n = e[t], o = 4 * t, i = 0; i < 4; i++) {
                    var r = n[i],
                        s = new a.Vector((2 * (1 & r) - 1) / 2, ((2 & r) - 1) / 2, ((4 & r) / 2 - 1) / 2);
                    this.vertices.push(s), this.uvs.push(1 & i, (2 & i) / 2);
                  }

                  this.faces.push([o, o + 1, o + 2]), this.faces.push([o + 2, o + 1, o + 3]);
                }
              },
                  p = new a.Geometry(o, i, l);

              p.computeNormals(), o <= 4 && i <= 4 ? p._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on box objects with more than 4 detailX or 4 detailY"), this._renderer.createBuffers(s, p);
            }

            return this._renderer.drawBuffersScaled(s, e, t, n), this;
          }, a.prototype.sphere = function (e, t, n) {
            return this._assert3d("sphere"), a._validateParameters("sphere", arguments), void 0 === e && (e = 50), void 0 === t && (t = 24), void 0 === n && (n = 16), this.ellipsoid(e, e, e, t, n), this;
          };

          var i = function (e, t, n, o, i, r, s) {
            e = e <= 0 ? 1 : e, t = t < 0 ? 0 : t, n = n <= 0 ? e : n, o = o < 3 ? 3 : o;
            var l,
                p,
                d,
                c,
                u,
                m = (r = void 0 === r || r) ? -2 : 0,
                h = (i = i < 1 ? 1 : i) + ((s = void 0 === s ? 0 !== t : s) ? 2 : 0),
                f = {},
                g = Math.atan2(e - t, n);

            for (l = m; l <= h; ++l) {
              var y,
                  v = l / i,
                  b = n * v;

              for (l < 0 ? (b = 0, v = 0, y = e) : l > i ? (b = n, v = 1, y = t) : y = e + (t - e) * v, -2 !== l && l !== i + 2 || (y = 0), b -= n / 2, f[l] = 0 === y ? 1 : o, p = 0; p < f[l]; ++p) {
                var w = p / o;
                this.vertices.push(new a.Vector(Math.sin(2 * w * Math.PI) * y, b, Math.cos(2 * w * Math.PI) * y)), this.vertexNormals.push(new a.Vector(l < 0 || l > i ? 0 : Math.sin(2 * w * Math.PI) * Math.cos(g), l < 0 ? -1 : l > i ? 1 : Math.sin(g), l < 0 || l > i ? 0 : Math.cos(2 * w * Math.PI) * Math.cos(g))), this.uvs.push(w, v);
              }
            }

            var x = 0;

            if (r) {
              for (d = 0; d < f[-1]; ++d) u = (d + 1) % f[-1], this.faces.push([x, x + 1 + u, x + 1 + d]);

              x += f[-2] + f[-1];
            }

            for (l = 0; l < i; ++l) {
              for (p = 0; p < f[l]; ++p) 1 === f[l + 1] ? (c = (p + 1) % f[l], this.faces.push([x + p, x + c, x + f[l]])) : (c = (p + 1) % f[l], this.faces.push([x + p, x + c, x + f[l] + c]), this.faces.push([x + p, x + f[l] + c, x + f[l] + p]));

              x += f[l];
            }

            if (s) for (x += f[i], p = 0; p < f[i + 1]; ++p) c = (p + 1) % f[i + 1], this.faces.push([x + p, x + c, x + f[i + 1]]);
          };

          a.prototype.cylinder = function (e, t, n, o, r, s) {
            this._assert3d("cylinder"), a._validateParameters("cylinder", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === n && (n = 24), void 0 === o && (o = 1), void 0 === s && (s = !0), void 0 === r && (r = !0);
            var l = "cylinder|" + n + "|" + o + "|" + r + "|" + s;

            if (!this._renderer.geometryInHash(l)) {
              var p = new a.Geometry(n, o);
              i.call(p, 1, 1, 1, n, o, r, s), p.computeNormals(), n <= 24 && o <= 16 ? p._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on cylinder objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(l, p);
            }

            return this._renderer.drawBuffersScaled(l, e, t, e), this;
          }, a.prototype.cone = function (e, t, n, o, r) {
            this._assert3d("cone"), a._validateParameters("cone", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === n && (n = 24), void 0 === o && (o = 1), void 0 === r && (r = !0);
            var s = "cone|" + n + "|" + o + "|" + r;

            if (!this._renderer.geometryInHash(s)) {
              var l = new a.Geometry(n, o);
              i.call(l, 1, 0, 1, n, o, r, !1), l.computeNormals(), n <= 24 && o <= 16 ? l._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on cone objects with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(s, l);
            }

            return this._renderer.drawBuffersScaled(s, e, t, e), this;
          }, a.prototype.ellipsoid = function (e, t, n, o, i) {
            this._assert3d("ellipsoid"), a._validateParameters("ellipsoid", arguments), void 0 === e && (e = 50), void 0 === t && (t = e), void 0 === n && (n = e), void 0 === o && (o = 24), void 0 === i && (i = 16);
            var r = "ellipsoid|" + o + "|" + i;

            if (!this._renderer.geometryInHash(r)) {
              var s = function () {
                for (var e = 0; e <= this.detailY; e++) for (var t = e / this.detailY, n = Math.PI * t - Math.PI / 2, o = Math.cos(n), i = Math.sin(n), r = 0; r <= this.detailX; r++) {
                  var s = r / this.detailX,
                      l = 2 * Math.PI * s,
                      p = Math.cos(l),
                      d = Math.sin(l),
                      c = new a.Vector(o * d, i, o * p);
                  this.vertices.push(c), this.vertexNormals.push(c), this.uvs.push(s, t);
                }
              },
                  l = new a.Geometry(o, i, s);

              l.computeFaces(), o <= 24 && i <= 24 ? l._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw stroke on ellipsoids with more than 24 detailX or 24 detailY"), this._renderer.createBuffers(r, l);
            }

            return this._renderer.drawBuffersScaled(r, e, t, n), this;
          }, a.prototype.torus = function (e, t, n, o) {
            if (this._assert3d("torus"), a._validateParameters("torus", arguments), void 0 === e) e = 50;else if (!e) return;
            if (void 0 === t) t = 10;else if (!t) return;
            void 0 === n && (n = 24), void 0 === o && (o = 16);
            var i = (t / e).toPrecision(4),
                r = "torus|" + i + "|" + n + "|" + o;

            if (!this._renderer.geometryInHash(r)) {
              var s = function () {
                for (var e = 0; e <= this.detailY; e++) for (var t = e / this.detailY, n = 2 * Math.PI * t, o = Math.cos(n), r = Math.sin(n), s = 1 + i * o, l = 0; l <= this.detailX; l++) {
                  var p = l / this.detailX,
                      d = 2 * Math.PI * p,
                      c = Math.cos(d),
                      u = Math.sin(d),
                      m = new a.Vector(s * c, s * u, i * r),
                      h = new a.Vector(o * c, o * u, r);
                  this.vertices.push(m), this.vertexNormals.push(h), this.uvs.push(p, t);
                }
              },
                  l = new a.Geometry(n, o, s);

              l.computeFaces(), n <= 24 && o <= 16 ? l._makeTriangleEdges()._edgesToVertices() : console.log("Cannot draw strokes on torus object with more than 24 detailX or 16 detailY"), this._renderer.createBuffers(r, l);
            }

            return this._renderer.drawBuffersScaled(r, e, e, e), this;
          }, a.RendererGL.prototype.point = function (e, t, n) {
            this._usePointShader(), this.curPointShader.bindShader(), void 0 === n && (n = 0);
            var o = [];
            return o.push(new a.Vector(e, t, n)), this._drawPoints(o, this._pointVertexBuffer), this.curPointShader.unbindShader(), this;
          }, a.RendererGL.prototype.triangle = function (e) {
            var t = e[0],
                n = e[1],
                o = e[2],
                i = e[3],
                r = e[4],
                s = e[5];

            if (!this.geometryInHash("tri")) {
              var l = new a.Geometry(1, 1, function () {
                var e = [];
                e.push(new a.Vector(0, 0, 0)), e.push(new a.Vector(0, 1, 0)), e.push(new a.Vector(1, 0, 0)), this.strokeIndices = [[0, 1], [1, 2], [2, 0]], this.vertices = e, this.faces = [[0, 1, 2]], this.uvs = [0, 0, 0, 1, 1, 1];
              });
              l._makeTriangleEdges()._edgesToVertices(), l.computeNormals(), this.createBuffers("tri", l);
            }

            var p = this.uMVMatrix.copy();

            try {
              var d = new a.Matrix([o - t, i - n, 0, 0, r - t, s - n, 0, 0, 0, 0, 1, 0, t, n, 0, 1]).mult(this.uMVMatrix);
              this.uMVMatrix = d, this.drawBuffers("tri");
            } finally {
              this.uMVMatrix = p;
            }

            return this;
          }, a.RendererGL.prototype.ellipse = function (e) {
            this.arc(e[0], e[1], e[2], e[3], 0, o.TWO_PI, o.OPEN, e[4]);
          }, a.RendererGL.prototype.arc = function (e) {
            var t,
                n,
                i = arguments[0],
                r = arguments[1],
                s = arguments[2],
                l = arguments[3],
                p = arguments[4],
                d = arguments[5],
                c = arguments[6],
                u = arguments[7] || 25;

            if (n = Math.abs(d - p) >= o.TWO_PI ? (t = "ellipse") + "|" + u + "|" : (t = "arc") + "|" + p + "|" + d + "|" + c + "|" + u + "|", !this.geometryInHash(n)) {
              var m = function () {
                if (this.strokeIndices = [], p.toFixed(10) !== d.toFixed(10)) {
                  c !== o.PIE && void 0 !== c || (this.vertices.push(new a.Vector(.5, .5, 0)), this.uvs.push([.5, .5]));

                  for (var e = 0; e <= u; e++) {
                    var t = e / u * (d - p) + p,
                        n = .5 + Math.cos(t) / 2,
                        i = .5 + Math.sin(t) / 2;
                    this.vertices.push(new a.Vector(n, i, 0)), this.uvs.push([n, i]), e < u - 1 && (this.faces.push([0, e + 1, e + 2]), this.strokeIndices.push([e + 1, e + 2]));
                  }

                  switch (c) {
                    case o.PIE:
                      this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.strokeIndices.push([0, 1]), this.strokeIndices.push([this.vertices.length - 2, this.vertices.length - 1]), this.strokeIndices.push([0, this.vertices.length - 1]);
                      break;

                    case o.CHORD:
                      this.strokeIndices.push([0, 1]), this.strokeIndices.push([0, this.vertices.length - 1]);
                      break;

                    case o.OPEN:
                      this.strokeIndices.push([0, 1]);
                      break;

                    default:
                      this.faces.push([0, this.vertices.length - 2, this.vertices.length - 1]), this.strokeIndices.push([this.vertices.length - 2, this.vertices.length - 1]);
                  }
                }
              },
                  h = new a.Geometry(u, 1, m);

              h.computeNormals(), u <= 50 ? h._makeTriangleEdges()._edgesToVertices(h) : console.log("Cannot stroke " + t + " with more than 50 detail"), this.createBuffers(n, h);
            }

            var f = this.uMVMatrix.copy();

            try {
              this.uMVMatrix.translate([i, r, 0]), this.uMVMatrix.scale(s, l, 1), this.drawBuffers(n);
            } finally {
              this.uMVMatrix = f;
            }

            return this;
          }, a.RendererGL.prototype.rect = function (e) {
            var t = this.attributes.perPixelLighting,
                n = e[0],
                o = e[1],
                i = e[2],
                r = e[3],
                s = e[4] || (t ? 1 : 24),
                l = e[5] || (t ? 1 : 16),
                p = "rect|" + s + "|" + l;

            if (!this.geometryInHash(p)) {
              var d = new a.Geometry(s, l, function () {
                for (var e = 0; e <= this.detailY; e++) for (var t = e / this.detailY, n = 0; n <= this.detailX; n++) {
                  var o = n / this.detailX,
                      i = new a.Vector(o, t, 0);
                  this.vertices.push(i), this.uvs.push(o, t);
                }

                s > 0 && l > 0 && (this.strokeIndices = [[0, s], [s, (s + 1) * (l + 1) - 1], [(s + 1) * (l + 1) - 1, (s + 1) * l], [(s + 1) * l, 0]]);
              });
              d.computeFaces().computeNormals()._makeTriangleEdges()._edgesToVertices(), this.createBuffers(p, d);
            }

            var c = this.uMVMatrix.copy();

            try {
              this.uMVMatrix.translate([n, o, 0]), this.uMVMatrix.scale(i, r, 1), this.drawBuffers(p);
            } finally {
              this.uMVMatrix = c;
            }

            return this;
          }, a.RendererGL.prototype.quad = function (e, t, n, o, i, r, s, l) {
            var p = "quad|" + e + "|" + t + "|" + n + "|" + o + "|" + i + "|" + r + "|" + s + "|" + l;

            if (!this.geometryInHash(p)) {
              var d = new a.Geometry(2, 2, function () {
                this.vertices.push(new a.Vector(e, t, 0)), this.vertices.push(new a.Vector(n, o, 0)), this.vertices.push(new a.Vector(i, r, 0)), this.vertices.push(new a.Vector(s, l, 0)), this.uvs.push(0, 0, 1, 0, 1, 1, 0, 1), this.strokeIndices = [[0, 1], [1, 2], [2, 3], [3, 0]];
              });
              d.computeNormals()._makeTriangleEdges()._edgesToVertices(), d.faces = [[0, 1, 2], [2, 3, 0]], this.createBuffers(p, d);
            }

            return this.drawBuffers(p), this;
          }, a.RendererGL.prototype.bezier = function (e, t, n, a, o, i, r, s, l, p, d, c) {
            8 === arguments.length && (p = r, d = s, r = o, s = a, o = a = n, n = i = l = c = 0);
            var u = this._pInst._bezierDetail || 20;
            this.beginShape();

            for (var m = 0; m <= u; m++) {
              var h = Math.pow(1 - m / u, 3),
                  f = m / u * 3 * Math.pow(1 - m / u, 2),
                  g = 3 * Math.pow(m / u, 2) * (1 - m / u),
                  y = Math.pow(m / u, 3);
              this.vertex(e * h + a * f + r * g + p * y, t * h + o * f + s * g + d * y, n * h + i * f + l * g + c * y);
            }

            return this.endShape(), this;
          }, a.RendererGL.prototype.curve = function (e, t, n, a, o, i, r, s, l, p, d, c) {
            8 === arguments.length && (p = r, d = s, r = o, s = a, o = a = n, n = i = l = c = 0);
            var u = this._pInst._curveDetail;
            this.beginShape();

            for (var m = 0; m <= u; m++) {
              var h = .5 * Math.pow(m / u, 3),
                  f = .5 * Math.pow(m / u, 2),
                  g = m / u * .5,
                  y = .5,
                  v = h * (3 * a - e - 3 * r + p) + f * (2 * e - 5 * a + 4 * r - p) + g * (-e + r) + y * (2 * a),
                  b = h * (3 * o - t - 3 * s + d) + f * (2 * t - 5 * o + 4 * s - d) + g * (-t + s) + y * (2 * o),
                  w = h * (3 * i - n - 3 * l + c) + f * (2 * n - 5 * i + 4 * l - c) + g * (-n + l) + y * (2 * i);
              this.vertex(v, b, w);
            }

            return this.endShape(), this;
          }, a.RendererGL.prototype.line = function () {
            return 6 === arguments.length ? (this.beginShape(), this.vertex(arguments[0], arguments[1], arguments[2]), this.vertex(arguments[3], arguments[4], arguments[5]), this.endShape()) : 4 === arguments.length && (this.beginShape(), this.vertex(arguments[0], arguments[1], 0), this.vertex(arguments[2], arguments[3], 0), this.endShape()), this;
          }, a.RendererGL.prototype.bezierVertex = function () {
            if (0 === this.immediateMode._bezierVertex.length) throw Error("vertex() must be used once before calling bezierVertex()");
            var e,
                t,
                n,
                a,
                o,
                i = [],
                r = [],
                s = [],
                l = arguments.length;

            if (e = 0, 0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
              this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;

              for (var p = 1 / this._lutBezierDetail, d = 0, c = 1, u = 0; d < 1;) {
                if (e = parseFloat(d.toFixed(6)), this._lookUpTableBezier[u] = this._bezierCoefficients(e), c.toFixed(6) === p.toFixed(6)) {
                  e = parseFloat(c.toFixed(6)) + parseFloat(d.toFixed(6)), ++u, this._lookUpTableBezier[u] = this._bezierCoefficients(e);
                  break;
                }

                d += p, c -= p, ++u;
              }
            }

            var m = this._lookUpTableBezier.length;

            if (6 === l) {
              for (this.isBezier = !0, i = [this.immediateMode._bezierVertex[0], arguments[0], arguments[2], arguments[4]], r = [this.immediateMode._bezierVertex[1], arguments[1], arguments[3], arguments[5]], o = 0; o < m; o++) t = i[0] * this._lookUpTableBezier[o][0] + i[1] * this._lookUpTableBezier[o][1] + i[2] * this._lookUpTableBezier[o][2] + i[3] * this._lookUpTableBezier[o][3], n = r[0] * this._lookUpTableBezier[o][0] + r[1] * this._lookUpTableBezier[o][1] + r[2] * this._lookUpTableBezier[o][2] + r[3] * this._lookUpTableBezier[o][3], this.vertex(t, n);

              this.immediateMode._bezierVertex[0] = arguments[4], this.immediateMode._bezierVertex[1] = arguments[5];
            } else if (9 === l) {
              for (this.isBezier = !0, i = [this.immediateMode._bezierVertex[0], arguments[0], arguments[3], arguments[6]], r = [this.immediateMode._bezierVertex[1], arguments[1], arguments[4], arguments[7]], s = [this.immediateMode._bezierVertex[2], arguments[2], arguments[5], arguments[8]], o = 0; o < m; o++) t = i[0] * this._lookUpTableBezier[o][0] + i[1] * this._lookUpTableBezier[o][1] + i[2] * this._lookUpTableBezier[o][2] + i[3] * this._lookUpTableBezier[o][3], n = r[0] * this._lookUpTableBezier[o][0] + r[1] * this._lookUpTableBezier[o][1] + r[2] * this._lookUpTableBezier[o][2] + r[3] * this._lookUpTableBezier[o][3], a = s[0] * this._lookUpTableBezier[o][0] + s[1] * this._lookUpTableBezier[o][1] + s[2] * this._lookUpTableBezier[o][2] + s[3] * this._lookUpTableBezier[o][3], this.vertex(t, n, a);

              this.immediateMode._bezierVertex[0] = arguments[6], this.immediateMode._bezierVertex[1] = arguments[7], this.immediateMode._bezierVertex[2] = arguments[8];
            }
          }, a.RendererGL.prototype.quadraticVertex = function () {
            if (0 === this.immediateMode._quadraticVertex.length) throw Error("vertex() must be used once before calling quadraticVertex()");
            var e,
                t,
                n,
                a,
                o,
                i = [],
                r = [],
                s = [],
                l = arguments.length;

            if (e = 0, 0 === this._lookUpTableQuadratic.length || this._lutQuadraticDetail !== this._pInst._curveDetail) {
              this._lookUpTableQuadratic = [], this._lutQuadraticDetail = this._pInst._curveDetail;

              for (var p = 1 / this._lutQuadraticDetail, d = 0, c = 1, u = 0; d < 1;) {
                if (e = parseFloat(d.toFixed(6)), this._lookUpTableQuadratic[u] = this._quadraticCoefficients(e), c.toFixed(6) === p.toFixed(6)) {
                  e = parseFloat(c.toFixed(6)) + parseFloat(d.toFixed(6)), ++u, this._lookUpTableQuadratic[u] = this._quadraticCoefficients(e);
                  break;
                }

                d += p, c -= p, ++u;
              }
            }

            var m = this._lookUpTableQuadratic.length;

            if (4 === l) {
              for (this.isQuadratic = !0, i = [this.immediateMode._quadraticVertex[0], arguments[0], arguments[2]], r = [this.immediateMode._quadraticVertex[1], arguments[1], arguments[3]], o = 0; o < m; o++) t = i[0] * this._lookUpTableQuadratic[o][0] + i[1] * this._lookUpTableQuadratic[o][1] + i[2] * this._lookUpTableQuadratic[o][2], n = r[0] * this._lookUpTableQuadratic[o][0] + r[1] * this._lookUpTableQuadratic[o][1] + r[2] * this._lookUpTableQuadratic[o][2], this.vertex(t, n);

              this.immediateMode._quadraticVertex[0] = arguments[2], this.immediateMode._quadraticVertex[1] = arguments[3];
            } else if (6 === l) {
              for (this.isQuadratic = !0, i = [this.immediateMode._quadraticVertex[0], arguments[0], arguments[3]], r = [this.immediateMode._quadraticVertex[1], arguments[1], arguments[4]], s = [this.immediateMode._quadraticVertex[2], arguments[2], arguments[5]], o = 0; o < m; o++) t = i[0] * this._lookUpTableQuadratic[o][0] + i[1] * this._lookUpTableQuadratic[o][1] + i[2] * this._lookUpTableQuadratic[o][2], n = r[0] * this._lookUpTableQuadratic[o][0] + r[1] * this._lookUpTableQuadratic[o][1] + r[2] * this._lookUpTableQuadratic[o][2], a = s[0] * this._lookUpTableQuadratic[o][0] + s[1] * this._lookUpTableQuadratic[o][1] + s[2] * this._lookUpTableQuadratic[o][2], this.vertex(t, n, a);

              this.immediateMode._quadraticVertex[0] = arguments[3], this.immediateMode._quadraticVertex[1] = arguments[4], this.immediateMode._quadraticVertex[2] = arguments[5];
            }
          }, a.RendererGL.prototype.curveVertex = function () {
            var e,
                t,
                n,
                a,
                o,
                i = [],
                r = [],
                s = [];
            e = 0;
            var l = arguments.length;

            if (0 === this._lookUpTableBezier.length || this._lutBezierDetail !== this._pInst._curveDetail) {
              this._lookUpTableBezier = [], this._lutBezierDetail = this._pInst._curveDetail;

              for (var p = 1 / this._lutBezierDetail, d = 0, c = 1, u = 0; d < 1;) {
                if (e = parseFloat(d.toFixed(6)), this._lookUpTableBezier[u] = this._bezierCoefficients(e), c.toFixed(6) === p.toFixed(6)) {
                  e = parseFloat(c.toFixed(6)) + parseFloat(d.toFixed(6)), ++u, this._lookUpTableBezier[u] = this._bezierCoefficients(e);
                  break;
                }

                d += p, c -= p, ++u;
              }
            }

            var m = this._lookUpTableBezier.length;

            if (2 === l) {
              if (this.immediateMode._curveVertex.push(arguments[0]), this.immediateMode._curveVertex.push(arguments[1]), 8 === this.immediateMode._curveVertex.length) {
                for (this.isCurve = !0, i = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[6]]), r = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[7]]), o = 0; o < m; o++) t = i[0] * this._lookUpTableBezier[o][0] + i[1] * this._lookUpTableBezier[o][1] + i[2] * this._lookUpTableBezier[o][2] + i[3] * this._lookUpTableBezier[o][3], n = r[0] * this._lookUpTableBezier[o][0] + r[1] * this._lookUpTableBezier[o][1] + r[2] * this._lookUpTableBezier[o][2] + r[3] * this._lookUpTableBezier[o][3], this.vertex(t, n);

                for (o = 0; o < l; o++) this.immediateMode._curveVertex.shift();
              }
            } else if (3 === l && (this.immediateMode._curveVertex.push(arguments[0]), this.immediateMode._curveVertex.push(arguments[1]), this.immediateMode._curveVertex.push(arguments[2]), 12 === this.immediateMode._curveVertex.length)) {
              for (this.isCurve = !0, i = this._bezierToCatmull([this.immediateMode._curveVertex[0], this.immediateMode._curveVertex[3], this.immediateMode._curveVertex[6], this.immediateMode._curveVertex[9]]), r = this._bezierToCatmull([this.immediateMode._curveVertex[1], this.immediateMode._curveVertex[4], this.immediateMode._curveVertex[7], this.immediateMode._curveVertex[10]]), s = this._bezierToCatmull([this.immediateMode._curveVertex[2], this.immediateMode._curveVertex[5], this.immediateMode._curveVertex[8], this.immediateMode._curveVertex[11]]), o = 0; o < m; o++) t = i[0] * this._lookUpTableBezier[o][0] + i[1] * this._lookUpTableBezier[o][1] + i[2] * this._lookUpTableBezier[o][2] + i[3] * this._lookUpTableBezier[o][3], n = r[0] * this._lookUpTableBezier[o][0] + r[1] * this._lookUpTableBezier[o][1] + r[2] * this._lookUpTableBezier[o][2] + r[3] * this._lookUpTableBezier[o][3], a = s[0] * this._lookUpTableBezier[o][0] + s[1] * this._lookUpTableBezier[o][1] + s[2] * this._lookUpTableBezier[o][2] + s[3] * this._lookUpTableBezier[o][3], this.vertex(t, n, a);

              for (o = 0; o < l; o++) this.immediateMode._curveVertex.shift();
            }
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/main": 24,
          "./p5.Geometry": 70
        }],
        65: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          a.prototype.orbitControl = function (e, t) {
            this._assert3d("orbitControl"), a._validateParameters("orbitControl", arguments);
            var n = this.mouseX < this.width && this.mouseX > 0 && this.mouseY < this.height && this.mouseY > 0;

            if (n) {
              var o = this._renderer._curCamera;
              void 0 === e && (e = 1), void 0 === t && (t = e), !0 !== this.contextMenuDisabled && (this.canvas.oncontextmenu = function () {
                return !1;
              }, this._setProperty("contextMenuDisabled", !0)), !0 !== this.wheelDefaultDisabled && (this.canvas.onwheel = function () {
                return !1;
              }, this._setProperty("wheelDefaultDisabled", !0));
              var i = this.height < this.width ? this.height : this.width;
              if (this._mouseWheelDeltaY !== this._pmouseWheelDeltaY && (this._mouseWheelDeltaY > 0 ? this._renderer._curCamera._orbit(0, 0, .5 * i) : this._renderer._curCamera._orbit(0, 0, -.5 * i)), this.mouseIsPressed) if (this.mouseButton === this.LEFT) {
                var r = -e * (this.mouseX - this.pmouseX) / i,
                    s = t * (this.mouseY - this.pmouseY) / i;

                this._renderer._curCamera._orbit(r, s, 0);
              } else if (this.mouseButton === this.RIGHT) {
                var l = o._getLocalAxes(),
                    p = Math.sqrt(l.x[0] * l.x[0] + l.x[2] * l.x[2]);

                0 !== p && (l.x[0] /= p, l.x[2] /= p);
                var d = Math.sqrt(l.y[0] * l.y[0] + l.y[2] * l.y[2]);
                0 !== d && (l.y[0] /= d, l.y[2] /= d);
                var c = -1 * e * (this.mouseX - this.pmouseX),
                    u = -1 * t * (this.mouseY - this.pmouseY);
                o.setPosition(o.eyeX + c * l.x[0] + u * l.z[0], o.eyeY, o.eyeZ + c * l.x[2] + u * l.z[2]);
              }
              return this;
            }
          }, a.prototype.debugMode = function () {
            this._assert3d("debugMode"), a._validateParameters("debugMode", arguments);

            for (var e = this._registeredMethods.post.length - 1; e >= 0; e--) this._registeredMethods.post[e].toString() !== this._grid().toString() && this._registeredMethods.post[e].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e, 1);

            arguments[0] === o.GRID ? this.registerMethod("post", this._grid.call(this, arguments[1], arguments[2], arguments[3], arguments[4], arguments[5])) : arguments[0] === o.AXES ? this.registerMethod("post", this._axesIcon.call(this, arguments[1], arguments[2], arguments[3], arguments[4])) : (this.registerMethod("post", this._grid.call(this, arguments[0], arguments[1], arguments[2], arguments[3], arguments[4])), this.registerMethod("post", this._axesIcon.call(this, arguments[5], arguments[6], arguments[7], arguments[8])));
          }, a.prototype.noDebugMode = function () {
            this._assert3d("noDebugMode");

            for (var e = this._registeredMethods.post.length - 1; e >= 0; e--) this._registeredMethods.post[e].toString() !== this._grid().toString() && this._registeredMethods.post[e].toString() !== this._axesIcon().toString() || this._registeredMethods.post.splice(e, 1);
          }, a.prototype._grid = function (e, t, n, a, o) {
            void 0 === e && (e = this.width / 2), void 0 === t && (t = Math.round(e / 30) < 4 ? 4 : Math.round(e / 30)), void 0 === n && (n = 0), void 0 === a && (a = 0), void 0 === o && (o = 0);
            var i = e / t,
                r = e / 2;
            return function () {
              this.push(), this.stroke(255 * this._renderer.curStrokeColor[0], 255 * this._renderer.curStrokeColor[1], 255 * this._renderer.curStrokeColor[2]), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]);

              for (var e = 0; e <= t; e++) this.beginShape(this.LINES), this.vertex(-r + n, a, e * i - r + o), this.vertex(+r + n, a, e * i - r + o), this.endShape();

              for (var s = 0; s <= t; s++) this.beginShape(this.LINES), this.vertex(s * i - r + n, a, -r + o), this.vertex(s * i - r + n, a, +r + o), this.endShape();

              this.pop();
            };
          }, a.prototype._axesIcon = function (e, t, n, a) {
            return void 0 === e && (e = this.width / 20 > 40 ? this.width / 20 : 40), void 0 === t && (t = -this.width / 4), void 0 === n && (n = t), void 0 === a && (a = t), function () {
              this.push(), this._renderer.uMVMatrix.set(this._renderer._curCamera.cameraMatrix.mat4[0], this._renderer._curCamera.cameraMatrix.mat4[1], this._renderer._curCamera.cameraMatrix.mat4[2], this._renderer._curCamera.cameraMatrix.mat4[3], this._renderer._curCamera.cameraMatrix.mat4[4], this._renderer._curCamera.cameraMatrix.mat4[5], this._renderer._curCamera.cameraMatrix.mat4[6], this._renderer._curCamera.cameraMatrix.mat4[7], this._renderer._curCamera.cameraMatrix.mat4[8], this._renderer._curCamera.cameraMatrix.mat4[9], this._renderer._curCamera.cameraMatrix.mat4[10], this._renderer._curCamera.cameraMatrix.mat4[11], this._renderer._curCamera.cameraMatrix.mat4[12], this._renderer._curCamera.cameraMatrix.mat4[13], this._renderer._curCamera.cameraMatrix.mat4[14], this._renderer._curCamera.cameraMatrix.mat4[15]), this.strokeWeight(2), this.stroke(255, 0, 0), this.beginShape(this.LINES), this.vertex(t, n, a), this.vertex(t + e, n, a), this.endShape(), this.stroke(0, 255, 0), this.beginShape(this.LINES), this.vertex(t, n, a), this.vertex(t, n + e, a), this.endShape(), this.stroke(0, 0, 255), this.beginShape(this.LINES), this.vertex(t, n, a), this.vertex(t, n, a + e), this.endShape(), this.pop();
            };
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/main": 24
        }],
        66: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.ambientLight = function (e, t, n, o) {
            this._assert3d("ambientLight"), a._validateParameters("ambientLight", arguments);

            var i = this.color.apply(this, arguments),
                r = this._renderer._useLightShader();

            return r.setUniform("uUseLighting", !0), r.setUniform("uMaterialColor", this._renderer.curFillColor), this._renderer.ambientLightColors.push(i._array[0], i._array[1], i._array[2]), r.setUniform("uAmbientColor", this._renderer.ambientLightColors), r.setUniform("uAmbientLightCount", this._renderer.ambientLightColors.length / 3), this;
          }, a.prototype.directionalLight = function (e, t, n, o, i, r) {
            this._assert3d("directionalLight"), a._validateParameters("directionalLight", arguments);

            var s,
                l,
                p,
                d,
                c = this._renderer._useLightShader();

            s = e instanceof a.Color ? e : this.color(e, t, n);
            var u = arguments[arguments.length - 1];
            "number" == typeof u ? (l = arguments[arguments.length - 3], p = arguments[arguments.length - 2], d = arguments[arguments.length - 1]) : (l = u.x, p = u.y, d = u.z), c.setUniform("uUseLighting", !0), c.setUniform("uMaterialColor", this._renderer.curFillColor);
            var m = Math.sqrt(l * l + p * p + d * d);
            return this._renderer.directionalLightDirections.push(l / m, p / m, d / m), c.setUniform("uLightingDirection", this._renderer.directionalLightDirections), this._renderer.directionalLightColors.push(s._array[0], s._array[1], s._array[2]), c.setUniform("uDirectionalColor", this._renderer.directionalLightColors), c.setUniform("uDirectionalLightCount", this._renderer.directionalLightColors.length / 3), this;
          }, a.prototype.pointLight = function (e, t, n, o, i, r) {
            var s, l, p, d;
            this._assert3d("pointLight"), a._validateParameters("pointLight", arguments), s = e instanceof a.Color ? e : this.color(e, t, n);
            var c = arguments[arguments.length - 1];
            "number" == typeof c ? (l = arguments[arguments.length - 3], p = arguments[arguments.length - 2], d = arguments[arguments.length - 1]) : (l = c.x, p = c.y, d = c.z);

            var u = this._renderer._useLightShader();

            return u.setUniform("uUseLighting", !0), u.setUniform("uMaterialColor", this._renderer.curFillColor), this._renderer.pointLightPositions.push(l, p, d), u.setUniform("uPointLightLocation", this._renderer.pointLightPositions), this._renderer.pointLightColors.push(s._array[0], s._array[1], s._array[2]), u.setUniform("uPointLightColor", this._renderer.pointLightColors), u.setUniform("uPointLightCount", this._renderer.pointLightColors.length / 3), this;
          }, t.exports = a;
        }, {
          "../core/main": 24
        }],
        67: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");

          function o(e, t) {
            for (var n = {
              v: [],
              vt: [],
              vn: []
            }, o = {}, i = 0; i < t.length; ++i) {
              var r = t[i].trim().split(/\b\s+/);
              if (r.length > 0) if ("v" === r[0] || "vn" === r[0]) {
                var s = new a.Vector(parseFloat(r[1]), parseFloat(r[2]), parseFloat(r[3]));
                n[r[0]].push(s);
              } else if ("vt" === r[0]) {
                var l = [parseFloat(r[1]), parseFloat(r[2])];
                n[r[0]].push(l);
              } else if ("f" === r[0]) for (var p = 3; p < r.length; ++p) {
                for (var d = [], c = [1, p - 1, p], u = 0; u < c.length; ++u) {
                  var m = r[c[u]],
                      h = 0;
                  if (void 0 !== o[m]) h = o[m];else {
                    for (var f = m.split("/"), g = 0; g < f.length; g++) f[g] = parseInt(f[g]) - 1;

                    h = o[m] = e.vertices.length, e.vertices.push(n.v[f[0]].copy()), n.vt[f[1]] ? e.uvs.push(n.vt[f[1]].slice()) : e.uvs.push([0, 0]), n.vn[f[2]] && e.vertexNormals.push(n.vn[f[2]].copy());
                  }
                  d.push(h);
                }

                d[0] !== d[1] && d[0] !== d[2] && d[1] !== d[2] && e.faces.push(d);
              }
            }

            return 0 === e.vertexNormals.length && e.computeNormals(), e;
          }

          e("./p5.Geometry"), a.prototype.loadModel = function (e) {
            var t, n, i;
            a._validateParameters("loadModel", arguments), "boolean" == typeof arguments[1] ? (t = arguments[1], n = arguments[2], i = arguments[3]) : (t = !1, n = arguments[1], i = arguments[2]);
            var r = new a.Geometry();
            r.gid = e + "|" + t;
            var s = this;
            return this.loadStrings(e, function (e) {
              o(r, e), t && r.normalize(), s._decrementPreload(), "function" == typeof n && n(r);
            }.bind(this), i), r;
          }, a.prototype.model = function (e) {
            this._assert3d("model"), a._validateParameters("model", arguments), e.vertices.length > 0 && (this._renderer.geometryInHash(e.gid) || (e._makeTriangleEdges()._edgesToVertices(), this._renderer.createBuffers(e.gid, e)), this._renderer.drawBuffers(e.gid));
          }, t.exports = a;
        }, {
          "../core/main": 24,
          "./p5.Geometry": 70
        }],
        68: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          e("./p5.Texture"), a.prototype.loadShader = function (e, t) {
            a._validateParameters("loadShader", arguments);

            var n = new a.Shader(),
                o = this,
                i = !1,
                r = !1;
            return this.loadStrings(t, function (e) {
              n._fragSrc = e.join("\n"), i = !0, r && o._decrementPreload();
            }), this.loadStrings(e, function (e) {
              n._vertSrc = e.join("\n"), r = !0, i && o._decrementPreload();
            }), n;
          }, a.prototype.createShader = function (e, t) {
            return this._assert3d("createShader"), a._validateParameters("createShader", arguments), new a.Shader(this._renderer, e, t);
          }, a.prototype.shader = function (e) {
            return this._assert3d("shader"), a._validateParameters("shader", arguments), void 0 === e._renderer && (e._renderer = this._renderer), e.isStrokeShader() ? this._renderer.setStrokeShader(e) : this._renderer.setFillShader(e), this;
          }, a.prototype.normalMaterial = function () {
            return this._assert3d("normalMaterial"), a._validateParameters("normalMaterial", arguments), this._renderer.drawMode = o.FILL, this._renderer.setFillShader(this._renderer._getNormalShader()), this._renderer.curFillColor = [1, 1, 1, 1], this.noStroke(), this;
          }, a.prototype.texture = function (e) {
            this._assert3d("texture"), a._validateParameters("texture", arguments), this._renderer.drawMode = o.TEXTURE, this._renderer.textureImage = e;

            var t = this._renderer._useLightShader();

            return t.setUniform("uSpecular", !1), t.setUniform("isTexture", !0), t.setUniform("uSampler", e), this.noStroke(), this;
          }, a.prototype.textureMode = function (e) {
            e !== o.IMAGE && e !== o.NORMAL ? console.warn("You tried to set " + e + " textureMode only supports IMAGE & NORMAL ") : this._renderer.textureMode = e;
          }, a.prototype.ambientMaterial = function (e, t, n, o) {
            this._assert3d("ambientMaterial"), a._validateParameters("ambientMaterial", arguments);
            var i = a.prototype.color.apply(this, arguments);
            this._renderer.curFillColor = i._array;

            var r = this._renderer._useLightShader();

            return r.setUniform("uMaterialColor", this._renderer.curFillColor), r.setUniform("uSpecular", !1), r.setUniform("isTexture", !1), this;
          }, a.prototype.specularMaterial = function (e, t, n, o) {
            this._assert3d("specularMaterial"), a._validateParameters("specularMaterial", arguments);
            var i = a.prototype.color.apply(this, arguments);
            this._renderer.curFillColor = i._array;

            var r = this._renderer._useLightShader();

            return r.setUniform("uMaterialColor", this._renderer.curFillColor), r.setUniform("uSpecular", !0), r.setUniform("isTexture", !1), this;
          }, a.RendererGL.prototype._applyColorBlend = function (e) {
            var t = this.GL,
                n = this.drawMode === o.TEXTURE;
            return n || e[e.length - 1] < 1 ? (t.depthMask(n), t.enable(t.BLEND), t.blendEquation(t.FUNC_ADD), t.blendFunc(t.SRC_ALPHA, t.ONE_MINUS_SRC_ALPHA)) : (t.depthMask(!0), t.disable(t.BLEND)), e;
          }, t.exports = a;
        }, {
          "../core/constants": 18,
          "../core/main": 24,
          "./p5.Texture": 76
        }],
        69: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.prototype.camera = function () {
            return this._assert3d("camera"), a._validateParameters("camera", arguments), this._renderer._curCamera.camera.apply(this._renderer._curCamera, arguments), this;
          }, a.prototype.perspective = function () {
            return this._assert3d("perspective"), a._validateParameters("perspective", arguments), this._renderer._curCamera.perspective.apply(this._renderer._curCamera, arguments), this;
          }, a.prototype.ortho = function () {
            return this._assert3d("ortho"), a._validateParameters("ortho", arguments), this._renderer._curCamera.ortho.apply(this._renderer._curCamera, arguments), this;
          }, a.prototype.createCamera = function () {
            this._assert3d("createCamera");

            var e = new a.Camera(this._renderer);
            return e._computeCameraDefaultSettings(), e._setDefaultCamera(), this._renderer._curCamera = e, e;
          }, a.Camera = function (e) {
            this._renderer = e, this.cameraType = "default", this.cameraMatrix = new a.Matrix(), this.projMatrix = new a.Matrix();
          }, a.Camera.prototype.perspective = function (e, t, n, o) {
            void 0 === e ? (e = this.defaultCameraFOV, this.cameraFOV = e) : this.cameraFOV = this._renderer._pInst._toRadians(e), void 0 === t && (t = this.defaultAspectRatio), void 0 === n && (n = this.defaultCameraNear), void 0 === o && (o = this.defaultCameraFar), n <= 1e-4 && (n = .01, console.log("Avoid perspective near plane values close to or below 0. Setting value to 0.01.")), o < n && console.log("Perspective far plane value is less than near plane value. Nothing will be shown."), this.aspectRatio = t, this.cameraNear = n, this.cameraFar = o, this.projMatrix = a.Matrix.identity();
            var i = 1 / Math.tan(this.cameraFOV / 2),
                r = 1 / (this.cameraNear - this.cameraFar);
            this.projMatrix.set(i / t, 0, 0, 0, 0, -i, 0, 0, 0, 0, (o + n) * r, -1, 0, 0, 2 * o * n * r, 0), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
          }, a.Camera.prototype.ortho = function (e, t, n, o, i, r) {
            void 0 === e && (e = -this._renderer.width / 2), void 0 === t && (t = +this._renderer.width / 2), void 0 === n && (n = -this._renderer.height / 2), void 0 === o && (o = +this._renderer.height / 2), void 0 === i && (i = 0), void 0 === r && (r = Math.max(this._renderer.width, this._renderer.height));
            var s = t - e,
                l = o - n,
                p = r - i,
                d = 2 / s,
                c = 2 / l,
                u = -2 / p,
                m = -(t + e) / s,
                h = -(o + n) / l,
                f = -(r + i) / p;
            this.projMatrix = a.Matrix.identity(), this.projMatrix.set(d, 0, 0, 0, 0, -c, 0, 0, 0, 0, u, 0, m, h, f, 1), this._isActive() && this._renderer.uPMatrix.set(this.projMatrix.mat4[0], this.projMatrix.mat4[1], this.projMatrix.mat4[2], this.projMatrix.mat4[3], this.projMatrix.mat4[4], this.projMatrix.mat4[5], this.projMatrix.mat4[6], this.projMatrix.mat4[7], this.projMatrix.mat4[8], this.projMatrix.mat4[9], this.projMatrix.mat4[10], this.projMatrix.mat4[11], this.projMatrix.mat4[12], this.projMatrix.mat4[13], this.projMatrix.mat4[14], this.projMatrix.mat4[15]), this.cameraType = "custom";
          }, a.Camera.prototype._rotateView = function (e, t, n, o) {
            var i = this.centerX,
                r = this.centerY,
                s = this.centerZ;
            i -= this.eyeX, r -= this.eyeY, s -= this.eyeZ;
            var l = a.Matrix.identity(this._renderer._pInst);
            l.rotate(e, t, n, o);
            var p = [i * l.mat4[0] + r * l.mat4[4] + s * l.mat4[8], i * l.mat4[1] + r * l.mat4[5] + s * l.mat4[9], i * l.mat4[2] + r * l.mat4[6] + s * l.mat4[10]];
            p[0] += this.eyeX, p[1] += this.eyeY, p[2] += this.eyeZ, this.camera(this.eyeX, this.eyeY, this.eyeZ, p[0], p[1], p[2], this.upX, this.upY, this.upZ);
          }, a.Camera.prototype.pan = function (e) {
            var t = this._getLocalAxes();

            this._rotateView(e, t.y[0], t.y[1], t.y[2]);
          }, a.Camera.prototype.tilt = function (e) {
            var t = this._getLocalAxes();

            this._rotateView(e, t.x[0], t.x[1], t.x[2]);
          }, a.Camera.prototype.lookAt = function (e, t, n) {
            this.camera(this.eyeX, this.eyeY, this.eyeZ, e, t, n, this.upX, this.upY, this.upZ);
          }, a.Camera.prototype.camera = function (e, t, n, a, o, i, r, s, l) {
            void 0 === e && (e = this.defaultEyeX, t = this.defaultEyeY, n = this.defaultEyeZ, a = e, o = t, i = 0, r = 0, s = 1, l = 0), this.eyeX = e, this.eyeY = t, this.eyeZ = n, this.centerX = a, this.centerY = o, this.centerZ = i, this.upX = r, this.upY = s, this.upZ = l;

            var p = this._getLocalAxes();

            this.cameraMatrix.set(p.x[0], p.y[0], p.z[0], 0, p.x[1], p.y[1], p.z[1], 0, p.x[2], p.y[2], p.z[2], 0, 0, 0, 0, 1);
            var d = -e,
                c = -t,
                u = -n;
            return this.cameraMatrix.translate([d, c, u]), this._isActive() && this._renderer.uMVMatrix.set(this.cameraMatrix.mat4[0], this.cameraMatrix.mat4[1], this.cameraMatrix.mat4[2], this.cameraMatrix.mat4[3], this.cameraMatrix.mat4[4], this.cameraMatrix.mat4[5], this.cameraMatrix.mat4[6], this.cameraMatrix.mat4[7], this.cameraMatrix.mat4[8], this.cameraMatrix.mat4[9], this.cameraMatrix.mat4[10], this.cameraMatrix.mat4[11], this.cameraMatrix.mat4[12], this.cameraMatrix.mat4[13], this.cameraMatrix.mat4[14], this.cameraMatrix.mat4[15]), this;
          }, a.Camera.prototype.move = function (e, t, n) {
            var a = this._getLocalAxes(),
                o = [a.x[0] * e, a.x[1] * e, a.x[2] * e],
                i = [a.y[0] * t, a.y[1] * t, a.y[2] * t],
                r = [a.z[0] * n, a.z[1] * n, a.z[2] * n];

            this.camera(this.eyeX + o[0] + i[0] + r[0], this.eyeY + o[1] + i[1] + r[1], this.eyeZ + o[2] + i[2] + r[2], this.centerX + o[0] + i[0] + r[0], this.centerY + o[1] + i[1] + r[1], this.centerZ + o[2] + i[2] + r[2], 0, 1, 0);
          }, a.Camera.prototype.setPosition = function (e, t, n) {
            var a = e - this.eyeX,
                o = t - this.eyeY,
                i = n - this.eyeZ;
            this.camera(e, t, n, this.centerX + a, this.centerY + o, this.centerZ + i, 0, 1, 0);
          }, a.Camera.prototype._computeCameraDefaultSettings = function () {
            this.defaultCameraFOV = 60 / 180 * Math.PI, this.defaultAspectRatio = this._renderer.width / this._renderer.height, this.defaultEyeX = 0, this.defaultEyeY = 0, this.defaultEyeZ = this._renderer.height / 2 / Math.tan(this.defaultCameraFOV / 2), this.defaultCenterX = 0, this.defaultCenterY = 0, this.defaultCenterZ = 0, this.defaultCameraNear = .1 * this.defaultEyeZ, this.defaultCameraFar = 10 * this.defaultEyeZ;
          }, a.Camera.prototype._setDefaultCamera = function () {
            this.cameraFOV = this.defaultCameraFOV, this.aspectRatio = this.defaultAspectRatio, this.eyeX = this.defaultEyeX, this.eyeY = this.defaultEyeY, this.eyeZ = this.defaultEyeZ, this.centerX = this.defaultCenterX, this.centerY = this.defaultCenterY, this.centerZ = this.defaultCenterZ, this.upX = 0, this.upY = 1, this.upZ = 0, this.cameraNear = this.defaultCameraNear, this.cameraFar = this.defaultCameraFar, this.perspective(), this.camera(), this.cameraType = "default";
          }, a.Camera.prototype._resize = function () {
            "default" === this.cameraType ? (this._computeCameraDefaultSettings(), this._setDefaultCamera()) : this.perspective(this.cameraFOV, this._renderer.width / this._renderer.height);
          }, a.Camera.prototype.copy = function () {
            var e = new a.Camera(this._renderer);
            return e.cameraFOV = this.cameraFOV, e.aspectRatio = this.aspectRatio, e.eyeX = this.eyeX, e.eyeY = this.eyeY, e.eyeZ = this.eyeZ, e.centerX = this.centerX, e.centerY = this.centerY, e.centerZ = this.centerZ, e.cameraNear = this.cameraNear, e.cameraFar = this.cameraFar, e.cameraType = this.cameraType, e.cameraMatrix = this.cameraMatrix.copy(), e.projMatrix = this.projMatrix.copy(), e;
          }, a.Camera.prototype._getLocalAxes = function () {
            var e = this.eyeX - this.centerX,
                t = this.eyeY - this.centerY,
                n = this.eyeZ - this.centerZ,
                a = Math.sqrt(e * e + t * t + n * n);
            0 !== a && (e /= a, t /= a, n /= a);
            var o = this.upX,
                i = this.upY,
                r = this.upZ,
                s = i * n - r * t,
                l = -o * n + r * e,
                p = o * t - i * e;
            o = t * p - n * l, i = -e * p + n * s, r = e * l - t * s;
            var d = Math.sqrt(s * s + l * l + p * p);
            0 !== d && (s /= d, l /= d, p /= d);
            var c = Math.sqrt(o * o + i * i + r * r);
            return 0 !== c && (o /= c, i /= c, r /= c), {
              x: [s, l, p],
              y: [o, i, r],
              z: [e, t, n]
            };
          }, a.Camera.prototype._orbit = function (e, t, n) {
            var a = this.eyeX - this.centerX,
                o = this.eyeY - this.centerY,
                i = this.eyeZ - this.centerZ,
                r = Math.sqrt(a * a + o * o + i * i),
                s = Math.atan2(a, i),
                l = Math.acos(Math.max(-1, Math.min(1, o / r)));
            s += e, (r += n) < 0 && (r = .1), (l += t) > Math.PI ? l = Math.PI : l <= 0 && (l = .001);
            var p = Math.sin(l) * r * Math.sin(s),
                d = Math.cos(l) * r,
                c = Math.sin(l) * r * Math.cos(s);
            this.camera(p + this.centerX, d + this.centerY, c + this.centerZ, this.centerX, this.centerY, this.centerZ, 0, 1, 0);
          }, a.Camera.prototype._isActive = function () {
            return this === this._renderer._curCamera;
          }, a.prototype.setCamera = function (e) {
            this._renderer._curCamera = e, this._renderer.uPMatrix.set(e.projMatrix.mat4[0], e.projMatrix.mat4[1], e.projMatrix.mat4[2], e.projMatrix.mat4[3], e.projMatrix.mat4[4], e.projMatrix.mat4[5], e.projMatrix.mat4[6], e.projMatrix.mat4[7], e.projMatrix.mat4[8], e.projMatrix.mat4[9], e.projMatrix.mat4[10], e.projMatrix.mat4[11], e.projMatrix.mat4[12], e.projMatrix.mat4[13], e.projMatrix.mat4[14], e.projMatrix.mat4[15]);
          }, t.exports = a.Camera;
        }, {
          "../core/main": 24
        }],
        70: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.Geometry = function (e, t, n) {
            return this.vertices = [], this.lineVertices = [], this.lineNormals = [], this.vertexNormals = [], this.faces = [], this.uvs = [], this.edges = [], this.detailX = void 0 !== e ? e : 1, this.detailY = void 0 !== t ? t : 1, n instanceof Function && n.call(this), this;
          }, a.Geometry.prototype.computeFaces = function () {
            this.faces.length = 0;

            for (var e, t, n, a, o = this.detailX + 1, i = 0; i < this.detailY; i++) for (var r = 0; r < this.detailX; r++) e = i * o + r, t = i * o + r + 1, n = (i + 1) * o + r + 1, a = (i + 1) * o + r, this.faces.push([e, t, a]), this.faces.push([a, t, n]);

            return this;
          }, a.Geometry.prototype._getFaceNormal = function (e) {
            var t = this.faces[e],
                n = this.vertices[t[0]],
                o = this.vertices[t[1]],
                i = this.vertices[t[2]],
                r = a.Vector.sub(o, n),
                s = a.Vector.sub(i, n),
                l = a.Vector.cross(r, s),
                p = a.Vector.mag(l),
                d = p / (a.Vector.mag(r) * a.Vector.mag(s));
            return 0 === d || isNaN(d) ? (console.warn("p5.Geometry.prototype._getFaceNormal:", "face has colinear sides or a repeated vertex"), l) : (d > 1 && (d = 1), l.mult(Math.asin(d) / p));
          }, a.Geometry.prototype.computeNormals = function () {
            var e,
                t = this.vertexNormals,
                n = this.vertices,
                o = this.faces;

            for (t.length = 0, e = 0; e < n.length; ++e) t.push(new a.Vector());

            for (var i = 0; i < o.length; ++i) for (var r = o[i], s = this._getFaceNormal(i), l = 0; l < 3; ++l) t[r[l]].add(s);

            for (e = 0; e < n.length; ++e) t[e].normalize();

            return this;
          }, a.Geometry.prototype.averageNormals = function () {
            for (var e = 0; e <= this.detailY; e++) {
              var t = this.detailX + 1,
                  n = a.Vector.add(this.vertexNormals[e * t], this.vertexNormals[e * t + this.detailX]);
              n = a.Vector.div(n, 2), this.vertexNormals[e * t] = n, this.vertexNormals[e * t + this.detailX] = n;
            }

            return this;
          }, a.Geometry.prototype.averagePoleNormals = function () {
            for (var e = new a.Vector(0, 0, 0), t = 0; t < this.detailX; t++) e.add(this.vertexNormals[t]);

            for (e = a.Vector.div(e, this.detailX), t = 0; t < this.detailX; t++) this.vertexNormals[t] = e;

            for (e = new a.Vector(0, 0, 0), t = this.vertices.length - 1; t > this.vertices.length - 1 - this.detailX; t--) e.add(this.vertexNormals[t]);

            for (e = a.Vector.div(e, this.detailX), t = this.vertices.length - 1; t > this.vertices.length - 1 - this.detailX; t--) this.vertexNormals[t] = e;

            return this;
          }, a.Geometry.prototype._makeTriangleEdges = function () {
            if (this.edges.length = 0, Array.isArray(this.strokeIndices)) for (var e = 0, t = this.strokeIndices.length; e < t; e++) this.edges.push(this.strokeIndices[e]);else for (var n = 0; n < this.faces.length; n++) this.edges.push([this.faces[n][0], this.faces[n][1]]), this.edges.push([this.faces[n][1], this.faces[n][2]]), this.edges.push([this.faces[n][2], this.faces[n][0]]);
            return this;
          }, a.Geometry.prototype._edgesToVertices = function () {
            this.lineVertices.length = 0, this.lineNormals.length = 0;

            for (var e = 0; e < this.edges.length; e++) {
              var t = this.vertices[this.edges[e][0]],
                  n = this.vertices[this.edges[e][1]],
                  a = n.copy().sub(t).normalize(),
                  o = t.array(),
                  i = t.array(),
                  r = n.array(),
                  s = n.array(),
                  l = a.array(),
                  p = a.array();
              l.push(1), p.push(-1), this.lineNormals.push(l, p, l, l, p, p), this.lineVertices.push(o, i, r, r, i, s);
            }

            return this;
          }, a.Geometry.prototype.normalize = function () {
            if (this.vertices.length > 0) {
              for (var e = this.vertices[0].copy(), t = this.vertices[0].copy(), n = 0; n < this.vertices.length; n++) e.x = Math.max(e.x, this.vertices[n].x), t.x = Math.min(t.x, this.vertices[n].x), e.y = Math.max(e.y, this.vertices[n].y), t.y = Math.min(t.y, this.vertices[n].y), e.z = Math.max(e.z, this.vertices[n].z), t.z = Math.min(t.z, this.vertices[n].z);

              var o = a.Vector.lerp(e, t, .5),
                  i = a.Vector.sub(e, t),
                  r = 200 / Math.max(Math.max(i.x, i.y), i.z);

              for (n = 0; n < this.vertices.length; n++) this.vertices[n].sub(o), this.vertices[n].mult(r);
            }

            return this;
          }, t.exports = a.Geometry;
        }, {
          "../core/main": 24
        }],
        71: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = Array,
              i = function (e) {
            return e instanceof Array;
          };

          "undefined" != typeof Float32Array && (o = Float32Array, i = function (e) {
            return e instanceof Array || e instanceof Float32Array;
          }), a.Matrix = function () {
            for (var e = new Array(arguments.length), t = 0; t < e.length; ++t) e[t] = arguments[t];

            return e.length && e[e.length - 1] instanceof a && (this.p5 = e[e.length - 1]), "mat3" === e[0] ? this.mat3 = Array.isArray(e[1]) ? e[1] : new o([1, 0, 0, 0, 1, 0, 0, 0, 1]) : this.mat4 = Array.isArray(e[0]) ? e[0] : new o([1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]), this;
          }, a.Matrix.prototype.set = function (e) {
            return e instanceof a.Matrix ? (this.mat4 = e.mat4, this) : i(e) ? (this.mat4 = e, this) : (16 === arguments.length && (this.mat4[0] = arguments[0], this.mat4[1] = arguments[1], this.mat4[2] = arguments[2], this.mat4[3] = arguments[3], this.mat4[4] = arguments[4], this.mat4[5] = arguments[5], this.mat4[6] = arguments[6], this.mat4[7] = arguments[7], this.mat4[8] = arguments[8], this.mat4[9] = arguments[9], this.mat4[10] = arguments[10], this.mat4[11] = arguments[11], this.mat4[12] = arguments[12], this.mat4[13] = arguments[13], this.mat4[14] = arguments[14], this.mat4[15] = arguments[15]), this);
          }, a.Matrix.prototype.get = function () {
            return new a.Matrix(this.mat4, this.p5);
          }, a.Matrix.prototype.copy = function () {
            var e = new a.Matrix(this.p5);
            return e.mat4[0] = this.mat4[0], e.mat4[1] = this.mat4[1], e.mat4[2] = this.mat4[2], e.mat4[3] = this.mat4[3], e.mat4[4] = this.mat4[4], e.mat4[5] = this.mat4[5], e.mat4[6] = this.mat4[6], e.mat4[7] = this.mat4[7], e.mat4[8] = this.mat4[8], e.mat4[9] = this.mat4[9], e.mat4[10] = this.mat4[10], e.mat4[11] = this.mat4[11], e.mat4[12] = this.mat4[12], e.mat4[13] = this.mat4[13], e.mat4[14] = this.mat4[14], e.mat4[15] = this.mat4[15], e;
          }, a.Matrix.identity = function (e) {
            return new a.Matrix(e);
          }, a.Matrix.prototype.transpose = function (e) {
            var t, n, o, r, s, l;
            return e instanceof a.Matrix ? (t = e.mat4[1], n = e.mat4[2], o = e.mat4[3], r = e.mat4[6], s = e.mat4[7], l = e.mat4[11], this.mat4[0] = e.mat4[0], this.mat4[1] = e.mat4[4], this.mat4[2] = e.mat4[8], this.mat4[3] = e.mat4[12], this.mat4[4] = t, this.mat4[5] = e.mat4[5], this.mat4[6] = e.mat4[9], this.mat4[7] = e.mat4[13], this.mat4[8] = n, this.mat4[9] = r, this.mat4[10] = e.mat4[10], this.mat4[11] = e.mat4[14], this.mat4[12] = o, this.mat4[13] = s, this.mat4[14] = l, this.mat4[15] = e.mat4[15]) : i(e) && (t = e[1], n = e[2], o = e[3], r = e[6], s = e[7], l = e[11], this.mat4[0] = e[0], this.mat4[1] = e[4], this.mat4[2] = e[8], this.mat4[3] = e[12], this.mat4[4] = t, this.mat4[5] = e[5], this.mat4[6] = e[9], this.mat4[7] = e[13], this.mat4[8] = n, this.mat4[9] = r, this.mat4[10] = e[10], this.mat4[11] = e[14], this.mat4[12] = o, this.mat4[13] = s, this.mat4[14] = l, this.mat4[15] = e[15]), this;
          }, a.Matrix.prototype.invert = function (e) {
            var t, n, o, r, s, l, p, d, c, u, m, h, f, g, y, v;
            e instanceof a.Matrix ? (t = e.mat4[0], n = e.mat4[1], o = e.mat4[2], r = e.mat4[3], s = e.mat4[4], l = e.mat4[5], p = e.mat4[6], d = e.mat4[7], c = e.mat4[8], u = e.mat4[9], m = e.mat4[10], h = e.mat4[11], f = e.mat4[12], g = e.mat4[13], y = e.mat4[14], v = e.mat4[15]) : i(e) && (t = e[0], n = e[1], o = e[2], r = e[3], s = e[4], l = e[5], p = e[6], d = e[7], c = e[8], u = e[9], m = e[10], h = e[11], f = e[12], g = e[13], y = e[14], v = e[15]);

            var b = t * l - n * s,
                w = t * p - o * s,
                x = t * d - r * s,
                S = n * p - o * l,
                k = n * d - r * l,
                T = o * d - r * p,
                C = c * g - u * f,
                _ = c * y - m * f,
                M = c * v - h * f,
                E = u * y - m * g,
                j = u * v - h * g,
                I = m * v - h * y,
                R = b * I - w * j + x * E + S * M - k * _ + T * C;

            return R ? (R = 1 / R, this.mat4[0] = (l * I - p * j + d * E) * R, this.mat4[1] = (o * j - n * I - r * E) * R, this.mat4[2] = (g * T - y * k + v * S) * R, this.mat4[3] = (m * k - u * T - h * S) * R, this.mat4[4] = (p * M - s * I - d * _) * R, this.mat4[5] = (t * I - o * M + r * _) * R, this.mat4[6] = (y * x - f * T - v * w) * R, this.mat4[7] = (c * T - m * x + h * w) * R, this.mat4[8] = (s * j - l * M + d * C) * R, this.mat4[9] = (n * M - t * j - r * C) * R, this.mat4[10] = (f * k - g * x + v * b) * R, this.mat4[11] = (u * x - c * k - h * b) * R, this.mat4[12] = (l * _ - s * E - p * C) * R, this.mat4[13] = (t * E - n * _ + o * C) * R, this.mat4[14] = (g * w - f * S - y * b) * R, this.mat4[15] = (c * S - u * w + m * b) * R, this) : null;
          }, a.Matrix.prototype.invert3x3 = function () {
            var e = this.mat3[0],
                t = this.mat3[1],
                n = this.mat3[2],
                a = this.mat3[3],
                o = this.mat3[4],
                i = this.mat3[5],
                r = this.mat3[6],
                s = this.mat3[7],
                l = this.mat3[8],
                p = l * o - i * s,
                d = -l * a + i * r,
                c = s * a - o * r,
                u = e * p + t * d + n * c;
            return u ? (u = 1 / u, this.mat3[0] = p * u, this.mat3[1] = (-l * t + n * s) * u, this.mat3[2] = (i * t - n * o) * u, this.mat3[3] = d * u, this.mat3[4] = (l * e - n * r) * u, this.mat3[5] = (-i * e + n * a) * u, this.mat3[6] = c * u, this.mat3[7] = (-s * e + t * r) * u, this.mat3[8] = (o * e - t * a) * u, this) : null;
          }, a.Matrix.prototype.transpose3x3 = function (e) {
            var t = e[1],
                n = e[2],
                a = e[5];
            return this.mat3[1] = e[3], this.mat3[2] = e[6], this.mat3[3] = t, this.mat3[5] = e[7], this.mat3[6] = n, this.mat3[7] = a, this;
          }, a.Matrix.prototype.inverseTranspose = function (e) {
            void 0 === this.mat3 ? console.error("sorry, this function only works with mat3") : (this.mat3[0] = e.mat4[0], this.mat3[1] = e.mat4[1], this.mat3[2] = e.mat4[2], this.mat3[3] = e.mat4[4], this.mat3[4] = e.mat4[5], this.mat3[5] = e.mat4[6], this.mat3[6] = e.mat4[8], this.mat3[7] = e.mat4[9], this.mat3[8] = e.mat4[10]);
            var t = this.invert3x3();
            if (t) t.transpose3x3(this.mat3);else for (var n = 0; n < 9; n++) this.mat3[n] = 0;
            return this;
          }, a.Matrix.prototype.determinant = function () {
            var e = this.mat4[0] * this.mat4[5] - this.mat4[1] * this.mat4[4],
                t = this.mat4[0] * this.mat4[6] - this.mat4[2] * this.mat4[4],
                n = this.mat4[0] * this.mat4[7] - this.mat4[3] * this.mat4[4],
                a = this.mat4[1] * this.mat4[6] - this.mat4[2] * this.mat4[5],
                o = this.mat4[1] * this.mat4[7] - this.mat4[3] * this.mat4[5],
                i = this.mat4[2] * this.mat4[7] - this.mat4[3] * this.mat4[6],
                r = this.mat4[8] * this.mat4[13] - this.mat4[9] * this.mat4[12],
                s = this.mat4[8] * this.mat4[14] - this.mat4[10] * this.mat4[12],
                l = this.mat4[8] * this.mat4[15] - this.mat4[11] * this.mat4[12],
                p = this.mat4[9] * this.mat4[14] - this.mat4[10] * this.mat4[13],
                d = this.mat4[9] * this.mat4[15] - this.mat4[11] * this.mat4[13];
            return e * (this.mat4[10] * this.mat4[15] - this.mat4[11] * this.mat4[14]) - t * d + n * p + a * l - o * s + i * r;
          }, a.Matrix.prototype.mult = function (e) {
            var t;
            if (e === this || e === this.mat4) t = this.copy().mat4;else if (e instanceof a.Matrix) t = e.mat4;else {
              if (!i(e)) return;
              t = e;
            }
            var n = this.mat4[0],
                o = this.mat4[1],
                r = this.mat4[2],
                s = this.mat4[3];
            return this.mat4[0] = n * t[0] + o * t[4] + r * t[8] + s * t[12], this.mat4[1] = n * t[1] + o * t[5] + r * t[9] + s * t[13], this.mat4[2] = n * t[2] + o * t[6] + r * t[10] + s * t[14], this.mat4[3] = n * t[3] + o * t[7] + r * t[11] + s * t[15], n = this.mat4[4], o = this.mat4[5], r = this.mat4[6], s = this.mat4[7], this.mat4[4] = n * t[0] + o * t[4] + r * t[8] + s * t[12], this.mat4[5] = n * t[1] + o * t[5] + r * t[9] + s * t[13], this.mat4[6] = n * t[2] + o * t[6] + r * t[10] + s * t[14], this.mat4[7] = n * t[3] + o * t[7] + r * t[11] + s * t[15], n = this.mat4[8], o = this.mat4[9], r = this.mat4[10], s = this.mat4[11], this.mat4[8] = n * t[0] + o * t[4] + r * t[8] + s * t[12], this.mat4[9] = n * t[1] + o * t[5] + r * t[9] + s * t[13], this.mat4[10] = n * t[2] + o * t[6] + r * t[10] + s * t[14], this.mat4[11] = n * t[3] + o * t[7] + r * t[11] + s * t[15], n = this.mat4[12], o = this.mat4[13], r = this.mat4[14], s = this.mat4[15], this.mat4[12] = n * t[0] + o * t[4] + r * t[8] + s * t[12], this.mat4[13] = n * t[1] + o * t[5] + r * t[9] + s * t[13], this.mat4[14] = n * t[2] + o * t[6] + r * t[10] + s * t[14], this.mat4[15] = n * t[3] + o * t[7] + r * t[11] + s * t[15], this;
          }, a.Matrix.prototype.scale = function (e, t, n) {
            return e instanceof a.Vector ? (t = e.y, n = e.z, e = e.x) : e instanceof Array && (t = e[1], n = e[2], e = e[0]), this.mat4[0] *= e, this.mat4[1] *= e, this.mat4[2] *= e, this.mat4[3] *= e, this.mat4[4] *= t, this.mat4[5] *= t, this.mat4[6] *= t, this.mat4[7] *= t, this.mat4[8] *= n, this.mat4[9] *= n, this.mat4[10] *= n, this.mat4[11] *= n, this;
          }, a.Matrix.prototype.rotate = function (e, t, n, o) {
            t instanceof a.Vector ? (n = t.y, o = t.z, t = t.x) : t instanceof Array && (n = t[1], o = t[2], t = t[0]);
            var i = Math.sqrt(t * t + n * n + o * o);
            t *= 1 / i, n *= 1 / i, o *= 1 / i;

            var r = this.mat4[0],
                s = this.mat4[1],
                l = this.mat4[2],
                p = this.mat4[3],
                d = this.mat4[4],
                c = this.mat4[5],
                u = this.mat4[6],
                m = this.mat4[7],
                h = this.mat4[8],
                f = this.mat4[9],
                g = this.mat4[10],
                y = this.mat4[11],
                v = Math.sin(e),
                b = Math.cos(e),
                w = 1 - b,
                x = t * t * w + b,
                S = n * t * w + o * v,
                k = o * t * w - n * v,
                T = t * n * w - o * v,
                C = n * n * w + b,
                _ = o * n * w + t * v,
                M = t * o * w + n * v,
                E = n * o * w - t * v,
                j = o * o * w + b;

            return this.mat4[0] = r * x + d * S + h * k, this.mat4[1] = s * x + c * S + f * k, this.mat4[2] = l * x + u * S + g * k, this.mat4[3] = p * x + m * S + y * k, this.mat4[4] = r * T + d * C + h * _, this.mat4[5] = s * T + c * C + f * _, this.mat4[6] = l * T + u * C + g * _, this.mat4[7] = p * T + m * C + y * _, this.mat4[8] = r * M + d * E + h * j, this.mat4[9] = s * M + c * E + f * j, this.mat4[10] = l * M + u * E + g * j, this.mat4[11] = p * M + m * E + y * j, this;
          }, a.Matrix.prototype.translate = function (e) {
            var t = e[0],
                n = e[1],
                a = e[2] || 0;
            this.mat4[12] += this.mat4[0] * t + this.mat4[4] * n + this.mat4[8] * a, this.mat4[13] += this.mat4[1] * t + this.mat4[5] * n + this.mat4[9] * a, this.mat4[14] += this.mat4[2] * t + this.mat4[6] * n + this.mat4[10] * a, this.mat4[15] += this.mat4[3] * t + this.mat4[7] * n + this.mat4[11] * a;
          }, a.Matrix.prototype.rotateX = function (e) {
            this.rotate(e, 1, 0, 0);
          }, a.Matrix.prototype.rotateY = function (e) {
            this.rotate(e, 0, 1, 0);
          }, a.Matrix.prototype.rotateZ = function (e) {
            this.rotate(e, 0, 0, 1);
          }, a.Matrix.prototype.perspective = function (e, t, n, a) {
            var o = 1 / Math.tan(e / 2),
                i = 1 / (n - a);
            return this.mat4[0] = o / t, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = o, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = (a + n) * i, this.mat4[11] = -1, this.mat4[12] = 0, this.mat4[13] = 0, this.mat4[14] = 2 * a * n * i, this.mat4[15] = 0, this;
          }, a.Matrix.prototype.ortho = function (e, t, n, a, o, i) {
            var r = 1 / (e - t),
                s = 1 / (n - a),
                l = 1 / (o - i);
            return this.mat4[0] = -2 * r, this.mat4[1] = 0, this.mat4[2] = 0, this.mat4[3] = 0, this.mat4[4] = 0, this.mat4[5] = -2 * s, this.mat4[6] = 0, this.mat4[7] = 0, this.mat4[8] = 0, this.mat4[9] = 0, this.mat4[10] = 2 * l, this.mat4[11] = 0, this.mat4[12] = (e + t) * r, this.mat4[13] = (a + n) * s, this.mat4[14] = (i + o) * l, this.mat4[15] = 1, this;
          }, t.exports = a.Matrix;
        }, {
          "../core/main": 24
        }],
        72: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          a.RendererGL.prototype.beginShape = function (e) {
            return this.immediateMode.shapeMode = void 0 !== e ? e : o.LINE_STRIP, void 0 === this.immediateMode.vertices ? (this.immediateMode.vertices = [], this.immediateMode.edges = [], this.immediateMode.lineVertices = [], this.immediateMode.vertexColors = [], this.immediateMode.lineNormals = [], this.immediateMode.uvCoords = [], this.immediateMode.vertexBuffer = this.GL.createBuffer(), this.immediateMode.colorBuffer = this.GL.createBuffer(), this.immediateMode.uvBuffer = this.GL.createBuffer(), this.immediateMode.lineVertexBuffer = this.GL.createBuffer(), this.immediateMode.lineNormalBuffer = this.GL.createBuffer(), this.immediateMode.pointVertexBuffer = this.GL.createBuffer(), this.immediateMode._bezierVertex = [], this.immediateMode._quadraticVertex = [], this.immediateMode._curveVertex = []) : (this.immediateMode.vertices.length = 0, this.immediateMode.edges.length = 0, this.immediateMode.lineVertices.length = 0, this.immediateMode.lineNormals.length = 0, this.immediateMode.vertexColors.length = 0, this.immediateMode.uvCoords.length = 0), this.isImmediateDrawing = !0, this;
          }, a.RendererGL.prototype.vertex = function (e, t) {
            var n, i, r;
            n = i = r = 0, 3 === arguments.length ? n = arguments[2] : 4 === arguments.length ? (i = arguments[2], r = arguments[3]) : 5 === arguments.length && (n = arguments[2], i = arguments[3], r = arguments[4]);
            var s = new a.Vector(e, t, n);
            this.immediateMode.vertices.push(s);
            var l = this.curFillColor || [.5, .5, .5, 1];
            return this.immediateMode.vertexColors.push(l[0], l[1], l[2], l[3]), this.textureMode === o.IMAGE && (void 0 !== this.textureImage ? this.textureImage.width > 0 && this.textureImage.height > 0 && (i /= this.textureImage.width, r /= this.textureImage.height) : console.warn("You must first call texture() before using vertex() with image based u and v coordinates")), this.immediateMode.uvCoords.push(i, r), this.immediateMode._bezierVertex[0] = e, this.immediateMode._bezierVertex[1] = t, this.immediateMode._bezierVertex[2] = n, this.immediateMode._quadraticVertex[0] = e, this.immediateMode._quadraticVertex[1] = t, this.immediateMode._quadraticVertex[2] = n, this;
          }, a.RendererGL.prototype.endShape = function (e, t, n, i, r, s) {
            if (this.immediateMode.shapeMode === o.POINTS) this._usePointShader(), this.curPointShader.bindShader(), this._drawPoints(this.immediateMode.vertices, this.immediateMode.pointVertexBuffer), this.curPointShader.unbindShader();else if (this.immediateMode.vertices.length > 1) {
              if (this._useImmediateModeShader(), this._doStroke && this.drawMode !== o.TEXTURE) {
                if (this.immediateMode.shapeMode === o.TRIANGLE_STRIP) {
                  var l;

                  for (l = 0; l < this.immediateMode.vertices.length - 2; l++) this.immediateMode.edges.push([l, l + 1]), this.immediateMode.edges.push([l, l + 2]);

                  this.immediateMode.edges.push([l, l + 1]);
                } else if (this.immediateMode.shapeMode === o.TRIANGLES) for (l = 0; l < this.immediateMode.vertices.length - 2; l += 3) this.immediateMode.edges.push([l, l + 1]), this.immediateMode.edges.push([l + 1, l + 2]), this.immediateMode.edges.push([l + 2, l]);else for (l = 0; l < this.immediateMode.vertices.length - 1; l++) this.immediateMode.edges.push([l, l + 1]);

                e === o.CLOSE && this.immediateMode.edges.push([this.immediateMode.vertices.length - 1, 0]), a.Geometry.prototype._edgesToVertices.call(this.immediateMode), this._drawStrokeImmediateMode();
              }

              if (this._doFill) {
                if (this.isBezier || this.isQuadratic || this.isCurve) {
                  var p = [new Float32Array(this._vToNArray(this.immediateMode.vertices))],
                      d = this._triangulate(p);

                  this.immediateMode.vertices = [];

                  for (var c = 0, u = d.length; c < u; c += 3) this.vertex(d[c], d[c + 1], d[c + 2]);
                }

                this._drawFillImmediateMode(e, t, n, i, r, s);
              }
            }
            return this.immediateMode.vertices.length = 0, this.immediateMode.vertexColors.length = 0, this.immediateMode.uvCoords.length = 0, this.isImmediateDrawing = !1, this.isBezier = !1, this.isQuadratic = !1, this.isCurve = !1, this.immediateMode._bezierVertex.length = 0, this.immediateMode._quadraticVertex.length = 0, this.immediateMode._curveVertex.length = 0, this;
          }, a.RendererGL.prototype._drawFillImmediateMode = function (e, t, n, a, i, r) {
            var s = this.GL;
            if (this.curFillShader.bindShader(), this.curFillShader.attributes.aPosition && (this._bindBuffer(this.immediateMode.vertexBuffer, s.ARRAY_BUFFER, this._vToNArray(this.immediateMode.vertices), Float32Array, s.DYNAMIC_DRAW), this.curFillShader.enableAttrib(this.curFillShader.attributes.aPosition.location, 3, s.FLOAT, !1, 0, 0)), this.drawMode === o.FILL && this.curFillShader.attributes.aVertexColor && (this._bindBuffer(this.immediateMode.colorBuffer, s.ARRAY_BUFFER, this.immediateMode.vertexColors, Float32Array, s.DYNAMIC_DRAW), this.curFillShader.enableAttrib(this.curFillShader.attributes.aVertexColor.location, 4, s.FLOAT, !1, 0, 0)), this.drawMode === o.TEXTURE && this.curFillShader.attributes.aTexCoord && (this._bindBuffer(this.immediateMode.uvBuffer, s.ARRAY_BUFFER, this.immediateMode.uvCoords, Float32Array, s.DYNAMIC_DRAW), this.curFillShader.enableAttrib(this.curFillShader.attributes.aTexCoord.location, 2, s.FLOAT, !1, 0, 0)), this.drawMode === o.FILL || this.drawMode === o.TEXTURE) switch (this.immediateMode.shapeMode) {
              case o.LINE_STRIP:
              case o.LINES:
              case o.TRIANGLES:
                this.immediateMode.shapeMode = this.isBezier || this.isQuadratic || this.isCurve || this.immediateMode.shapeMode === o.TRIANGLES ? o.TRIANGLES : o.TRIANGLE_FAN;
            } else switch (this.immediateMode.shapeMode) {
              case o.LINE_STRIP:
              case o.LINES:
                this.immediateMode.shapeMode = o.LINE_LOOP;
            }
            if (this.immediateMode.shapeMode === o.QUADS || this.immediateMode.shapeMode === o.QUAD_STRIP) throw new Error("sorry, " + this.immediateMode.shapeMode + " not yet implemented in webgl mode.");
            this._applyColorBlend(this.curFillColor), s.enable(s.BLEND), s.drawArrays(this.immediateMode.shapeMode, 0, this.immediateMode.vertices.length), this._pInst._pixelsDirty = !0, this.curFillShader.unbindShader();
          }, a.RendererGL.prototype._drawStrokeImmediateMode = function () {
            var e = this.GL;
            this.curStrokeShader.bindShader(), this.curStrokeShader.attributes.aPosition && (this._bindBuffer(this.immediateMode.lineVertexBuffer, e.ARRAY_BUFFER, this._flatten(this.immediateMode.lineVertices), Float32Array, e.STATIC_DRAW), this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aPosition.location, 3, e.FLOAT, !1, 0, 0)), this.curStrokeShader.attributes.aDirection && (this._bindBuffer(this.immediateMode.lineNormalBuffer, e.ARRAY_BUFFER, this._flatten(this.immediateMode.lineNormals), Float32Array, e.STATIC_DRAW), this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aDirection.location, 4, e.FLOAT, !1, 0, 0)), this._applyColorBlend(this.curStrokeColor), e.drawArrays(e.TRIANGLES, 0, this.immediateMode.lineVertices.length), this.curStrokeShader.unbindShader(), this._pInst._pixelsDirty = !0;
          }, t.exports = a.RendererGL;
        }, {
          "../core/constants": 18,
          "../core/main": 24
        }],
        73: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = 0;
          a.RendererGL.prototype._initBufferDefaults = function (e) {
            if (this._freeBuffers(e), ++o > 1e3) {
              var t = Object.keys(this.gHash)[0];
              delete this.gHash[t], o--;
            }

            this.gHash[e] = {};
          }, a.RendererGL.prototype._freeBuffers = function (e) {
            var t = this.gHash[e];

            if (t) {
              delete this.gHash[e], o--;
              var n = this.GL;
              t.vertexBuffer && n.deleteBuffer(t.vertexBuffer), t.normalBuffer && n.deleteBuffer(t.normalBuffer), t.lineNormalBuffer && n.deleteBuffer(t.lineNormalBuffer), t.uvBuffer && n.deleteBuffer(t.uvBuffer), t.indexBuffer && n.deleteBuffer(t.indexBuffer), t.lineVertexBuffer && n.deleteBuffer(t.lineVertexBuffer);
            }
          }, a.RendererGL.prototype.createBuffers = function (e, t) {
            var n = this.GL;

            this._initBufferDefaults(e);

            var a = this.gHash[e];
            return a.numberOfItems = 3 * t.faces.length, a.lineVertexCount = t.lineVertices.length, this._useColorShader(), this.curStrokeShader.attributes.aPosition && (a.lineVertexBuffer = n.createBuffer(), this._bindBuffer(a.lineVertexBuffer, n.ARRAY_BUFFER, this._flatten(t.lineVertices), Float32Array, n.STATIC_DRAW), this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aPosition.location, 3, n.FLOAT, !1, 0, 0)), this.curStrokeShader.attributes.aDirection && (a.lineNormalBuffer = n.createBuffer(), this._bindBuffer(a.lineNormalBuffer, n.ARRAY_BUFFER, this._flatten(t.lineNormals), Float32Array, n.STATIC_DRAW), this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aDirection.location, 4, n.FLOAT, !1, 0, 0)), this.curFillShader.attributes.aPosition && (a.vertexBuffer = n.createBuffer(), this._bindBuffer(a.vertexBuffer, n.ARRAY_BUFFER, this._vToNArray(t.vertices), Float32Array, n.STATIC_DRAW), this.curFillShader.enableAttrib(this.curFillShader.attributes.aPosition.location, 3, n.FLOAT, !1, 0, 0)), a.indexBuffer = n.createBuffer(), this._bindBuffer(a.indexBuffer, n.ELEMENT_ARRAY_BUFFER, this._flatten(t.faces), Uint16Array, n.STATIC_DRAW), this.curFillShader.attributes.aNormal && (a.normalBuffer = n.createBuffer(), this._bindBuffer(a.normalBuffer, n.ARRAY_BUFFER, this._vToNArray(t.vertexNormals), Float32Array, n.STATIC_DRAW), this.curFillShader.enableAttrib(this.curFillShader.attributes.aNormal.location, 3, n.FLOAT, !1, 0, 0)), this.curFillShader.attributes.aTexCoord && (a.uvBuffer = n.createBuffer(), this._bindBuffer(a.uvBuffer, n.ARRAY_BUFFER, this._flatten(t.uvs), Float32Array, n.STATIC_DRAW), this.curFillShader.enableAttrib(this.curFillShader.attributes.aTexCoord.location, 2, n.FLOAT, !1, 0, 0)), a;
          }, a.RendererGL.prototype.drawBuffers = function (e) {
            var t = this.GL;

            this._useColorShader();

            var n = this.gHash[e];
            return this._doStroke && n.lineVertexCount > 0 && (this.curStrokeShader.bindShader(), n.lineVertexBuffer && (this._bindBuffer(n.lineVertexBuffer, t.ARRAY_BUFFER), this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aPosition.location, 3, t.FLOAT, !1, 0, 0)), n.lineNormalBuffer && (this._bindBuffer(n.lineNormalBuffer, t.ARRAY_BUFFER), this.curStrokeShader.enableAttrib(this.curStrokeShader.attributes.aDirection.location, 4, t.FLOAT, !1, 0, 0)), this._applyColorBlend(this.curStrokeColor), this._drawArrays(t.TRIANGLES, e), this.curStrokeShader.unbindShader()), !1 !== this._doFill && (this.curFillShader.bindShader(), n.vertexBuffer && (this._bindBuffer(n.vertexBuffer, t.ARRAY_BUFFER), this.curFillShader.enableAttrib(this.curFillShader.attributes.aPosition.location, 3, t.FLOAT, !1, 0, 0)), n.indexBuffer && this._bindBuffer(n.indexBuffer, t.ELEMENT_ARRAY_BUFFER), n.normalBuffer && (this._bindBuffer(n.normalBuffer, t.ARRAY_BUFFER), this.curFillShader.enableAttrib(this.curFillShader.attributes.aNormal.location, 3, t.FLOAT, !1, 0, 0)), n.uvBuffer && (this._bindBuffer(n.uvBuffer, t.ARRAY_BUFFER), this.curFillShader.enableAttrib(this.curFillShader.attributes.aTexCoord.location, 2, t.FLOAT, !1, 0, 0)), this._applyColorBlend(this.curFillColor), this._drawElements(t.TRIANGLES, e), this.curFillShader.unbindShader()), this;
          }, a.RendererGL.prototype.drawBuffersScaled = function (e, t, n, a) {
            var o = this.uMVMatrix.copy();

            try {
              this.uMVMatrix.scale(t, n, a), this.drawBuffers(e);
            } finally {
              this.uMVMatrix = o;
            }
          }, a.RendererGL.prototype._drawArrays = function (e, t) {
            return this.GL.drawArrays(e, 0, this.gHash[t].lineVertexCount), this._pInst._pixelsDirty = !0, this;
          }, a.RendererGL.prototype._drawElements = function (e, t) {
            this.GL.drawElements(e, this.gHash[t].numberOfItems, this.GL.UNSIGNED_SHORT, 0), this._pInst._pixelsDirty = !0;
          }, a.RendererGL.prototype._drawPoints = function (e, t) {
            var n = this.GL;
            this._bindBuffer(t, n.ARRAY_BUFFER, this._vToNArray(e), Float32Array, n.STATIC_DRAW), this.curPointShader.enableAttrib(this.curPointShader.attributes.aPosition.location, 3, n.FLOAT, !1, 0, 0), n.drawArrays(n.Points, 0, e.length);
          }, t.exports = a.RendererGL;
        }, {
          "../core/main": 24
        }],
        74: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants"),
              i = e("libtess");
          e("./p5.Shader"), e("./p5.Camera"), e("../core/p5.Renderer"), e("./p5.Matrix");
          var r = "attribute vec3 aPosition;\nattribute vec4 aVertexColor;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uResolution;\nuniform float uPointSize;\n\nvarying vec4 vColor;\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vColor = aVertexColor;\n  gl_PointSize = uPointSize;\n}\n",
              s = "precision mediump float;\nvarying vec4 vColor;\nvoid main(void) {\n  gl_FragColor = vColor;\n}",
              l = "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\n\nvarying vec3 vVertexNormal;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vVertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertTexCoord = aTexCoord;\n}\n",
              p = "precision mediump float;\nvarying vec3 vVertexNormal;\nvoid main(void) {\n  gl_FragColor = vec4(vVertexNormal, 1.0);\n}",
              d = "precision mediump float;\nvarying vec3 vVertexNormal;\nuniform vec4 uMaterialColor;\nvoid main(void) {\n  gl_FragColor = uMaterialColor;\n}",
              c = "attribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform mat4 uViewMatrix;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\nuniform int uDirectionalLightCount;\nuniform int uPointLightCount;\n\nuniform vec3 uAmbientColor[8];\nuniform vec3 uLightingDirection[8];\nuniform vec3 uDirectionalColor[8];\nuniform vec3 uPointLightLocation[8];\nuniform vec3 uPointLightColor[8];\nuniform bool uSpecular;\n\nvarying vec3 vVertexNormal;\nvarying vec2 vVertTexCoord;\nvarying vec3 vLightWeighting;\n\nvoid main(void){\n\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\n  vec3 vertexNormal = normalize(vec3( uNormalMatrix * aNormal ));\n  vVertexNormal = vertexNormal;\n  vVertTexCoord = aTexCoord;\n\n  vec4 mvPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n  vec3 eyeDirection = normalize(-mvPosition.xyz);\n\n  float shininess = 32.0;\n  float specularFactor = 2.0;\n  float diffuseFactor = 0.3;\n\n  vec3 ambientLightFactor = vec3(0.0);\n\n  for (int i = 0; i < 8; i++) {\n    if (uAmbientLightCount == i) break;\n    ambientLightFactor += uAmbientColor[i];\n  }\n\n\n  vec3 directionalLightFactor = vec3(0.0);\n\n  for (int j = 0; j < 8; j++) {\n    if (uDirectionalLightCount == j) break;\n    vec3 dir = uLightingDirection[j];\n    float directionalLightWeighting = max(dot(vertexNormal, -dir), 0.0);\n    directionalLightFactor += uDirectionalColor[j] * directionalLightWeighting;\n  }\n\n\n  vec3 pointLightFactor = vec3(0.0);\n\n  for (int k = 0; k < 8; k++) {\n    if (uPointLightCount == k) break;\n    vec3 loc = (uViewMatrix * vec4(uPointLightLocation[k], 1.0)).xyz;\n    vec3 lightDirection = normalize(loc - mvPosition.xyz);\n\n    float directionalLightWeighting = max(dot(vertexNormal, lightDirection), 0.0);\n\n    float specularLightWeighting = 0.0;\n    if (uSpecular ){\n      vec3 reflectionDirection = reflect(-lightDirection, vertexNormal);\n      specularLightWeighting = pow(max(dot(reflectionDirection, eyeDirection), 0.0), shininess);\n    }\n\n    pointLightFactor += uPointLightColor[k] * (specularFactor * specularLightWeighting\n      + directionalLightWeighting * diffuseFactor);\n  }\n\n  vLightWeighting =  ambientLightFactor + directionalLightFactor + pointLightFactor;\n}\n",
              u = "precision mediump float;\n\nuniform vec4 uMaterialColor;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uUseLighting;\n\nvarying vec3 vLightWeighting;\nvarying highp vec2 vVertTexCoord;\n\nvoid main(void) {\n  gl_FragColor = isTexture ? texture2D(uSampler, vVertTexCoord) : uMaterialColor;\n  if (uUseLighting)\n    gl_FragColor.rgb *= vLightWeighting;\n}",
              m = "precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec3 aNormal;\nattribute vec2 aTexCoord;\n\nuniform vec3 uAmbientColor[8];\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform mat3 uNormalMatrix;\nuniform int uAmbientLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvoid main(void){\n\n  vec4 viewModelPosition = uModelViewMatrix * vec4(aPosition, 1.0);\n\n  // Pass varyings to fragment shader\n  vViewPosition = viewModelPosition.xyz;\n  gl_Position = uProjectionMatrix * viewModelPosition;  \n\n  vNormal = normalize(uNormalMatrix * normalize(aNormal));\n  vTexCoord = aTexCoord;\n\n  vAmbientColor = vec3(0.0);\n  for (int i = 0; i < 8; i++) {\n    if (uAmbientLightCount == i) break;\n    vAmbientColor += uAmbientColor[i];\n  }\n}\n",
              h = "precision mediump float;\n\n//uniform mat4 uModelViewMatrix;\nuniform mat4 uViewMatrix;\n\nuniform vec4 uMaterialColor;\nuniform sampler2D uSampler;\nuniform bool isTexture;\nuniform bool uUseLighting;\n\nuniform vec3 uLightingDirection[8];\nuniform vec3 uDirectionalColor[8];\nuniform vec3 uPointLightLocation[8];\nuniform vec3 uPointLightColor[8];\nuniform bool uSpecular;\n\nuniform int uDirectionalLightCount;\nuniform int uPointLightCount;\n\nvarying vec3 vNormal;\nvarying vec2 vTexCoord;\nvarying vec3 vViewPosition;\nvarying vec3 vAmbientColor;\n\nvec3 V;\nvec3 N;\n\nconst float shininess = 32.0;\nconst float specularFactor = 2.0;\nconst float diffuseFactor = 0.73;\n\nstruct LightResult {\n\tfloat specular;\n\tfloat diffuse;\n};\n\nfloat phongSpecular(\n  vec3 lightDirection,\n  vec3 viewDirection,\n  vec3 surfaceNormal,\n  float shininess) {\n\n  vec3 R = normalize(reflect(-lightDirection, surfaceNormal));  \n  return pow(max(0.0, dot(R, viewDirection)), shininess);\n}\n\nfloat lambertDiffuse(\n  vec3 lightDirection,\n  vec3 surfaceNormal) {\n  return max(0.0, dot(-lightDirection, surfaceNormal));\n}\n\nLightResult light(vec3 lightVector) {\n\n  vec3 L = normalize(lightVector);\n\n  //compute our diffuse & specular terms\n  LightResult lr;\n  if (uSpecular)\n    lr.specular = phongSpecular(L, V, N, shininess);\n  lr.diffuse = lambertDiffuse(L, N);\n  return lr;\n}\n\nvoid main(void) {\n\n  V = normalize(vViewPosition);\n  N = vNormal;\n\n  vec3 diffuse = vec3(0.0);\n  float specular = 0.0;\n\n  for (int j = 0; j < 8; j++) {\n    if (uDirectionalLightCount == j) break;\n\n    LightResult result = light(uLightingDirection[j]);\n    diffuse += result.diffuse * uDirectionalColor[j];\n    specular += result.specular;\n  }\n\n  for (int k = 0; k < 8; k++) {\n    if (uPointLightCount == k) break;\n\n    vec3 lightPosition = (uViewMatrix * vec4(uPointLightLocation[k], 1.0)).xyz;\n    vec3 lightVector = vViewPosition - lightPosition;\n\t\n    //calculate attenuation\n    float lightDistance = length(lightVector);\n    float falloff = 500.0 / (lightDistance + 500.0);\n\n    LightResult result = light(lightVector);\n    diffuse += result.diffuse * falloff * uPointLightColor[k];\n    specular += result.specular * falloff;\n  }\n\n  gl_FragColor = isTexture ? texture2D(uSampler, vTexCoord) : uMaterialColor;\n  gl_FragColor.rgb = gl_FragColor.rgb * (diffuse * diffuseFactor + vAmbientColor) + specular * specularFactor;\n}",
              f = "precision mediump float;\n\nattribute vec3 aPosition;\nattribute vec2 aTexCoord;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\n\nuniform vec4 uGlyphRect;\nuniform float uGlyphOffset;\n\nvarying vec2 vTexCoord;\nvarying float w;\n\nvoid main() {\n  vec4 positionVec4 = vec4(aPosition, 1.0);\n\n  // scale by the size of the glyph's rectangle\n  positionVec4.xy *= uGlyphRect.zw - uGlyphRect.xy;\n\n  // move to the corner of the glyph\n  positionVec4.xy += uGlyphRect.xy;\n\n  // move to the letter's line offset\n  positionVec4.x += uGlyphOffset;\n  \n  gl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n  vTexCoord = aTexCoord;\n  w = gl_Position.w;\n}\n",
              g = "#extension GL_OES_standard_derivatives : enable\nprecision mediump float;\n\n#if 0\n  // simulate integer math using floats\n\t#define int float\n\t#define ivec2 vec2\n\t#define INT(x) float(x)\n\n\tint ifloor(float v) { return floor(v); }\n\tivec2 ifloor(vec2 v) { return floor(v); }\n\n#else\n  // use native integer math\n\tprecision mediump int;\n\t#define INT(x) x\n\n\tint ifloor(float v) { return int(v); }\n\tint ifloor(int v) { return v; }\n\tivec2 ifloor(vec2 v) { return ivec2(v); }\n\n#endif\n\nuniform sampler2D uSamplerStrokes;\nuniform sampler2D uSamplerRowStrokes;\nuniform sampler2D uSamplerRows;\nuniform sampler2D uSamplerColStrokes;\nuniform sampler2D uSamplerCols;\n\nuniform ivec2 uStrokeImageSize;\nuniform ivec2 uCellsImageSize;\nuniform ivec2 uGridImageSize;\n\nuniform ivec2 uGridOffset;\nuniform ivec2 uGridSize;\nuniform vec4 uMaterialColor;\n\nvarying vec2 vTexCoord;\n\n// some helper functions\nint round(float v) { return ifloor(v + 0.5); }\nivec2 round(vec2 v) { return ifloor(v + 0.5); }\nfloat saturate(float v) { return clamp(v, 0.0, 1.0); }\nvec2 saturate(vec2 v) { return clamp(v, 0.0, 1.0); }\n\nint mul(float v1, int v2) {\n  return ifloor(v1 * float(v2));\n}\n\nivec2 mul(vec2 v1, ivec2 v2) {\n  return ifloor(v1 * vec2(v2) + 0.5);\n}\n\n// unpack a 16-bit integer from a float vec2\nint getInt16(vec2 v) {\n  ivec2 iv = round(v * 255.0);\n  return iv.x * INT(128) + iv.y;\n}\n\nvec2 pixelScale;\nvec2 coverage = vec2(0.0);\nvec2 weight = vec2(0.5);\nconst float minDistance = 1.0/8192.0;\nconst float hardness = 1.05; // amount of antialias\n\n// the maximum number of curves in a glyph\nconst int N = INT(250);\n\n// retrieves an indexed pixel from a sampler\nvec4 getTexel(sampler2D sampler, int pos, ivec2 size) {\n  int width = size.x;\n  int y = ifloor(pos / width);\n  int x = pos - y * width;  // pos % width\n\n  return texture2D(sampler, (vec2(x, y) + 0.5) / vec2(size));\n}\n\nvoid calulateCrossings(vec2 p0, vec2 p1, vec2 p2, out vec2 C1, out vec2 C2) {\n\n  // get the coefficients of the quadratic in t\n  vec2 a = p0 - p1 * 2.0 + p2;\n  vec2 b = p0 - p1;\n  vec2 c = p0 - vTexCoord;\n\n  // found out which values of 't' it crosses the axes\n  vec2 surd = sqrt(max(vec2(0.0), b * b - a * c));\n  vec2 t1 = ((b - surd) / a).yx;\n  vec2 t2 = ((b + surd) / a).yx;\n\n  // approximate straight lines to avoid rounding errors\n  if (abs(a.y) < 0.001)\n    t1.x = t2.x = c.y / (2.0 * b.y);\n\n  if (abs(a.x) < 0.001)\n    t1.y = t2.y = c.x / (2.0 * b.x);\n\n  // plug into quadratic formula to find the corrdinates of the crossings\n  C1 = ((a * t1 - b * 2.0) * t1 + c) * pixelScale;\n  C2 = ((a * t2 - b * 2.0) * t2 + c) * pixelScale;\n}\n\nvoid coverageX(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  // determine on which side of the x-axis the points lie\n  bool y0 = p0.y > vTexCoord.y;\n  bool y1 = p1.y > vTexCoord.y;\n  bool y2 = p2.y > vTexCoord.y;\n\n  // could web be under the curve (after t1)?\n  if (y1 ? !y2 : y0) {\n    // add the coverage for t1\n    coverage.x += saturate(C1.x + 0.5);\n    // calculate the anti-aliasing for t1\n    weight.x = min(weight.x, abs(C1.x));\n  }\n\n  // are we outside the curve (after t2)?\n  if (y1 ? !y0 : y2) {\n    // subtract the coverage for t2\n    coverage.x -= saturate(C2.x + 0.5);\n    // calculate the anti-aliasing for t2\n    weight.x = min(weight.x, abs(C2.x));\n  }\n}\n\n// this is essentially the same as coverageX, but with the axes swapped\nvoid coverageY(vec2 p0, vec2 p1, vec2 p2) {\n\n  vec2 C1, C2;\n  calulateCrossings(p0, p1, p2, C1, C2);\n\n  bool x0 = p0.x > vTexCoord.x;\n  bool x1 = p1.x > vTexCoord.x;\n  bool x2 = p2.x > vTexCoord.x;\n\n  if (x1 ? !x2 : x0) {\n    coverage.y -= saturate(C1.y + 0.5);\n    weight.y = min(weight.y, abs(C1.y));\n  }\n\n  if (x1 ? !x0 : x2) {\n    coverage.y += saturate(C2.y + 0.5);\n    weight.y = min(weight.y, abs(C2.y));\n  }\n}\n\nvoid main() {\n\n  // calculate the pixel scale based on screen-coordinates\n  pixelScale = hardness / fwidth(vTexCoord);\n\n  // which grid cell is this pixel in?\n  ivec2 gridCoord = ifloor(vTexCoord * vec2(uGridSize));\n\n  // intersect curves in this row\n  {\n    // the index into the row info bitmap\n    int rowIndex = gridCoord.y + uGridOffset.y;\n    // fetch the info texel\n    vec4 rowInfo = getTexel(uSamplerRows, rowIndex, uGridImageSize);\n    // unpack the rowInfo\n    int rowStrokeIndex = getInt16(rowInfo.xy);\n    int rowStrokeCount = getInt16(rowInfo.zw);\n\n    for (int iRowStroke = INT(0); iRowStroke < N; iRowStroke++) {\n      if (iRowStroke >= rowStrokeCount)\n        break;\n\n      // each stroke is made up of 3 points: the start and control point\n      // and the start of the next curve.\n      // fetch the indices of this pair of strokes:\n      vec4 strokeIndices = getTexel(uSamplerRowStrokes, rowStrokeIndex++, uCellsImageSize);\n\n      // unpack the stroke index\n      int strokePos = getInt16(strokeIndices.xy);\n\n      // fetch the two strokes\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n\n      // calculate the coverage\n      coverageX(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  // intersect curves in this column\n  {\n    int colIndex = gridCoord.x + uGridOffset.x;\n    vec4 colInfo = getTexel(uSamplerCols, colIndex, uGridImageSize);\n    int colStrokeIndex = getInt16(colInfo.xy);\n    int colStrokeCount = getInt16(colInfo.zw);\n    \n    for (int iColStroke = INT(0); iColStroke < N; iColStroke++) {\n      if (iColStroke >= colStrokeCount)\n        break;\n\n      vec4 strokeIndices = getTexel(uSamplerColStrokes, colStrokeIndex++, uCellsImageSize);\n\n      int strokePos = getInt16(strokeIndices.xy);\n      vec4 stroke0 = getTexel(uSamplerStrokes, strokePos + INT(0), uStrokeImageSize);\n      vec4 stroke1 = getTexel(uSamplerStrokes, strokePos + INT(1), uStrokeImageSize);\n      coverageY(stroke0.xy, stroke0.zw, stroke1.xy);\n    }\n  }\n\n  weight = saturate(1.0 - weight * 2.0);\n  float distance = max(weight.x + weight.y, minDistance); // manhattan approx.\n  float antialias = abs(dot(coverage, weight) / distance);\n  float cover = min(abs(coverage.x), abs(coverage.y));\n  gl_FragColor = uMaterialColor;\n  gl_FragColor.a *= saturate(max(antialias, cover));\n}",
              y = "/*\n  Part of the Processing project - http://processing.org\n  Copyright (c) 2012-15 The Processing Foundation\n  Copyright (c) 2004-12 Ben Fry and Casey Reas\n  Copyright (c) 2001-04 Massachusetts Institute of Technology\n  This library is free software; you can redistribute it and/or\n  modify it under the terms of the GNU Lesser General Public\n  License as published by the Free Software Foundation, version 2.1.\n  This library is distributed in the hope that it will be useful,\n  but WITHOUT ANY WARRANTY; without even the implied warranty of\n  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n  Lesser General Public License for more details.\n  You should have received a copy of the GNU Lesser General\n  Public License along with this library; if not, write to the\n  Free Software Foundation, Inc., 59 Temple Place, Suite 330,\n  Boston, MA  02111-1307  USA\n*/\n\n#define PROCESSING_LINE_SHADER\n\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nuniform float uStrokeWeight;\n\nuniform vec4 uViewport;\n\n// using a scale <1 moves the lines towards the camera\n// in order to prevent popping effects due to half of\n// the line disappearing behind the geometry faces.\nvec3 scale = vec3(0.9995);\n\nattribute vec4 aPosition;\nattribute vec4 aDirection;\n  \nvoid main() {\n  vec4 posp = uModelViewMatrix * aPosition;\n  vec4 posq = uModelViewMatrix * (aPosition + vec4(aDirection.xyz, 0));\n\n  // Moving vertices slightly toward the camera\n  // to avoid depth-fighting with the fill triangles.\n  // Discussed here:\n  // http://www.opengl.org/discussion_boards/ubbthreads.php?ubb=showflat&Number=252848  \n  posp.xyz = posp.xyz * scale;\n  posq.xyz = posq.xyz * scale;\n\n  vec4 p = uProjectionMatrix * posp;\n  vec4 q = uProjectionMatrix * posq;\n\n  // formula to convert from clip space (range -1..1) to screen space (range 0..[width or height])\n  // screen_p = (p.xy/p.w + <1,1>) * 0.5 * uViewport.zw\n\n  // prevent division by W by transforming the tangent formula (div by 0 causes\n  // the line to disappear, see https://github.com/processing/processing/issues/5183)\n  // t = screen_q - screen_p\n  //\n  // tangent is normalized and we don't care which aDirection it points to (+-)\n  // t = +- normalize( screen_q - screen_p )\n  // t = +- normalize( (q.xy/q.w+<1,1>)*0.5*uViewport.zw - (p.xy/p.w+<1,1>)*0.5*uViewport.zw )\n  //\n  // extract common factor, <1,1> - <1,1> cancels out\n  // t = +- normalize( (q.xy/q.w - p.xy/p.w) * 0.5 * uViewport.zw )\n  //\n  // convert to common divisor\n  // t = +- normalize( ((q.xy*p.w - p.xy*q.w) / (p.w*q.w)) * 0.5 * uViewport.zw )\n  //\n  // remove the common scalar divisor/factor, not needed due to normalize and +-\n  // (keep uViewport - can't remove because it has different components for x and y\n  //  and corrects for aspect ratio, see https://github.com/processing/processing/issues/5181)\n  // t = +- normalize( (q.xy*p.w - p.xy*q.w) * uViewport.zw )\n\n  vec2 tangent = normalize((q.xy*p.w - p.xy*q.w) * uViewport.zw);\n\n  // flip tangent to normal (it's already normalized)\n  vec2 normal = vec2(-tangent.y, tangent.x);\n\n  float thickness = aDirection.w * uStrokeWeight;\n  vec2 offset = normal * thickness / 2.0;\n\n  // Perspective ---\n  // convert from world to clip by multiplying with projection scaling factor\n  // to get the right thickness (see https://github.com/processing/processing/issues/5182)\n  // invert Y, projections in Processing invert Y\n  vec2 perspScale = (uProjectionMatrix * vec4(1, -1, 0, 0)).xy;\n\n  // No Perspective ---\n  // multiply by W (to cancel out division by W later in the pipeline) and\n  // convert from screen to clip (derived from clip to screen above)\n  vec2 noPerspScale = p.w / (0.5 * uViewport.zw);\n\n  //gl_Position.xy = p.xy + offset.xy * mix(noPerspScale, perspScale, float(perspective > 0));\n  gl_Position.xy = p.xy + offset.xy * perspScale;\n  gl_Position.zw = p.zw;\n}\n",
              v = "precision mediump float;\nprecision mediump int;\n\nuniform vec4 uMaterialColor;\n\nvoid main() {\n  gl_FragColor = uMaterialColor;\n}",
              b = "attribute vec3 aPosition;\nuniform float uPointSize;\nvarying float vStrokeWeight;\nuniform mat4 uModelViewMatrix;\nuniform mat4 uProjectionMatrix;\nvoid main() {\n\tvec4 positionVec4 =  vec4(aPosition, 1.0);\n\tgl_Position = uProjectionMatrix * uModelViewMatrix * positionVec4;\n\tgl_PointSize = uPointSize;\n\tvStrokeWeight = uPointSize;\n}",
              w = "precision mediump float;\nprecision mediump int;\nuniform vec4 uMaterialColor;\nvarying float vStrokeWeight;\n\nvoid main(){\n\tfloat mask = 0.0;\n\n\t// make a circular mask using the gl_PointCoord (goes from 0 - 1 on a point)\n    // might be able to get a nicer edge on big strokeweights with smoothstep but slightly less performant\n\n\tmask = step(0.98, length(gl_PointCoord * 2.0 - 1.0));\n\n\t// if strokeWeight is 1 or less lets just draw a square\n\t// this prevents weird artifacting from carving circles when our points are really small\n\t// if strokeWeight is larger than 1, we just use it as is\n\n\tmask = mix(0.0, mask, clamp(floor(vStrokeWeight - 0.5),0.0,1.0));\n\n\t// throw away the borders of the mask\n    // otherwise we get weird alpha blending issues\n\n\tif(mask > 0.98){\n      discard;\n  \t}\n\n  \tgl_FragColor = vec4(uMaterialColor.rgb * (1.0 - mask), uMaterialColor.a) ;\n}";
          a.RendererGL = function (e, t, n, i) {
            return a.Renderer.call(this, e, t, n), this.attributes = {}, i = i || {}, this.attributes.alpha = void 0 === i.alpha || i.alpha, this.attributes.depth = void 0 === i.depth || i.depth, this.attributes.stencil = void 0 === i.stencil || i.stencil, this.attributes.antialias = void 0 !== i.antialias && i.antialias, this.attributes.premultipliedAlpha = void 0 !== i.premultipliedAlpha && i.premultipliedAlpha, this.attributes.preserveDrawingBuffer = void 0 === i.preserveDrawingBuffer || i.preserveDrawingBuffer, this.attributes.perPixelLighting = void 0 !== i.perPixelLighting && i.perPixelLighting, this._initContext(), this.isP3D = !0, this.GL = this.drawingContext, this.ambientLightColors = [], this.directionalLightDirections = [], this.directionalLightColors = [], this.pointLightPositions = [], this.pointLightColors = [], this.uMVMatrix = new a.Matrix(), this.uPMatrix = new a.Matrix(), this.uNMatrix = new a.Matrix("mat3"), this._curCamera = new a.Camera(this), this._curCamera._computeCameraDefaultSettings(), this._curCamera._setDefaultCamera(), this.gHash = {}, this._defaultLightShader = void 0, this._defaultImmediateModeShader = void 0, this._defaultNormalShader = void 0, this._defaultColorShader = void 0, this._defaultPointShader = void 0, this.curFillShader = void 0, this.curStrokeShader = void 0, this.curPointShader = void 0, this._useColorShader(), this.setStrokeShader(this._getLineShader()), this._usePointShader(), this._pointVertexBuffer = this.GL.createBuffer(), this.isImmediateDrawing = !1, this.immediateMode = {}, this.fill(255, 255, 255, 255), this.pointSize = 5, this.strokeWeight(1), this.stroke(0, 0, 0), this.textures = [], this.textureImage = void 0, this.textureMode = o.IMAGE, this._curveTightness = 6, this._lookUpTableBezier = [], this._lookUpTableQuadratic = [], this._lutBezierDetail = 0, this._lutQuadraticDetail = 0, this._tessy = this._initTessy(), this.fontInfos = {}, this;
          }, a.RendererGL.prototype = Object.create(a.Renderer.prototype), a.RendererGL.prototype._initContext = function () {
            try {
              if (this.drawingContext = this.canvas.getContext("webgl", this.attributes) || this.canvas.getContext("experimental-webgl", this.attributes), null === this.drawingContext) throw new Error("Error creating webgl context");
              console.log("p5.RendererGL: enabled webgl context");
              var e = this.drawingContext;
              e.enable(e.DEPTH_TEST), e.depthFunc(e.LEQUAL), e.viewport(0, 0, e.drawingBufferWidth, e.drawingBufferHeight), this._viewport = this.drawingContext.getParameter(this.drawingContext.VIEWPORT);
            } catch (e) {
              throw e;
            }
          }, a.RendererGL.prototype._resetContext = function (e, t, n) {
            var o = this.width,
                i = this.height,
                r = this.canvas.id,
                s = this.canvas;
            s && s.parentNode.removeChild(s), (s = document.createElement("canvas")).id = r, this._pInst._userNode ? this._pInst._userNode.appendChild(s) : document.body.appendChild(s), this._pInst.canvas = s;
            var l = new a.RendererGL(this._pInst.canvas, this._pInst, !0, e);
            this._pInst._setProperty("_renderer", l), l.resize(o, i), l._applyDefaults(), this._pInst._elements.push(l), "function" == typeof n && setTimeout(function () {
              n.apply(window._renderer, t);
            }, 0);
          }, a.prototype.setAttributes = function (e, t) {
            var n;
            this._assert3d("setAttributes"), void 0 !== t ? (n = {})[e] = t : e instanceof Object && (n = e), this.push(), this._renderer._resetContext(n), this.pop();
          }, a.RendererGL.prototype._update = function () {
            this.uMVMatrix.set(this._curCamera.cameraMatrix.mat4[0], this._curCamera.cameraMatrix.mat4[1], this._curCamera.cameraMatrix.mat4[2], this._curCamera.cameraMatrix.mat4[3], this._curCamera.cameraMatrix.mat4[4], this._curCamera.cameraMatrix.mat4[5], this._curCamera.cameraMatrix.mat4[6], this._curCamera.cameraMatrix.mat4[7], this._curCamera.cameraMatrix.mat4[8], this._curCamera.cameraMatrix.mat4[9], this._curCamera.cameraMatrix.mat4[10], this._curCamera.cameraMatrix.mat4[11], this._curCamera.cameraMatrix.mat4[12], this._curCamera.cameraMatrix.mat4[13], this._curCamera.cameraMatrix.mat4[14], this._curCamera.cameraMatrix.mat4[15]), this.ambientLightColors.length = 0, this.directionalLightDirections.length = 0, this.directionalLightColors.length = 0, this.pointLightPositions.length = 0, this.pointLightColors.length = 0;
          }, a.RendererGL.prototype.background = function () {
            var e = this._pInst.color.apply(this._pInst, arguments),
                t = e.levels[0] / 255,
                n = e.levels[1] / 255,
                a = e.levels[2] / 255,
                o = e.levels[3] / 255;

            this.GL.clearColor(t, n, a, o), this.GL.depthMask(!0), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
          }, a.RendererGL.prototype.fill = function (e, t, n, i) {
            var r = a.prototype.color.apply(this._pInst, arguments);
            this.curFillColor = r._array, this.isImmediateDrawing ? this.setFillShader(this._getImmediateModeShader()) : this.setFillShader(this._getColorShader()), this.drawMode = o.FILL, this.curFillShader.setUniform("uMaterialColor", this.curFillColor);
          }, a.RendererGL.prototype.stroke = function (e, t, n, o) {
            arguments[3] = 255;
            var i = a.prototype.color.apply(this._pInst, arguments);
            this.curStrokeColor = i._array, this.curStrokeShader.setUniform("uMaterialColor", this.curStrokeColor), this.curPointShader.setUniform("uMaterialColor", i._array);
          }, a.RendererGL.prototype.strokeWeight = function (e) {
            this.curStrokeWeight !== e && (this.pointSize = e, this.curStrokeWeight = e, this.curStrokeShader.setUniform("uStrokeWeight", e), this.curPointShader.setUniform("uPointSize", e));
          }, a.RendererGL.prototype.get = function (e, t, n, o) {
            var i = this._pInst || this,
                r = i._pixelDensity,
                s = e * r,
                l = t * r;

            if (1 === n && 1 === o) {
              var p = new Uint8Array(4);
              return this.drawingContext.readPixels(s, l, 1, 1, this.drawingContext.RGBA, this.drawingContext.UNSIGNED_BYTE, p), [p[0], p[1], p[2], p[3]];
            }

            var d = Math.min(n, i.width),
                c = Math.min(o, i.height),
                u = d * r,
                m = c * r,
                h = new a.Image(d, c);
            return h.canvas.getContext("2d").drawImage(this.canvas, s, l, u, m, 0, 0, d, c), h;
          }, a.RendererGL.prototype.loadPixels = function () {
            if (!0 === this.attributes.preserveDrawingBuffer) {
              var e = this._pInst._pixelDensity,
                  t = this.width,
                  n = this.height;
              t *= e, n *= e, void 0 === this.pixels && (this.pixels = new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4)), this.GL.readPixels(0, 0, t, n, this.GL.RGBA, this.GL.UNSIGNED_BYTE, this.pixels), this._pInst._setProperty("pixels", this.pixels);
            } else console.log("loadPixels only works in WebGL when preserveDrawingBuffer is true.");
          }, a.RendererGL.prototype.geometryInHash = function (e) {
            return void 0 !== this.gHash[e];
          }, a.RendererGL.prototype.resize = function (e, t) {
            a.Renderer.prototype.resize.call(this, e, t), this.GL.viewport(0, 0, this.GL.drawingBufferWidth, this.GL.drawingBufferHeight), this._viewport = this.GL.getParameter(this.GL.VIEWPORT), this._curCamera._resize(), void 0 !== this.pixels && (this.pixels = new Uint8Array(this.GL.drawingBufferWidth * this.GL.drawingBufferHeight * 4));
          }, a.RendererGL.prototype.clear = function () {
            var e = arguments[0] || 0,
                t = arguments[1] || 0,
                n = arguments[2] || 0,
                a = arguments[3] || 0;
            this.GL.clearColor(e, t, n, a), this.GL.clear(this.GL.COLOR_BUFFER_BIT | this.GL.DEPTH_BUFFER_BIT);
          }, a.RendererGL.prototype.translate = function (e, t, n) {
            return e instanceof a.Vector && (n = e.z, t = e.y, e = e.x), this.uMVMatrix.translate([e, t, n]), this;
          }, a.RendererGL.prototype.scale = function (e, t, n) {
            return this.uMVMatrix.scale(e, t, n), this;
          }, a.RendererGL.prototype.rotate = function (e, t) {
            return void 0 === t ? this.rotateZ(e) : (arguments[0] = this._pInst._fromRadians(e), a.Matrix.prototype.rotate.apply(this.uMVMatrix, arguments), this);
          }, a.RendererGL.prototype.rotateX = function (e) {
            return this.rotate(e, 1, 0, 0), this;
          }, a.RendererGL.prototype.rotateY = function (e) {
            return this.rotate(e, 0, 1, 0), this;
          }, a.RendererGL.prototype.rotateZ = function (e) {
            return this.rotate(e, 0, 0, 1), this;
          }, a.RendererGL.prototype.push = function () {
            var e = a.Renderer.prototype.push.apply(this),
                t = e.properties;
            return t.uMVMatrix = this.uMVMatrix.copy(), t.uPMatrix = this.uPMatrix.copy(), t._curCamera = this._curCamera, this._curCamera = this._curCamera.copy(), e;
          }, a.RendererGL.prototype.resetMatrix = function () {
            return this.uMVMatrix = a.Matrix.identity(this._pInst), this;
          }, a.RendererGL.prototype.setFillShader = function (e) {
            return this.curFillShader !== e && (this.curFillShader = e, this.curFillShader.init()), this.curFillShader;
          }, a.RendererGL.prototype.setPointShader = function (e) {
            return this.curPointShader !== e && (this.curPointShader = e, this.curPointShader.init()), this.curPointShader;
          }, a.RendererGL.prototype.setStrokeShader = function (e) {
            return this.curStrokeShader !== e && (this.curStrokeShader = e, this.curStrokeShader.init()), this.curStrokeShader;
          }, a.RendererGL.prototype._useLightShader = function () {
            return this.curFillShader && this.curFillShader.isLightShader() || this.setFillShader(this._getLightShader()), this.curFillShader;
          }, a.RendererGL.prototype._useColorShader = function () {
            return this.curFillShader && this.curFillShader !== this._defaultImmediateModeShader || this.setFillShader(this._getColorShader()), this.curFillShader;
          }, a.RendererGL.prototype._usePointShader = function () {
            return this.curPointShader || this.setPointShader(this._getPointShader()), this.curPointShader;
          }, a.RendererGL.prototype._useImmediateModeShader = function () {
            return this.curFillShader && this.curFillShader !== this._defaultColorShader || this.setFillShader(this._getImmediateModeShader()), this.curFillShader;
          }, a.RendererGL.prototype._getLightShader = function () {
            return this._defaultLightShader || (this.attributes.perPixelLighting ? this._defaultLightShader = new a.Shader(this, m, h) : this._defaultLightShader = new a.Shader(this, c, u)), this._defaultLightShader;
          }, a.RendererGL.prototype._getImmediateModeShader = function () {
            return this._defaultImmediateModeShader || (this._defaultImmediateModeShader = new a.Shader(this, r, s)), this._defaultImmediateModeShader;
          }, a.RendererGL.prototype._getNormalShader = function () {
            return this._defaultNormalShader || (this._defaultNormalShader = new a.Shader(this, l, p)), this._defaultNormalShader;
          }, a.RendererGL.prototype._getColorShader = function () {
            return this._defaultColorShader || (this._defaultColorShader = new a.Shader(this, l, d)), this._defaultColorShader;
          }, a.RendererGL.prototype._getPointShader = function () {
            return this._defaultPointShader || (this._defaultPointShader = new a.Shader(this, b, w)), this._defaultPointShader;
          }, a.RendererGL.prototype._getLineShader = function () {
            return this._defaultLineShader || (this._defaultLineShader = new a.Shader(this, y, v)), this._defaultLineShader;
          }, a.RendererGL.prototype._getFontShader = function () {
            return this._defaultFontShader || (this.GL.getExtension("OES_standard_derivatives"), this._defaultFontShader = new a.Shader(this, f, g)), this._defaultFontShader;
          }, a.RendererGL.prototype._getEmptyTexture = function () {
            if (!this._emptyTexture) {
              var e = new a.Image(1, 1);
              e.set(0, 0, 255), this._emptyTexture = new a.Texture(this, e);
            }

            return this._emptyTexture;
          }, a.RendererGL.prototype.getTexture = function (e) {
            for (var t = this.textures, n = 0; n < t.length; ++n) {
              var o = t[n];
              if (o.src === e) return o;
            }

            var i = new a.Texture(this, e);
            return this.textures.push(i), i;
          }, a.RendererGL.prototype._bindBuffer = function (e, t, n, a, o) {
            if (this.GL.bindBuffer(t, e), void 0 !== n) {
              var i = new a(n);
              this.GL.bufferData(t, i, o);
            }
          }, a.RendererGL.prototype.smooth = function () {
            !1 === this.attributes.antialias && this._pInst.setAttributes("antialias", !0);
          }, a.RendererGL.prototype.noSmooth = function () {
            !0 === this.attributes.antialias && this._pInst.setAttributes("antialias", !1);
          }, a.RendererGL.prototype._flatten = function (e) {
            if (0 === e.length) return [];

            if (e.length > 2e4) {
              var t,
                  n = Object.prototype.toString,
                  a = [],
                  o = e.slice();
              t = o.pop();

              do {
                "[object Array]" === n.call(t) ? o.push.apply(o, t) : a.push(t);
              } while (o.length && void 0 !== (t = o.pop()));

              return a.reverse(), a;
            }

            return [].concat.apply([], e);
          }, a.RendererGL.prototype._vToNArray = function (e) {
            return this._flatten(e.map(function (e) {
              return [e.x, e.y, e.z];
            }));
          }, a.prototype._assert3d = function (e) {
            if (!this._renderer.isP3D) throw new Error(e + "() is only supported in WEBGL mode. If you'd like to use 3D graphics and WebGL, see  https://p5js.org/examples/form-3d-primitives.html for more information.");
          }, a.RendererGL.prototype._initTessy = function () {
            var e = new i.GluTesselator();
            return e.gluTessCallback(i.gluEnum.GLU_TESS_VERTEX_DATA, function (e, t) {
              t[t.length] = e[0], t[t.length] = e[1], t[t.length] = e[2];
            }), e.gluTessCallback(i.gluEnum.GLU_TESS_BEGIN, function (e) {
              e !== i.primitiveType.GL_TRIANGLES && console.log("expected TRIANGLES but got type: " + e);
            }), e.gluTessCallback(i.gluEnum.GLU_TESS_ERROR, function (e) {
              console.log("error callback"), console.log("error number: " + e);
            }), e.gluTessCallback(i.gluEnum.GLU_TESS_COMBINE, function (e, t, n) {
              return [e[0], e[1], e[2]];
            }), e.gluTessCallback(i.gluEnum.GLU_TESS_EDGE_FLAG, function (e) {}), e;
          }, a.RendererGL.prototype._triangulate = function (e) {
            this._tessy.gluTessNormal(0, 0, 1);

            var t = [];

            this._tessy.gluTessBeginPolygon(t);

            for (var n = 0; n < e.length; n++) {
              this._tessy.gluTessBeginContour();

              for (var a = e[n], o = 0; o < a.length; o += 3) {
                var i = [a[o], a[o + 1], a[o + 2]];

                this._tessy.gluTessVertex(i, i);
              }

              this._tessy.gluTessEndContour();
            }

            return this._tessy.gluTessEndPolygon(), t;
          }, a.RendererGL.prototype._bezierCoefficients = function (e) {
            var t = e * e,
                n = 1 - e,
                a = n * n;
            return [a * n, 3 * a * e, 3 * n * t, t * e];
          }, a.RendererGL.prototype._quadraticCoefficients = function (e) {
            var t = 1 - e;
            return [t * t, 2 * t * e, e * e];
          }, a.RendererGL.prototype._bezierToCatmull = function (e) {
            return [e[1], e[1] + (e[2] - e[0]) / this._curveTightness, e[2] - (e[3] - e[1]) / this._curveTightness, e[2]];
          }, t.exports = a.RendererGL;
        }, {
          "../core/constants": 18,
          "../core/main": 24,
          "../core/p5.Renderer": 27,
          "./p5.Camera": 69,
          "./p5.Matrix": 71,
          "./p5.Shader": 75,
          libtess: 9
        }],
        75: [function (e, t, n) {
          "use strict";

          var a = e("../core/main");
          a.Shader = function (e, t, n) {
            this._renderer = e, this._vertSrc = t, this._fragSrc = n, this._vertShader = -1, this._fragShader = -1, this._glProgram = 0, this._loadedAttributes = !1, this.attributes = {}, this._loadedUniforms = !1, this.uniforms = {}, this._bound = !1, this.samplers = [];
          }, a.Shader.prototype.init = function () {
            if (0 === this._glProgram) {
              var e = this._renderer.GL;
              if (this._vertShader = e.createShader(e.VERTEX_SHADER), e.shaderSource(this._vertShader, this._vertSrc), e.compileShader(this._vertShader), !e.getShaderParameter(this._vertShader, e.COMPILE_STATUS)) return console.error("Yikes! An error occurred compiling the vertex shader:" + e.getShaderInfoLog(this._vertShader)), null;
              if (this._fragShader = e.createShader(e.FRAGMENT_SHADER), e.shaderSource(this._fragShader, this._fragSrc), e.compileShader(this._fragShader), !e.getShaderParameter(this._fragShader, e.COMPILE_STATUS)) return console.error("Darn! An error occurred compiling the fragment shader:" + e.getShaderInfoLog(this._fragShader)), null;
              this._glProgram = e.createProgram(), e.attachShader(this._glProgram, this._vertShader), e.attachShader(this._glProgram, this._fragShader), e.linkProgram(this._glProgram), e.getProgramParameter(this._glProgram, e.LINK_STATUS) || console.error("Snap! Error linking shader program: " + e.getProgramInfoLog(this._glProgram)), this._loadAttributes(), this._loadUniforms();
            }

            return this;
          }, a.Shader.prototype._loadAttributes = function () {
            if (!this._loadedAttributes) {
              this.attributes = {};

              for (var e = this._renderer.GL, t = e.getProgramParameter(this._glProgram, e.ACTIVE_ATTRIBUTES), n = 0; n < t; ++n) {
                var a = e.getActiveAttrib(this._glProgram, n),
                    o = a.name,
                    i = e.getAttribLocation(this._glProgram, o),
                    r = {};
                r.name = o, r.location = i, r.type = a.type, r.size = a.size, this.attributes[o] = r;
              }

              this._loadedAttributes = !0;
            }
          }, a.Shader.prototype._loadUniforms = function () {
            if (!this._loadedUniforms) {
              for (var e = this._renderer.GL, t = e.getProgramParameter(this._glProgram, e.ACTIVE_UNIFORMS), n = 0, a = 0; a < t; ++a) {
                var o = e.getActiveUniform(this._glProgram, a),
                    i = {};
                i.location = e.getUniformLocation(this._glProgram, o.name), i.size = o.size;
                var r = o.name;
                o.size > 1 && (r = r.substring(0, r.indexOf("[0]"))), i.name = r, i.type = o.type, i.type === e.SAMPLER_2D && (i.samplerIndex = n, n++, this.samplers.push(i)), this.uniforms[r] = i;
              }

              this._loadedUniforms = !0;
            }
          }, a.Shader.prototype.compile = function () {}, a.Shader.prototype.bindShader = function () {
            this.init(), this._bound || (this.useProgram(), this._bound = !0, this.bindTextures(), this._setMatrixUniforms(), this === this._renderer.curStrokeShader && this._setViewportUniform());
          }, a.Shader.prototype.unbindShader = function () {
            return this._bound && (this.unbindTextures(), this._bound = !1), this;
          }, a.Shader.prototype.bindTextures = function () {
            for (var e = this._renderer.GL, t = 0; t < this.samplers.length; t++) {
              var n = this.samplers[t],
                  a = n.texture;
              void 0 === a && (a = this._renderer._getEmptyTexture()), e.activeTexture(e.TEXTURE0 + n.samplerIndex), a.bindTexture(), a.update(), e.uniform1i(n.location, n.samplerIndex);
            }
          }, a.Shader.prototype.updateTextures = function () {
            for (var e = 0; e < this.samplers.length; e++) {
              var t = this.samplers[e].texture;
              t && t.update();
            }
          }, a.Shader.prototype.unbindTextures = function () {}, a.Shader.prototype._setMatrixUniforms = function () {
            this.setUniform("uProjectionMatrix", this._renderer.uPMatrix.mat4), this.setUniform("uModelViewMatrix", this._renderer.uMVMatrix.mat4), this.setUniform("uViewMatrix", this._renderer._curCamera.cameraMatrix.mat4), this === this._renderer.curFillShader && (this._renderer.uNMatrix.inverseTranspose(this._renderer.uMVMatrix), this.setUniform("uNormalMatrix", this._renderer.uNMatrix.mat3));
          }, a.Shader.prototype._setViewportUniform = function () {
            this.setUniform("uViewport", this._renderer._viewport);
          }, a.Shader.prototype.useProgram = function () {
            return this._renderer.GL.useProgram(this._glProgram), this;
          }, a.Shader.prototype.setUniform = function (e, t) {
            var n = this.uniforms[e];

            if (n) {
              var a = n.location,
                  o = this._renderer.GL;

              switch (this.useProgram(), n.type) {
                case o.BOOL:
                  !0 === t ? o.uniform1i(a, 1) : o.uniform1i(a, 0);
                  break;

                case o.INT:
                  n.size > 1 ? t.length && o.uniform1iv(a, t) : o.uniform1i(a, t);
                  break;

                case o.FLOAT:
                  n.size > 1 ? t.length && o.uniform1fv(a, t) : o.uniform1f(a, t);
                  break;

                case o.FLOAT_MAT3:
                  o.uniformMatrix3fv(a, !1, t);
                  break;

                case o.FLOAT_MAT4:
                  o.uniformMatrix4fv(a, !1, t);
                  break;

                case o.FLOAT_VEC2:
                  n.size > 1 ? t.length && o.uniform2fv(a, t) : o.uniform2f(a, t[0], t[1]);
                  break;

                case o.FLOAT_VEC3:
                  n.size > 1 ? t.length && o.uniform3fv(a, t) : o.uniform3f(a, t[0], t[1], t[2]);
                  break;

                case o.FLOAT_VEC4:
                  n.size > 1 ? t.length && o.uniform4fv(a, t) : o.uniform4f(a, t[0], t[1], t[2], t[3]);
                  break;

                case o.INT_VEC2:
                  n.size > 1 ? t.length && o.uniform2iv(a, t) : o.uniform2i(a, t[0], t[1]);
                  break;

                case o.INT_VEC3:
                  n.size > 1 ? t.length && o.uniform3iv(a, t) : o.uniform3i(a, t[0], t[1], t[2]);
                  break;

                case o.INT_VEC4:
                  n.size > 1 ? t.length && o.uniform4iv(a, t) : o.uniform4i(a, t[0], t[1], t[2], t[3]);
                  break;

                case o.SAMPLER_2D:
                  o.activeTexture(o.TEXTURE0 + n.samplerIndex), n.texture = this._renderer.getTexture(t), o.uniform1i(n.location, n.samplerIndex);
              }

              return this;
            }
          }, a.Shader.prototype.isLightShader = function () {
            return void 0 !== this.uniforms.uUseLighting || void 0 !== this.uniforms.uAmbientLightCount || void 0 !== this.uniforms.uDirectionalLightCount || void 0 !== this.uniforms.uPointLightCount || void 0 !== this.uniforms.uAmbientColor || void 0 !== this.uniforms.uDirectionalColor || void 0 !== this.uniforms.uPointLightLocation || void 0 !== this.uniforms.uPointLightColor || void 0 !== this.uniforms.uLightingDirection || void 0 !== this.uniforms.uSpecular;
          }, a.Shader.prototype.isTextureShader = function () {
            return this.samplerIndex > 0;
          }, a.Shader.prototype.isColorShader = function () {
            return void 0 !== this.attributes.aVertexColor || void 0 !== this.uniforms.uMaterialColor;
          }, a.Shader.prototype.isTexLightShader = function () {
            return this.isLightShader() && this.isTextureShader();
          }, a.Shader.prototype.isStrokeShader = function () {
            return void 0 !== this.uniforms.uStrokeWeight;
          }, a.Shader.prototype.enableAttrib = function (e, t, n, a, o, i) {
            var r = this._renderer.GL;
            return -1 !== e && (r.enableVertexAttribArray(e), r.vertexAttribPointer(e, t, n, a, o, i)), this;
          }, t.exports = a.Shader;
        }, {
          "../core/main": 24
        }],
        76: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          a.Texture = function (e, t) {
            this._renderer = e;
            var n = this._renderer.GL;
            this.src = t, this.glTex = void 0, this.glTarget = n.TEXTURE_2D, this.glFormat = n.RGBA, this.mipmaps = !1, this.glMinFilter = n.LINEAR, this.glMagFilter = n.LINEAR, this.glWrapS = n.CLAMP_TO_EDGE, this.glWrapT = n.CLAMP_TO_EDGE, this.isSrcMediaElement = void 0 !== a.MediaElement && t instanceof a.MediaElement, this._videoPrevUpdateTime = 0, this.isSrcHTMLElement = void 0 !== a.Element && t instanceof a.Element && !(t instanceof a.Graphics), this.isSrcP5Image = t instanceof a.Image, this.isSrcP5Graphics = t instanceof a.Graphics, this.isImageData = "undefined" != typeof ImageData && t instanceof ImageData;

            var o = this._getTextureDataFromSource();

            return this.width = o.width, this.height = o.height, this.init(o), this;
          }, a.Texture.prototype._getTextureDataFromSource = function () {
            var e;
            return this.isSrcP5Image ? e = this.src.canvas : this.isSrcMediaElement || this.isSrcP5Graphics || this.isSrcHTMLElement ? e = this.src.elt : this.isImageData && (e = this.src), e;
          }, a.Texture.prototype.init = function (e) {
            var t = this._renderer.GL;

            if (this.glTex = t.createTexture(), this.bindTexture(), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MAG_FILTER, this.glMagFilter), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_MIN_FILTER, this.glMinFilter), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_S, this.glWrapS), t.texParameteri(t.TEXTURE_2D, t.TEXTURE_WRAP_T, this.glWrapT), 0 === this.width || 0 === this.height || this.isSrcMediaElement && !this.src.loadedmetadata) {
              var n = new Uint8Array([1, 1, 1, 1]);
              t.texImage2D(this.glTarget, 0, t.RGBA, 1, 1, 0, this.glFormat, t.UNSIGNED_BYTE, n);
            } else t.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, t.UNSIGNED_BYTE, e);
          }, a.Texture.prototype.update = function () {
            var e = this.src;
            if (0 === e.width || 0 === e.height) return !1;

            var t = this._getTextureDataFromSource(),
                n = !1,
                a = this._renderer.GL;

            return t.width !== this.width || t.height !== this.height ? (n = !0, this.width = t.width, this.height = t.height, this.isSrcP5Image ? e.setModified(!1) : (this.isSrcMediaElement || this.isSrcHTMLElement) && e.setModified(!0)) : this.isSrcP5Image ? e.isModified() && (n = !0, e.setModified(!1)) : this.isSrcMediaElement ? e.isModified() ? (n = !0, e.setModified(!1)) : e.loadedmetadata && this._videoPrevUpdateTime !== e.time() && (this._videoPrevUpdateTime = e.time(), n = !0) : this.isImageData ? e._dirty && (e._dirty = !1, n = !0) : n = !0, n && (this.bindTexture(), a.texImage2D(this.glTarget, 0, this.glFormat, this.glFormat, a.UNSIGNED_BYTE, t)), n;
          }, a.Texture.prototype.bindTexture = function () {
            return this._renderer.GL.bindTexture(this.glTarget, this.glTex), this;
          }, a.Texture.prototype.unbindTexture = function () {
            this._renderer.GL.bindTexture(this.glTarget, null);
          }, a.Texture.prototype.setInterpolation = function (e, t) {
            var n = this._renderer.GL;
            e === o.NEAREST ? this.glMinFilter = n.NEAREST : this.glMinFilter = n.LINEAR, t === o.NEAREST ? this.glMagFilter = n.NEAREST : this.glMagFilter = n.LINEAR, this.bindTexture(), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MIN_FILTER, this.glMinFilter), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_MAG_FILTER, this.glMagFilter), this.unbindTexture();
          }, a.Texture.prototype.setWrapMode = function (e, t) {
            var n = this._renderer.GL,
                a = function (e) {
              return 0 == (e & e - 1);
            },
                i = a(this.width),
                r = a(this.width);

            e === o.REPEAT ? i && r ? this.glWrapS = n.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = n.CLAMP_TO_EDGE) : e === o.MIRROR ? i && r ? this.glWrapS = n.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapS = n.CLAMP_TO_EDGE) : this.glWrapS = n.CLAMP_TO_EDGE, t === o.REPEAT ? i && r ? this.glWrapT = n.REPEAT : (console.warn("You tried to set the wrap mode to REPEAT but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = n.CLAMP_TO_EDGE) : t === o.MIRROR ? i && r ? this.glWrapT = n.MIRRORED_REPEAT : (console.warn("You tried to set the wrap mode to MIRROR but the texture size is not a power of two. Setting to CLAMP instead"), this.glWrapT = n.CLAMP_TO_EDGE) : this.glWrapT = n.CLAMP_TO_EDGE, this.bindTexture(), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_S, this.glWrapS), n.texParameteri(n.TEXTURE_2D, n.TEXTURE_WRAP_T, this.glWrapT), this.unbindTexture();
          }, t.exports = a.Texture;
        }, {
          "../core/constants": 18,
          "../core/main": 24
        }],
        77: [function (e, t, n) {
          "use strict";

          var a = e("../core/main"),
              o = e("../core/constants");
          e("./p5.Shader"), e("./p5.RendererGL"), a.RendererGL.prototype._applyTextProperties = function () {}, a.RendererGL.prototype.textWidth = function (e) {
            return this._isOpenType() ? this._textFont._textWidth(e, this._textSize) : 0;
          };
          var i = 9,
              r = i;

          function s(e, t) {
            this.width = e, this.height = t, this.infos = [], this.findImage = function (e) {
              var t,
                  n,
                  a = this.width * this.height;
              if (e > a) throw new Error("font is too complex to render in 3D");

              for (var o = this.infos.length - 1; o >= 0; --o) {
                var i = this.infos[o];

                if (i.index + e < a) {
                  t = i, n = i.imageData;
                  break;
                }
              }

              if (!t) {
                try {
                  n = new ImageData(this.width, this.height);
                } catch (e) {
                  var r = document.getElementsByTagName("canvas")[0],
                      s = !r;
                  r || ((r = document.createElement("canvas")).style.display = "none", document.body.appendChild(r));
                  var l = r.getContext("2d");
                  l && (n = l.createImageData(this.width, this.height)), s && document.body.removeChild(r);
                }

                t = {
                  index: 0,
                  imageData: n
                }, this.infos.push(t);
              }

              var p = t.index;
              return t.index += e, n._dirty = !0, {
                imageData: n,
                index: p
              };
            };
          }

          function l(e, t, n, a, o) {
            var i = e.imageData.data,
                r = 4 * e.index++;
            i[r++] = t, i[r++] = n, i[r++] = a, i[r++] = o;
          }

          var p = Math.sqrt(3),
              d = function (e) {
            this.font = e, this.strokeImageInfos = new s(64, 64), this.colDimImageInfos = new s(64, 64), this.rowDimImageInfos = new s(64, 64), this.colCellImageInfos = new s(64, 64), this.rowCellImageInfos = new s(64, 64), this.glyphInfos = {}, this.getGlyphInfo = function (e) {
              var t = this.glyphInfos[e.index];
              if (t) return t;
              var n,
                  o = e.getBoundingBox(),
                  s = o.x1,
                  d = o.y1,
                  c = o.x2 - s,
                  u = o.y2 - d,
                  m = e.path.commands;
              if (0 === c || 0 === u || !m.length) return this.glyphInfos[e.index] = {};
              var h,
                  f,
                  g,
                  y,
                  v = [],
                  b = [],
                  w = [];

              for (n = i - 1; n >= 0; --n) w.push([]);

              for (n = r - 1; n >= 0; --n) b.push([]);

              function x(e, t, n) {
                var a = v.length;

                function o(e, t, n) {
                  for (var a = e.length; a-- > 0;) {
                    var o = e[a];
                    t > o && (t = o), n < o && (n = o);
                  }

                  return {
                    min: t,
                    max: n
                  };
                }

                v.push(n);

                for (var s = o(e, 1, 0), l = Math.max(Math.floor(s.min * i), 0), p = Math.min(Math.ceil(s.max * i), i), d = l; d < p; ++d) w[d].push(a);

                for (var c = o(t, 1, 0), u = Math.max(Math.floor(c.min * r), 0), m = Math.min(Math.ceil(c.max * r), r), h = u; h < m; ++h) b[h].push(a);
              }

              function S(e) {
                return function (e, t, n) {
                  return e < t ? t : e > n ? n : e;
                }(255 * e, 0, 255);
              }

              function k(e, t, n, o) {
                this.p0 = e, this.c0 = t, this.c1 = n, this.p1 = o, this.toQuadratic = function () {
                  return {
                    x: this.p0.x,
                    y: this.p0.y,
                    x1: this.p1.x,
                    y1: this.p1.y,
                    cx: (3 * (this.c0.x + this.c1.x) - (this.p0.x + this.p1.x)) / 4,
                    cy: (3 * (this.c0.y + this.c1.y) - (this.p0.y + this.p1.y)) / 4
                  };
                }, this.quadError = function () {
                  return a.Vector.sub(a.Vector.sub(this.p1, this.p0), a.Vector.mult(a.Vector.sub(this.c1, this.c0), 3)).mag() / 2;
                }, this.split = function (e) {
                  var t = a.Vector.lerp(this.p0, this.c0, e),
                      n = a.Vector.lerp(this.c0, this.c1, e),
                      o = a.Vector.lerp(t, n, e);
                  this.c1 = a.Vector.lerp(this.c1, this.p1, e), this.c0 = a.Vector.lerp(n, this.c1, e);
                  var i = a.Vector.lerp(o, this.c0, e),
                      r = new k(this.p0, t, o, i);
                  return this.p0 = i, r;
                }, this.splitInflections = function () {
                  var e = a.Vector.sub(this.c0, this.p0),
                      t = a.Vector.sub(a.Vector.sub(this.c1, this.c0), e),
                      n = a.Vector.sub(a.Vector.sub(a.Vector.sub(this.p1, this.c1), e), a.Vector.mult(t, 2)),
                      o = [],
                      i = t.x * n.y - t.y * n.x;

                  if (0 !== i) {
                    var r = e.x * n.y - e.y * n.x,
                        s = e.x * t.y - e.y * t.x,
                        l = r * r - 4 * i * s;

                    if (l >= 0) {
                      i < 0 && (i = -i, r = -r, s = -s);
                      var p = Math.sqrt(l),
                          d = (-r - p) / (2 * i),
                          c = (-r + p) / (2 * i);
                      d > 0 && d < 1 && (o.push(this.split(d)), c = 1 - (1 - c) / (1 - d)), c > 0 && c < 1 && o.push(this.split(c));
                    }
                  }

                  return o.push(this), o;
                };
              }

              function T(e, t, n, o, i, r, s, l) {
                for (var d = new k(new a.Vector(e, t), new a.Vector(n, o), new a.Vector(i, r), new a.Vector(s, l)).splitInflections(), c = [], u = 30 / p, m = 0; m < d.length; m++) {
                  for (var h, f = d[m], g = []; !((h = u / f.quadError()) >= .125);) {
                    var y = Math.pow(h, 1 / 3),
                        v = f.split(y),
                        b = f.split(1 - y / (1 - y));
                    c.push(v), g.push(f), f = b;
                  }

                  h < 1 && c.push(f.split(.5)), c.push(f), Array.prototype.push.apply(c, g.reverse());
                }

                return c;
              }

              function C(e, t, n, a) {
                x([e, n], [t, a], {
                  x: e,
                  y: t,
                  cx: (e + n) / 2,
                  cy: (t + a) / 2
                });
              }

              function _(e, t, n, a) {
                return Math.abs(n - e) < 1e-5 && Math.abs(a - t) < 1e-5;
              }

              for (var M = 0; M < m.length; ++M) {
                var E = m[M],
                    j = (E.x - s) / c,
                    I = (E.y - d) / u;

                if (!_(h, f, j, I)) {
                  switch (E.type) {
                    case "M":
                      g = j, y = I;
                      break;

                    case "L":
                      C(h, f, j, I);
                      break;

                    case "Q":
                      var R = (E.x1 - s) / c,
                          N = (E.y1 - d) / u;
                      x([h, j, R], [f, I, N], {
                        x: h,
                        y: f,
                        cx: R,
                        cy: N
                      });
                      break;

                    case "Z":
                      _(h, f, g, y) ? v.push({
                        x: h,
                        y: f
                      }) : (C(h, f, g, y), v.push({
                        x: g,
                        y: y
                      }));
                      break;

                    case "C":
                      for (var A = T(h, f, (E.x1 - s) / c, (E.y1 - d) / u, (E.x2 - s) / c, (E.y2 - d) / u, j, I), D = 0; D < A.length; D++) {
                        var L = A[D].toQuadratic();
                        x([L.x, L.x1, L.cx], [L.y, L.y1, L.cy], L);
                      }

                      break;

                    default:
                      throw new Error("unknown command type: " + E.type);
                  }

                  h = j, f = I;
                }
              }

              for (var P = v.length, O = this.strokeImageInfos.findImage(P), F = O.index, B = 0; B < P; ++B) {
                var G = v[B];
                l(O, S(G.x), S(G.y), S(G.cx), S(G.cy));
              }

              function U(e, t, n) {
                for (var a = e.length, o = t.findImage(a), i = o.index, r = 0, s = 0; s < a; ++s) r += e[s].length;

                for (var p = n.findImage(r), d = 0; d < a; ++d) {
                  var c = e[d],
                      u = c.length,
                      m = p.index;
                  l(o, m >> 7, 127 & m, u >> 7, 127 & u);

                  for (var h = 0; h < u; ++h) {
                    var f = c[h] + F;
                    l(p, f >> 7, 127 & f, 0, 0);
                  }
                }

                return {
                  cellImageInfo: p,
                  dimOffset: i,
                  dimImageInfo: o
                };
              }

              return (t = this.glyphInfos[e.index] = {
                glyph: e,
                uGlyphRect: [o.x1, -o.y1, o.x2, -o.y2],
                strokeImageInfo: O,
                strokes: v,
                colInfo: U(w, this.colDimImageInfos, this.colCellImageInfos),
                rowInfo: U(b, this.rowDimImageInfos, this.rowCellImageInfos)
              }).uGridOffset = [t.colInfo.dimOffset, t.rowInfo.dimOffset], t;
            };
          };

          a.RendererGL.prototype._renderText = function (e, t, n, s, l) {
            if (!(s >= l) && this._doFill) {
              if (!this._isOpenType()) return console.log("WEBGL: only opentype fonts are supported"), e;
              e.push();
              var p = this.curFillShader,
                  c = this._doStroke,
                  u = this.drawMode;
              this.curFillShader = null, this._doStroke = !1, this.drawMode = o.TEXTURE;
              var m = this._textFont.font,
                  h = this._textFont._fontInfo;
              h || (h = this._textFont._fontInfo = new d(m));

              var f = this._textFont._handleAlignment(this, t, n, s),
                  g = this._textSize / m.unitsPerEm;

              this.translate(f.x, f.y, 0), this.scale(g, g, 1);
              var y = this.GL,
                  v = !this._defaultFontShader,
                  b = this.setFillShader(this._getFontShader());
              v && (b.setUniform("uGridImageSize", [64, 64]), b.setUniform("uCellsImageSize", [64, 64]), b.setUniform("uStrokeImageSize", [64, 64]), b.setUniform("uGridSize", [i, r])), this._applyColorBlend(this.curFillColor);
              var w = this.gHash.glyph;

              if (!w) {
                var x = this._textGeom = new a.Geometry(1, 1, function () {
                  for (var e = 0; e <= 1; e++) for (var t = 0; t <= 1; t++) this.vertices.push(new a.Vector(t, e, 0)), this.uvs.push(t, e);
                });
                x.computeFaces().computeNormals(), w = this.createBuffers("glyph", x);
              }

              this._bindBuffer(w.vertexBuffer, y.ARRAY_BUFFER), b.enableAttrib(b.attributes.aPosition.location, 3, y.FLOAT, !1, 0, 0), this._bindBuffer(w.indexBuffer, y.ELEMENT_ARRAY_BUFFER), this._bindBuffer(w.uvBuffer, y.ARRAY_BUFFER), b.enableAttrib(b.attributes.aTexCoord.location, 2, y.FLOAT, !1, 0, 0), b.setUniform("uMaterialColor", this.curFillColor);

              try {
                for (var S = 0, k = null, T = !1, C = m.stringToGlyphs(t), _ = 0; _ < C.length; ++_) {
                  var M = C[_];
                  k && (S += m.getKerningValue(k, M));
                  var E = h.getGlyphInfo(M);

                  if (E.uGlyphRect) {
                    var j = E.rowInfo,
                        I = E.colInfo;
                    b.setUniform("uSamplerStrokes", E.strokeImageInfo.imageData), b.setUniform("uSamplerRowStrokes", j.cellImageInfo.imageData), b.setUniform("uSamplerRows", j.dimImageInfo.imageData), b.setUniform("uSamplerColStrokes", I.cellImageInfo.imageData), b.setUniform("uSamplerCols", I.dimImageInfo.imageData), b.setUniform("uGridOffset", E.uGridOffset), b.setUniform("uGlyphRect", E.uGlyphRect), b.setUniform("uGlyphOffset", S), T ? b.bindTextures() : (T = !0, b.bindShader()), y.drawElements(y.TRIANGLES, 6, this.GL.UNSIGNED_SHORT, 0);
                  }

                  S += M.advanceWidth, k = M;
                }
              } finally {
                b.unbindShader(), this.curFillShader = p, this._doStroke = c, this.drawMode = u, e.pop();
              }

              return this._pInst._pixelsDirty = !0, e;
            }
          };
        }, {
          "../core/constants": 18,
          "../core/main": 24,
          "./p5.RendererGL": 74,
          "./p5.Shader": 75
        }]
      }, {}, [13])(13);
    }).call(this, n(3));
  }, function (e, t, n) {
    "use strict";

    n.r(t), n.d(t, "default", function () {
      return u;
    });
    var a = n(0),
        o = n.n(a),
        i = n(1),
        r = n.n(i);

    function s(e, t) {
      for (var n = 0; n < t.length; n++) {
        var a = t[n];
        a.enumerable = a.enumerable || !1, a.configurable = !0, "value" in a && (a.writable = !0), Object.defineProperty(e, a.key, a);
      }
    }

    function l(e, t) {
      return !t || "object" !== c(t) && "function" != typeof t ? function (e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
      }(e) : t;
    }

    function p(e) {
      return (p = Object.setPrototypeOf ? Object.getPrototypeOf : function (e) {
        return e.__proto__ || Object.getPrototypeOf(e);
      })(e);
    }

    function d(e, t) {
      return (d = Object.setPrototypeOf || function (e, t) {
        return e.__proto__ = t, e;
      })(e, t);
    }

    function c(e) {
      return (c = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) {
        return typeof e;
      } : function (e) {
        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
      })(e);
    }

    void 0 !== ("undefined" == typeof window ? "undefined" : c(window)) && (window.p5 = r.a);

    var u = function (e) {
      function t(e) {
        var n;
        return function (e, t) {
          if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }(this, t), (n = l(this, p(t).call(this, e))).canvasParentRef = o.a.createRef(), n;
      }

      var n, a, i;
      return function (e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
          constructor: {
            value: e,
            writable: !0,
            configurable: !0
          }
        }), t && d(e, t);
      }(t, e), n = t, (a = [{
        key: "componentDidMount",
        value: function () {
          var e = this;
          this.scketch = new r.a(function (t) {
            t.setup = function () {
              e.props.setup(t, e.canvasParentRef.current);
            }, ["draw", "windowResized", "preload", "mouseClicked", "doubleClicked", "mouseMoved", "mousePressed", "mouseWheel", "mouseDragged", "mouseReleased", "keyPressed", "keyReleased", "keyTyped", "touchStarted", "touchMoved", "touchEnded", "deviceMoved", "deviceTurned", "deviceShaken"].forEach(function (n) {
              e.props[n] && (t[n] = function () {
                e.props[n](t);
              });
            });
          });
        }
      }, {
        key: "shouldComponentUpdate",
        value: function () {
          return !1;
        }
      }, {
        key: "componentWillUnmount",
        value: function () {
          this.scketch.remove();
        }
      }, {
        key: "render",
        value: function () {
          return o.a.createElement("div", {
            ref: this.canvasParentRef,
            className: this.props.className || "",
            style: this.props.style || {}
          });
        }
      }]) && s(n.prototype, a), i && s(n, i), t;
    }(o.a.Component);
  }, function (e, t) {
    var n;

    n = function () {
      return this;
    }();

    try {
      n = n || new Function("return this")();
    } catch (e) {
      "object" == typeof window && (n = window);
    }

    e.exports = n;
  }]).default;
});

/***/ }),

/***/ "./node_modules/react/cjs/react.development.js":
/*!*****************************************************!*\
  !*** ./node_modules/react/cjs/react.development.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v16.12.0
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    var _assign = __webpack_require__(/*! object-assign */ "./node_modules/object-assign/index.js");

    var checkPropTypes = __webpack_require__(/*! prop-types/checkPropTypes */ "./node_modules/prop-types/checkPropTypes.js"); // TODO: this is special because it gets imported during build.


    var ReactVersion = '16.12.0'; // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
    // nor polyfill, then a plain number is used for performance.

    var hasSymbol = typeof Symbol === 'function' && Symbol.for;
    var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
    var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
    var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
    var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
    var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
    var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
    var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
    // (unstable) APIs that have been removed. Can we remove the symbols?

    var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
    var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
    var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
    var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
    var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
    var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
    var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
    var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
    var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
    var MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator';

    function getIteratorFn(maybeIterable) {
      if (maybeIterable === null || typeof maybeIterable !== 'object') {
        return null;
      }

      var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];

      if (typeof maybeIterator === 'function') {
        return maybeIterator;
      }

      return null;
    } // Do not require this module directly! Use normal `invariant` calls with
    // template literal strings. The messages will be replaced with error codes
    // during build.

    /**
     * Use invariant() to assert state which your program assumes to be true.
     *
     * Provide sprintf-style format (only %s is supported) and arguments
     * to provide information about what broke and what you were
     * expecting.
     *
     * The invariant message will be stripped in production, but the invariant
     * will remain to ensure logic does not differ in production.
     */

    /**
     * Forked from fbjs/warning:
     * https://github.com/facebook/fbjs/blob/e66ba20ad5be433eb54423f2b097d829324d9de6/packages/fbjs/src/__forks__/warning.js
     *
     * Only change is we use console.warn instead of console.error,
     * and do nothing when 'console' is not supported.
     * This really simplifies the code.
     * ---
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */


    var lowPriorityWarningWithoutStack = function () {};

    {
      var printWarning = function (format) {
        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
          args[_key - 1] = arguments[_key];
        }

        var argIndex = 0;
        var message = 'Warning: ' + format.replace(/%s/g, function () {
          return args[argIndex++];
        });

        if (typeof console !== 'undefined') {
          console.warn(message);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          throw new Error(message);
        } catch (x) {}
      };

      lowPriorityWarningWithoutStack = function (condition, format) {
        if (format === undefined) {
          throw new Error('`lowPriorityWarningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (!condition) {
          for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {
            args[_key2 - 2] = arguments[_key2];
          }

          printWarning.apply(void 0, [format].concat(args));
        }
      };
    }
    var lowPriorityWarningWithoutStack$1 = lowPriorityWarningWithoutStack;
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var warningWithoutStack = function () {};

    {
      warningWithoutStack = function (condition, format) {
        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        if (format === undefined) {
          throw new Error('`warningWithoutStack(condition, format, ...args)` requires a warning ' + 'message argument');
        }

        if (args.length > 8) {
          // Check before the condition to catch violations early.
          throw new Error('warningWithoutStack() currently supports at most 8 arguments.');
        }

        if (condition) {
          return;
        }

        if (typeof console !== 'undefined') {
          var argsWithFormat = args.map(function (item) {
            return '' + item;
          });
          argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it
          // breaks IE9: https://github.com/facebook/react/issues/13610

          Function.prototype.apply.call(console.error, console, argsWithFormat);
        }

        try {
          // --- Welcome to debugging React ---
          // This error was thrown as a convenience so that you can use this stack
          // to find the callsite that caused this warning to fire.
          var argIndex = 0;
          var message = 'Warning: ' + format.replace(/%s/g, function () {
            return args[argIndex++];
          });
          throw new Error(message);
        } catch (x) {}
      };
    }
    var warningWithoutStack$1 = warningWithoutStack;
    var didWarnStateUpdateForUnmountedComponent = {};

    function warnNoop(publicInstance, callerName) {
      {
        var _constructor = publicInstance.constructor;
        var componentName = _constructor && (_constructor.displayName || _constructor.name) || 'ReactClass';
        var warningKey = componentName + "." + callerName;

        if (didWarnStateUpdateForUnmountedComponent[warningKey]) {
          return;
        }

        warningWithoutStack$1(false, "Can't call %s on a component that is not yet mounted. " + 'This is a no-op, but it might indicate a bug in your application. ' + 'Instead, assign to `this.state` directly or define a `state = {};` ' + 'class property with the desired state in the %s component.', callerName, componentName);
        didWarnStateUpdateForUnmountedComponent[warningKey] = true;
      }
    }
    /**
     * This is the abstract API for an update queue.
     */


    var ReactNoopUpdateQueue = {
      /**
       * Checks whether or not this composite component is mounted.
       * @param {ReactClass} publicInstance The instance we want to test.
       * @return {boolean} True if mounted, false otherwise.
       * @protected
       * @final
       */
      isMounted: function (publicInstance) {
        return false;
      },

      /**
       * Forces an update. This should only be invoked when it is known with
       * certainty that we are **not** in a DOM transaction.
       *
       * You may want to call this when you know that some deeper aspect of the
       * component's state has changed but `setState` was not called.
       *
       * This will not invoke `shouldComponentUpdate`, but it will invoke
       * `componentWillUpdate` and `componentDidUpdate`.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueForceUpdate: function (publicInstance, callback, callerName) {
        warnNoop(publicInstance, 'forceUpdate');
      },

      /**
       * Replaces all of the state. Always use this or `setState` to mutate state.
       * You should treat `this.state` as immutable.
       *
       * There is no guarantee that `this.state` will be immediately updated, so
       * accessing `this.state` after calling this method may return the old value.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} completeState Next state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} callerName name of the calling function in the public API.
       * @internal
       */
      enqueueReplaceState: function (publicInstance, completeState, callback, callerName) {
        warnNoop(publicInstance, 'replaceState');
      },

      /**
       * Sets a subset of the state. This only exists because _pendingState is
       * internal. This provides a merging strategy that is not available to deep
       * properties which is confusing. TODO: Expose pendingState or don't use it
       * during the merge.
       *
       * @param {ReactClass} publicInstance The instance that should rerender.
       * @param {object} partialState Next partial state to be merged with state.
       * @param {?function} callback Called after component is updated.
       * @param {?string} Name of the calling function in the public API.
       * @internal
       */
      enqueueSetState: function (publicInstance, partialState, callback, callerName) {
        warnNoop(publicInstance, 'setState');
      }
    };
    var emptyObject = {};
    {
      Object.freeze(emptyObject);
    }
    /**
     * Base class helpers for the updating state of a component.
     */

    function Component(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject; // We initialize the default updater but the real one gets injected by the
      // renderer.

      this.updater = updater || ReactNoopUpdateQueue;
    }

    Component.prototype.isReactComponent = {};
    /**
     * Sets a subset of the state. Always use this to mutate
     * state. You should treat `this.state` as immutable.
     *
     * There is no guarantee that `this.state` will be immediately updated, so
     * accessing `this.state` after calling this method may return the old value.
     *
     * There is no guarantee that calls to `setState` will run synchronously,
     * as they may eventually be batched together.  You can provide an optional
     * callback that will be executed when the call to setState is actually
     * completed.
     *
     * When a function is provided to setState, it will be called at some point in
     * the future (not synchronously). It will be called with the up to date
     * component arguments (state, props, context). These values can be different
     * from this.* because your function may be called after receiveProps but before
     * shouldComponentUpdate, and this new state, props, and context will not yet be
     * assigned to this.
     *
     * @param {object|function} partialState Next partial state or function to
     *        produce next partial state to be merged with current state.
     * @param {?function} callback Called after state is updated.
     * @final
     * @protected
     */

    Component.prototype.setState = function (partialState, callback) {
      if (!(typeof partialState === 'object' || typeof partialState === 'function' || partialState == null)) {
        {
          throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
        }
      }

      this.updater.enqueueSetState(this, partialState, callback, 'setState');
    };
    /**
     * Forces an update. This should only be invoked when it is known with
     * certainty that we are **not** in a DOM transaction.
     *
     * You may want to call this when you know that some deeper aspect of the
     * component's state has changed but `setState` was not called.
     *
     * This will not invoke `shouldComponentUpdate`, but it will invoke
     * `componentWillUpdate` and `componentDidUpdate`.
     *
     * @param {?function} callback Called after update is complete.
     * @final
     * @protected
     */


    Component.prototype.forceUpdate = function (callback) {
      this.updater.enqueueForceUpdate(this, callback, 'forceUpdate');
    };
    /**
     * Deprecated APIs. These APIs used to exist on classic React classes but since
     * we would like to deprecate them, we're not going to move them over to this
     * modern base class. Instead, we define a getter that warns if it's accessed.
     */


    {
      var deprecatedAPIs = {
        isMounted: ['isMounted', 'Instead, make sure to clean up subscriptions and pending requests in ' + 'componentWillUnmount to prevent memory leaks.'],
        replaceState: ['replaceState', 'Refactor your code to use setState instead (see ' + 'https://github.com/facebook/react/issues/3236).']
      };

      var defineDeprecationWarning = function (methodName, info) {
        Object.defineProperty(Component.prototype, methodName, {
          get: function () {
            lowPriorityWarningWithoutStack$1(false, '%s(...) is deprecated in plain JavaScript React classes. %s', info[0], info[1]);
            return undefined;
          }
        });
      };

      for (var fnName in deprecatedAPIs) {
        if (deprecatedAPIs.hasOwnProperty(fnName)) {
          defineDeprecationWarning(fnName, deprecatedAPIs[fnName]);
        }
      }
    }

    function ComponentDummy() {}

    ComponentDummy.prototype = Component.prototype;
    /**
     * Convenience component with default shallow equality check for sCU.
     */

    function PureComponent(props, context, updater) {
      this.props = props;
      this.context = context; // If a component has string refs, we will assign a different object later.

      this.refs = emptyObject;
      this.updater = updater || ReactNoopUpdateQueue;
    }

    var pureComponentPrototype = PureComponent.prototype = new ComponentDummy();
    pureComponentPrototype.constructor = PureComponent; // Avoid an extra prototype jump for these methods.

    _assign(pureComponentPrototype, Component.prototype);

    pureComponentPrototype.isPureReactComponent = true; // an immutable object with a single mutable value

    function createRef() {
      var refObject = {
        current: null
      };
      {
        Object.seal(refObject);
      }
      return refObject;
    }
    /**
     * Keeps track of the current dispatcher.
     */


    var ReactCurrentDispatcher = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    /**
     * Keeps track of the current batch's configuration such as how long an update
     * should suspend for if it needs to.
     */

    var ReactCurrentBatchConfig = {
      suspense: null
    };
    /**
     * Keeps track of the current owner.
     *
     * The current owner is the component who should own any components that are
     * currently being constructed.
     */

    var ReactCurrentOwner = {
      /**
       * @internal
       * @type {ReactComponent}
       */
      current: null
    };
    var BEFORE_SLASH_RE = /^(.*)[\\\/]/;

    var describeComponentFrame = function (name, source, ownerName) {
      var sourceInfo = '';

      if (source) {
        var path = source.fileName;
        var fileName = path.replace(BEFORE_SLASH_RE, '');
        {
          // In DEV, include code for a common special case:
          // prefer "folder/index.js" instead of just "index.js".
          if (/^index\./.test(fileName)) {
            var match = path.match(BEFORE_SLASH_RE);

            if (match) {
              var pathBeforeSlash = match[1];

              if (pathBeforeSlash) {
                var folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');
                fileName = folderName + '/' + fileName;
              }
            }
          }
        }
        sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';
      } else if (ownerName) {
        sourceInfo = ' (created by ' + ownerName + ')';
      }

      return '\n    in ' + (name || 'Unknown') + sourceInfo;
    };

    var Resolved = 1;

    function refineResolvedLazyComponent(lazyComponent) {
      return lazyComponent._status === Resolved ? lazyComponent._result : null;
    }

    function getWrappedName(outerType, innerType, wrapperName) {
      var functionName = innerType.displayName || innerType.name || '';
      return outerType.displayName || (functionName !== '' ? wrapperName + "(" + functionName + ")" : wrapperName);
    }

    function getComponentName(type) {
      if (type == null) {
        // Host root, text node or just invalid type.
        return null;
      }

      {
        if (typeof type.tag === 'number') {
          warningWithoutStack$1(false, 'Received an unexpected object in getComponentName(). ' + 'This is likely a bug in React. Please file an issue.');
        }
      }

      if (typeof type === 'function') {
        return type.displayName || type.name || null;
      }

      if (typeof type === 'string') {
        return type;
      }

      switch (type) {
        case REACT_FRAGMENT_TYPE:
          return 'Fragment';

        case REACT_PORTAL_TYPE:
          return 'Portal';

        case REACT_PROFILER_TYPE:
          return "Profiler";

        case REACT_STRICT_MODE_TYPE:
          return 'StrictMode';

        case REACT_SUSPENSE_TYPE:
          return 'Suspense';

        case REACT_SUSPENSE_LIST_TYPE:
          return 'SuspenseList';
      }

      if (typeof type === 'object') {
        switch (type.$$typeof) {
          case REACT_CONTEXT_TYPE:
            return 'Context.Consumer';

          case REACT_PROVIDER_TYPE:
            return 'Context.Provider';

          case REACT_FORWARD_REF_TYPE:
            return getWrappedName(type, type.render, 'ForwardRef');

          case REACT_MEMO_TYPE:
            return getComponentName(type.type);

          case REACT_LAZY_TYPE:
            {
              var thenable = type;
              var resolvedThenable = refineResolvedLazyComponent(thenable);

              if (resolvedThenable) {
                return getComponentName(resolvedThenable);
              }

              break;
            }
        }
      }

      return null;
    }

    var ReactDebugCurrentFrame = {};
    var currentlyValidatingElement = null;

    function setCurrentlyValidatingElement(element) {
      {
        currentlyValidatingElement = element;
      }
    }

    {
      // Stack implementation injected by the current renderer.
      ReactDebugCurrentFrame.getCurrentStack = null;

      ReactDebugCurrentFrame.getStackAddendum = function () {
        var stack = ''; // Add an extra top frame while an element is being validated

        if (currentlyValidatingElement) {
          var name = getComponentName(currentlyValidatingElement.type);
          var owner = currentlyValidatingElement._owner;
          stack += describeComponentFrame(name, currentlyValidatingElement._source, owner && getComponentName(owner.type));
        } // Delegate to the injected renderer-specific implementation


        var impl = ReactDebugCurrentFrame.getCurrentStack;

        if (impl) {
          stack += impl() || '';
        }

        return stack;
      };
    }
    /**
     * Used by act() to track whether you're inside an act() scope.
     */

    var IsSomeRendererActing = {
      current: false
    };
    var ReactSharedInternals = {
      ReactCurrentDispatcher: ReactCurrentDispatcher,
      ReactCurrentBatchConfig: ReactCurrentBatchConfig,
      ReactCurrentOwner: ReactCurrentOwner,
      IsSomeRendererActing: IsSomeRendererActing,
      // Used by renderers to avoid bundling object-assign twice in UMD bundles:
      assign: _assign
    };
    {
      _assign(ReactSharedInternals, {
        // These should not be included in production.
        ReactDebugCurrentFrame: ReactDebugCurrentFrame,
        // Shim for React DOM 16.0.0 which still destructured (but not used) this.
        // TODO: remove in React 17.0.
        ReactComponentTreeHook: {}
      });
    }
    /**
     * Similar to invariant but only logs a warning if the condition is not met.
     * This can be used to log issues in development environments in critical
     * paths. Removing the logging code for production environments will keep the
     * same logic and follow the same code paths.
     */

    var warning = warningWithoutStack$1;
    {
      warning = function (condition, format) {
        if (condition) {
          return;
        }

        var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;
        var stack = ReactDebugCurrentFrame.getStackAddendum(); // eslint-disable-next-line react-internal/warning-and-invariant-args

        for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
          args[_key - 2] = arguments[_key];
        }

        warningWithoutStack$1.apply(void 0, [false, format + '%s'].concat(args, [stack]));
      };
    }
    var warning$1 = warning;
    var hasOwnProperty = Object.prototype.hasOwnProperty;
    var RESERVED_PROPS = {
      key: true,
      ref: true,
      __self: true,
      __source: true
    };
    var specialPropKeyWarningShown;
    var specialPropRefWarningShown;

    function hasValidRef(config) {
      {
        if (hasOwnProperty.call(config, 'ref')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.ref !== undefined;
    }

    function hasValidKey(config) {
      {
        if (hasOwnProperty.call(config, 'key')) {
          var getter = Object.getOwnPropertyDescriptor(config, 'key').get;

          if (getter && getter.isReactWarning) {
            return false;
          }
        }
      }
      return config.key !== undefined;
    }

    function defineKeyPropWarningGetter(props, displayName) {
      var warnAboutAccessingKey = function () {
        if (!specialPropKeyWarningShown) {
          specialPropKeyWarningShown = true;
          warningWithoutStack$1(false, '%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };

      warnAboutAccessingKey.isReactWarning = true;
      Object.defineProperty(props, 'key', {
        get: warnAboutAccessingKey,
        configurable: true
      });
    }

    function defineRefPropWarningGetter(props, displayName) {
      var warnAboutAccessingRef = function () {
        if (!specialPropRefWarningShown) {
          specialPropRefWarningShown = true;
          warningWithoutStack$1(false, '%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://fb.me/react-special-props)', displayName);
        }
      };

      warnAboutAccessingRef.isReactWarning = true;
      Object.defineProperty(props, 'ref', {
        get: warnAboutAccessingRef,
        configurable: true
      });
    }
    /**
     * Factory method to create a new React element. This no longer adheres to
     * the class pattern, so do not use new to call it. Also, instanceof check
     * will not work. Instead test $$typeof field against Symbol.for('react.element') to check
     * if something is a React Element.
     *
     * @param {*} type
     * @param {*} props
     * @param {*} key
     * @param {string|object} ref
     * @param {*} owner
     * @param {*} self A *temporary* helper to detect places where `this` is
     * different from the `owner` when React.createElement is called, so that we
     * can warn. We want to get rid of owner and replace string `ref`s with arrow
     * functions, and as long as `this` and owner are the same, there will be no
     * change in behavior.
     * @param {*} source An annotation object (added by a transpiler or otherwise)
     * indicating filename, line number, and/or other information.
     * @internal
     */


    var ReactElement = function (type, key, ref, self, source, owner, props) {
      var element = {
        // This tag allows us to uniquely identify this as a React Element
        $$typeof: REACT_ELEMENT_TYPE,
        // Built-in properties that belong on the element
        type: type,
        key: key,
        ref: ref,
        props: props,
        // Record the component responsible for creating this element.
        _owner: owner
      };
      {
        // The validation flag is currently mutative. We put it on
        // an external backing store so that we can freeze the whole object.
        // This can be replaced with a WeakMap once they are implemented in
        // commonly used development environments.
        element._store = {}; // To make comparing ReactElements easier for testing purposes, we make
        // the validation flag non-enumerable (where possible, which should
        // include every environment we run tests in), so the test framework
        // ignores it.

        Object.defineProperty(element._store, 'validated', {
          configurable: false,
          enumerable: false,
          writable: true,
          value: false
        }); // self and source are DEV only properties.

        Object.defineProperty(element, '_self', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: self
        }); // Two elements created in two different places should be considered
        // equal for testing purposes and therefore we hide it from enumeration.

        Object.defineProperty(element, '_source', {
          configurable: false,
          enumerable: false,
          writable: false,
          value: source
        });

        if (Object.freeze) {
          Object.freeze(element.props);
          Object.freeze(element);
        }
      }
      return element;
    };
    /**
     * https://github.com/reactjs/rfcs/pull/107
     * @param {*} type
     * @param {object} props
     * @param {string} key
     */

    /**
     * https://github.com/reactjs/rfcs/pull/107
     * @param {*} type
     * @param {object} props
     * @param {string} key
     */


    function jsxDEV(type, config, maybeKey, source, self) {
      var propName; // Reserved names are extracted

      var props = {};
      var key = null;
      var ref = null; // Currently, key can be spread in as a prop. This causes a potential
      // issue if key is also explicitly declared (ie. <div {...props} key="Hi" />
      // or <div key="Hi" {...props} /> ). We want to deprecate key spread,
      // but as an intermediary step, we will use jsxDEV for everything except
      // <div {...props} key="Hi" />, because we aren't currently able to tell if
      // key is explicitly declared to be undefined or not.

      if (maybeKey !== undefined) {
        key = '' + maybeKey;
      }

      if (hasValidKey(config)) {
        key = '' + config.key;
      }

      if (hasValidRef(config)) {
        ref = config.ref;
      } // Remaining properties are added to a new props object


      for (propName in config) {
        if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
          props[propName] = config[propName];
        }
      } // Resolve default props


      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;

        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }

      if (key || ref) {
        var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

        if (key) {
          defineKeyPropWarningGetter(props, displayName);
        }

        if (ref) {
          defineRefPropWarningGetter(props, displayName);
        }
      }

      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    /**
     * Create and return a new ReactElement of the given type.
     * See https://reactjs.org/docs/react-api.html#createelement
     */


    function createElement(type, config, children) {
      var propName; // Reserved names are extracted

      var props = {};
      var key = null;
      var ref = null;
      var self = null;
      var source = null;

      if (config != null) {
        if (hasValidRef(config)) {
          ref = config.ref;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        }

        self = config.__self === undefined ? null : config.__self;
        source = config.__source === undefined ? null : config.__source; // Remaining properties are added to a new props object

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            props[propName] = config[propName];
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        {
          if (Object.freeze) {
            Object.freeze(childArray);
          }
        }
        props.children = childArray;
      } // Resolve default props


      if (type && type.defaultProps) {
        var defaultProps = type.defaultProps;

        for (propName in defaultProps) {
          if (props[propName] === undefined) {
            props[propName] = defaultProps[propName];
          }
        }
      }

      {
        if (key || ref) {
          var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;

          if (key) {
            defineKeyPropWarningGetter(props, displayName);
          }

          if (ref) {
            defineRefPropWarningGetter(props, displayName);
          }
        }
      }
      return ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);
    }
    /**
     * Return a function that produces ReactElements of a given type.
     * See https://reactjs.org/docs/react-api.html#createfactory
     */


    function cloneAndReplaceKey(oldElement, newKey) {
      var newElement = ReactElement(oldElement.type, newKey, oldElement.ref, oldElement._self, oldElement._source, oldElement._owner, oldElement.props);
      return newElement;
    }
    /**
     * Clone and return a new ReactElement using element as the starting point.
     * See https://reactjs.org/docs/react-api.html#cloneelement
     */


    function cloneElement(element, config, children) {
      if (!!(element === null || element === undefined)) {
        {
          throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + element + ".");
        }
      }

      var propName; // Original props are copied

      var props = _assign({}, element.props); // Reserved names are extracted


      var key = element.key;
      var ref = element.ref; // Self is preserved since the owner is preserved.

      var self = element._self; // Source is preserved since cloneElement is unlikely to be targeted by a
      // transpiler, and the original source is probably a better indicator of the
      // true owner.

      var source = element._source; // Owner will be preserved, unless ref is overridden

      var owner = element._owner;

      if (config != null) {
        if (hasValidRef(config)) {
          // Silently steal the ref from the parent.
          ref = config.ref;
          owner = ReactCurrentOwner.current;
        }

        if (hasValidKey(config)) {
          key = '' + config.key;
        } // Remaining properties override existing props


        var defaultProps;

        if (element.type && element.type.defaultProps) {
          defaultProps = element.type.defaultProps;
        }

        for (propName in config) {
          if (hasOwnProperty.call(config, propName) && !RESERVED_PROPS.hasOwnProperty(propName)) {
            if (config[propName] === undefined && defaultProps !== undefined) {
              // Resolve default props
              props[propName] = defaultProps[propName];
            } else {
              props[propName] = config[propName];
            }
          }
        }
      } // Children can be more than one argument, and those are transferred onto
      // the newly allocated props object.


      var childrenLength = arguments.length - 2;

      if (childrenLength === 1) {
        props.children = children;
      } else if (childrenLength > 1) {
        var childArray = Array(childrenLength);

        for (var i = 0; i < childrenLength; i++) {
          childArray[i] = arguments[i + 2];
        }

        props.children = childArray;
      }

      return ReactElement(element.type, key, ref, self, source, owner, props);
    }
    /**
     * Verifies the object is a ReactElement.
     * See https://reactjs.org/docs/react-api.html#isvalidelement
     * @param {?object} object
     * @return {boolean} True if `object` is a ReactElement.
     * @final
     */


    function isValidElement(object) {
      return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
    }

    var SEPARATOR = '.';
    var SUBSEPARATOR = ':';
    /**
     * Escape and wrap key so it is safe to use as a reactid
     *
     * @param {string} key to be escaped.
     * @return {string} the escaped key.
     */

    function escape(key) {
      var escapeRegex = /[=:]/g;
      var escaperLookup = {
        '=': '=0',
        ':': '=2'
      };
      var escapedString = ('' + key).replace(escapeRegex, function (match) {
        return escaperLookup[match];
      });
      return '$' + escapedString;
    }
    /**
     * TODO: Test that a single child and an array with one item have the same key
     * pattern.
     */


    var didWarnAboutMaps = false;
    var userProvidedKeyEscapeRegex = /\/+/g;

    function escapeUserProvidedKey(text) {
      return ('' + text).replace(userProvidedKeyEscapeRegex, '$&/');
    }

    var POOL_SIZE = 10;
    var traverseContextPool = [];

    function getPooledTraverseContext(mapResult, keyPrefix, mapFunction, mapContext) {
      if (traverseContextPool.length) {
        var traverseContext = traverseContextPool.pop();
        traverseContext.result = mapResult;
        traverseContext.keyPrefix = keyPrefix;
        traverseContext.func = mapFunction;
        traverseContext.context = mapContext;
        traverseContext.count = 0;
        return traverseContext;
      } else {
        return {
          result: mapResult,
          keyPrefix: keyPrefix,
          func: mapFunction,
          context: mapContext,
          count: 0
        };
      }
    }

    function releaseTraverseContext(traverseContext) {
      traverseContext.result = null;
      traverseContext.keyPrefix = null;
      traverseContext.func = null;
      traverseContext.context = null;
      traverseContext.count = 0;

      if (traverseContextPool.length < POOL_SIZE) {
        traverseContextPool.push(traverseContext);
      }
    }
    /**
     * @param {?*} children Children tree container.
     * @param {!string} nameSoFar Name of the key path so far.
     * @param {!function} callback Callback to invoke with each child found.
     * @param {?*} traverseContext Used to pass information throughout the traversal
     * process.
     * @return {!number} The number of children in this subtree.
     */


    function traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {
      var type = typeof children;

      if (type === 'undefined' || type === 'boolean') {
        // All of the above are perceived as null.
        children = null;
      }

      var invokeCallback = false;

      if (children === null) {
        invokeCallback = true;
      } else {
        switch (type) {
          case 'string':
          case 'number':
            invokeCallback = true;
            break;

          case 'object':
            switch (children.$$typeof) {
              case REACT_ELEMENT_TYPE:
              case REACT_PORTAL_TYPE:
                invokeCallback = true;
            }

        }
      }

      if (invokeCallback) {
        callback(traverseContext, children, // If it's the only child, treat the name as if it was wrapped in an array
        // so that it's consistent if the number of children grows.
        nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);
        return 1;
      }

      var child;
      var nextName;
      var subtreeCount = 0; // Count of children found in the current subtree.

      var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;

      if (Array.isArray(children)) {
        for (var i = 0; i < children.length; i++) {
          child = children[i];
          nextName = nextNamePrefix + getComponentKey(child, i);
          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
        }
      } else {
        var iteratorFn = getIteratorFn(children);

        if (typeof iteratorFn === 'function') {
          {
            // Warn about using Maps as children
            if (iteratorFn === children.entries) {
              !didWarnAboutMaps ? warning$1(false, 'Using Maps as children is unsupported and will likely yield ' + 'unexpected results. Convert it to a sequence/iterable of keyed ' + 'ReactElements instead.') : void 0;
              didWarnAboutMaps = true;
            }
          }
          var iterator = iteratorFn.call(children);
          var step;
          var ii = 0;

          while (!(step = iterator.next()).done) {
            child = step.value;
            nextName = nextNamePrefix + getComponentKey(child, ii++);
            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);
          }
        } else if (type === 'object') {
          var addendum = '';
          {
            addendum = ' If you meant to render a collection of children, use an array ' + 'instead.' + ReactDebugCurrentFrame.getStackAddendum();
          }
          var childrenString = '' + children;
          {
            {
              throw Error("Objects are not valid as a React child (found: " + (childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString) + ")." + addendum);
            }
          }
        }
      }

      return subtreeCount;
    }
    /**
     * Traverses children that are typically specified as `props.children`, but
     * might also be specified through attributes:
     *
     * - `traverseAllChildren(this.props.children, ...)`
     * - `traverseAllChildren(this.props.leftPanelChildren, ...)`
     *
     * The `traverseContext` is an optional argument that is passed through the
     * entire traversal. It can be used to store accumulations or anything else that
     * the callback might find relevant.
     *
     * @param {?*} children Children tree object.
     * @param {!function} callback To invoke upon traversing each child.
     * @param {?*} traverseContext Context for traversal.
     * @return {!number} The number of children in this subtree.
     */


    function traverseAllChildren(children, callback, traverseContext) {
      if (children == null) {
        return 0;
      }

      return traverseAllChildrenImpl(children, '', callback, traverseContext);
    }
    /**
     * Generate a key string that identifies a component within a set.
     *
     * @param {*} component A component that could contain a manual key.
     * @param {number} index Index that is used if a manual key is not provided.
     * @return {string}
     */


    function getComponentKey(component, index) {
      // Do some typechecking here since we call this blindly. We want to ensure
      // that we don't block potential future ES APIs.
      if (typeof component === 'object' && component !== null && component.key != null) {
        // Explicit key
        return escape(component.key);
      } // Implicit key determined by the index in the set


      return index.toString(36);
    }

    function forEachSingleChild(bookKeeping, child, name) {
      var func = bookKeeping.func,
          context = bookKeeping.context;
      func.call(context, child, bookKeeping.count++);
    }
    /**
     * Iterates through children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenforeach
     *
     * The provided forEachFunc(child, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} forEachFunc
     * @param {*} forEachContext Context for forEachContext.
     */


    function forEachChildren(children, forEachFunc, forEachContext) {
      if (children == null) {
        return children;
      }

      var traverseContext = getPooledTraverseContext(null, null, forEachFunc, forEachContext);
      traverseAllChildren(children, forEachSingleChild, traverseContext);
      releaseTraverseContext(traverseContext);
    }

    function mapSingleChildIntoContext(bookKeeping, child, childKey) {
      var result = bookKeeping.result,
          keyPrefix = bookKeeping.keyPrefix,
          func = bookKeeping.func,
          context = bookKeeping.context;
      var mappedChild = func.call(context, child, bookKeeping.count++);

      if (Array.isArray(mappedChild)) {
        mapIntoWithKeyPrefixInternal(mappedChild, result, childKey, function (c) {
          return c;
        });
      } else if (mappedChild != null) {
        if (isValidElement(mappedChild)) {
          mappedChild = cloneAndReplaceKey(mappedChild, // Keep both the (mapped) and old keys if they differ, just as
          // traverseAllChildren used to do for objects as children
          keyPrefix + (mappedChild.key && (!child || child.key !== mappedChild.key) ? escapeUserProvidedKey(mappedChild.key) + '/' : '') + childKey);
        }

        result.push(mappedChild);
      }
    }

    function mapIntoWithKeyPrefixInternal(children, array, prefix, func, context) {
      var escapedPrefix = '';

      if (prefix != null) {
        escapedPrefix = escapeUserProvidedKey(prefix) + '/';
      }

      var traverseContext = getPooledTraverseContext(array, escapedPrefix, func, context);
      traverseAllChildren(children, mapSingleChildIntoContext, traverseContext);
      releaseTraverseContext(traverseContext);
    }
    /**
     * Maps children that are typically specified as `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenmap
     *
     * The provided mapFunction(child, key, index) will be called for each
     * leaf child.
     *
     * @param {?*} children Children tree container.
     * @param {function(*, int)} func The map function.
     * @param {*} context Context for mapFunction.
     * @return {object} Object containing the ordered map of results.
     */


    function mapChildren(children, func, context) {
      if (children == null) {
        return children;
      }

      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, func, context);
      return result;
    }
    /**
     * Count the number of children that are typically specified as
     * `props.children`.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrencount
     *
     * @param {?*} children Children tree container.
     * @return {number} The number of children.
     */


    function countChildren(children) {
      return traverseAllChildren(children, function () {
        return null;
      }, null);
    }
    /**
     * Flatten a children object (typically specified as `props.children`) and
     * return an array with appropriately re-keyed children.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrentoarray
     */


    function toArray(children) {
      var result = [];
      mapIntoWithKeyPrefixInternal(children, result, null, function (child) {
        return child;
      });
      return result;
    }
    /**
     * Returns the first child in a collection of children and verifies that there
     * is only one child in the collection.
     *
     * See https://reactjs.org/docs/react-api.html#reactchildrenonly
     *
     * The current implementation of this function assumes that a single child gets
     * passed without a wrapper, but the purpose of this helper function is to
     * abstract away the particular structure of children.
     *
     * @param {?object} children Child collection structure.
     * @return {ReactElement} The first and only `ReactElement` contained in the
     * structure.
     */


    function onlyChild(children) {
      if (!isValidElement(children)) {
        {
          throw Error("React.Children.only expected to receive a single React element child.");
        }
      }

      return children;
    }

    function createContext(defaultValue, calculateChangedBits) {
      if (calculateChangedBits === undefined) {
        calculateChangedBits = null;
      } else {
        {
          !(calculateChangedBits === null || typeof calculateChangedBits === 'function') ? warningWithoutStack$1(false, 'createContext: Expected the optional second argument to be a ' + 'function. Instead received: %s', calculateChangedBits) : void 0;
        }
      }

      var context = {
        $$typeof: REACT_CONTEXT_TYPE,
        _calculateChangedBits: calculateChangedBits,
        // As a workaround to support multiple concurrent renderers, we categorize
        // some renderers as primary and others as secondary. We only expect
        // there to be two concurrent renderers at most: React Native (primary) and
        // Fabric (secondary); React DOM (primary) and React ART (secondary).
        // Secondary renderers store their context values on separate fields.
        _currentValue: defaultValue,
        _currentValue2: defaultValue,
        // Used to track how many concurrent renderers this context currently
        // supports within in a single renderer. Such as parallel server rendering.
        _threadCount: 0,
        // These are circular
        Provider: null,
        Consumer: null
      };
      context.Provider = {
        $$typeof: REACT_PROVIDER_TYPE,
        _context: context
      };
      var hasWarnedAboutUsingNestedContextConsumers = false;
      var hasWarnedAboutUsingConsumerProvider = false;
      {
        // A separate object, but proxies back to the original context object for
        // backwards compatibility. It has a different $$typeof, so we can properly
        // warn for the incorrect usage of Context as a Consumer.
        var Consumer = {
          $$typeof: REACT_CONTEXT_TYPE,
          _context: context,
          _calculateChangedBits: context._calculateChangedBits
        }; // $FlowFixMe: Flow complains about not setting a value, which is intentional here

        Object.defineProperties(Consumer, {
          Provider: {
            get: function () {
              if (!hasWarnedAboutUsingConsumerProvider) {
                hasWarnedAboutUsingConsumerProvider = true;
                warning$1(false, 'Rendering <Context.Consumer.Provider> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Provider> instead?');
              }

              return context.Provider;
            },
            set: function (_Provider) {
              context.Provider = _Provider;
            }
          },
          _currentValue: {
            get: function () {
              return context._currentValue;
            },
            set: function (_currentValue) {
              context._currentValue = _currentValue;
            }
          },
          _currentValue2: {
            get: function () {
              return context._currentValue2;
            },
            set: function (_currentValue2) {
              context._currentValue2 = _currentValue2;
            }
          },
          _threadCount: {
            get: function () {
              return context._threadCount;
            },
            set: function (_threadCount) {
              context._threadCount = _threadCount;
            }
          },
          Consumer: {
            get: function () {
              if (!hasWarnedAboutUsingNestedContextConsumers) {
                hasWarnedAboutUsingNestedContextConsumers = true;
                warning$1(false, 'Rendering <Context.Consumer.Consumer> is not supported and will be removed in ' + 'a future major release. Did you mean to render <Context.Consumer> instead?');
              }

              return context.Consumer;
            }
          }
        }); // $FlowFixMe: Flow complains about missing properties because it doesn't understand defineProperty

        context.Consumer = Consumer;
      }
      {
        context._currentRenderer = null;
        context._currentRenderer2 = null;
      }
      return context;
    }

    function lazy(ctor) {
      var lazyType = {
        $$typeof: REACT_LAZY_TYPE,
        _ctor: ctor,
        // React uses these fields to store the result.
        _status: -1,
        _result: null
      };
      {
        // In production, this would just set it on the object.
        var defaultProps;
        var propTypes;
        Object.defineProperties(lazyType, {
          defaultProps: {
            configurable: true,
            get: function () {
              return defaultProps;
            },
            set: function (newDefaultProps) {
              warning$1(false, 'React.lazy(...): It is not supported to assign `defaultProps` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              defaultProps = newDefaultProps; // Match production behavior more closely:

              Object.defineProperty(lazyType, 'defaultProps', {
                enumerable: true
              });
            }
          },
          propTypes: {
            configurable: true,
            get: function () {
              return propTypes;
            },
            set: function (newPropTypes) {
              warning$1(false, 'React.lazy(...): It is not supported to assign `propTypes` to ' + 'a lazy component import. Either specify them where the component ' + 'is defined, or create a wrapping component around it.');
              propTypes = newPropTypes; // Match production behavior more closely:

              Object.defineProperty(lazyType, 'propTypes', {
                enumerable: true
              });
            }
          }
        });
      }
      return lazyType;
    }

    function forwardRef(render) {
      {
        if (render != null && render.$$typeof === REACT_MEMO_TYPE) {
          warningWithoutStack$1(false, 'forwardRef requires a render function but received a `memo` ' + 'component. Instead of forwardRef(memo(...)), use ' + 'memo(forwardRef(...)).');
        } else if (typeof render !== 'function') {
          warningWithoutStack$1(false, 'forwardRef requires a render function but was given %s.', render === null ? 'null' : typeof render);
        } else {
          !( // Do not warn for 0 arguments because it could be due to usage of the 'arguments' object
          render.length === 0 || render.length === 2) ? warningWithoutStack$1(false, 'forwardRef render functions accept exactly two parameters: props and ref. %s', render.length === 1 ? 'Did you forget to use the ref parameter?' : 'Any additional parameter will be undefined.') : void 0;
        }

        if (render != null) {
          !(render.defaultProps == null && render.propTypes == null) ? warningWithoutStack$1(false, 'forwardRef render functions do not support propTypes or defaultProps. ' + 'Did you accidentally pass a React component?') : void 0;
        }
      }
      return {
        $$typeof: REACT_FORWARD_REF_TYPE,
        render: render
      };
    }

    function isValidElementType(type) {
      return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
      type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE);
    }

    function memo(type, compare) {
      {
        if (!isValidElementType(type)) {
          warningWithoutStack$1(false, 'memo: The first argument must be a component. Instead ' + 'received: %s', type === null ? 'null' : typeof type);
        }
      }
      return {
        $$typeof: REACT_MEMO_TYPE,
        type: type,
        compare: compare === undefined ? null : compare
      };
    }

    function resolveDispatcher() {
      var dispatcher = ReactCurrentDispatcher.current;

      if (!(dispatcher !== null)) {
        {
          throw Error("Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:\n1. You might have mismatching versions of React and the renderer (such as React DOM)\n2. You might be breaking the Rules of Hooks\n3. You might have more than one copy of React in the same app\nSee https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.");
        }
      }

      return dispatcher;
    }

    function useContext(Context, unstable_observedBits) {
      var dispatcher = resolveDispatcher();
      {
        !(unstable_observedBits === undefined) ? warning$1(false, 'useContext() second argument is reserved for future ' + 'use in React. Passing it is not supported. ' + 'You passed: %s.%s', unstable_observedBits, typeof unstable_observedBits === 'number' && Array.isArray(arguments[2]) ? '\n\nDid you call array.map(useContext)? ' + 'Calling Hooks inside a loop is not supported. ' + 'Learn more at https://fb.me/rules-of-hooks' : '') : void 0; // TODO: add a more generic warning for invalid values.

        if (Context._context !== undefined) {
          var realContext = Context._context; // Don't deduplicate because this legitimately causes bugs
          // and nobody should be using this in existing code.

          if (realContext.Consumer === Context) {
            warning$1(false, 'Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be ' + 'removed in a future major release. Did you mean to call useContext(Context) instead?');
          } else if (realContext.Provider === Context) {
            warning$1(false, 'Calling useContext(Context.Provider) is not supported. ' + 'Did you mean to call useContext(Context) instead?');
          }
        }
      }
      return dispatcher.useContext(Context, unstable_observedBits);
    }

    function useState(initialState) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useState(initialState);
    }

    function useReducer(reducer, initialArg, init) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useReducer(reducer, initialArg, init);
    }

    function useRef(initialValue) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useRef(initialValue);
    }

    function useEffect(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useEffect(create, inputs);
    }

    function useLayoutEffect(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useLayoutEffect(create, inputs);
    }

    function useCallback(callback, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useCallback(callback, inputs);
    }

    function useMemo(create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useMemo(create, inputs);
    }

    function useImperativeHandle(ref, create, inputs) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useImperativeHandle(ref, create, inputs);
    }

    function useDebugValue(value, formatterFn) {
      {
        var dispatcher = resolveDispatcher();
        return dispatcher.useDebugValue(value, formatterFn);
      }
    }

    var emptyObject$1 = {};

    function useResponder(responder, listenerProps) {
      var dispatcher = resolveDispatcher();
      {
        if (responder == null || responder.$$typeof !== REACT_RESPONDER_TYPE) {
          warning$1(false, 'useResponder: invalid first argument. Expected an event responder, but instead got %s', responder);
          return;
        }
      }
      return dispatcher.useResponder(responder, listenerProps || emptyObject$1);
    }

    function useTransition(config) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useTransition(config);
    }

    function useDeferredValue(value, config) {
      var dispatcher = resolveDispatcher();
      return dispatcher.useDeferredValue(value, config);
    }

    function withSuspenseConfig(scope, config) {
      var previousConfig = ReactCurrentBatchConfig.suspense;
      ReactCurrentBatchConfig.suspense = config === undefined ? null : config;

      try {
        scope();
      } finally {
        ReactCurrentBatchConfig.suspense = previousConfig;
      }
    }
    /**
     * ReactElementValidator provides a wrapper around a element factory
     * which validates the props passed to the element. This is intended to be
     * used only in DEV and could be replaced by a static type checker for languages
     * that support it.
     */


    var propTypesMisspellWarningShown;
    {
      propTypesMisspellWarningShown = false;
    }
    var hasOwnProperty$1 = Object.prototype.hasOwnProperty;

    function getDeclarationErrorAddendum() {
      if (ReactCurrentOwner.current) {
        var name = getComponentName(ReactCurrentOwner.current.type);

        if (name) {
          return '\n\nCheck the render method of `' + name + '`.';
        }
      }

      return '';
    }

    function getSourceInfoErrorAddendum(source) {
      if (source !== undefined) {
        var fileName = source.fileName.replace(/^.*[\\\/]/, '');
        var lineNumber = source.lineNumber;
        return '\n\nCheck your code at ' + fileName + ':' + lineNumber + '.';
      }

      return '';
    }

    function getSourceInfoErrorAddendumForProps(elementProps) {
      if (elementProps !== null && elementProps !== undefined) {
        return getSourceInfoErrorAddendum(elementProps.__source);
      }

      return '';
    }
    /**
     * Warn if there's no key explicitly set on dynamic arrays of children or
     * object keys are not valid. This allows us to keep track of children between
     * updates.
     */


    var ownerHasKeyUseWarning = {};

    function getCurrentComponentErrorInfo(parentType) {
      var info = getDeclarationErrorAddendum();

      if (!info) {
        var parentName = typeof parentType === 'string' ? parentType : parentType.displayName || parentType.name;

        if (parentName) {
          info = "\n\nCheck the top-level render call using <" + parentName + ">.";
        }
      }

      return info;
    }
    /**
     * Warn if the element doesn't have an explicit key assigned to it.
     * This element is in an array. The array could grow and shrink or be
     * reordered. All children that haven't already been validated are required to
     * have a "key" property assigned to it. Error statuses are cached so a warning
     * will only be shown once.
     *
     * @internal
     * @param {ReactElement} element Element that requires a key.
     * @param {*} parentType element's parent's type.
     */


    function validateExplicitKey(element, parentType) {
      if (!element._store || element._store.validated || element.key != null) {
        return;
      }

      element._store.validated = true;
      var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);

      if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {
        return;
      }

      ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a
      // property, it may be the creator of the child that's responsible for
      // assigning it a key.

      var childOwner = '';

      if (element && element._owner && element._owner !== ReactCurrentOwner.current) {
        // Give the component that originally created this child.
        childOwner = " It was passed a child from " + getComponentName(element._owner.type) + ".";
      }

      setCurrentlyValidatingElement(element);
      {
        warning$1(false, 'Each child in a list should have a unique "key" prop.' + '%s%s See https://fb.me/react-warning-keys for more information.', currentComponentErrorInfo, childOwner);
      }
      setCurrentlyValidatingElement(null);
    }
    /**
     * Ensure that every element either is passed in a static location, in an
     * array with an explicit keys property defined, or in an object literal
     * with valid key property.
     *
     * @internal
     * @param {ReactNode} node Statically passed child of any type.
     * @param {*} parentType node's parent's type.
     */


    function validateChildKeys(node, parentType) {
      if (typeof node !== 'object') {
        return;
      }

      if (Array.isArray(node)) {
        for (var i = 0; i < node.length; i++) {
          var child = node[i];

          if (isValidElement(child)) {
            validateExplicitKey(child, parentType);
          }
        }
      } else if (isValidElement(node)) {
        // This element was passed in a valid location.
        if (node._store) {
          node._store.validated = true;
        }
      } else if (node) {
        var iteratorFn = getIteratorFn(node);

        if (typeof iteratorFn === 'function') {
          // Entry iterators used to provide implicit keys,
          // but now we print a separate warning for them later.
          if (iteratorFn !== node.entries) {
            var iterator = iteratorFn.call(node);
            var step;

            while (!(step = iterator.next()).done) {
              if (isValidElement(step.value)) {
                validateExplicitKey(step.value, parentType);
              }
            }
          }
        }
      }
    }
    /**
     * Given an element, validate that its props follow the propTypes definition,
     * provided by the type.
     *
     * @param {ReactElement} element
     */


    function validatePropTypes(element) {
      var type = element.type;

      if (type === null || type === undefined || typeof type === 'string') {
        return;
      }

      var name = getComponentName(type);
      var propTypes;

      if (typeof type === 'function') {
        propTypes = type.propTypes;
      } else if (typeof type === 'object' && (type.$$typeof === REACT_FORWARD_REF_TYPE || // Note: Memo only checks outer props here.
      // Inner props are checked in the reconciler.
      type.$$typeof === REACT_MEMO_TYPE)) {
        propTypes = type.propTypes;
      } else {
        return;
      }

      if (propTypes) {
        setCurrentlyValidatingElement(element);
        checkPropTypes(propTypes, element.props, 'prop', name, ReactDebugCurrentFrame.getStackAddendum);
        setCurrentlyValidatingElement(null);
      } else if (type.PropTypes !== undefined && !propTypesMisspellWarningShown) {
        propTypesMisspellWarningShown = true;
        warningWithoutStack$1(false, 'Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?', name || 'Unknown');
      }

      if (typeof type.getDefaultProps === 'function') {
        !type.getDefaultProps.isReactClassApproved ? warningWithoutStack$1(false, 'getDefaultProps is only used on classic React.createClass ' + 'definitions. Use a static property named `defaultProps` instead.') : void 0;
      }
    }
    /**
     * Given a fragment, validate that it can only be provided with fragment props
     * @param {ReactElement} fragment
     */


    function validateFragmentProps(fragment) {
      setCurrentlyValidatingElement(fragment);
      var keys = Object.keys(fragment.props);

      for (var i = 0; i < keys.length; i++) {
        var key = keys[i];

        if (key !== 'children' && key !== 'key') {
          warning$1(false, 'Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);
          break;
        }
      }

      if (fragment.ref !== null) {
        warning$1(false, 'Invalid attribute `ref` supplied to `React.Fragment`.');
      }

      setCurrentlyValidatingElement(null);
    }

    function jsxWithValidation(type, props, key, isStaticChildren, source, self) {
      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
      // succeed and there will likely be errors in render.

      if (!validType) {
        var info = '';

        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
        }

        var sourceInfo = getSourceInfoErrorAddendum(source);

        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        var typeString;

        if (type === null) {
          typeString = 'null';
        } else if (Array.isArray(type)) {
          typeString = 'array';
        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
          typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
          info = ' Did you accidentally export a JSX literal instead of a component?';
        } else {
          typeString = typeof type;
        }

        warning$1(false, 'React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
      }

      var element = jsxDEV(type, props, key, source, self); // The result can be nullish if a mock or a custom function is used.
      // TODO: Drop this when these are no longer allowed as the type argument.

      if (element == null) {
        return element;
      } // Skip key warning if the type isn't valid since our key validation logic
      // doesn't expect a non-string/function type and can throw confusing errors.
      // We don't want exception behavior to differ between dev and prod.
      // (Rendering will throw with a helpful message and as soon as the type is
      // fixed, the key warnings will appear.)


      if (validType) {
        var children = props.children;

        if (children !== undefined) {
          if (isStaticChildren) {
            if (Array.isArray(children)) {
              for (var i = 0; i < children.length; i++) {
                validateChildKeys(children[i], type);
              }

              if (Object.freeze) {
                Object.freeze(children);
              }
            } else {
              warning$1(false, 'React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');
            }
          } else {
            validateChildKeys(children, type);
          }
        }
      }

      if (hasOwnProperty$1.call(props, 'key')) {
        warning$1(false, 'React.jsx: Spreading a key to JSX is a deprecated pattern. ' + 'Explicitly pass a key after spreading props in your JSX call. ' + 'E.g. <ComponentName {...props} key={key} />');
      }

      if (type === REACT_FRAGMENT_TYPE) {
        validateFragmentProps(element);
      } else {
        validatePropTypes(element);
      }

      return element;
    } // These two functions exist to still get child warnings in dev
    // even with the prod transform. This means that jsxDEV is purely
    // opt-in behavior for better messages but that we won't stop
    // giving you warnings if you use production apis.


    function jsxWithValidationStatic(type, props, key) {
      return jsxWithValidation(type, props, key, true);
    }

    function jsxWithValidationDynamic(type, props, key) {
      return jsxWithValidation(type, props, key, false);
    }

    function createElementWithValidation(type, props, children) {
      var validType = isValidElementType(type); // We warn in this case but don't throw. We expect the element creation to
      // succeed and there will likely be errors in render.

      if (!validType) {
        var info = '';

        if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {
          info += ' You likely forgot to export your component from the file ' + "it's defined in, or you might have mixed up default and named imports.";
        }

        var sourceInfo = getSourceInfoErrorAddendumForProps(props);

        if (sourceInfo) {
          info += sourceInfo;
        } else {
          info += getDeclarationErrorAddendum();
        }

        var typeString;

        if (type === null) {
          typeString = 'null';
        } else if (Array.isArray(type)) {
          typeString = 'array';
        } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {
          typeString = "<" + (getComponentName(type.type) || 'Unknown') + " />";
          info = ' Did you accidentally export a JSX literal instead of a component?';
        } else {
          typeString = typeof type;
        }

        warning$1(false, 'React.createElement: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);
      }

      var element = createElement.apply(this, arguments); // The result can be nullish if a mock or a custom function is used.
      // TODO: Drop this when these are no longer allowed as the type argument.

      if (element == null) {
        return element;
      } // Skip key warning if the type isn't valid since our key validation logic
      // doesn't expect a non-string/function type and can throw confusing errors.
      // We don't want exception behavior to differ between dev and prod.
      // (Rendering will throw with a helpful message and as soon as the type is
      // fixed, the key warnings will appear.)


      if (validType) {
        for (var i = 2; i < arguments.length; i++) {
          validateChildKeys(arguments[i], type);
        }
      }

      if (type === REACT_FRAGMENT_TYPE) {
        validateFragmentProps(element);
      } else {
        validatePropTypes(element);
      }

      return element;
    }

    function createFactoryWithValidation(type) {
      var validatedFactory = createElementWithValidation.bind(null, type);
      validatedFactory.type = type; // Legacy hook: remove it

      {
        Object.defineProperty(validatedFactory, 'type', {
          enumerable: false,
          get: function () {
            lowPriorityWarningWithoutStack$1(false, 'Factory.type is deprecated. Access the class directly ' + 'before passing it to createFactory.');
            Object.defineProperty(this, 'type', {
              value: type
            });
            return type;
          }
        });
      }
      return validatedFactory;
    }

    function cloneElementWithValidation(element, props, children) {
      var newElement = cloneElement.apply(this, arguments);

      for (var i = 2; i < arguments.length; i++) {
        validateChildKeys(arguments[i], newElement.type);
      }

      validatePropTypes(newElement);
      return newElement;
    }

    var hasBadMapPolyfill;
    {
      hasBadMapPolyfill = false;

      try {
        var frozenObject = Object.freeze({});
        var testMap = new Map([[frozenObject, null]]);
        var testSet = new Set([frozenObject]); // This is necessary for Rollup to not consider these unused.
        // https://github.com/rollup/rollup/issues/1771
        // TODO: we can remove these if Rollup fixes the bug.

        testMap.set(0, 0);
        testSet.add(0);
      } catch (e) {
        // TODO: Consider warning about bad polyfills
        hasBadMapPolyfill = true;
      }
    }

    function createFundamentalComponent(impl) {
      // We use responder as a Map key later on. When we have a bad
      // polyfill, then we can't use it as a key as the polyfill tries
      // to add a property to the object.
      if ( true && !hasBadMapPolyfill) {
        Object.freeze(impl);
      }

      var fundamantalComponent = {
        $$typeof: REACT_FUNDAMENTAL_TYPE,
        impl: impl
      };
      {
        Object.freeze(fundamantalComponent);
      }
      return fundamantalComponent;
    }

    function createEventResponder(displayName, responderConfig) {
      var getInitialState = responderConfig.getInitialState,
          onEvent = responderConfig.onEvent,
          onMount = responderConfig.onMount,
          onUnmount = responderConfig.onUnmount,
          onRootEvent = responderConfig.onRootEvent,
          rootEventTypes = responderConfig.rootEventTypes,
          targetEventTypes = responderConfig.targetEventTypes,
          targetPortalPropagation = responderConfig.targetPortalPropagation;
      var eventResponder = {
        $$typeof: REACT_RESPONDER_TYPE,
        displayName: displayName,
        getInitialState: getInitialState || null,
        onEvent: onEvent || null,
        onMount: onMount || null,
        onRootEvent: onRootEvent || null,
        onUnmount: onUnmount || null,
        rootEventTypes: rootEventTypes || null,
        targetEventTypes: targetEventTypes || null,
        targetPortalPropagation: targetPortalPropagation || false
      }; // We use responder as a Map key later on. When we have a bad
      // polyfill, then we can't use it as a key as the polyfill tries
      // to add a property to the object.

      if ( true && !hasBadMapPolyfill) {
        Object.freeze(eventResponder);
      }

      return eventResponder;
    }

    function createScope() {
      var scopeComponent = {
        $$typeof: REACT_SCOPE_TYPE
      };
      {
        Object.freeze(scopeComponent);
      }
      return scopeComponent;
    } // Helps identify side effects in render-phase lifecycle hooks and setState
    // reducers by double invoking them in Strict Mode.
    // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.
    // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
    // Gather advanced timing metrics for Profiler subtrees.
    // Trace which interactions trigger each commit.
    // SSR experiments
    // Only used in www builds.
    // Only used in www builds.
    // Disable javascript: URL strings in href for XSS protection.
    // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties
    // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.


    var exposeConcurrentModeAPIs = false; // Experimental React Flare event system and event components support.

    var enableFlareAPI = false; // Experimental Host Component support.

    var enableFundamentalAPI = false; // Experimental Scope support.

    var enableScopeAPI = false; // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107

    var enableJSXTransformAPI = false; // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
    // Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version
    // For tests, we flush suspense fallbacks in an act scope;
    // *except* in some of our own tests, where we test incremental loading states.
    // Add a callback property to suspense to notify which promises are currently
    // in the update queue. This allows reporting and tracing of what is causing
    // the user to see a loading state.
    // Also allows hydration callbacks to fire when a dehydrated boundary gets
    // hydrated or deleted.
    // Part of the simplification of React.createElement so we can eventually move
    // from React.createElement to React.jsx
    // https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md
    // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance

    var React = {
      Children: {
        map: mapChildren,
        forEach: forEachChildren,
        count: countChildren,
        toArray: toArray,
        only: onlyChild
      },
      createRef: createRef,
      Component: Component,
      PureComponent: PureComponent,
      createContext: createContext,
      forwardRef: forwardRef,
      lazy: lazy,
      memo: memo,
      useCallback: useCallback,
      useContext: useContext,
      useEffect: useEffect,
      useImperativeHandle: useImperativeHandle,
      useDebugValue: useDebugValue,
      useLayoutEffect: useLayoutEffect,
      useMemo: useMemo,
      useReducer: useReducer,
      useRef: useRef,
      useState: useState,
      Fragment: REACT_FRAGMENT_TYPE,
      Profiler: REACT_PROFILER_TYPE,
      StrictMode: REACT_STRICT_MODE_TYPE,
      Suspense: REACT_SUSPENSE_TYPE,
      createElement: createElementWithValidation,
      cloneElement: cloneElementWithValidation,
      createFactory: createFactoryWithValidation,
      isValidElement: isValidElement,
      version: ReactVersion,
      __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: ReactSharedInternals
    };

    if (exposeConcurrentModeAPIs) {
      React.useTransition = useTransition;
      React.useDeferredValue = useDeferredValue;
      React.SuspenseList = REACT_SUSPENSE_LIST_TYPE;
      React.unstable_withSuspenseConfig = withSuspenseConfig;
    }

    if (enableFlareAPI) {
      React.unstable_useResponder = useResponder;
      React.unstable_createResponder = createEventResponder;
    }

    if (enableFundamentalAPI) {
      React.unstable_createFundamental = createFundamentalComponent;
    }

    if (enableScopeAPI) {
      React.unstable_createScope = createScope;
    } // Note: some APIs are added with feature flags.
    // Make sure that stable builds for open source
    // don't modify the React object to avoid deopts.
    // Also let's not expose their names in stable builds.


    if (enableJSXTransformAPI) {
      {
        React.jsxDEV = jsxWithValidation;
        React.jsx = jsxWithValidationDynamic;
        React.jsxs = jsxWithValidationStatic;
      }
    }

    var React$2 = Object.freeze({
      default: React
    });
    var React$3 = React$2 && React || React$2; // TODO: decide on the top-level export form.
    // This is hacky but makes it work with both Rollup and Jest.

    var react = React$3.default || React$3;
    module.exports = react;
  })();
}

/***/ }),

/***/ "./node_modules/react/index.js":
/*!*************************************!*\
  !*** ./node_modules/react/index.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/react.development.js */ "./node_modules/react/cjs/react.development.js");
}

/***/ }),

/***/ "./node_modules/requires-port/index.js":
/*!*********************************************!*\
  !*** ./node_modules/requires-port/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * Check if we're required to add a port number.
 *
 * @see https://url.spec.whatwg.org/#default-port
 * @param {Number|String} port Port number we need to check
 * @param {String} protocol Protocol we need to check against.
 * @returns {Boolean} Is it a default port for the given protocol
 * @api private
 */

module.exports = function required(port, protocol) {
  protocol = protocol.split(':')[0];
  port = +port;
  if (!port) return false;

  switch (protocol) {
    case 'http':
    case 'ws':
      return port !== 80;

    case 'https':
    case 'wss':
      return port !== 443;

    case 'ftp':
      return port !== 21;

    case 'gopher':
      return port !== 70;

    case 'file':
      return false;
  }

  return port !== 0;
};

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler-tracing.development.js":
/*!*********************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler-tracing.development.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v0.18.0
 * scheduler-tracing.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    }); // Helps identify side effects in render-phase lifecycle hooks and setState
    // reducers by double invoking them in Strict Mode.
    // To preserve the "Pause on caught exceptions" behavior of the debugger, we
    // replay the begin phase of a failed component inside invokeGuardedCallback.
    // Warn about deprecated, async-unsafe lifecycles; relates to RFC #6:
    // Gather advanced timing metrics for Profiler subtrees.
    // Trace which interactions trigger each commit.

    var enableSchedulerTracing = true; // SSR experiments
    // Only used in www builds.
    // Only used in www builds.
    // Disable javascript: URL strings in href for XSS protection.
    // React Fire: prevent the value and checked attributes from syncing
    // with their related DOM properties
    // These APIs will no longer be "unstable" in the upcoming 16.7 release,
    // Control this behavior with a flag to support 16.6 minor releases in the meanwhile.
    // Experimental React Flare event system and event components support.
    // Experimental Host Component support.
    // Experimental Scope support.
    // New API for JSX transforms to target - https://github.com/reactjs/rfcs/pull/107
    // We will enforce mocking scheduler with scheduler/unstable_mock at some point. (v17?)
    // Till then, we warn about the missing mock, but still fallback to a legacy mode compatible version
    // For tests, we flush suspense fallbacks in an act scope;
    // *except* in some of our own tests, where we test incremental loading states.
    // Add a callback property to suspense to notify which promises are currently
    // in the update queue. This allows reporting and tracing of what is causing
    // the user to see a loading state.
    // Also allows hydration callbacks to fire when a dehydrated boundary gets
    // hydrated or deleted.
    // Part of the simplification of React.createElement so we can eventually move
    // from React.createElement to React.jsx
    // https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md
    // Flag to turn event.target and event.currentTarget in ReactNative from a reactTag to a component instance

    var DEFAULT_THREAD_ID = 0; // Counters used to generate unique IDs.

    var interactionIDCounter = 0;
    var threadIDCounter = 0; // Set of currently traced interactions.
    // Interactions "stack"–
    // Meaning that newly traced interactions are appended to the previously active set.
    // When an interaction goes out of scope, the previous set (if any) is restored.

    exports.__interactionsRef = null; // Listener(s) to notify when interactions begin and end.

    exports.__subscriberRef = null;

    if (enableSchedulerTracing) {
      exports.__interactionsRef = {
        current: new Set()
      };
      exports.__subscriberRef = {
        current: null
      };
    }

    function unstable_clear(callback) {
      if (!enableSchedulerTracing) {
        return callback();
      }

      var prevInteractions = exports.__interactionsRef.current;
      exports.__interactionsRef.current = new Set();

      try {
        return callback();
      } finally {
        exports.__interactionsRef.current = prevInteractions;
      }
    }

    function unstable_getCurrent() {
      if (!enableSchedulerTracing) {
        return null;
      } else {
        return exports.__interactionsRef.current;
      }
    }

    function unstable_getThreadID() {
      return ++threadIDCounter;
    }

    function unstable_trace(name, timestamp, callback) {
      var threadID = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : DEFAULT_THREAD_ID;

      if (!enableSchedulerTracing) {
        return callback();
      }

      var interaction = {
        __count: 1,
        id: interactionIDCounter++,
        name: name,
        timestamp: timestamp
      };
      var prevInteractions = exports.__interactionsRef.current; // Traced interactions should stack/accumulate.
      // To do that, clone the current interactions.
      // The previous set will be restored upon completion.

      var interactions = new Set(prevInteractions);
      interactions.add(interaction);
      exports.__interactionsRef.current = interactions;
      var subscriber = exports.__subscriberRef.current;
      var returnValue;

      try {
        if (subscriber !== null) {
          subscriber.onInteractionTraced(interaction);
        }
      } finally {
        try {
          if (subscriber !== null) {
            subscriber.onWorkStarted(interactions, threadID);
          }
        } finally {
          try {
            returnValue = callback();
          } finally {
            exports.__interactionsRef.current = prevInteractions;

            try {
              if (subscriber !== null) {
                subscriber.onWorkStopped(interactions, threadID);
              }
            } finally {
              interaction.__count--; // If no async work was scheduled for this interaction,
              // Notify subscribers that it's completed.

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            }
          }
        }
      }

      return returnValue;
    }

    function unstable_wrap(callback) {
      var threadID = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_THREAD_ID;

      if (!enableSchedulerTracing) {
        return callback;
      }

      var wrappedInteractions = exports.__interactionsRef.current;
      var subscriber = exports.__subscriberRef.current;

      if (subscriber !== null) {
        subscriber.onWorkScheduled(wrappedInteractions, threadID);
      } // Update the pending async work count for the current interactions.
      // Update after calling subscribers in case of error.


      wrappedInteractions.forEach(function (interaction) {
        interaction.__count++;
      });
      var hasRun = false;

      function wrapped() {
        var prevInteractions = exports.__interactionsRef.current;
        exports.__interactionsRef.current = wrappedInteractions;
        subscriber = exports.__subscriberRef.current;

        try {
          var returnValue;

          try {
            if (subscriber !== null) {
              subscriber.onWorkStarted(wrappedInteractions, threadID);
            }
          } finally {
            try {
              returnValue = callback.apply(undefined, arguments);
            } finally {
              exports.__interactionsRef.current = prevInteractions;

              if (subscriber !== null) {
                subscriber.onWorkStopped(wrappedInteractions, threadID);
              }
            }
          }

          return returnValue;
        } finally {
          if (!hasRun) {
            // We only expect a wrapped function to be executed once,
            // But in the event that it's executed more than once–
            // Only decrement the outstanding interaction counts once.
            hasRun = true; // Update pending async counts for all wrapped interactions.
            // If this was the last scheduled async work for any of them,
            // Mark them as completed.

            wrappedInteractions.forEach(function (interaction) {
              interaction.__count--;

              if (subscriber !== null && interaction.__count === 0) {
                subscriber.onInteractionScheduledWorkCompleted(interaction);
              }
            });
          }
        }
      }

      wrapped.cancel = function cancel() {
        subscriber = exports.__subscriberRef.current;

        try {
          if (subscriber !== null) {
            subscriber.onWorkCanceled(wrappedInteractions, threadID);
          }
        } finally {
          // Update pending async counts for all wrapped interactions.
          // If this was the last scheduled async work for any of them,
          // Mark them as completed.
          wrappedInteractions.forEach(function (interaction) {
            interaction.__count--;

            if (subscriber && interaction.__count === 0) {
              subscriber.onInteractionScheduledWorkCompleted(interaction);
            }
          });
        }
      };

      return wrapped;
    }

    var subscribers = null;

    if (enableSchedulerTracing) {
      subscribers = new Set();
    }

    function unstable_subscribe(subscriber) {
      if (enableSchedulerTracing) {
        subscribers.add(subscriber);

        if (subscribers.size === 1) {
          exports.__subscriberRef.current = {
            onInteractionScheduledWorkCompleted: onInteractionScheduledWorkCompleted,
            onInteractionTraced: onInteractionTraced,
            onWorkCanceled: onWorkCanceled,
            onWorkScheduled: onWorkScheduled,
            onWorkStarted: onWorkStarted,
            onWorkStopped: onWorkStopped
          };
        }
      }
    }

    function unstable_unsubscribe(subscriber) {
      if (enableSchedulerTracing) {
        subscribers.delete(subscriber);

        if (subscribers.size === 0) {
          exports.__subscriberRef.current = null;
        }
      }
    }

    function onInteractionTraced(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionTraced(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onInteractionScheduledWorkCompleted(interaction) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onInteractionScheduledWorkCompleted(interaction);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkScheduled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkScheduled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStarted(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStarted(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkStopped(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkStopped(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    function onWorkCanceled(interactions, threadID) {
      var didCatchError = false;
      var caughtError = null;
      subscribers.forEach(function (subscriber) {
        try {
          subscriber.onWorkCanceled(interactions, threadID);
        } catch (error) {
          if (!didCatchError) {
            didCatchError = true;
            caughtError = error;
          }
        }
      });

      if (didCatchError) {
        throw caughtError;
      }
    }

    exports.unstable_clear = unstable_clear;
    exports.unstable_getCurrent = unstable_getCurrent;
    exports.unstable_getThreadID = unstable_getThreadID;
    exports.unstable_trace = unstable_trace;
    exports.unstable_wrap = unstable_wrap;
    exports.unstable_subscribe = unstable_subscribe;
    exports.unstable_unsubscribe = unstable_unsubscribe;
  })();
}

/***/ }),

/***/ "./node_modules/scheduler/cjs/scheduler.development.js":
/*!*************************************************************!*\
  !*** ./node_modules/scheduler/cjs/scheduler.development.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/** @license React v0.18.0
 * scheduler.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */


if (true) {
  (function () {
    'use strict';

    Object.defineProperty(exports, '__esModule', {
      value: true
    });
    var enableSchedulerDebugging = false;
    var enableIsInputPending = false;
    var enableProfiling = true;
    var requestHostCallback;
    var requestHostTimeout;
    var cancelHostTimeout;
    var shouldYieldToHost;
    var requestPaint;

    if ( // If Scheduler runs in a non-DOM environment, it falls back to a naive
    // implementation using setTimeout.
    typeof window === 'undefined' || // Check if MessageChannel is supported, too.
    typeof MessageChannel !== 'function') {
      // If this accidentally gets imported in a non-browser environment, e.g. JavaScriptCore,
      // fallback to a naive implementation.
      var _callback = null;
      var _timeoutID = null;

      var _flushCallback = function () {
        if (_callback !== null) {
          try {
            var currentTime = exports.unstable_now();
            var hasRemainingTime = true;

            _callback(hasRemainingTime, currentTime);

            _callback = null;
          } catch (e) {
            setTimeout(_flushCallback, 0);
            throw e;
          }
        }
      };

      var initialTime = Date.now();

      exports.unstable_now = function () {
        return Date.now() - initialTime;
      };

      requestHostCallback = function (cb) {
        if (_callback !== null) {
          // Protect against re-entrancy.
          setTimeout(requestHostCallback, 0, cb);
        } else {
          _callback = cb;
          setTimeout(_flushCallback, 0);
        }
      };

      requestHostTimeout = function (cb, ms) {
        _timeoutID = setTimeout(cb, ms);
      };

      cancelHostTimeout = function () {
        clearTimeout(_timeoutID);
      };

      shouldYieldToHost = function () {
        return false;
      };

      requestPaint = exports.unstable_forceFrameRate = function () {};
    } else {
      // Capture local references to native APIs, in case a polyfill overrides them.
      var performance = window.performance;
      var _Date = window.Date;
      var _setTimeout = window.setTimeout;
      var _clearTimeout = window.clearTimeout;

      if (typeof console !== 'undefined') {
        // TODO: Scheduler no longer requires these methods to be polyfilled. But
        // maybe we want to continue warning if they don't exist, to preserve the
        // option to rely on it in the future?
        var requestAnimationFrame = window.requestAnimationFrame;
        var cancelAnimationFrame = window.cancelAnimationFrame; // TODO: Remove fb.me link

        if (typeof requestAnimationFrame !== 'function') {
          console.error("This browser doesn't support requestAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
        }

        if (typeof cancelAnimationFrame !== 'function') {
          console.error("This browser doesn't support cancelAnimationFrame. " + 'Make sure that you load a ' + 'polyfill in older browsers. https://fb.me/react-polyfills');
        }
      }

      if (typeof performance === 'object' && typeof performance.now === 'function') {
        exports.unstable_now = function () {
          return performance.now();
        };
      } else {
        var _initialTime = _Date.now();

        exports.unstable_now = function () {
          return _Date.now() - _initialTime;
        };
      }

      var isMessageLoopRunning = false;
      var scheduledHostCallback = null;
      var taskTimeoutID = -1; // Scheduler periodically yields in case there is other work on the main
      // thread, like user events. By default, it yields multiple times per frame.
      // It does not attempt to align with frame boundaries, since most tasks don't
      // need to be frame aligned; for those that do, use requestAnimationFrame.

      var yieldInterval = 5;
      var deadline = 0; // TODO: Make this configurable
      // TODO: Adjust this based on priority?

      var maxYieldInterval = 300;
      var needsPaint = false;

      if (enableIsInputPending && navigator !== undefined && navigator.scheduling !== undefined && navigator.scheduling.isInputPending !== undefined) {
        var scheduling = navigator.scheduling;

        shouldYieldToHost = function () {
          var currentTime = exports.unstable_now();

          if (currentTime >= deadline) {
            // There's no time left. We may want to yield control of the main
            // thread, so the browser can perform high priority tasks. The main ones
            // are painting and user input. If there's a pending paint or a pending
            // input, then we should yield. But if there's neither, then we can
            // yield less often while remaining responsive. We'll eventually yield
            // regardless, since there could be a pending paint that wasn't
            // accompanied by a call to `requestPaint`, or other main thread tasks
            // like network events.
            if (needsPaint || scheduling.isInputPending()) {
              // There is either a pending paint or a pending input.
              return true;
            } // There's no pending input. Only yield if we've reached the max
            // yield interval.


            return currentTime >= maxYieldInterval;
          } else {
            // There's still time left in the frame.
            return false;
          }
        };

        requestPaint = function () {
          needsPaint = true;
        };
      } else {
        // `isInputPending` is not available. Since we have no way of knowing if
        // there's pending input, always yield at the end of the frame.
        shouldYieldToHost = function () {
          return exports.unstable_now() >= deadline;
        }; // Since we yield every frame regardless, `requestPaint` has no effect.


        requestPaint = function () {};
      }

      exports.unstable_forceFrameRate = function (fps) {
        if (fps < 0 || fps > 125) {
          console.error('forceFrameRate takes a positive int between 0 and 125, ' + 'forcing framerates higher than 125 fps is not unsupported');
          return;
        }

        if (fps > 0) {
          yieldInterval = Math.floor(1000 / fps);
        } else {
          // reset the framerate
          yieldInterval = 5;
        }
      };

      var performWorkUntilDeadline = function () {
        if (scheduledHostCallback !== null) {
          var currentTime = exports.unstable_now(); // Yield after `yieldInterval` ms, regardless of where we are in the vsync
          // cycle. This means there's always time remaining at the beginning of
          // the message event.

          deadline = currentTime + yieldInterval;
          var hasTimeRemaining = true;

          try {
            var hasMoreWork = scheduledHostCallback(hasTimeRemaining, currentTime);

            if (!hasMoreWork) {
              isMessageLoopRunning = false;
              scheduledHostCallback = null;
            } else {
              // If there's more work, schedule the next message event at the end
              // of the preceding one.
              port.postMessage(null);
            }
          } catch (error) {
            // If a scheduler task throws, exit the current browser task so the
            // error can be observed.
            port.postMessage(null);
            throw error;
          }
        } else {
          isMessageLoopRunning = false;
        } // Yielding to the browser will give it a chance to paint, so we can
        // reset this.


        needsPaint = false;
      };

      var channel = new MessageChannel();
      var port = channel.port2;
      channel.port1.onmessage = performWorkUntilDeadline;

      requestHostCallback = function (callback) {
        scheduledHostCallback = callback;

        if (!isMessageLoopRunning) {
          isMessageLoopRunning = true;
          port.postMessage(null);
        }
      };

      requestHostTimeout = function (callback, ms) {
        taskTimeoutID = _setTimeout(function () {
          callback(exports.unstable_now());
        }, ms);
      };

      cancelHostTimeout = function () {
        _clearTimeout(taskTimeoutID);

        taskTimeoutID = -1;
      };
    }

    function push(heap, node) {
      var index = heap.length;
      heap.push(node);
      siftUp(heap, node, index);
    }

    function peek(heap) {
      var first = heap[0];
      return first === undefined ? null : first;
    }

    function pop(heap) {
      var first = heap[0];

      if (first !== undefined) {
        var last = heap.pop();

        if (last !== first) {
          heap[0] = last;
          siftDown(heap, last, 0);
        }

        return first;
      } else {
        return null;
      }
    }

    function siftUp(heap, node, i) {
      var index = i;

      while (true) {
        var parentIndex = Math.floor((index - 1) / 2);
        var parent = heap[parentIndex];

        if (parent !== undefined && compare(parent, node) > 0) {
          // The parent is larger. Swap positions.
          heap[parentIndex] = node;
          heap[index] = parent;
          index = parentIndex;
        } else {
          // The parent is smaller. Exit.
          return;
        }
      }
    }

    function siftDown(heap, node, i) {
      var index = i;
      var length = heap.length;

      while (index < length) {
        var leftIndex = (index + 1) * 2 - 1;
        var left = heap[leftIndex];
        var rightIndex = leftIndex + 1;
        var right = heap[rightIndex]; // If the left or right node is smaller, swap with the smaller of those.

        if (left !== undefined && compare(left, node) < 0) {
          if (right !== undefined && compare(right, left) < 0) {
            heap[index] = right;
            heap[rightIndex] = node;
            index = rightIndex;
          } else {
            heap[index] = left;
            heap[leftIndex] = node;
            index = leftIndex;
          }
        } else if (right !== undefined && compare(right, node) < 0) {
          heap[index] = right;
          heap[rightIndex] = node;
          index = rightIndex;
        } else {
          // Neither child is smaller. Exit.
          return;
        }
      }
    }

    function compare(a, b) {
      // Compare sort index first, then task id.
      var diff = a.sortIndex - b.sortIndex;
      return diff !== 0 ? diff : a.id - b.id;
    } // TODO: Use symbols?


    var NoPriority = 0;
    var ImmediatePriority = 1;
    var UserBlockingPriority = 2;
    var NormalPriority = 3;
    var LowPriority = 4;
    var IdlePriority = 5;
    var runIdCounter = 0;
    var mainThreadIdCounter = 0;
    var profilingStateSize = 4;
    var sharedProfilingBuffer = enableProfiling ? // $FlowFixMe Flow doesn't know about SharedArrayBuffer
    typeof SharedArrayBuffer === 'function' ? new SharedArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : // $FlowFixMe Flow doesn't know about ArrayBuffer
    typeof ArrayBuffer === 'function' ? new ArrayBuffer(profilingStateSize * Int32Array.BYTES_PER_ELEMENT) : null // Don't crash the init path on IE9
    : null;
    var profilingState = enableProfiling && sharedProfilingBuffer !== null ? new Int32Array(sharedProfilingBuffer) : []; // We can't read this but it helps save bytes for null checks

    var PRIORITY = 0;
    var CURRENT_TASK_ID = 1;
    var CURRENT_RUN_ID = 2;
    var QUEUE_SIZE = 3;

    if (enableProfiling) {
      profilingState[PRIORITY] = NoPriority; // This is maintained with a counter, because the size of the priority queue
      // array might include canceled tasks.

      profilingState[QUEUE_SIZE] = 0;
      profilingState[CURRENT_TASK_ID] = 0;
    } // Bytes per element is 4


    var INITIAL_EVENT_LOG_SIZE = 131072;
    var MAX_EVENT_LOG_SIZE = 524288; // Equivalent to 2 megabytes

    var eventLogSize = 0;
    var eventLogBuffer = null;
    var eventLog = null;
    var eventLogIndex = 0;
    var TaskStartEvent = 1;
    var TaskCompleteEvent = 2;
    var TaskErrorEvent = 3;
    var TaskCancelEvent = 4;
    var TaskRunEvent = 5;
    var TaskYieldEvent = 6;
    var SchedulerSuspendEvent = 7;
    var SchedulerResumeEvent = 8;

    function logEvent(entries) {
      if (eventLog !== null) {
        var offset = eventLogIndex;
        eventLogIndex += entries.length;

        if (eventLogIndex + 1 > eventLogSize) {
          eventLogSize *= 2;

          if (eventLogSize > MAX_EVENT_LOG_SIZE) {
            console.error("Scheduler Profiling: Event log exceeded maximum size. Don't " + 'forget to call `stopLoggingProfilingEvents()`.');
            stopLoggingProfilingEvents();
            return;
          }

          var newEventLog = new Int32Array(eventLogSize * 4);
          newEventLog.set(eventLog);
          eventLogBuffer = newEventLog.buffer;
          eventLog = newEventLog;
        }

        eventLog.set(entries, offset);
      }
    }

    function startLoggingProfilingEvents() {
      eventLogSize = INITIAL_EVENT_LOG_SIZE;
      eventLogBuffer = new ArrayBuffer(eventLogSize * 4);
      eventLog = new Int32Array(eventLogBuffer);
      eventLogIndex = 0;
    }

    function stopLoggingProfilingEvents() {
      var buffer = eventLogBuffer;
      eventLogSize = 0;
      eventLogBuffer = null;
      eventLog = null;
      eventLogIndex = 0;
      return buffer;
    }

    function markTaskStart(task, ms) {
      if (enableProfiling) {
        profilingState[QUEUE_SIZE]++;

        if (eventLog !== null) {
          // performance.now returns a float, representing milliseconds. When the
          // event is logged, it's coerced to an int. Convert to microseconds to
          // maintain extra degrees of precision.
          logEvent([TaskStartEvent, ms * 1000, task.id, task.priorityLevel]);
        }
      }
    }

    function markTaskCompleted(task, ms) {
      if (enableProfiling) {
        profilingState[PRIORITY] = NoPriority;
        profilingState[CURRENT_TASK_ID] = 0;
        profilingState[QUEUE_SIZE]--;

        if (eventLog !== null) {
          logEvent([TaskCompleteEvent, ms * 1000, task.id]);
        }
      }
    }

    function markTaskCanceled(task, ms) {
      if (enableProfiling) {
        profilingState[QUEUE_SIZE]--;

        if (eventLog !== null) {
          logEvent([TaskCancelEvent, ms * 1000, task.id]);
        }
      }
    }

    function markTaskErrored(task, ms) {
      if (enableProfiling) {
        profilingState[PRIORITY] = NoPriority;
        profilingState[CURRENT_TASK_ID] = 0;
        profilingState[QUEUE_SIZE]--;

        if (eventLog !== null) {
          logEvent([TaskErrorEvent, ms * 1000, task.id]);
        }
      }
    }

    function markTaskRun(task, ms) {
      if (enableProfiling) {
        runIdCounter++;
        profilingState[PRIORITY] = task.priorityLevel;
        profilingState[CURRENT_TASK_ID] = task.id;
        profilingState[CURRENT_RUN_ID] = runIdCounter;

        if (eventLog !== null) {
          logEvent([TaskRunEvent, ms * 1000, task.id, runIdCounter]);
        }
      }
    }

    function markTaskYield(task, ms) {
      if (enableProfiling) {
        profilingState[PRIORITY] = NoPriority;
        profilingState[CURRENT_TASK_ID] = 0;
        profilingState[CURRENT_RUN_ID] = 0;

        if (eventLog !== null) {
          logEvent([TaskYieldEvent, ms * 1000, task.id, runIdCounter]);
        }
      }
    }

    function markSchedulerSuspended(ms) {
      if (enableProfiling) {
        mainThreadIdCounter++;

        if (eventLog !== null) {
          logEvent([SchedulerSuspendEvent, ms * 1000, mainThreadIdCounter]);
        }
      }
    }

    function markSchedulerUnsuspended(ms) {
      if (enableProfiling) {
        if (eventLog !== null) {
          logEvent([SchedulerResumeEvent, ms * 1000, mainThreadIdCounter]);
        }
      }
    }
    /* eslint-disable no-var */
    // Math.pow(2, 30) - 1
    // 0b111111111111111111111111111111


    var maxSigned31BitInt = 1073741823; // Times out immediately

    var IMMEDIATE_PRIORITY_TIMEOUT = -1; // Eventually times out

    var USER_BLOCKING_PRIORITY = 250;
    var NORMAL_PRIORITY_TIMEOUT = 5000;
    var LOW_PRIORITY_TIMEOUT = 10000; // Never times out

    var IDLE_PRIORITY = maxSigned31BitInt; // Tasks are stored on a min heap

    var taskQueue = [];
    var timerQueue = []; // Incrementing id counter. Used to maintain insertion order.

    var taskIdCounter = 1; // Pausing the scheduler is useful for debugging.

    var isSchedulerPaused = false;
    var currentTask = null;
    var currentPriorityLevel = NormalPriority; // This is set while performing work, to prevent re-entrancy.

    var isPerformingWork = false;
    var isHostCallbackScheduled = false;
    var isHostTimeoutScheduled = false;

    function advanceTimers(currentTime) {
      // Check for tasks that are no longer delayed and add them to the queue.
      var timer = peek(timerQueue);

      while (timer !== null) {
        if (timer.callback === null) {
          // Timer was cancelled.
          pop(timerQueue);
        } else if (timer.startTime <= currentTime) {
          // Timer fired. Transfer to the task queue.
          pop(timerQueue);
          timer.sortIndex = timer.expirationTime;
          push(taskQueue, timer);

          if (enableProfiling) {
            markTaskStart(timer, currentTime);
            timer.isQueued = true;
          }
        } else {
          // Remaining timers are pending.
          return;
        }

        timer = peek(timerQueue);
      }
    }

    function handleTimeout(currentTime) {
      isHostTimeoutScheduled = false;
      advanceTimers(currentTime);

      if (!isHostCallbackScheduled) {
        if (peek(taskQueue) !== null) {
          isHostCallbackScheduled = true;
          requestHostCallback(flushWork);
        } else {
          var firstTimer = peek(timerQueue);

          if (firstTimer !== null) {
            requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
          }
        }
      }
    }

    function flushWork(hasTimeRemaining, initialTime) {
      if (enableProfiling) {
        markSchedulerUnsuspended(initialTime);
      } // We'll need a host callback the next time work is scheduled.


      isHostCallbackScheduled = false;

      if (isHostTimeoutScheduled) {
        // We scheduled a timeout but it's no longer needed. Cancel it.
        isHostTimeoutScheduled = false;
        cancelHostTimeout();
      }

      isPerformingWork = true;
      var previousPriorityLevel = currentPriorityLevel;

      try {
        if (enableProfiling) {
          try {
            return workLoop(hasTimeRemaining, initialTime);
          } catch (error) {
            if (currentTask !== null) {
              var currentTime = exports.unstable_now();
              markTaskErrored(currentTask, currentTime);
              currentTask.isQueued = false;
            }

            throw error;
          }
        } else {
          // No catch in prod codepath.
          return workLoop(hasTimeRemaining, initialTime);
        }
      } finally {
        currentTask = null;
        currentPriorityLevel = previousPriorityLevel;
        isPerformingWork = false;

        if (enableProfiling) {
          var _currentTime = exports.unstable_now();

          markSchedulerSuspended(_currentTime);
        }
      }
    }

    function workLoop(hasTimeRemaining, initialTime) {
      var currentTime = initialTime;
      advanceTimers(currentTime);
      currentTask = peek(taskQueue);

      while (currentTask !== null && !(enableSchedulerDebugging && isSchedulerPaused)) {
        if (currentTask.expirationTime > currentTime && (!hasTimeRemaining || shouldYieldToHost())) {
          // This currentTask hasn't expired, and we've reached the deadline.
          break;
        }

        var callback = currentTask.callback;

        if (callback !== null) {
          currentTask.callback = null;
          currentPriorityLevel = currentTask.priorityLevel;
          var didUserCallbackTimeout = currentTask.expirationTime <= currentTime;
          markTaskRun(currentTask, currentTime);
          var continuationCallback = callback(didUserCallbackTimeout);
          currentTime = exports.unstable_now();

          if (typeof continuationCallback === 'function') {
            currentTask.callback = continuationCallback;
            markTaskYield(currentTask, currentTime);
          } else {
            if (enableProfiling) {
              markTaskCompleted(currentTask, currentTime);
              currentTask.isQueued = false;
            }

            if (currentTask === peek(taskQueue)) {
              pop(taskQueue);
            }
          }

          advanceTimers(currentTime);
        } else {
          pop(taskQueue);
        }

        currentTask = peek(taskQueue);
      } // Return whether there's additional work


      if (currentTask !== null) {
        return true;
      } else {
        var firstTimer = peek(timerQueue);

        if (firstTimer !== null) {
          requestHostTimeout(handleTimeout, firstTimer.startTime - currentTime);
        }

        return false;
      }
    }

    function unstable_runWithPriority(priorityLevel, eventHandler) {
      switch (priorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
        case LowPriority:
        case IdlePriority:
          break;

        default:
          priorityLevel = NormalPriority;
      }

      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    }

    function unstable_next(eventHandler) {
      var priorityLevel;

      switch (currentPriorityLevel) {
        case ImmediatePriority:
        case UserBlockingPriority:
        case NormalPriority:
          // Shift down to normal priority
          priorityLevel = NormalPriority;
          break;

        default:
          // Anything lower than normal priority should remain at the current level.
          priorityLevel = currentPriorityLevel;
          break;
      }

      var previousPriorityLevel = currentPriorityLevel;
      currentPriorityLevel = priorityLevel;

      try {
        return eventHandler();
      } finally {
        currentPriorityLevel = previousPriorityLevel;
      }
    }

    function unstable_wrapCallback(callback) {
      var parentPriorityLevel = currentPriorityLevel;
      return function () {
        // This is a fork of runWithPriority, inlined for performance.
        var previousPriorityLevel = currentPriorityLevel;
        currentPriorityLevel = parentPriorityLevel;

        try {
          return callback.apply(this, arguments);
        } finally {
          currentPriorityLevel = previousPriorityLevel;
        }
      };
    }

    function timeoutForPriorityLevel(priorityLevel) {
      switch (priorityLevel) {
        case ImmediatePriority:
          return IMMEDIATE_PRIORITY_TIMEOUT;

        case UserBlockingPriority:
          return USER_BLOCKING_PRIORITY;

        case IdlePriority:
          return IDLE_PRIORITY;

        case LowPriority:
          return LOW_PRIORITY_TIMEOUT;

        case NormalPriority:
        default:
          return NORMAL_PRIORITY_TIMEOUT;
      }
    }

    function unstable_scheduleCallback(priorityLevel, callback, options) {
      var currentTime = exports.unstable_now();
      var startTime;
      var timeout;

      if (typeof options === 'object' && options !== null) {
        var delay = options.delay;

        if (typeof delay === 'number' && delay > 0) {
          startTime = currentTime + delay;
        } else {
          startTime = currentTime;
        }

        timeout = typeof options.timeout === 'number' ? options.timeout : timeoutForPriorityLevel(priorityLevel);
      } else {
        timeout = timeoutForPriorityLevel(priorityLevel);
        startTime = currentTime;
      }

      var expirationTime = startTime + timeout;
      var newTask = {
        id: taskIdCounter++,
        callback: callback,
        priorityLevel: priorityLevel,
        startTime: startTime,
        expirationTime: expirationTime,
        sortIndex: -1
      };

      if (enableProfiling) {
        newTask.isQueued = false;
      }

      if (startTime > currentTime) {
        // This is a delayed task.
        newTask.sortIndex = startTime;
        push(timerQueue, newTask);

        if (peek(taskQueue) === null && newTask === peek(timerQueue)) {
          // All tasks are delayed, and this is the task with the earliest delay.
          if (isHostTimeoutScheduled) {
            // Cancel an existing timeout.
            cancelHostTimeout();
          } else {
            isHostTimeoutScheduled = true;
          } // Schedule a timeout.


          requestHostTimeout(handleTimeout, startTime - currentTime);
        }
      } else {
        newTask.sortIndex = expirationTime;
        push(taskQueue, newTask);

        if (enableProfiling) {
          markTaskStart(newTask, currentTime);
          newTask.isQueued = true;
        } // Schedule a host callback, if needed. If we're already performing work,
        // wait until the next time we yield.


        if (!isHostCallbackScheduled && !isPerformingWork) {
          isHostCallbackScheduled = true;
          requestHostCallback(flushWork);
        }
      }

      return newTask;
    }

    function unstable_pauseExecution() {
      isSchedulerPaused = true;
    }

    function unstable_continueExecution() {
      isSchedulerPaused = false;

      if (!isHostCallbackScheduled && !isPerformingWork) {
        isHostCallbackScheduled = true;
        requestHostCallback(flushWork);
      }
    }

    function unstable_getFirstCallbackNode() {
      return peek(taskQueue);
    }

    function unstable_cancelCallback(task) {
      if (enableProfiling) {
        if (task.isQueued) {
          var currentTime = exports.unstable_now();
          markTaskCanceled(task, currentTime);
          task.isQueued = false;
        }
      } // Null out the callback to indicate the task has been canceled. (Can't
      // remove from the queue because you can't remove arbitrary nodes from an
      // array based heap, only the first one.)


      task.callback = null;
    }

    function unstable_getCurrentPriorityLevel() {
      return currentPriorityLevel;
    }

    function unstable_shouldYield() {
      var currentTime = exports.unstable_now();
      advanceTimers(currentTime);
      var firstTask = peek(taskQueue);
      return firstTask !== currentTask && currentTask !== null && firstTask !== null && firstTask.callback !== null && firstTask.startTime <= currentTime && firstTask.expirationTime < currentTask.expirationTime || shouldYieldToHost();
    }

    var unstable_requestPaint = requestPaint;
    var unstable_Profiling = enableProfiling ? {
      startLoggingProfilingEvents: startLoggingProfilingEvents,
      stopLoggingProfilingEvents: stopLoggingProfilingEvents,
      sharedProfilingBuffer: sharedProfilingBuffer
    } : null;
    exports.unstable_ImmediatePriority = ImmediatePriority;
    exports.unstable_UserBlockingPriority = UserBlockingPriority;
    exports.unstable_NormalPriority = NormalPriority;
    exports.unstable_IdlePriority = IdlePriority;
    exports.unstable_LowPriority = LowPriority;
    exports.unstable_runWithPriority = unstable_runWithPriority;
    exports.unstable_next = unstable_next;
    exports.unstable_scheduleCallback = unstable_scheduleCallback;
    exports.unstable_cancelCallback = unstable_cancelCallback;
    exports.unstable_wrapCallback = unstable_wrapCallback;
    exports.unstable_getCurrentPriorityLevel = unstable_getCurrentPriorityLevel;
    exports.unstable_shouldYield = unstable_shouldYield;
    exports.unstable_requestPaint = unstable_requestPaint;
    exports.unstable_continueExecution = unstable_continueExecution;
    exports.unstable_pauseExecution = unstable_pauseExecution;
    exports.unstable_getFirstCallbackNode = unstable_getFirstCallbackNode;
    exports.unstable_Profiling = unstable_Profiling;
  })();
}

/***/ }),

/***/ "./node_modules/scheduler/index.js":
/*!*****************************************!*\
  !*** ./node_modules/scheduler/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler.development.js */ "./node_modules/scheduler/cjs/scheduler.development.js");
}

/***/ }),

/***/ "./node_modules/scheduler/tracing.js":
/*!*******************************************!*\
  !*** ./node_modules/scheduler/tracing.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


if (false) {} else {
  module.exports = __webpack_require__(/*! ./cjs/scheduler-tracing.development.js */ "./node_modules/scheduler/cjs/scheduler-tracing.development.js");
}

/***/ }),

/***/ "./node_modules/sockjs-client/lib/entry.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/entry.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var transportList = __webpack_require__(/*! ./transport-list */ "./node_modules/sockjs-client/lib/transport-list.js");

module.exports = __webpack_require__(/*! ./main */ "./node_modules/sockjs-client/lib/main.js")(transportList); // TODO can't get rid of this until all servers do

if ('_sockjs_onload' in global) {
  setTimeout(global._sockjs_onload, 1);
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/close.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/close.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    Event = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/event/event.js");

function CloseEvent() {
  Event.call(this);
  this.initEvent('close', false, false);
  this.wasClean = false;
  this.code = 0;
  this.reason = '';
}

inherits(CloseEvent, Event);
module.exports = CloseEvent;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/emitter.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/emitter.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventTarget = __webpack_require__(/*! ./eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js");

function EventEmitter() {
  EventTarget.call(this);
}

inherits(EventEmitter, EventTarget);

EventEmitter.prototype.removeAllListeners = function (type) {
  if (type) {
    delete this._listeners[type];
  } else {
    this._listeners = {};
  }
};

EventEmitter.prototype.once = function (type, listener) {
  var self = this,
      fired = false;

  function g() {
    self.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  this.on(type, g);
};

EventEmitter.prototype.emit = function () {
  var type = arguments[0];
  var listeners = this._listeners[type];

  if (!listeners) {
    return;
  } // equivalent of Array.prototype.slice.call(arguments, 1);


  var l = arguments.length;
  var args = new Array(l - 1);

  for (var ai = 1; ai < l; ai++) {
    args[ai - 1] = arguments[ai];
  }

  for (var i = 0; i < listeners.length; i++) {
    listeners[i].apply(this, args);
  }
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener = EventTarget.prototype.addEventListener;
EventEmitter.prototype.removeListener = EventTarget.prototype.removeEventListener;
module.exports.EventEmitter = EventEmitter;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/event.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function Event(eventType) {
  this.type = eventType;
}

Event.prototype.initEvent = function (eventType, canBubble, cancelable) {
  this.type = eventType;
  this.bubbles = canBubble;
  this.cancelable = cancelable;
  this.timeStamp = +new Date();
  return this;
};

Event.prototype.stopPropagation = function () {};

Event.prototype.preventDefault = function () {};

Event.CAPTURING_PHASE = 1;
Event.AT_TARGET = 2;
Event.BUBBLING_PHASE = 3;
module.exports = Event;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/eventtarget.js":
/*!*************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/eventtarget.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* Simplified implementation of DOM2 EventTarget.
 *   http://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget
 */

function EventTarget() {
  this._listeners = {};
}

EventTarget.prototype.addEventListener = function (eventType, listener) {
  if (!(eventType in this._listeners)) {
    this._listeners[eventType] = [];
  }

  var arr = this._listeners[eventType]; // #4

  if (arr.indexOf(listener) === -1) {
    // Make a copy so as not to interfere with a current dispatchEvent.
    arr = arr.concat([listener]);
  }

  this._listeners[eventType] = arr;
};

EventTarget.prototype.removeEventListener = function (eventType, listener) {
  var arr = this._listeners[eventType];

  if (!arr) {
    return;
  }

  var idx = arr.indexOf(listener);

  if (idx !== -1) {
    if (arr.length > 1) {
      // Make a copy so as not to interfere with a current dispatchEvent.
      this._listeners[eventType] = arr.slice(0, idx).concat(arr.slice(idx + 1));
    } else {
      delete this._listeners[eventType];
    }

    return;
  }
};

EventTarget.prototype.dispatchEvent = function () {
  var event = arguments[0];
  var t = event.type; // equivalent of Array.prototype.slice.call(arguments, 0);

  var args = arguments.length === 1 ? [event] : Array.apply(null, arguments); // TODO: This doesn't match the real behavior; per spec, onfoo get
  // their place in line from the /first/ time they're set from
  // non-null. Although WebKit bumps it to the end every time it's
  // set.

  if (this['on' + t]) {
    this['on' + t].apply(this, args);
  }

  if (t in this._listeners) {
    // Grab a reference to the listeners list. removeEventListener may alter the list.
    var listeners = this._listeners[t];

    for (var i = 0; i < listeners.length; i++) {
      listeners[i].apply(this, args);
    }
  }
};

module.exports = EventTarget;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/event/trans-message.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/event/trans-message.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    Event = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/event/event.js");

function TransportMessageEvent(data) {
  Event.call(this);
  this.initEvent('message', false, false);
  this.data = data;
}

inherits(TransportMessageEvent, Event);
module.exports = TransportMessageEvent;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/facade.js":
/*!**************************************************!*\
  !*** ./node_modules/sockjs-client/lib/facade.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    iframeUtils = __webpack_require__(/*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js");

function FacadeJS(transport) {
  this._transport = transport;
  transport.on('message', this._transportMessage.bind(this));
  transport.on('close', this._transportClose.bind(this));
}

FacadeJS.prototype._transportClose = function (code, reason) {
  iframeUtils.postMessage('c', JSON3.stringify([code, reason]));
};

FacadeJS.prototype._transportMessage = function (frame) {
  iframeUtils.postMessage('t', frame);
};

FacadeJS.prototype._send = function (data) {
  this._transport.send(data);
};

FacadeJS.prototype._close = function () {
  this._transport.close();

  this._transport.removeAllListeners();
};

module.exports = FacadeJS;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/iframe-bootstrap.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/iframe-bootstrap.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    eventUtils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    FacadeJS = __webpack_require__(/*! ./facade */ "./node_modules/sockjs-client/lib/facade.js"),
    InfoIframeReceiver = __webpack_require__(/*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js"),
    iframeUtils = __webpack_require__(/*! ./utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"),
    loc = __webpack_require__(/*! ./location */ "./node_modules/sockjs-client/lib/location.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:iframe-bootstrap');
}

module.exports = function (SockJS, availableTransports) {
  var transportMap = {};
  availableTransports.forEach(function (at) {
    if (at.facadeTransport) {
      transportMap[at.facadeTransport.transportName] = at.facadeTransport;
    }
  }); // hard-coded for the info iframe
  // TODO see if we can make this more dynamic

  transportMap[InfoIframeReceiver.transportName] = InfoIframeReceiver;
  var parentOrigin;
  /* eslint-disable camelcase */

  SockJS.bootstrap_iframe = function () {
    /* eslint-enable camelcase */
    var facade;
    iframeUtils.currentWindowId = loc.hash.slice(1);

    var onMessage = function (e) {
      if (e.source !== parent) {
        return;
      }

      if (typeof parentOrigin === 'undefined') {
        parentOrigin = e.origin;
      }

      if (e.origin !== parentOrigin) {
        return;
      }

      var iframeMessage;

      try {
        iframeMessage = JSON3.parse(e.data);
      } catch (ignored) {
        debug('bad json', e.data);
        return;
      }

      if (iframeMessage.windowId !== iframeUtils.currentWindowId) {
        return;
      }

      switch (iframeMessage.type) {
        case 's':
          var p;

          try {
            p = JSON3.parse(iframeMessage.data);
          } catch (ignored) {
            debug('bad json', iframeMessage.data);
            break;
          }

          var version = p[0];
          var transport = p[1];
          var transUrl = p[2];
          var baseUrl = p[3];
          debug(version, transport, transUrl, baseUrl); // change this to semver logic

          if (version !== SockJS.version) {
            throw new Error('Incompatible SockJS! Main site uses:' + ' "' + version + '", the iframe:' + ' "' + SockJS.version + '".');
          }

          if (!urlUtils.isOriginEqual(transUrl, loc.href) || !urlUtils.isOriginEqual(baseUrl, loc.href)) {
            throw new Error('Can\'t connect to different domain from within an ' + 'iframe. (' + loc.href + ', ' + transUrl + ', ' + baseUrl + ')');
          }

          facade = new FacadeJS(new transportMap[transport](transUrl, baseUrl));
          break;

        case 'm':
          facade._send(iframeMessage.data);

          break;

        case 'c':
          if (facade) {
            facade._close();
          }

          facade = null;
          break;
      }
    };

    eventUtils.attachEvent('message', onMessage); // Start

    iframeUtils.postMessage('s');
  };
};

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-ajax.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-ajax.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    objectUtils = __webpack_require__(/*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-ajax');
}

function InfoAjax(url, AjaxObject) {
  EventEmitter.call(this);
  var self = this;
  var t0 = +new Date();
  this.xo = new AjaxObject('GET', url);
  this.xo.once('finish', function (status, text) {
    var info, rtt;

    if (status === 200) {
      rtt = +new Date() - t0;

      if (text) {
        try {
          info = JSON3.parse(text);
        } catch (e) {
          debug('bad json', text);
        }
      }

      if (!objectUtils.isObject(info)) {
        info = {};
      }
    }

    self.emit('finish', info, rtt);
    self.removeAllListeners();
  });
}

inherits(InfoAjax, EventEmitter);

InfoAjax.prototype.close = function () {
  this.removeAllListeners();
  this.xo.close();
};

module.exports = InfoAjax;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe-receiver.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe-receiver.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    XHRLocalObject = __webpack_require__(/*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"),
    InfoAjax = __webpack_require__(/*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js");

function InfoReceiverIframe(transUrl) {
  var self = this;
  EventEmitter.call(this);
  this.ir = new InfoAjax(transUrl, XHRLocalObject);
  this.ir.once('finish', function (info, rtt) {
    self.ir = null;
    self.emit('message', JSON3.stringify([info, rtt]));
  });
}

inherits(InfoReceiverIframe, EventEmitter);
InfoReceiverIframe.transportName = 'iframe-info-receiver';

InfoReceiverIframe.prototype.close = function () {
  if (this.ir) {
    this.ir.close();
    this.ir = null;
  }

  this.removeAllListeners();
};

module.exports = InfoReceiverIframe;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-iframe.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-iframe.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    utils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    IframeTransport = __webpack_require__(/*! ./transport/iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js"),
    InfoReceiverIframe = __webpack_require__(/*! ./info-iframe-receiver */ "./node_modules/sockjs-client/lib/info-iframe-receiver.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-iframe');
}

function InfoIframe(baseUrl, url) {
  var self = this;
  EventEmitter.call(this);

  var go = function () {
    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);
    ifr.once('message', function (msg) {
      if (msg) {
        var d;

        try {
          d = JSON3.parse(msg);
        } catch (e) {
          debug('bad json', msg);
          self.emit('finish');
          self.close();
          return;
        }

        var info = d[0],
            rtt = d[1];
        self.emit('finish', info, rtt);
      }

      self.close();
    });
    ifr.once('close', function () {
      self.emit('finish');
      self.close();
    });
  }; // TODO this seems the same as the 'needBody' from transports


  if (!global.document.body) {
    utils.attachEvent('load', go);
  } else {
    go();
  }
}

inherits(InfoIframe, EventEmitter);

InfoIframe.enabled = function () {
  return IframeTransport.enabled();
};

InfoIframe.prototype.close = function () {
  if (this.ifr) {
    this.ifr.close();
  }

  this.removeAllListeners();
  this.ifr = null;
};

module.exports = InfoIframe;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/info-receiver.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/info-receiver.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    XDR = __webpack_require__(/*! ./transport/sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js"),
    XHRCors = __webpack_require__(/*! ./transport/sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"),
    XHRLocal = __webpack_require__(/*! ./transport/sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"),
    XHRFake = __webpack_require__(/*! ./transport/sender/xhr-fake */ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js"),
    InfoIframe = __webpack_require__(/*! ./info-iframe */ "./node_modules/sockjs-client/lib/info-iframe.js"),
    InfoAjax = __webpack_require__(/*! ./info-ajax */ "./node_modules/sockjs-client/lib/info-ajax.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:info-receiver');
}

function InfoReceiver(baseUrl, urlInfo) {
  debug(baseUrl);
  var self = this;
  EventEmitter.call(this);
  setTimeout(function () {
    self.doXhr(baseUrl, urlInfo);
  }, 0);
}

inherits(InfoReceiver, EventEmitter); // TODO this is currently ignoring the list of available transports and the whitelist

InfoReceiver._getReceiver = function (baseUrl, url, urlInfo) {
  // determine method of CORS support (if needed)
  if (urlInfo.sameOrigin) {
    return new InfoAjax(url, XHRLocal);
  }

  if (XHRCors.enabled) {
    return new InfoAjax(url, XHRCors);
  }

  if (XDR.enabled && urlInfo.sameScheme) {
    return new InfoAjax(url, XDR);
  }

  if (InfoIframe.enabled()) {
    return new InfoIframe(baseUrl, url);
  }

  return new InfoAjax(url, XHRFake);
};

InfoReceiver.prototype.doXhr = function (baseUrl, urlInfo) {
  var self = this,
      url = urlUtils.addPath(baseUrl, '/info');
  debug('doXhr', url);
  this.xo = InfoReceiver._getReceiver(baseUrl, url, urlInfo);
  this.timeoutRef = setTimeout(function () {
    debug('timeout');

    self._cleanup(false);

    self.emit('finish');
  }, InfoReceiver.timeout);
  this.xo.once('finish', function (info, rtt) {
    debug('finish', info, rtt);

    self._cleanup(true);

    self.emit('finish', info, rtt);
  });
};

InfoReceiver.prototype._cleanup = function (wasClean) {
  debug('_cleanup');
  clearTimeout(this.timeoutRef);
  this.timeoutRef = null;

  if (!wasClean && this.xo) {
    this.xo.close();
  }

  this.xo = null;
};

InfoReceiver.prototype.close = function () {
  debug('close');
  this.removeAllListeners();

  this._cleanup(false);
};

InfoReceiver.timeout = 8000;
module.exports = InfoReceiver;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/location.js":
/*!****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/location.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

module.exports = global.location || {
  origin: 'http://localhost:80',
  protocol: 'http:',
  host: 'localhost',
  port: 80,
  href: 'http://localhost/',
  hash: ''
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/main.js":
/*!************************************************!*\
  !*** ./node_modules/sockjs-client/lib/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

__webpack_require__(/*! ./shims */ "./node_modules/sockjs-client/lib/shims.js");

var URL = __webpack_require__(/*! url-parse */ "./node_modules/url-parse/index.js"),
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    random = __webpack_require__(/*! ./utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"),
    escape = __webpack_require__(/*! ./utils/escape */ "./node_modules/sockjs-client/lib/utils/escape.js"),
    urlUtils = __webpack_require__(/*! ./utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    eventUtils = __webpack_require__(/*! ./utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    transport = __webpack_require__(/*! ./utils/transport */ "./node_modules/sockjs-client/lib/utils/transport.js"),
    objectUtils = __webpack_require__(/*! ./utils/object */ "./node_modules/sockjs-client/lib/utils/object.js"),
    browser = __webpack_require__(/*! ./utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js"),
    log = __webpack_require__(/*! ./utils/log */ "./node_modules/sockjs-client/lib/utils/log.js"),
    Event = __webpack_require__(/*! ./event/event */ "./node_modules/sockjs-client/lib/event/event.js"),
    EventTarget = __webpack_require__(/*! ./event/eventtarget */ "./node_modules/sockjs-client/lib/event/eventtarget.js"),
    loc = __webpack_require__(/*! ./location */ "./node_modules/sockjs-client/lib/location.js"),
    CloseEvent = __webpack_require__(/*! ./event/close */ "./node_modules/sockjs-client/lib/event/close.js"),
    TransportMessageEvent = __webpack_require__(/*! ./event/trans-message */ "./node_modules/sockjs-client/lib/event/trans-message.js"),
    InfoReceiver = __webpack_require__(/*! ./info-receiver */ "./node_modules/sockjs-client/lib/info-receiver.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:main');
}

var transports; // follow constructor steps defined at http://dev.w3.org/html5/websockets/#the-websocket-interface

function SockJS(url, protocols, options) {
  if (!(this instanceof SockJS)) {
    return new SockJS(url, protocols, options);
  }

  if (arguments.length < 1) {
    throw new TypeError("Failed to construct 'SockJS: 1 argument required, but only 0 present");
  }

  EventTarget.call(this);
  this.readyState = SockJS.CONNECTING;
  this.extensions = '';
  this.protocol = ''; // non-standard extension

  options = options || {};

  if (options.protocols_whitelist) {
    log.warn("'protocols_whitelist' is DEPRECATED. Use 'transports' instead.");
  }

  this._transportsWhitelist = options.transports;
  this._transportOptions = options.transportOptions || {};
  this._timeout = options.timeout || 0;
  var sessionId = options.sessionId || 8;

  if (typeof sessionId === 'function') {
    this._generateSessionId = sessionId;
  } else if (typeof sessionId === 'number') {
    this._generateSessionId = function () {
      return random.string(sessionId);
    };
  } else {
    throw new TypeError('If sessionId is used in the options, it needs to be a number or a function.');
  }

  this._server = options.server || random.numberString(1000); // Step 1 of WS spec - parse and validate the url. Issue #8

  var parsedUrl = new URL(url);

  if (!parsedUrl.host || !parsedUrl.protocol) {
    throw new SyntaxError("The URL '" + url + "' is invalid");
  } else if (parsedUrl.hash) {
    throw new SyntaxError('The URL must not contain a fragment');
  } else if (parsedUrl.protocol !== 'http:' && parsedUrl.protocol !== 'https:') {
    throw new SyntaxError("The URL's scheme must be either 'http:' or 'https:'. '" + parsedUrl.protocol + "' is not allowed.");
  }

  var secure = parsedUrl.protocol === 'https:'; // Step 2 - don't allow secure origin with an insecure protocol

  if (loc.protocol === 'https:' && !secure) {
    throw new Error('SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS');
  } // Step 3 - check port access - no need here
  // Step 4 - parse protocols argument


  if (!protocols) {
    protocols = [];
  } else if (!Array.isArray(protocols)) {
    protocols = [protocols];
  } // Step 5 - check protocols argument


  var sortedProtocols = protocols.sort();
  sortedProtocols.forEach(function (proto, i) {
    if (!proto) {
      throw new SyntaxError("The protocols entry '" + proto + "' is invalid.");
    }

    if (i < sortedProtocols.length - 1 && proto === sortedProtocols[i + 1]) {
      throw new SyntaxError("The protocols entry '" + proto + "' is duplicated.");
    }
  }); // Step 6 - convert origin

  var o = urlUtils.getOrigin(loc.href);
  this._origin = o ? o.toLowerCase() : null; // remove the trailing slash

  parsedUrl.set('pathname', parsedUrl.pathname.replace(/\/+$/, '')); // store the sanitized url

  this.url = parsedUrl.href;
  debug('using url', this.url); // Step 7 - start connection in background
  // obtain server info
  // http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-26

  this._urlInfo = {
    nullOrigin: !browser.hasDomain(),
    sameOrigin: urlUtils.isOriginEqual(this.url, loc.href),
    sameScheme: urlUtils.isSchemeEqual(this.url, loc.href)
  };
  this._ir = new InfoReceiver(this.url, this._urlInfo);

  this._ir.once('finish', this._receiveInfo.bind(this));
}

inherits(SockJS, EventTarget);

function userSetCode(code) {
  return code === 1000 || code >= 3000 && code <= 4999;
}

SockJS.prototype.close = function (code, reason) {
  // Step 1
  if (code && !userSetCode(code)) {
    throw new Error('InvalidAccessError: Invalid code');
  } // Step 2.4 states the max is 123 bytes, but we are just checking length


  if (reason && reason.length > 123) {
    throw new SyntaxError('reason argument has an invalid length');
  } // Step 3.1


  if (this.readyState === SockJS.CLOSING || this.readyState === SockJS.CLOSED) {
    return;
  } // TODO look at docs to determine how to set this


  var wasClean = true;

  this._close(code || 1000, reason || 'Normal closure', wasClean);
};

SockJS.prototype.send = function (data) {
  // #13 - convert anything non-string to string
  // TODO this currently turns objects into [object Object]
  if (typeof data !== 'string') {
    data = '' + data;
  }

  if (this.readyState === SockJS.CONNECTING) {
    throw new Error('InvalidStateError: The connection has not been established yet');
  }

  if (this.readyState !== SockJS.OPEN) {
    return;
  }

  this._transport.send(escape.quote(data));
};

SockJS.version = __webpack_require__(/*! ./version */ "./node_modules/sockjs-client/lib/version.js");
SockJS.CONNECTING = 0;
SockJS.OPEN = 1;
SockJS.CLOSING = 2;
SockJS.CLOSED = 3;

SockJS.prototype._receiveInfo = function (info, rtt) {
  debug('_receiveInfo', rtt);
  this._ir = null;

  if (!info) {
    this._close(1002, 'Cannot connect to server');

    return;
  } // establish a round-trip timeout (RTO) based on the
  // round-trip time (RTT)


  this._rto = this.countRTO(rtt); // allow server to override url used for the actual transport

  this._transUrl = info.base_url ? info.base_url : this.url;
  info = objectUtils.extend(info, this._urlInfo);
  debug('info', info); // determine list of desired and supported transports

  var enabledTransports = transports.filterToEnabled(this._transportsWhitelist, info);
  this._transports = enabledTransports.main;
  debug(this._transports.length + ' enabled transports');

  this._connect();
};

SockJS.prototype._connect = function () {
  for (var Transport = this._transports.shift(); Transport; Transport = this._transports.shift()) {
    debug('attempt', Transport.transportName);

    if (Transport.needBody) {
      if (!global.document.body || typeof global.document.readyState !== 'undefined' && global.document.readyState !== 'complete' && global.document.readyState !== 'interactive') {
        debug('waiting for body');

        this._transports.unshift(Transport);

        eventUtils.attachEvent('load', this._connect.bind(this));
        return;
      }
    } // calculate timeout based on RTO and round trips. Default to 5s


    var timeoutMs = Math.max(this._timeout, this._rto * Transport.roundTrips || 5000);
    this._transportTimeoutId = setTimeout(this._transportTimeout.bind(this), timeoutMs);
    debug('using timeout', timeoutMs);
    var transportUrl = urlUtils.addPath(this._transUrl, '/' + this._server + '/' + this._generateSessionId());
    var options = this._transportOptions[Transport.transportName];
    debug('transport url', transportUrl);
    var transportObj = new Transport(transportUrl, this._transUrl, options);
    transportObj.on('message', this._transportMessage.bind(this));
    transportObj.once('close', this._transportClose.bind(this));
    transportObj.transportName = Transport.transportName;
    this._transport = transportObj;
    return;
  }

  this._close(2000, 'All transports failed', false);
};

SockJS.prototype._transportTimeout = function () {
  debug('_transportTimeout');

  if (this.readyState === SockJS.CONNECTING) {
    if (this._transport) {
      this._transport.close();
    }

    this._transportClose(2007, 'Transport timed out');
  }
};

SockJS.prototype._transportMessage = function (msg) {
  debug('_transportMessage', msg);
  var self = this,
      type = msg.slice(0, 1),
      content = msg.slice(1),
      payload; // first check for messages that don't need a payload

  switch (type) {
    case 'o':
      this._open();

      return;

    case 'h':
      this.dispatchEvent(new Event('heartbeat'));
      debug('heartbeat', this.transport);
      return;
  }

  if (content) {
    try {
      payload = JSON3.parse(content);
    } catch (e) {
      debug('bad json', content);
    }
  }

  if (typeof payload === 'undefined') {
    debug('empty payload', content);
    return;
  }

  switch (type) {
    case 'a':
      if (Array.isArray(payload)) {
        payload.forEach(function (p) {
          debug('message', self.transport, p);
          self.dispatchEvent(new TransportMessageEvent(p));
        });
      }

      break;

    case 'm':
      debug('message', this.transport, payload);
      this.dispatchEvent(new TransportMessageEvent(payload));
      break;

    case 'c':
      if (Array.isArray(payload) && payload.length === 2) {
        this._close(payload[0], payload[1], true);
      }

      break;
  }
};

SockJS.prototype._transportClose = function (code, reason) {
  debug('_transportClose', this.transport, code, reason);

  if (this._transport) {
    this._transport.removeAllListeners();

    this._transport = null;
    this.transport = null;
  }

  if (!userSetCode(code) && code !== 2000 && this.readyState === SockJS.CONNECTING) {
    this._connect();

    return;
  }

  this._close(code, reason);
};

SockJS.prototype._open = function () {
  debug('_open', this._transport && this._transport.transportName, this.readyState);

  if (this.readyState === SockJS.CONNECTING) {
    if (this._transportTimeoutId) {
      clearTimeout(this._transportTimeoutId);
      this._transportTimeoutId = null;
    }

    this.readyState = SockJS.OPEN;
    this.transport = this._transport.transportName;
    this.dispatchEvent(new Event('open'));
    debug('connected', this.transport);
  } else {
    // The server might have been restarted, and lost track of our
    // connection.
    this._close(1006, 'Server lost session');
  }
};

SockJS.prototype._close = function (code, reason, wasClean) {
  debug('_close', this.transport, code, reason, wasClean, this.readyState);
  var forceFail = false;

  if (this._ir) {
    forceFail = true;

    this._ir.close();

    this._ir = null;
  }

  if (this._transport) {
    this._transport.close();

    this._transport = null;
    this.transport = null;
  }

  if (this.readyState === SockJS.CLOSED) {
    throw new Error('InvalidStateError: SockJS has already been closed');
  }

  this.readyState = SockJS.CLOSING;
  setTimeout(function () {
    this.readyState = SockJS.CLOSED;

    if (forceFail) {
      this.dispatchEvent(new Event('error'));
    }

    var e = new CloseEvent('close');
    e.wasClean = wasClean || false;
    e.code = code || 1000;
    e.reason = reason;
    this.dispatchEvent(e);
    this.onmessage = this.onclose = this.onerror = null;
    debug('disconnected');
  }.bind(this), 0);
}; // See: http://www.erg.abdn.ac.uk/~gerrit/dccp/notes/ccid2/rto_estimator/
// and RFC 2988.


SockJS.prototype.countRTO = function (rtt) {
  // In a local environment, when using IE8/9 and the `jsonp-polling`
  // transport the time needed to establish a connection (the time that pass
  // from the opening of the transport to the call of `_dispatchOpen`) is
  // around 200msec (the lower bound used in the article above) and this
  // causes spurious timeouts. For this reason we calculate a value slightly
  // larger than that used in the article.
  if (rtt > 100) {
    return 4 * rtt; // rto > 400msec
  }

  return 300 + rtt; // 300msec < rto <= 400msec
};

module.exports = function (availableTransports) {
  transports = transport(availableTransports);

  __webpack_require__(/*! ./iframe-bootstrap */ "./node_modules/sockjs-client/lib/iframe-bootstrap.js")(SockJS, availableTransports);

  return SockJS;
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/shims.js":
/*!*************************************************!*\
  !*** ./node_modules/sockjs-client/lib/shims.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* eslint-disable */

/* jscs: disable */
 // pulled specific shims from https://github.com/es-shims/es5-shim

var ArrayPrototype = Array.prototype;
var ObjectPrototype = Object.prototype;
var FunctionPrototype = Function.prototype;
var StringPrototype = String.prototype;
var array_slice = ArrayPrototype.slice;
var _toString = ObjectPrototype.toString;

var isFunction = function (val) {
  return ObjectPrototype.toString.call(val) === '[object Function]';
};

var isArray = function isArray(obj) {
  return _toString.call(obj) === '[object Array]';
};

var isString = function isString(obj) {
  return _toString.call(obj) === '[object String]';
};

var supportsDescriptors = Object.defineProperty && function () {
  try {
    Object.defineProperty({}, 'x', {});
    return true;
  } catch (e) {
    /* this is ES3 */
    return false;
  }
}(); // Define configurable, writable and non-enumerable props
// if they don't exist.


var defineProperty;

if (supportsDescriptors) {
  defineProperty = function (object, name, method, forceAssign) {
    if (!forceAssign && name in object) {
      return;
    }

    Object.defineProperty(object, name, {
      configurable: true,
      enumerable: false,
      writable: true,
      value: method
    });
  };
} else {
  defineProperty = function (object, name, method, forceAssign) {
    if (!forceAssign && name in object) {
      return;
    }

    object[name] = method;
  };
}

var defineProperties = function (object, map, forceAssign) {
  for (var name in map) {
    if (ObjectPrototype.hasOwnProperty.call(map, name)) {
      defineProperty(object, name, map[name], forceAssign);
    }
  }
};

var toObject = function (o) {
  if (o == null) {
    // this matches both null and undefined
    throw new TypeError("can't convert " + o + ' to object');
  }

  return Object(o);
}; //
// Util
// ======
//
// ES5 9.4
// http://es5.github.com/#x9.4
// http://jsperf.com/to-integer


function toInteger(num) {
  var n = +num;

  if (n !== n) {
    // isNaN
    n = 0;
  } else if (n !== 0 && n !== 1 / 0 && n !== -(1 / 0)) {
    n = (n > 0 || -1) * Math.floor(Math.abs(n));
  }

  return n;
}

function ToUint32(x) {
  return x >>> 0;
} //
// Function
// ========
//
// ES-5 15.3.4.5
// http://es5.github.com/#x15.3.4.5


function Empty() {}

defineProperties(FunctionPrototype, {
  bind: function bind(that) {
    // .length is 1
    // 1. Let Target be the this value.
    var target = this; // 2. If IsCallable(Target) is false, throw a TypeError exception.

    if (!isFunction(target)) {
      throw new TypeError('Function.prototype.bind called on incompatible ' + target);
    } // 3. Let A be a new (possibly empty) internal list of all of the
    //   argument values provided after thisArg (arg1, arg2 etc), in order.
    // XXX slicedArgs will stand in for "A" if used


    var args = array_slice.call(arguments, 1); // for normal call
    // 4. Let F be a new native ECMAScript object.
    // 11. Set the [[Prototype]] internal property of F to the standard
    //   built-in Function prototype object as specified in 15.3.3.1.
    // 12. Set the [[Call]] internal property of F as described in
    //   15.3.4.5.1.
    // 13. Set the [[Construct]] internal property of F as described in
    //   15.3.4.5.2.
    // 14. Set the [[HasInstance]] internal property of F as described in
    //   15.3.4.5.3.

    var binder = function () {
      if (this instanceof bound) {
        // 15.3.4.5.2 [[Construct]]
        // When the [[Construct]] internal method of a function object,
        // F that was created using the bind function is called with a
        // list of arguments ExtraArgs, the following steps are taken:
        // 1. Let target be the value of F's [[TargetFunction]]
        //   internal property.
        // 2. If target has no [[Construct]] internal method, a
        //   TypeError exception is thrown.
        // 3. Let boundArgs be the value of F's [[BoundArgs]] internal
        //   property.
        // 4. Let args be a new list containing the same values as the
        //   list boundArgs in the same order followed by the same
        //   values as the list ExtraArgs in the same order.
        // 5. Return the result of calling the [[Construct]] internal
        //   method of target providing args as the arguments.
        var result = target.apply(this, args.concat(array_slice.call(arguments)));

        if (Object(result) === result) {
          return result;
        }

        return this;
      } else {
        // 15.3.4.5.1 [[Call]]
        // When the [[Call]] internal method of a function object, F,
        // which was created using the bind function is called with a
        // this value and a list of arguments ExtraArgs, the following
        // steps are taken:
        // 1. Let boundArgs be the value of F's [[BoundArgs]] internal
        //   property.
        // 2. Let boundThis be the value of F's [[BoundThis]] internal
        //   property.
        // 3. Let target be the value of F's [[TargetFunction]] internal
        //   property.
        // 4. Let args be a new list containing the same values as the
        //   list boundArgs in the same order followed by the same
        //   values as the list ExtraArgs in the same order.
        // 5. Return the result of calling the [[Call]] internal method
        //   of target providing boundThis as the this value and
        //   providing args as the arguments.
        // equiv: target.call(this, ...boundArgs, ...args)
        return target.apply(that, args.concat(array_slice.call(arguments)));
      }
    }; // 15. If the [[Class]] internal property of Target is "Function", then
    //     a. Let L be the length property of Target minus the length of A.
    //     b. Set the length own property of F to either 0 or L, whichever is
    //       larger.
    // 16. Else set the length own property of F to 0.


    var boundLength = Math.max(0, target.length - args.length); // 17. Set the attributes of the length own property of F to the values
    //   specified in 15.3.5.1.

    var boundArgs = [];

    for (var i = 0; i < boundLength; i++) {
      boundArgs.push('$' + i);
    } // XXX Build a dynamic function with desired amount of arguments is the only
    // way to set the length property of a function.
    // In environments where Content Security Policies enabled (Chrome extensions,
    // for ex.) all use of eval or Function costructor throws an exception.
    // However in all of these environments Function.prototype.bind exists
    // and so this code will never be executed.


    var bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);

    if (target.prototype) {
      Empty.prototype = target.prototype;
      bound.prototype = new Empty(); // Clean up dangling references.

      Empty.prototype = null;
    } // TODO
    // 18. Set the [[Extensible]] internal property of F to true.
    // TODO
    // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).
    // 20. Call the [[DefineOwnProperty]] internal method of F with
    //   arguments "caller", PropertyDescriptor {[[Get]]: thrower, [[Set]]:
    //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and
    //   false.
    // 21. Call the [[DefineOwnProperty]] internal method of F with
    //   arguments "arguments", PropertyDescriptor {[[Get]]: thrower,
    //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},
    //   and false.
    // TODO
    // NOTE Function objects created using Function.prototype.bind do not
    // have a prototype property or the [[Code]], [[FormalParameters]], and
    // [[Scope]] internal properties.
    // XXX can't delete prototype in pure-js.
    // 22. Return F.


    return bound;
  }
}); //
// Array
// =====
//
// ES5 15.4.3.2
// http://es5.github.com/#x15.4.3.2
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/isArray

defineProperties(Array, {
  isArray: isArray
});
var boxedString = Object('a');
var splitString = boxedString[0] !== 'a' || !(0 in boxedString);

var properlyBoxesContext = function properlyBoxed(method) {
  // Check node 0.6.21 bug where third parameter is not boxed
  var properlyBoxesNonStrict = true;
  var properlyBoxesStrict = true;

  if (method) {
    method.call('foo', function (_, __, context) {
      if (typeof context !== 'object') {
        properlyBoxesNonStrict = false;
      }
    });
    method.call([1], function () {
      'use strict';

      properlyBoxesStrict = typeof this === 'string';
    }, 'x');
  }

  return !!method && properlyBoxesNonStrict && properlyBoxesStrict;
};

defineProperties(ArrayPrototype, {
  forEach: function forEach(fun
  /*, thisp*/
  ) {
    var object = toObject(this),
        self = splitString && isString(this) ? this.split('') : object,
        thisp = arguments[1],
        i = -1,
        length = self.length >>> 0; // If no callback function or if callback is not a callable function

    if (!isFunction(fun)) {
      throw new TypeError(); // TODO message
    }

    while (++i < length) {
      if (i in self) {
        // Invoke the callback function with call, passing arguments:
        // context, property value, property key, thisArg object
        // context
        fun.call(thisp, self[i], i, object);
      }
    }
  }
}, !properlyBoxesContext(ArrayPrototype.forEach)); // ES5 15.4.4.14
// http://es5.github.com/#x15.4.4.14
// https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Array/indexOf

var hasFirefox2IndexOfBug = Array.prototype.indexOf && [0, 1].indexOf(1, 2) !== -1;
defineProperties(ArrayPrototype, {
  indexOf: function indexOf(sought
  /*, fromIndex */
  ) {
    var self = splitString && isString(this) ? this.split('') : toObject(this),
        length = self.length >>> 0;

    if (!length) {
      return -1;
    }

    var i = 0;

    if (arguments.length > 1) {
      i = toInteger(arguments[1]);
    } // handle negative indices


    i = i >= 0 ? i : Math.max(0, length + i);

    for (; i < length; i++) {
      if (i in self && self[i] === sought) {
        return i;
      }
    }

    return -1;
  }
}, hasFirefox2IndexOfBug); //
// String
// ======
//
// ES5 15.5.4.14
// http://es5.github.com/#x15.5.4.14
// [bugfix, IE lt 9, firefox 4, Konqueror, Opera, obscure browsers]
// Many browsers do not split properly with regular expressions or they
// do not perform the split correctly under obscure conditions.
// See http://blog.stevenlevithan.com/archives/cross-browser-split
// I've tested in many browsers and this seems to cover the deviant ones:
//    'ab'.split(/(?:ab)*/) should be ["", ""], not [""]
//    '.'.split(/(.?)(.?)/) should be ["", ".", "", ""], not ["", ""]
//    'tesst'.split(/(s)*/) should be ["t", undefined, "e", "s", "t"], not
//       [undefined, "t", undefined, "e", ...]
//    ''.split(/.?/) should be [], not [""]
//    '.'.split(/()()/) should be ["."], not ["", "", "."]

var string_split = StringPrototype.split;

if ('ab'.split(/(?:ab)*/).length !== 2 || '.'.split(/(.?)(.?)/).length !== 4 || 'tesst'.split(/(s)*/)[1] === 't' || 'test'.split(/(?:)/, -1).length !== 4 || ''.split(/.?/).length || '.'.split(/()()/).length > 1) {
  (function () {
    var compliantExecNpcg = /()??/.exec('')[1] === void 0; // NPCG: nonparticipating capturing group

    StringPrototype.split = function (separator, limit) {
      var string = this;

      if (separator === void 0 && limit === 0) {
        return [];
      } // If `separator` is not a regex, use native split


      if (_toString.call(separator) !== '[object RegExp]') {
        return string_split.call(this, separator, limit);
      }

      var output = [],
          flags = (separator.ignoreCase ? 'i' : '') + (separator.multiline ? 'm' : '') + (separator.extended ? 'x' : '') + ( // Proposed for ES6
      separator.sticky ? 'y' : ''),
          // Firefox 3+
      lastLastIndex = 0,
          // Make `global` and avoid `lastIndex` issues by working with a copy
      separator2,
          match,
          lastIndex,
          lastLength;
      separator = new RegExp(separator.source, flags + 'g');
      string += ''; // Type-convert

      if (!compliantExecNpcg) {
        // Doesn't need flags gy, but they don't hurt
        separator2 = new RegExp('^' + separator.source + '$(?!\\s)', flags);
      }
      /* Values for `limit`, per the spec:
       * If undefined: 4294967295 // Math.pow(2, 32) - 1
       * If 0, Infinity, or NaN: 0
       * If positive number: limit = Math.floor(limit); if (limit > 4294967295) limit -= 4294967296;
       * If negative number: 4294967296 - Math.floor(Math.abs(limit))
       * If other: Type-convert, then use the above rules
       */


      limit = limit === void 0 ? -1 >>> 0 : // Math.pow(2, 32) - 1
      ToUint32(limit);

      while (match = separator.exec(string)) {
        // `separator.lastIndex` is not reliable cross-browser
        lastIndex = match.index + match[0].length;

        if (lastIndex > lastLastIndex) {
          output.push(string.slice(lastLastIndex, match.index)); // Fix browsers whose `exec` methods don't consistently return `undefined` for
          // nonparticipating capturing groups

          if (!compliantExecNpcg && match.length > 1) {
            match[0].replace(separator2, function () {
              for (var i = 1; i < arguments.length - 2; i++) {
                if (arguments[i] === void 0) {
                  match[i] = void 0;
                }
              }
            });
          }

          if (match.length > 1 && match.index < string.length) {
            ArrayPrototype.push.apply(output, match.slice(1));
          }

          lastLength = match[0].length;
          lastLastIndex = lastIndex;

          if (output.length >= limit) {
            break;
          }
        }

        if (separator.lastIndex === match.index) {
          separator.lastIndex++; // Avoid an infinite loop
        }
      }

      if (lastLastIndex === string.length) {
        if (lastLength || !separator.test('')) {
          output.push('');
        }
      } else {
        output.push(string.slice(lastLastIndex));
      }

      return output.length > limit ? output.slice(0, limit) : output;
    };
  })(); // [bugfix, chrome]
  // If separator is undefined, then the result array contains just one String,
  // which is the this value (converted to a String). If limit is not undefined,
  // then the output array is truncated so that it contains no more than limit
  // elements.
  // "0".split(undefined, 0) -> []

} else if ('0'.split(void 0, 0).length) {
  StringPrototype.split = function split(separator, limit) {
    if (separator === void 0 && limit === 0) {
      return [];
    }

    return string_split.call(this, separator, limit);
  };
} // ECMA-262, 3rd B.2.3
// Not an ECMAScript standard, although ECMAScript 3rd Edition has a
// non-normative section suggesting uniform semantics and it should be
// normalized across all browsers
// [bugfix, IE lt 9] IE < 9 substr() with negative value not working in IE


var string_substr = StringPrototype.substr;
var hasNegativeSubstrBug = ''.substr && '0b'.substr(-1) !== 'b';
defineProperties(StringPrototype, {
  substr: function substr(start, length) {
    return string_substr.call(this, start < 0 ? (start = this.length + start) < 0 ? 0 : start : start, length);
  }
}, hasNegativeSubstrBug);

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport-list.js":
/*!**********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport-list.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = [// streaming transports
__webpack_require__(/*! ./transport/websocket */ "./node_modules/sockjs-client/lib/transport/websocket.js"), __webpack_require__(/*! ./transport/xhr-streaming */ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js"), __webpack_require__(/*! ./transport/xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js"), __webpack_require__(/*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js"), __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/eventsource */ "./node_modules/sockjs-client/lib/transport/eventsource.js")) // polling transports
, __webpack_require__(/*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js"), __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/htmlfile */ "./node_modules/sockjs-client/lib/transport/htmlfile.js")), __webpack_require__(/*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js"), __webpack_require__(/*! ./transport/xdr-polling */ "./node_modules/sockjs-client/lib/transport/xdr-polling.js"), __webpack_require__(/*! ./transport/lib/iframe-wrap */ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js")(__webpack_require__(/*! ./transport/xhr-polling */ "./node_modules/sockjs-client/lib/transport/xhr-polling.js")), __webpack_require__(/*! ./transport/jsonp-polling */ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js")];

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    utils = __webpack_require__(/*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    XHR = global.XMLHttpRequest;

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:browser:xhr');
}

function AbstractXHRObject(method, url, payload, opts) {
  debug(method, url);
  var self = this;
  EventEmitter.call(this);
  setTimeout(function () {
    self._start(method, url, payload, opts);
  }, 0);
}

inherits(AbstractXHRObject, EventEmitter);

AbstractXHRObject.prototype._start = function (method, url, payload, opts) {
  var self = this;

  try {
    this.xhr = new XHR();
  } catch (x) {// intentionally empty
  }

  if (!this.xhr) {
    debug('no xhr');
    this.emit('finish', 0, 'no xhr support');

    this._cleanup();

    return;
  } // several browsers cache POSTs


  url = urlUtils.addQuery(url, 't=' + +new Date()); // Explorer tends to keep connection open, even after the
  // tab gets closed: http://bugs.jquery.com/ticket/5280

  this.unloadRef = utils.unloadAdd(function () {
    debug('unload cleanup');

    self._cleanup(true);
  });

  try {
    this.xhr.open(method, url, true);

    if (this.timeout && 'timeout' in this.xhr) {
      this.xhr.timeout = this.timeout;

      this.xhr.ontimeout = function () {
        debug('xhr timeout');
        self.emit('finish', 0, '');

        self._cleanup(false);
      };
    }
  } catch (e) {
    debug('exception', e); // IE raises an exception on wrong port.

    this.emit('finish', 0, '');

    this._cleanup(false);

    return;
  }

  if ((!opts || !opts.noCredentials) && AbstractXHRObject.supportsCORS) {
    debug('withCredentials'); // Mozilla docs says https://developer.mozilla.org/en/XMLHttpRequest :
    // "This never affects same-site requests."

    this.xhr.withCredentials = true;
  }

  if (opts && opts.headers) {
    for (var key in opts.headers) {
      this.xhr.setRequestHeader(key, opts.headers[key]);
    }
  }

  this.xhr.onreadystatechange = function () {
    if (self.xhr) {
      var x = self.xhr;
      var text, status;
      debug('readyState', x.readyState);

      switch (x.readyState) {
        case 3:
          // IE doesn't like peeking into responseText or status
          // on Microsoft.XMLHTTP and readystate=3
          try {
            status = x.status;
            text = x.responseText;
          } catch (e) {// intentionally empty
          }

          debug('status', status); // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450

          if (status === 1223) {
            status = 204;
          } // IE does return readystate == 3 for 404 answers.


          if (status === 200 && text && text.length > 0) {
            debug('chunk');
            self.emit('chunk', status, text);
          }

          break;

        case 4:
          status = x.status;
          debug('status', status); // IE returns 1223 for 204: http://bugs.jquery.com/ticket/1450

          if (status === 1223) {
            status = 204;
          } // IE returns this for a bad port
          // http://msdn.microsoft.com/en-us/library/windows/desktop/aa383770(v=vs.85).aspx


          if (status === 12005 || status === 12029) {
            status = 0;
          }

          debug('finish', status, x.responseText);
          self.emit('finish', status, x.responseText);

          self._cleanup(false);

          break;
      }
    }
  };

  try {
    self.xhr.send(payload);
  } catch (e) {
    self.emit('finish', 0, '');

    self._cleanup(false);
  }
};

AbstractXHRObject.prototype._cleanup = function (abort) {
  debug('cleanup');

  if (!this.xhr) {
    return;
  }

  this.removeAllListeners();
  utils.unloadDel(this.unloadRef); // IE needs this field to be a function

  this.xhr.onreadystatechange = function () {};

  if (this.xhr.ontimeout) {
    this.xhr.ontimeout = null;
  }

  if (abort) {
    try {
      this.xhr.abort();
    } catch (x) {// intentionally empty
    }
  }

  this.unloadRef = this.xhr = null;
};

AbstractXHRObject.prototype.close = function () {
  debug('close');

  this._cleanup(true);
};

AbstractXHRObject.enabled = !!XHR; // override XMLHttpRequest for IE6/7
// obfuscate to avoid firewalls

var axo = ['Active'].concat('Object').join('X');

if (!AbstractXHRObject.enabled && axo in global) {
  debug('overriding xmlhttprequest');

  XHR = function () {
    try {
      return new global[axo]('Microsoft.XMLHTTP');
    } catch (e) {
      return null;
    }
  };

  AbstractXHRObject.enabled = !!new XHR();
}

var cors = false;

try {
  cors = 'withCredentials' in new XHR();
} catch (ignored) {// intentionally empty
}

AbstractXHRObject.supportsCORS = cors;
module.exports = AbstractXHRObject;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/eventsource.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {module.exports = global.EventSource;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/browser/websocket.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/browser/websocket.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var Driver = global.WebSocket || global.MozWebSocket;

if (Driver) {
  module.exports = function WebSocketBrowserDriver(url) {
    return new Driver(url);
  };
} else {
  module.exports = undefined;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/eventsource.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/eventsource.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"),
    EventSourceReceiver = __webpack_require__(/*! ./receiver/eventsource */ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js"),
    XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"),
    EventSourceDriver = __webpack_require__(/*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js");

function EventSourceTransport(transUrl) {
  if (!EventSourceTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/eventsource', EventSourceReceiver, XHRCorsObject);
}

inherits(EventSourceTransport, AjaxBasedTransport);

EventSourceTransport.enabled = function () {
  return !!EventSourceDriver;
};

EventSourceTransport.transportName = 'eventsource';
EventSourceTransport.roundTrips = 2;
module.exports = EventSourceTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/htmlfile.js":
/*!**************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/htmlfile.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    HtmlfileReceiver = __webpack_require__(/*! ./receiver/htmlfile */ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js"),
    XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"),
    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js");

function HtmlFileTransport(transUrl) {
  if (!HtmlfileReceiver.enabled) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/htmlfile', HtmlfileReceiver, XHRLocalObject);
}

inherits(HtmlFileTransport, AjaxBasedTransport);

HtmlFileTransport.enabled = function (info) {
  return HtmlfileReceiver.enabled && info.sameOrigin;
};

HtmlFileTransport.transportName = 'htmlfile';
HtmlFileTransport.roundTrips = 2;
module.exports = HtmlFileTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/iframe.js":
/*!************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/iframe.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
 // Few cool transports do work only for same-origin. In order to make
// them work cross-domain we shall use iframe, served from the
// remote domain. New browsers have capabilities to communicate with
// cross domain iframe using postMessage(). In IE it was implemented
// from IE 8+, but of course, IE got some details wrong:
//    http://msdn.microsoft.com/en-us/library/cc197015(v=VS.85).aspx
//    http://stevesouders.com/misc/test-postmessage.php

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    version = __webpack_require__(/*! ../version */ "./node_modules/sockjs-client/lib/version.js"),
    urlUtils = __webpack_require__(/*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    iframeUtils = __webpack_require__(/*! ../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"),
    eventUtils = __webpack_require__(/*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    random = __webpack_require__(/*! ../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:transport:iframe');
}

function IframeTransport(transport, transUrl, baseUrl) {
  if (!IframeTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  EventEmitter.call(this);
  var self = this;
  this.origin = urlUtils.getOrigin(baseUrl);
  this.baseUrl = baseUrl;
  this.transUrl = transUrl;
  this.transport = transport;
  this.windowId = random.string(8);
  var iframeUrl = urlUtils.addPath(baseUrl, '/iframe.html') + '#' + this.windowId;
  debug(transport, transUrl, iframeUrl);
  this.iframeObj = iframeUtils.createIframe(iframeUrl, function (r) {
    debug('err callback');
    self.emit('close', 1006, 'Unable to load an iframe (' + r + ')');
    self.close();
  });
  this.onmessageCallback = this._message.bind(this);
  eventUtils.attachEvent('message', this.onmessageCallback);
}

inherits(IframeTransport, EventEmitter);

IframeTransport.prototype.close = function () {
  debug('close');
  this.removeAllListeners();

  if (this.iframeObj) {
    eventUtils.detachEvent('message', this.onmessageCallback);

    try {
      // When the iframe is not loaded, IE raises an exception
      // on 'contentWindow'.
      this.postMessage('c');
    } catch (x) {// intentionally empty
    }

    this.iframeObj.cleanup();
    this.iframeObj = null;
    this.onmessageCallback = this.iframeObj = null;
  }
};

IframeTransport.prototype._message = function (e) {
  debug('message', e.data);

  if (!urlUtils.isOriginEqual(e.origin, this.origin)) {
    debug('not same origin', e.origin, this.origin);
    return;
  }

  var iframeMessage;

  try {
    iframeMessage = JSON3.parse(e.data);
  } catch (ignored) {
    debug('bad json', e.data);
    return;
  }

  if (iframeMessage.windowId !== this.windowId) {
    debug('mismatched window id', iframeMessage.windowId, this.windowId);
    return;
  }

  switch (iframeMessage.type) {
    case 's':
      this.iframeObj.loaded(); // window global dependency

      this.postMessage('s', JSON3.stringify([version, this.transport, this.transUrl, this.baseUrl]));
      break;

    case 't':
      this.emit('message', iframeMessage.data);
      break;

    case 'c':
      var cdata;

      try {
        cdata = JSON3.parse(iframeMessage.data);
      } catch (ignored) {
        debug('bad json', iframeMessage.data);
        return;
      }

      this.emit('close', cdata[0], cdata[1]);
      this.close();
      break;
  }
};

IframeTransport.prototype.postMessage = function (type, data) {
  debug('postMessage', type, data);
  this.iframeObj.post(JSON3.stringify({
    windowId: this.windowId,
    type: type,
    data: data || ''
  }), this.origin);
};

IframeTransport.prototype.send = function (message) {
  debug('send', message);
  this.postMessage('m', message);
};

IframeTransport.enabled = function () {
  return iframeUtils.iframeEnabled;
};

IframeTransport.transportName = 'iframe';
IframeTransport.roundTrips = 2;
module.exports = IframeTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/jsonp-polling.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/jsonp-polling.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) { // The simplest and most robust transport, using the well-know cross
// domain hack - JSONP. This transport is quite inefficient - one
// message could use up to one http request. But at least it works almost
// everywhere.
// Known limitations:
//   o you will get a spinning cursor
//   o for Konqueror a dumb timer is needed to detect errors

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    SenderReceiver = __webpack_require__(/*! ./lib/sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js"),
    JsonpReceiver = __webpack_require__(/*! ./receiver/jsonp */ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js"),
    jsonpSender = __webpack_require__(/*! ./sender/jsonp */ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js");

function JsonPTransport(transUrl) {
  if (!JsonPTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  SenderReceiver.call(this, transUrl, '/jsonp', jsonpSender, JsonpReceiver);
}

inherits(JsonPTransport, SenderReceiver);

JsonPTransport.enabled = function () {
  return !!global.document;
};

JsonPTransport.transportName = 'jsonp-polling';
JsonPTransport.roundTrips = 1;
JsonPTransport.needBody = true;
module.exports = JsonPTransport;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/ajax-based.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    SenderReceiver = __webpack_require__(/*! ./sender-receiver */ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:ajax-based');
}

function createAjaxSender(AjaxObject) {
  return function (url, payload, callback) {
    debug('create ajax sender', url, payload);
    var opt = {};

    if (typeof payload === 'string') {
      opt.headers = {
        'Content-type': 'text/plain'
      };
    }

    var ajaxUrl = urlUtils.addPath(url, '/xhr_send');
    var xo = new AjaxObject('POST', ajaxUrl, payload, opt);
    xo.once('finish', function (status) {
      debug('finish', status);
      xo = null;

      if (status !== 200 && status !== 204) {
        return callback(new Error('http status ' + status));
      }

      callback();
    });
    return function () {
      debug('abort');
      xo.close();
      xo = null;
      var err = new Error('Aborted');
      err.code = 1000;
      callback(err);
    };
  };
}

function AjaxBasedTransport(transUrl, urlSuffix, Receiver, AjaxObject) {
  SenderReceiver.call(this, transUrl, urlSuffix, createAjaxSender(AjaxObject), Receiver, AjaxObject);
}

inherits(AjaxBasedTransport, SenderReceiver);
module.exports = AjaxBasedTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter;

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:buffered-sender');
}

function BufferedSender(url, sender) {
  debug(url);
  EventEmitter.call(this);
  this.sendBuffer = [];
  this.sender = sender;
  this.url = url;
}

inherits(BufferedSender, EventEmitter);

BufferedSender.prototype.send = function (message) {
  debug('send', message);
  this.sendBuffer.push(message);

  if (!this.sendStop) {
    this.sendSchedule();
  }
}; // For polling transports in a situation when in the message callback,
// new message is being send. If the sending connection was started
// before receiving one, it is possible to saturate the network and
// timeout due to the lack of receiving socket. To avoid that we delay
// sending messages by some small time, in order to let receiving
// connection be started beforehand. This is only a halfmeasure and
// does not fix the big problem, but it does make the tests go more
// stable on slow networks.


BufferedSender.prototype.sendScheduleWait = function () {
  debug('sendScheduleWait');
  var self = this;
  var tref;

  this.sendStop = function () {
    debug('sendStop');
    self.sendStop = null;
    clearTimeout(tref);
  };

  tref = setTimeout(function () {
    debug('timeout');
    self.sendStop = null;
    self.sendSchedule();
  }, 25);
};

BufferedSender.prototype.sendSchedule = function () {
  debug('sendSchedule', this.sendBuffer.length);
  var self = this;

  if (this.sendBuffer.length > 0) {
    var payload = '[' + this.sendBuffer.join(',') + ']';
    this.sendStop = this.sender(this.url, payload, function (err) {
      self.sendStop = null;

      if (err) {
        debug('error', err);
        self.emit('close', err.code || 1006, 'Sending error: ' + err);
        self.close();
      } else {
        self.sendScheduleWait();
      }
    });
    this.sendBuffer = [];
  }
};

BufferedSender.prototype._cleanup = function () {
  debug('_cleanup');
  this.removeAllListeners();
};

BufferedSender.prototype.close = function () {
  debug('close');

  this._cleanup();

  if (this.sendStop) {
    this.sendStop();
    this.sendStop = null;
  }
};

module.exports = BufferedSender;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/iframe-wrap.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    IframeTransport = __webpack_require__(/*! ../iframe */ "./node_modules/sockjs-client/lib/transport/iframe.js"),
    objectUtils = __webpack_require__(/*! ../../utils/object */ "./node_modules/sockjs-client/lib/utils/object.js");

module.exports = function (transport) {
  function IframeWrapTransport(transUrl, baseUrl) {
    IframeTransport.call(this, transport.transportName, transUrl, baseUrl);
  }

  inherits(IframeWrapTransport, IframeTransport);

  IframeWrapTransport.enabled = function (url, info) {
    if (!global.document) {
      return false;
    }

    var iframeInfo = objectUtils.extend({}, info);
    iframeInfo.sameOrigin = true;
    return transport.enabled(iframeInfo) && IframeTransport.enabled();
  };

  IframeWrapTransport.transportName = 'iframe-' + transport.transportName;
  IframeWrapTransport.needBody = true;
  IframeWrapTransport.roundTrips = IframeTransport.roundTrips + transport.roundTrips - 1; // html, javascript (2) + transport - no CORS (1)

  IframeWrapTransport.facadeTransport = transport;
  return IframeWrapTransport;
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter;

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:polling');
}

function Polling(Receiver, receiveUrl, AjaxObject) {
  debug(receiveUrl);
  EventEmitter.call(this);
  this.Receiver = Receiver;
  this.receiveUrl = receiveUrl;
  this.AjaxObject = AjaxObject;

  this._scheduleReceiver();
}

inherits(Polling, EventEmitter);

Polling.prototype._scheduleReceiver = function () {
  debug('_scheduleReceiver');
  var self = this;
  var poll = this.poll = new this.Receiver(this.receiveUrl, this.AjaxObject);
  poll.on('message', function (msg) {
    debug('message', msg);
    self.emit('message', msg);
  });
  poll.once('close', function (code, reason) {
    debug('close', code, reason, self.pollIsClosing);
    self.poll = poll = null;

    if (!self.pollIsClosing) {
      if (reason === 'network') {
        self._scheduleReceiver();
      } else {
        self.emit('close', code || 1006, reason);
        self.removeAllListeners();
      }
    }
  });
};

Polling.prototype.abort = function () {
  debug('abort');
  this.removeAllListeners();
  this.pollIsClosing = true;

  if (this.poll) {
    this.poll.abort();
  }
};

module.exports = Polling;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js":
/*!*************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/lib/sender-receiver.js ***!
  \*************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    BufferedSender = __webpack_require__(/*! ./buffered-sender */ "./node_modules/sockjs-client/lib/transport/lib/buffered-sender.js"),
    Polling = __webpack_require__(/*! ./polling */ "./node_modules/sockjs-client/lib/transport/lib/polling.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender-receiver');
}

function SenderReceiver(transUrl, urlSuffix, senderFunc, Receiver, AjaxObject) {
  var pollUrl = urlUtils.addPath(transUrl, urlSuffix);
  debug(pollUrl);
  var self = this;
  BufferedSender.call(this, transUrl, senderFunc);
  this.poll = new Polling(Receiver, pollUrl, AjaxObject);
  this.poll.on('message', function (msg) {
    debug('poll message', msg);
    self.emit('message', msg);
  });
  this.poll.once('close', function (code, reason) {
    debug('poll close', code, reason);
    self.poll = null;
    self.emit('close', code, reason);
    self.close();
  });
}

inherits(SenderReceiver, BufferedSender);

SenderReceiver.prototype.close = function () {
  BufferedSender.prototype.close.call(this);
  debug('close');
  this.removeAllListeners();

  if (this.poll) {
    this.poll.abort();
    this.poll = null;
  }
};

module.exports = SenderReceiver;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/eventsource.js":
/*!**************************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/eventsource.js ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    EventSourceDriver = __webpack_require__(/*! eventsource */ "./node_modules/sockjs-client/lib/transport/browser/eventsource.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:eventsource');
}

function EventSourceReceiver(url) {
  debug(url);
  EventEmitter.call(this);
  var self = this;
  var es = this.es = new EventSourceDriver(url);

  es.onmessage = function (e) {
    debug('message', e.data);
    self.emit('message', decodeURI(e.data));
  };

  es.onerror = function (e) {
    debug('error', es.readyState, e); // ES on reconnection has readyState = 0 or 1.
    // on network error it's CLOSED = 2

    var reason = es.readyState !== 2 ? 'network' : 'permanent';

    self._cleanup();

    self._close(reason);
  };
}

inherits(EventSourceReceiver, EventEmitter);

EventSourceReceiver.prototype.abort = function () {
  debug('abort');

  this._cleanup();

  this._close('user');
};

EventSourceReceiver.prototype._cleanup = function () {
  debug('cleanup');
  var es = this.es;

  if (es) {
    es.onmessage = es.onerror = null;
    es.close();
    this.es = null;
  }
};

EventSourceReceiver.prototype._close = function (reason) {
  debug('close', reason);
  var self = this; // Safari and chrome < 15 crash if we close window before
  // waiting for ES cleanup. See:
  // https://code.google.com/p/chromium/issues/detail?id=89155

  setTimeout(function () {
    self.emit('close', null, reason);
    self.removeAllListeners();
  }, 200);
};

module.exports = EventSourceReceiver;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js":
/*!***********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/htmlfile.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    iframeUtils = __webpack_require__(/*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"),
    urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:htmlfile');
}

function HtmlfileReceiver(url) {
  debug(url);
  EventEmitter.call(this);
  var self = this;
  iframeUtils.polluteGlobalNamespace();
  this.id = 'a' + random.string(6);
  url = urlUtils.addQuery(url, 'c=' + decodeURIComponent(iframeUtils.WPrefix + '.' + this.id));
  debug('using htmlfile', HtmlfileReceiver.htmlfileEnabled);
  var constructFunc = HtmlfileReceiver.htmlfileEnabled ? iframeUtils.createHtmlfile : iframeUtils.createIframe;
  global[iframeUtils.WPrefix][this.id] = {
    start: function () {
      debug('start');
      self.iframeObj.loaded();
    },
    message: function (data) {
      debug('message', data);
      self.emit('message', data);
    },
    stop: function () {
      debug('stop');

      self._cleanup();

      self._close('network');
    }
  };
  this.iframeObj = constructFunc(url, function () {
    debug('callback');

    self._cleanup();

    self._close('permanent');
  });
}

inherits(HtmlfileReceiver, EventEmitter);

HtmlfileReceiver.prototype.abort = function () {
  debug('abort');

  this._cleanup();

  this._close('user');
};

HtmlfileReceiver.prototype._cleanup = function () {
  debug('_cleanup');

  if (this.iframeObj) {
    this.iframeObj.cleanup();
    this.iframeObj = null;
  }

  delete global[iframeUtils.WPrefix][this.id];
};

HtmlfileReceiver.prototype._close = function (reason) {
  debug('_close', reason);
  this.emit('close', null, reason);
  this.removeAllListeners();
};

HtmlfileReceiver.htmlfileEnabled = false; // obfuscate to avoid firewalls

var axo = ['Active'].concat('Object').join('X');

if (axo in global) {
  try {
    HtmlfileReceiver.htmlfileEnabled = !!new global[axo]('htmlfile');
  } catch (x) {// intentionally empty
  }
}

HtmlfileReceiver.enabled = HtmlfileReceiver.htmlfileEnabled || iframeUtils.iframeEnabled;
module.exports = HtmlfileReceiver;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/jsonp.js":
/*!********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/jsonp.js ***!
  \********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var utils = __webpack_require__(/*! ../../utils/iframe */ "./node_modules/sockjs-client/lib/utils/iframe.js"),
    random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"),
    browser = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js"),
    urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter;

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:jsonp');
}

function JsonpReceiver(url) {
  debug(url);
  var self = this;
  EventEmitter.call(this);
  utils.polluteGlobalNamespace();
  this.id = 'a' + random.string(6);
  var urlWithId = urlUtils.addQuery(url, 'c=' + encodeURIComponent(utils.WPrefix + '.' + this.id));
  global[utils.WPrefix][this.id] = this._callback.bind(this);

  this._createScript(urlWithId); // Fallback mostly for Konqueror - stupid timer, 35 seconds shall be plenty.


  this.timeoutId = setTimeout(function () {
    debug('timeout');

    self._abort(new Error('JSONP script loaded abnormally (timeout)'));
  }, JsonpReceiver.timeout);
}

inherits(JsonpReceiver, EventEmitter);

JsonpReceiver.prototype.abort = function () {
  debug('abort');

  if (global[utils.WPrefix][this.id]) {
    var err = new Error('JSONP user aborted read');
    err.code = 1000;

    this._abort(err);
  }
};

JsonpReceiver.timeout = 35000;
JsonpReceiver.scriptErrorTimeout = 1000;

JsonpReceiver.prototype._callback = function (data) {
  debug('_callback', data);

  this._cleanup();

  if (this.aborting) {
    return;
  }

  if (data) {
    debug('message', data);
    this.emit('message', data);
  }

  this.emit('close', null, 'network');
  this.removeAllListeners();
};

JsonpReceiver.prototype._abort = function (err) {
  debug('_abort', err);

  this._cleanup();

  this.aborting = true;
  this.emit('close', err.code, err.message);
  this.removeAllListeners();
};

JsonpReceiver.prototype._cleanup = function () {
  debug('_cleanup');
  clearTimeout(this.timeoutId);

  if (this.script2) {
    this.script2.parentNode.removeChild(this.script2);
    this.script2 = null;
  }

  if (this.script) {
    var script = this.script; // Unfortunately, you can't really abort script loading of
    // the script.

    script.parentNode.removeChild(script);
    script.onreadystatechange = script.onerror = script.onload = script.onclick = null;
    this.script = null;
  }

  delete global[utils.WPrefix][this.id];
};

JsonpReceiver.prototype._scriptError = function () {
  debug('_scriptError');
  var self = this;

  if (this.errorTimer) {
    return;
  }

  this.errorTimer = setTimeout(function () {
    if (!self.loadedOkay) {
      self._abort(new Error('JSONP script loaded abnormally (onerror)'));
    }
  }, JsonpReceiver.scriptErrorTimeout);
};

JsonpReceiver.prototype._createScript = function (url) {
  debug('_createScript', url);
  var self = this;
  var script = this.script = global.document.createElement('script');
  var script2; // Opera synchronous load trick.

  script.id = 'a' + random.string(8);
  script.src = url;
  script.type = 'text/javascript';
  script.charset = 'UTF-8';
  script.onerror = this._scriptError.bind(this);

  script.onload = function () {
    debug('onload');

    self._abort(new Error('JSONP script loaded abnormally (onload)'));
  }; // IE9 fires 'error' event after onreadystatechange or before, in random order.
  // Use loadedOkay to determine if actually errored


  script.onreadystatechange = function () {
    debug('onreadystatechange', script.readyState);

    if (/loaded|closed/.test(script.readyState)) {
      if (script && script.htmlFor && script.onclick) {
        self.loadedOkay = true;

        try {
          // In IE, actually execute the script.
          script.onclick();
        } catch (x) {// intentionally empty
        }
      }

      if (script) {
        self._abort(new Error('JSONP script loaded abnormally (onreadystatechange)'));
      }
    }
  }; // IE: event/htmlFor/onclick trick.
  // One can't rely on proper order for onreadystatechange. In order to
  // make sure, set a 'htmlFor' and 'event' properties, so that
  // script code will be installed as 'onclick' handler for the
  // script object. Later, onreadystatechange, manually execute this
  // code. FF and Chrome doesn't work with 'event' and 'htmlFor'
  // set. For reference see:
  //   http://jaubourg.net/2010/07/loading-script-as-onclick-handler-of.html
  // Also, read on that about script ordering:
  //   http://wiki.whatwg.org/wiki/Dynamic_Script_Execution_Order


  if (typeof script.async === 'undefined' && global.document.attachEvent) {
    // According to mozilla docs, in recent browsers script.async defaults
    // to 'true', so we may use it to detect a good browser:
    // https://developer.mozilla.org/en/HTML/Element/script
    if (!browser.isOpera()) {
      // Naively assume we're in IE
      try {
        script.htmlFor = script.id;
        script.event = 'onclick';
      } catch (x) {// intentionally empty
      }

      script.async = true;
    } else {
      // Opera, second sync script hack
      script2 = this.script2 = global.document.createElement('script');
      script2.text = "try{var a = document.getElementById('" + script.id + "'); if(a)a.onerror();}catch(x){};";
      script.async = script2.async = false;
    }
  }

  if (typeof script.async !== 'undefined') {
    script.async = true;
  }

  var head = global.document.getElementsByTagName('head')[0];
  head.insertBefore(script, head.firstChild);

  if (script2) {
    head.insertBefore(script2, head.firstChild);
  }
};

module.exports = JsonpReceiver;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/receiver/xhr.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter;

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:receiver:xhr');
}

function XhrReceiver(url, AjaxObject) {
  debug(url);
  EventEmitter.call(this);
  var self = this;
  this.bufferPosition = 0;
  this.xo = new AjaxObject('POST', url, null);
  this.xo.on('chunk', this._chunkHandler.bind(this));
  this.xo.once('finish', function (status, text) {
    debug('finish', status, text);

    self._chunkHandler(status, text);

    self.xo = null;
    var reason = status === 200 ? 'network' : 'permanent';
    debug('close', reason);
    self.emit('close', null, reason);

    self._cleanup();
  });
}

inherits(XhrReceiver, EventEmitter);

XhrReceiver.prototype._chunkHandler = function (status, text) {
  debug('_chunkHandler', status);

  if (status !== 200 || !text) {
    return;
  }

  for (var idx = -1;; this.bufferPosition += idx + 1) {
    var buf = text.slice(this.bufferPosition);
    idx = buf.indexOf('\n');

    if (idx === -1) {
      break;
    }

    var msg = buf.slice(0, idx);

    if (msg) {
      debug('message', msg);
      this.emit('message', msg);
    }
  }
};

XhrReceiver.prototype._cleanup = function () {
  debug('_cleanup');
  this.removeAllListeners();
};

XhrReceiver.prototype.abort = function () {
  debug('abort');

  if (this.xo) {
    this.xo.close();
    debug('close');
    this.emit('close', null, 'user');
    this.xo = null;
  }

  this._cleanup();
};

module.exports = XhrReceiver;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/jsonp.js":
/*!******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/jsonp.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var random = __webpack_require__(/*! ../../utils/random */ "./node_modules/sockjs-client/lib/utils/random.js"),
    urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender:jsonp');
}

var form, area;

function createIframe(id) {
  debug('createIframe', id);

  try {
    // ie6 dynamic iframes with target="" support (thanks Chris Lambacher)
    return global.document.createElement('<iframe name="' + id + '">');
  } catch (x) {
    var iframe = global.document.createElement('iframe');
    iframe.name = id;
    return iframe;
  }
}

function createForm() {
  debug('createForm');
  form = global.document.createElement('form');
  form.style.display = 'none';
  form.style.position = 'absolute';
  form.method = 'POST';
  form.enctype = 'application/x-www-form-urlencoded';
  form.acceptCharset = 'UTF-8';
  area = global.document.createElement('textarea');
  area.name = 'd';
  form.appendChild(area);
  global.document.body.appendChild(form);
}

module.exports = function (url, payload, callback) {
  debug(url, payload);

  if (!form) {
    createForm();
  }

  var id = 'a' + random.string(8);
  form.target = id;
  form.action = urlUtils.addQuery(urlUtils.addPath(url, '/jsonp_send'), 'i=' + id);
  var iframe = createIframe(id);
  iframe.id = id;
  iframe.style.display = 'none';
  form.appendChild(iframe);

  try {
    area.value = payload;
  } catch (e) {// seriously broken browsers get here
  }

  form.submit();

  var completed = function (err) {
    debug('completed', id, err);

    if (!iframe.onerror) {
      return;
    }

    iframe.onreadystatechange = iframe.onerror = iframe.onload = null; // Opera mini doesn't like if we GC iframe
    // immediately, thus this timeout.

    setTimeout(function () {
      debug('cleaning up', id);
      iframe.parentNode.removeChild(iframe);
      iframe = null;
    }, 500);
    area.value = ''; // It is not possible to detect if the iframe succeeded or
    // failed to submit our form.

    callback(err);
  };

  iframe.onerror = function () {
    debug('onerror', id);
    completed();
  };

  iframe.onload = function () {
    debug('onload', id);
    completed();
  };

  iframe.onreadystatechange = function (e) {
    debug('onreadystatechange', id, iframe.readyState, e);

    if (iframe.readyState === 'complete') {
      completed();
    }
  };

  return function () {
    debug('aborted', id);
    completed(new Error('Aborted'));
  };
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xdr.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xdr.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    eventUtils = __webpack_require__(/*! ../../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    browser = __webpack_require__(/*! ../../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js"),
    urlUtils = __webpack_require__(/*! ../../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:sender:xdr');
} // References:
//   http://ajaxian.com/archives/100-line-ajax-wrapper
//   http://msdn.microsoft.com/en-us/library/cc288060(v=VS.85).aspx


function XDRObject(method, url, payload) {
  debug(method, url);
  var self = this;
  EventEmitter.call(this);
  setTimeout(function () {
    self._start(method, url, payload);
  }, 0);
}

inherits(XDRObject, EventEmitter);

XDRObject.prototype._start = function (method, url, payload) {
  debug('_start');
  var self = this;
  var xdr = new global.XDomainRequest(); // IE caches even POSTs

  url = urlUtils.addQuery(url, 't=' + +new Date());

  xdr.onerror = function () {
    debug('onerror');

    self._error();
  };

  xdr.ontimeout = function () {
    debug('ontimeout');

    self._error();
  };

  xdr.onprogress = function () {
    debug('progress', xdr.responseText);
    self.emit('chunk', 200, xdr.responseText);
  };

  xdr.onload = function () {
    debug('load');
    self.emit('finish', 200, xdr.responseText);

    self._cleanup(false);
  };

  this.xdr = xdr;
  this.unloadRef = eventUtils.unloadAdd(function () {
    self._cleanup(true);
  });

  try {
    // Fails with AccessDenied if port number is bogus
    this.xdr.open(method, url);

    if (this.timeout) {
      this.xdr.timeout = this.timeout;
    }

    this.xdr.send(payload);
  } catch (x) {
    this._error();
  }
};

XDRObject.prototype._error = function () {
  this.emit('finish', 0, '');

  this._cleanup(false);
};

XDRObject.prototype._cleanup = function (abort) {
  debug('cleanup', abort);

  if (!this.xdr) {
    return;
  }

  this.removeAllListeners();
  eventUtils.unloadDel(this.unloadRef);
  this.xdr.ontimeout = this.xdr.onerror = this.xdr.onprogress = this.xdr.onload = null;

  if (abort) {
    try {
      this.xdr.abort();
    } catch (x) {// intentionally empty
    }
  }

  this.unloadRef = this.xdr = null;
};

XDRObject.prototype.close = function () {
  debug('close');

  this._cleanup(true);
}; // IE 8/9 if the request target uses the same scheme - #79


XDRObject.enabled = !!(global.XDomainRequest && browser.hasDomain());
module.exports = XDRObject;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    XhrDriver = __webpack_require__(/*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js");

function XHRCorsObject(method, url, payload, opts) {
  XhrDriver.call(this, method, url, payload, opts);
}

inherits(XHRCorsObject, XhrDriver);
XHRCorsObject.enabled = XhrDriver.enabled && XhrDriver.supportsCORS;
module.exports = XHRCorsObject;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-fake.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

function XHRFake()
/* method, url, payload, opts */
{
  var self = this;
  EventEmitter.call(this);
  this.to = setTimeout(function () {
    self.emit('finish', 200, '{}');
  }, XHRFake.timeout);
}

inherits(XHRFake, EventEmitter);

XHRFake.prototype.close = function () {
  clearTimeout(this.to);
};

XHRFake.timeout = 2000;
module.exports = XHRFake;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/sender/xhr-local.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    XhrDriver = __webpack_require__(/*! ../driver/xhr */ "./node_modules/sockjs-client/lib/transport/browser/abstract-xhr.js");

function XHRLocalObject(method, url, payload
/*, opts */
) {
  XhrDriver.call(this, method, url, payload, {
    noCredentials: true
  });
}

inherits(XHRLocalObject, XhrDriver);
XHRLocalObject.enabled = XhrDriver.enabled;
module.exports = XHRLocalObject;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/websocket.js":
/*!***************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/websocket.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils/event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    urlUtils = __webpack_require__(/*! ../utils/url */ "./node_modules/sockjs-client/lib/utils/url.js"),
    inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    EventEmitter = __webpack_require__(/*! events */ "./node_modules/sockjs-client/lib/event/emitter.js").EventEmitter,
    WebsocketDriver = __webpack_require__(/*! ./driver/websocket */ "./node_modules/sockjs-client/lib/transport/browser/websocket.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:websocket');
}

function WebSocketTransport(transUrl, ignore, options) {
  if (!WebSocketTransport.enabled()) {
    throw new Error('Transport created when disabled');
  }

  EventEmitter.call(this);
  debug('constructor', transUrl);
  var self = this;
  var url = urlUtils.addPath(transUrl, '/websocket');

  if (url.slice(0, 5) === 'https') {
    url = 'wss' + url.slice(5);
  } else {
    url = 'ws' + url.slice(4);
  }

  this.url = url;
  this.ws = new WebsocketDriver(this.url, [], options);

  this.ws.onmessage = function (e) {
    debug('message event', e.data);
    self.emit('message', e.data);
  }; // Firefox has an interesting bug. If a websocket connection is
  // created after onunload, it stays alive even when user
  // navigates away from the page. In such situation let's lie -
  // let's not open the ws connection at all. See:
  // https://github.com/sockjs/sockjs-client/issues/28
  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085


  this.unloadRef = utils.unloadAdd(function () {
    debug('unload');
    self.ws.close();
  });

  this.ws.onclose = function (e) {
    debug('close event', e.code, e.reason);
    self.emit('close', e.code, e.reason);

    self._cleanup();
  };

  this.ws.onerror = function (e) {
    debug('error event', e);
    self.emit('close', 1006, 'WebSocket connection broken');

    self._cleanup();
  };
}

inherits(WebSocketTransport, EventEmitter);

WebSocketTransport.prototype.send = function (data) {
  var msg = '[' + data + ']';
  debug('send', msg);
  this.ws.send(msg);
};

WebSocketTransport.prototype.close = function () {
  debug('close');
  var ws = this.ws;

  this._cleanup();

  if (ws) {
    ws.close();
  }
};

WebSocketTransport.prototype._cleanup = function () {
  debug('_cleanup');
  var ws = this.ws;

  if (ws) {
    ws.onmessage = ws.onclose = ws.onerror = null;
  }

  utils.unloadDel(this.unloadRef);
  this.unloadRef = this.ws = null;
  this.removeAllListeners();
};

WebSocketTransport.enabled = function () {
  debug('enabled');
  return !!WebsocketDriver;
};

WebSocketTransport.transportName = 'websocket'; // In theory, ws should require 1 round trip. But in chrome, this is
// not very stable over SSL. Most likely a ws connection requires a
// separate SSL connection, in which case 2 round trips are an
// absolute minumum.

WebSocketTransport.roundTrips = 2;
module.exports = WebSocketTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"),
    XdrStreamingTransport = __webpack_require__(/*! ./xdr-streaming */ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js"),
    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"),
    XDRObject = __webpack_require__(/*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js");

function XdrPollingTransport(transUrl) {
  if (!XDRObject.enabled) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XDRObject);
}

inherits(XdrPollingTransport, AjaxBasedTransport);
XdrPollingTransport.enabled = XdrStreamingTransport.enabled;
XdrPollingTransport.transportName = 'xdr-polling';
XdrPollingTransport.roundTrips = 2; // preflight, ajax

module.exports = XdrPollingTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xdr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xdr-streaming.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"),
    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"),
    XDRObject = __webpack_require__(/*! ./sender/xdr */ "./node_modules/sockjs-client/lib/transport/sender/xdr.js"); // According to:
//   http://stackoverflow.com/questions/1641507/detect-browser-support-for-cross-domain-xmlhttprequests
//   http://hacks.mozilla.org/2009/07/cross-site-xmlhttprequest-with-cors/


function XdrStreamingTransport(transUrl) {
  if (!XDRObject.enabled) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XDRObject);
}

inherits(XdrStreamingTransport, AjaxBasedTransport);

XdrStreamingTransport.enabled = function (info) {
  if (info.cookie_needed || info.nullOrigin) {
    return false;
  }

  return XDRObject.enabled && info.sameScheme;
};

XdrStreamingTransport.transportName = 'xdr-streaming';
XdrStreamingTransport.roundTrips = 2; // preflight, ajax

module.exports = XdrStreamingTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-polling.js":
/*!*****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-polling.js ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"),
    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"),
    XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"),
    XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js");

function XhrPollingTransport(transUrl) {
  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/xhr', XhrReceiver, XHRCorsObject);
}

inherits(XhrPollingTransport, AjaxBasedTransport);

XhrPollingTransport.enabled = function (info) {
  if (info.nullOrigin) {
    return false;
  }

  if (XHRLocalObject.enabled && info.sameOrigin) {
    return true;
  }

  return XHRCorsObject.enabled;
};

XhrPollingTransport.transportName = 'xhr-polling';
XhrPollingTransport.roundTrips = 2; // preflight, ajax

module.exports = XhrPollingTransport;

/***/ }),

/***/ "./node_modules/sockjs-client/lib/transport/xhr-streaming.js":
/*!*******************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/transport/xhr-streaming.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js"),
    AjaxBasedTransport = __webpack_require__(/*! ./lib/ajax-based */ "./node_modules/sockjs-client/lib/transport/lib/ajax-based.js"),
    XhrReceiver = __webpack_require__(/*! ./receiver/xhr */ "./node_modules/sockjs-client/lib/transport/receiver/xhr.js"),
    XHRCorsObject = __webpack_require__(/*! ./sender/xhr-cors */ "./node_modules/sockjs-client/lib/transport/sender/xhr-cors.js"),
    XHRLocalObject = __webpack_require__(/*! ./sender/xhr-local */ "./node_modules/sockjs-client/lib/transport/sender/xhr-local.js"),
    browser = __webpack_require__(/*! ../utils/browser */ "./node_modules/sockjs-client/lib/utils/browser.js");

function XhrStreamingTransport(transUrl) {
  if (!XHRLocalObject.enabled && !XHRCorsObject.enabled) {
    throw new Error('Transport created when disabled');
  }

  AjaxBasedTransport.call(this, transUrl, '/xhr_streaming', XhrReceiver, XHRCorsObject);
}

inherits(XhrStreamingTransport, AjaxBasedTransport);

XhrStreamingTransport.enabled = function (info) {
  if (info.nullOrigin) {
    return false;
  } // Opera doesn't support xhr-streaming #60
  // But it might be able to #92


  if (browser.isOpera()) {
    return false;
  }

  return XHRCorsObject.enabled;
};

XhrStreamingTransport.transportName = 'xhr-streaming';
XhrStreamingTransport.roundTrips = 2; // preflight, ajax
// Safari gets confused when a streaming ajax request is started
// before onload. This causes the load indicator to spin indefinetely.
// Only require body when used in a browser

XhrStreamingTransport.needBody = !!global.document;
module.exports = XhrStreamingTransport;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser-crypto.js":
/*!****************************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser-crypto.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

if (global.crypto && global.crypto.getRandomValues) {
  module.exports.randomBytes = function (length) {
    var bytes = new Uint8Array(length);
    global.crypto.getRandomValues(bytes);
    return bytes;
  };
} else {
  module.exports.randomBytes = function (length) {
    var bytes = new Array(length);

    for (var i = 0; i < length; i++) {
      bytes[i] = Math.floor(Math.random() * 256);
    }

    return bytes;
  };
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/browser.js":
/*!*********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/browser.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

module.exports = {
  isOpera: function () {
    return global.navigator && /opera/i.test(global.navigator.userAgent);
  },
  isKonqueror: function () {
    return global.navigator && /konqueror/i.test(global.navigator.userAgent);
  } // #187 wrap document.domain in try/catch because of WP8 from file:///
  ,
  hasDomain: function () {
    // non-browser client always has a domain
    if (!global.document) {
      return true;
    }

    try {
      return !!global.document.domain;
    } catch (e) {
      return false;
    }
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/escape.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/escape.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"); // Some extra characters that Chrome gets wrong, and substitutes with
// something else on the wire.
// eslint-disable-next-line no-control-regex


var extraEscapable = /[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g,
    extraLookup; // This may be quite slow, so let's delay until user actually uses bad
// characters.

var unrollLookup = function (escapable) {
  var i;
  var unrolled = {};
  var c = [];

  for (i = 0; i < 65536; i++) {
    c.push(String.fromCharCode(i));
  }

  escapable.lastIndex = 0;
  c.join('').replace(escapable, function (a) {
    unrolled[a] = '\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);
    return '';
  });
  escapable.lastIndex = 0;
  return unrolled;
}; // Quote string, also taking care of unicode characters that browsers
// often break. Especially, take care of unicode surrogates:
// http://en.wikipedia.org/wiki/Mapping_of_Unicode_characters#Surrogates


module.exports = {
  quote: function (string) {
    var quoted = JSON3.stringify(string); // In most cases this should be very fast and good enough.

    extraEscapable.lastIndex = 0;

    if (!extraEscapable.test(quoted)) {
      return quoted;
    }

    if (!extraLookup) {
      extraLookup = unrollLookup(extraEscapable);
    }

    return quoted.replace(extraEscapable, function (a) {
      return extraLookup[a];
    });
  }
};

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/event.js":
/*!*******************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/event.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var random = __webpack_require__(/*! ./random */ "./node_modules/sockjs-client/lib/utils/random.js");

var onUnload = {},
    afterUnload = false // detect google chrome packaged apps because they don't allow the 'unload' event
,
    isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime;
module.exports = {
  attachEvent: function (event, listener) {
    if (typeof global.addEventListener !== 'undefined') {
      global.addEventListener(event, listener, false);
    } else if (global.document && global.attachEvent) {
      // IE quirks.
      // According to: http://stevesouders.com/misc/test-postmessage.php
      // the message gets delivered only to 'document', not 'window'.
      global.document.attachEvent('on' + event, listener); // I get 'window' for ie8.

      global.attachEvent('on' + event, listener);
    }
  },
  detachEvent: function (event, listener) {
    if (typeof global.addEventListener !== 'undefined') {
      global.removeEventListener(event, listener, false);
    } else if (global.document && global.detachEvent) {
      global.document.detachEvent('on' + event, listener);
      global.detachEvent('on' + event, listener);
    }
  },
  unloadAdd: function (listener) {
    if (isChromePackagedApp) {
      return null;
    }

    var ref = random.string(8);
    onUnload[ref] = listener;

    if (afterUnload) {
      setTimeout(this.triggerUnloadCallbacks, 0);
    }

    return ref;
  },
  unloadDel: function (ref) {
    if (ref in onUnload) {
      delete onUnload[ref];
    }
  },
  triggerUnloadCallbacks: function () {
    for (var ref in onUnload) {
      onUnload[ref]();
      delete onUnload[ref];
    }
  }
};

var unloadTriggered = function () {
  if (afterUnload) {
    return;
  }

  afterUnload = true;
  module.exports.triggerUnloadCallbacks();
}; // 'unload' alone is not reliable in opera within an iframe, but we
// can't use `beforeunload` as IE fires it on javascript: links.


if (!isChromePackagedApp) {
  module.exports.attachEvent('unload', unloadTriggered);
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/iframe.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/iframe.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var eventUtils = __webpack_require__(/*! ./event */ "./node_modules/sockjs-client/lib/utils/event.js"),
    JSON3 = __webpack_require__(/*! json3 */ "./node_modules/json3/lib/json3.js"),
    browser = __webpack_require__(/*! ./browser */ "./node_modules/sockjs-client/lib/utils/browser.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:iframe');
}

module.exports = {
  WPrefix: '_jp',
  currentWindowId: null,
  polluteGlobalNamespace: function () {
    if (!(module.exports.WPrefix in global)) {
      global[module.exports.WPrefix] = {};
    }
  },
  postMessage: function (type, data) {
    if (global.parent !== global) {
      global.parent.postMessage(JSON3.stringify({
        windowId: module.exports.currentWindowId,
        type: type,
        data: data || ''
      }), '*');
    } else {
      debug('Cannot postMessage, no parent window.', type, data);
    }
  },
  createIframe: function (iframeUrl, errorCallback) {
    var iframe = global.document.createElement('iframe');
    var tref, unloadRef;

    var unattach = function () {
      debug('unattach');
      clearTimeout(tref); // Explorer had problems with that.

      try {
        iframe.onload = null;
      } catch (x) {// intentionally empty
      }

      iframe.onerror = null;
    };

    var cleanup = function () {
      debug('cleanup');

      if (iframe) {
        unattach(); // This timeout makes chrome fire onbeforeunload event
        // within iframe. Without the timeout it goes straight to
        // onunload.

        setTimeout(function () {
          if (iframe) {
            iframe.parentNode.removeChild(iframe);
          }

          iframe = null;
        }, 0);
        eventUtils.unloadDel(unloadRef);
      }
    };

    var onerror = function (err) {
      debug('onerror', err);

      if (iframe) {
        cleanup();
        errorCallback(err);
      }
    };

    var post = function (msg, origin) {
      debug('post', msg, origin);
      setTimeout(function () {
        try {
          // When the iframe is not loaded, IE raises an exception
          // on 'contentWindow'.
          if (iframe && iframe.contentWindow) {
            iframe.contentWindow.postMessage(msg, origin);
          }
        } catch (x) {// intentionally empty
        }
      }, 0);
    };

    iframe.src = iframeUrl;
    iframe.style.display = 'none';
    iframe.style.position = 'absolute';

    iframe.onerror = function () {
      onerror('onerror');
    };

    iframe.onload = function () {
      debug('onload'); // `onload` is triggered before scripts on the iframe are
      // executed. Give it few seconds to actually load stuff.

      clearTimeout(tref);
      tref = setTimeout(function () {
        onerror('onload timeout');
      }, 2000);
    };

    global.document.body.appendChild(iframe);
    tref = setTimeout(function () {
      onerror('timeout');
    }, 15000);
    unloadRef = eventUtils.unloadAdd(cleanup);
    return {
      post: post,
      cleanup: cleanup,
      loaded: unattach
    };
  }
  /* eslint no-undef: "off", new-cap: "off" */
  ,
  createHtmlfile: function (iframeUrl, errorCallback) {
    var axo = ['Active'].concat('Object').join('X');
    var doc = new global[axo]('htmlfile');
    var tref, unloadRef;
    var iframe;

    var unattach = function () {
      clearTimeout(tref);
      iframe.onerror = null;
    };

    var cleanup = function () {
      if (doc) {
        unattach();
        eventUtils.unloadDel(unloadRef);
        iframe.parentNode.removeChild(iframe);
        iframe = doc = null;
        CollectGarbage();
      }
    };

    var onerror = function (r) {
      debug('onerror', r);

      if (doc) {
        cleanup();
        errorCallback(r);
      }
    };

    var post = function (msg, origin) {
      try {
        // When the iframe is not loaded, IE raises an exception
        // on 'contentWindow'.
        setTimeout(function () {
          if (iframe && iframe.contentWindow) {
            iframe.contentWindow.postMessage(msg, origin);
          }
        }, 0);
      } catch (x) {// intentionally empty
      }
    };

    doc.open();
    doc.write('<html><s' + 'cript>' + 'document.domain="' + global.document.domain + '";' + '</s' + 'cript></html>');
    doc.close();
    doc.parentWindow[module.exports.WPrefix] = global[module.exports.WPrefix];
    var c = doc.createElement('div');
    doc.body.appendChild(c);
    iframe = doc.createElement('iframe');
    c.appendChild(iframe);
    iframe.src = iframeUrl;

    iframe.onerror = function () {
      onerror('onerror');
    };

    tref = setTimeout(function () {
      onerror('timeout');
    }, 15000);
    unloadRef = eventUtils.unloadAdd(cleanup);
    return {
      post: post,
      cleanup: cleanup,
      loaded: unattach
    };
  }
};
module.exports.iframeEnabled = false;

if (global.document) {
  // postMessage misbehaves in konqueror 4.6.5 - the messages are delivered with
  // huge delay, or not at all.
  module.exports.iframeEnabled = (typeof global.postMessage === 'function' || typeof global.postMessage === 'object') && !browser.isKonqueror();
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/log.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/log.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var logObject = {};
['log', 'debug', 'warn'].forEach(function (level) {
  var levelExists;

  try {
    levelExists = global.console && global.console[level] && global.console[level].apply;
  } catch (e) {// do nothing
  }

  logObject[level] = levelExists ? function () {
    return global.console[level].apply(global.console, arguments);
  } : level === 'log' ? function () {} : logObject.log;
});
module.exports = logObject;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/object.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/object.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isObject: function (obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  },
  extend: function (obj) {
    if (!this.isObject(obj)) {
      return obj;
    }

    var source, prop;

    for (var i = 1, length = arguments.length; i < length; i++) {
      source = arguments[i];

      for (prop in source) {
        if (Object.prototype.hasOwnProperty.call(source, prop)) {
          obj[prop] = source[prop];
        }
      }
    }

    return obj;
  }
};

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/random.js":
/*!********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/random.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/* global crypto:true */

var crypto = __webpack_require__(/*! crypto */ "./node_modules/sockjs-client/lib/utils/browser-crypto.js"); // This string has length 32, a power of 2, so the modulus doesn't introduce a
// bias.


var _randomStringChars = 'abcdefghijklmnopqrstuvwxyz012345';
module.exports = {
  string: function (length) {
    var max = _randomStringChars.length;
    var bytes = crypto.randomBytes(length);
    var ret = [];

    for (var i = 0; i < length; i++) {
      ret.push(_randomStringChars.substr(bytes[i] % max, 1));
    }

    return ret.join('');
  },
  number: function (max) {
    return Math.floor(Math.random() * max);
  },
  numberString: function (max) {
    var t = ('' + (max - 1)).length;
    var p = new Array(t + 1).join('0');
    return (p + this.number(max)).slice(-t);
  }
};

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/transport.js":
/*!***********************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/transport.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:transport');
}

module.exports = function (availableTransports) {
  return {
    filterToEnabled: function (transportsWhitelist, info) {
      var transports = {
        main: [],
        facade: []
      };

      if (!transportsWhitelist) {
        transportsWhitelist = [];
      } else if (typeof transportsWhitelist === 'string') {
        transportsWhitelist = [transportsWhitelist];
      }

      availableTransports.forEach(function (trans) {
        if (!trans) {
          return;
        }

        if (trans.transportName === 'websocket' && info.websocket === false) {
          debug('disabled from server', 'websocket');
          return;
        }

        if (transportsWhitelist.length && transportsWhitelist.indexOf(trans.transportName) === -1) {
          debug('not in whitelist', trans.transportName);
          return;
        }

        if (trans.enabled(info)) {
          debug('enabled', trans.transportName);
          transports.main.push(trans);

          if (trans.facadeTransport) {
            transports.facade.push(trans.facadeTransport);
          }
        } else {
          debug('disabled', trans.transportName);
        }
      });
      return transports;
    }
  };
};

/***/ }),

/***/ "./node_modules/sockjs-client/lib/utils/url.js":
/*!*****************************************************!*\
  !*** ./node_modules/sockjs-client/lib/utils/url.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var URL = __webpack_require__(/*! url-parse */ "./node_modules/url-parse/index.js");

var debug = function () {};

if (true) {
  debug = __webpack_require__(/*! debug */ "./node_modules/sockjs-client/node_modules/debug/src/browser.js")('sockjs-client:utils:url');
}

module.exports = {
  getOrigin: function (url) {
    if (!url) {
      return null;
    }

    var p = new URL(url);

    if (p.protocol === 'file:') {
      return null;
    }

    var port = p.port;

    if (!port) {
      port = p.protocol === 'https:' ? '443' : '80';
    }

    return p.protocol + '//' + p.hostname + ':' + port;
  },
  isOriginEqual: function (a, b) {
    var res = this.getOrigin(a) === this.getOrigin(b);
    debug('same', a, b, res);
    return res;
  },
  isSchemeEqual: function (a, b) {
    return a.split(':')[0] === b.split(':')[0];
  },
  addPath: function (url, path) {
    var qs = url.split('?');
    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');
  },
  addQuery: function (url, q) {
    return url + (url.indexOf('?') === -1 ? '?' + q : '&' + q);
  }
};

/***/ }),

/***/ "./node_modules/sockjs-client/lib/version.js":
/*!***************************************************!*\
  !*** ./node_modules/sockjs-client/lib/version.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = '1.4.0';

/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/browser.js":
/*!**********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/browser.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

function _typeof(obj) {
  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}
/* eslint-env browser */

/**
 * This is the web browser implementation of `debug()`.
 */


exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
/**
 * Colors.
 */

exports.colors = ['#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC', '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF', '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC', '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF', '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC', '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033', '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366', '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933', '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC', '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF', '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'];
/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */
// eslint-disable-next-line complexity

function useColors() {
  // NB: In an Electron preload script, document will be defined but not fully
  // initialized. Since we know we're in Chrome, we'll just detect this case
  // explicitly
  if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
    return true;
  } // Internet Explorer and Edge do not support colors.


  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
    return false;
  } // Is webkit? http://stackoverflow.com/a/16459606/376773
  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632


  return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || // Is firebug? http://stackoverflow.com/a/398120/376773
  typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || // Is firefox >= v31?
  // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/) && parseInt(RegExp.$1, 10) >= 31 || // Double check webkit in userAgent just in case we are in a worker
  typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}
/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */


function formatArgs(args) {
  args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);

  if (!this.useColors) {
    return;
  }

  var c = 'color: ' + this.color;
  args.splice(1, 0, c, 'color: inherit'); // The final "%c" is somewhat tricky, because there could be other
  // arguments passed either before or after the %c, so we need to
  // figure out the correct index to insert the CSS into

  var index = 0;
  var lastC = 0;
  args[0].replace(/%[a-zA-Z%]/g, function (match) {
    if (match === '%%') {
      return;
    }

    index++;

    if (match === '%c') {
      // We only are interested in the *last* %c
      // (the user may have provided their own)
      lastC = index;
    }
  });
  args.splice(lastC, 0, c);
}
/**
 * Invokes `console.log()` when available.
 * No-op when `console.log` is not a "function".
 *
 * @api public
 */


function log() {
  var _console; // This hackery is required for IE8/9, where
  // the `console.log` function doesn't have 'apply'


  return (typeof console === "undefined" ? "undefined" : _typeof(console)) === 'object' && console.log && (_console = console).log.apply(_console, arguments);
}
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */


function save(namespaces) {
  try {
    if (namespaces) {
      exports.storage.setItem('debug', namespaces);
    } else {
      exports.storage.removeItem('debug');
    }
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */


function load() {
  var r;

  try {
    r = exports.storage.getItem('debug');
  } catch (error) {} // Swallow
  // XXX (@Qix-) should we be logging these?
  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG


  if (!r && typeof process !== 'undefined' && 'env' in process) {
    r = Object({"NODE_ENV":"development","PUBLIC_URL":""}).DEBUG;
  }

  return r;
}
/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */


function localstorage() {
  try {
    // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
    // The Browser also has localStorage in the global context.
    return localStorage;
  } catch (error) {// Swallow
    // XXX (@Qix-) should we be logging these?
  }
}

module.exports = __webpack_require__(/*! ./common */ "./node_modules/sockjs-client/node_modules/debug/src/common.js")(exports);
var formatters = module.exports.formatters;
/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */

formatters.j = function (v) {
  try {
    return JSON.stringify(v);
  } catch (error) {
    return '[UnexpectedJSONParseError]: ' + error.message;
  }
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/sockjs-client/node_modules/debug/src/common.js":
/*!*********************************************************************!*\
  !*** ./node_modules/sockjs-client/node_modules/debug/src/common.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */

function setup(env) {
  createDebug.debug = createDebug;
  createDebug.default = createDebug;
  createDebug.coerce = coerce;
  createDebug.disable = disable;
  createDebug.enable = enable;
  createDebug.enabled = enabled;
  createDebug.humanize = __webpack_require__(/*! ms */ "./node_modules/ms/index.js");
  Object.keys(env).forEach(function (key) {
    createDebug[key] = env[key];
  });
  /**
  * Active `debug` instances.
  */

  createDebug.instances = [];
  /**
  * The currently active debug mode names, and names to skip.
  */

  createDebug.names = [];
  createDebug.skips = [];
  /**
  * Map of special "%n" handling functions, for the debug "format" argument.
  *
  * Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
  */

  createDebug.formatters = {};
  /**
  * Selects a color for a debug namespace
  * @param {String} namespace The namespace string for the for the debug instance to be colored
  * @return {Number|String} An ANSI color code for the given namespace
  * @api private
  */

  function selectColor(namespace) {
    var hash = 0;

    for (var i = 0; i < namespace.length; i++) {
      hash = (hash << 5) - hash + namespace.charCodeAt(i);
      hash |= 0; // Convert to 32bit integer
    }

    return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
  }

  createDebug.selectColor = selectColor;
  /**
  * Create a debugger with the given `namespace`.
  *
  * @param {String} namespace
  * @return {Function}
  * @api public
  */

  function createDebug(namespace) {
    var prevTime;

    function debug() {
      // Disabled?
      if (!debug.enabled) {
        return;
      }

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      var self = debug; // Set `diff` timestamp

      var curr = Number(new Date());
      var ms = curr - (prevTime || curr);
      self.diff = ms;
      self.prev = prevTime;
      self.curr = curr;
      prevTime = curr;
      args[0] = createDebug.coerce(args[0]);

      if (typeof args[0] !== 'string') {
        // Anything else let's inspect with %O
        args.unshift('%O');
      } // Apply any `formatters` transformations


      var index = 0;
      args[0] = args[0].replace(/%([a-zA-Z%])/g, function (match, format) {
        // If we encounter an escaped % then don't increase the array index
        if (match === '%%') {
          return match;
        }

        index++;
        var formatter = createDebug.formatters[format];

        if (typeof formatter === 'function') {
          var val = args[index];
          match = formatter.call(self, val); // Now we need to remove `args[index]` since it's inlined in the `format`

          args.splice(index, 1);
          index--;
        }

        return match;
      }); // Apply env-specific formatting (colors, etc.)

      createDebug.formatArgs.call(self, args);
      var logFn = self.log || createDebug.log;
      logFn.apply(self, args);
    }

    debug.namespace = namespace;
    debug.enabled = createDebug.enabled(namespace);
    debug.useColors = createDebug.useColors();
    debug.color = selectColor(namespace);
    debug.destroy = destroy;
    debug.extend = extend; // Debug.formatArgs = formatArgs;
    // debug.rawLog = rawLog;
    // env-specific initialization logic for debug instances

    if (typeof createDebug.init === 'function') {
      createDebug.init(debug);
    }

    createDebug.instances.push(debug);
    return debug;
  }

  function destroy() {
    var index = createDebug.instances.indexOf(this);

    if (index !== -1) {
      createDebug.instances.splice(index, 1);
      return true;
    }

    return false;
  }

  function extend(namespace, delimiter) {
    return createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
  }
  /**
  * Enables a debug mode by namespaces. This can include modes
  * separated by a colon and wildcards.
  *
  * @param {String} namespaces
  * @api public
  */


  function enable(namespaces) {
    createDebug.save(namespaces);
    createDebug.names = [];
    createDebug.skips = [];
    var i;
    var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
    var len = split.length;

    for (i = 0; i < len; i++) {
      if (!split[i]) {
        // ignore empty strings
        continue;
      }

      namespaces = split[i].replace(/\*/g, '.*?');

      if (namespaces[0] === '-') {
        createDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));
      } else {
        createDebug.names.push(new RegExp('^' + namespaces + '$'));
      }
    }

    for (i = 0; i < createDebug.instances.length; i++) {
      var instance = createDebug.instances[i];
      instance.enabled = createDebug.enabled(instance.namespace);
    }
  }
  /**
  * Disable debug output.
  *
  * @api public
  */


  function disable() {
    createDebug.enable('');
  }
  /**
  * Returns true if the given mode name is enabled, false otherwise.
  *
  * @param {String} name
  * @return {Boolean}
  * @api public
  */


  function enabled(name) {
    if (name[name.length - 1] === '*') {
      return true;
    }

    var i;
    var len;

    for (i = 0, len = createDebug.skips.length; i < len; i++) {
      if (createDebug.skips[i].test(name)) {
        return false;
      }
    }

    for (i = 0, len = createDebug.names.length; i < len; i++) {
      if (createDebug.names[i].test(name)) {
        return true;
      }
    }

    return false;
  }
  /**
  * Coerce `val`.
  *
  * @param {Mixed} val
  * @return {Mixed}
  * @api private
  */


  function coerce(val) {
    if (val instanceof Error) {
      return val.stack || val.message;
    }

    return val;
  }

  createDebug.enable(createDebug.load());
  return createDebug;
}

module.exports = setup;

/***/ }),

/***/ "./node_modules/strip-ansi/index.js":
/*!******************************************!*\
  !*** ./node_modules/strip-ansi/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


const ansiRegex = __webpack_require__(/*! ansi-regex */ "./node_modules/strip-ansi/node_modules/ansi-regex/index.js");

const stripAnsi = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;

module.exports = stripAnsi;
module.exports.default = stripAnsi;

/***/ }),

/***/ "./node_modules/strip-ansi/node_modules/ansi-regex/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/strip-ansi/node_modules/ansi-regex/index.js ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = options => {
  options = Object.assign({
    onlyFirst: false
  }, options);
  const pattern = ['[\\u001B\\u009B][[\\]()#;?]*(?:(?:(?:[a-zA-Z\\d]*(?:;[-a-zA-Z\\d\\/#&.:=?%@~_]*)*)?\\u0007)', '(?:(?:\\d{1,4}(?:;\\d{0,4})*)?[\\dA-PR-TZcf-ntqry=><~]))'].join('|');
  return new RegExp(pattern, options.onlyFirst ? undefined : 'g');
};

/***/ }),

/***/ "./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js":
/*!****************************************************************************!*\
  !*** ./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js ***!
  \****************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var stylesInDom = {};

var isOldIE = function isOldIE() {
  var memo;
  return function memorize() {
    if (typeof memo === 'undefined') {
      // Test for IE <= 9 as proposed by Browserhacks
      // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
      // Tests for existence of standard globals is to allow style-loader
      // to operate correctly into non-standard environments
      // @see https://github.com/webpack-contrib/style-loader/issues/177
      memo = Boolean(window && document && document.all && !window.atob);
    }

    return memo;
  };
}();

var getTarget = function getTarget() {
  var memo = {};
  return function memorize(target) {
    if (typeof memo[target] === 'undefined') {
      var styleTarget = document.querySelector(target); // Special case to return head of iframe instead of iframe itself

      if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
        try {
          // This will throw an exception if access to iframe is blocked
          // due to cross-origin restrictions
          styleTarget = styleTarget.contentDocument.head;
        } catch (e) {
          // istanbul ignore next
          styleTarget = null;
        }
      }

      memo[target] = styleTarget;
    }

    return memo[target];
  };
}();

function listToStyles(list, options) {
  var styles = [];
  var newStyles = {};

  for (var i = 0; i < list.length; i++) {
    var item = list[i];
    var id = options.base ? item[0] + options.base : item[0];
    var css = item[1];
    var media = item[2];
    var sourceMap = item[3];
    var part = {
      css: css,
      media: media,
      sourceMap: sourceMap
    };

    if (!newStyles[id]) {
      styles.push(newStyles[id] = {
        id: id,
        parts: [part]
      });
    } else {
      newStyles[id].parts.push(part);
    }
  }

  return styles;
}

function addStylesToDom(styles, options) {
  for (var i = 0; i < styles.length; i++) {
    var item = styles[i];
    var domStyle = stylesInDom[item.id];
    var j = 0;

    if (domStyle) {
      domStyle.refs++;

      for (; j < domStyle.parts.length; j++) {
        domStyle.parts[j](item.parts[j]);
      }

      for (; j < item.parts.length; j++) {
        domStyle.parts.push(addStyle(item.parts[j], options));
      }
    } else {
      var parts = [];

      for (; j < item.parts.length; j++) {
        parts.push(addStyle(item.parts[j], options));
      }

      stylesInDom[item.id] = {
        id: item.id,
        refs: 1,
        parts: parts
      };
    }
  }
}

function insertStyleElement(options) {
  var style = document.createElement('style');

  if (typeof options.attributes.nonce === 'undefined') {
    var nonce =  true ? __webpack_require__.nc : undefined;

    if (nonce) {
      options.attributes.nonce = nonce;
    }
  }

  Object.keys(options.attributes).forEach(function (key) {
    style.setAttribute(key, options.attributes[key]);
  });

  if (typeof options.insert === 'function') {
    options.insert(style);
  } else {
    var target = getTarget(options.insert || 'head');

    if (!target) {
      throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");
    }

    target.appendChild(style);
  }

  return style;
}

function removeStyleElement(style) {
  // istanbul ignore if
  if (style.parentNode === null) {
    return false;
  }

  style.parentNode.removeChild(style);
}
/* istanbul ignore next  */


var replaceText = function replaceText() {
  var textStore = [];
  return function replace(index, replacement) {
    textStore[index] = replacement;
    return textStore.filter(Boolean).join('\n');
  };
}();

function applyToSingletonTag(style, index, remove, obj) {
  var css = remove ? '' : obj.css; // For old IE

  /* istanbul ignore if  */

  if (style.styleSheet) {
    style.styleSheet.cssText = replaceText(index, css);
  } else {
    var cssNode = document.createTextNode(css);
    var childNodes = style.childNodes;

    if (childNodes[index]) {
      style.removeChild(childNodes[index]);
    }

    if (childNodes.length) {
      style.insertBefore(cssNode, childNodes[index]);
    } else {
      style.appendChild(cssNode);
    }
  }
}

function applyToTag(style, options, obj) {
  var css = obj.css;
  var media = obj.media;
  var sourceMap = obj.sourceMap;

  if (media) {
    style.setAttribute('media', media);
  }

  if (sourceMap && btoa) {
    css += "\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))), " */");
  } // For old IE

  /* istanbul ignore if  */


  if (style.styleSheet) {
    style.styleSheet.cssText = css;
  } else {
    while (style.firstChild) {
      style.removeChild(style.firstChild);
    }

    style.appendChild(document.createTextNode(css));
  }
}

var singleton = null;
var singletonCounter = 0;

function addStyle(obj, options) {
  var style;
  var update;
  var remove;

  if (options.singleton) {
    var styleIndex = singletonCounter++;
    style = singleton || (singleton = insertStyleElement(options));
    update = applyToSingletonTag.bind(null, style, styleIndex, false);
    remove = applyToSingletonTag.bind(null, style, styleIndex, true);
  } else {
    style = insertStyleElement(options);
    update = applyToTag.bind(null, style, options);

    remove = function remove() {
      removeStyleElement(style);
    };
  }

  update(obj);
  return function updateStyle(newObj) {
    if (newObj) {
      if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {
        return;
      }

      update(obj = newObj);
    } else {
      remove();
    }
  };
}

module.exports = function (list, options) {
  options = options || {};
  options.attributes = typeof options.attributes === 'object' ? options.attributes : {}; // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
  // tags it will allow on a page

  if (!options.singleton && typeof options.singleton !== 'boolean') {
    options.singleton = isOldIE();
  }

  var styles = listToStyles(list, options);
  addStylesToDom(styles, options);
  return function update(newList) {
    var mayRemove = [];

    for (var i = 0; i < styles.length; i++) {
      var item = styles[i];
      var domStyle = stylesInDom[item.id];

      if (domStyle) {
        domStyle.refs--;
        mayRemove.push(domStyle);
      }
    }

    if (newList) {
      var newStyles = listToStyles(newList, options);
      addStylesToDom(newStyles, options);
    }

    for (var _i = 0; _i < mayRemove.length; _i++) {
      var _domStyle = mayRemove[_i];

      if (_domStyle.refs === 0) {
        for (var j = 0; j < _domStyle.parts.length; j++) {
          _domStyle.parts[j]();
        }

        delete stylesInDom[_domStyle.id];
      }
    }
  };
};

/***/ }),

/***/ "./node_modules/supports-color/browser.js":
/*!************************************************!*\
  !*** ./node_modules/supports-color/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  stdout: false,
  stderr: false
};

/***/ }),

/***/ "./node_modules/url-parse/index.js":
/*!*****************************************!*\
  !*** ./node_modules/url-parse/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {

var required = __webpack_require__(/*! requires-port */ "./node_modules/requires-port/index.js"),
    qs = __webpack_require__(/*! querystringify */ "./node_modules/querystringify/index.js"),
    slashes = /^[A-Za-z][A-Za-z0-9+-.]*:\/\//,
    protocolre = /^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i,
    whitespace = '[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]',
    left = new RegExp('^' + whitespace + '+');
/**
 * Trim a given string.
 *
 * @param {String} str String to trim.
 * @public
 */


function trimLeft(str) {
  return (str ? str : '').toString().replace(left, '');
}
/**
 * These are the parse rules for the URL parser, it informs the parser
 * about:
 *
 * 0. The char it Needs to parse, if it's a string it should be done using
 *    indexOf, RegExp using exec and NaN means set as current value.
 * 1. The property we should set when parsing this value.
 * 2. Indication if it's backwards or forward parsing, when set as number it's
 *    the value of extra chars that should be split off.
 * 3. Inherit from location if non existing in the parser.
 * 4. `toLowerCase` the resulting value.
 */


var rules = [['#', 'hash'], // Extract from the back.
['?', 'query'], // Extract from the back.
function sanitize(address) {
  // Sanitize what is left of the address
  return address.replace('\\', '/');
}, ['/', 'pathname'], // Extract from the back.
['@', 'auth', 1], // Extract from the front.
[NaN, 'host', undefined, 1, 1], // Set left over value.
[/:(\d+)$/, 'port', undefined, 1], // RegExp the back.
[NaN, 'hostname', undefined, 1, 1] // Set left over.
];
/**
 * These properties should not be copied or inherited from. This is only needed
 * for all non blob URL's as a blob URL does not include a hash, only the
 * origin.
 *
 * @type {Object}
 * @private
 */

var ignore = {
  hash: 1,
  query: 1
};
/**
 * The location object differs when your code is loaded through a normal page,
 * Worker or through a worker using a blob. And with the blobble begins the
 * trouble as the location object will contain the URL of the blob, not the
 * location of the page where our code is loaded in. The actual origin is
 * encoded in the `pathname` so we can thankfully generate a good "default"
 * location from it so we can generate proper relative URL's again.
 *
 * @param {Object|String} loc Optional default location object.
 * @returns {Object} lolcation object.
 * @public
 */

function lolcation(loc) {
  var globalVar;
  if (typeof window !== 'undefined') globalVar = window;else if (typeof global !== 'undefined') globalVar = global;else if (typeof self !== 'undefined') globalVar = self;else globalVar = {};
  var location = globalVar.location || {};
  loc = loc || location;
  var finaldestination = {},
      type = typeof loc,
      key;

  if ('blob:' === loc.protocol) {
    finaldestination = new Url(unescape(loc.pathname), {});
  } else if ('string' === type) {
    finaldestination = new Url(loc, {});

    for (key in ignore) delete finaldestination[key];
  } else if ('object' === type) {
    for (key in loc) {
      if (key in ignore) continue;
      finaldestination[key] = loc[key];
    }

    if (finaldestination.slashes === undefined) {
      finaldestination.slashes = slashes.test(loc.href);
    }
  }

  return finaldestination;
}
/**
 * @typedef ProtocolExtract
 * @type Object
 * @property {String} protocol Protocol matched in the URL, in lowercase.
 * @property {Boolean} slashes `true` if protocol is followed by "//", else `false`.
 * @property {String} rest Rest of the URL that is not part of the protocol.
 */

/**
 * Extract protocol information from a URL with/without double slash ("//").
 *
 * @param {String} address URL we want to extract from.
 * @return {ProtocolExtract} Extracted information.
 * @private
 */


function extractProtocol(address) {
  address = trimLeft(address);
  var match = protocolre.exec(address);
  return {
    protocol: match[1] ? match[1].toLowerCase() : '',
    slashes: !!match[2],
    rest: match[3]
  };
}
/**
 * Resolve a relative URL pathname against a base URL pathname.
 *
 * @param {String} relative Pathname of the relative URL.
 * @param {String} base Pathname of the base URL.
 * @return {String} Resolved pathname.
 * @private
 */


function resolve(relative, base) {
  if (relative === '') return base;
  var path = (base || '/').split('/').slice(0, -1).concat(relative.split('/')),
      i = path.length,
      last = path[i - 1],
      unshift = false,
      up = 0;

  while (i--) {
    if (path[i] === '.') {
      path.splice(i, 1);
    } else if (path[i] === '..') {
      path.splice(i, 1);
      up++;
    } else if (up) {
      if (i === 0) unshift = true;
      path.splice(i, 1);
      up--;
    }
  }

  if (unshift) path.unshift('');
  if (last === '.' || last === '..') path.push('');
  return path.join('/');
}
/**
 * The actual URL instance. Instead of returning an object we've opted-in to
 * create an actual constructor as it's much more memory efficient and
 * faster and it pleases my OCD.
 *
 * It is worth noting that we should not use `URL` as class name to prevent
 * clashes with the global URL instance that got introduced in browsers.
 *
 * @constructor
 * @param {String} address URL we want to parse.
 * @param {Object|String} [location] Location defaults for relative paths.
 * @param {Boolean|Function} [parser] Parser for the query string.
 * @private
 */


function Url(address, location, parser) {
  address = trimLeft(address);

  if (!(this instanceof Url)) {
    return new Url(address, location, parser);
  }

  var relative,
      extracted,
      parse,
      instruction,
      index,
      key,
      instructions = rules.slice(),
      type = typeof location,
      url = this,
      i = 0; //
  // The following if statements allows this module two have compatibility with
  // 2 different API:
  //
  // 1. Node.js's `url.parse` api which accepts a URL, boolean as arguments
  //    where the boolean indicates that the query string should also be parsed.
  //
  // 2. The `URL` interface of the browser which accepts a URL, object as
  //    arguments. The supplied object will be used as default values / fall-back
  //    for relative paths.
  //

  if ('object' !== type && 'string' !== type) {
    parser = location;
    location = null;
  }

  if (parser && 'function' !== typeof parser) parser = qs.parse;
  location = lolcation(location); //
  // Extract protocol information before running the instructions.
  //

  extracted = extractProtocol(address || '');
  relative = !extracted.protocol && !extracted.slashes;
  url.slashes = extracted.slashes || relative && location.slashes;
  url.protocol = extracted.protocol || location.protocol || '';
  address = extracted.rest; //
  // When the authority component is absent the URL starts with a path
  // component.
  //

  if (!extracted.slashes) instructions[3] = [/(.*)/, 'pathname'];

  for (; i < instructions.length; i++) {
    instruction = instructions[i];

    if (typeof instruction === 'function') {
      address = instruction(address);
      continue;
    }

    parse = instruction[0];
    key = instruction[1];

    if (parse !== parse) {
      url[key] = address;
    } else if ('string' === typeof parse) {
      if (~(index = address.indexOf(parse))) {
        if ('number' === typeof instruction[2]) {
          url[key] = address.slice(0, index);
          address = address.slice(index + instruction[2]);
        } else {
          url[key] = address.slice(index);
          address = address.slice(0, index);
        }
      }
    } else if (index = parse.exec(address)) {
      url[key] = index[1];
      address = address.slice(0, index.index);
    }

    url[key] = url[key] || (relative && instruction[3] ? location[key] || '' : ''); //
    // Hostname, host and protocol should be lowercased so they can be used to
    // create a proper `origin`.
    //

    if (instruction[4]) url[key] = url[key].toLowerCase();
  } //
  // Also parse the supplied query string in to an object. If we're supplied
  // with a custom parser as function use that instead of the default build-in
  // parser.
  //


  if (parser) url.query = parser(url.query); //
  // If the URL is relative, resolve the pathname against the base URL.
  //

  if (relative && location.slashes && url.pathname.charAt(0) !== '/' && (url.pathname !== '' || location.pathname !== '')) {
    url.pathname = resolve(url.pathname, location.pathname);
  } //
  // We should not add port numbers if they are already the default port number
  // for a given protocol. As the host also contains the port number we're going
  // override it with the hostname which contains no port number.
  //


  if (!required(url.port, url.protocol)) {
    url.host = url.hostname;
    url.port = '';
  } //
  // Parse down the `auth` for the username and password.
  //


  url.username = url.password = '';

  if (url.auth) {
    instruction = url.auth.split(':');
    url.username = instruction[0] || '';
    url.password = instruction[1] || '';
  }

  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null'; //
  // The href is just the compiled result.
  //

  url.href = url.toString();
}
/**
 * This is convenience method for changing properties in the URL instance to
 * insure that they all propagate correctly.
 *
 * @param {String} part          Property we need to adjust.
 * @param {Mixed} value          The newly assigned value.
 * @param {Boolean|Function} fn  When setting the query, it will be the function
 *                               used to parse the query.
 *                               When setting the protocol, double slash will be
 *                               removed from the final url if it is true.
 * @returns {URL} URL instance for chaining.
 * @public
 */


function set(part, value, fn) {
  var url = this;

  switch (part) {
    case 'query':
      if ('string' === typeof value && value.length) {
        value = (fn || qs.parse)(value);
      }

      url[part] = value;
      break;

    case 'port':
      url[part] = value;

      if (!required(value, url.protocol)) {
        url.host = url.hostname;
        url[part] = '';
      } else if (value) {
        url.host = url.hostname + ':' + value;
      }

      break;

    case 'hostname':
      url[part] = value;
      if (url.port) value += ':' + url.port;
      url.host = value;
      break;

    case 'host':
      url[part] = value;

      if (/:\d+$/.test(value)) {
        value = value.split(':');
        url.port = value.pop();
        url.hostname = value.join(':');
      } else {
        url.hostname = value;
        url.port = '';
      }

      break;

    case 'protocol':
      url.protocol = value.toLowerCase();
      url.slashes = !fn;
      break;

    case 'pathname':
    case 'hash':
      if (value) {
        var char = part === 'pathname' ? '/' : '#';
        url[part] = value.charAt(0) !== char ? char + value : value;
      } else {
        url[part] = value;
      }

      break;

    default:
      url[part] = value;
  }

  for (var i = 0; i < rules.length; i++) {
    var ins = rules[i];
    if (ins[4]) url[ins[1]] = url[ins[1]].toLowerCase();
  }

  url.origin = url.protocol && url.host && url.protocol !== 'file:' ? url.protocol + '//' + url.host : 'null';
  url.href = url.toString();
  return url;
}
/**
 * Transform the properties back in to a valid and full URL string.
 *
 * @param {Function} stringify Optional query stringify function.
 * @returns {String} Compiled version of the URL.
 * @public
 */


function toString(stringify) {
  if (!stringify || 'function' !== typeof stringify) stringify = qs.stringify;
  var query,
      url = this,
      protocol = url.protocol;
  if (protocol && protocol.charAt(protocol.length - 1) !== ':') protocol += ':';
  var result = protocol + (url.slashes ? '//' : '');

  if (url.username) {
    result += url.username;
    if (url.password) result += ':' + url.password;
    result += '@';
  }

  result += url.host + url.pathname;
  query = 'object' === typeof url.query ? stringify(url.query) : url.query;
  if (query) result += '?' !== query.charAt(0) ? '?' + query : query;
  if (url.hash) result += url.hash;
  return result;
}

Url.prototype = {
  set: set,
  toString: toString
}; //
// Expose the URL parser and some additional properties that might be useful for
// others or testing.
//

Url.extractProtocol = extractProtocol;
Url.location = lolcation;
Url.trimLeft = trimLeft;
Url.qs = qs;
module.exports = Url;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/url/url.js":
/*!*********************************!*\
  !*** ./node_modules/url/url.js ***!
  \*********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.


var punycode = __webpack_require__(/*! punycode */ "./node_modules/node-libs-browser/node_modules/punycode/punycode.js");

var util = __webpack_require__(/*! ./util */ "./node_modules/url/util.js");

exports.parse = urlParse;
exports.resolve = urlResolve;
exports.resolveObject = urlResolveObject;
exports.format = urlFormat;
exports.Url = Url;

function Url() {
  this.protocol = null;
  this.slashes = null;
  this.auth = null;
  this.host = null;
  this.port = null;
  this.hostname = null;
  this.hash = null;
  this.search = null;
  this.query = null;
  this.pathname = null;
  this.path = null;
  this.href = null;
} // Reference: RFC 3986, RFC 1808, RFC 2396
// define these here so at least they only have to be
// compiled once on the first module load.


var protocolPattern = /^([a-z0-9.+-]+:)/i,
    portPattern = /:[0-9]*$/,
    // Special case for a simple path URL
simplePathPattern = /^(\/\/?(?!\/)[^\?\s]*)(\?[^\s]*)?$/,
    // RFC 2396: characters reserved for delimiting URLs.
// We actually just auto-escape these.
delims = ['<', '>', '"', '`', ' ', '\r', '\n', '\t'],
    // RFC 2396: characters not allowed for various reasons.
unwise = ['{', '}', '|', '\\', '^', '`'].concat(delims),
    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.
autoEscape = ['\''].concat(unwise),
    // Characters that are never ever allowed in a hostname.
// Note that any invalid chars are also handled, but these
// are the ones that are *expected* to be seen, so we fast-path
// them.
nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),
    hostEndingChars = ['/', '?', '#'],
    hostnameMaxLen = 255,
    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,
    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,
    // protocols that can allow "unsafe" and "unwise" chars.
unsafeProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that never have a hostname.
hostlessProtocol = {
  'javascript': true,
  'javascript:': true
},
    // protocols that always contain a // bit.
slashedProtocol = {
  'http': true,
  'https': true,
  'ftp': true,
  'gopher': true,
  'file': true,
  'http:': true,
  'https:': true,
  'ftp:': true,
  'gopher:': true,
  'file:': true
},
    querystring = __webpack_require__(/*! querystring */ "./node_modules/querystring-es3/index.js");

function urlParse(url, parseQueryString, slashesDenoteHost) {
  if (url && util.isObject(url) && url instanceof Url) return url;
  var u = new Url();
  u.parse(url, parseQueryString, slashesDenoteHost);
  return u;
}

Url.prototype.parse = function (url, parseQueryString, slashesDenoteHost) {
  if (!util.isString(url)) {
    throw new TypeError("Parameter 'url' must be a string, not " + typeof url);
  } // Copy chrome, IE, opera backslash-handling behavior.
  // Back slashes before the query string get converted to forward slashes
  // See: https://code.google.com/p/chromium/issues/detail?id=25916


  var queryIndex = url.indexOf('?'),
      splitter = queryIndex !== -1 && queryIndex < url.indexOf('#') ? '?' : '#',
      uSplit = url.split(splitter),
      slashRegex = /\\/g;
  uSplit[0] = uSplit[0].replace(slashRegex, '/');
  url = uSplit.join(splitter);
  var rest = url; // trim before proceeding.
  // This is to support parse stuff like "  http://foo.com  \n"

  rest = rest.trim();

  if (!slashesDenoteHost && url.split('#').length === 1) {
    // Try fast path regexp
    var simplePath = simplePathPattern.exec(rest);

    if (simplePath) {
      this.path = rest;
      this.href = rest;
      this.pathname = simplePath[1];

      if (simplePath[2]) {
        this.search = simplePath[2];

        if (parseQueryString) {
          this.query = querystring.parse(this.search.substr(1));
        } else {
          this.query = this.search.substr(1);
        }
      } else if (parseQueryString) {
        this.search = '';
        this.query = {};
      }

      return this;
    }
  }

  var proto = protocolPattern.exec(rest);

  if (proto) {
    proto = proto[0];
    var lowerProto = proto.toLowerCase();
    this.protocol = lowerProto;
    rest = rest.substr(proto.length);
  } // figure out if it's got a host
  // user@server is *always* interpreted as a hostname, and url
  // resolution will treat //foo/bar as host=foo,path=bar because that's
  // how the browser resolves relative URLs.


  if (slashesDenoteHost || proto || rest.match(/^\/\/[^@\/]+@[^@\/]+/)) {
    var slashes = rest.substr(0, 2) === '//';

    if (slashes && !(proto && hostlessProtocol[proto])) {
      rest = rest.substr(2);
      this.slashes = true;
    }
  }

  if (!hostlessProtocol[proto] && (slashes || proto && !slashedProtocol[proto])) {
    // there's a hostname.
    // the first instance of /, ?, ;, or # ends the host.
    //
    // If there is an @ in the hostname, then non-host chars *are* allowed
    // to the left of the last @ sign, unless some host-ending character
    // comes *before* the @-sign.
    // URLs are obnoxious.
    //
    // ex:
    // http://a@b@c/ => user:a@b host:c
    // http://a@b?@c => user:a host:c path:/?@c
    // v0.12 TODO(isaacs): This is not quite how Chrome does things.
    // Review our test case against browsers more comprehensively.
    // find the first instance of any hostEndingChars
    var hostEnd = -1;

    for (var i = 0; i < hostEndingChars.length; i++) {
      var hec = rest.indexOf(hostEndingChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // at this point, either we have an explicit point where the
    // auth portion cannot go past, or the last @ char is the decider.


    var auth, atSign;

    if (hostEnd === -1) {
      // atSign can be anywhere.
      atSign = rest.lastIndexOf('@');
    } else {
      // atSign must be in auth portion.
      // http://a@b/c@d => host:b auth:a path:/c@d
      atSign = rest.lastIndexOf('@', hostEnd);
    } // Now we have a portion which is definitely the auth.
    // Pull that off.


    if (atSign !== -1) {
      auth = rest.slice(0, atSign);
      rest = rest.slice(atSign + 1);
      this.auth = decodeURIComponent(auth);
    } // the host is the remaining to the left of the first non-host char


    hostEnd = -1;

    for (var i = 0; i < nonHostChars.length; i++) {
      var hec = rest.indexOf(nonHostChars[i]);
      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) hostEnd = hec;
    } // if we still have not hit it, then the entire thing is a host.


    if (hostEnd === -1) hostEnd = rest.length;
    this.host = rest.slice(0, hostEnd);
    rest = rest.slice(hostEnd); // pull out port.

    this.parseHost(); // we've indicated that there is a hostname,
    // so even if it's empty, it has to be present.

    this.hostname = this.hostname || ''; // if hostname begins with [ and ends with ]
    // assume that it's an IPv6 address.

    var ipv6Hostname = this.hostname[0] === '[' && this.hostname[this.hostname.length - 1] === ']'; // validate a little.

    if (!ipv6Hostname) {
      var hostparts = this.hostname.split(/\./);

      for (var i = 0, l = hostparts.length; i < l; i++) {
        var part = hostparts[i];
        if (!part) continue;

        if (!part.match(hostnamePartPattern)) {
          var newpart = '';

          for (var j = 0, k = part.length; j < k; j++) {
            if (part.charCodeAt(j) > 127) {
              // we replace non-ASCII char with a temporary placeholder
              // we need this to make sure size of hostname is not
              // broken by replacing non-ASCII by nothing
              newpart += 'x';
            } else {
              newpart += part[j];
            }
          } // we test again with ASCII char only


          if (!newpart.match(hostnamePartPattern)) {
            var validParts = hostparts.slice(0, i);
            var notHost = hostparts.slice(i + 1);
            var bit = part.match(hostnamePartStart);

            if (bit) {
              validParts.push(bit[1]);
              notHost.unshift(bit[2]);
            }

            if (notHost.length) {
              rest = '/' + notHost.join('.') + rest;
            }

            this.hostname = validParts.join('.');
            break;
          }
        }
      }
    }

    if (this.hostname.length > hostnameMaxLen) {
      this.hostname = '';
    } else {
      // hostnames are always lower case.
      this.hostname = this.hostname.toLowerCase();
    }

    if (!ipv6Hostname) {
      // IDNA Support: Returns a punycoded representation of "domain".
      // It only converts parts of the domain name that
      // have non-ASCII characters, i.e. it doesn't matter if
      // you call it with a domain that already is ASCII-only.
      this.hostname = punycode.toASCII(this.hostname);
    }

    var p = this.port ? ':' + this.port : '';
    var h = this.hostname || '';
    this.host = h + p;
    this.href += this.host; // strip [ and ] from the hostname
    // the host field still retains them, though

    if (ipv6Hostname) {
      this.hostname = this.hostname.substr(1, this.hostname.length - 2);

      if (rest[0] !== '/') {
        rest = '/' + rest;
      }
    }
  } // now rest is set to the post-host stuff.
  // chop off any delim chars.


  if (!unsafeProtocol[lowerProto]) {
    // First, make 100% sure that any "autoEscape" chars get
    // escaped, even if encodeURIComponent doesn't think they
    // need to be.
    for (var i = 0, l = autoEscape.length; i < l; i++) {
      var ae = autoEscape[i];
      if (rest.indexOf(ae) === -1) continue;
      var esc = encodeURIComponent(ae);

      if (esc === ae) {
        esc = escape(ae);
      }

      rest = rest.split(ae).join(esc);
    }
  } // chop off from the tail first.


  var hash = rest.indexOf('#');

  if (hash !== -1) {
    // got a fragment string.
    this.hash = rest.substr(hash);
    rest = rest.slice(0, hash);
  }

  var qm = rest.indexOf('?');

  if (qm !== -1) {
    this.search = rest.substr(qm);
    this.query = rest.substr(qm + 1);

    if (parseQueryString) {
      this.query = querystring.parse(this.query);
    }

    rest = rest.slice(0, qm);
  } else if (parseQueryString) {
    // no query string, but parseQueryString still requested
    this.search = '';
    this.query = {};
  }

  if (rest) this.pathname = rest;

  if (slashedProtocol[lowerProto] && this.hostname && !this.pathname) {
    this.pathname = '/';
  } //to support http.request


  if (this.pathname || this.search) {
    var p = this.pathname || '';
    var s = this.search || '';
    this.path = p + s;
  } // finally, reconstruct the href based on what has been validated.


  this.href = this.format();
  return this;
}; // format a parsed object into a url string


function urlFormat(obj) {
  // ensure it's an object, and not a string url.
  // If it's an obj, this is a no-op.
  // this way, you can call url_format() on strings
  // to clean up potentially wonky urls.
  if (util.isString(obj)) obj = urlParse(obj);
  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);
  return obj.format();
}

Url.prototype.format = function () {
  var auth = this.auth || '';

  if (auth) {
    auth = encodeURIComponent(auth);
    auth = auth.replace(/%3A/i, ':');
    auth += '@';
  }

  var protocol = this.protocol || '',
      pathname = this.pathname || '',
      hash = this.hash || '',
      host = false,
      query = '';

  if (this.host) {
    host = auth + this.host;
  } else if (this.hostname) {
    host = auth + (this.hostname.indexOf(':') === -1 ? this.hostname : '[' + this.hostname + ']');

    if (this.port) {
      host += ':' + this.port;
    }
  }

  if (this.query && util.isObject(this.query) && Object.keys(this.query).length) {
    query = querystring.stringify(this.query);
  }

  var search = this.search || query && '?' + query || '';
  if (protocol && protocol.substr(-1) !== ':') protocol += ':'; // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.
  // unless they had them to begin with.

  if (this.slashes || (!protocol || slashedProtocol[protocol]) && host !== false) {
    host = '//' + (host || '');
    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;
  } else if (!host) {
    host = '';
  }

  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;
  if (search && search.charAt(0) !== '?') search = '?' + search;
  pathname = pathname.replace(/[?#]/g, function (match) {
    return encodeURIComponent(match);
  });
  search = search.replace('#', '%23');
  return protocol + host + pathname + search + hash;
};

function urlResolve(source, relative) {
  return urlParse(source, false, true).resolve(relative);
}

Url.prototype.resolve = function (relative) {
  return this.resolveObject(urlParse(relative, false, true)).format();
};

function urlResolveObject(source, relative) {
  if (!source) return relative;
  return urlParse(source, false, true).resolveObject(relative);
}

Url.prototype.resolveObject = function (relative) {
  if (util.isString(relative)) {
    var rel = new Url();
    rel.parse(relative, false, true);
    relative = rel;
  }

  var result = new Url();
  var tkeys = Object.keys(this);

  for (var tk = 0; tk < tkeys.length; tk++) {
    var tkey = tkeys[tk];
    result[tkey] = this[tkey];
  } // hash is always overridden, no matter what.
  // even href="" will remove it.


  result.hash = relative.hash; // if the relative url is empty, then there's nothing left to do here.

  if (relative.href === '') {
    result.href = result.format();
    return result;
  } // hrefs like //foo/bar always cut to the protocol.


  if (relative.slashes && !relative.protocol) {
    // take everything except the protocol from relative
    var rkeys = Object.keys(relative);

    for (var rk = 0; rk < rkeys.length; rk++) {
      var rkey = rkeys[rk];
      if (rkey !== 'protocol') result[rkey] = relative[rkey];
    } //urlParse appends trailing / to urls like http://www.example.com


    if (slashedProtocol[result.protocol] && result.hostname && !result.pathname) {
      result.path = result.pathname = '/';
    }

    result.href = result.format();
    return result;
  }

  if (relative.protocol && relative.protocol !== result.protocol) {
    // if it's a known url protocol, then changing
    // the protocol does weird things
    // first, if it's not file:, then we MUST have a host,
    // and if there was a path
    // to begin with, then we MUST have a path.
    // if it is file:, then the host is dropped,
    // because that's known to be hostless.
    // anything else is assumed to be absolute.
    if (!slashedProtocol[relative.protocol]) {
      var keys = Object.keys(relative);

      for (var v = 0; v < keys.length; v++) {
        var k = keys[v];
        result[k] = relative[k];
      }

      result.href = result.format();
      return result;
    }

    result.protocol = relative.protocol;

    if (!relative.host && !hostlessProtocol[relative.protocol]) {
      var relPath = (relative.pathname || '').split('/');

      while (relPath.length && !(relative.host = relPath.shift()));

      if (!relative.host) relative.host = '';
      if (!relative.hostname) relative.hostname = '';
      if (relPath[0] !== '') relPath.unshift('');
      if (relPath.length < 2) relPath.unshift('');
      result.pathname = relPath.join('/');
    } else {
      result.pathname = relative.pathname;
    }

    result.search = relative.search;
    result.query = relative.query;
    result.host = relative.host || '';
    result.auth = relative.auth;
    result.hostname = relative.hostname || relative.host;
    result.port = relative.port; // to support http.request

    if (result.pathname || result.search) {
      var p = result.pathname || '';
      var s = result.search || '';
      result.path = p + s;
    }

    result.slashes = result.slashes || relative.slashes;
    result.href = result.format();
    return result;
  }

  var isSourceAbs = result.pathname && result.pathname.charAt(0) === '/',
      isRelAbs = relative.host || relative.pathname && relative.pathname.charAt(0) === '/',
      mustEndAbs = isRelAbs || isSourceAbs || result.host && relative.pathname,
      removeAllDots = mustEndAbs,
      srcPath = result.pathname && result.pathname.split('/') || [],
      relPath = relative.pathname && relative.pathname.split('/') || [],
      psychotic = result.protocol && !slashedProtocol[result.protocol]; // if the url is a non-slashed url, then relative
  // links like ../.. should be able
  // to crawl up to the hostname, as well.  This is strange.
  // result.protocol has already been set by now.
  // Later on, put the first path part into the host field.

  if (psychotic) {
    result.hostname = '';
    result.port = null;

    if (result.host) {
      if (srcPath[0] === '') srcPath[0] = result.host;else srcPath.unshift(result.host);
    }

    result.host = '';

    if (relative.protocol) {
      relative.hostname = null;
      relative.port = null;

      if (relative.host) {
        if (relPath[0] === '') relPath[0] = relative.host;else relPath.unshift(relative.host);
      }

      relative.host = null;
    }

    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');
  }

  if (isRelAbs) {
    // it's absolute.
    result.host = relative.host || relative.host === '' ? relative.host : result.host;
    result.hostname = relative.hostname || relative.hostname === '' ? relative.hostname : result.hostname;
    result.search = relative.search;
    result.query = relative.query;
    srcPath = relPath; // fall through to the dot-handling below.
  } else if (relPath.length) {
    // it's relative
    // throw away the existing file, and take the new path instead.
    if (!srcPath) srcPath = [];
    srcPath.pop();
    srcPath = srcPath.concat(relPath);
    result.search = relative.search;
    result.query = relative.query;
  } else if (!util.isNullOrUndefined(relative.search)) {
    // just pull out the search.
    // like href='?foo'.
    // Put this after the other two cases because it simplifies the booleans
    if (psychotic) {
      result.hostname = result.host = srcPath.shift(); //occationaly the auth can get stuck only in host
      //this especially happens in cases like
      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

      var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

      if (authInHost) {
        result.auth = authInHost.shift();
        result.host = result.hostname = authInHost.shift();
      }
    }

    result.search = relative.search;
    result.query = relative.query; //to support http.request

    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
      result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
    }

    result.href = result.format();
    return result;
  }

  if (!srcPath.length) {
    // no path at all.  easy.
    // we've already handled the other stuff above.
    result.pathname = null; //to support http.request

    if (result.search) {
      result.path = '/' + result.search;
    } else {
      result.path = null;
    }

    result.href = result.format();
    return result;
  } // if a url ENDs in . or .., then it must get a trailing slash.
  // however, if it ends in anything else non-slashy,
  // then it must NOT get a trailing slash.


  var last = srcPath.slice(-1)[0];
  var hasTrailingSlash = (result.host || relative.host || srcPath.length > 1) && (last === '.' || last === '..') || last === ''; // strip single dots, resolve double dots to parent dir
  // if the path tries to go above the root, `up` ends up > 0

  var up = 0;

  for (var i = srcPath.length; i >= 0; i--) {
    last = srcPath[i];

    if (last === '.') {
      srcPath.splice(i, 1);
    } else if (last === '..') {
      srcPath.splice(i, 1);
      up++;
    } else if (up) {
      srcPath.splice(i, 1);
      up--;
    }
  } // if the path is allowed to go above the root, restore leading ..s


  if (!mustEndAbs && !removeAllDots) {
    for (; up--; up) {
      srcPath.unshift('..');
    }
  }

  if (mustEndAbs && srcPath[0] !== '' && (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {
    srcPath.unshift('');
  }

  if (hasTrailingSlash && srcPath.join('/').substr(-1) !== '/') {
    srcPath.push('');
  }

  var isAbsolute = srcPath[0] === '' || srcPath[0] && srcPath[0].charAt(0) === '/'; // put the host back

  if (psychotic) {
    result.hostname = result.host = isAbsolute ? '' : srcPath.length ? srcPath.shift() : ''; //occationaly the auth can get stuck only in host
    //this especially happens in cases like
    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')

    var authInHost = result.host && result.host.indexOf('@') > 0 ? result.host.split('@') : false;

    if (authInHost) {
      result.auth = authInHost.shift();
      result.host = result.hostname = authInHost.shift();
    }
  }

  mustEndAbs = mustEndAbs || result.host && srcPath.length;

  if (mustEndAbs && !isAbsolute) {
    srcPath.unshift('');
  }

  if (!srcPath.length) {
    result.pathname = null;
    result.path = null;
  } else {
    result.pathname = srcPath.join('/');
  } //to support request.http


  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {
    result.path = (result.pathname ? result.pathname : '') + (result.search ? result.search : '');
  }

  result.auth = relative.auth || result.auth;
  result.slashes = result.slashes || relative.slashes;
  result.href = result.format();
  return result;
};

Url.prototype.parseHost = function () {
  var host = this.host;
  var port = portPattern.exec(host);

  if (port) {
    port = port[0];

    if (port !== ':') {
      this.port = port.substr(1);
    }

    host = host.substr(0, host.length - port.length);
  }

  if (host) this.hostname = host;
};

/***/ }),

/***/ "./node_modules/url/util.js":
/*!**********************************!*\
  !*** ./node_modules/url/util.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  isString: function (arg) {
    return typeof arg === 'string';
  },
  isObject: function (arg) {
    return typeof arg === 'object' && arg !== null;
  },
  isNull: function (arg) {
    return arg === null;
  },
  isNullOrUndefined: function (arg) {
    return arg == null;
  }
};

/***/ }),

/***/ "./node_modules/webpack/buildin/amd-options.js":
/*!****************************************!*\
  !*** (webpack)/buildin/amd-options.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* WEBPACK VAR INJECTION */(function(__webpack_amd_options__) {/* globals __webpack_amd_options__ */
module.exports = __webpack_amd_options__;

/* WEBPACK VAR INJECTION */}.call(this, {}))

/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g; // This works in non-strict mode

g = function () {
  return this;
}();

try {
  // This works if eval is allowed (see CSP)
  g = g || new Function("return this")();
} catch (e) {
  // This works if the window reference is available
  if (typeof window === "object") g = window;
} // g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}


module.exports = g;

/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function (module) {
  if (!module.webpackPolyfill) {
    module.deprecate = function () {};

    module.paths = []; // module.parent = undefined by default

    if (!module.children) module.children = [];
    Object.defineProperty(module, "loaded", {
      enumerable: true,
      get: function () {
        return module.l;
      }
    });
    Object.defineProperty(module, "id", {
      enumerable: true,
      get: function () {
        return module.i;
      }
    });
    module.webpackPolyfill = 1;
  }

  return module;
};

/***/ })

}]);
//# sourceMappingURL=0.chunk.js.map